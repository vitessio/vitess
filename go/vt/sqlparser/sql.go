// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const UNDERSCORE_UTF8MB3 = 57541
const INTERVAL = 57542
const JSON_EXTRACT_OP = 57543
const JSON_UNQUOTE_EXTRACT_OP = 57544
const CREATE = 57545
const ALTER = 57546
const DROP = 57547
const RENAME = 57548
const ANALYZE = 57549
const ADD = 57550
const FLUSH = 57551
const CHANGE = 57552
const MODIFY = 57553
const DEALLOCATE = 57554
const REVERT = 57555
const SCHEMA = 57556
const TABLE = 57557
const INDEX = 57558
const VIEW = 57559
const TO = 57560
const IGNORE = 57561
const IF = 57562
const PRIMARY = 57563
const COLUMN = 57564
const SPATIAL = 57565
const FULLTEXT = 57566
const KEY_BLOCK_SIZE = 57567
const CHECK = 57568
const INDEXES = 57569
const ACTION = 57570
const CASCADE = 57571
const CONSTRAINT = 57572
const FOREIGN = 57573
const NO = 57574
const REFERENCES = 57575
const RESTRICT = 57576
const SHOW = 57577
const DESCRIBE = 57578
const EXPLAIN = 57579
const DATE = 57580
const ESCAPE = 57581
const REPAIR = 57582
const OPTIMIZE = 57583
const TRUNCATE = 57584
const COALESCE = 57585
const EXCHANGE = 57586
const REBUILD = 57587
const PARTITIONING = 57588
const REMOVE = 57589
const PREPARE = 57590
const EXECUTE = 57591
const MAXVALUE = 57592
const PARTITION = 57593
const REORGANIZE = 57594
const LESS = 57595
const THAN = 57596
const PROCEDURE = 57597
const TRIGGER = 57598
const VINDEX = 57599
const VINDEXES = 57600
const DIRECTORY = 57601
const NAME = 57602
const UPGRADE = 57603
const STATUS = 57604
const VARIABLES = 57605
const WARNINGS = 57606
const CASCADED = 57607
const DEFINER = 57608
const OPTION = 57609
const SQL = 57610
const UNDEFINED = 57611
const SEQUENCE = 57612
const MERGE = 57613
const TEMPORARY = 57614
const TEMPTABLE = 57615
const INVOKER = 57616
const SECURITY = 57617
const FIRST = 57618
const AFTER = 57619
const LAST = 57620
const VITESS_MIGRATION = 57621
const CANCEL = 57622
const RETRY = 57623
const COMPLETE = 57624
const CLEANUP = 57625
const THROTTLE = 57626
const UNTHROTTLE = 57627
const EXPIRE = 57628
const RATIO = 57629
const BEGIN = 57630
const START = 57631
const TRANSACTION = 57632
const COMMIT = 57633
const ROLLBACK = 57634
const SAVEPOINT = 57635
const RELEASE = 57636
const WORK = 57637
const BIT = 57638
const TINYINT = 57639
const SMALLINT = 57640
const MEDIUMINT = 57641
const INT = 57642
const INTEGER = 57643
const BIGINT = 57644
const INTNUM = 57645
const REAL = 57646
const DOUBLE = 57647
const FLOAT_TYPE = 57648
const DECIMAL_TYPE = 57649
const NUMERIC = 57650
const TIME = 57651
const TIMESTAMP = 57652
const DATETIME = 57653
const YEAR = 57654
const CHAR = 57655
const VARCHAR = 57656
const BOOL = 57657
const CHARACTER = 57658
const VARBINARY = 57659
const NCHAR = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const BLOB = 57665
const TINYBLOB = 57666
const MEDIUMBLOB = 57667
const LONGBLOB = 57668
const JSON = 57669
const JSON_SCHEMA_VALID = 57670
const JSON_SCHEMA_VALIDATION_REPORT = 57671
const ENUM = 57672
const GEOMETRY = 57673
const POINT = 57674
const LINESTRING = 57675
const POLYGON = 57676
const GEOMETRYCOLLECTION = 57677
const MULTIPOINT = 57678
const MULTILINESTRING = 57679
const MULTIPOLYGON = 57680
const ASCII = 57681
const UNICODE = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const CODE = 57689
const COLLATION = 57690
const COLUMNS = 57691
const DATABASES = 57692
const ENGINES = 57693
const EVENT = 57694
const EXTENDED = 57695
const FIELDS = 57696
const FULL = 57697
const FUNCTION = 57698
const GTID_EXECUTED = 57699
const KEYSPACES = 57700
const OPEN = 57701
const PLUGINS = 57702
const PRIVILEGES = 57703
const PROCESSLIST = 57704
const SCHEMAS = 57705
const TABLES = 57706
const TRIGGERS = 57707
const USER = 57708
const VGTID_EXECUTED = 57709
const VITESS_KEYSPACES = 57710
const VITESS_METADATA = 57711
const VITESS_MIGRATIONS = 57712
const VITESS_REPLICATION_STATUS = 57713
const VITESS_SHARDS = 57714
const VITESS_TABLETS = 57715
const VITESS_TARGET = 57716
const VSCHEMA = 57717
const VITESS_THROTTLED_APPS = 57718
const NAMES = 57719
const GLOBAL = 57720
const SESSION = 57721
const ISOLATION = 57722
const LEVEL = 57723
const READ = 57724
const WRITE = 57725
const ONLY = 57726
const REPEATABLE = 57727
const COMMITTED = 57728
const UNCOMMITTED = 57729
const SERIALIZABLE = 57730
const CURRENT_TIMESTAMP = 57731
const DATABASE = 57732
const CURRENT_DATE = 57733
const NOW = 57734
const CURRENT_TIME = 57735
const LOCALTIME = 57736
const LOCALTIMESTAMP = 57737
const CURRENT_USER = 57738
const UTC_DATE = 57739
const UTC_TIME = 57740
const UTC_TIMESTAMP = 57741
const DAY = 57742
const DAY_HOUR = 57743
const DAY_MICROSECOND = 57744
const DAY_MINUTE = 57745
const DAY_SECOND = 57746
const HOUR = 57747
const HOUR_MICROSECOND = 57748
const HOUR_MINUTE = 57749
const HOUR_SECOND = 57750
const MICROSECOND = 57751
const MINUTE = 57752
const MINUTE_MICROSECOND = 57753
const MINUTE_SECOND = 57754
const MONTH = 57755
const QUARTER = 57756
const SECOND = 57757
const SECOND_MICROSECOND = 57758
const YEAR_MONTH = 57759
const WEEK = 57760
const REPLACE = 57761
const CONVERT = 57762
const CAST = 57763
const SUBSTR = 57764
const SUBSTRING = 57765
const GROUP_CONCAT = 57766
const SEPARATOR = 57767
const TIMESTAMPADD = 57768
const TIMESTAMPDIFF = 57769
const WEIGHT_STRING = 57770
const LTRIM = 57771
const RTRIM = 57772
const TRIM = 57773
const JSON_ARRAY = 57774
const JSON_OBJECT = 57775
const JSON_QUOTE = 57776
const JSON_DEPTH = 57777
const JSON_TYPE = 57778
const JSON_LENGTH = 57779
const JSON_VALID = 57780
const JSON_ARRAY_APPEND = 57781
const JSON_ARRAY_INSERT = 57782
const JSON_INSERT = 57783
const JSON_MERGE = 57784
const JSON_MERGE_PATCH = 57785
const JSON_MERGE_PRESERVE = 57786
const JSON_REMOVE = 57787
const JSON_REPLACE = 57788
const JSON_SET = 57789
const JSON_UNQUOTE = 57790
const COUNT = 57791
const AVG = 57792
const MAX = 57793
const MIN = 57794
const SUM = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const WITHOUT = 57803
const VALIDATION = 57804
const UNUSED = 57805
const ARRAY = 57806
const BYTE = 57807
const CUME_DIST = 57808
const DESCRIPTION = 57809
const DENSE_RANK = 57810
const EMPTY = 57811
const EXCEPT = 57812
const FIRST_VALUE = 57813
const GROUPING = 57814
const GROUPS = 57815
const JSON_TABLE = 57816
const LAG = 57817
const LAST_VALUE = 57818
const LATERAL = 57819
const LEAD = 57820
const NTH_VALUE = 57821
const NTILE = 57822
const OF = 57823
const OVER = 57824
const PERCENT_RANK = 57825
const RANK = 57826
const RECURSIVE = 57827
const ROW_NUMBER = 57828
const SYSTEM = 57829
const WINDOW = 57830
const ACTIVE = 57831
const ADMIN = 57832
const AUTOEXTEND_SIZE = 57833
const BUCKETS = 57834
const CLONE = 57835
const COLUMN_FORMAT = 57836
const COMPONENT = 57837
const DEFINITION = 57838
const ENFORCED = 57839
const ENGINE_ATTRIBUTE = 57840
const EXCLUDE = 57841
const FOLLOWING = 57842
const GEOMCOLLECTION = 57843
const GET_MASTER_PUBLIC_KEY = 57844
const HISTOGRAM = 57845
const HISTORY = 57846
const INACTIVE = 57847
const INVISIBLE = 57848
const LOCKED = 57849
const MASTER_COMPRESSION_ALGORITHMS = 57850
const MASTER_PUBLIC_KEY_PATH = 57851
const MASTER_TLS_CIPHERSUITES = 57852
const MASTER_ZSTD_COMPRESSION_LEVEL = 57853
const NESTED = 57854
const NETWORK_NAMESPACE = 57855
const NOWAIT = 57856
const NULLS = 57857
const OJ = 57858
const OLD = 57859
const OPTIONAL = 57860
const ORDINALITY = 57861
const ORGANIZATION = 57862
const OTHERS = 57863
const PARTIAL = 57864
const PATH = 57865
const PERSIST = 57866
const PERSIST_ONLY = 57867
const PRECEDING = 57868
const PRIVILEGE_CHECKS_USER = 57869
const PROCESS = 57870
const RANDOM = 57871
const REFERENCE = 57872
const REQUIRE_ROW_FORMAT = 57873
const RESOURCE = 57874
const RESPECT = 57875
const RESTART = 57876
const RETAIN = 57877
const REUSE = 57878
const ROLE = 57879
const SECONDARY = 57880
const SECONDARY_ENGINE = 57881
const SECONDARY_ENGINE_ATTRIBUTE = 57882
const SECONDARY_LOAD = 57883
const SECONDARY_UNLOAD = 57884
const SIMPLE = 57885
const SKIP = 57886
const SRID = 57887
const THREAD_PRIORITY = 57888
const TIES = 57889
const UNBOUNDED = 57890
const VCPU = 57891
const VISIBLE = 57892
const RETURNING = 57893
const FORMAT = 57894
const TREE = 57895
const VITESS = 57896
const TRADITIONAL = 57897
const LOCAL = 57898
const LOW_PRIORITY = 57899
const NO_WRITE_TO_BINLOG = 57900
const LOGS = 57901
const ERROR = 57902
const GENERAL = 57903
const HOSTS = 57904
const OPTIMIZER_COSTS = 57905
const USER_RESOURCES = 57906
const SLOW = 57907
const CHANNEL = 57908
const RELAY = 57909
const EXPORT = 57910
const AVG_ROW_LENGTH = 57911
const CONNECTION = 57912
const CHECKSUM = 57913
const DELAY_KEY_WRITE = 57914
const ENCRYPTION = 57915
const ENGINE = 57916
const INSERT_METHOD = 57917
const MAX_ROWS = 57918
const MIN_ROWS = 57919
const PACK_KEYS = 57920
const PASSWORD = 57921
const FIXED = 57922
const DYNAMIC = 57923
const COMPRESSED = 57924
const REDUNDANT = 57925
const COMPACT = 57926
const ROW_FORMAT = 57927
const STATS_AUTO_RECALC = 57928
const STATS_PERSISTENT = 57929
const STATS_SAMPLE_PAGES = 57930
const STORAGE = 57931
const MEMORY = 57932
const DISK = 57933
const PARTITIONS = 57934
const LINEAR = 57935
const RANGE = 57936
const LIST = 57937
const SUBPARTITION = 57938
const SUBPARTITIONS = 57939
const HASH = 57940

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	616, 145,
	-2, 153,
	-1, 48,
	132, 153,
	172, 153,
	333, 153,
	-2, 498,
	-1, 55,
	35, 739,
	233, 739,
	244, 739,
	279, 753,
	280, 753,
	-2, 741,
	-1, 60,
	235, 766,
	-2, 764,
	-1, 114,
	232, 1298,
	-2, 119,
	-1, 116,
	1, 146,
	616, 146,
	-2, 153,
	-1, 127,
	133, 384,
	238, 384,
	-2, 487,
	-1, 146,
	132, 153,
	172, 153,
	333, 153,
	-2, 507,
	-1, 705,
	217, 1319,
	-2, 1315,
	-1, 706,
	217, 1320,
	-2, 1316,
	-1, 781,
	59, 834,
	-2, 849,
	-1, 818,
	148, 1731,
	-2, 112,
	-1, 819,
	148, 1570,
	-2, 113,
	-1, 825,
	148, 1656,
	-2, 1292,
	-1, 973,
	148, 1497,
	-2, 1289,
	-1, 1014,
	243, 41,
	248, 41,
	-2, 395,
	-1, 1098,
	1, 554,
	616, 554,
	-2, 153,
	-1, 1340,
	59, 835,
	-2, 854,
	-1, 1341,
	59, 836,
	-2, 855,
	-1, 1394,
	132, 153,
	172, 153,
	333, 153,
	-2, 434,
	-1, 1473,
	133, 384,
	238, 384,
	-2, 487,
	-1, 1482,
	243, 42,
	248, 42,
	-2, 396,
	-1, 1798,
	217, 1324,
	-2, 1318,
	-1, 1882,
	132, 153,
	172, 153,
	333, 153,
	-2, 435,
	-1, 1889,
	25, 174,
	-2, 176,
	-1, 2144,
	87, 39,
	-2, 892,
	-1, 2201,
	77, 94,
	87, 94,
	-2, 912,
	-1, 2269,
	591, 666,
	-2, 640,
	-1, 2411,
	49, 1260,
	-2, 1254,
	-1, 2633,
	87, 39,
	-2, 893,
	-1, 2671,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 884,
	-1, 2956,
	591, 666,
	-2, 654,
	-1, 3014,
	22, 1658,
	32, 1658,
	173, 1658,
	255, 1658,
	313, 1658,
	314, 1658,
	315, 1658,
	316, 1658,
	317, 1658,
	318, 1658,
	319, 1658,
	321, 1658,
	322, 1658,
	323, 1658,
	324, 1658,
	325, 1658,
	326, 1658,
	327, 1658,
	328, 1658,
	329, 1658,
	330, 1658,
	331, 1658,
	332, 1658,
	334, 1658,
	336, 1658,
	337, 1658,
	338, 1658,
	339, 1658,
	340, 1658,
	341, 1658,
	342, 1658,
	343, 1658,
	344, 1658,
	347, 1658,
	348, 1658,
	349, 1658,
	350, 1658,
	351, 1658,
	352, 1658,
	353, 1658,
	354, 1658,
	355, 1658,
	473, 1658,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 44186

var yyAct = [...]int{
	705, 714, 2775, 2370, 3068, 2774, 3076, 2773, 2937, 3044,
	1879, 3045, 2748, 3012, 1397, 2560, 707, 2996, 1812, 2466,
	1832, 2473, 2098, 2523, 2890, 3, 2514, 2528, 1161, 2525,
	622, 2788, 2424, 2524, 2522, 2527, 2526, 2735, 699, 796,
	96, 1814, 2427, 2913, 2132, 1949, 1355, 2543, 2542, 2642,
	2481, 186, 2636, 618, 186, 774, 583, 186, 2428, 708,
	2368, 2425, 598, 2329, 186, 2369, 696, 615, 2195, 2422,
	697, 2172, 186, 1319, 2793, 644, 2545, 1852, 2412, 2159,
	2662, 2234, 1836, 2628, 1110, 2312, 1912, 186, 698, 37,
	2266, 2235, 1451, 614, 1937, 2565, 2236, 1917, 823, 2184,
	1868, 1980, 797, 36, 1856, 616, 2165, 155, 2151, 598,
	976, 1857, 598, 186, 598, 2134, 1792, 776, 1767, 1691,
	38, 1768, 1701, 2304, 1342, 141, 1936, 1844, 1996, 1649,
	1919, 2228, 1009, 1004, 1958, 1498, 1386, 820, 2203, 1480,
	95, 610, 1364, 1859, 1322, 1713, 1246, 1182, 983, 1594,
	627, 91, 1668, 1487, 980, 1598, 1015, 1012, 984, 1908,
	1934, 1578, 1010, 1011, 1383, 1369, 778, 1385, 782, 788,
	1709, 1159, 1153, 1603, 159, 1764, 119, 117, 118, 1795,
	1022, 1837, 1446, 783, 1472, 124, 799, 125, 810, 98,
	786, 76, 1253, 1094, 1139, 1805, 605, 97, 85, 1249,
	784, 2946, 2259, 89, 3069, 102, 1951, 1952, 1953, 1951,
	2736, 2511, 2533, 2288, 2287, 1994, 2257, 2533, 1183, 2728,
	785, 77, 120, 1563, 8, 804, 7, 809, 6, 2691,
	2530, 2320, 90, 126, 2321, 2970, 2778, 554, 2969, 1809,
	1810, 2778, 790, 587, 977, 1656, 104, 105, 1655, 108,
	1654, 1653, 114, 1652, 1051, 183, 1651, 1634, 549, 87,
	2130, 608, 606, 609, 1643, 3033, 2408, 2616, 2279, 777,
	2531, 3048, 3085, 817, 775, 2531, 993, 2161, 770, 771,
	772, 773, 988, 1002, 781, 3043, 1025, 791, 1984, 3059,
	824, 120, 2537, 1000, 999, 998, 798, 2537, 1349, 1982,
	2282, 1661, 1001, 2886, 2885, 1052, 1055, 1056, 587, 1026,
	1050, 1049, 812, 813, 188, 189, 190, 78, 3084, 2741,
	182, 2777, 2742, 3006, 1193, 3072, 2777, 78, 2038, 2970,
	80, 78, 1983, 78, 2965, 1061, 3057, 2749, 3022, 2997,
	1977, 1067, 3005, 2964, 121, 1183, 2328, 3017, 2598, 1840,
	1461, 2131, 3020, 1097, 2296, 2175, 2462, 164, 2295, 120,
	1215, 3026, 3027, 2463, 2464, 2212, 2806, 2319, 2211, 2483,
	2484, 2213, 1874, 1875, 2035, 992, 3021, 1873, 994, 1928,
	2176, 2895, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224,
	1223, 1225, 1226, 2036, 997, 87, 1103, 1104, 1129, 1156,
	2217, 2534, 1134, 1135, 1922, 87, 2534, 768, 1387, 87,
	1388, 87, 767, 2260, 1811, 161, 1146, 162, 1148, 1117,
	1117, 2938, 1750, 1189, 1118, 1118, 1181, 2224, 1106, 587,
	1892, 1891, 1116, 587, 1115, 2358, 587, 181, 3049, 2168,
	2169, 596, 1642, 2589, 588, 1130, 2587, 600, 2639, 1123,
	594, 1193, 995, 2562, 2566, 2305, 1145, 1147, 1326, 3050,
	1093, 2008, 2005, 2007, 2006, 2009, 2010, 1584, 2267, 1068,
	1959, 2555, 2291, 997, 2482, 989, 2014, 1840, 2015, 2556,
	2016, 2002, 991, 990, 1997, 3071, 2485, 1579, 1132, 1133,
	1644, 1645, 1646, 1553, 1150, 1138, 1099, 1136, 2307, 1024,
	2730, 2001, 2729, 997, 1092, 1155, 2017, 1137, 1074, 588,
	1742, 1731, 1732, 1733, 1734, 1744, 1735, 1736, 1737, 1749,
	1745, 1738, 1739, 1746, 1747, 1748, 1740, 1741, 1743, 1073,
	1131, 995, 1838, 1839, 1124, 2564, 2003, 1554, 2563, 1555,
	1999, 2726, 2870, 2000, 1921, 1046, 165, 1962, 1035, 186,
	1189, 186, 1033, 1143, 186, 171, 3034, 1144, 1005, 87,
	1853, 1006, 1006, 1044, 1043, 1329, 1042, 1149, 1096, 981,
	996, 1041, 2485, 1040, 1018, 1039, 1038, 1465, 1037, 1032,
	1045, 1024, 3086, 1227, 598, 1163, 598, 598, 3055, 981,
	1227, 1142, 2359, 979, 981, 1486, 1017, 1054, 1023, 1595,
	1935, 598, 598, 1017, 1017, 1020, 1021, 1053, 981, 2135,
	2137, 2036, 1014, 1018, 811, 1127, 2308, 1988, 2504, 2311,
	1591, 1188, 1185, 1186, 1187, 1192, 1194, 1191, 1175, 1190,
	588, 1169, 2290, 1013, 588, 3080, 1184, 588, 1057, 1459,
	1113, 1458, 1119, 1120, 1121, 1122, 1457, 1024, 2277, 996,
	2934, 1592, 1455, 2725, 188, 189, 190, 553, 2226, 548,
	1838, 1839, 2678, 1979, 1095, 1157, 1158, 2324, 1228, 1229,
	2658, 1585, 156, 1981, 2050, 1586, 1587, 2208, 2293, 996,
	1023, 2303, 2945, 2258, 2302, 2171, 1017, 1020, 1021, 1048,
	981, 37, 1036, 2261, 1014, 1018, 1034, 587, 2896, 2122,
	1485, 1003, 1064, 1065, 1066, 1804, 1069, 1070, 1071, 1072,
	1373, 1583, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1230,
	1231, 1232, 1233, 2640, 1298, 1108, 2166, 116, 584, 1238,
	2951, 1241, 1880, 2963, 1227, 1312, 1023, 1226, 1188, 1185,
	1186, 1187, 1192, 1194, 1191, 81, 1190, 1165, 1166, 3025,
	2281, 2535, 2536, 1184, 2461, 793, 2535, 2536, 186, 1151,
	2314, 2136, 598, 598, 2539, 2313, 1154, 1925, 2314, 2539,
	1234, 2037, 2776, 2313, 86, 570, 1112, 2776, 186, 1565,
	1564, 1566, 1567, 1568, 86, 2689, 2690, 568, 86, 2959,
	86, 1164, 1140, 3024, 2280, 1317, 1047, 598, 2721, 2652,
	1998, 186, 1063, 1126, 1330, 1024, 598, 1926, 776, 1335,
	1318, 157, 598, 77, 1128, 1924, 1105, 1178, 169, 1176,
	1588, 1177, 1102, 1333, 1114, 1389, 1179, 565, 2348, 1604,
	1255, 1714, 1710, 1251, 820, 1252, 579, 2250, 1714, 3078,
	2064, 1673, 3079, 1978, 3077, 1580, 1711, 1581, 1198, 1927,
	1582, 575, 1197, 1198, 1332, 1674, 1675, 1672, 1336, 1923,
	177, 2802, 2696, 2695, 778, 1221, 1222, 1224, 1223, 1225,
	1226, 1334, 1966, 1318, 1199, 95, 1663, 1665, 1666, 111,
	1024, 1495, 1494, 1304, 1305, 1306, 1307, 1308, 588, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	1664, 1323, 1484, 1976, 1023, 176, 178, 179, 180, 1027,
	1017, 1024, 1098, 1974, 1029, 1971, 1035, 1111, 1030, 1028,
	555, 1033, 557, 571, 98, 590, 3051, 589, 561, 2330,
	559, 563, 572, 564, 1971, 558, 1141, 569, 2975, 1031,
	560, 573, 574, 577, 580, 581, 582, 578, 576, 112,
	567, 591, 1975, 1320, 1217, 1218, 1219, 1220, 1221, 1222,
	1224, 1223, 1225, 1226, 1331, 775, 186, 777, 1354, 1351,
	1447, 1973, 1723, 1605, 2679, 2927, 1337, 1374, 1384, 1023,
	1456, 2976, 3082, 3052, 1027, 1017, 3087, 824, 2878, 1029,
	87, 1379, 1380, 1030, 1028, 1219, 1220, 1221, 1222, 1224,
	1223, 1225, 1226, 598, 1671, 1482, 1196, 2877, 1197, 1198,
	1023, 2332, 1062, 1491, 2755, 2350, 2756, 1493, 2928, 2868,
	1496, 1497, 598, 598, 1573, 598, 1571, 598, 598, 2766,
	598, 598, 598, 598, 598, 598, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1201, 1528, 1529, 1492, 598, 2042, 2043,
	2044, 186, 1534, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1224, 1223, 1225, 1226, 719, 720, 721, 1199, 186, 2765,
	2703, 3088, 2702, 1527, 2692, 2512, 1530, 2342, 2341, 2340,
	2334, 598, 2338, 186, 2333, 1349, 2331, 815, 1572, 2500,
	1570, 2336, 1718, 1199, 1593, 2232, 1719, 598, 2231, 186,
	2335, 188, 189, 190, 1931, 2686, 1199, 2954, 1574, 1548,
	1558, 2595, 1199, 1478, 1557, 186, 2087, 2337, 2339, 188,
	189, 190, 186, 2215, 1471, 1199, 1556, 1546, 592, 1560,
	1540, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	598, 188, 189, 190, 1537, 1947, 585, 2953, 1845, 1846,
	2906, 1349, 1490, 1199, 598, 598, 1536, 1531, 1500, 1199,
	1501, 586, 1503, 1505, 1535, 1489, 1509, 1511, 1513, 1515,
	1517, 1454, 186, 1507, 188, 189, 190, 1349, 1945, 2931,
	1358, 2930, 1468, 1469, 2929, 1467, 2873, 1481, 2858, 1460,
	1349, 1488, 1488, 1559, 2857, 2593, 1349, 1600, 1608, 1196,
	2801, 1197, 1198, 2799, 2762, 1612, 1199, 1614, 1615, 1616,
	1617, 1199, 2700, 2685, 1621, 188, 189, 190, 598, 1943,
	1698, 1698, 1695, 1699, 1199, 1196, 1633, 1197, 1198, 1532,
	1359, 1704, 598, 2567, 2060, 1696, 1696, 3053, 1196, 1669,
	1197, 1198, 2107, 1349, 1196, 1596, 1197, 1198, 1199, 188,
	189, 190, 598, 598, 2503, 2502, 1199, 1196, 2241, 1197,
	1198, 2229, 1199, 120, 1314, 1000, 999, 998, 1992, 1715,
	1676, 1991, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1196, 1667, 1197, 1198, 1610,
	2942, 1196, 1835, 1197, 1198, 1349, 1199, 1817, 1635, 1601,
	1606, 1607, 1199, 1569, 1561, 1551, 1547, 2059, 1543, 1677,
	1542, 1631, 1541, 1632, 1611, 186, 1360, 1796, 1152, 1362,
	598, 1618, 1619, 1620, 2469, 1639, 1640, 2559, 1168, 2055,
	1349, 2099, 1199, 2157, 3070, 3039, 1349, 1765, 1196, 2054,
	1197, 1198, 101, 1196, 186, 1197, 1198, 598, 2157, 3003,
	2903, 1670, 2902, 100, 2862, 99, 1196, 186, 1197, 1198,
	2861, 598, 2747, 1822, 94, 1823, 186, 1199, 186, 2470,
	186, 186, 598, 92, 2268, 598, 1199, 2157, 2983, 2673,
	1196, 94, 1197, 1198, 93, 1361, 598, 1798, 1196, 1765,
	1197, 1198, 1796, 1199, 1196, 2472, 1197, 1198, 1889, 2173,
	820, 2157, 2979, 820, 92, 1700, 2246, 1800, 1801, 2467,
	95, 94, 1706, 1707, 1888, 93, 2866, 1720, 1722, 2971,
	1349, 1726, 2456, 1349, 2157, 2947, 2483, 2484, 1196, 95,
	1197, 1198, 2036, 2468, 1196, 2173, 1197, 1198, 1855, 1349,
	1349, 598, 2739, 2944, 1797, 2651, 3040, 2423, 1938, 1939,
	1940, 2722, 2653, 1942, 1944, 1946, 1418, 1828, 2651, 2614,
	2612, 1349, 1798, 1195, 1196, 2474, 1197, 1198, 598, 1799,
	1349, 2181, 1802, 1803, 598, 1491, 2610, 2958, 1491, 2157,
	1491, 1898, 1899, 1900, 1901, 1893, 1970, 1894, 1895, 1896,
	1897, 1816, 1883, 790, 2881, 1349, 1884, 2157, 2869, 1196,
	1866, 1197, 1198, 1904, 1905, 1906, 1907, 2651, 1196, 1827,
	1197, 1198, 2181, 1830, 2739, 1349, 2612, 1960, 1887, 1850,
	2491, 598, 1914, 598, 2396, 1196, 1848, 1197, 1198, 598,
	598, 2482, 2157, 2737, 1920, 2180, 1870, 1462, 1463, 1464,
	1871, 1971, 1349, 2485, 101, 2656, 1349, 100, 1886, 1885,
	1872, 706, 2051, 824, 1972, 100, 824, 99, 1199, 1195,
	1349, 2092, 1349, 2493, 2492, 2489, 2490, 186, 2092, 1930,
	2489, 2488, 2181, 1349, 186, 2051, 1349, 2204, 1957, 2036,
	2289, 186, 186, 1450, 2271, 186, 2076, 186, 2264, 2265,
	2181, 1915, 1910, 1911, 186, 2157, 2156, 1406, 2075, 1929,
	1971, 186, 187, 1538, 1539, 187, 1933, 1954, 187, 1544,
	1545, 1941, 1971, 599, 1965, 187, 2051, 1968, 2153, 1969,
	1450, 1449, 1964, 187, 1025, 1349, 1915, 186, 1963, 1843,
	1967, 1985, 598, 94, 2515, 1395, 1394, 1353, 187, 1807,
	2205, 2601, 1987, 1647, 1215, 1590, 2323, 1026, 1989, 1990,
	2207, 1381, 2471, 1008, 1007, 3030, 1986, 1488, 780, 2986,
	599, 1199, 87, 599, 187, 599, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1224, 1223, 1225, 1226, 2892, 1356, 1419,
	2859, 2027, 2028, 2813, 1215, 2720, 2030, 1211, 2717, 1212,
	1196, 2051, 1197, 1198, 2698, 2031, 1995, 1215, 1199, 2049,
	2604, 1669, 2603, 1213, 1214, 1210, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1224, 1223, 1225, 1226, 1452, 2204, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1224, 1223, 1225, 1226,
	1913, 2046, 2020, 2048, 2557, 1199, 87, 1432, 1435, 1436,
	1437, 1438, 1439, 1440, 2600, 1441, 1442, 1443, 1444, 1445,
	1420, 1421, 1422, 1423, 1404, 1405, 1433, 2517, 1407, 2513,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 2704,
	2047, 1417, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1199, 2205, 2233, 2272, 1909, 2034, 1903, 1902, 1576, 1199,
	2238, 2036, 1483, 1196, 1199, 1197, 1198, 1479, 186, 1448,
	113, 1097, 2561, 1199, 2475, 2237, 186, 2893, 2479, 1928,
	1698, 598, 2141, 1670, 1215, 2045, 2478, 598, 2116, 1820,
	2705, 2706, 2707, 2128, 3065, 1696, 2663, 2664, 598, 1637,
	1196, 2145, 1197, 1198, 3063, 3046, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1224, 1223, 1225, 1226, 2139, 2063, 1523,
	2480, 2968, 186, 2238, 2911, 2476, 186, 2708, 2666, 2509,
	2477, 2669, 2508, 2115, 2507, 2423, 1199, 1196, 2177, 1197,
	1198, 2214, 2114, 2251, 1199, 2445, 2021, 2113, 2443, 2061,
	2446, 1357, 1199, 2444, 1826, 2668, 2112, 1199, 2442, 2441,
	3036, 1638, 3004, 1798, 2085, 2079, 1834, 1434, 1199, 2657,
	1524, 1525, 1526, 1199, 2709, 2710, 2711, 2401, 2158, 1199,
	2400, 2783, 1196, 2782, 1197, 1198, 2794, 2926, 2792, 598,
	2647, 1196, 2410, 1197, 1198, 186, 1196, 1199, 1197, 1198,
	2053, 37, 186, 1347, 1343, 1196, 2167, 1197, 1198, 2644,
	2197, 1323, 2129, 2154, 794, 1199, 598, 2643, 1344, 2111,
	1797, 1199, 795, 598, 2487, 2196, 1589, 1491, 1491, 766,
	2222, 2781, 598, 2119, 2120, 2110, 2263, 2225, 2227, 2150,
	2109, 2242, 2155, 1824, 1825, 1346, 2170, 1345, 1059, 2286,
	2218, 2108, 1167, 1710, 1058, 2202, 2102, 2575, 2285, 2237,
	186, 186, 186, 186, 186, 2317, 2206, 1711, 1196, 2209,
	1197, 1198, 92, 1920, 2278, 2216, 1196, 2219, 1197, 1198,
	2101, 186, 186, 93, 1196, 121, 1197, 1198, 2649, 1196,
	94, 1197, 1198, 3074, 1519, 2230, 2505, 186, 2100, 92,
	1196, 2024, 1197, 1198, 2097, 1196, 94, 1197, 1198, 2239,
	93, 1196, 2943, 1197, 1198, 2447, 598, 2190, 2191, 2888,
	2247, 1199, 2248, 1845, 1846, 2252, 2253, 2254, 2486, 1196,
	2194, 1197, 1198, 1831, 802, 803, 2013, 2284, 2012, 2011,
	1471, 1520, 1521, 1522, 1199, 1347, 1343, 1196, 2629, 1197,
	1198, 2040, 99, 1196, 2918, 1197, 1198, 2399, 2917, 1698,
	1344, 1698, 776, 100, 1698, 2398, 2273, 2274, 2800, 1698,
	187, 2798, 187, 2797, 1696, 187, 1696, 2347, 2343, 1696,
	2283, 2790, 1199, 598, 1696, 1340, 1341, 1346, 2371, 1345,
	2371, 2413, 2415, 2371, 2718, 2648, 2306, 2789, 2371, 598,
	2416, 2646, 101, 2325, 2096, 599, 101, 599, 599, 1199,
	2309, 2390, 2518, 100, 186, 99, 2326, 100, 598, 99,
	2373, 1955, 599, 599, 94, 1466, 101, 2095, 2376, 801,
	2637, 2173, 598, 2377, 2327, 2344, 2153, 100, 2360, 598,
	598, 3066, 186, 186, 186, 186, 186, 2383, 2384, 2385,
	2386, 3067, 3066, 1196, 186, 1197, 1198, 2077, 1818, 186,
	2390, 1375, 186, 1366, 186, 2093, 2426, 186, 186, 186,
	3067, 2426, 2420, 2435, 2364, 2429, 1196, 2932, 1197, 1198,
	2455, 2315, 2404, 2403, 2316, 106, 107, 2378, 2379, 2380,
	2381, 2382, 2089, 2186, 2189, 2190, 2191, 2187, 2389, 2188,
	2192, 2684, 792, 2501, 1199, 103, 88, 1, 1721, 2391,
	2688, 689, 186, 3019, 1196, 566, 1197, 1198, 1808, 2402,
	1321, 3047, 3015, 3016, 1562, 598, 1552, 782, 2750, 2417,
	2418, 1766, 2457, 598, 2395, 2458, 2889, 2521, 186, 2405,
	1961, 1196, 783, 1197, 1198, 2716, 2436, 1336, 2197, 2439,
	1918, 186, 2448, 2541, 2437, 2438, 1016, 2440, 2520, 784,
	95, 146, 2452, 2453, 1881, 1882, 2999, 1600, 2459, 186,
	110, 974, 186, 597, 109, 2434, 2392, 2393, 2394, 1019,
	1125, 1956, 2576, 2740, 2223, 2465, 1890, 2088, 2497, 187,
	1401, 1399, 2496, 599, 599, 2495, 1400, 2186, 2189, 2190,
	2191, 2187, 1398, 2188, 2192, 1403, 2549, 2663, 2664, 187,
	2548, 1402, 2078, 2615, 1641, 595, 2193, 184, 1390, 1367,
	822, 1060, 556, 978, 2494, 985, 1920, 1993, 599, 2540,
	562, 1239, 187, 1636, 2552, 2519, 1196, 599, 1197, 1198,
	2397, 2210, 821, 599, 814, 1819, 2143, 2431, 2641, 2609,
	2409, 2411, 2571, 2160, 2414, 2570, 2407, 598, 186, 2925,
	2573, 2574, 2568, 2791, 2984, 2220, 1363, 2062, 1712, 1860,
	1662, 620, 619, 617, 2146, 2174, 1202, 2578, 709, 2133,
	1376, 2585, 2185, 2582, 2583, 2183, 2584, 2182, 2022, 2586,
	2579, 2588, 1867, 2590, 2665, 2661, 3011, 1862, 1858, 2152,
	628, 621, 613, 2681, 2547, 2292, 2558, 2294, 2221, 2554,
	1180, 1339, 607, 987, 2894, 2949, 2039, 186, 2597, 1338,
	1729, 1730, 2956, 2529, 2734, 2510, 2269, 2240, 1948, 63,
	41, 1757, 2243, 2244, 2635, 2687, 602, 2630, 2631, 3032,
	1171, 808, 32, 31, 30, 29, 186, 2638, 28, 23,
	2645, 22, 21, 20, 2650, 19, 2670, 25, 18, 17,
	16, 2532, 3042, 3073, 115, 186, 50, 2660, 186, 186,
	186, 47, 45, 123, 122, 48, 44, 1100, 598, 598,
	2667, 42, 27, 26, 15, 2675, 14, 13, 12, 2676,
	2677, 11, 10, 2674, 9, 5, 2549, 187, 2723, 2724,
	2548, 4, 35, 34, 33, 2682, 2683, 1174, 24, 2,
	2256, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 598, 598, 598, 0, 0, 0, 0,
	0, 2699, 0, 2701, 599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 599, 0, 599, 0, 599, 599,
	2746, 599, 599, 599, 599, 599, 599, 0, 0, 0,
	2744, 2745, 1698, 0, 1698, 0, 0, 0, 599, 0,
	0, 0, 187, 0, 0, 0, 0, 1696, 0, 1696,
	0, 0, 0, 186, 0, 0, 0, 2761, 0, 187,
	0, 2371, 0, 2371, 0, 0, 0, 0, 2757, 0,
	0, 2786, 599, 0, 187, 0, 0, 598, 0, 598,
	0, 0, 0, 0, 0, 0, 2758, 0, 599, 0,
	187, 2769, 0, 0, 0, 1698, 0, 2815, 2770, 0,
	2779, 2807, 2426, 0, 0, 0, 187, 0, 2787, 0,
	1696, 2796, 2429, 187, 0, 0, 2429, 0, 0, 0,
	2809, 776, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 599, 2805, 2803, 0, 2795, 2811, 0, 0, 0,
	0, 598, 0, 0, 0, 599, 599, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 598, 2819, 0,
	0, 2867, 0, 187, 37, 0, 2816, 2817, 0, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 2863,
	0, 0, 0, 0, 2865, 2871, 2864, 0, 0, 0,
	0, 0, 0, 0, 0, 2879, 2909, 0, 2891, 2908,
	1698, 598, 2912, 2498, 2499, 598, 598, 2884, 2883, 599,
	0, 0, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 2922,
	0, 0, 0, 599, 599, 0, 0, 0, 2919, 2920,
	0, 2921, 0, 0, 2936, 822, 0, 822, 822, 0,
	0, 0, 0, 0, 0, 2429, 0, 0, 0, 2933,
	0, 2935, 1170, 1172, 0, 0, 0, 776, 0, 0,
	598, 0, 0, 0, 2924, 0, 0, 0, 0, 0,
	0, 0, 2939, 0, 0, 186, 0, 0, 0, 0,
	2941, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	1348, 599, 0, 598, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2948,
	0, 0, 0, 2960, 2957, 187, 2952, 0, 599, 2955,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 599, 0, 0, 598, 0, 187, 0, 187,
	0, 187, 187, 599, 0, 0, 599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 598,
	598, 0, 0, 2426, 0, 2977, 1315, 0, 0, 2985,
	0, 0, 598, 2987, 0, 0, 0, 37, 0, 2982,
	2990, 186, 598, 2998, 2995, 0, 2992, 2891, 3000, 3007,
	2991, 2989, 2994, 2993, 0, 0, 0, 0, 0, 3010,
	0, 0, 0, 3028, 3018, 0, 3023, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 0, 0, 3035,
	0, 0, 0, 1327, 1328, 2693, 2694, 0, 3041, 0,
	0, 598, 37, 0, 0, 0, 0, 0, 0, 599,
	598, 0, 0, 0, 1698, 599, 3061, 0, 3056, 0,
	0, 3054, 3060, 3058, 0, 3064, 3062, 0, 1371, 1696,
	0, 0, 0, 0, 0, 0, 0, 822, 0, 0,
	3075, 0, 0, 1391, 3081, 3083, 0, 2727, 0, 0,
	0, 2731, 2732, 2733, 0, 0, 0, 1698, 0, 3089,
	0, 0, 599, 2909, 599, 3091, 3092, 3090, 0, 0,
	599, 599, 1696, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 164, 0, 0,
	0, 0, 187, 187, 0, 0, 187, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 187, 0,
	769, 0, 0, 599, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2874, 2875, 2876, 1315, 0, 0,
	0, 0, 0, 1499, 1499, 0, 1499, 0, 1499, 1499,
	0, 1508, 1499, 1499, 1499, 1499, 1499, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 1315, 978, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 1575, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 599,
	0, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 822, 822, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 153, 0, 0, 0, 0, 0, 142, 0,
	599, 0, 0, 1705, 0, 0, 187, 0, 0, 0,
	1315, 0, 0, 187, 0, 0, 0, 0, 0, 161,
	0, 162, 0, 1727, 1728, 0, 0, 599, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 130, 131, 152,
	151, 181, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 187, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 187, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 157, 0, 0, 0, 0, 0, 599, 169, 0,
	0, 0, 1371, 0, 0, 822, 0, 0, 147, 128,
	154, 135, 127, 822, 148, 149, 822, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 978, 0, 171,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 139, 137, 132, 133, 134, 138,
	0, 0, 0, 0, 1350, 1352, 129, 1101, 0, 1107,
	0, 0, 1109, 0, 599, 140, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	599, 0, 985, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 978,
	0, 0, 0, 599, 0, 985, 0, 0, 0, 0,
	599, 599, 690, 187, 187, 187, 187, 187, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	187, 0, 0, 187, 0, 187, 156, 0, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 978, 0, 1692, 0, 0, 0, 0, 0,
	1692, 1692, 0, 185, 0, 0, 552, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 187, 552, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 599, 2262, 0, 789,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 187,
	121, 0, 143, 0, 150, 807, 0, 807, 0, 0,
	0, 0, 187, 164, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 153, 145, 0, 0, 0, 0,
	142, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 157, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 1474,
	1475, 152, 151, 181, 0, 0, 0, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 599, 187,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 1476, 154, 0, 1473, 0, 148, 149, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 187, 0, 0,
	0, 171, 0, 0, 0, 0, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 187,
	187, 187, 1833, 0, 0, 0, 0, 0, 2147, 599,
	599, 0, 0, 0, 0, 0, 0, 0, 0, 2162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 599, 599, 599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2245, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 1350,
	1806, 0, 0, 0, 2270, 0, 0, 0, 599, 0,
	599, 1577, 0, 2275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 1609, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 0, 0,
	0, 0, 599, 0, 144, 0, 0, 145, 0, 0,
	0, 552, 0, 552, 0, 187, 552, 0, 599, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	1650, 599, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 599, 0, 1932, 0, 599, 599, 0, 1315,
	0, 1315, 0, 0, 1315, 0, 0, 0, 0, 1315,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 822, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 1406, 0, 0, 2406,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 599, 0, 822, 0, 0, 0, 1315, 0, 0,
	2433, 1499, 1315, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 187, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1419, 0,
	0, 0, 0, 0, 0, 1847, 599, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 1854, 0, 0, 1650,
	552, 0, 0, 0, 0, 0, 978, 0, 0, 1315,
	599, 599, 0, 0, 1833, 0, 0, 0, 0, 0,
	789, 0, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 599, 0, 0, 1432, 1435, 1436, 1437,
	1438, 1439, 1440, 552, 1441, 1442, 1443, 1444, 1445, 1420,
	1421, 1422, 1423, 1404, 1405, 1433, 0, 1407, 0, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 0, 0,
	1417, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 0,
	0, 2052, 599, 0, 0, 2056, 0, 2057, 2058, 0,
	0, 599, 0, 0, 0, 0, 2066, 0, 0, 2067,
	2068, 0, 2070, 0, 0, 2072, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 2081, 2082, 2083, 2084, 2406, 2086,
	0, 0, 0, 0, 0, 2090, 0, 2091, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 2103,
	2104, 2105, 2106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2117, 2118, 0, 0, 0, 0, 0, 0,
	2123, 2124, 2125, 2126, 2127, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 1434, 2140, 0, 0,
	0, 0, 2004, 0, 0, 0, 0, 0, 552, 2018,
	2019, 0, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 2029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 1316, 1833,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 1316, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2751, 2752, 2753, 2754, 0, 0, 0,
	1549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1315, 0, 1315, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 1623, 552, 552, 552, 552, 552,
	552, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 2808, 0,
	2810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2351, 0, 2352, 0, 0, 2353, 0, 0, 0, 2357,
	0, 0, 1833, 0, 0, 0, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 807, 807, 0, 2882, 2372,
	0, 1316, 0, 0, 2201, 0, 0, 0, 0, 0,
	0, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	2387, 2388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2915, 0, 806, 0, 2915, 2915, 0, 0,
	807, 1599, 807, 807, 807, 807, 807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2249, 0, 1833, 0, 1549, 0, 2432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 807, 0, 0, 0, 2450, 2451, 0, 0,
	0, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 0, 0, 552,
	0, 1833, 0, 0, 0, 0, 1599, 0, 552, 0,
	552, 0, 552, 1869, 0, 0, 0, 0, 2297, 2298,
	2299, 2300, 2301, 0, 800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 1650,
	2310, 0, 0, 78, 39, 40, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 2318, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 43, 69, 70,
	0, 67, 71, 0, 1315, 0, 2978, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 822, 0, 2577, 0, 0, 0, 0, 0, 56,
	2581, 0, 0, 3008, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 3013, 2591, 2592, 2594, 2596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2602, 0, 0,
	0, 0, 2606, 2607, 2608, 0, 0, 0, 0, 2611,
	0, 0, 0, 0, 0, 2613, 0, 0, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 0, 0,
	2627, 0, 1833, 0, 0, 0, 2632, 0, 0, 0,
	0, 3013, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 2654, 2655, 0, 0, 2659, 552, 0, 0, 0,
	0, 0, 0, 552, 552, 0, 0, 552, 0, 2025,
	0, 0, 0, 2671, 2672, 0, 552, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 46, 49, 52, 51, 54,
	0, 66, 0, 0, 75, 72, 0, 0, 0, 552,
	2506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 83, 82,
	0, 0, 64, 65, 53, 0, 2544, 0, 0, 0,
	73, 74, 0, 0, 0, 0, 0, 0, 0, 2553,
	0, 0, 0, 0, 0, 716, 79, 0, 0, 0,
	0, 0, 0, 2738, 0, 0, 0, 2569, 0, 0,
	2572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 807, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2767, 0, 0, 0,
	2768, 0, 0, 779, 0, 79, 2772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 779, 0, 0, 2634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 807, 807, 0, 986,
	0, 0, 0, 0, 0, 0, 0, 1599, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 2697, 0, 0, 0, 0, 0,
	86, 0, 0, 0, 0, 2880, 0, 0, 0, 0,
	0, 0, 0, 2712, 2887, 0, 2713, 2714, 2715, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	2897, 2898, 2899, 0, 2900, 2901, 0, 0, 0, 0,
	2904, 0, 2905, 0, 2907, 2910, 0, 0, 0, 0,
	0, 2914, 0, 0, 0, 1247, 0, 552, 0, 0,
	0, 0, 0, 0, 2255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 552, 552, 552, 552, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 2962, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 0, 0, 0, 2967,
	0, 0, 0, 0, 2972, 0, 0, 0, 0, 0,
	2973, 2974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2980, 0,
	0, 0, 0, 0, 0, 0, 1365, 0, 0, 0,
	1316, 0, 1316, 0, 0, 1316, 0, 0, 0, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 0, 0, 2142, 0,
	0, 717, 718, 0, 0, 0, 0, 1697, 0, 3031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 3037, 0,
	0, 0, 3038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 1316, 552, 552, 552, 552, 552, 0,
	0, 0, 0, 0, 0, 0, 2449, 0, 0, 0,
	0, 552, 0, 0, 1549, 0, 552, 0, 0, 552,
	2460, 1599, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	1316, 1160, 1160, 0, 0, 0, 0, 0, 0, 0,
	552, 1453, 2961, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 552, 779, 1235, 1236, 1237, 0,
	1240, 0, 1242, 1243, 1244, 1245, 0, 1248, 1250, 1250,
	0, 1250, 1254, 1254, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 0, 1299, 1300, 1301,
	1302, 1303, 0, 0, 0, 0, 1254, 1254, 1254, 1254,
	1254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 1602, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 0, 552,
	0, 779, 0, 0, 0, 779, 0, 0, 0, 0,
	0, 779, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 552, 0,
	1657, 1658, 1659, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 162, 0, 552, 0, 0,
	552, 552, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 1474, 1475, 152, 151, 181, 0, 0, 0, 0,
	0, 1702, 1703, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 0, 0, 0, 1751,
	1752, 1753, 1754, 1755, 1756, 1758, 1762, 1763, 611, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 1316, 0, 0, 0, 0,
	611, 0, 147, 1476, 154, 0, 1473, 0, 148, 149,
	0, 0, 0, 0, 165, 1549, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 0, 1841, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 710, 717, 718, 719, 720, 721,
	711, 713, 0, 0, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 715, 722,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 1916, 2826, 2828, 2827, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 655, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 2550, 2551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1160, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 1549, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 2832, 2833, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 700, 2065,
	0, 704, 0, 701, 702, 2069, 0, 2071, 703, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 700, 0, 645, 704, 647,
	701, 702, 1247, 643, 646, 703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 653, 654, 2825, 2829, 2830, 2831, 2834, 2835,
	2836, 2844, 2846, 678, 2845, 2847, 2848, 2849, 2852, 2853,
	2854, 2855, 2850, 2851, 2856, 2821, 2820, 2822, 2823, 2824,
	87, 0, 0, 0, 0, 0, 710, 717, 718, 719,
	720, 721, 711, 713, 0, 0, 0, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 986, 0, 1365, 0,
	715, 722, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	718, 0, 0, 0, 0, 1697, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2550, 2551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 2345, 2346, 0, 0, 0, 2349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2354, 2355, 2356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2361, 2362, 2363, 0, 0, 1769, 2365, 0,
	2366, 2367, 0, 0, 0, 2374, 2375, 0, 0, 0,
	0, 0, 0, 1769, 1769, 1769, 1769, 1769, 611, 611,
	611, 611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2454, 0, 0, 0, 2138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2178, 2179,
	0, 0, 0, 0, 0, 0, 0, 2198, 0, 2199,
	2200, 0, 0, 0, 0, 2516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2605, 0, 0, 2276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 2743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2430, 0, 79, 0, 0, 1861, 1861, 1861,
	1861, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 779, 0, 0, 2759, 1861,
	2760, 0, 1861, 0, 0, 2763, 2764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2804, 0, 0,
	0, 0, 0, 0, 0, 2538, 0, 0, 2812, 0,
	0, 2814, 0, 0, 0, 2546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2923, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2780, 0, 2784, 2785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2430,
	0, 79, 0, 2430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1256, 1257, 1258, 1259,
	1260, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	0, 956, 941, 468, 79, 887, 959, 856, 875, 969,
	878, 881, 923, 835, 901, 384, 872, 827, 860, 830,
	867, 831, 858, 889, 253, 855, 943, 905, 958, 337,
	250, 837, 861, 398, 877, 197, 925, 442, 237, 347,
	344, 476, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 965, 341, 911, 2981, 452, 369, 0, 0, 79,
	891, 947, 899, 937, 886, 924, 845, 910, 960, 873,
	920, 961, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 3001, 0, 3002,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 869,
	917, 955, 870, 919, 248, 296, 255, 247, 473, 966,
	946, 834, 898, 954, 0, 0, 216, 957, 893, 0,
	922, 0, 972, 829, 913, 0, 832, 836, 968, 950,
	864, 258, 0, 0, 0, 0, 0, 0, 0, 890,
	900, 934, 884, 0, 0, 0, 0, 0, 0, 0,
	862, 0, 909, 0, 0, 0, 841, 833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	888, 0, 0, 0, 844, 0, 863, 935, 0, 826,
	279, 838, 370, 240, 0, 939, 949, 885, 509, 953,
	883, 882, 929, 842, 945, 876, 336, 840, 305, 192,
	212, 0, 874, 380, 423, 429, 944, 859, 868, 238,
	866, 427, 394, 492, 220, 267, 420, 400, 425, 407,
	270, 908, 927, 426, 342, 478, 414, 489, 510, 511,
	246, 374, 500, 466, 506, 524, 213, 243, 388, 459,
	495, 449, 366, 474, 475, 304, 448, 277, 195, 340,
	516, 211, 435, 229, 218, 480, 498, 272, 418, 203,
	461, 487, 226, 439, 0, 0, 526, 205, 485, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	482, 483, 239, 527, 215, 505, 207, 1162, 504, 376,
	477, 486, 363, 352, 206, 484, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 496, 0, 199, 0, 454, 497, 528, 221, 222,
	224, 854, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 940, 472, 490, 501, 508, 514,
	515, 517, 518, 519, 520, 521, 523, 522, 375, 289,
	450, 306, 343, 932, 971, 393, 428, 227, 494, 451,
	849, 853, 847, 914, 848, 903, 904, 850, 962, 963,
	964, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	936, 843, 0, 851, 852, 0, 942, 951, 952, 547,
	353, 441, 491, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 471, 907, 191, 208, 339, 967,
	416, 271, 525, 503, 499, 828, 210, 846, 245, 857,
	865, 0, 871, 879, 880, 892, 894, 895, 896, 897,
	915, 916, 918, 926, 928, 931, 933, 938, 948, 970,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	417, 422, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 479, 481, 493,
	507, 512, 436, 281, 488, 513, 0, 348, 906, 912,
	350, 264, 284, 295, 921, 502, 457, 214, 424, 273,
	202, 233, 217, 242, 257, 260, 299, 360, 368, 397,
	402, 278, 254, 231, 421, 228, 440, 463, 464, 465,
	467, 364, 249, 401, 902, 930, 346, 469, 470, 291,
	365, 0, 0, 956, 941, 468, 0, 887, 959, 856,
	875, 969, 878, 881, 923, 835, 901, 384, 872, 827,
	860, 830, 867, 831, 858, 889, 253, 855, 943, 905,
	958, 337, 250, 837, 861, 398, 877, 197, 925, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 965, 341, 911, 0, 452, 369, 0,
	0, 0, 891, 947, 899, 937, 886, 924, 845, 910,
	960, 873, 920, 961, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 869, 917, 955, 870, 919, 248, 296, 255, 247,
	473, 966, 946, 834, 898, 954, 0, 0, 216, 957,
	893, 0, 922, 0, 972, 829, 913, 0, 832, 836,
	968, 950, 864, 258, 0, 0, 0, 0, 0, 0,
	0, 890, 900, 934, 884, 0, 0, 0, 0, 0,
	2461, 0, 862, 0, 909, 0, 0, 0, 841, 833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 888, 0, 0, 0, 844, 0, 863, 935,
	0, 826, 279, 838, 370, 240, 0, 939, 949, 885,
	509, 953, 883, 882, 929, 842, 945, 876, 336, 840,
	305, 192, 212, 0, 874, 380, 423, 429, 944, 859,
	868, 238, 866, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 908, 927, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 1162,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 854, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 940, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	375, 289, 450, 306, 343, 932, 971, 393, 428, 227,
	494, 451, 849, 853, 847, 914, 848, 903, 904, 850,
	962, 963, 964, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 936, 843, 0, 851, 852, 0, 942, 951,
	952, 547, 353, 441, 491, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 471, 907, 191, 208,
	339, 967, 416, 271, 525, 503, 499, 828, 210, 846,
	245, 857, 865, 0, 871, 879, 880, 892, 894, 895,
	896, 897, 915, 916, 918, 926, 928, 931, 933, 938,
	948, 970, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	906, 912, 350, 264, 284, 295, 921, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 902, 930, 346, 469,
	470, 291, 365, 0, 0, 956, 941, 468, 0, 887,
	959, 856, 875, 969, 878, 881, 923, 835, 901, 384,
	872, 827, 860, 830, 867, 831, 858, 889, 253, 855,
	943, 905, 958, 337, 250, 837, 861, 398, 877, 197,
	925, 442, 237, 347, 344, 476, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 965, 341, 911, 0, 452,
	369, 0, 0, 0, 891, 947, 899, 937, 886, 924,
	845, 910, 960, 873, 920, 961, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 869, 917, 955, 870, 919, 248, 296,
	255, 247, 473, 966, 946, 834, 898, 954, 0, 0,
	216, 957, 893, 0, 922, 0, 972, 829, 913, 0,
	832, 836, 968, 950, 864, 258, 0, 0, 0, 0,
	0, 0, 0, 890, 900, 934, 884, 0, 0, 0,
	0, 0, 2419, 0, 862, 0, 909, 0, 0, 0,
	841, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 888, 0, 0, 0, 844, 0,
	863, 935, 0, 826, 279, 838, 370, 240, 0, 939,
	949, 885, 509, 953, 883, 882, 929, 842, 945, 876,
	336, 840, 305, 192, 212, 0, 874, 380, 423, 429,
	944, 859, 868, 238, 866, 427, 394, 492, 220, 267,
	420, 400, 425, 407, 270, 908, 927, 426, 342, 478,
	414, 489, 510, 511, 246, 374, 500, 466, 506, 524,
	213, 243, 388, 459, 495, 449, 366, 474, 475, 304,
	448, 277, 195, 340, 516, 211, 435, 229, 218, 480,
	498, 272, 418, 203, 461, 487, 226, 439, 0, 0,
	526, 205, 485, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 482, 483, 239, 527, 215, 505,
	207, 1162, 504, 376, 477, 486, 363, 352, 206, 484,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 496, 0, 199, 0, 454,
	497, 528, 221, 222, 224, 854, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 940, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 375, 289, 450, 306, 343, 932, 971, 393,
	428, 227, 494, 451, 849, 853, 847, 914, 848, 903,
	904, 850, 962, 963, 964, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 936, 843, 0, 851, 852, 0,
	942, 951, 952, 547, 353, 441, 491, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 471, 907,
	191, 208, 339, 967, 416, 271, 525, 503, 499, 828,
	210, 846, 245, 857, 865, 0, 871, 879, 880, 892,
	894, 895, 896, 897, 915, 916, 918, 926, 928, 931,
	933, 938, 948, 970, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 417, 422, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 479, 481, 493, 507, 512, 436, 281, 488, 513,
	0, 348, 906, 912, 350, 264, 284, 295, 921, 502,
	457, 214, 424, 273, 202, 233, 217, 242, 257, 260,
	299, 360, 368, 397, 402, 278, 254, 231, 421, 228,
	440, 463, 464, 465, 467, 364, 249, 401, 902, 930,
	346, 469, 470, 291, 365, 0, 0, 956, 941, 468,
	0, 887, 959, 856, 875, 969, 878, 881, 923, 835,
	901, 384, 872, 827, 860, 830, 867, 831, 858, 889,
	253, 855, 943, 905, 958, 337, 250, 837, 861, 398,
	877, 197, 925, 442, 237, 347, 344, 476, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 965, 341, 911,
	0, 452, 369, 0, 0, 0, 891, 947, 899, 937,
	886, 924, 845, 910, 960, 873, 920, 961, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 869, 917, 955, 870, 919,
	248, 296, 255, 247, 473, 966, 946, 834, 898, 954,
	0, 0, 216, 957, 893, 0, 922, 0, 972, 829,
	913, 0, 832, 836, 968, 950, 864, 258, 0, 0,
	0, 0, 0, 0, 0, 890, 900, 934, 884, 0,
	0, 0, 0, 0, 1849, 0, 862, 0, 909, 0,
	0, 0, 841, 833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 888, 0, 0, 0,
	844, 0, 863, 935, 0, 826, 279, 838, 370, 240,
	0, 939, 949, 885, 509, 953, 883, 882, 929, 842,
	945, 876, 336, 840, 305, 192, 212, 0, 874, 380,
	423, 429, 944, 859, 868, 238, 866, 427, 394, 492,
	220, 267, 420, 400, 425, 407, 270, 908, 927, 426,
	342, 478, 414, 489, 510, 511, 246, 374, 500, 466,
	506, 524, 213, 243, 388, 459, 495, 449, 366, 474,
	475, 304, 448, 277, 195, 340, 516, 211, 435, 229,
	218, 480, 498, 272, 418, 203, 461, 487, 226, 439,
	0, 0, 526, 205, 485, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 482, 483, 239, 527,
	215, 505, 207, 1162, 504, 376, 477, 486, 363, 352,
	206, 484, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 496, 0, 199,
	0, 454, 497, 528, 221, 222, 224, 854, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	940, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 375, 289, 450, 306, 343, 932,
	971, 393, 428, 227, 494, 451, 849, 853, 847, 914,
	848, 903, 904, 850, 962, 963, 964, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 936, 843, 0, 851,
	852, 0, 942, 951, 952, 547, 353, 441, 491, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	471, 907, 191, 208, 339, 967, 416, 271, 525, 503,
	499, 828, 210, 846, 245, 857, 865, 0, 871, 879,
	880, 892, 894, 895, 896, 897, 915, 916, 918, 926,
	928, 931, 933, 938, 948, 970, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 479, 481, 493, 507, 512, 436, 281,
	488, 513, 0, 348, 906, 912, 350, 264, 284, 295,
	921, 502, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	902, 930, 346, 469, 470, 291, 365, 0, 0, 956,
	941, 468, 0, 887, 959, 856, 875, 969, 878, 881,
	923, 835, 901, 384, 872, 827, 860, 830, 867, 831,
	858, 889, 253, 855, 943, 905, 958, 337, 250, 837,
	861, 398, 877, 197, 925, 442, 237, 347, 344, 476,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 965,
	341, 911, 0, 452, 369, 0, 0, 0, 891, 947,
	899, 937, 886, 924, 845, 910, 960, 873, 920, 961,
	298, 234, 300, 196, 381, 453, 269, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 869, 917, 955,
	870, 919, 248, 296, 255, 247, 473, 966, 946, 834,
	898, 954, 0, 0, 216, 957, 893, 0, 922, 0,
	972, 829, 913, 0, 832, 836, 968, 950, 864, 258,
	0, 0, 0, 0, 0, 0, 0, 890, 900, 934,
	884, 0, 0, 0, 0, 0, 0, 0, 862, 0,
	909, 0, 0, 0, 841, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 888, 0,
	0, 0, 844, 0, 863, 935, 0, 826, 279, 838,
	370, 240, 0, 939, 949, 885, 509, 953, 883, 882,
	929, 842, 945, 876, 336, 840, 305, 192, 212, 0,
	874, 380, 423, 429, 944, 859, 868, 238, 866, 427,
	394, 492, 220, 267, 420, 400, 425, 407, 270, 908,
	927, 426, 342, 478, 414, 489, 510, 511, 246, 374,
	500, 466, 506, 524, 213, 243, 388, 459, 495, 449,
	366, 474, 475, 304, 448, 277, 195, 340, 516, 211,
	435, 229, 218, 480, 498, 272, 418, 203, 461, 487,
	226, 439, 0, 0, 526, 205, 485, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 482, 483,
	239, 527, 215, 505, 207, 1162, 504, 376, 477, 486,
	363, 352, 206, 484, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 496,
	0, 199, 0, 454, 497, 528, 221, 222, 224, 854,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 940, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 375, 289, 450, 306,
	343, 932, 971, 393, 428, 227, 494, 451, 849, 853,
	847, 914, 848, 903, 904, 850, 962, 963, 964, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 936, 843,
	0, 851, 852, 0, 942, 951, 952, 547, 353, 441,
	491, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 471, 907, 191, 208, 339, 967, 416, 271,
	525, 503, 499, 828, 210, 846, 245, 857, 865, 0,
	871, 879, 880, 892, 894, 895, 896, 897, 915, 916,
	918, 926, 928, 931, 933, 938, 948, 970, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 417, 422,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 479, 481, 493, 507, 512,
	436, 281, 488, 513, 0, 348, 906, 912, 350, 264,
	284, 295, 921, 502, 457, 214, 424, 273, 202, 233,
	217, 242, 257, 260, 299, 360, 368, 397, 402, 278,
	254, 231, 421, 228, 440, 463, 464, 465, 467, 364,
	249, 401, 902, 930, 346, 469, 470, 291, 365, 0,
	0, 956, 941, 468, 0, 887, 959, 856, 875, 969,
	878, 881, 923, 835, 901, 384, 872, 827, 860, 830,
	867, 831, 858, 889, 253, 855, 943, 905, 958, 337,
	250, 837, 861, 398, 877, 197, 925, 442, 237, 347,
	344, 476, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 965, 341, 911, 0, 452, 369, 0, 0, 0,
	891, 947, 899, 937, 886, 924, 845, 910, 960, 873,
	920, 961, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 869,
	917, 955, 870, 919, 248, 296, 255, 247, 473, 966,
	946, 834, 898, 954, 0, 0, 216, 957, 893, 0,
	922, 0, 972, 829, 913, 0, 832, 836, 968, 950,
	864, 258, 0, 0, 0, 0, 0, 0, 0, 890,
	900, 934, 884, 0, 0, 0, 0, 0, 0, 0,
	862, 0, 909, 0, 0, 0, 841, 833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	888, 0, 0, 0, 844, 0, 863, 935, 0, 826,
	279, 838, 370, 240, 0, 939, 949, 885, 509, 953,
	883, 882, 929, 842, 945, 876, 336, 840, 305, 192,
	212, 0, 874, 380, 423, 429, 944, 859, 868, 238,
	866, 427, 394, 492, 220, 267, 420, 400, 425, 407,
	270, 908, 927, 426, 342, 478, 414, 489, 510, 511,
	246, 374, 500, 466, 506, 524, 213, 243, 388, 459,
	495, 449, 366, 474, 475, 304, 448, 277, 195, 340,
	516, 211, 435, 229, 218, 480, 498, 272, 418, 203,
	461, 487, 226, 439, 0, 0, 526, 205, 485, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	482, 483, 239, 527, 215, 505, 207, 1162, 504, 376,
	477, 486, 363, 352, 206, 484, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 496, 0, 199, 0, 454, 497, 528, 221, 222,
	224, 854, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 940, 472, 490, 501, 508, 514,
	515, 517, 518, 519, 520, 521, 523, 522, 375, 289,
	450, 306, 343, 932, 971, 393, 428, 227, 494, 451,
	849, 853, 847, 914, 848, 903, 904, 850, 962, 963,
	964, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	936, 843, 0, 851, 852, 0, 942, 951, 952, 547,
	353, 441, 491, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 471, 907, 191, 208, 339, 967,
	416, 271, 525, 503, 499, 828, 210, 846, 245, 857,
	865, 0, 871, 879, 880, 892, 894, 895, 896, 897,
	915, 916, 918, 926, 928, 931, 933, 938, 948, 970,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	417, 422, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 479, 481, 493,
	507, 512, 436, 281, 488, 513, 0, 348, 906, 912,
	350, 264, 284, 295, 921, 502, 457, 214, 424, 273,
	202, 233, 217, 242, 257, 260, 299, 360, 368, 397,
	402, 278, 254, 231, 421, 228, 440, 463, 464, 465,
	467, 364, 249, 401, 902, 930, 346, 469, 470, 291,
	365, 0, 0, 956, 941, 468, 0, 887, 959, 856,
	875, 969, 878, 881, 923, 835, 901, 384, 872, 827,
	860, 830, 867, 831, 858, 889, 253, 855, 943, 905,
	958, 337, 250, 837, 861, 398, 877, 197, 925, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 965, 341, 911, 0, 452, 369, 0,
	0, 0, 891, 947, 899, 937, 886, 924, 845, 910,
	960, 873, 920, 961, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 869, 917, 955, 870, 919, 248, 296, 255, 247,
	473, 966, 946, 834, 898, 954, 0, 0, 973, 957,
	893, 0, 922, 0, 972, 829, 913, 0, 832, 836,
	968, 950, 864, 258, 0, 0, 0, 0, 0, 0,
	0, 890, 900, 934, 884, 0, 0, 0, 0, 0,
	0, 0, 862, 0, 909, 0, 0, 0, 841, 833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 888, 0, 0, 0, 844, 0, 863, 935,
	0, 826, 279, 838, 370, 240, 0, 939, 949, 885,
	509, 953, 883, 882, 929, 842, 945, 876, 336, 840,
	305, 192, 212, 0, 874, 380, 423, 429, 944, 859,
	868, 238, 866, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 908, 927, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 839,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 854, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 940, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	825, 819, 818, 306, 343, 932, 971, 393, 428, 227,
	494, 451, 849, 853, 847, 914, 848, 903, 904, 850,
	962, 963, 964, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 936, 843, 0, 851, 852, 0, 942, 951,
	952, 547, 353, 441, 491, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 471, 907, 191, 208,
	339, 967, 416, 271, 525, 503, 499, 828, 210, 846,
	245, 857, 865, 0, 871, 879, 880, 892, 894, 895,
	896, 897, 915, 916, 918, 926, 928, 931, 933, 938,
	948, 970, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	906, 912, 350, 264, 284, 295, 921, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 902, 930, 346, 469,
	470, 291, 365, 0, 0, 956, 941, 468, 0, 887,
	959, 856, 875, 969, 878, 881, 923, 835, 901, 384,
	872, 827, 860, 830, 867, 831, 858, 889, 253, 855,
	943, 905, 958, 337, 250, 837, 861, 398, 877, 197,
	925, 442, 237, 347, 344, 476, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 965, 341, 911, 0, 452,
	369, 0, 0, 0, 891, 947, 899, 937, 886, 924,
	845, 910, 960, 873, 920, 961, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 869, 917, 955, 870, 919, 248, 296,
	255, 247, 473, 966, 946, 834, 898, 954, 0, 0,
	973, 957, 893, 0, 922, 0, 972, 829, 913, 0,
	832, 836, 968, 950, 864, 258, 0, 0, 0, 0,
	0, 0, 0, 890, 900, 934, 884, 0, 0, 0,
	0, 0, 0, 0, 862, 0, 909, 0, 0, 0,
	841, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 888, 0, 0, 0, 844, 0,
	863, 935, 0, 826, 279, 838, 370, 240, 0, 939,
	949, 885, 509, 953, 883, 882, 929, 842, 945, 876,
	336, 840, 305, 192, 212, 0, 874, 380, 423, 429,
	944, 859, 868, 238, 866, 427, 394, 492, 220, 267,
	420, 400, 425, 407, 270, 908, 927, 426, 342, 478,
	414, 489, 510, 511, 246, 374, 500, 466, 506, 524,
	213, 243, 388, 459, 495, 449, 366, 474, 475, 304,
	448, 277, 195, 340, 516, 211, 435, 229, 218, 480,
	498, 272, 418, 203, 461, 1382, 226, 439, 0, 0,
	526, 205, 485, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 482, 483, 239, 527, 215, 505,
	207, 839, 504, 376, 477, 486, 363, 352, 206, 484,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 496, 0, 199, 0, 454,
	497, 528, 221, 222, 224, 854, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 940, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 825, 819, 818, 306, 343, 932, 971, 393,
	428, 227, 494, 451, 849, 853, 847, 914, 848, 903,
	904, 850, 962, 963, 964, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 936, 843, 0, 851, 852, 0,
	942, 951, 952, 547, 353, 441, 491, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 471, 907,
	191, 208, 339, 967, 416, 271, 525, 503, 499, 828,
	210, 846, 245, 857, 865, 0, 871, 879, 880, 892,
	894, 895, 896, 897, 915, 916, 918, 926, 928, 931,
	933, 938, 948, 970, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 417, 422, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 479, 481, 493, 507, 512, 436, 281, 488, 513,
	0, 348, 906, 912, 350, 264, 284, 295, 921, 502,
	457, 214, 424, 273, 202, 233, 217, 242, 257, 260,
	299, 360, 368, 397, 402, 278, 254, 231, 421, 228,
	440, 463, 464, 465, 467, 364, 249, 401, 902, 930,
	346, 469, 470, 291, 365, 0, 0, 956, 941, 468,
	0, 887, 959, 856, 875, 969, 878, 881, 923, 835,
	901, 384, 872, 827, 860, 830, 867, 831, 858, 889,
	253, 855, 943, 905, 958, 337, 250, 837, 861, 398,
	877, 197, 925, 442, 237, 347, 344, 476, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 965, 341, 911,
	0, 452, 369, 0, 0, 0, 891, 947, 899, 937,
	886, 924, 845, 910, 960, 873, 920, 961, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 869, 917, 955, 870, 919,
	248, 296, 255, 247, 473, 966, 946, 834, 898, 954,
	0, 0, 973, 957, 893, 0, 922, 0, 972, 829,
	913, 0, 832, 836, 968, 950, 864, 258, 0, 0,
	0, 0, 0, 0, 0, 890, 900, 934, 884, 0,
	0, 0, 0, 0, 0, 0, 862, 0, 909, 0,
	0, 0, 841, 833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 888, 0, 0, 0,
	844, 0, 863, 935, 0, 826, 279, 838, 370, 240,
	0, 939, 949, 885, 509, 953, 883, 882, 929, 842,
	945, 876, 336, 840, 305, 192, 212, 0, 874, 380,
	423, 429, 944, 859, 868, 238, 866, 427, 394, 492,
	220, 267, 420, 400, 425, 407, 270, 908, 927, 426,
	342, 478, 414, 489, 510, 511, 246, 374, 500, 466,
	506, 524, 213, 243, 388, 459, 495, 449, 366, 474,
	475, 304, 448, 277, 195, 340, 516, 211, 435, 229,
	218, 480, 498, 272, 418, 203, 461, 816, 226, 439,
	0, 0, 526, 205, 485, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 482, 483, 239, 527,
	215, 505, 207, 839, 504, 376, 477, 486, 363, 352,
	206, 484, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 496, 0, 199,
	0, 454, 497, 528, 221, 222, 224, 854, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	940, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 825, 819, 818, 306, 343, 932,
	971, 393, 428, 227, 494, 451, 849, 853, 847, 914,
	848, 903, 904, 850, 962, 963, 964, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 936, 843, 0, 851,
	852, 0, 942, 951, 952, 547, 353, 441, 491, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	471, 907, 191, 208, 339, 967, 416, 271, 525, 503,
	499, 828, 210, 846, 245, 857, 865, 0, 871, 879,
	880, 892, 894, 895, 896, 897, 915, 916, 918, 926,
	928, 931, 933, 938, 948, 970, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 479, 481, 493, 507, 512, 436, 281,
	488, 513, 0, 348, 906, 912, 350, 264, 284, 295,
	921, 502, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	902, 930, 346, 469, 470, 291, 365, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 1793, 0, 629, 0,
	0, 0, 253, 634, 0, 0, 0, 337, 250, 0,
	1794, 398, 0, 197, 0, 442, 237, 347, 344, 476,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 641,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 87, 0,
	0, 188, 189, 190, 710, 717, 718, 719, 720, 721,
	711, 713, 0, 0, 225, 712, 232, 657, 659, 658,
	668, 669, 670, 671, 672, 673, 674, 655, 715, 722,
	723, 0, 248, 296, 255, 247, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 612, 626, 0, 640, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 624, 805, 0, 0, 0,
	694, 0, 625, 0, 0, 633, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 693, 0, 0, 509, 0, 0, 691,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 492, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 478, 414, 489, 510, 511, 246, 374,
	500, 466, 506, 524, 213, 243, 388, 459, 495, 449,
	366, 474, 475, 304, 448, 277, 195, 340, 516, 211,
	435, 229, 218, 480, 498, 272, 418, 203, 461, 487,
	226, 439, 0, 0, 526, 205, 485, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 482, 483,
	239, 527, 215, 505, 207, 0, 504, 376, 477, 486,
	363, 352, 206, 484, 361, 351, 307, 663, 664, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 496,
	0, 199, 0, 454, 497, 528, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 494, 451, 700, 692,
	645, 704, 647, 701, 702, 642, 643, 646, 703, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 695, 632,
	631, 0, 638, 639, 0, 653, 654, 656, 660, 661,
	662, 665, 666, 667, 675, 677, 678, 676, 679, 680,
	681, 684, 685, 686, 687, 682, 683, 688, 649, 648,
	650, 651, 652, 630, 191, 208, 339, 0, 416, 271,
	525, 503, 499, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 417, 422,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 479, 481, 493, 507, 512,
	436, 281, 488, 513, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 502, 457, 214, 424, 273, 202, 233,
	217, 242, 257, 260, 299, 360, 368, 397, 402, 278,
	254, 231, 421, 228, 440, 463, 464, 465, 467, 364,
	249, 401, 0, 365, 346, 469, 470, 291, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 629, 0, 0, 0, 253,
	634, 0, 0, 0, 337, 250, 0, 0, 398, 0,
	197, 0, 442, 237, 347, 344, 476, 265, 256, 252,
	236, 292, 354, 396, 462, 390, 641, 341, 0, 0,
	452, 369, 0, 0, 0, 0, 0, 636, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 381, 453, 269, 0, 87, 0, 0, 188, 189,
	190, 710, 717, 718, 719, 720, 721, 711, 713, 0,
	0, 225, 712, 232, 657, 659, 658, 668, 669, 670,
	671, 672, 673, 674, 655, 715, 722, 723, 0, 248,
	296, 255, 247, 473, 0, 0, 1759, 1760, 1761, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 612,
	626, 0, 640, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 694, 0, 625,
	0, 0, 633, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 370, 240, 0,
	693, 0, 0, 509, 0, 0, 691, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 380, 423,
	429, 0, 0, 0, 238, 0, 427, 394, 492, 220,
	267, 420, 400, 425, 407, 270, 0, 0, 426, 342,
	478, 414, 489, 510, 511, 246, 374, 500, 466, 506,
	524, 213, 243, 388, 459, 495, 449, 366, 474, 475,
	304, 448, 277, 195, 340, 516, 211, 435, 229, 218,
	480, 498, 272, 418, 203, 461, 487, 226, 439, 0,
	0, 526, 205, 485, 458, 362, 301, 302, 204, 0,
	419, 251, 275, 241, 383, 482, 483, 239, 527, 215,
	505, 207, 0, 504, 376, 477, 486, 363, 352, 206,
	484, 361, 351, 307, 663, 664, 263, 286, 412, 345,
	413, 287, 372, 371, 373, 198, 496, 0, 199, 0,
	454, 497, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 387, 411, 409, 415, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 375, 289, 450, 306, 343, 0, 0,
	393, 428, 227, 494, 451, 700, 692, 645, 704, 647,
	701, 702, 642, 643, 646, 703, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 695, 632, 631, 0, 638,
	639, 0, 653, 654, 656, 660, 661, 662, 665, 666,
	667, 675, 677, 678, 676, 679, 680, 681, 684, 685,
	686, 687, 682, 683, 688, 649, 648, 650, 651, 652,
	630, 191, 208, 339, 0, 416, 271, 525, 503, 499,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 479, 481, 493, 507, 512, 436, 281, 488,
	513, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	502, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 629, 0, 0, 0, 253, 634, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 641, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 636, 637, 0, 0, 0, 0,
	0, 0, 1876, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 87, 0, 0, 188, 189, 190, 710, 717,
	718, 719, 720, 721, 711, 713, 0, 0, 225, 712,
	232, 657, 659, 658, 668, 669, 670, 671, 672, 673,
	674, 655, 715, 722, 723, 1877, 248, 296, 255, 247,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 612, 626, 0, 640,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 623, 624,
	0, 0, 0, 0, 694, 0, 625, 0, 0, 633,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 693, 0, 0,
	509, 0, 0, 691, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 0,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 663, 664, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	494, 451, 700, 692, 645, 704, 647, 701, 702, 642,
	643, 646, 703, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 695, 632, 631, 0, 638, 639, 0, 653,
	654, 656, 660, 661, 662, 665, 666, 667, 675, 677,
	678, 676, 679, 680, 681, 684, 685, 686, 687, 682,
	683, 688, 649, 648, 650, 651, 652, 630, 191, 208,
	339, 0, 416, 271, 525, 503, 499, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 0, 0, 346, 469,
	470, 291, 365, 0, 0, 0, 78, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 629, 0, 0, 0, 253, 634,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 476, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 641, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 636, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 87, 0, 0, 188, 189, 190,
	710, 717, 718, 719, 720, 721, 711, 713, 0, 0,
	225, 712, 232, 657, 659, 658, 668, 669, 670, 671,
	672, 673, 674, 655, 715, 722, 723, 0, 248, 296,
	255, 247, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 612, 626,
	0, 640, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 694, 0, 625, 0,
	0, 633, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 693,
	0, 0, 509, 0, 0, 691, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 492, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 478,
	414, 489, 510, 511, 246, 374, 500, 466, 506, 524,
	213, 243, 388, 459, 495, 449, 366, 474, 475, 304,
	448, 277, 195, 340, 516, 211, 435, 229, 218, 480,
	498, 272, 418, 203, 461, 487, 226, 439, 0, 0,
	526, 205, 485, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 482, 483, 239, 527, 215, 505,
	207, 0, 504, 376, 477, 486, 363, 352, 206, 484,
	361, 351, 307, 663, 664, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 496, 0, 199, 0, 454,
	497, 528, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 494, 451, 700, 692, 645, 704, 647, 701,
	702, 642, 643, 646, 703, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 695, 632, 631, 0, 638, 639,
	0, 653, 654, 656, 660, 661, 662, 665, 666, 667,
	675, 677, 678, 676, 679, 680, 681, 684, 685, 686,
	687, 682, 683, 688, 649, 648, 650, 651, 652, 630,
	191, 208, 339, 86, 416, 271, 525, 503, 499, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 417, 422, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 479, 481, 493, 507, 512, 436, 281, 488, 513,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 502,
	457, 214, 424, 273, 202, 233, 217, 242, 257, 260,
	299, 360, 368, 397, 402, 278, 254, 231, 421, 228,
	440, 463, 464, 465, 467, 364, 249, 401, 0, 365,
	346, 469, 470, 291, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 629, 0, 0, 0, 253, 634, 0, 0, 0,
	337, 250, 0, 0, 398, 0, 197, 0, 442, 237,
	347, 344, 476, 265, 256, 252, 236, 292, 354, 396,
	462, 390, 641, 341, 0, 0, 452, 369, 0, 0,
	0, 0, 0, 636, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 381, 453, 269,
	0, 87, 0, 0, 188, 189, 190, 710, 717, 718,
	719, 720, 721, 711, 713, 0, 0, 225, 712, 232,
	657, 659, 658, 668, 669, 670, 671, 672, 673, 674,
	655, 715, 722, 723, 0, 248, 296, 255, 247, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 612, 626, 0, 640, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 694, 0, 625, 0, 0, 633, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 370, 240, 0, 693, 0, 0, 509,
	0, 0, 691, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 380, 423, 429, 0, 0, 0,
	238, 0, 427, 394, 492, 220, 267, 420, 400, 425,
	407, 270, 2988, 0, 426, 342, 478, 414, 489, 510,
	511, 246, 374, 500, 466, 506, 524, 213, 243, 388,
	459, 495, 449, 366, 474, 475, 304, 448, 277, 195,
	340, 516, 211, 435, 229, 218, 480, 498, 272, 418,
	203, 461, 487, 226, 439, 0, 0, 526, 205, 485,
	458, 362, 301, 302, 204, 0, 419, 251, 275, 241,
	383, 482, 483, 239, 527, 215, 505, 207, 0, 504,
	376, 477, 486, 363, 352, 206, 484, 361, 351, 307,
	663, 664, 263, 286, 412, 345, 413, 287, 372, 371,
	373, 198, 496, 0, 199, 0, 454, 497, 528, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 387, 411, 409, 415, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 375,
	289, 450, 306, 343, 0, 0, 393, 428, 227, 494,
	451, 700, 692, 645, 704, 647, 701, 702, 642, 643,
	646, 703, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 695, 632, 631, 0, 638, 639, 0, 653, 654,
	656, 660, 661, 662, 665, 666, 667, 675, 677, 678,
	676, 679, 680, 681, 684, 685, 686, 687, 682, 683,
	688, 649, 648, 650, 651, 652, 630, 191, 208, 339,
	0, 416, 271, 525, 503, 499, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 479, 481,
	493, 507, 512, 436, 281, 488, 513, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 502, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 629, 0,
	0, 0, 253, 634, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 476,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 641,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 87, 0,
	1349, 188, 189, 190, 710, 717, 718, 719, 720, 721,
	711, 713, 0, 0, 225, 712, 232, 657, 659, 658,
	668, 669, 670, 671, 672, 673, 674, 655, 715, 722,
	723, 0, 248, 296, 255, 247, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 612, 626, 0, 640, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 624, 0, 0, 0, 0,
	694, 0, 625, 0, 0, 633, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 693, 0, 0, 509, 0, 0, 691,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 492, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 478, 414, 489, 510, 511, 246, 374,
	500, 466, 506, 524, 213, 243, 388, 459, 495, 449,
	366, 474, 475, 304, 448, 277, 195, 340, 516, 211,
	435, 229, 218, 480, 498, 272, 418, 203, 461, 487,
	226, 439, 0, 0, 526, 205, 485, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 482, 483,
	239, 527, 215, 505, 207, 0, 504, 376, 477, 486,
	363, 352, 206, 484, 361, 351, 307, 663, 664, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 496,
	0, 199, 0, 454, 497, 528, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 494, 451, 700, 692,
	645, 704, 647, 701, 702, 642, 643, 646, 703, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 695, 632,
	631, 0, 638, 639, 0, 653, 654, 656, 660, 661,
	662, 665, 666, 667, 675, 677, 678, 676, 679, 680,
	681, 684, 685, 686, 687, 682, 683, 688, 649, 648,
	650, 651, 652, 630, 191, 208, 339, 0, 416, 271,
	525, 503, 499, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 417, 422,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 479, 481, 493, 507, 512,
	436, 281, 488, 513, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 502, 457, 214, 424, 273, 202, 233,
	217, 242, 257, 260, 299, 360, 368, 397, 402, 278,
	254, 231, 421, 228, 440, 463, 464, 465, 467, 364,
	249, 401, 0, 365, 346, 469, 470, 291, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 629, 0, 0, 0, 253,
	634, 0, 0, 0, 337, 250, 0, 0, 398, 0,
	197, 0, 442, 237, 347, 344, 476, 265, 256, 252,
	236, 292, 354, 396, 462, 390, 641, 341, 0, 0,
	452, 369, 0, 0, 0, 0, 0, 636, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 381, 453, 269, 0, 87, 0, 0, 188, 189,
	190, 710, 717, 718, 719, 720, 721, 711, 713, 0,
	0, 225, 712, 232, 657, 659, 658, 668, 669, 670,
	671, 672, 673, 674, 655, 715, 722, 723, 0, 248,
	296, 255, 247, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 612,
	626, 0, 640, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 623, 624, 805, 0, 0, 0, 694, 0, 625,
	0, 0, 633, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 370, 240, 0,
	693, 0, 0, 509, 0, 0, 691, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 380, 423,
	429, 0, 0, 0, 238, 0, 427, 394, 492, 220,
	267, 420, 400, 425, 407, 270, 0, 0, 426, 342,
	478, 414, 489, 510, 511, 246, 374, 500, 466, 506,
	524, 213, 243, 388, 459, 495, 449, 366, 474, 475,
	304, 448, 277, 195, 340, 516, 211, 435, 229, 218,
	480, 498, 272, 418, 203, 461, 487, 226, 439, 0,
	0, 526, 205, 485, 458, 362, 301, 302, 204, 0,
	419, 251, 275, 241, 383, 482, 483, 239, 527, 215,
	505, 207, 0, 504, 376, 477, 486, 363, 352, 206,
	484, 361, 351, 307, 663, 664, 263, 286, 412, 345,
	413, 287, 372, 371, 373, 198, 496, 0, 199, 0,
	454, 497, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 387, 411, 409, 415, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 375, 289, 450, 306, 343, 0, 0,
	393, 428, 227, 494, 451, 700, 692, 645, 704, 647,
	701, 702, 642, 643, 646, 703, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 695, 632, 631, 0, 638,
	639, 0, 653, 654, 656, 660, 661, 662, 665, 666,
	667, 675, 677, 678, 676, 679, 680, 681, 684, 685,
	686, 687, 682, 683, 688, 649, 648, 650, 651, 652,
	630, 191, 208, 339, 0, 416, 271, 525, 503, 499,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 479, 481, 493, 507, 512, 436, 281, 488,
	513, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	502, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 629, 0, 0, 0, 253, 634, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 641, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 636, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 87, 0, 0, 188, 189, 190, 710, 717,
	718, 719, 720, 721, 711, 713, 0, 0, 225, 712,
	232, 657, 659, 658, 668, 669, 670, 671, 672, 673,
	674, 655, 715, 722, 723, 0, 248, 296, 255, 247,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 612, 626, 0, 640,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 623, 624,
	0, 0, 0, 0, 694, 0, 625, 0, 0, 633,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 693, 0, 0,
	509, 0, 0, 691, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 0,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 663, 664, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	494, 451, 700, 692, 645, 704, 647, 701, 702, 642,
	643, 646, 703, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 695, 632, 631, 0, 638, 639, 0, 653,
	654, 656, 660, 661, 662, 665, 666, 667, 675, 677,
	678, 676, 679, 680, 681, 684, 685, 686, 687, 682,
	683, 688, 649, 648, 650, 651, 652, 630, 191, 208,
	339, 0, 416, 271, 525, 503, 499, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 0, 365, 346, 469,
	470, 291, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 629,
	0, 0, 0, 253, 634, 0, 0, 0, 337, 250,
	0, 0, 398, 0, 197, 0, 442, 237, 347, 344,
	476, 265, 256, 252, 236, 292, 354, 396, 462, 390,
	641, 341, 0, 0, 452, 369, 0, 0, 0, 0,
	0, 636, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 381, 453, 269, 0, 87,
	0, 0, 188, 189, 190, 710, 717, 718, 719, 720,
	721, 711, 713, 0, 0, 225, 712, 232, 657, 659,
	658, 668, 669, 670, 671, 672, 673, 674, 655, 715,
	722, 723, 0, 248, 296, 255, 247, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 626, 0, 640, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 694, 0, 625, 0, 0, 633, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 370, 240, 0, 693, 0, 0, 509, 0, 0,
	691, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 380, 423, 429, 0, 0, 0, 238, 0,
	427, 394, 492, 220, 267, 420, 400, 425, 407, 270,
	0, 0, 426, 342, 478, 414, 489, 510, 511, 246,
	374, 500, 466, 506, 524, 213, 243, 388, 459, 495,
	449, 366, 474, 475, 304, 448, 277, 195, 340, 516,
	211, 435, 229, 218, 480, 498, 272, 418, 203, 461,
	487, 226, 439, 0, 0, 526, 205, 485, 458, 362,
	301, 302, 204, 0, 419, 251, 275, 241, 383, 482,
	483, 239, 527, 215, 505, 207, 0, 504, 376, 477,
	486, 363, 352, 206, 484, 361, 351, 307, 663, 664,
	263, 286, 412, 345, 413, 287, 372, 371, 373, 198,
	496, 0, 199, 0, 454, 497, 528, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 387,
	411, 409, 415, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 375, 289, 450,
	306, 343, 0, 0, 393, 428, 227, 494, 451, 700,
	692, 645, 704, 647, 701, 702, 642, 643, 646, 703,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 695,
	632, 631, 0, 638, 639, 0, 653, 654, 656, 660,
	661, 662, 665, 666, 667, 675, 677, 678, 676, 679,
	680, 681, 684, 685, 686, 687, 682, 683, 688, 649,
	648, 650, 651, 652, 630, 191, 208, 339, 0, 416,
	271, 525, 503, 499, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 479, 481, 493, 507,
	512, 436, 281, 488, 513, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 502, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 476, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 717, 718, 0, 0, 0, 0, 1697,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 492,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 478, 414, 489, 510, 511, 246, 374, 500, 466,
	506, 524, 213, 243, 388, 459, 495, 449, 366, 474,
	475, 304, 448, 277, 195, 340, 516, 211, 435, 229,
	218, 480, 498, 272, 418, 203, 461, 487, 226, 439,
	0, 0, 526, 205, 485, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 482, 483, 239, 527,
	215, 505, 207, 0, 504, 376, 477, 486, 363, 352,
	206, 484, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 496, 0, 199,
	0, 454, 497, 528, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 494, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 353, 441, 491, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	471, 0, 191, 208, 339, 0, 416, 271, 525, 503,
	499, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 479, 481, 493, 507, 512, 436, 281,
	488, 513, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 502, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	0, 365, 346, 469, 470, 291, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 398, 0, 197, 0,
	442, 237, 347, 344, 476, 265, 256, 252, 236, 292,
	354, 396, 462, 390, 0, 341, 0, 0, 452, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 381,
	453, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 1024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 370, 240, 0, 0, 0,
	1023, 509, 0, 0, 0, 0, 0, 1020, 1021, 336,
	981, 305, 192, 212, 1014, 1018, 380, 423, 429, 0,
	0, 0, 238, 0, 427, 394, 492, 220, 267, 420,
	400, 425, 407, 270, 0, 0, 426, 342, 478, 414,
	489, 510, 511, 246, 374, 500, 466, 506, 524, 213,
	243, 388, 459, 495, 449, 366, 474, 475, 304, 448,
	277, 195, 340, 516, 211, 435, 229, 218, 480, 498,
	272, 418, 203, 461, 487, 226, 439, 0, 0, 526,
	205, 485, 458, 362, 301, 302, 204, 0, 419, 251,
	275, 241, 383, 482, 483, 239, 527, 215, 505, 207,
	0, 504, 376, 477, 486, 363, 352, 206, 484, 361,
	351, 307, 326, 327, 263, 286, 412, 345, 413, 287,
	372, 371, 373, 198, 496, 0, 199, 0, 454, 497,
	528, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 387, 411, 409, 415, 0, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 375, 289, 450, 306, 343, 0, 0, 393, 428,
	227, 494, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 353, 441, 491, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 359, 367, 471, 0, 191,
	208, 339, 0, 416, 271, 525, 503, 499, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	479, 481, 493, 507, 512, 436, 281, 488, 513, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 502, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 0, 346,
	469, 470, 291, 365, 0, 0, 0, 78, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 398, 0,
	197, 0, 442, 237, 347, 344, 476, 265, 256, 252,
	236, 292, 354, 396, 462, 390, 0, 341, 0, 0,
	452, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 381, 453, 269, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 370, 240, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 380, 423,
	429, 0, 0, 0, 238, 0, 427, 394, 492, 220,
	267, 420, 400, 425, 407, 270, 0, 0, 426, 342,
	478, 414, 489, 510, 511, 246, 374, 500, 466, 506,
	524, 213, 243, 388, 459, 495, 449, 366, 474, 475,
	304, 448, 277, 195, 340, 516, 211, 435, 229, 218,
	480, 498, 272, 418, 203, 461, 487, 226, 439, 0,
	0, 526, 205, 485, 458, 362, 301, 302, 204, 0,
	419, 251, 275, 241, 383, 482, 483, 239, 527, 215,
	505, 207, 0, 504, 376, 477, 486, 363, 352, 206,
	484, 361, 351, 307, 326, 327, 263, 286, 412, 345,
	413, 287, 372, 371, 373, 198, 496, 0, 199, 0,
	454, 497, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 387, 411, 409, 415, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 375, 289, 450, 306, 343, 0, 0,
	393, 428, 227, 494, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 353, 441, 491, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 359, 367, 471,
	0, 191, 208, 339, 86, 416, 271, 525, 503, 499,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 479, 481, 493, 507, 512, 436, 281, 488,
	513, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	502, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	1368, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 1370, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 1372,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 1196, 0, 1197, 1198, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 0,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	494, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 353, 441, 491, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 471, 0, 191, 208,
	339, 0, 416, 271, 525, 503, 499, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 0, 365, 346, 469,
	470, 291, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 398, 0, 197, 0, 442, 237, 347, 344,
	476, 265, 256, 252, 236, 292, 354, 396, 462, 390,
	0, 341, 0, 0, 452, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 381, 453, 269, 0, 0,
	0, 0, 188, 189, 190, 1311, 1314, 0, 0, 0,
	0, 1310, 1313, 0, 0, 225, 1309, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 370, 240, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 380, 423, 429, 0, 0, 0, 238, 0,
	427, 394, 492, 220, 267, 420, 400, 425, 407, 270,
	0, 0, 426, 342, 478, 414, 489, 510, 511, 246,
	374, 500, 466, 506, 524, 213, 243, 388, 459, 495,
	449, 366, 474, 475, 304, 448, 277, 195, 340, 516,
	211, 435, 229, 218, 480, 498, 272, 418, 203, 461,
	487, 226, 439, 0, 0, 526, 205, 485, 458, 362,
	301, 302, 204, 0, 419, 251, 275, 241, 383, 482,
	483, 239, 527, 215, 505, 207, 0, 504, 376, 477,
	486, 363, 352, 206, 484, 361, 351, 307, 326, 327,
	263, 286, 412, 345, 413, 287, 372, 371, 373, 198,
	496, 0, 199, 0, 454, 497, 528, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 387,
	411, 409, 415, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 375, 289, 450,
	306, 343, 0, 0, 393, 428, 227, 494, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	441, 491, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 359, 367, 471, 0, 191, 208, 339, 0, 416,
	271, 525, 503, 499, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 479, 481, 493, 507,
	512, 436, 281, 488, 513, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 502, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 0, 346, 469, 470, 291, 365,
	0, 0, 0, 78, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 398, 0, 197, 0, 442, 237,
	347, 344, 476, 265, 256, 252, 236, 292, 354, 396,
	462, 390, 0, 341, 0, 0, 452, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 381, 453, 269,
	0, 87, 0, 1349, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 370, 240, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 380, 423, 429, 0, 0, 0,
	238, 0, 427, 394, 492, 220, 267, 420, 400, 425,
	407, 270, 0, 0, 426, 342, 478, 414, 489, 510,
	511, 246, 374, 500, 466, 506, 524, 213, 243, 388,
	459, 495, 449, 366, 474, 475, 304, 448, 277, 195,
	340, 516, 211, 435, 229, 218, 480, 498, 272, 418,
	203, 461, 487, 226, 439, 0, 0, 526, 205, 485,
	458, 362, 301, 302, 204, 0, 419, 251, 275, 241,
	383, 482, 483, 239, 527, 215, 505, 207, 0, 504,
	376, 477, 486, 363, 352, 206, 484, 361, 351, 307,
	326, 327, 263, 286, 412, 345, 413, 287, 372, 371,
	373, 198, 496, 0, 199, 0, 454, 497, 528, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 387, 411, 409, 415, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 375,
	289, 450, 306, 343, 0, 0, 393, 428, 227, 494,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 353, 441, 491, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 359, 367, 471, 0, 191, 208, 339,
	86, 416, 271, 525, 503, 499, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 479, 481,
	493, 507, 512, 436, 281, 488, 513, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 502, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 476,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 492, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 478, 414, 489, 510, 511, 246, 374,
	500, 466, 506, 524, 213, 243, 388, 459, 495, 449,
	366, 474, 475, 304, 448, 277, 195, 340, 516, 211,
	435, 229, 218, 480, 498, 272, 418, 203, 461, 487,
	226, 439, 0, 0, 526, 205, 485, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 482, 483,
	239, 527, 215, 505, 207, 0, 504, 376, 477, 486,
	363, 352, 206, 484, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 496,
	0, 199, 0, 454, 497, 528, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 494, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 353, 441,
	491, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 471, 0, 191, 208, 339, 0, 416, 271,
	525, 503, 499, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 417, 422,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 479, 481, 493, 507, 512,
	436, 281, 488, 513, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 502, 457, 214, 424, 273, 202, 233,
	217, 242, 257, 260, 299, 360, 368, 397, 402, 278,
	254, 231, 421, 228, 440, 463, 464, 465, 467, 364,
	249, 401, 0, 365, 346, 469, 470, 291, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 1815, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 398, 0,
	197, 0, 442, 237, 347, 344, 476, 265, 256, 252,
	236, 292, 354, 396, 462, 390, 0, 341, 0, 0,
	452, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 381, 453, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 370, 240, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 380, 423,
	429, 0, 0, 0, 238, 0, 427, 394, 492, 220,
	267, 420, 400, 425, 407, 270, 0, 1813, 426, 342,
	478, 414, 489, 510, 511, 246, 374, 500, 466, 506,
	524, 213, 243, 388, 459, 495, 449, 366, 474, 475,
	304, 448, 277, 195, 340, 516, 211, 435, 229, 218,
	480, 498, 272, 418, 203, 461, 487, 226, 439, 0,
	0, 526, 205, 485, 458, 362, 301, 302, 204, 0,
	419, 251, 275, 241, 383, 482, 483, 239, 527, 215,
	505, 207, 0, 504, 376, 477, 486, 363, 352, 206,
	484, 361, 351, 307, 326, 327, 263, 286, 412, 345,
	413, 287, 372, 371, 373, 198, 496, 0, 199, 0,
	454, 497, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 387, 411, 409, 415, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 375, 289, 450, 306, 343, 0, 0,
	393, 428, 227, 494, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 353, 441, 491, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 359, 367, 471,
	0, 191, 208, 339, 0, 416, 271, 525, 503, 499,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 479, 481, 493, 507, 512, 436, 281, 488,
	513, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	502, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 336, 981,
	305, 192, 212, 979, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 0,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	494, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 353, 441, 491, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 471, 0, 191, 208,
	339, 0, 416, 271, 525, 503, 499, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 0, 365, 346, 469,
	470, 291, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 1815, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 398, 0, 197, 0, 442, 237, 347, 344,
	476, 265, 256, 252, 236, 292, 354, 396, 462, 390,
	0, 341, 0, 0, 452, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 381, 453, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 370, 240, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 380, 423, 429, 0, 0, 0, 238, 0,
	427, 394, 492, 220, 267, 420, 400, 425, 407, 270,
	0, 0, 426, 342, 478, 414, 489, 510, 511, 246,
	374, 500, 466, 506, 524, 213, 243, 388, 459, 495,
	449, 366, 474, 475, 304, 448, 277, 195, 340, 516,
	211, 435, 229, 218, 480, 498, 272, 418, 203, 461,
	487, 226, 439, 0, 0, 526, 205, 485, 458, 362,
	301, 302, 204, 0, 419, 251, 275, 241, 383, 482,
	483, 239, 527, 215, 505, 207, 0, 504, 376, 477,
	486, 363, 352, 206, 484, 361, 351, 307, 326, 327,
	263, 286, 412, 345, 413, 287, 372, 371, 373, 198,
	496, 0, 199, 0, 454, 497, 528, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 387,
	411, 409, 415, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 375, 289, 450,
	306, 343, 0, 0, 393, 428, 227, 494, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	441, 491, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 359, 367, 471, 0, 191, 208, 339, 0, 416,
	271, 525, 503, 499, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 479, 481, 493, 507,
	512, 436, 281, 488, 513, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 502, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 476, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 1349, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 509, 0, 0, 0, 2916, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 492,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 478, 414, 489, 510, 511, 246, 374, 500, 466,
	506, 524, 213, 243, 388, 459, 495, 449, 366, 474,
	475, 304, 448, 277, 195, 340, 516, 211, 435, 229,
	218, 480, 498, 272, 418, 203, 461, 487, 226, 439,
	0, 0, 526, 205, 485, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 482, 483, 239, 527,
	215, 505, 207, 0, 504, 376, 477, 486, 363, 352,
	206, 484, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 496, 0, 199,
	0, 454, 497, 528, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 494, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 353, 441, 491, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	471, 0, 191, 208, 339, 0, 416, 271, 525, 503,
	499, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 479, 481, 493, 507, 512, 436, 281,
	488, 513, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 502, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	0, 365, 346, 469, 470, 291, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 398, 0, 197, 0,
	442, 237, 347, 344, 476, 265, 256, 252, 236, 292,
	354, 396, 462, 390, 0, 341, 0, 0, 452, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 381,
	453, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 370, 240, 0, 0, 0,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 380, 423, 429, 0,
	0, 0, 238, 0, 427, 394, 492, 220, 267, 420,
	400, 425, 407, 270, 0, 0, 426, 342, 478, 414,
	489, 510, 511, 246, 374, 500, 466, 506, 524, 213,
	243, 388, 459, 495, 449, 366, 474, 475, 304, 448,
	277, 195, 340, 516, 211, 435, 229, 218, 480, 498,
	272, 418, 203, 461, 487, 226, 439, 0, 0, 526,
	205, 485, 458, 362, 301, 302, 204, 0, 419, 251,
	275, 241, 383, 482, 483, 239, 527, 215, 505, 207,
	0, 504, 376, 477, 486, 363, 352, 206, 484, 361,
	351, 307, 326, 327, 263, 286, 412, 345, 413, 287,
	372, 371, 373, 198, 496, 0, 199, 0, 454, 497,
	528, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 387, 411, 409, 415, 0, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 375, 289, 450, 306, 343, 0, 0, 393, 428,
	227, 494, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 353, 441, 491, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 359, 367, 471, 0, 191,
	208, 339, 0, 416, 271, 525, 503, 499, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	479, 481, 493, 507, 512, 436, 281, 488, 513, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 502, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 476, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 2163, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 492, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 478, 414, 489, 510, 511,
	246, 374, 500, 466, 506, 524, 213, 243, 388, 459,
	495, 449, 366, 474, 475, 304, 448, 277, 195, 340,
	516, 211, 435, 229, 218, 480, 498, 272, 418, 203,
	461, 487, 226, 439, 0, 0, 526, 205, 485, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	482, 483, 239, 527, 215, 505, 207, 0, 504, 376,
	477, 486, 363, 352, 206, 484, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 496, 0, 199, 0, 454, 497, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 472, 490, 501, 508, 514,
	515, 517, 518, 519, 520, 521, 523, 522, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 494, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	353, 441, 491, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 471, 0, 191, 208, 339, 0,
	416, 271, 525, 503, 499, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	417, 422, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 479, 481, 493,
	507, 512, 436, 281, 488, 513, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 502, 457, 214, 424, 273,
	202, 233, 217, 242, 257, 260, 299, 360, 368, 397,
	402, 278, 254, 231, 421, 228, 440, 463, 464, 465,
	467, 364, 249, 401, 0, 365, 346, 469, 470, 291,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	398, 0, 197, 0, 442, 237, 347, 344, 476, 265,
	256, 252, 236, 292, 354, 396, 462, 390, 0, 341,
	0, 0, 452, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 381, 453, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 2148, 0, 0, 0,
	2149, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 370,
	240, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	380, 423, 429, 0, 0, 0, 238, 0, 427, 394,
	492, 220, 267, 420, 400, 425, 407, 270, 0, 0,
	426, 342, 478, 414, 489, 510, 511, 246, 374, 500,
	466, 506, 524, 213, 243, 388, 459, 495, 449, 366,
	474, 475, 304, 448, 277, 195, 340, 516, 211, 435,
	229, 218, 480, 498, 272, 418, 203, 461, 487, 226,
	439, 0, 0, 526, 205, 485, 458, 362, 301, 302,
	204, 0, 419, 251, 275, 241, 383, 482, 483, 239,
	527, 215, 505, 207, 0, 504, 376, 477, 486, 363,
	352, 206, 484, 361, 351, 307, 326, 327, 263, 286,
	412, 345, 413, 287, 372, 371, 373, 198, 496, 0,
	199, 0, 454, 497, 528, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 387, 411, 409,
	415, 0, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 375, 289, 450, 306, 343,
	0, 0, 393, 428, 227, 494, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 353, 441, 491,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 359,
	367, 471, 0, 191, 208, 339, 0, 416, 271, 525,
	503, 499, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 479, 481, 493, 507, 512, 436,
	281, 488, 513, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 502, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 1393,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 476, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 1392, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 492, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 478,
	414, 489, 510, 511, 246, 374, 500, 466, 506, 524,
	213, 243, 388, 459, 495, 449, 366, 474, 475, 304,
	448, 277, 195, 340, 516, 211, 435, 229, 218, 480,
	498, 272, 418, 203, 461, 487, 226, 439, 0, 0,
	526, 205, 485, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 482, 483, 239, 527, 215, 505,
	207, 0, 504, 376, 477, 486, 363, 352, 206, 484,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 496, 0, 199, 0, 454,
	497, 528, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 494, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 353, 441, 491, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 471, 0,
	191, 208, 339, 0, 416, 271, 525, 503, 499, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 417, 422, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 479, 481, 493, 507, 512, 436, 281, 488, 513,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 502,
	457, 214, 424, 273, 202, 233, 217, 242, 257, 260,
	299, 360, 368, 397, 402, 278, 254, 231, 421, 228,
	440, 463, 464, 465, 467, 364, 249, 401, 0, 365,
	346, 469, 470, 291, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 398, 0, 197, 0, 442, 237,
	347, 344, 476, 265, 256, 252, 236, 292, 354, 396,
	462, 390, 0, 341, 0, 0, 452, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 381, 453, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 370, 240, 0, 0, 0, 0, 509,
	0, 0, 0, 3009, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 380, 423, 429, 0, 0, 0,
	238, 0, 427, 394, 492, 220, 267, 420, 400, 425,
	407, 270, 0, 0, 426, 342, 478, 414, 489, 510,
	511, 246, 374, 500, 466, 506, 524, 213, 243, 388,
	459, 495, 449, 366, 474, 475, 304, 448, 277, 195,
	340, 516, 211, 435, 229, 218, 480, 498, 272, 418,
	203, 461, 487, 226, 439, 0, 0, 526, 205, 485,
	458, 362, 301, 302, 204, 0, 419, 251, 275, 241,
	383, 482, 483, 239, 527, 215, 505, 207, 0, 504,
	376, 477, 486, 363, 352, 206, 484, 361, 351, 307,
	326, 327, 263, 286, 412, 345, 413, 287, 372, 371,
	373, 198, 496, 0, 199, 0, 454, 497, 528, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 387, 411, 409, 415, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 375,
	289, 450, 306, 343, 0, 0, 393, 428, 227, 494,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 353, 441, 491, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 359, 367, 471, 0, 191, 208, 339,
	0, 416, 271, 525, 503, 499, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 479, 481,
	493, 507, 512, 436, 281, 488, 513, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 502, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 476,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 492, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 478, 414, 489, 510, 511, 246, 374,
	500, 466, 506, 524, 213, 243, 388, 459, 495, 449,
	366, 474, 475, 304, 448, 277, 195, 340, 516, 211,
	435, 229, 218, 480, 498, 272, 418, 203, 461, 487,
	226, 439, 0, 0, 526, 205, 485, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 482, 483,
	239, 527, 215, 505, 207, 0, 504, 376, 477, 486,
	363, 352, 206, 484, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 496,
	0, 199, 0, 454, 497, 528, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 494, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 353, 441,
	491, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 471, 0, 191, 208, 339, 0, 416, 271,
	525, 503, 499, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 417, 422,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 479, 481, 493, 507, 512,
	436, 281, 488, 513, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 502, 457, 214, 424, 273, 202, 233,
	217, 242, 257, 260, 299, 360, 368, 397, 402, 278,
	254, 231, 421, 228, 440, 463, 464, 465, 467, 364,
	249, 401, 0, 365, 346, 469, 470, 291, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 398, 0,
	197, 0, 442, 237, 347, 344, 476, 265, 256, 252,
	236, 292, 354, 396, 462, 390, 0, 341, 0, 0,
	452, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 381, 453, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 370, 240, 0,
	0, 0, 0, 509, 0, 0, 0, 2916, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 380, 423,
	429, 0, 0, 0, 238, 0, 427, 394, 492, 220,
	267, 420, 400, 425, 407, 270, 0, 0, 426, 342,
	478, 414, 489, 510, 511, 246, 374, 500, 466, 506,
	524, 213, 243, 388, 459, 495, 449, 366, 474, 475,
	304, 448, 277, 195, 340, 516, 211, 435, 229, 218,
	480, 498, 272, 418, 203, 461, 487, 226, 439, 0,
	0, 526, 205, 485, 458, 362, 301, 302, 204, 0,
	419, 251, 275, 241, 383, 482, 483, 239, 527, 215,
	505, 207, 0, 504, 376, 477, 486, 363, 352, 206,
	484, 361, 351, 307, 326, 327, 263, 286, 412, 345,
	413, 287, 372, 371, 373, 198, 496, 0, 199, 0,
	454, 497, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 387, 411, 409, 415, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 375, 289, 450, 306, 343, 0, 0,
	393, 428, 227, 494, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 353, 441, 491, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 359, 367, 471,
	0, 191, 208, 339, 0, 416, 271, 525, 503, 499,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 479, 481, 493, 507, 512, 436, 281, 488,
	513, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	502, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 0,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	494, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 353, 441, 491, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 471, 0, 191, 208,
	339, 0, 416, 271, 525, 503, 499, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 0, 365, 346, 469,
	470, 291, 468, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 398, 0, 197, 0, 442, 237, 347, 344,
	476, 265, 256, 252, 236, 292, 354, 396, 462, 390,
	0, 341, 0, 0, 452, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 381, 453, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 370, 240, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 380, 423, 429, 0, 0, 0, 238, 0,
	427, 394, 492, 220, 267, 420, 400, 425, 407, 270,
	0, 0, 426, 342, 478, 414, 489, 510, 511, 246,
	374, 500, 466, 506, 524, 213, 243, 388, 459, 495,
	449, 366, 474, 475, 304, 448, 277, 195, 340, 516,
	211, 435, 229, 218, 480, 498, 272, 418, 203, 461,
	487, 226, 439, 0, 0, 526, 205, 485, 458, 362,
	301, 302, 204, 0, 419, 251, 275, 241, 383, 482,
	483, 239, 527, 215, 505, 207, 0, 504, 376, 477,
	486, 363, 352, 206, 484, 361, 351, 307, 326, 327,
	263, 286, 412, 345, 413, 287, 372, 371, 373, 198,
	496, 0, 199, 0, 454, 497, 528, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 387,
	411, 409, 415, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 375, 289, 450,
	306, 343, 0, 0, 393, 428, 227, 494, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	441, 491, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 359, 367, 471, 0, 191, 208, 339, 0, 416,
	271, 525, 503, 499, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 479, 481, 493, 507,
	512, 436, 281, 488, 513, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 502, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 476, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 1372, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 492,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 478, 414, 489, 510, 511, 246, 374, 500, 466,
	506, 524, 213, 243, 388, 459, 495, 449, 366, 474,
	475, 304, 448, 277, 195, 340, 516, 211, 435, 229,
	218, 480, 498, 272, 418, 203, 461, 487, 226, 439,
	0, 0, 526, 205, 485, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 482, 483, 239, 527,
	215, 505, 207, 0, 504, 376, 477, 486, 363, 352,
	206, 484, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 496, 0, 199,
	0, 454, 497, 528, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 494, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 353, 441, 491, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	471, 0, 191, 208, 339, 0, 416, 271, 525, 503,
	499, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 479, 481, 493, 507, 512, 436, 281,
	488, 513, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 502, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	0, 365, 346, 469, 470, 291, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 398, 0, 197, 0,
	442, 237, 347, 344, 476, 265, 256, 252, 236, 292,
	354, 396, 462, 390, 0, 341, 0, 0, 452, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 381,
	453, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 370, 240, 0, 0, 0,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 380, 423, 429, 0,
	0, 0, 238, 0, 427, 394, 492, 220, 267, 420,
	400, 425, 407, 270, 0, 0, 426, 342, 478, 414,
	489, 510, 511, 246, 374, 500, 466, 506, 524, 213,
	243, 388, 459, 495, 449, 366, 474, 475, 304, 448,
	277, 195, 340, 516, 211, 435, 229, 218, 480, 498,
	272, 418, 203, 461, 487, 226, 439, 0, 0, 526,
	205, 485, 458, 362, 301, 302, 204, 0, 419, 251,
	275, 241, 383, 482, 483, 239, 527, 215, 505, 207,
	0, 504, 376, 477, 486, 363, 352, 206, 484, 361,
	351, 307, 326, 327, 263, 286, 412, 345, 413, 287,
	372, 371, 373, 198, 496, 0, 199, 0, 454, 497,
	528, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 387, 411, 409, 415, 0, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 375, 289, 450, 306, 343, 0, 0, 393, 428,
	227, 494, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 353, 441, 491, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 359, 367, 471, 0, 191,
	208, 339, 0, 416, 271, 525, 503, 499, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	479, 481, 493, 507, 512, 436, 281, 488, 513, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 502, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 476, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 492, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 478, 414, 489, 510, 511,
	246, 374, 500, 466, 506, 524, 213, 243, 388, 459,
	495, 449, 366, 474, 475, 304, 448, 277, 195, 340,
	516, 211, 435, 229, 218, 480, 498, 272, 418, 203,
	461, 487, 226, 439, 0, 0, 526, 205, 485, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	482, 483, 239, 527, 215, 505, 207, 0, 504, 376,
	477, 486, 363, 352, 206, 484, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 496, 0, 199, 0, 454, 497, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 472, 490, 501, 508, 514,
	515, 517, 518, 519, 520, 521, 523, 522, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 494, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	353, 441, 491, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 471, 0, 191, 208, 339, 1648,
	416, 271, 525, 503, 499, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	417, 422, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 479, 481, 493,
	507, 512, 436, 281, 488, 513, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 502, 457, 214, 424, 273,
	202, 233, 217, 242, 257, 260, 299, 360, 368, 397,
	402, 278, 254, 231, 421, 228, 440, 463, 464, 465,
	467, 364, 249, 401, 0, 365, 346, 469, 470, 291,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 1518, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	398, 0, 197, 0, 442, 237, 347, 344, 476, 265,
	256, 252, 236, 292, 354, 396, 462, 390, 0, 341,
	0, 0, 452, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 381, 453, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 370,
	240, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	380, 423, 429, 0, 0, 0, 238, 0, 427, 394,
	492, 220, 267, 420, 400, 425, 407, 270, 0, 0,
	426, 342, 478, 414, 489, 510, 511, 246, 374, 500,
	466, 506, 524, 213, 243, 388, 459, 495, 449, 366,
	474, 475, 304, 448, 277, 195, 340, 516, 211, 435,
	229, 218, 480, 498, 272, 418, 203, 461, 487, 226,
	439, 0, 0, 526, 205, 485, 458, 362, 301, 302,
	204, 0, 419, 251, 275, 241, 383, 482, 483, 239,
	527, 215, 505, 207, 0, 504, 376, 477, 486, 363,
	352, 206, 484, 361, 351, 307, 326, 327, 263, 286,
	412, 345, 413, 287, 372, 371, 373, 198, 496, 0,
	199, 0, 454, 497, 528, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 387, 411, 409,
	415, 0, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 375, 289, 450, 306, 343,
	0, 0, 393, 428, 227, 494, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 353, 441, 491,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 359,
	367, 471, 0, 191, 208, 339, 0, 416, 271, 525,
	503, 499, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 479, 481, 493, 507, 512, 436,
	281, 488, 513, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 502, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 1516, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 476, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 492, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 478,
	414, 489, 510, 511, 246, 374, 500, 466, 506, 524,
	213, 243, 388, 459, 495, 449, 366, 474, 475, 304,
	448, 277, 195, 340, 516, 211, 435, 229, 218, 480,
	498, 272, 418, 203, 461, 487, 226, 439, 0, 0,
	526, 205, 485, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 482, 483, 239, 527, 215, 505,
	207, 0, 504, 376, 477, 486, 363, 352, 206, 484,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 496, 0, 199, 0, 454,
	497, 528, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 494, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 353, 441, 491, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 471, 0,
	191, 208, 339, 0, 416, 271, 525, 503, 499, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 417, 422, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 479, 481, 493, 507, 512, 436, 281, 488, 513,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 502,
	457, 214, 424, 273, 202, 233, 217, 242, 257, 260,
	299, 360, 368, 397, 402, 278, 254, 231, 421, 228,
	440, 463, 464, 465, 467, 364, 249, 401, 0, 365,
	346, 469, 470, 291, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 1514, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 398, 0, 197, 0, 442, 237,
	347, 344, 476, 265, 256, 252, 236, 292, 354, 396,
	462, 390, 0, 341, 0, 0, 452, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 381, 453, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 370, 240, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 380, 423, 429, 0, 0, 0,
	238, 0, 427, 394, 492, 220, 267, 420, 400, 425,
	407, 270, 0, 0, 426, 342, 478, 414, 489, 510,
	511, 246, 374, 500, 466, 506, 524, 213, 243, 388,
	459, 495, 449, 366, 474, 475, 304, 448, 277, 195,
	340, 516, 211, 435, 229, 218, 480, 498, 272, 418,
	203, 461, 487, 226, 439, 0, 0, 526, 205, 485,
	458, 362, 301, 302, 204, 0, 419, 251, 275, 241,
	383, 482, 483, 239, 527, 215, 505, 207, 0, 504,
	376, 477, 486, 363, 352, 206, 484, 361, 351, 307,
	326, 327, 263, 286, 412, 345, 413, 287, 372, 371,
	373, 198, 496, 0, 199, 0, 454, 497, 528, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 387, 411, 409, 415, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 375,
	289, 450, 306, 343, 0, 0, 393, 428, 227, 494,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 353, 441, 491, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 359, 367, 471, 0, 191, 208, 339,
	0, 416, 271, 525, 503, 499, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 479, 481,
	493, 507, 512, 436, 281, 488, 513, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 502, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 1512, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 476,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 492, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 478, 414, 489, 510, 511, 246, 374,
	500, 466, 506, 524, 213, 243, 388, 459, 495, 449,
	366, 474, 475, 304, 448, 277, 195, 340, 516, 211,
	435, 229, 218, 480, 498, 272, 418, 203, 461, 487,
	226, 439, 0, 0, 526, 205, 485, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 482, 483,
	239, 527, 215, 505, 207, 0, 504, 376, 477, 486,
	363, 352, 206, 484, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 496,
	0, 199, 0, 454, 497, 528, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 494, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 353, 441,
	491, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 471, 0, 191, 208, 339, 0, 416, 271,
	525, 503, 499, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 417, 422,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 479, 481, 493, 507, 512,
	436, 281, 488, 513, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 502, 457, 214, 424, 273, 202, 233,
	217, 242, 257, 260, 299, 360, 368, 397, 402, 278,
	254, 231, 421, 228, 440, 463, 464, 465, 467, 364,
	249, 401, 0, 365, 346, 469, 470, 291, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 1510, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 398, 0,
	197, 0, 442, 237, 347, 344, 476, 265, 256, 252,
	236, 292, 354, 396, 462, 390, 0, 341, 0, 0,
	452, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 381, 453, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 370, 240, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 380, 423,
	429, 0, 0, 0, 238, 0, 427, 394, 492, 220,
	267, 420, 400, 425, 407, 270, 0, 0, 426, 342,
	478, 414, 489, 510, 511, 246, 374, 500, 466, 506,
	524, 213, 243, 388, 459, 495, 449, 366, 474, 475,
	304, 448, 277, 195, 340, 516, 211, 435, 229, 218,
	480, 498, 272, 418, 203, 461, 487, 226, 439, 0,
	0, 526, 205, 485, 458, 362, 301, 302, 204, 0,
	419, 251, 275, 241, 383, 482, 483, 239, 527, 215,
	505, 207, 0, 504, 376, 477, 486, 363, 352, 206,
	484, 361, 351, 307, 326, 327, 263, 286, 412, 345,
	413, 287, 372, 371, 373, 198, 496, 0, 199, 0,
	454, 497, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 387, 411, 409, 415, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 375, 289, 450, 306, 343, 0, 0,
	393, 428, 227, 494, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 353, 441, 491, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 359, 367, 471,
	0, 191, 208, 339, 0, 416, 271, 525, 503, 499,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 479, 481, 493, 507, 512, 436, 281, 488,
	513, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	502, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 1506,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 0,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	494, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 353, 441, 491, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 471, 0, 191, 208,
	339, 0, 416, 271, 525, 503, 499, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 0, 365, 346, 469,
	470, 291, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 1504, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 398, 0, 197, 0, 442, 237, 347, 344,
	476, 265, 256, 252, 236, 292, 354, 396, 462, 390,
	0, 341, 0, 0, 452, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 381, 453, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 370, 240, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 380, 423, 429, 0, 0, 0, 238, 0,
	427, 394, 492, 220, 267, 420, 400, 425, 407, 270,
	0, 0, 426, 342, 478, 414, 489, 510, 511, 246,
	374, 500, 466, 506, 524, 213, 243, 388, 459, 495,
	449, 366, 474, 475, 304, 448, 277, 195, 340, 516,
	211, 435, 229, 218, 480, 498, 272, 418, 203, 461,
	487, 226, 439, 0, 0, 526, 205, 485, 458, 362,
	301, 302, 204, 0, 419, 251, 275, 241, 383, 482,
	483, 239, 527, 215, 505, 207, 0, 504, 376, 477,
	486, 363, 352, 206, 484, 361, 351, 307, 326, 327,
	263, 286, 412, 345, 413, 287, 372, 371, 373, 198,
	496, 0, 199, 0, 454, 497, 528, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 387,
	411, 409, 415, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 375, 289, 450,
	306, 343, 0, 0, 393, 428, 227, 494, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	441, 491, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 359, 367, 471, 0, 191, 208, 339, 0, 416,
	271, 525, 503, 499, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 479, 481, 493, 507,
	512, 436, 281, 488, 513, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 502, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 1502, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 476, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 492,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 478, 414, 489, 510, 511, 246, 374, 500, 466,
	506, 524, 213, 243, 388, 459, 495, 449, 366, 474,
	475, 304, 448, 277, 195, 340, 516, 211, 435, 229,
	218, 480, 498, 272, 418, 203, 461, 487, 226, 439,
	0, 0, 526, 205, 485, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 482, 483, 239, 527,
	215, 505, 207, 0, 504, 376, 477, 486, 363, 352,
	206, 484, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 496, 0, 199,
	0, 454, 497, 528, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 494, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 353, 441, 491, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	471, 0, 191, 208, 339, 0, 416, 271, 525, 503,
	499, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 479, 481, 493, 507, 512, 436, 281,
	488, 513, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 502, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	0, 365, 346, 469, 470, 291, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 398, 0, 197, 0,
	442, 237, 347, 344, 476, 265, 256, 252, 236, 292,
	354, 396, 462, 390, 0, 341, 0, 0, 452, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 381,
	453, 269, 0, 1477, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 370, 240, 0, 0, 0,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 380, 423, 429, 0,
	0, 0, 238, 0, 427, 394, 492, 220, 267, 420,
	400, 425, 407, 270, 0, 0, 426, 342, 478, 414,
	489, 510, 511, 246, 374, 500, 466, 506, 524, 213,
	243, 388, 459, 495, 449, 366, 474, 475, 304, 448,
	277, 195, 340, 516, 211, 435, 229, 218, 480, 498,
	272, 418, 203, 461, 487, 226, 439, 0, 0, 526,
	205, 485, 458, 362, 301, 302, 204, 0, 419, 251,
	275, 241, 383, 482, 483, 239, 527, 215, 505, 207,
	0, 504, 376, 477, 486, 363, 352, 206, 484, 361,
	351, 307, 326, 327, 263, 286, 412, 345, 413, 287,
	372, 371, 373, 198, 496, 0, 199, 0, 454, 497,
	528, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 387, 411, 409, 415, 0, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 375, 289, 450, 306, 343, 0, 0, 393, 428,
	227, 494, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 353, 441, 491, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 359, 367, 471, 0, 191,
	208, 339, 0, 416, 271, 525, 503, 499, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	479, 481, 493, 507, 512, 436, 281, 488, 513, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 502, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 1377, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 476, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 492, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 478, 414, 489, 510, 511,
	246, 374, 500, 466, 506, 524, 213, 243, 388, 459,
	495, 449, 366, 474, 475, 304, 448, 277, 195, 340,
	516, 211, 435, 229, 218, 480, 498, 272, 418, 203,
	461, 487, 226, 439, 0, 0, 526, 205, 485, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	482, 483, 239, 527, 215, 505, 207, 0, 504, 376,
	477, 486, 363, 352, 206, 484, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 496, 0, 199, 0, 454, 497, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 472, 490, 501, 508, 514,
	515, 517, 518, 519, 520, 521, 523, 522, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 494, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	353, 441, 491, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 471, 0, 191, 208, 339, 0,
	416, 271, 525, 503, 499, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	417, 422, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 479, 481, 493,
	507, 512, 436, 281, 488, 513, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 502, 457, 214, 424, 273,
	202, 233, 217, 242, 257, 260, 299, 360, 368, 397,
	402, 278, 254, 231, 421, 228, 440, 463, 464, 465,
	467, 364, 249, 401, 0, 365, 346, 469, 470, 291,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	398, 0, 197, 0, 442, 237, 347, 344, 476, 265,
	256, 252, 236, 292, 354, 396, 462, 390, 0, 341,
	0, 0, 452, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 381, 453, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 370,
	240, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	380, 423, 429, 0, 0, 0, 238, 0, 427, 394,
	492, 220, 267, 420, 400, 425, 407, 270, 0, 0,
	426, 342, 478, 414, 489, 510, 511, 246, 374, 500,
	466, 506, 524, 213, 243, 388, 459, 495, 449, 366,
	474, 475, 304, 448, 277, 195, 340, 516, 211, 435,
	229, 218, 480, 498, 272, 418, 203, 461, 487, 226,
	439, 0, 0, 526, 205, 485, 458, 362, 301, 302,
	204, 0, 419, 251, 275, 241, 383, 482, 483, 239,
	527, 215, 505, 207, 0, 504, 376, 477, 486, 363,
	352, 206, 484, 361, 351, 307, 326, 327, 263, 286,
	412, 345, 413, 287, 372, 371, 373, 198, 496, 0,
	199, 0, 454, 497, 528, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 387, 411, 409,
	415, 0, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 375, 289, 450, 306, 343,
	0, 0, 393, 428, 227, 494, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 353, 441, 491,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 359,
	367, 471, 0, 191, 208, 339, 0, 416, 271, 525,
	503, 499, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 479, 481, 493, 507, 512, 436,
	281, 488, 513, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 502, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 476, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 492, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 478,
	414, 489, 510, 511, 246, 374, 500, 466, 506, 524,
	213, 243, 388, 459, 495, 449, 366, 474, 475, 304,
	448, 277, 195, 340, 516, 211, 435, 229, 218, 480,
	498, 272, 418, 203, 461, 487, 226, 439, 0, 0,
	526, 205, 485, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 482, 483, 239, 527, 215, 505,
	207, 0, 504, 376, 477, 486, 363, 352, 206, 484,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 496, 0, 199, 0, 454,
	497, 528, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 494, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 353, 441, 491, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 471, 0,
	191, 208, 339, 0, 416, 271, 525, 503, 499, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	787, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 417, 422, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 479, 481, 493, 507, 512, 436, 281, 488, 513,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 502,
	457, 214, 424, 273, 202, 233, 217, 242, 257, 260,
	299, 360, 368, 397, 402, 278, 254, 231, 421, 228,
	440, 463, 464, 465, 467, 364, 249, 401, 0, 365,
	346, 469, 470, 291, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 398, 0, 197, 0, 442, 237,
	347, 344, 476, 265, 256, 252, 236, 292, 354, 396,
	462, 390, 0, 341, 0, 0, 452, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 381, 453, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 604,
	0, 279, 0, 370, 240, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 380, 423, 429, 0, 0, 0,
	238, 0, 427, 394, 492, 220, 267, 420, 400, 425,
	407, 270, 0, 0, 426, 342, 478, 414, 489, 510,
	511, 246, 374, 500, 466, 506, 524, 213, 243, 388,
	459, 495, 449, 366, 474, 475, 304, 448, 277, 195,
	340, 516, 211, 435, 229, 218, 480, 498, 272, 418,
	203, 461, 487, 226, 439, 0, 0, 526, 205, 485,
	458, 362, 301, 302, 204, 0, 419, 251, 275, 241,
	383, 482, 483, 239, 527, 215, 505, 207, 0, 504,
	376, 477, 486, 363, 352, 206, 484, 361, 351, 307,
	326, 327, 263, 286, 412, 345, 413, 287, 372, 371,
	373, 198, 496, 0, 199, 0, 454, 497, 528, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 387, 411, 409, 415, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 375,
	289, 450, 306, 343, 0, 0, 393, 428, 227, 494,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 353, 441, 491, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 359, 367, 471, 0, 191, 208, 339,
	0, 416, 271, 525, 503, 499, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 479, 481,
	493, 507, 512, 436, 603, 488, 513, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 502, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 476,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 550, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 492, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 478, 414, 489, 510, 511, 246, 374,
	500, 466, 506, 524, 213, 243, 388, 459, 495, 449,
	366, 474, 475, 304, 448, 277, 195, 340, 516, 211,
	435, 229, 218, 480, 498, 272, 418, 203, 461, 487,
	226, 439, 0, 0, 526, 205, 485, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 482, 483,
	239, 527, 215, 505, 207, 0, 504, 376, 477, 486,
	363, 352, 206, 484, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 496,
	0, 199, 0, 454, 497, 528, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 494, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 353, 441,
	491, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 471, 0, 191, 208, 339, 0, 416, 271,
	525, 503, 499, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 417, 422,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 479, 481, 493, 507, 512,
	436, 281, 488, 513, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 502, 457, 214, 424, 273, 202, 233,
	217, 242, 257, 260, 299, 360, 368, 397, 402, 278,
	254, 231, 421, 228, 440, 463, 464, 465, 467, 364,
	249, 401, 0, 365, 346, 469, 470, 291, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 398, 0,
	197, 0, 442, 237, 347, 344, 476, 265, 256, 252,
	236, 292, 354, 396, 462, 390, 0, 341, 0, 0,
	452, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 381, 453, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 370, 240, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 380, 423,
	429, 0, 0, 0, 238, 0, 427, 394, 492, 220,
	267, 420, 400, 425, 407, 270, 0, 0, 426, 342,
	478, 414, 489, 510, 511, 246, 374, 500, 466, 506,
	524, 213, 243, 388, 459, 495, 449, 366, 474, 475,
	304, 448, 277, 195, 340, 516, 211, 435, 229, 218,
	480, 498, 272, 418, 203, 461, 487, 226, 439, 0,
	0, 526, 205, 485, 458, 362, 301, 302, 204, 0,
	419, 251, 275, 241, 383, 482, 483, 239, 527, 215,
	505, 207, 0, 504, 376, 477, 486, 363, 352, 206,
	484, 361, 351, 307, 326, 327, 263, 286, 412, 345,
	413, 287, 372, 371, 373, 198, 496, 0, 199, 0,
	454, 497, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 387, 411, 409, 415, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 375, 289, 450, 306, 343, 0, 0,
	393, 428, 227, 494, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 353, 441, 491, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 359, 367, 471,
	0, 191, 208, 339, 0, 416, 271, 525, 503, 499,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 3014, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 479, 481, 493, 507, 512, 436, 281, 488,
	513, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	502, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 476, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 492, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 478, 414, 489,
	510, 511, 246, 374, 500, 466, 506, 524, 213, 243,
	388, 459, 495, 449, 366, 474, 475, 304, 448, 277,
	195, 340, 516, 211, 435, 229, 218, 480, 498, 272,
	418, 203, 461, 487, 226, 439, 0, 0, 526, 205,
	485, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 482, 483, 239, 527, 215, 505, 207, 0,
	504, 376, 477, 486, 363, 352, 206, 484, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 496, 0, 199, 0, 454, 497, 528,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	494, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 353, 441, 491, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 471, 0, 191, 208,
	339, 0, 416, 271, 525, 503, 499, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 479,
	481, 493, 507, 512, 436, 281, 488, 513, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 502, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 0, 365, 346, 469,
	470, 291, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 398, 0, 197, 0, 442, 237, 347, 344,
	476, 265, 256, 252, 236, 292, 354, 396, 462, 390,
	0, 341, 0, 0, 452, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 381, 453, 269, 0, 0,
	0, 0, 188, 2633, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 370, 240, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 380, 423, 429, 0, 0, 0, 238, 0,
	427, 394, 492, 220, 267, 420, 400, 425, 407, 270,
	0, 0, 426, 342, 478, 414, 489, 510, 511, 246,
	374, 500, 466, 506, 524, 213, 243, 388, 459, 495,
	449, 366, 474, 475, 304, 448, 277, 195, 340, 516,
	211, 435, 229, 218, 480, 498, 272, 418, 203, 461,
	487, 226, 439, 0, 0, 526, 205, 485, 458, 362,
	301, 302, 204, 0, 419, 251, 275, 241, 383, 482,
	483, 239, 527, 215, 505, 207, 0, 504, 376, 477,
	486, 363, 352, 206, 484, 361, 351, 307, 326, 327,
	263, 286, 412, 345, 413, 287, 372, 371, 373, 198,
	496, 0, 199, 0, 454, 497, 528, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 387,
	411, 409, 415, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 375, 289, 450,
	306, 343, 0, 0, 393, 428, 227, 494, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	441, 491, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 359, 367, 471, 0, 191, 208, 339, 0, 416,
	271, 525, 503, 499, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 479, 481, 493, 507,
	512, 436, 281, 488, 513, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 502, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 476, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	2144, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 492,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 478, 414, 489, 510, 511, 246, 374, 500, 466,
	506, 524, 213, 243, 388, 459, 495, 449, 366, 474,
	475, 304, 448, 277, 195, 340, 516, 211, 435, 229,
	218, 480, 498, 272, 418, 203, 461, 487, 226, 439,
	0, 0, 526, 205, 485, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 482, 483, 239, 527,
	215, 505, 207, 0, 504, 376, 477, 486, 363, 352,
	206, 484, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 496, 0, 199,
	0, 454, 497, 528, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 494, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 353, 441, 491, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	471, 0, 191, 208, 339, 0, 416, 271, 525, 503,
	499, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 479, 481, 493, 507, 512, 436, 281,
	488, 513, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 502, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	0, 0, 346, 469, 470, 291,
}

var yyPact = [...]int{
	5145, -1000, -413, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2017, 2135, -1000, -1000,
	-1000, -1000, 2213, -1000, 803, 1724, -1000, 1994, 3407, -1000,
	42356, 427, -1000, 41142, 425, 565, 42356, -1000, 143, -1000,
	129, 42356, 137, 40535, -1000, -1000, -312, 18066, 1925, 31,
	26, 42356, -1000, -1000, -1000, -1000, 2159, 1660, -1000, 325,
	-1000, -1000, -1000, -1000, -1000, -1000, 39928, -1000, -1000, -1000,
	2001, 1990, 2230, 607, 1912, -1000, 2072, 1660, -1000, 18066,
	2150, 2051, 17459, -1000, 17459, 378, -1000, -1000, 13200, -1000,
	-1000, 24146, 42356, 30216, 242, -1000, 1994, -1000, -1000, -1000,
	111, -1000, 294, 1577, -1000, 1576, -1000, 365, 681, 311,
	428, 424, 310, 308, 307, 305, 303, 298, 296, 295,
	317, -1000, 658, 658, -168, -169, 3103, 364, 357, 357,
	403, 1959, 1953, -1000, 787, -1000, 658, 658, 658, 297,
	658, 658, 658, 658, 253, 232, 658, 658, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 658, 272, 1994, 218, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 42356, 163,
	42356, -1000, 518, 42356, 771, 771, 53, 771, 771, 771,
	771, 170, 580, 17, -1000, 166, 209, 123, 216, 788,
	184, -1000, -1000, 214, 788, 1235, -1000, 620, 124, -1000,
	771, 771, -1000, 10752, 225, 10752, 10752, -1000, 1960, -1000,
	-1000, -1000, -1000, 1248, -1000, 396, -1000, -1000, -1000, -1000,
	42356, 39321, 319, 688, -1000, -1000, -1000, 45, -1000, -1000,
	1386, 1268, 18066, 898, -1000, 1557, 572, -1000, -1000, -1000,
	-1000, -1000, 450, 18673, 18673, 18673, 18673, -1000, -1000, 1586,
	1586, 1586, 1586, 18673, 1586, 18673, 1586, 1586, 1586, 1586,
	18066, 1586, 1586, 1586, -1000, 1586, 1586, 1586, 1586, 1586,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586,
	517, 1586, 1586, 1586, 1586, 1586, -1000, -1000, -1000, -1000,
	1586, 1586, 1586, 1586, 1586, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21713, -1000, 15638, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 42356, -1000, 1586,
	162, 42356, 42356, 300, 2072, 1660, -1000, 2159, 2139, 325,
	-1000, 2062, 1345, 1392, 1252, 1660, 1560, 42356, -1000, 1602,
	-1000, -1000, -1000, 1830, 1147, 1233, -1000, -1000, -1000, -1000,
	1308, 18066, -1000, -1000, 2189, -1000, 21106, 493, 886, 2187,
	38714, -1000, 378, 378, 1574, 12588, 11, -1000, -1000, -1000,
	687, 27788, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1960,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1558, 42356, -1000, -1000, 4233, 1170,
	-1000, 1723, -1000, 1543, -1000, 1641, 18066, 1730, 420, 1170,
	413, 408, 406, -1000, -86, -1000, -1000, -1000, -1000, -1000,
	-1000, 658, 658, 658, -1000, 314, 2146, 3407, 6141, -1000,
	-1000, -1000, 38107, 1721, 1170, -1000, 1716, -1000, 778, 462,
	513, 513, 1170, -1000, -1000, 42356, 1170, 758, 757, 1170,
	1170, 42356, 42356, -1000, 37500, -1000, 36893, 36286, 1088, 42356,
	35679, 35072, 34465, 33858, 33251, -1000, 2003, -1000, 1828, -1000,
	-1000, -1000, 42356, 1170, 1170, 42356, 42356, 301, -1000, -1000,
	42356, 1170, -1000, -1000, 1079, 1071, 1059, 658, 658, 1045,
	1229, 1227, 1225, 658, 658, 1042, 1223, 29002, 1222, 244,
	1041, 1029, 1025, 1108, 1221, 192, 1220, 1005, 1003, 1023,
	42356, 1712, 42356, -1000, 204, 635, 374, 682, 1994, 1922,
	1568, 385, 419, 1170, 362, 362, 42356, -1000, 11364, -1000,
	-1000, 1216, 18066, -1000, 825, 788, 788, -1000, -1000, -1000,
	-1000, -1000, -1000, 771, 42356, 825, -1000, -1000, -1000, 788,
	771, 42356, 771, 771, 771, 771, 788, 788, 788, 771,
	42356, 42356, 42356, 42356, 42356, 42356, 42356, 42356, 42356, 10752,
	620, 771, -319, -1000, 1215, -1000, 1825, -1000, -1000, -1000,
	-1000, -1000, -1000, 10752, 10752, -1000, -1000, -1000, -1000, 132,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -80,
	1566, 32644, -1000, -320, -323, -325, -326, -1000, -1000, -1000,
	-328, -331, -1000, -1000, -1000, 18066, 18066, 18066, 18066, -197,
	-1000, 770, 18673, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	914, 709, 18673, 18673, 18673, 18673, 18673, 18673, 18673, 18673,
	18673, 18673, 18673, 18673, 18673, 18673, 18673, 25967, 6806, 6806,
	572, 572, 572, 572, -1000, 17459, 18066, 18066, 572, -1000,
	1170, 32037, 17459, 17459, 18066, 1969, 697, 1268, 42356, -1000,
	1252, -1000, -1000, -1000, 1007, -1000, 1969, 818, 18066, 18066,
	1969, 42356, 42356, 93, 18066, 18066, 18066, 18066, 18066, 18066,
	14419, 18066, 18066, 18066, 18066, 18066, 18066, 18066, 18066, 18066,
	18066, 18066, 18066, 18066, 18066, 18066, 18066, 18066, 18066, 18066,
	18066, 18066, 18066, 18066, 18066, 18066, 18066, 13812, 11364, 17459,
	17459, 17459, 17459, 17459, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 488, 1547, 1361, 1482,
	-1000, 1562, -1000, -160, 23539, 18066, 1214, 2184, 1752, 42356,
	-1000, -1000, -1000, 2072, -1000, 2072, 1547, 1920, 1835, 17459,
	-1000, -1000, 1920, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1362, -1000, 42356, 1560, 2048, 42356, 1844, 1209, 304,
	-1000, 18066, 18066, 1552, -1000, 1131, 42356, -1000, -197, -1000,
	31430, -1000, -1000, 10140, -1000, 42356, 292, 42356, -1000, 22932,
	30823, 11976, 11, -1000, 11976, 1473, -1000, -21, -28, 15026,
	570, -1000, -1000, -1000, 3103, 19887, 1336, 570, 69, -1000,
	-1000, -1000, 1641, -1000, 1641, 1641, 1641, 1641, 304, 304,
	304, 304, -1000, -1000, -1000, -1000, -1000, 1711, 1710, -1000,
	1641, 1641, 1641, 1641, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1708, 1708, 1708, 1654, 1654, 351, -1000, 18066, 302,
	30216, 2036, 1019, 1217, 204, 363, 1742, 1170, 1170, 1170,
	363, -1000, 1136, 1095, 1062, -1000, -404, 1530, -1000, -1000,
	2142, -1000, -1000, 447, 807, 802, 756, 42356, 177, 279,
	-1000, 326, -1000, 30216, 1170, 748, 513, 1170, -1000, 1170,
	-1000, -1000, -1000, -1000, -1000, 1170, -1000, -1000, 1523, -1000,
	1535, 857, 799, 838, 789, 1523, -1000, -1000, -135, 1523,
	-1000, 1523, -1000, 1523, -1000, 1523, -1000, 1523, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 631, 159, -235,
	42356, 177, 25967, -1000, 382, -1000, -1000, -1000, 25967, 25967,
	-1000, -1000, -1000, -1000, 1188, 1185, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -391, 42356, -1000, 199, 662,
	266, 269, 249, 42356, 164, 2056, 2055, 2053, 190, 230,
	42356, 42356, 362, 1810, 42356, 2015, 42356, -1000, -1000, -1000,
	-1000, -1000, 1268, 42356, -1000, -1000, 771, 771, -1000, -1000,
	42356, 771, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	771, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42356, -1000, -1000, -1000,
	-1000, 42356, -1000, -1000, -1000, -1000, -1000, 172, -25, 306,
	-1000, -1000, -1000, -1000, -1000, 2069, -1000, 1268, 724, 719,
	-1000, 1586, -1000, -1000, 942, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 914, 18673, 18673, 18673, 1570, 418, 1687, 904,
	804, 843, 843, 711, 711, 578, 578, 578, 578, 578,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1181, -1000,
	1498, -1000, 1915, 1262, 1252, -1000, 1498, 1498, 1230, 17459,
	-1000, -1000, 704, -1000, 18066, 1252, -1000, -1000, 1252, 1252,
	18066, 1252, 18066, -1000, 1217, 1217, 18066, 1521, 1509, 2183,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1880, 1217, 1217, 1217, 1217, 1217, 18066, 1112, -1000,
	-1000, -1000, 2240, 2145, 1252, 1386, 1252, 1491, -1000, 2118,
	1217, 2080, 2057, 1957, 1254, 1951, 1933, 1909, 1217, 1217,
	1217, 1165, 1904, 1893, 1888, 1872, 1809, 1800, 1795, 1786,
	1741, 1217, 1252, 17459, 17459, 1475, 1586, 482, -1000, 1498,
	1252, 1252, 1498, 1498, 11364, 1252, -1000, 42356, -1000, -313,
	-1000, -49, 535, 1586, -1000, 29002, 1252, -1000, 5778, -1000,
	43570, -1000, -1000, -1000, -1000, -1000, 27181, 1614, 1920, -1000,
	-1000, 1586, 1518, -1000, -1000, 304, 54, 26574, 563, 563,
	83, 1268, 1268, 18066, -1000, -1000, -1000, -1000, -1000, -1000,
	468, 2156, 323, 1586, -1000, 1513, 2167, -1000, -1000, -1000,
	2045, 20499, -1000, 1586, 1586, 42356, 1714, 1573, -1000, 460,
	-1000, 1473, 11, -34, -1000, -1000, -1000, -1000, 1268, -1000,
	1040, 293, 313, -1000, 346, -1000, -1000, -1000, -1000, 1930,
	64, -1000, -1000, -1000, 176, 304, -1000, -1000, -1000, -1000,
	-1000, -1000, 1178, 1178, -1000, -1000, -1000, -1000, -1000, 1013,
	-1000, -1000, -1000, 1010, -1000, -1000, 1704, 1782, 302, -1000,
	-1000, 658, 1175, -1000, -1000, 1942, 658, 658, 42356, -1000,
	-1000, 1328, 2036, 199, 42356, 707, 1807, -1000, 1742, 1742,
	1742, 42356, -1000, -1000, -1000, -1000, -1000, -1000, -393, 68,
	327, -1000, -1000, -1000, 3809, 42356, 1511, -1000, 174, -1000,
	1296, -1000, 42356, -1000, 1506, 1707, 1170, 1170, -1000, -1000,
	-1000, 42356, 1586, -1000, -1000, -1000, -1000, 416, 1983, 237,
	-1000, -1000, -214, -1000, -1000, 177, 174, 570, 1170, -1000,
	-1000, -1000, -1000, -1000, -394, 1502, 398, 180, 265, 42356,
	42356, 42356, 42356, 42356, 459, -1000, -1000, -1000, -1000, 152,
	-1000, -1000, 152, -1000, -1000, -1000, -1000, 221, 381, -1000,
	42356, 42356, 532, -1000, -1000, -1000, 788, -1000, -1000, 788,
	-1000, -1000, -1000, -1000, -1000, 1972, 42356, -32, -354, -1000,
	-349, 18066, -1000, -1000, -1000, -1000, 1517, 411, 1687, 18673,
	18673, 17459, -126, 766, 766, 25967, -1000, -1000, -1000, 18066,
	18066, 1539, 691, -1000, 18066, 880, -1000, -1000, -1000, 1217,
	-1000, 1217, -1000, -1000, 1217, 18066, 18066, 18066, 1252, 262,
	-1000, -1000, -1000, -1000, -1000, 2164, -1000, 18066, 18066, 18066,
	-1000, -1000, 18066, 18066, -1000, 18066, 18066, 19280, 1252, 19280,
	18066, 18066, 19280, -1000, -1000, -1000, -1000, 19280, 18066, 18066,
	18066, 18066, 18066, 18066, 18066, 18066, 18066, -1000, -1000, 1498,
	1498, 17459, 11364, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 535, -1000, 513, 513, 513, 42356, -1000,
	-1000, -1000, -1000, -1000, -1000, 1447, 2083, -1000, 1863, 1860,
	2162, 2156, -1000, 22932, 1920, -1000, -1000, 42356, -303, -1000,
	1886, 2084, 563, 563, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 9528, 2072, 18066, 1799, 42356, 1586, -1000, 22325, 42356,
	42356, 22932, 22932, 22932, 22932, 22932, -1000, 1833, 1832, -1000,
	1822, 1819, 1989, 42356, -1000, 1495, 1252, 2139, 20499, 325,
	18066, 24753, 1355, 22932, -1000, -1000, 22932, 42356, 8916, -1000,
	-1000, -43, -40, -1000, -1000, -1000, -1000, 3103, -1000, -1000,
	1303, 2043, 1923, -1000, -1000, -1000, -1000, -1000, 1493, -1000,
	1488, 1443, 1486, 159, -1000, 1719, 1966, 658, 658, -1000,
	1004, -1000, 1170, 1172, 1171, -1000, -1000, -1000, 384, -1000,
	2010, 42356, 1798, 1796, 1793, -1000, -402, 990, 1683, 1563,
	18066, 1681, 2133, 1402, 42356, -1000, -1000, 42356, -1000, 173,
	-1000, 302, 42356, -1000, -1000, -1000, 279, 42356, -1000, 6764,
	-1000, -1000, -1000, 174, -1000, -1000, -1000, -1000, -1000, -1000,
	42356, 188, -1000, 1658, 1247, -1000, -1000, 1735, -1000, -1000,
	-1000, -1000, 179, 261, 150, 1150, 150, -1000, 42356, 524,
	1782, 42356, -1000, -1000, -1000, 771, 771, -1000, -1000, 1964,
	-1000, 1170, 1217, 18673, 18673, -1000, 572, -1000, 1586, 1252,
	1641, 1641, -1000, 1641, 1654, -1000, 1641, 128, 1641, 125,
	1641, -1000, -1000, 1252, 1252, 1118, 1099, -94, -1000, 1268,
	18066, -1000, -1000, -1000, 1667, 1564, 1217, -1000, 1626, 1624,
	18066, 1217, 1217, 1217, -1000, 1268, 1254, 1399, 1383, -1000,
	-1000, -1000, -1000, 1439, 1217, 1382, -301, 1252, 1484, 1484,
	1484, 1484, 1484, 1482, 1482, 1482, 1482, -1000, -1000, 1252,
	-1000, -1000, 2066, 2066, 2066, 1464, 42963, 42356, -1000, -1000,
	-1000, -1000, 2156, 2154, 1435, -1000, -1000, 54, 397, -1000,
	1902, 2084, -1000, 2122, 1881, 2116, -1000, -1000, -1000, -1000,
	-1000, 1268, -1000, 1998, 1381, -1000, 661, 1375, -1000, -1000,
	16852, 1468, 1852, 453, 1464, 1430, 2167, 1760, 1792, 2271,
	-1000, -1000, -1000, -1000, 1829, -1000, 1805, -1000, -1000, 1602,
	-1000, -1000, 1361, 1252, 1302, 292, 22932, 1394, 1394, -1000,
	445, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 868, 6342,
	2229, -1000, 1130, -1000, 1022, 198, 989, -1000, -1000, 658,
	658, -1000, 739, 738, -1000, 42356, 1618, -1000, 304, 1129,
	304, 987, -1000, 985, -1000, -1000, -1000, -1000, 1748, 1836,
	-1000, -1000, -1000, -1000, 42356, -1000, -1000, 42356, 42356, 42356,
	1612, 2115, -1000, 18066, 1609, 660, 1373, 42356, 42356, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	383, 658, -372, 226, 224, 658, 658, 658, -403, -1000,
	-1000, 1455, 1437, -1000, -156, -1000, 18066, -1000, -1000, -1000,
	979, 979, -1000, 1602, -1000, -1000, -1000, 1284, -1000, -1000,
	-138, 42356, 42356, 42356, 42356, -1000, 929, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 572,
	18673, -1000, -1000, 304, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18066, -1000, 18066, -1000, 2072, 1121, 1268,
	18066, 18066, -1000, 984, 944, 1217, -1000, -1000, -1000, 1252,
	19280, -1000, 19280, -1000, 18066, 210, 766, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1586, 1905,
	1586, 1586, 24753, -1000, -1000, 2154, 2120, 2102, 1875, 1874,
	1874, 1902, -1000, 2094, 2092, -1000, 1120, 2089, 1117, 737,
	-1000, 42356, 18066, 1586, -1000, 309, 42356, 1586, 42356, -1000,
	2085, -1000, -1000, 18066, 1607, -1000, 18066, -1000, -1000, -1000,
	-1000, -1000, -1000, 6806, 2156, 1394, -1000, -1000, 600, -1000,
	18066, -1000, -1000, -1000, 6379, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1111, 1105, -1000, -1000, 1604, 18066, -1000,
	-1000, -1000, 1282, 1276, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1602, -1000, -1000, -1000, -1000, 279, -401, 1338,
	42356, 934, -1000, 1420, 1402, 271, 1586, 1103, 658, 658,
	658, 922, 903, 29002, 1417, -1000, 42356, 322, -1000, 279,
	-1000, -175, -176, 1217, -1000, -1000, 2034, -1000, -1000, 11364,
	-1000, -1000, 1601, 1740, -1000, -1000, -1000, 223, -1000, 1217,
	1217, 1252, -1000, 1217, 1217, 1274, 1272, -1000, -1000, 1383,
	-1000, 1073, -1000, 210, 1252, 1788, -1000, -1000, 6806, -1000,
	25360, -1000, 2079, 2075, 29609, 29609, 535, 2120, -1000, 18066,
	18066, 1873, 909, -1000, -1000, -1000, -1000, 1101, 1098, -1000,
	1096, -1000, 2205, -1000, 1268, -1000, 1586, -1000, 433, 1375,
	-1000, 2072, 1268, 42356, 1268, 55, 2085, -1000, 1217, -1000,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, -1000, -1000, 42356,
	1212, -1000, -1000, 2027, 1365, 67, -1000, 1347, -1000, -1000,
	473, -1000, 18066, -1000, 29002, 1064, 1024, -1000, -1000, -1000,
	-1000, -403, -1000, -1000, -1000, -1000, -1000, -1000, 325, 1400,
	-1000, 651, 42356, 42356, 1252, 270, -142, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18066, -1000, 1252, 1785,
	-1000, -248, -1000, 1342, -1000, -1000, -1000, -1000, -1000, 1342,
	1342, -1000, -1000, 1268, 1386, -1000, 872, -1000, -1000, -1000,
	-1000, -1000, 42356, 1375, 42356, -1000, 1324, 1252, 1586, 2072,
	-1000, 1300, -1000, 325, -1000, 1583, 1563, -1000, -1000, -1000,
	16245, -1000, -1000, -1000, -1000, -1000, 168, -136, 11364, 8304,
	1271, -1000, -1000, 1840, -132, -154, 1254, -1000, -342, -1000,
	-1000, 28395, -1000, -1000, -1000, -1000, -1000, 1368, -1000, -1000,
	24753, 41749, -1000, -124, 236, -136, 18066, 1579, 1252, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -17, -1000, -1000,
	-1000, -1000, -1000, 1735, -1000, 1838, -1000, 1252, -1000, -1000,
	-1000, 1258, -1000, 1434, -255, 1769, -1000, -101, -1000, -1000,
	-1000, 820, 900, -1000, -1000, -1000, -1000, -1000, -1000, 1159,
	42356, -1000, 345, -1000, -1000, -138, -139, -1000, -1000, 41749,
	-247, 570, 6806, -1000, 1768, 1758, 2179, -1000, -1000, -1000,
	-1000, -1000, -1000, -410, 1256, 201, -1000, -151, -1000, -1000,
	2007, 55, -1000, 2198, -1000, 2168, 603, 603, -1000, 897,
	-410, -1000, -159, -268, -1000, -1000, -1000, -1000, -1000, 337,
	965, -1000, -1000, -1000, -1000, 6806, -1000, -1000, -1000, 205,
	205, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2551, 2550, 26, 4, 36, 35, 2549, 88, 103,
	191, 25, 198, 120, 2548, 2547, 2544, 2543, 2542, 2541,
	2535, 228, 226, 224, 2534, 2532, 2531, 2528, 2527, 2526,
	2524, 2523, 2522, 2521, 220, 169, 190, 2517, 2516, 2515,
	125, 184, 91, 96, 187, 2514, 2513, 81, 2512, 2511,
	2506, 178, 177, 176, 737, 2504, 174, 134, 45, 2503,
	2502, 2501, 2500, 2499, 2498, 2497, 2495, 2493, 2492, 2491,
	2489, 2488, 2485, 2484, 2483, 2482, 205, 2481, 2480, 17,
	2479, 85, 2476, 2471, 2470, 2469, 133, 2468, 2466, 2465,
	37, 2464, 2463, 2462, 2461, 2460, 2459, 2458, 147, 2456,
	2455, 2454, 170, 197, 2453, 2452, 179, 116, 122, 2451,
	2450, 124, 193, 2449, 128, 2448, 2447, 2446, 161, 2445,
	5034, 2444, 76, 70, 2443, 67, 105, 66, 59, 16,
	3, 2442, 2441, 75, 93, 2440, 108, 68, 2439, 104,
	111, 2438, 2437, 13, 8, 2436, 5, 7, 2, 80,
	2435, 2434, 129, 2432, 2428, 2427, 99, 2425, 2422, 3128,
	2420, 100, 143, 115, 83, 2419, 44, 71, 2418, 2416,
	2415, 2414, 2413, 53, 2412, 2411, 2410, 152, 73, 175,
	42, 38, 58, 150, 2409, 30, 90, 2408, 145, 146,
	2407, 52, 31, 55, 2406, 40, 142, 127, 39, 102,
	151, 2405, 2404, 74, 79, 2403, 2399, 2396, 2394, 2393,
	2391, 78, 2390, 49, 2388, 195, 2387, 20, 2386, 46,
	43, 2385, 77, 135, 69, 32, 2384, 181, 2382, 61,
	164, 136, 167, 2381, 2380, 2373, 2371, 188, 277, 2370,
	2367, 84, 172, 149, 160, 101, 2364, 282, 2362, 2361,
	98, 1561, 2251, 28, 165, 2359, 2358, 3742, 155, 41,
	18, 2357, 194, 2356, 2355, 2354, 196, 171, 119, 988,
	63, 2353, 2352, 14, 2351, 2345, 2342, 2336, 2331, 2330,
	92, 34, 33, 29, 192, 82, 10, 106, 159, 86,
	2326, 2324, 2323, 131, 110, 2321, 163, 162, 132, 180,
	2320, 173, 153, 139, 2319, 545, 27, 2314, 2311, 2310,
	2306, 107, 2305, 2304, 2301, 2296, 158, 148, 130, 94,
	2290, 97, 126, 156, 154, 48, 2285, 47, 2280, 2277,
	23, 185, 24, 2276, 12, 65, 60, 22, 121, 118,
	2271, 0, 2268, 15, 182, 276, 157, 2266, 2264, 6,
	9, 11, 2263, 2262, 2261, 2260, 144, 2258, 2255, 2253,
	2250, 21, 50, 19, 1, 123, 95, 2248, 2247, 2246,
	5425, 2890, 138, 2245, 199,
}

//line sql.y:7160
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 368, 369, 369, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 341, 341,
	341, 344, 344, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	372, 372, 154, 154, 152, 152, 153, 153, 222, 222,
	24, 25, 25, 232, 232, 231, 231, 231, 233, 233,
	233, 233, 269, 269, 26, 26, 26, 26, 26, 104,
	104, 343, 343, 342, 334, 334, 333, 333, 332, 340,
	340, 339, 339, 338, 38, 39, 48, 48, 48, 48,
	49, 50, 345, 345, 307, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 309, 309, 295, 295, 308, 308, 308, 308, 308,
	308, 308, 294, 294, 115, 115, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 360, 360, 360, 359, 359, 202, 202,
	202, 202, 202, 202, 202, 202, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 361, 361, 361, 361, 273, 273, 273,
	273, 276, 276, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 275, 275, 275, 275, 275, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 279, 279,
	279, 279, 279, 279, 279, 279, 293, 293, 280, 280,
	288, 288, 289, 289, 289, 290, 290, 290, 291, 291,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 287,
	287, 286, 286, 286, 296, 321, 321, 320, 320, 318,
	318, 318, 318, 318, 318, 318, 318, 305, 305, 315,
	315, 315, 315, 315, 304, 304, 300, 300, 300, 301,
	301, 302, 302, 299, 299, 303, 303, 317, 317, 316,
	316, 297, 297, 298, 298, 323, 362, 362, 362, 362,
	362, 363, 363, 324, 352, 354, 354, 354, 353, 353,
	350, 351, 349, 349, 349, 349, 349, 81, 81, 81,
	245, 245, 246, 246, 313, 313, 312, 312, 312, 314,
	314, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 240, 240, 240, 348, 348, 348, 348, 348,
	348, 347, 347, 347, 310, 310, 310, 346, 346, 57,
	57, 186, 186, 365, 365, 366, 366, 366, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 326, 326, 58, 58, 3, 3, 142, 144,
	145, 145, 143, 143, 143, 143, 143, 143, 60, 60,
	59, 59, 147, 146, 148, 148, 148, 1, 1, 2,
	2, 4, 4, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 292, 292, 292, 325, 325,
	327, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 91, 91, 90, 93, 93, 93, 93, 93,
	93, 93, 93, 329, 329, 329, 61, 61, 330, 281,
	282, 283, 5, 6, 306, 328, 100, 100, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 239,
	239, 248, 248, 238, 238, 262, 262, 262, 241, 241,
	241, 242, 242, 358, 358, 358, 235, 235, 64, 64,
	64, 66, 66, 67, 68, 68, 264, 264, 265, 265,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 355, 355, 356, 357, 357, 357, 357,
	73, 75, 31, 31, 31, 31, 31, 31, 110, 110,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 99, 99, 373, 76, 77,
	77, 103, 103, 103, 96, 96, 96, 102, 102, 102,
	16, 16, 17, 221, 221, 18, 18, 107, 107, 109,
	109, 109, 109, 109, 111, 111, 111, 111, 111, 111,
	111, 367, 106, 106, 108, 108, 108, 108, 255, 255,
	255, 254, 254, 136, 136, 138, 137, 137, 139, 139,
	140, 140, 140, 140, 184, 184, 162, 162, 219, 219,
	217, 217, 218, 218, 220, 220, 220, 220, 223, 223,
	141, 141, 141, 141, 149, 149, 150, 150, 151, 151,
	263, 263, 260, 260, 260, 259, 259, 155, 155, 155,
	157, 156, 156, 156, 156, 158, 158, 160, 160, 159,
	159, 161, 166, 166, 165, 165, 163, 163, 163, 163,
	164, 164, 164, 164, 167, 167, 120, 120, 120, 120,
	120, 120, 120, 131, 131, 131, 131, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 83, 83, 83, 236, 236, 168,
	168, 176, 176, 176, 176, 169, 169, 169, 169, 169,
	169, 169, 177, 177, 177, 183, 178, 178, 174, 174,
	174, 174, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 271, 271, 337, 337,
	336, 336, 335, 335, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 374, 374, 284, 284, 284,
	284, 175, 175, 175, 175, 175, 101, 101, 101, 101,
	101, 268, 268, 268, 272, 272, 272, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 189, 189, 97, 97, 187, 187, 188, 190,
	190, 185, 185, 185, 171, 171, 171, 191, 191, 192,
	192, 193, 193, 195, 194, 194, 196, 197, 197, 197,
	198, 198, 199, 199, 199, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 43, 112, 112,
	112, 112, 114, 114, 113, 113, 79, 79, 80, 80,
	80, 118, 118, 119, 119, 119, 116, 116, 117, 117,
	215, 215, 200, 200, 200, 207, 207, 207, 203, 203,
	205, 205, 205, 206, 206, 206, 204, 212, 212, 214,
	214, 213, 213, 209, 209, 210, 210, 211, 211, 211,
	208, 208, 170, 170, 170, 170, 170, 216, 216, 216,
	216, 224, 224, 180, 180, 182, 182, 181, 135, 225,
	225, 229, 226, 226, 230, 230, 230, 230, 230, 227,
	227, 228, 228, 256, 256, 256, 234, 234, 247, 247,
	243, 243, 244, 244, 237, 237, 249, 249, 249, 74,
	179, 179, 322, 322, 319, 252, 252, 253, 253, 257,
	257, 261, 261, 258, 258, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 370,
	371, 266, 267, 267, 267,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 5, 4, 5,
	4, 4, 5, 8, 8, 6, 5, 4, 4, 4,
	4, 4, 7, 4, 6, 6, 6, 4, 4, 4,
	7, 8, 6, 5, 6, 8, 11, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 0, 2, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -368, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 220, -49, -39, 221,
	-50, 223, 222, 259, 224, 252, 74, 305, 306, 308,
	309, 310, 311, -85, 257, 258, 226, 36, 45, 33,
	34, 37, 230, 265, 266, 229, -10, -34, 8, -370,
	11, 436, 254, 253, 28, -12, 475, 86, -369, 616,
	-215, -200, 22, 33, 29, -199, -195, -103, -200, 20,
	18, 7, -76, -373, -76, -76, 12, 13, -76, -307,
	-309, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -331, -44, -41, 225, 222, 269,
	120, 121, 259, 260, 261, 224, 243, 258, 262, 257,
	278, -40, 81, 33, 475, 478, -314, 221, 227, 228,
	437, 123, 122, 75, 223, -311, 359, 508, 586, -56,
	588, 102, 104, 587, 44, 233, 589, 590, 591, 515,
	592, 242, 593, 594, 595, 596, 602, 557, 603, 604,
	605, 124, 7, -76, -261, -257, -341, -251, 89, 90,
	91, 472, 245, 506, 507, 294, 81, 41, 356, 359,
	508, 467, 586, 305, 319, 313, 340, 332, 473, 509,
	482, 297, 246, 282, 583, 330, 132, 588, 300, 510,
	260, 364, 365, 511, 366, 102, 308, 403, 601, 299,
	512, 599, 104, 587, 79, 466, 51, 44, 255, 328,
	229, 324, 589, 283, 513, 484, 276, 123, 120, 608,
	36, 322, 50, 30, 598, 122, 49, 590, 147, 514,
	591, 515, 368, 347, 577, 48, 369, 261, 516, 84,
	266, 477, 303, 585, 370, 323, 371, 293, 597, 226,
	517, 569, 372, 373, 578, 518, 348, 352, 519, 395,
	374, 615, 52, 520, 521, 579, 121, 522, 78, 592,
	80, 317, 318, 523, 291, 244, 397, 344, 449, 456,
	457, 108, 109, 452, 110, 458, 111, 459, 460, 461,
	450, 112, 105, 451, 462, 463, 345, 346, 113, 464,
	107, 106, 453, 455, 114, 465, 242, 35, 375, 474,
	295, 58, 270, 398, 46, 350, 612, 45, 573, 524,
	576, 343, 339, 446, 53, 525, 526, 527, 528, 468,
	593, 342, 316, 338, 607, 4, 288, 469, 594, 62,
	228, 354, 353, 355, 277, 394, 335, 529, 530, 531,
	249, 82, 532, 325, 21, 533, 534, 376, 284, 535,
	56, 536, 537, 401, 258, 538, 54, 595, 39, 539,
	263, 609, 596, 540, 541, 542, 543, 265, 544, 378,
	545, 377, 349, 351, 272, 379, 476, 546, 304, 321,
	262, 600, 547, 250, 584, 264, 269, 257, 402, 251,
	548, 549, 550, 551, 552, 298, 568, 553, 554, 309,
	602, 447, 43, 555, 556, 557, 558, 559, 292, 287,
	396, 405, 61, 83, 361, 560, 561, 582, 315, 285,
	562, 306, 55, 603, 604, 605, 279, 606, 9, 613,
	614, 470, 381, 124, 289, 290, 47, 336, 271, 563,
	301, 564, 326, 327, 341, 314, 337, 307, 570, 273,
	382, 448, 259, 565, 404, 286, 357, 362, 302, 480,
	278, 383, 581, 479, 334, 331, 280, 566, 384, 234,
	274, 275, 567, 571, 385, 386, 296, 387, 388, 389,
	390, 391, 393, 392, 281, 478, 312, 329, 363, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 445, 232, -76,
	232, -159, -257, 232, -227, 365, -248, 367, 380, 375,
	385, 373, -239, 376, 378, 272, -358, 395, 232, 382,
	220, 368, 377, 386, 387, 296, 393, 388, 392, 281,
	389, 390, 391, -341, 173, 591, 606, 132, 333, 372,
	370, 396, 573, -257, 307, -264, 312, -252, -341, -251,
	310, -159, -82, 569, 224, -266, -266, -105, 573, 575,
	-178, -120, 140, -131, -134, -125, -126, -172, -173, -174,
	-175, -132, -185, 162, 163, 170, 141, -183, -135, 26,
	471, 438, 437, 173, 31, 216, 68, 69, 440, 441,
	143, 57, 413, 414, -133, 408, 415, 410, 467, 466,
	468, 469, 470, 443, 444, 115, 445, 105, 107, 106,
	446, 447, 448, 345, 346, 449, 450, 451, 108, 109,
	110, 111, 112, 113, 114, 452, 455, 453, 454, 456,
	457, 458, 463, 464, 459, 460, 461, 462, 465, -252,
	-257, 237, 407, 231, 168, 436, -127, -123, -8, -181,
	406, 411, 412, 416, 409, -341, -251, -129, -128, -168,
	92, 98, 103, 99, -364, 116, -370, 93, 94, 95,
	96, 97, 117, 118, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 44, 381, 381, -159,
	-76, -76, -76, -76, -193, -103, -195, -10, -8, -370,
	8, -76, -8, -9, -13, -34, -36, 502, -35, -257,
	-200, -215, 12, 158, 42, 50, -198, -199, -12, -8,
	-120, 19, 23, 24, -108, 164, -120, -257, -77, -108,
	-237, 236, -76, -76, -226, -269, 307, -230, 396, 395,
	-253, -228, -252, -250, -227, 394, 225, 23, 481, 139,
	25, 27, 142, 173, 127, 19, 143, 37, 227, 333,
	243, 172, 239, 437, 220, 72, 483, 408, 410, 406,
	413, 439, 440, 407, 367, 31, 13, 485, 28, 253,
	24, 38, 166, 222, 146, 486, 256, 26, 254, 115,
	118, 488, 22, 75, 248, 14, 241, 40, 16, 489,
	490, 17, 237, 236, 158, 233, 70, 11, 216, 29,
	155, 66, 491, 134, 492, 493, 494, 495, 128, 68,
	156, 20, 610, 411, 412, 33, 574, 471, 267, 168,
	73, 59, 575, 140, 409, 496, 497, 116, 498, 119,
	76, 580, 136, 18, 71, 42, 499, 268, 500, 238,
	611, 501, 399, 502, 157, 223, 436, 69, 503, 231,
	380, 8, 442, 32, 252, 240, 126, 67, 504, 232,
	145, 443, 444, 235, 129, 117, 7, 133, 34, 12,
	74, 77, 414, 415, 416, 57, 125, 475, 144, 15,
	505, 400, 138, 132, -308, 156, -294, -298, -252, 247,
	-324, 243, -159, -317, -316, -252, -370, -104, -247, 233,
	241, 240, 133, -345, 136, 289, 407, 231, -51, -52,
	-53, -227, 172, 590, -86, 264, 268, 87, 87, -298,
	-297, -296, -346, 268, 247, -323, -315, 239, 248, -304,
	240, 241, -299, 233, 134, -346, -299, 238, 248, 243,
	247, 268, 268, 124, 268, 124, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 263, -305, 148, -305, 479,
	479, -311, -346, 243, 233, -346, -346, 235, 35, 35,
	-249, -299, 235, 25, -305, -305, -305, -227, 172, -305,
	-305, -305, -305, 276, 276, -305, -305, -305, -305, -305,
	-305, -305, -305, -305, -305, -305, -305, -305, -305, -305,
	-305, -305, 232, -345, -112, 392, 296, 81, -54, 278,
	-37, -159, -247, 233, 234, -345, 265, -159, 217, -159,
	-241, 156, 15, -241, -238, 381, 379, 366, 371, -241,
	-241, -241, -241, 279, 364, -300, 233, 35, 244, 381,
	279, 364, 279, 280, 279, 280, 374, 384, 279, -262,
	14, 158, 407, 369, 373, 272, 232, 273, 234, 383,
	280, -262, 93, -242, 156, 381, 275, -241, -241, -267,
	-370, -253, 333, -341, 576, -267, -267, 32, 90, 235,
	-252, -78, -252, 93, -15, -11, -22, -21, -23, 148,
	-110, 381, -98, 173, 591, 577, 578, 579, 576, 378,
	584, 582, 580, 279, 581, 87, 136, 138, 139, 4,
	-120, 155, -169, 148, 149, 150, 151, 152, 153, 154,
	158, 140, 142, 156, 157, 137, 159, 160, 161, 162,
	163, 164, 165, 167, 166, 168, 169, 172, 218, 219,
	-126, -126, -126, -126, -183, -370, -370, -370, -126, -236,
	-370, -126, -370, -370, -370, -370, -189, -120, -370, -374,
	-370, -374, -374, -284, -370, -284, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, 217, -370,
	-370, -370, -370, -370, -284, -284, -284, -284, -284, 103,
	98, 92, -185, 99, 93, -252, -257, -8, -9, -178,
	-266, -355, -356, -162, -159, -370, 296, -252, -252, 265,
	-198, -12, -8, -193, -199, -195, -8, -76, -96, -109,
	63, 64, -111, 24, 38, 67, 65, 23, -371, 88,
	-371, -215, -371, 87, -36, -219, 86, 61, 43, 93,
	93, 87, 21, -194, -196, -120, 14, -255, 4, -254,
	25, -252, 93, 217, 101, 14, -160, 29, -159, -237,
	-237, 87, 307, -230, -269, -232, -231, 397, 399, 148,
	-256, -252, 93, 31, 88, 87, -159, -273, -276, -278,
	-277, -279, -274, -275, 330, 331, 173, 334, 336, 337,
	338, 339, 340, 341, 342, 343, 344, 347, 32, 255,
	326, 327, 328, 329, 348, 349, 350, 351, 352, 353,
	354, 355, 313, 332, 473, 314, 315, 316, 317, 318,
	319, 321, 322, 323, 324, 325, -344, -341, 86, 88,
	87, -280, 86, -120, -112, 232, -341, 233, 233, 233,
	-76, 436, -305, -305, -305, 263, 19, -44, -41, -331,
	18, -40, -41, 225, 120, 121, 222, 86, -294, 86,
	-303, -344, -341, 86, 134, 238, 133, -302, -299, -302,
	-303, -341, -185, -341, 134, 134, -341, -341, -223, -252,
	-223, -223, 23, -223, 23, -223, 23, 95, -252, -223,
	23, -223, 23, -223, 23, -223, 23, -223, 23, 31,
	78, 79, 80, 31, 82, 83, 84, -185, -341, -341,
	-185, -294, -227, -159, -341, 95, 95, 95, -305, -305,
	95, 93, 93, 93, -305, -305, 95, 93, -259, -257,
	93, 93, -347, 249, 293, 295, 95, 95, 95, 95,
	31, 93, -348, 31, 598, 597, 599, 600, 601, 93,
	95, 31, 95, 31, 95, -252, 86, -159, -118, 283,
	220, 222, 225, 76, 93, 297, 301, 302, 148, 44,
	87, 235, 232, -341, -243, 237, -243, -252, -258, -257,
	-250, 93, -120, -301, 14, 158, -262, -262, -241, -159,
	-301, -262, -241, -159, -241, -241, -241, -241, -262, -262,
	-262, -241, -257, -257, -159, -159, -159, -159, -159, -159,
	-159, -267, -242, -241, 576, 93, -235, 14, 76, -267,
	-267, -265, 310, 344, 570, 571, 572, 87, 475, -152,
	-159, 576, 576, 576, 576, 576, 576, -120, -120, -120,
	-120, 498, -176, 116, 140, 117, 118, -134, -177, -181,
	-183, 100, 158, 142, 156, 157, -125, -126, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -268, -252, 93, 173, -130, -129, 99, -364, -130,
	-106, -108, -120, -120, -341, -252, -106, -106, -120, -102,
	24, 38, -187, -188, 144, -185, -371, -371, 95, 99,
	-102, -367, -102, 164, -120, -120, -102, -252, -252, -95,
	-94, 418, 419, 420, 421, 423, 424, 425, 428, 429,
	433, 434, 417, 435, 422, 427, 430, 431, 432, 426,
	329, -120, -120, -120, -120, -120, -120, -83, -120, 127,
	128, 129, -120, -120, -179, -178, -340, -339, -338, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -107, 24, 38, -106, -253, -258, -250, -106,
	-107, -107, -106, -106, 217, -215, -371, 87, -357, 399,
	400, 574, -260, 268, -259, 25, -179, 93, 14, -221,
	77, -252, -198, -198, 63, 64, 59, -106, -111, -371,
	-35, 25, -217, -252, 62, 93, -285, -227, 356, 357,
	173, -120, -120, 87, -197, 27, 28, -159, -254, 164,
	-258, -159, -222, 268, -159, -137, -139, -140, -141, -162,
	-184, -370, -142, 494, 491, 14, -152, -153, -161, -257,
	-230, -232, 87, 398, 400, 401, 76, 119, -120, -286,
	172, -313, -312, -311, -294, -296, -297, -298, 88, -286,
	-290, 362, 361, -280, -280, -280, -280, -280, -285, -285,
	-285, -285, 86, 86, -280, -280, -280, -280, -288, 86,
	-288, -288, -289, 86, -289, -324, -120, -321, -320, -318,
	-319, 242, 102, 567, 523, 475, 515, 557, 77, -316,
	-197, 95, -371, -118, -244, 237, -322, -319, -341, -341,
	-341, -244, -341, 93, -341, 93, -341, 93, -87, -58,
	-1, 610, 611, 612, 87, 19, -295, -294, -57, 293,
	-327, -328, 268, -323, -317, -303, 134, -302, -303, -303,
	-341, 87, 29, 124, 124, 124, 124, 475, 222, 32,
	-245, 514, 140, 567, 523, -294, -57, -268, 235, -268,
	-268, 93, 93, -240, 606, -152, -114, 285, 148, 274,
	274, 232, 232, 287, -159, 298, 300, 299, 297, 301,
	302, 23, 23, 23, 286, 288, 290, 276, -159, -159,
	-243, 76, -154, -159, 26, -257, -159, -241, -241, -159,
	-241, -241, -159, -252, -98, 399, 87, 475, 22, -99,
	22, -370, 116, 117, 118, -177, -125, -126, -125, 139,
	256, 87, -371, 25, 87, 77, -371, -371, -371, 87,
	14, -106, -190, -188, 146, -120, -371, -371, -371, -120,
	-371, -120, -371, -371, -120, 87, 87, 14, -272, 25,
	-371, -371, -371, -371, -371, -189, -371, 14, 87, 87,
	-371, -371, 87, 87, -371, 87, 87, 87, -337, 87,
	87, 87, 87, -371, -371, -371, -371, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, -371, -371, -106,
	-106, -370, 217, -371, -371, -371, -371, -371, -253, -356,
	573, 400, -166, -165, -163, 74, 236, 75, -370, -259,
	-371, -130, 90, -218, 90, -217, -171, -252, 95, 99,
	-200, -136, -138, 14, -111, -183, 88, 87, -285, -204,
	-209, -238, -252, 93, 173, -287, 173, -287, 356, 357,
	-196, 217, -167, 15, -170, 32, 57, -11, -370, -370,
	32, 87, -155, -157, -156, -158, 66, 70, 72, 67,
	68, 69, 73, -263, 25, -137, -9, -8, -370, -370,
	-370, -159, -152, -372, 14, 77, -372, 87, 217, -231,
	-233, 402, 399, 405, -341, 93, -86, 87, -311, -298,
	-201, -115, 40, -291, 363, -285, 482, -285, -293, 93,
	-293, 95, 95, 88, -47, -42, -43, 33, 81, -318,
	-305, 93, 39, -305, -305, -252, 88, -197, -114, -159,
	140, 76, -322, -322, -322, -257, -2, 609, 615, 134,
	86, 366, 18, -217, 87, 88, -186, 294, 88, -88,
	-252, 88, 86, -303, -303, -252, -370, 232, 31, 31,
	567, 523, 514, -57, -186, -286, -341, 608, 607, 88,
	234, 292, -119, 413, -116, 93, 89, -159, -159, -159,
	-159, -159, 225, 222, -365, 303, -365, 277, 235, -152,
	-159, 87, -81, 251, 246, -262, -262, 33, -159, 399,
	585, 583, -120, 139, 256, -134, -126, -108, 472, -270,
	173, 330, 255, 328, 324, 344, 335, 361, 326, 362,
	323, 322, 321, -270, -268, -120, -120, -193, 147, -120,
	145, -371, -371, -371, -120, -120, -120, -371, 173, 330,
	14, -120, -120, -120, -338, -120, -120, -120, -336, -335,
	-130, -185, -371, -336, -120, -120, -335, -335, -339, -339,
	-339, -339, -339, -178, -178, -178, -178, -371, -371, -107,
	-253, -163, -299, -299, -299, -223, 87, -234, 22, 14,
	57, 57, -136, -167, -137, -111, -252, -207, 569, -212,
	46, -210, -211, 47, -208, 48, 56, -287, -287, 164,
	-198, -120, -224, 76, -225, -229, -185, -180, -182, -181,
	-370, -216, -371, -252, -223, -225, -139, -140, -140, -139,
	-140, 66, 66, 66, 71, 66, 71, 66, -156, -257,
	-371, -371, -9, -9, -120, -260, 77, -137, -137, -161,
	-257, 164, 399, 403, 404, -311, -363, 116, 140, 31,
	76, 359, 102, -361, 172, 511, 562, 567, 523, 515,
	557, -362, 238, 133, 134, 250, 25, 41, 88, 87,
	88, 87, 88, 87, -246, -245, -43, -42, -305, -305,
	95, -341, 93, 93, 234, 26, -159, 76, 76, 76,
	-89, 613, 95, 86, -3, 81, -120, 86, 19, -294,
	-185, -329, -281, -330, -282, -283, -5, -6, -306, -92,
	57, 102, -61, 44, 233, 593, 594, 124, -370, 606,
	-321, -217, -325, -327, -159, -122, -370, -121, -123, -127,
	162, 163, -186, -159, -113, 283, 291, 86, -117, 90,
	-343, 77, 274, 359, 274, -366, 304, 93, -366, -159,
	-81, -47, -159, -241, -241, 33, -341, -371, -134, -126,
	-370, -371, -280, -280, -280, -289, -280, 318, -280, 318,
	-280, -371, -371, 87, -371, 22, -371, -97, 442, -120,
	87, 87, -371, 86, 86, -120, -371, -371, -371, -337,
	87, -371, 87, -371, 87, -271, 568, -371, -371, -371,
	-371, -371, -371, -371, -371, -371, -371, -371, -164, 22,
	-164, -164, -371, 90, -159, -167, -191, 16, -204, 51,
	336, -214, -213, 55, 47, -211, 19, 49, 19, 30,
	-224, 87, 148, 87, -371, -371, 87, 57, 217, -371,
	-167, -150, -149, 76, 77, -151, 76, -149, 66, 66,
	-219, -371, -371, 87, -222, -137, -167, -167, 217, 116,
	-370, -124, -133, -122, 12, 93, 93, -341, -360, 597,
	598, 31, 95, -305, -305, 134, 134, -159, 86, -285,
	93, -285, 95, 95, 31, 82, 83, 84, 31, 78,
	79, 80, -159, -159, -159, -159, -326, 86, 19, -120,
	86, 148, 88, -217, -217, 270, 158, -305, 591, 276,
	276, -305, -305, -305, -91, -90, 613, 88, -371, 87,
	-292, 475, 478, -120, -128, -128, -219, 88, -334, 475,
	-342, -252, -252, -252, -252, 95, 97, -125, -285, -120,
	-120, -198, 93, -120, -120, 95, 95, -371, -371, -336,
	-335, -120, -371, -147, -146, -148, 577, 116, 31, -270,
	-370, 66, 18, 16, -370, -370, -260, -191, -192, 17,
	19, -205, 53, -203, 52, -203, -213, 19, 19, 93,
	19, 93, 134, -229, -120, -182, 57, -11, -252, -180,
	-252, -193, -120, 86, -120, -130, -167, -167, -120, -173,
	467, 466, 468, 469, 470, 445, 105, 107, 106, 446,
	447, 448, 345, 346, 449, 450, 451, 108, 109, 110,
	111, 112, 113, 114, 452, 455, 453, 456, 457, 458,
	463, 464, 459, 460, 461, 462, 465, 93, 93, 86,
	-120, 88, 88, -219, -325, -58, 88, -217, 95, 88,
	271, -181, -370, 93, -305, -305, -305, 95, 95, -259,
	-371, 87, -252, -362, -327, 479, 479, -371, 25, -333,
	-332, -253, 86, 77, -101, 158, 475, -371, -371, -371,
	-371, -371, 88, 88, -371, -371, 87, -371, -146, -148,
	-371, 76, -130, -220, -371, -252, 238, 19, 19, -220,
	-220, -166, -192, -120, -178, -206, 54, 76, 119, 93,
	93, 93, 12, -180, 217, -198, -217, -144, 366, -193,
	-371, -217, 88, 25, 88, 615, 134, 88, -181, -100,
	-370, 267, -259, 93, 93, -90, -93, -11, 87, 148,
	-217, -159, -371, 473, 73, 476, -120, -371, 76, 486,
	577, 87, -371, -371, -371, 76, 119, -225, -252, 88,
	-371, -370, -198, 88, -202, -11, 86, -3, 267, -281,
	-330, -282, -283, -5, -6, -306, -79, 475, -332, -310,
	-253, 93, 95, 88, 62, 474, 477, -337, -252, 238,
	-260, -145, -143, -252, 529, -353, -352, 471, -363, -359,
	116, 140, 102, -361, 567, 523, 125, 126, -79, -120,
	86, -371, -80, 282, 573, -343, 62, -371, -371, 87,
	22, -273, -60, 540, -350, -351, 76, -354, 372, 539,
	560, 116, 93, 88, -217, 243, -334, 475, -143, 536,
	-286, -130, -351, 76, -350, 76, 13, 12, -4, 614,
	88, 284, 476, -59, 26, -144, -349, 251, 246, 249,
	32, -349, 95, -4, 477, 540, 245, 31, 116, -130,
	-147, -146, -146,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1321, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1831, 1831, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1181, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1829, 1, 3,
	69, 73, 0, 0, 0, 56, 1190, 0, 76, 0,
	0, 831, 0, 829, 0, 1304, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1306, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1208, 153, 1322, 1319, 1320, 38, 39,
	40, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 0, 1298,
	0, 686, 929, 0, 748, 748, 0, 748, 748, 748,
	748, 0, 0, 0, 698, 0, 0, 0, 0, 745,
	0, 714, 715, 0, 745, 0, 721, 751, 0, 726,
	748, 748, 729, 1832, 0, 1832, 1832, 1289, 0, 742,
	740, 754, 755, 758, 762, 0, 767, 770, 1315, 1316,
	0, 785, 47, 1562, 777, 790, 791, 0, 823, 824,
	43, 1026, 0, 951, 956, 967, 980, 981, 982, 983,
	984, 986, 987, 0, 0, 0, 0, 992, 993, 0,
	0, 0, 0, 0, 1007, 0, 0, 0, 0, 0,
	1162, 0, 1125, 1125, 1043, 1125, 1127, 1127, 1482, 1516,
	1640, 1648, 1752, 0, 0, 0, 1828, 1603, 1611, 1612,
	1634, 1722, 1772, 1607, 1608, 1589, 1601, 1604, 1592, 1593,
	1595, 1597, 1602, 1609, 1615, 1594, 1614, 1613, 0, 1590,
	1591, 1596, 1606, 1610, 1598, 1599, 1600, 1605, 1616, 1171,
	0, 0, 0, 0, 0, 0, 273, 274, 1025, 1278,
	1127, 1127, 1127, 1127, 1127, -2, -2, 219, 220, 221,
	222, 223, 224, 225, 0, 215, 0, 278, 279, 275,
	276, 277, 1009, 1010, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 1831, 0, 800, 0,
	0, 0, 0, 0, 1190, 0, 1182, 1181, 61, 0,
	827, -2, 0, 0, 0, 0, 45, 0, 50, 888,
	75, 74, 1230, 0, 0, 0, 57, 1191, 65, 67,
	1192, 0, 832, 833, 0, 864, 868, 0, 828, 0,
	0, 1305, 1304, 1304, 100, 0, 1768, 1282, -2, -2,
	0, 0, 1317, 1318, 1291, -2, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, -2, 0, 0, 165, 166, 0, 41,
	404, 0, 161, 0, 397, 338, 0, 1208, 0, 0,
	0, 0, 0, 827, 0, 1299, 142, 143, 150, 151,
	152, 377, 377, 377, 549, 0, 0, 153, 153, 508,
	509, 510, 0, 0, -2, 402, 0, 488, 0, 0,
	391, 391, 395, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 378, 0, 547,
	548, 440, 0, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 1307, 1308, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1221, 0, 0, 0, -2, 0,
	678, 0, 0, 0, 1300, 1300, 0, 685, 0, 687,
	688, 0, 0, 689, 0, 745, 745, 743, 744, 691,
	692, 693, 694, 748, 0, 0, 386, 387, 388, 745,
	748, 0, 748, 748, 748, 748, 745, 745, 745, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	751, 748, 0, 722, 0, 723, 724, 727, 728, 730,
	1833, 1834, 1338, 1832, 1832, 734, 738, 1290, 760, 768,
	771, 788, 786, 787, 789, 781, 782, 783, 784, 0,
	802, 803, 808, 0, 0, 0, 0, 814, 815, 816,
	0, 0, 819, 820, 821, 0, 0, 0, 0, 0,
	949, 0, 0, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 989, 990, 991, 994, 0, 0, 0, 999, 1000,
	0, 0, 0, 0, 0, 837, 0, 1163, 0, 1041,
	0, 1042, 1044, 1045, 0, 1046, 837, 837, 0, 0,
	837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 847, 0, 0,
	847, 847, 0, 0, 208, 209, 210, 211, 212, 226,
	227, 228, 229, 230, 280, 1171, 0, 1025, 0, 0,
	44, 792, 793, 0, 912, 1310, 0, 0, 843, 0,
	55, 64, 66, 1190, 59, 1190, 0, 849, 0, 0,
	-2, -2, 850, 856, 857, 858, 859, 860, 52, 1830,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 350,
	1233, 0, 0, 1183, 1184, 1187, 0, 865, 1646, 869,
	0, 871, 872, 0, 830, 0, 98, 0, 928, 0,
	0, 0, 1768, 1288, 0, 102, 103, 0, 0, 0,
	361, 1293, 1294, 1295, -2, 384, 0, 361, 345, 288,
	289, 290, 338, 292, 338, 338, 338, 338, 350, 350,
	350, 350, 321, 322, 323, 324, 325, 0, 0, 307,
	338, 338, 338, 338, 328, 329, 330, 331, 332, 333,
	334, 335, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 340, 340, 340, 342, 342, 0, 42, 0, 365,
	0, 1187, 0, 0, 1221, 1302, 1312, 0, 0, 0,
	1302, 120, 0, 0, 0, 550, 584, 502, 538, 551,
	0, 505, 506, -2, 0, 0, 487, 0, 489, 0,
	385, 0, -2, 0, 395, 0, 391, 395, 392, 395,
	383, 396, 528, 529, 530, 0, 532, 533, 614, 898,
	0, 0, 0, 0, 0, 620, 621, 622, 0, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 489, 0, 535, 0, 441, 442, 443, 0, 0,
	446, 447, 448, 449, 0, 0, 452, 453, 454, 915,
	916, 455, 456, 481, 482, 483, 457, 458, 459, 460,
	461, 462, 463, 475, 476, 477, 478, 479, 480, 464,
	465, 466, 467, 468, 469, 472, 0, 135, 1212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1300, 0, 0, 0, 0, 846, 930, 1323,
	1324, 749, 750, 0, 389, 390, 748, 748, 695, 735,
	0, 748, 699, 736, 700, 702, 701, 703, 716, 717,
	748, 706, 746, 747, 707, 708, 709, 710, 711, 712,
	713, 731, 718, 719, 720, 752, 0, 756, 757, 732,
	733, 0, 769, 773, 774, 775, 776, 0, 0, 805,
	94, 810, 811, 812, 813, 825, 818, 1027, 946, 947,
	948, 0, 950, 953, 0, 1011, 1013, 955, 957, 1022,
	1023, 1024, 0, 0, 0, 0, 0, 961, 965, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 985, 1141, 1142, 1143, 1002, 281, 282, 0, 1003,
	0, 862, 0, 0, 0, 1001, 0, 0, 0, 0,
	838, 839, 1169, 1166, 0, 0, 1126, 1128, 0, 0,
	0, 0, 0, 861, 0, 0, 0, 0, 0, 0,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1144, 0, 0, 0, 0, 0, 1162, 0, 1004,
	1005, 1006, 0, 0, 0, 1311, 0, 130, 131, 0,
	0, 0, 0, 0, 1098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 1172, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 795, 796,
	798, 0, 932, 0, 913, 0, 0, 801, 0, 842,
	0, 845, 58, 60, 854, 855, 0, 873, 851, 54,
	49, 0, 0, 890, 1231, 350, 1253, 0, 359, 359,
	356, 1193, 1194, 0, 1186, 1188, 1189, 77, 870, 866,
	0, 944, 0, 0, 927, 0, 876, 878, 879, 880,
	910, 0, 883, 0, 0, 0, 0, 0, 96, 929,
	1283, 101, 0, 0, 106, 107, 1284, 1285, 1286, 1287,
	0, 573, -2, 436, 167, 169, 170, 171, 162, -2,
	348, 346, 347, 291, 350, 350, 315, 316, 317, 318,
	319, 320, 0, 0, 308, 309, 310, 311, 302, 0,
	303, 304, 305, 0, 306, 403, 0, 1195, 366, 367,
	369, 377, 0, 372, 373, 0, 377, 377, 0, 398,
	399, 0, 1187, 1212, 0, 0, 0, 1313, 1312, 1312,
	1312, 0, 155, 156, 157, 158, 159, 160, 609, 0,
	0, 585, 607, 608, 153, 0, 0, 163, 491, 490,
	0, 641, 0, 401, 0, 0, 395, 395, 380, 381,
	531, 0, 0, 616, 617, 618, 619, 0, 0, 0,
	518, 430, 0, 519, 520, 489, 491, 361, 0, 444,
	445, 450, 451, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 565, 566, 567, 493,
	571, 568, 493, 572, 1209, 1210, 1211, 0, 0, 679,
	0, 0, 427, 92, 1301, 684, 745, 705, 737, 745,
	697, 704, 725, 765, 809, 0, 0, 0, 0, 817,
	0, 0, 954, 1012, 1014, 958, 0, 962, 966, 0,
	0, 0, 0, 0, 0, 0, 1008, 1032, 1033, 0,
	0, 1181, 0, 1167, 0, 0, 1040, 1129, 1130, 0,
	1048, 0, 1050, 1051, 0, 0, 0, 0, 0, 0,
	1057, 1058, 1059, 1060, 1061, 0, 1063, 0, 0, 0,
	1067, 1068, 0, 0, 1069, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 1082, 1083, 1084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1095, 1028, 0,
	0, 847, 0, 1131, 1132, 1133, 1134, 1135, 1172, 794,
	797, 799, 886, 933, 934, 0, 0, 0, 0, 914,
	1309, 840, 841, 844, -2, 0, 0, 1174, 0, 0,
	873, 944, 874, 0, 852, 51, 889, 0, 1235, 1234,
	1247, 1260, 359, 359, 353, 354, 360, 355, 357, 358,
	1185, 0, 1190, 0, 1271, 0, 0, 1263, 0, 0,
	0, 0, 0, 0, 0, 0, 917, 0, 0, 920,
	0, 0, 0, 0, 911, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 90, 91, 0, 0, 0, 104,
	105, 0, 0, 111, 362, 363, 144, 153, 438, 168,
	411, 0, 0, 287, 349, 312, 313, 314, 0, 336,
	0, 0, 0, 432, 116, 1199, 1198, 377, 377, 368,
	0, 371, 0, 0, 0, 1314, 339, 400, 0, 134,
	0, 0, 0, 0, 0, 140, 579, 0, 0, 586,
	0, 0, 0, 500, 0, 511, 512, 0, 613, -2,
	675, 365, 0, 379, 382, 899, 0, 0, 513, 0,
	516, 517, 431, 491, 522, 523, 536, 473, 474, 471,
	0, 0, 1222, 1223, 1228, 1226, 1227, 121, 557, 559,
	558, 562, 0, 0, 495, 0, 495, 555, 0, 427,
	1195, 0, 683, 428, 429, 748, 748, 804, 95, 0,
	807, 0, 0, 0, 0, 959, 963, 863, 0, 0,
	338, 338, 1149, 338, 342, 1152, 338, 1154, 338, 1157,
	338, 1160, 1161, 0, 0, 0, 0, 1164, 1039, 1170,
	0, 1047, 1049, 1052, 0, 0, 0, 1056, 0, 0,
	0, 0, 0, 0, 132, 133, 1098, 0, 0, 1100,
	1102, 1103, 1073, 1099, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1029, 1030, 0,
	1173, 935, 940, 940, 940, 0, 0, 0, 1296, 1297,
	1175, 1176, 944, 1177, 875, 853, 891, 1253, 0, 1246,
	0, -2, 1255, 0, 0, 0, 1261, 351, 352, 867,
	78, 945, 81, 0, 1271, 1279, 0, 1262, 1273, 1275,
	0, 0, 0, 1267, 0, 944, 877, 906, 908, 0,
	903, 918, 919, 921, 0, 923, 0, 925, 926, 888,
	882, 884, 0, 0, 0, 98, 0, 944, 944, 97,
	0, 931, 108, 109, 110, 437, 172, 177, 0, 0,
	0, 182, 0, 184, 0, 0, 0, 189, 190, 377,
	377, 412, 0, 284, 286, 0, 0, 175, 350, 0,
	350, 0, 343, 0, 413, 433, 1196, 1197, 0, 0,
	370, 374, 375, 376, 0, 1303, 136, 0, 0, 0,
	582, 0, 610, 0, 0, 0, 0, 0, 0, 164,
	492, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	0, 377, 0, 0, 0, 377, 377, 377, 0, 667,
	364, 0, 0, 638, 635, 514, 0, 213, 214, 216,
	0, 0, 521, 888, 1213, 1214, 1215, 0, 1225, 1229,
	124, 0, 0, 0, 0, 569, 0, 494, 570, 680,
	681, 682, 93, 690, 696, 806, 826, 952, 960, 964,
	0, 996, 1147, 350, 1150, 1151, 1153, 1155, 1156, 1158,
	1159, 997, 998, 0, 1035, 0, 1037, 1190, 0, 1168,
	0, 0, 1055, 0, 0, 0, 1064, 1065, 1066, 0,
	0, 1072, 0, 1074, 0, 0, 0, 1085, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1031, 0, 0,
	0, 0, 912, -2, 62, 1177, 1179, 0, 1240, 1238,
	1238, 1248, 1249, 0, 0, 1256, 0, 0, 0, 0,
	82, 0, 0, 0, 1276, 0, 0, 0, 0, 99,
	1181, 900, 907, 0, 0, 901, 0, 902, 922, 924,
	881, -2, 885, 0, 944, 944, 88, 89, 0, 178,
	0, 180, 206, 207, 0, 183, 185, 186, 187, 193,
	194, 195, 188, 0, 0, 283, 285, 0, 0, 326,
	337, 327, 0, 0, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 888, 137, 138, 139, 574, 0, 584, 0,
	0, 0, 577, 0, 503, 0, 0, 0, 377, 377,
	377, 0, 0, 0, 0, 652, 0, 0, 615, 0,
	623, 0, 0, 0, 217, 218, 0, 1224, 556, 0,
	122, 123, 0, 0, 561, 496, 497, 1136, 1148, 0,
	0, 0, 1165, 0, 0, 0, 0, 1062, 1070, 0,
	1101, 0, 1077, 0, 0, 0, 604, 605, 0, 1097,
	0, 941, 0, 0, 0, 0, 932, 1179, 80, 0,
	0, 1243, 0, 1236, 1239, 1237, 1250, 0, 0, 1257,
	0, 1259, 0, 1280, 1281, 1274, 0, 1266, 1269, 1265,
	1268, 1190, 904, 0, 909, 0, 1181, 87, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 0,
	0, 341, 344, 0, 0, 0, 575, 0, 587, 578,
	0, 665, 0, 669, 0, 0, 0, 672, 673, 674,
	651, 0, 655, 405, 639, 636, 637, 515, 0, 125,
	126, 0, 0, 0, 0, 0, 0, 1034, 1036, 1038,
	1053, 1054, 1145, 1146, 1071, 1075, 0, 1078, 0, 0,
	1079, 0, 606, 0, 937, 894, 895, 942, 943, 0,
	0, 887, 79, 1180, 1178, 1232, 0, 1241, 1242, 1251,
	1252, 1258, 0, 1264, 0, 85, 0, 0, 0, 1190,
	179, 0, 198, 0, 583, 0, 586, 576, 663, 664,
	0, 676, 668, 670, 671, 653, -2, 1216, 0, 0,
	0, 563, 995, 0, 0, 0, 1098, 1080, 0, 602,
	603, 0, 936, 938, 939, 1244, 1245, 1272, 1270, 905,
	912, 0, 86, 418, 411, 1216, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 553, 1218, 127, 128,
	484, 485, 486, 121, 1137, 0, 1140, 0, 896, 897,
	588, 0, 590, 0, -2, 406, 419, 0, 173, 199,
	200, 0, 0, 203, 204, 205, 196, 197, 117, 0,
	0, 677, 0, 1219, 1220, 124, 1138, 1076, 589, 0,
	0, 361, 0, 599, 407, 408, 0, 414, 415, 416,
	417, 201, 202, 611, 0, 0, 560, 0, 591, 592,
	600, 0, 409, 0, 410, 0, 0, 0, 580, 0,
	611, 1217, 0, 0, 601, 597, 420, 422, 423, 0,
	0, 421, 612, 581, 1139, 0, 424, 425, 426, 593,
	594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	86, 88, 164, 162, 87, 163, 217, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 616,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:539
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:544
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:549
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:585
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:595
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:599
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:604
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:608
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:614
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:620
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:626
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:630
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:639
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:649
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:655
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:808
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:814
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:832
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:856
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:860
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:884
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:889
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:894
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:904
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:908
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:914
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:918
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:927
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:939
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:949
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:953
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:959
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:963
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:967
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:973
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:977
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:981
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:985
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:991
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:995
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1001
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1014
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1023
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1027
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1043
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1053
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1058
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1063
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1069
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1074
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1089
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1095
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1099
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1111
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1118
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1125
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1130
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1135
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1140
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1147
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1154
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1165
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1176
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1182
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1186
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1190
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1208
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1212
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1218
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1222
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1228
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1232
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1238
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1242
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1248
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1252
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1258
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1268
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1273
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1282
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1306
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1315
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1341
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1353
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1358
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1383
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1396
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1401
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1407
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1413
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1417
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1423
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1427
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1431
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1437
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1441
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1446
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1450
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1455
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1477
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1510
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1514
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1524
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1531
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1541
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1545
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1549
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1553
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1557
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1561
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1565
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1570
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1574
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1578
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1582
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1586
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1767
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1771
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1775
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1781
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1785
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1789
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1795
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1799
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1806
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1810
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1814
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1818
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2055
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2060
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2064
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2072
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2076
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2082
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2090
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2098
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2103
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2107
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2158
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2177
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2186
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2192
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2202
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2206
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2211
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2215
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2219
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2223
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2227
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2231
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2237
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2247
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2251
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2255
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2259
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2263
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2301
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2330
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2334
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2340
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2344
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2350
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2354
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2360
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2364
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2370
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2376
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2380
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2384
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2388
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2392
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2401
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2407
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2413
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2419
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2423
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2427
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2432
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2436
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2442
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2448
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2454
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2458
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2462
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2466
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2470
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2489
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2498
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2502
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2511
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2517
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2525
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2531
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2541
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2545
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2549
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2553
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2557
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2561
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2565
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2569
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2573
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2577
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2581
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2585
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2589
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2712
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2716
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2725
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2743
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2747
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2756
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2760
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2764
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2772
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2778
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2782
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2792
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2796
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2800
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2804
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2808
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2812
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2816
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2820
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2824
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2828
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2838
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2842
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2846
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2850
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2854
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2858
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2862
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2866
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2916
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2920
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2968
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2975
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2982
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2989
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2995
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3005
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3012
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3041
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3045
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3062
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3076
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3094
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3108
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3156
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3165
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3173
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3182
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3189
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3201
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3210
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3225
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3230
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3239
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3243
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3249
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3255
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3261
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3271
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3275
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3281
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3287
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3293
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3299
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3305
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3309
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3313
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3317
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3323
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3329
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3335
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3339
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3343
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3349
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3353
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3358
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3362
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3367
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3371
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3377
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3381
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3385
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3389
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3393
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3397
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3401
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3405
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3409
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3413
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3417
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3421
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3425
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3429
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3433
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3437
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3441
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3445
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3449
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3453
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3457
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3466
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3480
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3495
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3499
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3504
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3509
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3514
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3519
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3524
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3530
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3536
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3541
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3547
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3553
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3557
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3563
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3568
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3572
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3577
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3582
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3587
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3592
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3598
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3604
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3611
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3618
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3625
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3633
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3637
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3643
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3649
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3655
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3661
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3667
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3673
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3685
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3701
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3707
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3711
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3744
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3756
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3764
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3768
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3772
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3776
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3784
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3979
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3995
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3999
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4003
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4013
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4017
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4027
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4033
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4037
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4098
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4101
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4118
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4122
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4126
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4130
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4134
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4138
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4215
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4219
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4225
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4231
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4235
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4239
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4243
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4261
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4281
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4301
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4372
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4382
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4428
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4432
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4444
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4453
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4472
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4477
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4485
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4489
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4493
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL StarExpr
//line sql.y:4529
		{
			yyLOCAL = StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4535
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4539
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4545
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4549
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4553
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4557
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4562
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4570
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4582
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4586
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4592
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4598
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4602
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4612
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4616
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4620
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4624
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4630
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4634
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4640
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4644
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4653
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4659
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4669
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4673
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4679
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4683
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4687
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4691
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4697
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4701
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4714
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4718
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4722
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4726
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4732
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4734
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4738
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4744
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4746
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4749
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4754
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4762
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4769
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4775
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4779
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4783
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4789
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4795
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4799
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4803
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4807
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4813
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4817
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4827
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4856
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4862
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4866
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4872
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4876
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4880
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4884
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4889
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4893
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4897
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4901
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4918
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4922
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4926
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4930
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4934
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5041
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5045
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5057
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5169
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5173
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5177
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5183
		{
			yyVAL.str = ""
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5193
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5197
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5204
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5208
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5212
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5216
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5222
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5226
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5230
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5234
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5238
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5242
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5246
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5252
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5256
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5260
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5267
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5273
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5277
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &Avg{Arg: yyDollar[4].exprUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &CountStar{Star: yyDollar[3].starExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &Count{Arg: yyDollar[4].exprUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &Max{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &Min{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &Sum{Arg: yyDollar[4].exprUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5467
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5507
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5511
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5515
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5580
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5589
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5595
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5599
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5605
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5609
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5615
		{
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5617
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5621
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5625
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5629
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5633
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5637
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5641
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5645
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5649
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5653
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5657
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5663
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5667
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5671
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5675
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5679
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5683
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5687
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5691
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5695
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5750
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5754
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5758
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5762
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5766
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5772
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5776
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5780
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5790
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5794
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5800
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5804
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5808
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5812
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5816
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5822
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5826
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5830
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5834
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5838
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5842
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5846
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5850
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5854
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5858
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5873
		{
			yyVAL.str = string("")
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5883
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5887
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5893
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5908
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5912
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5916
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5945
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5963
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5969
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5975
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5979
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5985
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5990
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5994
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5998
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6007
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6013
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6017
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6021
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6030
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6034
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6038
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6042
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6049
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6053
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6057
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6061
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6067
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6071
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6075
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6079
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6084
		{
			yyVAL.str = ""
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6088
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6092
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6101
		{
			yyVAL.str = ""
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6111
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6115
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6120
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6124
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6129
		{
			yyVAL.str = "cascaded"
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6133
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6137
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6146
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6152
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6158
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6164
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6173
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6177
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6182
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6186
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6192
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6196
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6202
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6206
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6210
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6215
		{
			yyVAL.str = ""
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6219
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6223
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6228
		{
			yyVAL.str = ""
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6232
		{
			yyVAL.str = " header"
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6237
		{
			yyVAL.str = ""
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6241
		{
			yyVAL.str = " manifest on"
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6245
		{
			yyVAL.str = " manifest off"
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6250
		{
			yyVAL.str = ""
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6254
		{
			yyVAL.str = " overwrite on"
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6258
		{
			yyVAL.str = " overwrite off"
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6264
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6269
		{
			yyVAL.str = ""
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6273
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6279
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6283
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6289
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6293
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6298
		{
			yyVAL.str = ""
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6302
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6308
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6312
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6318
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6322
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6326
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6331
		{
			yyVAL.str = ""
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6335
		{
			yyVAL.str = " optionally"
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6348
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6352
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6356
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6360
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6364
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6370
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6374
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6378
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6382
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6391
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6397
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6401
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6407
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6411
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6417
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6432
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6436
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6442
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6448
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6452
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6458
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6462
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6466
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6470
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6474
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6482
		{
			yyVAL.str = "charset"
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6521
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6524
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6526
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6529
		{
			yyVAL.empty = struct{}{}
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6531
		{
			yyVAL.empty = struct{}{}
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6533
		{
			yyVAL.empty = struct{}{}
		}
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6537
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6546
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6551
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6553
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6557
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6563
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6567
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6574
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6580
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6584
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6590
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6594
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6601
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7130
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7139
		{
			decNesting(yylex)
		}
	case 1831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7144
		{
			skipToEnd(yylex)
		}
	case 1832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7149
		{
			skipToEnd(yylex)
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7153
		{
			skipToEnd(yylex)
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7157
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
