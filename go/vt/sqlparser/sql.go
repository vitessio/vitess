// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const KILL = 57472
const EMPTY_FROM_CLAUSE = 57473
const LOWER_THAN_CHARSET = 57474
const CHARSET = 57475
const UNIQUE = 57476
const KEY = 57477
const EXPRESSION_PREC_SETTER = 57478
const OR = 57479
const XOR = 57480
const AND = 57481
const NOT = 57482
const BETWEEN = 57483
const CASE = 57484
const WHEN = 57485
const THEN = 57486
const ELSE = 57487
const END = 57488
const LE = 57489
const GE = 57490
const NE = 57491
const NULL_SAFE_EQUAL = 57492
const IS = 57493
const LIKE = 57494
const REGEXP = 57495
const RLIKE = 57496
const IN = 57497
const ASSIGNMENT_OPT = 57498
const SHIFT_LEFT = 57499
const SHIFT_RIGHT = 57500
const DIV = 57501
const MOD = 57502
const UNARY = 57503
const COLLATE = 57504
const BINARY = 57505
const UNDERSCORE_ARMSCII8 = 57506
const UNDERSCORE_ASCII = 57507
const UNDERSCORE_BIG5 = 57508
const UNDERSCORE_BINARY = 57509
const UNDERSCORE_CP1250 = 57510
const UNDERSCORE_CP1251 = 57511
const UNDERSCORE_CP1256 = 57512
const UNDERSCORE_CP1257 = 57513
const UNDERSCORE_CP850 = 57514
const UNDERSCORE_CP852 = 57515
const UNDERSCORE_CP866 = 57516
const UNDERSCORE_CP932 = 57517
const UNDERSCORE_DEC8 = 57518
const UNDERSCORE_EUCJPMS = 57519
const UNDERSCORE_EUCKR = 57520
const UNDERSCORE_GB18030 = 57521
const UNDERSCORE_GB2312 = 57522
const UNDERSCORE_GBK = 57523
const UNDERSCORE_GEOSTD8 = 57524
const UNDERSCORE_GREEK = 57525
const UNDERSCORE_HEBREW = 57526
const UNDERSCORE_HP8 = 57527
const UNDERSCORE_KEYBCS2 = 57528
const UNDERSCORE_KOI8R = 57529
const UNDERSCORE_KOI8U = 57530
const UNDERSCORE_LATIN1 = 57531
const UNDERSCORE_LATIN2 = 57532
const UNDERSCORE_LATIN5 = 57533
const UNDERSCORE_LATIN7 = 57534
const UNDERSCORE_MACCE = 57535
const UNDERSCORE_MACROMAN = 57536
const UNDERSCORE_SJIS = 57537
const UNDERSCORE_SWE7 = 57538
const UNDERSCORE_TIS620 = 57539
const UNDERSCORE_UCS2 = 57540
const UNDERSCORE_UJIS = 57541
const UNDERSCORE_UTF16 = 57542
const UNDERSCORE_UTF16LE = 57543
const UNDERSCORE_UTF32 = 57544
const UNDERSCORE_UTF8 = 57545
const UNDERSCORE_UTF8MB4 = 57546
const UNDERSCORE_UTF8MB3 = 57547
const INTERVAL = 57548
const WINDOW_EXPR = 57549
const JSON_EXTRACT_OP = 57550
const JSON_UNQUOTE_EXTRACT_OP = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const FLUSH = 57558
const CHANGE = 57559
const MODIFY = 57560
const DEALLOCATE = 57561
const REVERT = 57562
const QUERIES = 57563
const SCHEMA = 57564
const TABLE = 57565
const INDEX = 57566
const VIEW = 57567
const TO = 57568
const IGNORE = 57569
const IF = 57570
const PRIMARY = 57571
const COLUMN = 57572
const SPATIAL = 57573
const FULLTEXT = 57574
const KEY_BLOCK_SIZE = 57575
const CHECK = 57576
const INDEXES = 57577
const ACTION = 57578
const CASCADE = 57579
const CONSTRAINT = 57580
const FOREIGN = 57581
const NO = 57582
const REFERENCES = 57583
const RESTRICT = 57584
const SHOW = 57585
const DESCRIBE = 57586
const EXPLAIN = 57587
const DATE = 57588
const ESCAPE = 57589
const REPAIR = 57590
const OPTIMIZE = 57591
const TRUNCATE = 57592
const COALESCE = 57593
const EXCHANGE = 57594
const REBUILD = 57595
const PARTITIONING = 57596
const REMOVE = 57597
const PREPARE = 57598
const EXECUTE = 57599
const MAXVALUE = 57600
const PARTITION = 57601
const REORGANIZE = 57602
const LESS = 57603
const THAN = 57604
const PROCEDURE = 57605
const TRIGGER = 57606
const VINDEX = 57607
const VINDEXES = 57608
const DIRECTORY = 57609
const NAME = 57610
const UPGRADE = 57611
const STATUS = 57612
const VARIABLES = 57613
const WARNINGS = 57614
const CASCADED = 57615
const DEFINER = 57616
const OPTION = 57617
const SQL = 57618
const UNDEFINED = 57619
const SEQUENCE = 57620
const MERGE = 57621
const TEMPORARY = 57622
const TEMPTABLE = 57623
const INVOKER = 57624
const SECURITY = 57625
const FIRST = 57626
const AFTER = 57627
const LAST = 57628
const VITESS_MIGRATION = 57629
const CANCEL = 57630
const RETRY = 57631
const LAUNCH = 57632
const COMPLETE = 57633
const CLEANUP = 57634
const THROTTLE = 57635
const UNTHROTTLE = 57636
const EXPIRE = 57637
const RATIO = 57638
const VITESS_THROTTLER = 57639
const BEGIN = 57640
const START = 57641
const TRANSACTION = 57642
const COMMIT = 57643
const ROLLBACK = 57644
const SAVEPOINT = 57645
const RELEASE = 57646
const WORK = 57647
const CONSISTENT = 57648
const SNAPSHOT = 57649
const BIT = 57650
const TINYINT = 57651
const SMALLINT = 57652
const MEDIUMINT = 57653
const INT = 57654
const INTEGER = 57655
const BIGINT = 57656
const INTNUM = 57657
const REAL = 57658
const DOUBLE = 57659
const FLOAT_TYPE = 57660
const FLOAT4_TYPE = 57661
const FLOAT8_TYPE = 57662
const DECIMAL_TYPE = 57663
const NUMERIC = 57664
const TIME = 57665
const TIMESTAMP = 57666
const DATETIME = 57667
const YEAR = 57668
const CHAR = 57669
const VARCHAR = 57670
const BOOL = 57671
const CHARACTER = 57672
const VARBINARY = 57673
const NCHAR = 57674
const TEXT = 57675
const TINYTEXT = 57676
const MEDIUMTEXT = 57677
const LONGTEXT = 57678
const BLOB = 57679
const TINYBLOB = 57680
const MEDIUMBLOB = 57681
const LONGBLOB = 57682
const JSON = 57683
const JSON_SCHEMA_VALID = 57684
const JSON_SCHEMA_VALIDATION_REPORT = 57685
const ENUM = 57686
const GEOMETRY = 57687
const POINT = 57688
const LINESTRING = 57689
const POLYGON = 57690
const GEOMCOLLECTION = 57691
const GEOMETRYCOLLECTION = 57692
const MULTIPOINT = 57693
const MULTILINESTRING = 57694
const MULTIPOLYGON = 57695
const ASCII = 57696
const UNICODE = 57697
const NULLX = 57698
const AUTO_INCREMENT = 57699
const APPROXNUM = 57700
const SIGNED = 57701
const UNSIGNED = 57702
const ZEROFILL = 57703
const PURGE = 57704
const BEFORE = 57705
const CODE = 57706
const COLLATION = 57707
const COLUMNS = 57708
const DATABASES = 57709
const ENGINES = 57710
const EVENT = 57711
const EXTENDED = 57712
const FIELDS = 57713
const FULL = 57714
const FUNCTION = 57715
const GTID_EXECUTED = 57716
const KEYSPACES = 57717
const OPEN = 57718
const PLUGINS = 57719
const PRIVILEGES = 57720
const PROCESSLIST = 57721
const SCHEMAS = 57722
const TABLES = 57723
const TRIGGERS = 57724
const USER = 57725
const VGTID_EXECUTED = 57726
const VITESS_KEYSPACES = 57727
const VITESS_METADATA = 57728
const VITESS_MIGRATIONS = 57729
const VITESS_REPLICATION_STATUS = 57730
const VITESS_SHARDS = 57731
const VITESS_TABLETS = 57732
const VITESS_TARGET = 57733
const VSCHEMA = 57734
const VITESS_THROTTLED_APPS = 57735
const NAMES = 57736
const GLOBAL = 57737
const SESSION = 57738
const ISOLATION = 57739
const LEVEL = 57740
const READ = 57741
const WRITE = 57742
const ONLY = 57743
const REPEATABLE = 57744
const COMMITTED = 57745
const UNCOMMITTED = 57746
const SERIALIZABLE = 57747
const ADDDATE = 57748
const CURRENT_TIMESTAMP = 57749
const DATABASE = 57750
const CURRENT_DATE = 57751
const CURDATE = 57752
const DATE_ADD = 57753
const DATE_SUB = 57754
const NOW = 57755
const SUBDATE = 57756
const CURTIME = 57757
const CURRENT_TIME = 57758
const LOCALTIME = 57759
const LOCALTIMESTAMP = 57760
const CURRENT_USER = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const SYSDATE = 57765
const DAY = 57766
const DAY_HOUR = 57767
const DAY_MICROSECOND = 57768
const DAY_MINUTE = 57769
const DAY_SECOND = 57770
const HOUR = 57771
const HOUR_MICROSECOND = 57772
const HOUR_MINUTE = 57773
const HOUR_SECOND = 57774
const MICROSECOND = 57775
const MINUTE = 57776
const MINUTE_MICROSECOND = 57777
const MINUTE_SECOND = 57778
const MONTH = 57779
const QUARTER = 57780
const SECOND = 57781
const SECOND_MICROSECOND = 57782
const YEAR_MONTH = 57783
const WEEK = 57784
const SQL_TSI_DAY = 57785
const SQL_TSI_WEEK = 57786
const SQL_TSI_HOUR = 57787
const SQL_TSI_MINUTE = 57788
const SQL_TSI_MONTH = 57789
const SQL_TSI_QUARTER = 57790
const SQL_TSI_SECOND = 57791
const SQL_TSI_MICROSECOND = 57792
const SQL_TSI_YEAR = 57793
const REPLACE = 57794
const CONVERT = 57795
const CAST = 57796
const SUBSTR = 57797
const SUBSTRING = 57798
const SEPARATOR = 57799
const TIMESTAMPADD = 57800
const TIMESTAMPDIFF = 57801
const WEIGHT_STRING = 57802
const LTRIM = 57803
const RTRIM = 57804
const TRIM = 57805
const JSON_ARRAY = 57806
const JSON_OBJECT = 57807
const JSON_QUOTE = 57808
const JSON_DEPTH = 57809
const JSON_TYPE = 57810
const JSON_LENGTH = 57811
const JSON_VALID = 57812
const JSON_ARRAY_APPEND = 57813
const JSON_ARRAY_INSERT = 57814
const JSON_INSERT = 57815
const JSON_MERGE = 57816
const JSON_MERGE_PATCH = 57817
const JSON_MERGE_PRESERVE = 57818
const JSON_REMOVE = 57819
const JSON_REPLACE = 57820
const JSON_SET = 57821
const JSON_UNQUOTE = 57822
const COUNT = 57823
const AVG = 57824
const MAX = 57825
const MIN = 57826
const SUM = 57827
const GROUP_CONCAT = 57828
const BIT_AND = 57829
const BIT_OR = 57830
const BIT_XOR = 57831
const STD = 57832
const STDDEV = 57833
const STDDEV_POP = 57834
const STDDEV_SAMP = 57835
const VAR_POP = 57836
const VAR_SAMP = 57837
const VARIANCE = 57838
const ANY_VALUE = 57839
const REGEXP_INSTR = 57840
const REGEXP_LIKE = 57841
const REGEXP_REPLACE = 57842
const REGEXP_SUBSTR = 57843
const ExtractValue = 57844
const UpdateXML = 57845
const GET_LOCK = 57846
const RELEASE_LOCK = 57847
const RELEASE_ALL_LOCKS = 57848
const IS_FREE_LOCK = 57849
const IS_USED_LOCK = 57850
const LOCATE = 57851
const POSITION = 57852
const ST_GeometryCollectionFromText = 57853
const ST_GeometryFromText = 57854
const ST_LineStringFromText = 57855
const ST_MultiLineStringFromText = 57856
const ST_MultiPointFromText = 57857
const ST_MultiPolygonFromText = 57858
const ST_PointFromText = 57859
const ST_PolygonFromText = 57860
const ST_GeometryCollectionFromWKB = 57861
const ST_GeometryFromWKB = 57862
const ST_LineStringFromWKB = 57863
const ST_MultiLineStringFromWKB = 57864
const ST_MultiPointFromWKB = 57865
const ST_MultiPolygonFromWKB = 57866
const ST_PointFromWKB = 57867
const ST_PolygonFromWKB = 57868
const ST_AsBinary = 57869
const ST_AsText = 57870
const ST_Dimension = 57871
const ST_Envelope = 57872
const ST_IsSimple = 57873
const ST_IsEmpty = 57874
const ST_GeometryType = 57875
const ST_X = 57876
const ST_Y = 57877
const ST_Latitude = 57878
const ST_Longitude = 57879
const ST_EndPoint = 57880
const ST_IsClosed = 57881
const ST_Length = 57882
const ST_NumPoints = 57883
const ST_StartPoint = 57884
const ST_PointN = 57885
const ST_Area = 57886
const ST_Centroid = 57887
const ST_ExteriorRing = 57888
const ST_InteriorRingN = 57889
const ST_NumInteriorRings = 57890
const ST_NumGeometries = 57891
const ST_GeometryN = 57892
const ST_LongFromGeoHash = 57893
const ST_PointFromGeoHash = 57894
const ST_LatFromGeoHash = 57895
const ST_GeoHash = 57896
const ST_AsGeoJSON = 57897
const ST_GeomFromGeoJSON = 57898
const MATCH = 57899
const AGAINST = 57900
const BOOLEAN = 57901
const LANGUAGE = 57902
const WITH = 57903
const QUERY = 57904
const EXPANSION = 57905
const WITHOUT = 57906
const VALIDATION = 57907
const UNUSED = 57908
const ARRAY = 57909
const BYTE = 57910
const CUME_DIST = 57911
const DESCRIPTION = 57912
const DENSE_RANK = 57913
const EMPTY = 57914
const EXCEPT = 57915
const FIRST_VALUE = 57916
const GROUPING = 57917
const GROUPS = 57918
const JSON_TABLE = 57919
const LAG = 57920
const LAST_VALUE = 57921
const LATERAL = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const OF = 57926
const OVER = 57927
const PERCENT_RANK = 57928
const RANK = 57929
const RECURSIVE = 57930
const ROW_NUMBER = 57931
const SYSTEM = 57932
const WINDOW = 57933
const ACTIVE = 57934
const ADMIN = 57935
const AUTOEXTEND_SIZE = 57936
const BUCKETS = 57937
const CLONE = 57938
const COLUMN_FORMAT = 57939
const COMPONENT = 57940
const DEFINITION = 57941
const ENFORCED = 57942
const ENGINE_ATTRIBUTE = 57943
const EXCLUDE = 57944
const FOLLOWING = 57945
const GET_MASTER_PUBLIC_KEY = 57946
const HISTOGRAM = 57947
const HISTORY = 57948
const INACTIVE = 57949
const INVISIBLE = 57950
const LOCKED = 57951
const MASTER_COMPRESSION_ALGORITHMS = 57952
const MASTER_PUBLIC_KEY_PATH = 57953
const MASTER_TLS_CIPHERSUITES = 57954
const MASTER_ZSTD_COMPRESSION_LEVEL = 57955
const NESTED = 57956
const NETWORK_NAMESPACE = 57957
const NOWAIT = 57958
const NULLS = 57959
const OJ = 57960
const OLD = 57961
const OPTIONAL = 57962
const ORDINALITY = 57963
const ORGANIZATION = 57964
const OTHERS = 57965
const PARTIAL = 57966
const PATH = 57967
const PERSIST = 57968
const PERSIST_ONLY = 57969
const PRECEDING = 57970
const PRIVILEGE_CHECKS_USER = 57971
const PROCESS = 57972
const RANDOM = 57973
const REFERENCE = 57974
const REQUIRE_ROW_FORMAT = 57975
const RESOURCE = 57976
const RESPECT = 57977
const RESTART = 57978
const RETAIN = 57979
const REUSE = 57980
const ROLE = 57981
const SECONDARY = 57982
const SECONDARY_ENGINE = 57983
const SECONDARY_ENGINE_ATTRIBUTE = 57984
const SECONDARY_LOAD = 57985
const SECONDARY_UNLOAD = 57986
const SIMPLE = 57987
const SKIP = 57988
const SRID = 57989
const THREAD_PRIORITY = 57990
const TIES = 57991
const UNBOUNDED = 57992
const VCPU = 57993
const VISIBLE = 57994
const RETURNING = 57995
const FORMAT_BYTES = 57996
const FORMAT_PICO_TIME = 57997
const PS_CURRENT_THREAD_ID = 57998
const PS_THREAD_ID = 57999
const GTID_SUBSET = 58000
const GTID_SUBTRACT = 58001
const WAIT_FOR_EXECUTED_GTID_SET = 58002
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58003
const FORMAT = 58004
const TREE = 58005
const VITESS = 58006
const TRADITIONAL = 58007
const VTEXPLAIN = 58008
const VEXPLAIN = 58009
const PLAN = 58010
const LOCAL = 58011
const LOW_PRIORITY = 58012
const NO_WRITE_TO_BINLOG = 58013
const LOGS = 58014
const ERROR = 58015
const GENERAL = 58016
const HOSTS = 58017
const OPTIMIZER_COSTS = 58018
const USER_RESOURCES = 58019
const SLOW = 58020
const CHANNEL = 58021
const RELAY = 58022
const EXPORT = 58023
const CURRENT = 58024
const ROW = 58025
const ROWS = 58026
const AVG_ROW_LENGTH = 58027
const CONNECTION = 58028
const CHECKSUM = 58029
const DELAY_KEY_WRITE = 58030
const ENCRYPTION = 58031
const ENGINE = 58032
const INSERT_METHOD = 58033
const MAX_ROWS = 58034
const MIN_ROWS = 58035
const PACK_KEYS = 58036
const PASSWORD = 58037
const FIXED = 58038
const DYNAMIC = 58039
const COMPRESSED = 58040
const REDUNDANT = 58041
const COMPACT = 58042
const ROW_FORMAT = 58043
const STATS_AUTO_RECALC = 58044
const STATS_PERSISTENT = 58045
const STATS_SAMPLE_PAGES = 58046
const STORAGE = 58047
const MEMORY = 58048
const DISK = 58049
const PARTITIONS = 58050
const LINEAR = 58051
const RANGE = 58052
const LIST = 58053
const SUBPARTITION = 58054
const SUBPARTITIONS = 58055
const HASH = 58056

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 159,
	732, 159,
	-2, 167,
	-1, 53,
	136, 167,
	178, 167,
	347, 167,
	-2, 523,
	-1, 61,
	36, 772,
	241, 772,
	252, 772,
	287, 786,
	288, 786,
	-2, 774,
	-1, 66,
	243, 810,
	-2, 808,
	-1, 122,
	240, 1585,
	-2, 133,
	-1, 124,
	1, 160,
	732, 160,
	-2, 167,
	-1, 135,
	137, 408,
	246, 408,
	-2, 512,
	-1, 154,
	136, 167,
	178, 167,
	347, 167,
	-2, 532,
	-1, 733,
	164, 41,
	-2, 45,
	-1, 939,
	87, 1602,
	-2, 1456,
	-1, 940,
	87, 1603,
	223, 1607,
	-2, 1457,
	-1, 941,
	223, 1606,
	-2, 42,
	-1, 1024,
	60, 884,
	-2, 899,
	-1, 1111,
	251, 43,
	256, 43,
	-2, 419,
	-1, 1196,
	1, 580,
	732, 580,
	-2, 167,
	-1, 1498,
	223, 1607,
	-2, 1457,
	-1, 1707,
	60, 885,
	-2, 904,
	-1, 1708,
	60, 886,
	-2, 905,
	-1, 1759,
	136, 167,
	178, 167,
	347, 167,
	-2, 458,
	-1, 1840,
	137, 408,
	246, 408,
	-2, 512,
	-1, 1849,
	251, 44,
	256, 44,
	-2, 420,
	-1, 2286,
	223, 1611,
	-2, 1605,
	-1, 2287,
	223, 1607,
	-2, 1603,
	-1, 2387,
	136, 167,
	178, 167,
	347, 167,
	-2, 459,
	-1, 2394,
	26, 188,
	-2, 190,
	-1, 2847,
	78, 98,
	88, 98,
	-2, 963,
	-1, 2916,
	707, 696,
	-2, 670,
	-1, 3123,
	50, 1553,
	-2, 1547,
	-1, 3937,
	707, 696,
	-2, 684,
	-1, 4024,
	90, 628,
	95, 628,
	105, 628,
	180, 628,
	181, 628,
	182, 628,
	183, 628,
	184, 628,
	185, 628,
	186, 628,
	187, 628,
	188, 628,
	189, 628,
	190, 628,
	191, 628,
	192, 628,
	193, 628,
	194, 628,
	195, 628,
	196, 628,
	197, 628,
	198, 628,
	199, 628,
	200, 628,
	201, 628,
	202, 628,
	203, 628,
	204, 628,
	205, 628,
	206, 628,
	207, 628,
	208, 628,
	209, 628,
	210, 628,
	211, 628,
	212, 628,
	213, 628,
	214, 628,
	215, 628,
	216, 628,
	217, 628,
	218, 628,
	219, 628,
	220, 628,
	221, 628,
	-2, 1974,
}

const yyPrivate = 57344

const yyLast = 55379

var yyAct = [...]int{
	955, 3599, 3600, 87, 3598, 4099, 3918, 4003, 3273, 4112,
	943, 4067, 4066, 1263, 950, 1968, 942, 2080, 3550, 2384,
	3991, 3902, 4022, 3233, 3175, 3182, 3238, 3401, 3827, 3235,
	2092, 2315, 1261, 3234, 1762, 3136, 3232, 2023, 3237, 3236,
	5, 3224, 3900, 3537, 3076, 2317, 3253, 3968, 737, 2743,
	2458, 3140, 3190, 3252, 3137, 3446, 3440, 3637, 2979, 2339,
	3124, 2807, 904, 903, 764, 2355, 3255, 2421, 908, 2881,
	1722, 42, 2961, 1818, 732, 2913, 2426, 3279, 2446, 1073,
	2882, 2489, 2883, 2358, 3432, 3466, 1022, 163, 87, 2372,
	1119, 2832, 2360, 41, 2813, 1041, 1019, 2799, 1143, 2783,
	1865, 2282, 2238, 43, 2359, 2115, 1709, 1022, 2270, 2237,
	3134, 2031, 2076, 2467, 2445, 2953, 1847, 149, 2428, 2347,
	1106, 2874, 1083, 2506, 1101, 1751, 2849, 1731, 2362, 1688,
	100, 2820, 1510, 2119, 2051, 1437, 2335, 1422, 104, 105,
	1964, 731, 1854, 1080, 747, 3139, 1077, 2443, 1112, 1081,
	1946, 2417, 1107, 1108, 1021, 1109, 1025, 2418, 1750, 1058,
	1736, 1060, 1031, 3632, 2188, 1494, 2146, 1040, 2127, 1470,
	3890, 2022, 2781, 107, 2340, 1043, 1028, 742, 2283, 85,
	1252, 1026, 1975, 127, 167, 125, 1813, 1839, 132, 99,
	1017, 1027, 126, 1192, 734, 133, 905, 1053, 1029, 93,
	741, 98, 4100, 3538, 1259, 1238, 1514, 2460, 2461, 2462,
	2460, 3221, 1519, 3953, 84, 2904, 106, 1048, 1052, 2504,
	722, 2936, 2935, 3530, 4049, 1931, 1438, 1123, 1016, 2969,
	1034, 2970, 3949, 735, 3948, 2038, 667, 128, 3493, 3954,
	1074, 134, 1148, 2037, 1684, 2036, 2035, 2034, 2033, 1156,
	1145, 2312, 2313, 2006, 1208, 725, 4043, 726, 2551, 2779,
	3603, 3120, 4070, 1162, 1163, 1164, 3603, 1167, 1168, 1169,
	1170, 2493, 2809, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1035, 1068, 1122, 723, 1067, 1209, 1454, 1433, 3080, 2,
	1020, 1018, 3927, 1098, 95, 2906, 1042, 4105, 1097, 128,
	1096, 1149, 1152, 1153, 1090, 2492, 4053, 1095, 4051, 727,
	3243, 1085, 4122, 1716, 707, 4065, 701, 95, 707, 3243,
	95, 4090, 4104, 3240, 1448, 3949, 3406, 3405, 2929, 3903,
	909, 4052, 1165, 4050, 111, 112, 113, 3602, 116, 2054,
	2744, 122, 1015, 3602, 191, 2043, 3298, 661, 3823, 1066,
	1070, 907, 95, 3822, 3543, 1147, 1146, 3544, 1099, 720,
	721, 4080, 2926, 701, 3833, 4047, 3241, 128, 3562, 1010,
	1011, 1012, 1013, 1424, 86, 3241, 1024, 86, 3551, 959,
	960, 961, 959, 960, 961, 3992, 4000, 2486, 3832, 2085,
	4027, 3318, 3247, 1828, 701, 1066, 1070, 907, 2823, 3172,
	3173, 3247, 2379, 2380, 1055, 1056, 698, 86, 2858, 3171,
	2560, 2857, 2780, 3561, 2859, 2015, 2016, 1752, 2968, 1753,
	2557, 4032, 1451, 2824, 1452, 1453, 3650, 2378, 2952, 4004,
	1233, 1234, 1444, 1228, 1008, 1436, 1007, 3919, 2491, 4030,
	701, 2907, 1094, 1229, 1201, 1202, 1256, 2870, 4036, 4037,
	3275, 2437, 95, 1222, 683, 95, 1216, 3192, 3193, 3306,
	1216, 1217, 2397, 2396, 4031, 1217, 3304, 681, 701, 1215,
	2549, 1214, 2816, 2817, 2431, 2558, 1204, 715, 1971, 3014,
	2018, 86, 3932, 2112, 88, 95, 701, 701, 701, 719,
	2014, 713, 1438, 3874, 3280, 3875, 1191, 1748, 2954, 1921,
	1092, 1434, 1692, 2914, 4071, 4008, 3244, 678, 4008, 2468,
	2939, 2343, 2314, 3268, 2507, 3244, 693, 4102, 1952, 1947,
	1249, 3269, 2980, 1254, 1471, 4072, 1237, 702, 2956, 2343,
	1166, 688, 1231, 1232, 1235, 1423, 1197, 1230, 3532, 3531,
	2530, 691, 3276, 1922, 1236, 1923, 3295, 1223, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1480, 1479, 1481, 1482, 95,
	2527, 1255, 2528, 2512, 2529, 1172, 3191, 3277, 1171, 2509,
	2552, 2553, 2555, 2554, 702, 1059, 3807, 2471, 3194, 3528,
	1695, 2104, 2093, 2094, 2095, 2096, 2106, 2097, 2098, 2099,
	2111, 2107, 2100, 2101, 2108, 2109, 2110, 2102, 2103, 2105,
	1448, 2511, 3607, 1102, 2356, 702, 2982, 1103, 4123, 668,
	1103, 670, 684, 1141, 704, 1972, 703, 674, 2513, 672,
	676, 685, 677, 2430, 671, 1140, 682, 1832, 1093, 673,
	686, 687, 690, 694, 695, 696, 692, 689, 3443, 680,
	705, 1142, 4044, 2510, 3015, 1139, 2943, 2944, 1138, 3194,
	1137, 702, 2519, 2515, 2517, 2518, 2516, 2520, 2521, 4077,
	1136, 1135, 1134, 1078, 1129, 1078, 1114, 1965, 1115, 1069,
	1063, 1061, 2444, 3214, 1054, 2957, 2992, 2991, 2990, 702,
	1078, 2984, 2497, 2988, 1076, 2983, 2496, 2981, 1260, 1961,
	1260, 1260, 2986, 1425, 3527, 1159, 3079, 702, 702, 702,
	1151, 2985, 2938, 2341, 2342, 1826, 1114, 1825, 1444, 1824,
	1150, 2924, 4045, 1962, 1822, 1069, 1063, 1061, 665, 2987,
	2989, 2341, 2342, 1749, 660, 3915, 1443, 1440, 1441, 1442,
	1447, 1449, 1446, 1955, 1445, 1953, 1954, 2908, 1956, 1957,
	1022, 1495, 1500, 1501, 1439, 1504, 1506, 1507, 1508, 1509,
	3480, 1512, 1513, 1515, 1515, 3462, 1515, 1515, 1520, 1520,
	1520, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1250, 1492, 3926, 1100, 1645, 2905, 1647,
	1648, 1649, 1650, 1651, 1416, 1417, 1933, 1932, 1934, 1935,
	1936, 1520, 1520, 1520, 1520, 1520, 1520, 956, 3601, 3491,
	3492, 2490, 1415, 706, 3601, 3560, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	956, 1132, 1213, 956, 699, 2872, 3444, 1496, 2558, 1130,
	1505, 89, 1195, 94, 1062, 4035, 94, 1685, 1432, 700,
	4006, 2434, 3389, 4006, 1212, 2928, 1218, 1219, 1220, 1221,
	1516, 3296, 1517, 1518, 1226, 2559, 1203, 1488, 1489, 1490,
	1491, 1521, 1522, 1200, 3245, 3246, 94, 1502, 1485, 1485,
	1257, 1258, 4005, 3245, 3246, 4005, 3178, 3249, 1853, 4034,
	1062, 2435, 2941, 1715, 2784, 2786, 3249, 2488, 2433, 2927,
	1691, 2854, 1443, 1440, 1441, 1442, 1447, 1449, 1446, 1022,
	1445, 2819, 2951, 1022, 1682, 2950, 4116, 2756, 1089, 1022,
	1439, 1091, 1245, 124, 1247, 2960, 2088, 3088, 1121, 1740,
	1646, 3179, 2436, 1486, 1487, 3087, 2155, 1206, 2814, 1683,
	1951, 666, 2432, 2385, 1485, 1482, 1690, 3170, 1716, 1465,
	94, 2583, 2128, 1253, 1037, 3181, 1477, 1478, 1480, 1479,
	1481, 1482, 1244, 1246, 2973, 2572, 2129, 1239, 1121, 2056,
	1976, 3000, 119, 3176, 3940, 2897, 1144, 1699, 3523, 3456,
	1133, 1703, 2120, 2057, 1483, 1484, 2055, 1021, 1131, 4081,
	1158, 3192, 3193, 2508, 1211, 2027, 1958, 1852, 3177, 1094,
	1190, 1754, 1452, 1453, 2963, 663, 1683, 1701, 1702, 2962,
	1453, 104, 105, 1652, 1653, 1654, 1655, 1656, 1657, 2120,
	1094, 2592, 1086, 2485, 3646, 1009, 1689, 2583, 3498, 1088,
	1087, 1120, 3183, 3497, 2147, 2475, 1862, 1861, 1851, 2149,
	2483, 1676, 1132, 2154, 2150, 120, 107, 2151, 2152, 2153,
	1130, 4073, 2148, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 1121, 2785, 1194, 2480, 4124, 1079, 1242, 1225,
	2480, 1120, 1243, 3481, 1033, 1697, 1124, 1114, 1092, 1845,
	1227, 1126, 1248, 4118, 1121, 1127, 1125, 1829, 1830, 1831,
	1948, 2963, 1949, 2487, 1454, 1950, 2962, 2126, 1855, 1855,
	3191, 1700, 1121, 1941, 2484, 2589, 1718, 1241, 1698, 2482,
	1970, 1916, 3194, 1838, 3970, 1240, 1196, 1686, 1977, 1721,
	1867, 3908, 1868, 1898, 1870, 1872, 1857, 1018, 1876, 1878,
	1880, 1882, 1884, 1020, 1121, 3815, 3814, 4114, 1210, 1260,
	4115, 3805, 4113, 1745, 1746, 2045, 2047, 2048, 2564, 2565,
	2566, 1856, 3573, 4125, 1906, 1907, 1454, 3572, 3505, 3971,
	1912, 1913, 1939, 1928, 1454, 1120, 3909, 1940, 1821, 1193,
	2046, 1114, 1117, 1118, 3557, 1078, 3558, 1454, 2588, 1111,
	1115, 3504, 1835, 1836, 1716, 1093, 2275, 1120, 1848, 3494,
	1834, 2125, 1124, 1114, 959, 960, 961, 1126, 3222, 2619,
	1110, 1127, 1125, 3210, 2879, 1120, 1093, 1157, 2878, 1859,
	2877, 1154, 3272, 1704, 1475, 1476, 1477, 1478, 1480, 1479,
	1481, 1482, 1128, 2440, 1902, 1942, 1938, 1927, 3180, 1471,
	1451, 1926, 1452, 1453, 1966, 1925, 1894, 1120, 1924, 1897,
	1914, 1899, 1908, 1114, 1117, 1118, 1905, 1078, 4086, 1716,
	1904, 1111, 1115, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1480, 1479, 1481, 1482, 1903, 1874, 1696, 3488, 707, 707,
	1097, 128, 1096, 1419, 1454, 2861, 707, 2456, 2455, 1095,
	1827, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1479,
	1481, 1482, 1451, 1748, 1452, 1453, 1725, 1982, 2348, 2349,
	1451, 3002, 1452, 1453, 4074, 1260, 1260, 2454, 2453, 3935,
	1978, 1979, 1454, 1451, 3934, 1452, 1453, 3912, 1454, 87,
	2004, 3911, 87, 1454, 1983, 1471, 2452, 2451, 1467, 3910,
	1468, 1990, 1991, 1992, 2805, 4101, 1716, 1454, 3928, 1471,
	2579, 2972, 1726, 2003, 1469, 1483, 1484, 1466, 1454, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1480, 1479, 1481, 1482,
	3841, 1454, 190, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1480, 1479, 1481, 1482, 1473, 1474, 1475, 1476, 1477, 1478,
	1480, 1479, 1481, 1482, 4061, 1716, 129, 42, 1450, 1716,
	42, 2083, 2083, 2081, 2081, 2084, 4084, 1716, 101, 172,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1456, 1980, 102,
	1451, 2581, 1452, 1453, 3810, 1984, 3794, 1986, 1987, 1988,
	1989, 2580, 2049, 95, 1993, 3793, 2275, 110, 2805, 3999,
	2272, 2112, 4014, 1716, 3840, 1454, 2005, 3645, 109, 2274,
	108, 3643, 2863, 2805, 3978, 4012, 1716, 3798, 1451, 103,
	1452, 1453, 3569, 954, 1451, 169, 1452, 1453, 170, 1451,
	101, 1452, 1453, 2166, 1716, 1682, 1681, 103, 3184, 2805,
	3974, 102, 3188, 1451, 1680, 1452, 1453, 1679, 2629, 3187,
	3502, 189, 3961, 1716, 1451, 3487, 1452, 1453, 1450, 1716,
	1683, 110, 3281, 2028, 3278, 85, 3213, 1451, 85, 1452,
	1453, 2053, 109, 3212, 108, 3541, 3925, 3797, 1716, 2011,
	2012, 3818, 1716, 3189, 2805, 3806, 1454, 2888, 3185, 4010,
	1716, 1454, 2875, 3186, 3541, 1716, 1716, 2058, 1678, 2104,
	2093, 2094, 2095, 2096, 2106, 2097, 2098, 2099, 2111, 2107,
	2100, 2101, 2108, 2109, 2110, 2102, 2103, 2105, 2805, 3539,
	2286, 2087, 2285, 2059, 2540, 2061, 2062, 2063, 2064, 2065,
	2066, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2539, 2284,
	2502, 1451, 1716, 1452, 1453, 2501, 2114, 2116, 2338, 1454,
	2480, 1716, 1496, 2130, 2131, 2132, 2133, 3460, 1716, 1471,
	2627, 2271, 2320, 2060, 103, 173, 2007, 2144, 2165, 2121,
	1471, 1716, 2571, 1973, 179, 3887, 1716, 1199, 1937, 1205,
	1929, 2631, 1207, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1480, 1479, 1481, 1482, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1480, 1479, 1481, 1482, 1919, 2364, 2180, 2711, 1716,
	2289, 2290, 1915, 1454, 2286, 1911, 2353, 3203, 3202, 1471,
	3200, 3201, 1451, 1716, 1452, 1453, 1910, 1451, 1909, 1452,
	1453, 1729, 1727, 2284, 1716, 3198, 3199, 1427, 104, 105,
	2273, 1454, 2394, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1480, 1479, 1481, 1482, 2850, 2178, 3198, 3197, 2801, 104,
	105, 2829, 1716, 1454, 1251, 2189, 3549, 2052, 2558, 2937,
	1817, 2918, 1454, 103, 2366, 2915, 2331, 1454, 1083, 2911,
	2912, 2850, 2805, 2804, 2893, 1451, 2288, 1452, 1453, 2291,
	2292, 2585, 1716, 2403, 2404, 2405, 2406, 1728, 164, 2821,
	2389, 2398, 1454, 2399, 2400, 2401, 2402, 2388, 1454, 1034,
	2828, 1083, 2393, 1454, 2086, 1716, 2319, 2851, 2370, 2409,
	2410, 2411, 2412, 1817, 1816, 3885, 1716, 2853, 2325, 3455,
	2326, 2585, 3165, 2307, 2821, 2262, 2263, 2264, 2265, 2266,
	2423, 2392, 2558, 2333, 2851, 2330, 1450, 3882, 1716, 1451,
	1454, 1452, 1453, 2469, 2558, 2429, 3864, 1716, 2351, 3135,
	1454, 3431, 1716, 1760, 1759, 2829, 3457, 2375, 2376, 2374,
	3455, 2829, 2481, 2391, 2390, 3966, 1454, 1451, 3939, 1452,
	1453, 1454, 1068, 2805, 2466, 1067, 3424, 1716, 2829, 109,
	2309, 3410, 3421, 1716, 1123, 3200, 2189, 3836, 2439, 1451,
	1454, 1452, 1453, 3108, 1855, 2377, 3455, 2585, 1451, 1454,
	1452, 1453, 2711, 1451, 2616, 1452, 1453, 3506, 2615, 2480,
	2424, 1454, 2420, 2463, 2413, 2415, 2416, 2438, 2474, 2346,
	2480, 2477, 2442, 2478, 3475, 2450, 1720, 2494, 1451, 1454,
	1452, 1453, 2310, 2086, 1451, 4075, 1452, 1453, 1454, 1451,
	2029, 1452, 1453, 2013, 2473, 2424, 2476, 2472, 1450, 1122,
	3419, 1716, 1960, 1747, 1105, 3381, 1716, 1454, 3507, 3508,
	3509, 1454, 2495, 4040, 1890, 2498, 190, 1104, 3981, 2499,
	2500, 1454, 3829, 1023, 3379, 1716, 1451, 2909, 1452, 1453,
	1717, 1719, 4096, 3375, 1716, 1723, 1451, 3795, 1452, 1453,
	129, 3657, 151, 3522, 2563, 3372, 1716, 3519, 3500, 3323,
	3322, 1819, 1451, 172, 1452, 1453, 2505, 1451, 1454, 1452,
	1453, 2422, 3225, 3370, 1716, 1891, 1892, 1893, 1506, 1454,
	1506, 2885, 3368, 1716, 3270, 165, 1451, 1454, 1452, 1453,
	3227, 3223, 177, 2919, 162, 1451, 2575, 1452, 1453, 2419,
	150, 3366, 1716, 1454, 1195, 3364, 1716, 1451, 2414, 1452,
	1453, 95, 2286, 2533, 2285, 3362, 1716, 2408, 2407, 169,
	1744, 1944, 170, 1850, 1846, 1451, 1815, 1452, 1453, 121,
	3274, 2578, 3830, 185, 1451, 2437, 1452, 1453, 2323, 1761,
	4094, 1841, 1842, 161, 160, 189, 3467, 3468, 4068, 3947,
	3510, 3869, 3426, 1451, 3470, 1452, 1453, 1451, 2009, 1452,
	1453, 2548, 3219, 3360, 1716, 1886, 3218, 1451, 2884, 1452,
	1453, 3358, 1716, 3217, 3135, 2556, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 3356, 1716, 2898,
	2534, 3473, 184, 186, 187, 188, 1454, 3511, 3512, 3513,
	2567, 1724, 1454, 3157, 1451, 3472, 1452, 1453, 3158, 3154,
	2053, 3153, 1887, 1888, 1889, 1451, 2885, 1452, 1453, 1454,
	2010, 3943, 1900, 1451, 3461, 1452, 1453, 3831, 2834, 2837,
	2838, 2839, 2835, 1454, 2836, 2840, 2337, 2329, 3155, 1451,
	3113, 1452, 1453, 3156, 3112, 1454, 155, 1843, 158, 3907,
	1840, 1454, 156, 157, 3636, 3125, 3127, 1945, 1454, 173,
	3451, 2568, 2591, 2570, 3128, 3627, 1454, 3626, 179, 3448,
	3313, 3638, 2573, 3122, 2574, 1454, 1959, 3447, 1006, 1454,
	3354, 1716, 2889, 1038, 2542, 2543, 3352, 1716, 1454, 2545,
	1981, 1039, 1454, 2576, 2868, 2755, 1161, 1985, 2546, 3196,
	1160, 2569, 1454, 3350, 1716, 1418, 1454, 3289, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 3625, 2625, 3348, 1716, 3159,
	101, 2838, 2839, 2884, 2966, 1454, 2925, 2787, 129, 3346,
	1716, 102, 1451, 2128, 1452, 1453, 1716, 3453, 1451, 103,
	1452, 1453, 3344, 1716, 1454, 1022, 2083, 2129, 2081, 2790,
	3342, 1716, 2348, 2349, 101, 1451, 4110, 1452, 1453, 3328,
	1716, 103, 3215, 3311, 1716, 102, 2826, 2827, 1454, 1451,
	2537, 1452, 1453, 3923, 2788, 2364, 2776, 1716, 1022, 2846,
	4019, 1451, 2598, 1452, 1453, 3924, 3422, 1451, 3825, 1452,
	1453, 3802, 164, 3195, 1451, 2842, 1452, 1453, 2334, 2613,
	1046, 1047, 1451, 2825, 1452, 1453, 2052, 2526, 2806, 2774,
	1716, 1451, 1454, 1452, 1453, 1451, 1454, 1452, 1453, 2525,
	2524, 2523, 2522, 3433, 1451, 1454, 1452, 1453, 1451, 3524,
	1452, 1453, 2562, 3895, 42, 108, 3894, 3872, 1451, 1454,
	1452, 1453, 1451, 2843, 1452, 1453, 2845, 2815, 2802, 1689,
	2778, 1454, 2749, 1716, 110, 109, 1454, 3644, 2844, 3642,
	3641, 1451, 1454, 1452, 1453, 109, 3633, 108, 1683, 2871,
	2873, 2798, 3441, 2791, 1454, 2793, 103, 3634, 3111, 3520,
	1451, 1454, 1452, 1453, 2818, 2864, 3110, 3452, 159, 2803,
	3611, 2848, 2923, 3450, 3228, 1454, 2726, 1716, 2464, 1454,
	2718, 1716, 1833, 2032, 1451, 1045, 1452, 1453, 2852, 2709,
	1716, 4097, 2821, 2855, 110, 110, 2429, 4098, 4097, 3,
	2865, 2862, 1454, 2707, 1716, 109, 109, 108, 2934, 2123,
	2801, 3016, 1454, 4098, 2124, 2694, 1716, 1454, 2617, 2887,
	2876, 2880, 2321, 1454, 2890, 2891, 2692, 1716, 1451, 1741,
	1452, 1453, 1451, 1733, 1452, 1453, 2886, 1454, 2690, 1716,
	3913, 1451, 3486, 1452, 1453, 2688, 1716, 114, 115, 1454,
	2184, 2894, 2899, 2900, 2901, 1451, 2895, 1452, 1453, 2686,
	1716, 2931, 1036, 2684, 1716, 2026, 97, 1451, 10, 1452,
	1453, 1838, 1451, 1, 1452, 1453, 152, 1014, 1451, 153,
	1452, 1453, 2920, 2921, 1454, 1421, 2682, 1716, 1454, 1420,
	1451, 2910, 1452, 1453, 2976, 2977, 3387, 1451, 2930, 1452,
	1453, 2680, 1716, 2024, 3490, 1454, 9, 2678, 1716, 165,
	1454, 1451, 4029, 1452, 1453, 1451, 177, 1452, 1453, 679,
	2025, 2676, 1716, 8, 2311, 1687, 4069, 1454, 4025, 2993,
	2268, 2955, 4026, 2674, 1716, 2958, 2974, 1454, 1451, 1930,
	1452, 1453, 1920, 3552, 2236, 3826, 1454, 3231, 1451, 2470,
	1452, 1453, 3518, 1451, 2427, 1452, 1453, 185, 1113, 1451,
	2301, 1452, 1453, 154, 2386, 2387, 3994, 1454, 2672, 1716,
	118, 1454, 3383, 1451, 1071, 1452, 1453, 1717, 2308, 117,
	1116, 2997, 1224, 2932, 2994, 1451, 2465, 1452, 1453, 2670,
	1716, 3542, 2869, 2395, 2668, 1716, 1766, 1454, 1764, 1765,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 3320, 2332, 1454, 1763, 1768, 184, 186, 187, 188,
	1451, 3319, 1452, 1453, 1451, 1767, 1452, 1453, 3297, 2618,
	2666, 1716, 3018, 3388, 2017, 3074, 714, 2964, 2841, 708,
	2965, 1451, 192, 1452, 1453, 1755, 1451, 1734, 1452, 1453,
	3402, 2664, 1716, 1155, 669, 2662, 1716, 3204, 2503, 675,
	2978, 1503, 2008, 1451, 3109, 1452, 1453, 2856, 2995, 1065,
	1057, 2322, 2792, 1451, 1064, 1452, 1453, 3803, 3143, 3092,
	2350, 3316, 1451, 3083, 1452, 1453, 3081, 3445, 2354, 3121,
	2357, 3123, 2364, 2032, 3009, 2808, 2975, 2660, 1716, 1454,
	2271, 3126, 2271, 1451, 3054, 1452, 1453, 1451, 3119, 1452,
	1453, 3906, 3635, 3979, 2441, 3142, 2866, 87, 1730, 2996,
	2364, 2364, 2364, 2364, 2364, 1454, 3409, 3064, 3065, 3066,
	3067, 3068, 2590, 1451, 2118, 1452, 1453, 1493, 2363, 3606,
	2364, 2044, 3092, 2364, 739, 738, 3082, 3091, 3084, 1451,
	1454, 1452, 1453, 736, 3147, 2794, 1454, 2822, 1970, 1457,
	2366, 1454, 1714, 1710, 944, 3104, 3105, 3106, 2782, 3164,
	1742, 2833, 3103, 2831, 2830, 3116, 2535, 1711, 3107, 2273,
	2371, 2273, 3469, 2655, 1716, 1025, 3114, 3465, 2366, 2366,
	2366, 2366, 2366, 4021, 2365, 3129, 3130, 2361, 2800, 3117,
	1454, 895, 2327, 2328, 1713, 894, 1712, 3248, 2366, 2772,
	1026, 2366, 748, 3149, 3150, 740, 3152, 3256, 3146, 730,
	1027, 3115, 3160, 3166, 3148, 893, 3167, 3151, 1454, 104,
	105, 892, 1454, 3168, 2771, 1451, 1454, 1452, 1453, 3483,
	2767, 3174, 3257, 2940, 3271, 2651, 1716, 2942, 1454, 3056,
	2867, 3058, 3205, 3267, 3207, 3206, 1454, 1435, 1706, 724,
	1084, 1451, 3294, 1452, 1453, 3930, 2561, 3069, 3070, 3071,
	3072, 3317, 1705, 3208, 3209, 1454, 3937, 3239, 3132, 3258,
	3259, 3229, 3536, 3220, 2766, 3250, 1451, 2429, 1452, 1453,
	2916, 2032, 1451, 2457, 1452, 1453, 3265, 1451, 2514, 1452,
	1453, 69, 46, 3901, 1454, 3967, 887, 2531, 2532, 1454,
	3138, 2536, 2649, 1716, 1454, 3138, 2642, 1716, 884, 3285,
	2765, 3284, 2541, 3282, 2834, 2837, 2838, 2839, 2835, 2544,
	2836, 2840, 2640, 1716, 3467, 3468, 1451, 3292, 1452, 1453,
	2764, 3608, 3302, 3609, 3299, 3300, 3251, 3301, 3610, 3077,
	3303, 3078, 3305, 3950, 3307, 2547, 3951, 883, 3952, 2763,
	2173, 1431, 1714, 1710, 1451, 1428, 1452, 1453, 1451, 4042,
	1452, 1453, 1451, 2019, 1452, 1453, 1506, 1711, 96, 36,
	1506, 2577, 35, 34, 1451, 2582, 1452, 1453, 2762, 33,
	32, 26, 1451, 2753, 1452, 1453, 25, 24, 2752, 23,
	22, 3230, 1707, 1708, 1713, 29, 1712, 19, 2586, 21,
	2587, 1451, 20, 1452, 1453, 2594, 3404, 18, 3242, 2596,
	2597, 4064, 4109, 3408, 123, 55, 52, 50, 2603, 2604,
	2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 131, 2614,
	1451, 130, 1452, 1453, 53, 1451, 49, 1452, 1453, 1198,
	1451, 47, 1452, 1453, 31, 3141, 2364, 30, 17, 16,
	15, 14, 2620, 2621, 2622, 2623, 2624, 13, 2626, 3482,
	1454, 3442, 2628, 12, 3449, 11, 2633, 2634, 728, 2635,
	3434, 3435, 2638, 1454, 2639, 2641, 2643, 2644, 2645, 2646,
	2647, 2648, 2650, 2652, 2653, 2654, 2656, 3293, 2658, 2659,
	2661, 2663, 2665, 2667, 2669, 2671, 2673, 2675, 2677, 2679,
	2681, 2683, 2685, 2687, 2689, 2691, 2693, 2695, 2696, 2697,
	3476, 2699, 3474, 2701, 2366, 2703, 2704, 3471, 2706, 2708,
	2710, 3258, 3259, 3484, 2713, 3485, 3439, 3454, 2717, 3477,
	3437, 1454, 2722, 2723, 2724, 2725, 7, 3501, 1454, 3503,
	3287, 3288, 6, 1454, 2751, 2736, 2737, 2738, 2739, 2740,
	2741, 3546, 3547, 2745, 2746, 1454, 39, 2750, 38, 3464,
	3411, 2748, 3413, 3414, 3415, 1454, 2754, 3495, 3496, 1454,
	37, 28, 2757, 2758, 2759, 2760, 2761, 1044, 3478, 3479,
	1050, 1050, 1454, 2768, 2769, 27, 2770, 40, 4, 2773,
	2775, 2332, 2903, 2777, 1454, 2459, 1451, 0, 1452, 1453,
	0, 0, 0, 2789, 0, 1454, 0, 0, 0, 1451,
	0, 1452, 1453, 1454, 0, 2747, 0, 3548, 1454, 0,
	3529, 0, 2742, 0, 3533, 3534, 3535, 2735, 1454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2734,
	3564, 0, 0, 0, 3525, 3526, 0, 1454, 0, 2733,
	0, 0, 0, 2732, 0, 1454, 0, 0, 0, 0,
	0, 1454, 0, 0, 0, 0, 2731, 1451, 0, 1452,
	1453, 0, 0, 0, 1451, 1454, 1452, 1453, 2730, 1451,
	0, 1452, 1453, 0, 1454, 0, 0, 0, 0, 2729,
	1454, 1451, 0, 1452, 1453, 1454, 0, 2728, 0, 0,
	1454, 1451, 2727, 1452, 1453, 1451, 2847, 1452, 1453, 0,
	0, 0, 2721, 3624, 0, 3628, 3629, 0, 1451, 1454,
	1452, 1453, 3614, 0, 3615, 3616, 3617, 0, 3604, 0,
	1451, 2720, 1452, 1453, 0, 0, 0, 1454, 3142, 2719,
	87, 1451, 3142, 1452, 1453, 2716, 0, 0, 3630, 1451,
	0, 1452, 1453, 0, 1451, 0, 1452, 1453, 1454, 2715,
	0, 0, 0, 0, 1451, 3568, 1452, 1453, 2714, 0,
	2083, 0, 2081, 3659, 2712, 0, 3631, 3651, 1454, 2705,
	2896, 3640, 3639, 1451, 2702, 1452, 1453, 0, 0, 3649,
	3647, 1451, 0, 1452, 1453, 0, 0, 1451, 0, 1452,
	1453, 0, 0, 2700, 0, 0, 0, 0, 42, 3809,
	0, 1451, 0, 1452, 1453, 3663, 0, 0, 0, 0,
	1451, 2698, 1452, 1453, 0, 0, 1451, 0, 1452, 1453,
	0, 1451, 0, 1452, 1453, 0, 1451, 0, 1452, 1453,
	0, 0, 2657, 0, 0, 0, 2945, 2946, 2947, 2948,
	2949, 3801, 0, 3800, 0, 1451, 0, 1452, 1453, 0,
	0, 3816, 2637, 0, 3828, 3799, 0, 0, 3821, 0,
	2032, 2959, 3820, 1451, 0, 1452, 1453, 0, 0, 0,
	3866, 3867, 3004, 3005, 3006, 3007, 3008, 3653, 3660, 3661,
	0, 0, 0, 0, 1451, 2967, 1452, 1453, 2083, 0,
	2081, 3870, 3013, 0, 0, 0, 0, 0, 3595, 3811,
	3812, 3813, 0, 0, 1451, 0, 1452, 1453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3142, 3138, 3873, 0, 3655, 0, 3876, 0, 3804,
	0, 0, 0, 0, 0, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1641, 1642, 1643, 1644,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 3917, 3899, 3914, 3871, 3141, 3896,
	3897, 1454, 3141, 3898, 0, 1454, 0, 0, 3931, 0,
	0, 0, 0, 0, 1454, 0, 0, 0, 1454, 0,
	0, 0, 0, 3916, 0, 0, 87, 0, 0, 0,
	3144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1454, 0, 0, 0, 3162, 0,
	0, 3920, 0, 0, 0, 0, 0, 3933, 0, 0,
	0, 0, 3936, 3938, 0, 0, 0, 0, 0, 3808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3905,
	0, 0, 0, 0, 0, 2636, 0, 0, 0, 2632,
	0, 0, 0, 0, 42, 0, 0, 0, 2630, 0,
	0, 0, 2595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1455, 0,
	3976, 0, 0, 3956, 0, 87, 3957, 0, 2584, 0,
	0, 0, 3922, 0, 0, 0, 0, 1451, 0, 1452,
	1453, 1451, 3965, 1452, 1453, 0, 0, 0, 1511, 3972,
	1451, 0, 1452, 1453, 1451, 3216, 1452, 1453, 0, 0,
	0, 3985, 3980, 4007, 3990, 0, 3941, 3987, 3993, 3982,
	0, 3986, 3828, 3996, 3984, 3291, 3989, 3988, 0, 0,
	1451, 3254, 1452, 1453, 0, 0, 0, 0, 4017, 0,
	0, 3141, 0, 42, 0, 3266, 0, 3308, 3309, 0,
	3310, 4038, 3312, 3314, 4028, 4033, 0, 4020, 4046, 0,
	0, 0, 4048, 0, 3283, 4007, 3321, 3286, 0, 0,
	4059, 3325, 3326, 3327, 3329, 3330, 3331, 3332, 3333, 3334,
	3335, 3336, 3337, 3338, 3339, 3340, 3341, 3343, 3345, 3347,
	3349, 3351, 3353, 3355, 3357, 3359, 3361, 3363, 3365, 3367,
	3369, 3371, 3373, 3374, 3376, 3377, 3378, 3380, 4063, 1970,
	3382, 4078, 3384, 3385, 3386, 4079, 4058, 3390, 3391, 3392,
	3393, 3394, 3395, 3396, 3397, 3398, 3399, 3400, 4093, 2083,
	4095, 2081, 4092, 4091, 4089, 4082, 3407, 4088, 3977, 4103,
	3412, 0, 4007, 0, 3416, 3417, 0, 3418, 3420, 4111,
	3423, 3425, 0, 3427, 3428, 3429, 3430, 4119, 4117, 3945,
	3138, 3436, 0, 0, 0, 0, 0, 3955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4128, 4129,
	3867, 4127, 0, 0, 0, 0, 0, 2083, 0, 2081,
	4126, 0, 0, 0, 0, 0, 3458, 3459, 3929, 0,
	3463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 3499, 0, 957, 0, 0, 3540, 945, 958, 959,
	960, 961, 946, 0, 0, 947, 948, 0, 949, 0,
	0, 3514, 1820, 0, 3515, 3516, 3517, 0, 0, 0,
	0, 0, 954, 962, 963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3559, 0,
	0, 3563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3574, 0,
	0, 3260, 3261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 0, 940, 0, 0, 0,
	0, 0, 3597, 0, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 3605, 0, 0, 0, 0,
	0, 0, 0, 3612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 195, 0, 0, 0, 712,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3263, 3264, 0, 718, 195, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3817, 0, 0, 0, 0, 0, 0, 0, 0, 3824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3834,
	3835, 0, 3837, 0, 3838, 3839, 0, 0, 0, 3842,
	3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852,
	3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862,
	3863, 0, 3865, 3868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3877, 3878,
	3879, 3880, 3881, 3883, 3884, 3886, 3888, 3889, 3891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	2040, 2041, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3921, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	2090, 0, 0, 0, 0, 2113, 1050, 1050, 2117, 0,
	0, 0, 2122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 0, 2145, 0,
	0, 0, 2167, 2168, 2169, 2170, 2171, 2172, 2174, 0,
	2179, 0, 2181, 2182, 2183, 0, 2185, 2186, 2187, 0,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 0,
	0, 0, 0, 0, 2267, 0, 2269, 0, 2276, 2277,
	2278, 2279, 2280, 2281, 1050, 0, 1050, 1050, 1050, 1050,
	1050, 0, 0, 0, 0, 0, 0, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 0, 2302, 2303, 2304, 2305,
	2306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3942, 0, 0,
	0, 0, 0, 0, 3962, 1050, 0, 0, 4062, 0,
	3963, 3964, 190, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 2344, 2345, 0,
	0, 0, 3975, 0, 0, 0, 129, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 2383, 190, 0, 0, 0, 4001, 4002,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4009, 4011, 4013, 0, 0, 0, 129, 0,
	162, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 4041, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 170, 0,
	0, 0, 0, 0, 2425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 139, 161,
	160, 189, 0, 0, 0, 4060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	170, 0, 86, 44, 45, 88, 0, 195, 0, 195,
	0, 0, 195, 0, 1771, 0, 0, 0, 0, 4083,
	4085, 4087, 92, 189, 0, 0, 48, 76, 77, 0,
	74, 78, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 0, 0, 0, 718, 0, 718, 718, 0, 0,
	0, 0, 4108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 195, 62, 0,
	4120, 4121, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 0, 155, 136, 158, 143, 135, 0, 156, 157,
	0, 0, 0, 0, 0, 173, 0, 1498, 1784, 0,
	0, 0, 0, 0, 179, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	145, 140, 141, 142, 146, 0, 83, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 173, 0, 0,
	148, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1800, 1801, 1802, 1803, 1804, 1805, 0, 1806, 1807,
	1809, 1810, 1808, 1811, 1812, 1785, 1786, 1787, 1788, 1769,
	1770, 1798, 0, 1772, 0, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 0, 0, 1782, 1789, 1790, 1791,
	1792, 0, 1793, 1794, 1795, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 54, 57, 56, 59, 0, 73, 0, 164, 82,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 61, 91, 90, 0, 0, 71, 72,
	58, 0, 0, 0, 0, 0, 80, 81, 0, 2593,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 2599,
	2600, 2601, 2602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 64,
	0, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 718, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 718, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 89, 0, 0, 165, 0, 0, 0, 1498,
	0, 0, 177, 0, 0, 718, 718, 0, 718, 0,
	718, 718, 0, 718, 718, 718, 718, 718, 718, 0,
	0, 0, 0, 0, 0, 1732, 1498, 0, 0, 1498,
	718, 1498, 195, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 185, 177, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 195, 0, 185, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 0, 0, 0,
	195, 94, 184, 186, 187, 188, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 718, 0, 0, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 0,
	0, 0, 0, 0, 184, 186, 187, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 697, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1050, 0, 0, 2998, 2999, 0,
	0, 3001, 0, 0, 3003, 0, 717, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 718, 0, 3010, 3011, 3012, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 3017, 0, 0, 3019,
	3020, 3021, 0, 195, 0, 3022, 3023, 0, 0, 3024,
	1771, 3025, 0, 0, 0, 0, 0, 0, 3026, 0,
	3027, 0, 0, 0, 3028, 0, 3029, 0, 0, 3030,
	0, 3031, 0, 3032, 0, 3033, 0, 3034, 0, 3035,
	0, 3036, 0, 3037, 0, 3038, 0, 3039, 0, 3040,
	0, 3041, 718, 3042, 0, 3043, 0, 3044, 0, 3045,
	0, 3046, 1498, 3047, 0, 0, 0, 3048, 0, 3049,
	0, 3050, 0, 0, 3051, 0, 3052, 0, 3053, 1498,
	2239, 3055, 0, 0, 3057, 0, 0, 3059, 3060, 3061,
	3062, 0, 0, 0, 1784, 3063, 2239, 2239, 2239, 2239,
	2239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3073, 0, 0, 0, 0, 0, 0, 0, 3086,
	0, 0, 3090, 0, 1050, 0, 0, 0, 0, 0,
	0, 3093, 3094, 3095, 3096, 3097, 3098, 0, 0, 0,
	3099, 3100, 0, 3101, 0, 3102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1800, 1801, 1802,
	1803, 1804, 1805, 0, 1806, 1807, 1809, 1810, 1808, 1811,
	1812, 1785, 1786, 1787, 1788, 1769, 1770, 1798, 0, 1772,
	0, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	3133, 0, 1782, 1789, 1790, 1791, 1792, 0, 1793, 1794,
	1795, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2287, 0, 3163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 957, 0,
	2275, 0, 0, 958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 195, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 718, 0, 0, 2287, 195, 0,
	195, 0, 195, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	0, 3315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 3324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 718, 0, 0, 0, 0, 0, 718, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 718,
	0, 0, 0, 718, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 169, 0, 0, 170, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 195, 0,
	0, 195, 0, 195, 1841, 1842, 161, 160, 189, 0,
	0, 0, 195, 0, 717, 1414, 717, 717, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 3521, 0, 0, 0, 0, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	1843, 158, 0, 1840, 0, 156, 157, 0, 0, 0,
	0, 0, 173, 1498, 0, 2287, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3565, 0, 3566, 0, 0, 3567, 0, 0, 3570, 3571,
	0, 0, 0, 0, 0, 0, 0, 3575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3576, 0, 3577, 0, 3578, 0, 3579, 0, 3580,
	0, 3581, 0, 3582, 0, 3583, 0, 3584, 0, 3585,
	0, 3586, 0, 3587, 0, 3588, 0, 3589, 0, 3590,
	0, 3591, 0, 0, 3592, 0, 0, 0, 3593, 0,
	3594, 0, 0, 0, 0, 0, 3596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3613,
	0, 0, 0, 0, 0, 164, 0, 0, 3618, 0,
	3619, 3620, 0, 3621, 0, 3622, 0, 1497, 0, 0,
	3623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3656, 0, 0, 3658,
	0, 0, 0, 896, 0, 0, 0, 0, 0, 0,
	0, 3662, 0, 0, 0, 0, 0, 0, 717, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3796,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 159, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 1823, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 1849, 0,
	0, 0, 0, 1075, 0, 1082, 1858, 0, 0, 1497,
	1860, 0, 0, 1863, 1864, 717, 717, 0, 717, 0,
	717, 717, 0, 717, 717, 717, 717, 717, 717, 152,
	0, 0, 153, 0, 0, 0, 1497, 1895, 1896, 1497,
	717, 1497, 3904, 1901, 718, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 177,
	0, 718, 0, 0, 0, 717, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 1963, 897,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 195, 195, 195, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	195, 195, 0, 0, 0, 193, 0, 0, 664, 0,
	0, 0, 0, 166, 171, 168, 174, 175, 176, 178,
	180, 181, 182, 183, 0, 195, 0, 0, 664, 184,
	186, 187, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1032, 0, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1051, 1051, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 3944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3958, 0, 0, 3959, 0, 3960, 0, 0, 0,
	0, 717, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	4039, 2091, 0, 0, 718, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 4055,
	0, 4056, 0, 4057, 0, 0, 718, 0, 0, 0,
	1498, 0, 0, 718, 718, 1498, 195, 195, 195, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 195, 0, 195, 0, 0, 195,
	195, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4106, 0, 4107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	0, 1498, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 195, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 717, 1262, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 2447, 2448, 2449, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 717, 1858, 0,
	0, 1858, 0, 1858, 0, 0, 0, 0, 0, 2479,
	664, 0, 664, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 717,
	0, 0, 0, 717, 717, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 195, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 718, 718, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 718, 718, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1693, 1694, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1866, 0, 1866, 0, 1866, 1866, 0,
	1875, 1866, 1866, 1866, 1866, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	1499, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 718, 0, 718,
	0, 0, 1943, 0, 95, 0, 0, 957, 0, 0,
	0, 945, 958, 959, 960, 961, 946, 0, 1967, 947,
	948, 0, 949, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 954, 962, 963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1032, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 664, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3260, 3261, 0, 718, 0,
	0, 0, 664, 0, 0, 0, 0, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 0,
	0, 0, 1499, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 718, 0, 0, 0, 718, 718, 0, 0, 1499,
	0, 0, 1499, 0, 1499, 664, 0, 0, 0, 0,
	3262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 1917, 0, 0, 0, 0,
	0, 0, 2860, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 1262, 1262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 0, 664, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 717, 0, 0, 3263, 3264, 1994,
	1995, 664, 664, 664, 664, 664, 664, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 1858, 1858, 0, 0, 0, 717, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 2933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 910, 0, 0, 0, 0, 0, 914, 195, 0,
	0, 911, 912, 0, 0, 0, 913, 915, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	1498, 0, 718, 0, 0, 0, 664, 0, 0, 0,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 2287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2324,
	0, 0, 195, 718, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1051, 1051, 0,
	0, 0, 1499, 0, 0, 0, 0, 2336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 1262, 718, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 1075, 0, 0, 718, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 718, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 0, 717, 0, 0, 0,
	1497, 0, 0, 717, 717, 1497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1075, 0,
	0, 0, 0, 0, 1082, 1051, 1969, 1051, 1051, 1051,
	1051, 1051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 957, 0,
	0, 0, 0, 958, 0, 0, 3211, 0, 0, 0,
	1917, 1075, 0, 2082, 0, 0, 2077, 0, 0, 0,
	2077, 2077, 0, 0, 0, 0, 1051, 0, 717, 0,
	0, 1497, 0, 0, 0, 0, 717, 0, 0, 0,
	1032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	1969, 664, 0, 664, 0, 664, 2373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3290, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	0, 2550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 664, 0, 0, 664, 0, 2538, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	3489, 0, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 717, 717, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1497, 0, 0, 0, 0, 717, 2336, 717,
	0, 0, 0, 0, 0, 2917, 0, 0, 0, 0,
	0, 0, 0, 0, 2922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 1917, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 2077, 0, 717, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	2902, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	664, 664, 664, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 664, 0, 0, 0, 3075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 717, 0, 0, 0, 0, 0, 0, 3118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 0, 0, 0, 0,
	3145, 1866, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 1075, 0, 0, 0, 0,
	1497, 0, 717, 2336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 1499, 664,
	664, 664, 664, 664, 0, 0, 0, 717, 0, 0,
	0, 3161, 0, 0, 0, 0, 0, 1917, 0, 664,
	0, 0, 664, 3169, 1969, 0, 717, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2336, 2336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3553, 3554,
	3555, 3556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 664, 664, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3652, 0, 3654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3892, 0,
	0, 0, 3892, 3892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2336, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4015, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1917, 3969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 2336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3403, 0, 4023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1917, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 1397, 1383, 520,
	0, 1325, 1400, 1294, 1313, 1410, 1316, 1319, 1362, 1272,
	1340, 411, 1310, 1265, 1298, 1267, 1305, 1268, 1296, 1327,
	269, 1293, 1385, 1344, 1399, 362, 266, 1274, 1299, 425,
	1315, 203, 1364, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 1406, 366, 1350,
	0, 491, 396, 0, 0, 1969, 1329, 1389, 1338, 1376,
	1324, 1363, 1282, 1349, 1401, 1311, 1359, 1402, 321, 247,
	323, 202, 408, 492, 285, 0, 0, 0, 0, 3997,
	941, 0, 0, 0, 0, 3998, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 1307, 1356, 1396,
	1308, 1358, 264, 319, 271, 263, 572, 1407, 1388, 1271,
	1337, 1395, 1332, 0, 0, 228, 1398, 1331, 0, 1361,
	0, 1413, 1266, 1352, 0, 1269, 1273, 1409, 1393, 1302,
	274, 0, 0, 0, 0, 0, 0, 0, 1328, 1339,
	1373, 1377, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 1300, 0, 1348, 0, 0, 0, 1278, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 1281, 0, 1301, 1374,
	0, 1264, 296, 1275, 397, 256, 0, 448, 1381, 1392,
	1323, 616, 1394, 1321, 1320, 1368, 1279, 1387, 1314, 361,
	1277, 328, 197, 224, 0, 1312, 407, 456, 468, 1386,
	1297, 1306, 252, 1304, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 1347, 1366, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 1276, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 1292, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 1382, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 1371, 1412, 420, 467, 239,
	596, 490, 199, 1286, 1291, 1284, 0, 253, 254, 1353,
	567, 1287, 1285, 1342, 1343, 1288, 1403, 1404, 1405, 1390,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 1375, 1280,
	0, 1289, 1290, 1384, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 1346, 196, 220, 364, 1408, 449, 287,
	637, 606, 601, 205, 222, 1283, 261, 1295, 1303, 0,
	1309, 1317, 1318, 1330, 1333, 1334, 1335, 1336, 1354, 1355,
	1357, 1365, 1367, 1370, 1372, 1379, 1391, 1411, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 1345, 1351, 377, 280,
	303, 318, 1360, 605, 496, 226, 461, 289, 250, 1378,
	1380, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 1341, 1369, 372, 568, 569,
	314, 392, 0, 0, 0, 1397, 1383, 520, 0, 1325,
	1400, 1294, 1313, 1410, 1316, 1319, 1362, 1272, 1340, 411,
	1310, 1265, 1298, 1267, 1305, 1268, 1296, 1327, 269, 1293,
	1385, 1344, 1399, 362, 266, 1274, 1299, 425, 1315, 203,
	1364, 481, 251, 373, 370, 575, 281, 272, 268, 249,
	315, 381, 423, 510, 417, 1406, 366, 1350, 0, 491,
	396, 0, 0, 0, 1329, 1389, 1338, 1376, 1324, 1363,
	1282, 1349, 1401, 1311, 1359, 1402, 321, 247, 323, 202,
	408, 492, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 1307, 1356, 1396, 1308, 1358,
	264, 319, 271, 263, 572, 1407, 1388, 1271, 1337, 1395,
	1332, 0, 0, 228, 1398, 1331, 0, 1361, 0, 1413,
	1266, 1352, 0, 1269, 1273, 1409, 1393, 1302, 274, 0,
	0, 0, 0, 0, 0, 0, 1328, 1339, 1373, 1377,
	1322, 0, 0, 0, 0, 0, 0, 3170, 0, 1300,
	0, 1348, 0, 0, 0, 1278, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 1281, 0, 1301, 1374, 0, 1264,
	296, 1275, 397, 256, 0, 448, 1381, 1392, 1323, 616,
	1394, 1321, 1320, 1368, 1279, 1387, 1314, 361, 1277, 328,
	197, 224, 0, 1312, 407, 456, 468, 1386, 1297, 1306,
	252, 1304, 466, 421, 594, 232, 283, 453, 427, 464,
	435, 286, 1347, 1366, 465, 368, 577, 445, 591, 617,
	618, 262, 401, 603, 514, 611, 635, 225, 259, 415,
	499, 597, 488, 393, 573, 574, 327, 487, 294, 201,
	365, 623, 223, 474, 367, 241, 230, 579, 600, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 581, 582, 255,
	639, 227, 610, 219, 1276, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 351, 352, 279, 305,
	442, 371, 443, 304, 306, 399, 398, 400, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 1292, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 1382, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 1371, 1412, 420, 467, 239, 596, 490,
	199, 1286, 1291, 1284, 0, 253, 254, 1353, 567, 1287,
	1285, 1342, 1343, 1288, 1403, 1404, 1405, 1390, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 1375, 1280, 0, 1289,
	1290, 1384, 583, 584, 659, 380, 480, 593, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 248, 209, 386, 394, 570,
	310, 215, 216, 217, 516, 517, 518, 519, 607, 608,
	612, 204, 457, 458, 459, 460, 291, 602, 307, 463,
	462, 329, 330, 375, 444, 532, 534, 545, 549, 551,
	553, 559, 562, 533, 535, 546, 550, 552, 554, 560,
	563, 522, 524, 526, 528, 541, 540, 537, 565, 566,
	543, 548, 527, 539, 544, 557, 564, 561, 521, 525,
	529, 538, 556, 555, 536, 547, 558, 542, 530, 523,
	531, 1346, 196, 220, 364, 1408, 449, 287, 637, 606,
	601, 205, 222, 1283, 261, 1295, 1303, 0, 1309, 1317,
	1318, 1330, 1333, 1334, 1335, 1336, 1354, 1355, 1357, 1365,
	1367, 1370, 1372, 1379, 1391, 1411, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 1345, 1351, 377, 280, 303, 318,
	1360, 605, 496, 226, 461, 289, 250, 1378, 1380, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 1341, 1369, 372, 568, 569, 314, 392,
	0, 0, 0, 1397, 1383, 520, 0, 1325, 1400, 1294,
	1313, 1410, 1316, 1319, 1362, 1272, 1340, 411, 1310, 1265,
	1298, 1267, 1305, 1268, 1296, 1327, 269, 1293, 1385, 1344,
	1399, 362, 266, 1274, 1299, 425, 1315, 203, 1364, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 1406, 366, 1350, 0, 491, 396, 0,
	0, 0, 1329, 1389, 1338, 1376, 1324, 1363, 1282, 1349,
	1401, 1311, 1359, 1402, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 1307, 1356, 1396, 1308, 1358, 264, 319,
	271, 263, 572, 1407, 1388, 1271, 1337, 1395, 1332, 0,
	0, 228, 1398, 1331, 0, 1361, 0, 1413, 1266, 1352,
	0, 1269, 1273, 1409, 1393, 1302, 274, 0, 0, 0,
	0, 0, 0, 0, 1328, 1339, 1373, 1377, 1322, 0,
	0, 0, 0, 0, 0, 3131, 0, 1300, 0, 1348,
	0, 0, 0, 1278, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 1281, 0, 1301, 1374, 0, 1264, 296, 1275,
	397, 256, 0, 448, 1381, 1392, 1323, 616, 1394, 1321,
	1320, 1368, 1279, 1387, 1314, 361, 1277, 328, 197, 224,
	0, 1312, 407, 456, 468, 1386, 1297, 1306, 252, 1304,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	1347, 1366, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 1276, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 1292,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 1382, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 1371, 1412, 420, 467, 239, 596, 490, 199, 1286,
	1291, 1284, 0, 253, 254, 1353, 567, 1287, 1285, 1342,
	1343, 1288, 1403, 1404, 1405, 1390, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 1375, 1280, 0, 1289, 1290, 1384,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 1346,
	196, 220, 364, 1408, 449, 287, 637, 606, 601, 205,
	222, 1283, 261, 1295, 1303, 0, 1309, 1317, 1318, 1330,
	1333, 1334, 1335, 1336, 1354, 1355, 1357, 1365, 1367, 1370,
	1372, 1379, 1391, 1411, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 1345, 1351, 377, 280, 303, 318, 1360, 605,
	496, 226, 461, 289, 250, 1378, 1380, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 1341, 1369, 372, 568, 569, 314, 392, 0, 0,
	0, 1397, 1383, 520, 0, 1325, 1400, 1294, 1313, 1410,
	1316, 1319, 1362, 1272, 1340, 411, 1310, 1265, 1298, 1267,
	1305, 1268, 1296, 1327, 269, 1293, 1385, 1344, 1399, 362,
	266, 1274, 1299, 425, 1315, 203, 1364, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 1406, 366, 1350, 0, 491, 396, 0, 0, 0,
	1329, 1389, 1338, 1376, 1324, 1363, 1282, 1349, 1401, 1311,
	1359, 1402, 321, 247, 323, 202, 408, 492, 285, 0,
	0, 0, 0, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 1307, 1356, 1396, 1308, 1358, 264, 319, 271, 263,
	572, 1407, 1388, 1271, 1337, 1395, 1332, 0, 0, 228,
	1398, 1331, 0, 1361, 0, 1413, 1266, 1352, 0, 1269,
	1273, 1409, 1393, 1302, 274, 0, 0, 0, 0, 0,
	0, 0, 1328, 1339, 1373, 1377, 1322, 0, 0, 0,
	0, 0, 0, 2352, 0, 1300, 0, 1348, 0, 0,
	0, 1278, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	1281, 0, 1301, 1374, 0, 1264, 296, 1275, 397, 256,
	0, 448, 1381, 1392, 1323, 616, 1394, 1321, 1320, 1368,
	1279, 1387, 1314, 361, 1277, 328, 197, 224, 0, 1312,
	407, 456, 468, 1386, 1297, 1306, 252, 1304, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 1347, 1366,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	1276, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 1292, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	1382, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 1371,
	1412, 420, 467, 239, 596, 490, 199, 1286, 1291, 1284,
	0, 253, 254, 1353, 567, 1287, 1285, 1342, 1343, 1288,
	1403, 1404, 1405, 1390, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 1375, 1280, 0, 1289, 1290, 1384, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 1346, 196, 220,
	364, 1408, 449, 287, 637, 606, 601, 205, 222, 1283,
	261, 1295, 1303, 0, 1309, 1317, 1318, 1330, 1333, 1334,
	1335, 1336, 1354, 1355, 1357, 1365, 1367, 1370, 1372, 1379,
	1391, 1411, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	1345, 1351, 377, 280, 303, 318, 1360, 605, 496, 226,
	461, 289, 250, 1378, 1380, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 1341,
	1369, 372, 568, 569, 314, 392, 0, 0, 0, 1397,
	1383, 520, 0, 1325, 1400, 1294, 1313, 1410, 1316, 1319,
	1362, 1272, 1340, 411, 1310, 1265, 1298, 1267, 1305, 1268,
	1296, 1327, 269, 1293, 1385, 1344, 1399, 362, 266, 1274,
	1299, 425, 1315, 203, 1364, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 1406,
	366, 1350, 0, 491, 396, 0, 0, 0, 1329, 1389,
	1338, 1376, 1324, 1363, 1282, 1349, 1401, 1311, 1359, 1402,
	321, 247, 323, 202, 408, 492, 285, 0, 95, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 1307,
	1356, 1396, 1308, 1358, 264, 319, 271, 263, 572, 1407,
	1388, 1271, 1337, 1395, 1332, 0, 0, 228, 1398, 1331,
	0, 1361, 0, 1413, 1266, 1352, 0, 1269, 1273, 1409,
	1393, 1302, 274, 0, 0, 0, 0, 0, 0, 0,
	1328, 1339, 1373, 1377, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 0, 1348, 0, 0, 0, 1278,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 1281, 0,
	1301, 1374, 0, 1264, 296, 1275, 397, 256, 0, 448,
	1381, 1392, 1323, 616, 1394, 1321, 1320, 1368, 1279, 1387,
	1314, 361, 1277, 328, 197, 224, 0, 1312, 407, 456,
	468, 1386, 1297, 1306, 252, 1304, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 1347, 1366, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 581, 582, 255, 639, 227, 610, 219, 1276, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	351, 352, 279, 305, 442, 371, 443, 304, 306, 399,
	398, 400, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 1292, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 1382, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 1371, 1412, 420,
	467, 239, 596, 490, 199, 1286, 1291, 1284, 0, 253,
	254, 1353, 567, 1287, 1285, 1342, 1343, 1288, 1403, 1404,
	1405, 1390, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	1375, 1280, 0, 1289, 1290, 1384, 583, 584, 659, 380,
	480, 593, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 248,
	209, 386, 394, 570, 310, 215, 216, 217, 516, 517,
	518, 519, 607, 608, 612, 204, 457, 458, 459, 460,
	291, 602, 307, 463, 462, 329, 330, 375, 444, 532,
	534, 545, 549, 551, 553, 559, 562, 533, 535, 546,
	550, 552, 554, 560, 563, 522, 524, 526, 528, 541,
	540, 537, 565, 566, 543, 548, 527, 539, 544, 557,
	564, 561, 521, 525, 529, 538, 556, 555, 536, 547,
	558, 542, 530, 523, 531, 1346, 196, 220, 364, 1408,
	449, 287, 637, 606, 601, 205, 222, 1283, 261, 1295,
	1303, 0, 1309, 1317, 1318, 1330, 1333, 1334, 1335, 1336,
	1354, 1355, 1357, 1365, 1367, 1370, 1372, 1379, 1391, 1411,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 1345, 1351,
	377, 280, 303, 318, 1360, 605, 496, 226, 461, 289,
	250, 1378, 1380, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 1341, 1369, 372,
	568, 569, 314, 392, 0, 0, 0, 1397, 1383, 520,
	0, 1325, 1400, 1294, 1313, 1410, 1316, 1319, 1362, 1272,
	1340, 411, 1310, 1265, 1298, 1267, 1305, 1268, 1296, 1327,
	269, 1293, 1385, 1344, 1399, 362, 266, 1274, 1299, 425,
	1315, 203, 1364, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 1406, 366, 1350,
	0, 491, 396, 0, 0, 0, 1329, 1389, 1338, 1376,
	1324, 1363, 1282, 1349, 1401, 1311, 1359, 1402, 321, 247,
	323, 202, 408, 492, 285, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 1307, 1356, 1396,
	1308, 1358, 264, 319, 271, 263, 572, 1407, 1388, 1271,
	1337, 1395, 1332, 0, 0, 228, 1398, 1331, 0, 1361,
	0, 1413, 1266, 1352, 0, 1269, 1273, 1409, 1393, 1302,
	274, 0, 0, 0, 0, 0, 0, 0, 1328, 1339,
	1373, 1377, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 1300, 0, 1348, 0, 0, 0, 1278, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 1281, 0, 1301, 1374,
	0, 1264, 296, 1275, 397, 256, 0, 448, 1381, 1392,
	1323, 616, 1394, 1321, 1320, 1368, 1279, 1387, 1314, 361,
	1277, 328, 197, 224, 0, 1312, 407, 456, 468, 1386,
	1297, 1306, 252, 1304, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 1347, 1366, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 1276, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 1292, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 1382, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 1371, 1412, 420, 467, 239,
	596, 490, 199, 1286, 1291, 1284, 0, 253, 254, 1353,
	567, 1287, 1285, 1342, 1343, 1288, 1403, 1404, 1405, 1390,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 1375, 1280,
	0, 1289, 1290, 1384, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 1346, 196, 220, 364, 1408, 449, 287,
	637, 606, 601, 205, 222, 1283, 261, 1295, 1303, 0,
	1309, 1317, 1318, 1330, 1333, 1334, 1335, 1336, 1354, 1355,
	1357, 1365, 1367, 1370, 1372, 1379, 1391, 1411, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 1345, 1351, 377, 280,
	303, 318, 1360, 605, 496, 226, 461, 289, 250, 1378,
	1380, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 1341, 1369, 372, 568, 569,
	314, 392, 0, 0, 0, 1397, 1383, 520, 0, 1325,
	1400, 1294, 1313, 1410, 1316, 1319, 1362, 1272, 1340, 411,
	1310, 1265, 1298, 1267, 1305, 1268, 1296, 1327, 269, 1293,
	1385, 1344, 1399, 362, 266, 1274, 1299, 425, 1315, 203,
	1364, 481, 251, 373, 370, 575, 281, 272, 268, 249,
	315, 381, 423, 510, 417, 1406, 366, 1350, 0, 491,
	396, 0, 0, 0, 1329, 1389, 1338, 1376, 1324, 1363,
	1282, 1349, 1401, 1311, 1359, 1402, 321, 247, 323, 202,
	408, 492, 285, 0, 0, 0, 0, 0, 707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 1307, 1356, 1396, 1308, 1358,
	264, 319, 271, 263, 572, 1407, 1388, 1271, 1337, 1395,
	1332, 0, 0, 228, 1398, 1331, 0, 1361, 0, 1413,
	1266, 1352, 0, 1269, 1273, 1409, 1393, 1302, 274, 0,
	0, 0, 0, 0, 0, 0, 1328, 1339, 1373, 1377,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	0, 1348, 0, 0, 0, 1278, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 1281, 0, 1301, 1374, 0, 1264,
	296, 1275, 397, 256, 0, 448, 1381, 1392, 1323, 616,
	1394, 1321, 1320, 1368, 1279, 1387, 1314, 361, 1277, 328,
	197, 224, 0, 1312, 407, 456, 468, 1386, 1297, 1306,
	252, 1304, 466, 421, 594, 232, 283, 453, 427, 464,
	435, 286, 1347, 1366, 465, 368, 577, 445, 591, 617,
	618, 262, 401, 603, 514, 611, 635, 225, 259, 415,
	499, 597, 488, 393, 573, 574, 327, 487, 294, 201,
	365, 623, 223, 474, 367, 241, 230, 579, 600, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 581, 582, 255,
	639, 227, 610, 219, 1276, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 351, 352, 279, 305,
	442, 371, 443, 304, 306, 399, 398, 400, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 1292, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 1382, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 1371, 1412, 420, 467, 239, 596, 490,
	199, 1286, 1291, 1284, 0, 253, 254, 1353, 567, 1287,
	1285, 1342, 1343, 1288, 1403, 1404, 1405, 1390, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 1375, 1280, 0, 1289,
	1290, 1384, 583, 584, 659, 380, 480, 593, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 248, 209, 386, 394, 570,
	310, 215, 216, 217, 516, 517, 518, 519, 607, 608,
	612, 204, 457, 458, 459, 460, 291, 602, 307, 463,
	462, 329, 330, 375, 444, 532, 534, 545, 549, 551,
	553, 559, 562, 533, 535, 546, 550, 552, 554, 560,
	563, 522, 524, 526, 528, 541, 540, 537, 565, 566,
	543, 548, 527, 539, 544, 557, 564, 561, 521, 525,
	529, 538, 556, 555, 536, 547, 558, 542, 530, 523,
	531, 1346, 196, 220, 364, 1408, 449, 287, 637, 606,
	601, 205, 222, 1283, 261, 1295, 1303, 0, 1309, 1317,
	1318, 1330, 1333, 1334, 1335, 1336, 1354, 1355, 1357, 1365,
	1367, 1370, 1372, 1379, 1391, 1411, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 1345, 1351, 377, 280, 303, 318,
	1360, 605, 496, 226, 461, 289, 250, 1378, 1380, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 1341, 1369, 372, 568, 569, 314, 392,
	0, 0, 0, 1397, 1383, 520, 0, 1325, 1400, 1294,
	1313, 1410, 1316, 1319, 1362, 1272, 1340, 411, 1310, 1265,
	1298, 1267, 1305, 1268, 1296, 1327, 269, 1293, 1385, 1344,
	1399, 362, 266, 1274, 1299, 425, 1315, 203, 1364, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 1406, 366, 1350, 0, 491, 396, 0,
	0, 0, 1329, 1389, 1338, 1376, 1324, 1363, 1282, 1349,
	1401, 1311, 1359, 1402, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 0, 941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 1307, 1356, 1396, 1308, 1358, 264, 319,
	271, 263, 572, 1407, 1388, 1271, 1337, 1395, 1332, 0,
	0, 228, 1398, 1331, 0, 1361, 0, 1413, 1266, 1352,
	0, 1269, 1273, 1409, 1393, 1302, 274, 0, 0, 0,
	0, 0, 0, 0, 1328, 1339, 1373, 1377, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 1348,
	0, 0, 0, 1278, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 1281, 0, 1301, 1374, 0, 1264, 296, 1275,
	397, 256, 0, 448, 1381, 1392, 1323, 616, 1394, 1321,
	1320, 1368, 1279, 1387, 1314, 361, 1277, 328, 197, 224,
	0, 1312, 407, 456, 468, 1386, 1297, 1306, 252, 1304,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	1347, 1366, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 1276, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 1292,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 1382, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 1371, 1412, 420, 467, 239, 596, 490, 199, 1286,
	1291, 1284, 0, 253, 254, 1353, 567, 1287, 1285, 1342,
	1343, 1288, 1403, 1404, 1405, 1390, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 1375, 1280, 0, 1289, 1290, 1384,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 1346,
	196, 220, 364, 1408, 449, 287, 637, 606, 601, 205,
	222, 1283, 261, 1295, 1303, 0, 1309, 1317, 1318, 1330,
	1333, 1334, 1335, 1336, 1354, 1355, 1357, 1365, 1367, 1370,
	1372, 1379, 1391, 1411, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 1345, 1351, 377, 280, 303, 318, 1360, 605,
	496, 226, 461, 289, 250, 1378, 1380, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 1341, 1369, 372, 568, 569, 314, 392, 0, 0,
	0, 0, 0, 520, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	749, 0, 0, 0, 269, 754, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 203, 0, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 760, 366, 0, 0, 491, 396, 0, 0, 0,
	0, 0, 756, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 247, 323, 202, 408, 492, 285, 0,
	95, 0, 0, 957, 941, 733, 907, 945, 958, 959,
	960, 961, 946, 0, 237, 947, 948, 244, 949, 0,
	906, 791, 793, 792, 856, 857, 858, 859, 860, 861,
	862, 789, 954, 962, 963, 0, 264, 319, 271, 263,
	572, 0, 0, 2175, 2176, 2177, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 729, 746, 0,
	759, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 744, 0, 0, 0, 0, 901, 0, 745,
	0, 0, 753, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 448, 900, 0, 0, 616, 0, 0, 898, 0,
	0, 0, 0, 361, 0, 328, 197, 224, 0, 0,
	407, 456, 468, 0, 0, 0, 951, 0, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 0, 0,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 952, 953, 255, 639, 797, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 805, 806, 279, 305, 882, 881, 880, 304,
	306, 878, 879, 877, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 888, 910, 899, 765,
	766, 889, 890, 914, 891, 768, 769, 911, 912, 762,
	763, 767, 913, 915, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 902, 752, 751, 0, 758, 0, 787, 788,
	790, 794, 795, 796, 807, 854, 855, 863, 865, 866,
	864, 867, 868, 869, 872, 873, 874, 875, 870, 871,
	876, 770, 774, 771, 772, 773, 785, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 786, 925, 926,
	927, 928, 929, 930, 800, 804, 803, 801, 802, 798,
	799, 826, 825, 827, 828, 829, 830, 831, 832, 834,
	833, 835, 836, 837, 838, 839, 840, 808, 809, 812,
	813, 811, 810, 814, 823, 824, 815, 816, 817, 818,
	819, 820, 822, 821, 841, 842, 843, 844, 845, 847,
	846, 850, 851, 849, 848, 853, 852, 750, 196, 220,
	364, 0, 449, 287, 637, 606, 601, 205, 222, 916,
	261, 917, 0, 0, 921, 0, 0, 0, 923, 922,
	0, 924, 886, 885, 0, 0, 918, 919, 0, 920,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 931, 932, 933, 934, 935, 936,
	937, 938, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 956, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 520, 0, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 749, 0, 0, 0, 269, 754, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 760, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 756, 757, 0, 0, 0, 0,
	0, 0, 2381, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 95, 0, 0, 957, 941, 733, 907, 945,
	958, 959, 960, 961, 946, 0, 237, 947, 948, 244,
	949, 0, 906, 791, 793, 792, 856, 857, 858, 859,
	860, 861, 862, 789, 954, 962, 963, 2382, 264, 319,
	271, 263, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 729,
	746, 0, 759, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 743, 744, 0, 0, 0, 0, 901,
	0, 745, 0, 0, 753, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 900, 0, 0, 616, 0, 0,
	898, 0, 0, 0, 0, 361, 0, 328, 197, 224,
	0, 0, 407, 456, 468, 0, 0, 0, 951, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	0, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 952, 953, 255, 639, 797,
	610, 219, 0, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 805, 806, 279, 305, 882, 881,
	880, 304, 306, 878, 879, 877, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 0, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 0, 0, 420, 467, 239, 596, 490, 888, 910,
	899, 765, 766, 889, 890, 914, 891, 768, 769, 911,
	912, 762, 763, 767, 913, 915, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 902, 752, 751, 0, 758, 0,
	787, 788, 790, 794, 795, 796, 807, 854, 855, 863,
	865, 866, 864, 867, 868, 869, 872, 873, 874, 875,
	870, 871, 876, 770, 774, 771, 772, 773, 785, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 786,
	925, 926, 927, 928, 929, 930, 800, 804, 803, 801,
	802, 798, 799, 826, 825, 827, 828, 829, 830, 831,
	832, 834, 833, 835, 836, 837, 838, 839, 840, 808,
	809, 812, 813, 811, 810, 814, 823, 824, 815, 816,
	817, 818, 819, 820, 822, 821, 841, 842, 843, 844,
	845, 847, 846, 850, 851, 849, 848, 853, 852, 750,
	196, 220, 364, 0, 449, 287, 637, 606, 601, 205,
	222, 916, 261, 917, 0, 0, 921, 0, 0, 0,
	923, 922, 0, 924, 886, 885, 0, 0, 918, 919,
	0, 920, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 931, 932, 933, 934,
	935, 936, 937, 938, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 956, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 0, 392, 372, 568, 569, 314, 86, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 0, 957, 941,
	733, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 729, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 952, 953,
	255, 639, 797, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 805, 806, 279,
	305, 882, 881, 880, 304, 306, 878, 879, 877, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 888, 910, 899, 765, 766, 889, 890, 914, 891,
	768, 769, 911, 912, 762, 763, 767, 913, 915, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 902, 752, 751,
	0, 758, 0, 787, 788, 790, 794, 795, 796, 807,
	854, 855, 863, 865, 866, 864, 867, 868, 869, 872,
	873, 874, 875, 870, 871, 876, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 786, 925, 926, 927, 928, 929, 930, 800,
	804, 803, 801, 802, 798, 799, 826, 825, 827, 828,
	829, 830, 831, 832, 834, 833, 835, 836, 837, 838,
	839, 840, 808, 809, 812, 813, 811, 810, 814, 823,
	824, 815, 816, 817, 818, 819, 820, 822, 821, 841,
	842, 843, 844, 845, 847, 846, 850, 851, 849, 848,
	853, 852, 750, 196, 220, 364, 94, 449, 287, 637,
	606, 601, 205, 222, 916, 261, 917, 0, 0, 921,
	0, 0, 0, 923, 922, 0, 924, 886, 885, 0,
	0, 918, 919, 0, 920, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 931,
	932, 933, 934, 935, 936, 937, 938, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 956, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 749, 0, 0,
	0, 269, 754, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 760, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 756,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	957, 941, 733, 907, 945, 958, 959, 960, 961, 946,
	0, 237, 947, 948, 244, 949, 0, 906, 791, 793,
	792, 856, 857, 858, 859, 860, 861, 862, 789, 954,
	962, 963, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 729, 746, 0, 759, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 901, 0, 745, 0, 0, 753,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 900,
	0, 0, 616, 0, 0, 898, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 951, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 3983, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	952, 953, 255, 639, 797, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 805,
	806, 279, 305, 882, 881, 880, 304, 306, 878, 879,
	877, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 888, 910, 899, 765, 766, 889, 890,
	914, 891, 768, 769, 911, 912, 762, 763, 767, 913,
	915, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 902,
	752, 751, 0, 758, 0, 787, 788, 790, 794, 795,
	796, 807, 854, 855, 863, 865, 866, 864, 867, 868,
	869, 872, 873, 874, 875, 870, 871, 876, 770, 774,
	771, 772, 773, 785, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 786, 925, 926, 927, 928, 929,
	930, 800, 804, 803, 801, 802, 798, 799, 826, 825,
	827, 828, 829, 830, 831, 832, 834, 833, 835, 836,
	837, 838, 839, 840, 808, 809, 812, 813, 811, 810,
	814, 823, 824, 815, 816, 817, 818, 819, 820, 822,
	821, 841, 842, 843, 844, 845, 847, 846, 850, 851,
	849, 848, 853, 852, 750, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 916, 261, 917, 0,
	0, 921, 0, 0, 0, 923, 922, 0, 924, 886,
	885, 0, 0, 918, 919, 0, 920, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 931, 932, 933, 934, 935, 936, 937, 938, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	956, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 749,
	0, 0, 0, 269, 754, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	760, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 756, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 1716, 957, 941, 733, 907, 945, 958, 959, 960,
	961, 946, 0, 237, 947, 948, 244, 949, 0, 906,
	791, 793, 792, 856, 857, 858, 859, 860, 861, 862,
	789, 954, 962, 963, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 729, 746, 0, 759,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 901, 0, 745, 0,
	0, 753, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 900, 0, 0, 616, 0, 0, 898, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 951, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 952, 953, 255, 639, 797, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 805, 806, 279, 305, 882, 881, 880, 304, 306,
	878, 879, 877, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 888, 910, 899, 765, 766,
	889, 890, 914, 891, 768, 769, 911, 912, 762, 763,
	767, 913, 915, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 902, 752, 751, 0, 758, 0, 787, 788, 790,
	794, 795, 796, 807, 854, 855, 863, 865, 866, 864,
	867, 868, 869, 872, 873, 874, 875, 870, 871, 876,
	770, 774, 771, 772, 773, 785, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 786, 925, 926, 927,
	928, 929, 930, 800, 804, 803, 801, 802, 798, 799,
	826, 825, 827, 828, 829, 830, 831, 832, 834, 833,
	835, 836, 837, 838, 839, 840, 808, 809, 812, 813,
	811, 810, 814, 823, 824, 815, 816, 817, 818, 819,
	820, 822, 821, 841, 842, 843, 844, 845, 847, 846,
	850, 851, 849, 848, 853, 852, 750, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 916, 261,
	917, 0, 0, 921, 0, 0, 0, 923, 922, 0,
	924, 886, 885, 0, 0, 918, 919, 0, 920, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 931, 932, 933, 934, 935, 936, 937,
	938, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 956, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 749, 0, 0, 0, 269, 754, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 760, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 756, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 0, 957, 941, 733, 907, 945, 958,
	959, 960, 961, 946, 0, 237, 947, 948, 244, 949,
	0, 906, 791, 793, 792, 856, 857, 858, 859, 860,
	861, 862, 789, 954, 962, 963, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 729, 746,
	0, 759, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 744, 1049, 0, 0, 0, 901, 0,
	745, 0, 0, 753, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 900, 0, 0, 616, 0, 0, 898,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 951, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 952, 953, 255, 639, 797, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 805, 806, 279, 305, 882, 881, 880,
	304, 306, 878, 879, 877, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 888, 910, 899,
	765, 766, 889, 890, 914, 891, 768, 769, 911, 912,
	762, 763, 767, 913, 915, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 902, 752, 751, 0, 758, 0, 787,
	788, 790, 794, 795, 796, 807, 854, 855, 863, 865,
	866, 864, 867, 868, 869, 872, 873, 874, 875, 870,
	871, 876, 770, 774, 771, 772, 773, 785, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 786, 925,
	926, 927, 928, 929, 930, 800, 804, 803, 801, 802,
	798, 799, 826, 825, 827, 828, 829, 830, 831, 832,
	834, 833, 835, 836, 837, 838, 839, 840, 808, 809,
	812, 813, 811, 810, 814, 823, 824, 815, 816, 817,
	818, 819, 820, 822, 821, 841, 842, 843, 844, 845,
	847, 846, 850, 851, 849, 848, 853, 852, 750, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	916, 261, 917, 0, 0, 921, 0, 0, 0, 923,
	922, 0, 924, 886, 885, 0, 0, 918, 919, 0,
	920, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 931, 932, 933, 934, 935,
	936, 937, 938, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 956, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 749, 0, 0, 0, 269, 754, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 760, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 756, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 957, 941, 733, 907,
	945, 958, 959, 960, 961, 946, 0, 237, 947, 948,
	244, 949, 0, 906, 791, 793, 792, 856, 857, 858,
	859, 860, 861, 862, 789, 954, 962, 963, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	729, 746, 0, 759, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	901, 0, 745, 0, 0, 753, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 900, 0, 0, 616, 0,
	0, 898, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 951,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 0, 921, 0, 0,
	0, 923, 922, 0, 924, 886, 885, 0, 0, 918,
	919, 0, 920, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 931, 932, 933,
	934, 935, 936, 937, 938, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 956, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 0, 957, 941,
	733, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 729, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	3089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 952, 953,
	255, 639, 797, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 805, 806, 279,
	305, 882, 881, 880, 304, 306, 878, 879, 877, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 888, 910, 899, 765, 766, 889, 890, 914, 891,
	768, 769, 911, 912, 762, 763, 767, 913, 915, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 902, 752, 751,
	0, 758, 0, 787, 788, 790, 794, 795, 796, 807,
	854, 855, 863, 865, 866, 864, 867, 868, 869, 872,
	873, 874, 875, 870, 871, 876, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 786, 925, 926, 927, 928, 929, 930, 800,
	804, 803, 801, 802, 798, 799, 826, 825, 827, 828,
	829, 830, 831, 832, 834, 833, 835, 836, 837, 838,
	839, 840, 808, 809, 812, 813, 811, 810, 814, 823,
	824, 815, 816, 817, 818, 819, 820, 822, 821, 841,
	842, 843, 844, 845, 847, 846, 850, 851, 849, 848,
	853, 852, 750, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 916, 261, 917, 0, 0, 921,
	0, 0, 0, 923, 922, 0, 924, 886, 885, 0,
	0, 918, 919, 0, 920, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 931,
	932, 933, 934, 935, 936, 937, 938, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 956, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 749, 0, 0,
	0, 269, 754, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 760, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 756,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	957, 941, 733, 907, 945, 958, 959, 960, 961, 946,
	0, 237, 947, 948, 244, 949, 0, 906, 791, 793,
	792, 856, 857, 858, 859, 860, 861, 862, 789, 954,
	962, 963, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 729, 746, 0, 759, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 901, 0, 745, 0, 0, 753,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 3085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 900,
	0, 0, 616, 0, 0, 898, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 951, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	952, 953, 255, 639, 797, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 805,
	806, 279, 305, 882, 881, 880, 304, 306, 878, 879,
	877, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 888, 910, 899, 765, 766, 889, 890,
	914, 891, 768, 769, 911, 912, 762, 763, 767, 913,
	915, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 902,
	752, 751, 0, 758, 0, 787, 788, 790, 794, 795,
	796, 807, 854, 855, 863, 865, 866, 864, 867, 868,
	869, 872, 873, 874, 875, 870, 871, 876, 770, 774,
	771, 772, 773, 785, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 786, 925, 926, 927, 928, 929,
	930, 800, 804, 803, 801, 802, 798, 799, 826, 825,
	827, 828, 829, 830, 831, 832, 834, 833, 835, 836,
	837, 838, 839, 840, 808, 809, 812, 813, 811, 810,
	814, 823, 824, 815, 816, 817, 818, 819, 820, 822,
	821, 841, 842, 843, 844, 845, 847, 846, 850, 851,
	849, 848, 853, 852, 750, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 916, 261, 917, 0,
	0, 921, 0, 0, 0, 923, 922, 0, 924, 886,
	885, 0, 0, 918, 919, 0, 920, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 931, 932, 933, 934, 935, 936, 937, 938, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	956, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 749,
	0, 0, 0, 269, 754, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	760, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 756, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 0, 957, 941, 1070, 907, 945, 958, 959, 960,
	961, 946, 0, 237, 947, 948, 244, 949, 0, 906,
	791, 793, 792, 856, 857, 858, 859, 860, 861, 862,
	789, 954, 962, 963, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 759,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 901, 0, 745, 0,
	0, 753, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 900, 0, 0, 616, 0, 0, 898, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 951, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 952, 953, 255, 639, 797, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 805, 806, 279, 305, 882, 881, 880, 304, 306,
	878, 879, 877, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 888, 910, 899, 765, 766,
	889, 890, 914, 891, 768, 769, 911, 912, 762, 763,
	767, 913, 915, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 902, 752, 751, 0, 758, 0, 787, 788, 790,
	794, 795, 796, 807, 854, 855, 863, 865, 866, 864,
	867, 868, 869, 872, 873, 874, 875, 870, 871, 876,
	770, 774, 771, 772, 773, 785, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 786, 925, 926, 927,
	928, 929, 930, 800, 804, 803, 801, 802, 798, 799,
	826, 825, 827, 828, 829, 830, 831, 832, 834, 833,
	835, 836, 837, 838, 839, 840, 808, 809, 812, 813,
	811, 810, 814, 823, 824, 815, 816, 817, 818, 819,
	820, 822, 821, 841, 842, 843, 844, 845, 847, 846,
	850, 851, 849, 848, 853, 852, 750, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 916, 261,
	917, 0, 0, 921, 0, 0, 0, 923, 922, 0,
	924, 886, 885, 0, 0, 918, 919, 0, 920, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 931, 932, 933, 934, 935, 936, 937,
	938, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 956, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 749, 0, 0, 0, 269, 754, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 760, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 756, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 0, 957, 941, 1070, 907, 945, 958,
	959, 960, 961, 946, 0, 237, 947, 948, 244, 949,
	0, 906, 791, 793, 792, 856, 857, 858, 859, 860,
	861, 862, 789, 954, 962, 963, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 759, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 744, 0, 0, 0, 0, 901, 0,
	745, 0, 0, 753, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 2069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 900, 0, 0, 616, 0, 0, 898,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 951, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 952, 953, 255, 639, 797, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 805, 806, 279, 305, 882, 881, 880,
	304, 306, 878, 879, 877, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 888, 910, 899,
	765, 766, 889, 890, 914, 891, 768, 769, 911, 912,
	762, 763, 767, 913, 915, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 902, 752, 751, 0, 758, 0, 787,
	788, 790, 794, 795, 796, 807, 854, 855, 863, 865,
	866, 864, 867, 868, 869, 872, 873, 874, 875, 870,
	871, 876, 770, 774, 771, 772, 773, 785, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 786, 925,
	926, 927, 928, 929, 930, 800, 804, 803, 801, 802,
	798, 799, 826, 825, 827, 828, 829, 830, 831, 832,
	834, 833, 835, 836, 837, 838, 839, 840, 808, 809,
	812, 813, 811, 810, 814, 823, 824, 815, 816, 817,
	818, 819, 820, 822, 821, 841, 842, 843, 844, 845,
	847, 846, 850, 851, 849, 848, 853, 852, 750, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	916, 261, 917, 0, 0, 921, 0, 0, 0, 923,
	922, 0, 924, 886, 885, 0, 0, 918, 919, 0,
	920, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 931, 932, 933, 934, 935,
	936, 937, 938, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 956, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 749, 0, 0, 0, 269, 754, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 760, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 756, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 957, 941, 1070, 907,
	945, 958, 959, 960, 961, 946, 0, 237, 947, 948,
	244, 949, 0, 906, 791, 793, 792, 856, 857, 858,
	859, 860, 861, 862, 789, 954, 962, 963, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 759, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	901, 0, 745, 0, 0, 753, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 900, 0, 0, 616, 0,
	0, 898, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 951,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 0, 921, 0, 0,
	0, 923, 922, 0, 924, 886, 885, 0, 0, 918,
	919, 0, 920, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 931, 932, 933,
	934, 935, 936, 937, 938, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 956, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 1120,
	616, 0, 0, 0, 0, 0, 1117, 1118, 361, 1078,
	328, 197, 224, 1111, 1115, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	1678, 941, 0, 0, 1675, 0, 0, 0, 0, 1673,
	0, 237, 1674, 1672, 244, 1677, 0, 906, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 0, 392, 372, 568,
	569, 314, 86, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 203, 0, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 0, 366, 0, 0, 491, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 247, 323, 202, 408, 492, 285, 0,
	95, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 448, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 328, 197, 224, 0, 0,
	407, 456, 468, 0, 0, 0, 252, 0, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 0, 0,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 199, 0, 0, 0,
	0, 253, 254, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 0, 0, 0, 0, 0, 0, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 0, 196, 220,
	364, 94, 449, 287, 637, 606, 601, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 2368, 0, 0,
	2367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 1735,
	0, 372, 568, 569, 314, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 1737, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 0, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 1739, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 1451, 0, 1452, 1453, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 328, 197, 224,
	0, 0, 407, 456, 468, 0, 0, 0, 252, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	0, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 0, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 0, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 0, 0, 420, 467, 239, 596, 490, 199, 0,
	0, 0, 0, 253, 254, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 0, 0, 0, 0, 0, 0,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 0,
	196, 220, 364, 0, 449, 287, 637, 606, 601, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 0, 392, 372, 568, 569, 314, 86, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 1716, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 94, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 2368, 0, 0, 2367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 2318, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1918, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 2316, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 1078, 328, 197, 224, 1076,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 2318, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 1918, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 1716, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 3893, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	2078, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 2811, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	2796, 0, 0, 0, 0, 237, 0, 0, 244, 2797,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 1758, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 1757, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 709,
	710, 711, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 4016, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1918, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	3893, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 2369, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	1739, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	2030, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 2021, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	1885, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 1883, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 1881, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 1879, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 1877, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	1873, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 1871, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 1869, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 1844,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 1743, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 0, 941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1430,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 1429, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 662, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 4024, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 3684, 3686,
	3685, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 0, 0, 372, 568,
	569, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3698,
	3699, 0, 0, 3774, 3773, 3772, 0, 0, 3770, 3771,
	3769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3775, 910, 0, 765, 766, 3776, 3777,
	914, 3778, 768, 769, 911, 912, 0, 763, 767, 913,
	915, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3681, 3682, 3683, 3687, 3688,
	3689, 3700, 3747, 3748, 3756, 3758, 866, 3757, 3759, 3760,
	3761, 3764, 3765, 3766, 3767, 3762, 3763, 3768, 3664, 3668,
	3665, 3666, 3667, 3679, 3669, 3670, 3671, 3672, 3673, 3674,
	3675, 3676, 3677, 3678, 3680, 3779, 3780, 3781, 3782, 3783,
	3784, 3693, 3697, 3696, 3694, 3695, 3691, 3692, 3719, 3718,
	3720, 3721, 3722, 3723, 3724, 3725, 3727, 3726, 3728, 3729,
	3730, 3731, 3732, 3733, 3701, 3702, 3705, 3706, 3704, 3703,
	3707, 3716, 3717, 3708, 3709, 3710, 3711, 3712, 3713, 3715,
	3714, 3734, 3735, 3736, 3737, 3738, 3740, 3739, 3743, 3744,
	3742, 3741, 3746, 3745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 916, 0, 917, 0,
	0, 921, 0, 0, 0, 923, 922, 0, 924, 886,
	885, 0, 0, 918, 919, 0, 920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792,
}

var yyPact = [...]int{
	-1000, -1000, 5033, -1000, -531, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2321, 2436, -1000, -1000, -1000, -1000, 2544, -1000, 995,
	2032, -1000, 2286, 4894, -1000, 54220, 494, -1000, 51332, 488,
	872, 237, 35448, -1000, 184, -1000, 165, 52776, 179, -1000,
	-1000, -1000, -1000, -431, 21006, 2223, 48, 46, 54220, -1000,
	-1000, -1000, -1000, -351, 2497, 2014, -1000, 408, -1000, -1000,
	-1000, -1000, -1000, -1000, 50610, -1000, 1084, -1000, -1000, 2299,
	2287, 2559, 901, 2230, -1000, 2404, 2014, -1000, 21006, 2475,
	2366, 20284, 20284, 440, -1000, -1000, 268, -1000, -1000, 30394,
	54220, 38336, 891, -1000, 2286, -1000, -1000, -1000, 190, -1000,
	341, 1929, -1000, 1916, -1000, 1034, 1056, 398, 822, 814,
	396, 395, 394, 384, 382, 379, 359, 347, 380, -1000,
	934, 934, -216, -217, 4936, 469, 429, 429, 1074, 462,
	2254, 2250, -1000, -1000, 934, 934, 934, 362, 934, 934,
	934, 934, 294, 291, 934, 934, 934, 934, 934, 934,
	934, 934, 934, 934, 934, 934, 934, 934, 934, 934,
	934, 870, 2286, 260, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54220, 213, 54220, -1000, 824, 54220, -435, 1088, 1088, 83,
	1088, 1088, 1088, 1088, 176, 938, 45, -1000, 166, 255,
	153, 249, 1062, 792, -1000, -1000, 242, 1062, 1714, -1000,
	903, 246, 173, -1000, 1088, 1088, -1000, 13761, 233, 13761,
	13761, -1000, 2262, -1000, -1000, -1000, -1000, -1000, 1291, -1000,
	-1000, -1000, -1000, -33, 460, -1000, -1000, -1000, -1000, 52776,
	49888, 273, -1000, -1000, 47, -1000, -1000, 1798, 1429, 21006,
	1358, 895, -1000, -1000, 1294, 876, -1000, -1000, -1000, -1000,
	-1000, 818, -1000, 23172, 23172, 23172, 23172, -1000, -1000, 1446,
	49166, 1446, 1446, 23172, 1446, 23172, 1446, 1446, 1446, 21006,
	1446, 1446, 1446, 1446, -1000, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, -1000, -1000, -1000, -1000, 1446, 817, 1446, 1446,
	1446, 1446, 1446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1446, 1446, 1446, 1446, 1446, 1446, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26060, 1497, 1494, 1486, -1000, 18118, 1446, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 54220, -1000, 1446,
	208, 52776, 52776, 317, 1280, -1000, -1000, 2404, 2014, -1000,
	2497, 2496, 408, -1000, 3048, 1529, 1547, 1357, 2014, 1888,
	54220, -1000, 1948, -1000, -1000, -1000, -1000, 2129, 1362, 1682,
	-1000, -1000, -1000, -1000, 1749, 21006, -1000, -1000, 2528, -1000,
	27505, 816, 2524, 48444, -1000, 440, 440, 1915, 416, 13,
	-1000, -1000, -1000, -1000, 959, 34726, -1000, -1000, -1000, -1000,
	-1000, 1815, 54220, -1000, -1000, 5651, 1288, -1000, 2029, -1000,
	1775, -1000, 1964, 21006, 2012, 484, 1288, 478, 476, 474,
	-1000, -66, -1000, -1000, -1000, -1000, -1000, -1000, 934, 934,
	934, -1000, 366, 2472, 4894, 6231, -1000, -1000, -1000, 47722,
	2027, 1288, -1000, 2026, -1000, 1010, 861, 900, 900, 1288,
	-1000, -1000, 53498, 1288, 1009, 1008, 1288, 1288, 52776, 52776,
	-1000, 47000, -1000, 46278, 45556, 1279, 52776, 44834, 44112, 43390,
	42668, 41946, -1000, 2123, -1000, 1982, -1000, -1000, -1000, 53498,
	1288, 1288, 53498, 52776, 53498, 54220, 1288, -1000, -1000, 361,
	-1000, -1000, 1278, 1264, 1260, 934, 934, 1256, 1678, 1676,
	1665, 934, 934, 1254, 1662, 36892, 1655, 252, 1252, 1249,
	1245, 1241, 1630, 193, 1628, 1240, 1181, 1239, 52776, 2024,
	54220, -1000, 238, 973, 438, 954, 2286, 2221, 1914, 456,
	483, 1288, 432, 432, 52776, -1000, 14489, -1000, 245, -1000,
	1623, 21006, -1000, 1065, 1062, 1062, -1000, -1000, -1000, -1000,
	-1000, -1000, 1088, 54220, 1065, -1000, -1000, -1000, 1062, 1088,
	54220, 1088, 1088, 1088, 1088, 1062, 1062, 1062, 1088, 54220,
	54220, 54220, 54220, 54220, 54220, 54220, 54220, 54220, 13761, 903,
	1088, -436, -1000, 1616, -1000, -1000, 2133, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 13761, 13761, -1000, -1000, -1000, -1000,
	-1000, 1905, -1000, 177, 8, 170, -1000, 41224, 482, 953,
	-1000, 482, -1000, -1000, -1000, 1902, 40502, -1000, -441, -442,
	-443, -444, -1000, -1000, -1000, -446, -454, -1000, -1000, -1000,
	21006, 21006, 21006, 21006, -246, -1000, 1136, 23172, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21006, 243, 933, 23172, 23172,
	23172, 23172, 23172, 23172, 23172, 24616, 23894, 23172, 23172, 23172,
	23172, 23172, 23172, -1000, -1000, 32560, 8458, 8458, 876, 876,
	876, 876, -1000, -176, 1895, 53498, -1000, -1000, -1000, 813,
	21006, 21006, 876, -1000, 1288, 1198, 18118, 20284, 20284, 21006,
	944, 1429, 53498, 21006, -1000, 1357, -1000, -1000, -1000, -1000,
	1205, -1000, -1000, 1037, 2298, 2298, 2298, 2298, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 2298, 21006,
	703, 703, 150, 21006, 21006, 21006, 21006, 21006, 21006, 16673,
	21006, 21006, 23172, 21006, 21006, 21006, 1357, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 1357, 21006, 1444, 21006,
	21006, 21006, 21006, 21006, 21006, 20284, 15945, 20284, 20284, 20284,
	20284, 20284, -1000, -1000, -1000, -1000, -1000, -1000, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, 1357, 21006, 21006, 21006,
	21006, 21006, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1593, 1485, 1410, 21006, -1000, 1894, -1000, -165,
	29672, 21006, 1612, 2517, 2050, 52776, -1000, -1000, -1000, -1000,
	2404, -1000, 2404, 1593, 2848, 2167, 20284, -1000, -1000, 2848,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1674, -1000,
	54220, 1888, 2362, 52776, 2163, 1598, 342, -1000, 21006, 21006,
	1881, -1000, 1380, 54220, -1000, -246, -1000, 39780, -1000, -1000,
	13033, 54220, 338, 54220, -1000, 28950, 39058, 314, -1000, 13,
	1857, -1000, 22, -5, 17395, 875, -1000, -1000, -1000, 4936,
	25338, 1763, 875, 96, -1000, -1000, -1000, 1964, -1000, 1964,
	1964, 1964, 1964, 342, 342, 342, 342, -1000, -1000, -1000,
	-1000, -1000, 2021, 2020, -1000, 1964, 1964, 1964, 1964, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2011, 2011, 2011, 2002,
	2002, 1974, 1974, 424, -1000, 21006, 383, 38336, 2314, 1237,
	1622, 238, 437, 2047, 1288, 1288, 1288, 437, -1000, 1346,
	1327, 1297, -1000, -519, 1875, -1000, -1000, 2468, -1000, -1000,
	1106, 1033, 1025, 940, 52776, 218, 311, -1000, 422, -1000,
	38336, 1288, 1007, 900, 1288, -1000, 1288, -1000, -1000, -1000,
	-1000, -1000, 1288, -1000, -1000, 1871, -1000, 1882, 1092, 1023,
	1087, 1006, 1871, -1000, -1000, -181, 1871, -1000, 1871, -1000,
	1871, -1000, 1871, -1000, 1871, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 974, 304, -354, 52776, 218, 453,
	-1000, 449, 32560, -1000, -1000, -1000, 32560, 32560, -1000, -1000,
	-1000, -1000, 1595, 1590, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -503, 54220, -1000, 231, 951, 297, 371,
	333, 54220, 357, 2388, 2387, 2386, 2385, 2373, 276, 266,
	54220, 54220, 432, 2103, 54220, 2333, 54220, -1000, -1000, -1000,
	-1000, 1588, 1574, -1000, 1429, 54220, -1000, -1000, 1088, 1088,
	-1000, -1000, 54220, 1088, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1088, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54220, -1000,
	-1000, -1000, -1000, -33, 156, -1000, -1000, 52776, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -100, -1000, 323,
	14, 397, -1000, -1000, -1000, -1000, -1000, 2399, -1000, 1429,
	970, 977, -1000, 1446, -1000, -1000, 1139, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 243, 23172, 23172, 23172, 1569,
	811, 1618, 1226, 1318, 1156, 1156, 896, 23172, 896, 23172,
	880, 880, 880, 880, 880, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1548, -1000, 1446, 53498, 1766, 15945, 1424,
	1443, 1357, 893, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3840, 1743, -1000, 1743, 1200, 981, -1000,
	21006, 1357, 3814, -1000, -1000, 1357, 1357, 21006, -1000, -1000,
	21006, 21006, 21006, 21006, 1622, 1622, 1622, 1622, 1622, 1622,
	1622, 1622, 1622, 1622, 21006, 1622, 1870, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1866, 2513, 1283, 1622, 1622,
	1622, 1622, 1622, 21006, 1685, -1000, -1000, -1000, 1510, 3810,
	1558, 3801, 1622, 1622, -1000, 1622, 3797, 3494, 1357, 1798,
	2954, 2938, 1622, 1622, 1622, 1622, 1622, 2934, 2867, 1622,
	1622, 2805, 1622, 3474, 1622, 2719, 2677, 2673, 2652, 2616,
	2611, 2590, 2555, 2543, 2529, 2523, 2508, 2485, 2481, 2467,
	2460, 2448, 2437, 1622, 1622, 1622, 3453, 1622, 3435, 1622,
	3416, 1622, 1622, 3411, 2425, 2411, 1357, 1864, -1000, 3406,
	1622, 3400, 3391, 3377, 2402, 3371, 3363, 3344, 1622, 1622,
	1622, 2398, 3334, 3329, 3321, 3310, 3298, 3285, 3281, 3271,
	3259, 1622, 1410, 1410, 1410, 1410, 1410, 3254, -252, 1622,
	1357, -1000, -1000, -1000, -1000, -1000, 3247, 2354, 3189, 3176,
	3020, 3015, 1357, 1859, 1446, 804, -1000, -1000, 1743, 1357,
	1357, 1743, 1743, 3010, 2981, 2962, 2942, 2906, 2862, 1622,
	1622, -1000, 1622, 2856, 2831, 2311, 2278, 1357, -1000, 1410,
	54220, -1000, -427, -1000, 5, 929, 1446, -1000, 36892, 1357,
	-1000, 5968, -1000, 1204, -1000, -1000, -1000, -1000, -1000, 34004,
	1783, 2848, -1000, -1000, 1446, 1734, -1000, -1000, 342, 87,
	33282, 869, 869, 111, 1429, 1429, 21006, -1000, -1000, -1000,
	-1000, -1000, -1000, 798, 2486, 375, 1446, -1000, 1817, 2151,
	-1000, -1000, -1000, 2359, 26783, -1000, -1000, 1446, 1446, 54220,
	1806, 1779, -1000, 788, -1000, 1312, 1857, 13, 2, -1000,
	-1000, -1000, -1000, 1429, -1000, 1295, 344, 1464, -1000, 439,
	-1000, -1000, -1000, -1000, 2243, 79, -1000, -1000, -1000, 360,
	342, -1000, -1000, -1000, -1000, -1000, -1000, 1542, 1542, -1000,
	-1000, -1000, -1000, -1000, 1224, -1000, -1000, -1000, -1000, 1222,
	-1000, -1000, 1218, -1000, -1000, 2442, 2124, 383, -1000, -1000,
	934, 1537, -1000, -1000, 2232, 934, 934, 52776, -1000, -1000,
	1735, 2314, 231, 54220, 941, 2102, -1000, 2047, 2047, 2047,
	54220, -1000, -1000, -1000, -1000, -1000, -1000, -510, 167, 364,
	-1000, -1000, -1000, 2008, 52776, 1731, -1000, 211, -1000, 1726,
	-1000, 52776, -1000, 1722, 1996, 1288, 1288, -1000, -1000, -1000,
	52776, 1446, -1000, -1000, -1000, -1000, 481, 2284, 340, -1000,
	-1000, -279, -1000, -1000, 218, 211, 53498, 1288, 875, -1000,
	-1000, -1000, -1000, -1000, -502, 1720, 470, 220, 566, 54220,
	54220, 54220, 54220, 54220, 793, -1000, -1000, 32, -1000, -1000,
	196, -1000, -1000, -1000, -1000, 196, -1000, -1000, -1000, -1000,
	253, 442, -1000, 54220, 54220, 947, -1000, -1000, -1000, -1000,
	-1000, 1062, -1000, -1000, 1062, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2280, 54220, 12,
	-469, -1000, -465, 21006, -1000, -1000, -1000, -1000, 1308, 810,
	1618, 23172, 23172, 1198, 1198, 23172, -1000, -1000, -1000, 353,
	353, 32560, -1000, 23172, 21006, 20284, -1000, -1000, 21006, 21006,
	930, -1000, 21006, 1262, -1000, 21006, -1000, -1000, 1410, 1622,
	1622, 1622, 1622, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1910, -1000, 21006, 21006, 21006, 1357, 310,
	-1000, -1000, -1000, -1000, -1000, 2506, -1000, 21006, -1000, 32560,
	21006, 21006, 21006, -1000, -1000, -1000, 21006, 21006, -1000, -1000,
	21006, -1000, 21006, -1000, -1000, -1000, -1000, -1000, -1000, 21006,
	-1000, 21006, -1000, -1000, -1000, 21006, -1000, 21006, -1000, -1000,
	21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000,
	21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000,
	21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000,
	21006, -1000, 21006, -1000, 21006, -1000, -1000, -1000, 21006, -1000,
	21006, -1000, 21006, -1000, -1000, 21006, -1000, 21006, -1000, 21006,
	-1000, 21006, 21006, -1000, 21006, 21006, 21006, -1000, 21006, 21006,
	21006, 21006, -1000, -1000, -1000, -1000, 21006, 21006, 21006, 21006,
	21006, 21006, 21006, 21006, 21006, 21006, -1000, -1000, -1000, -1000,
	-1000, -1000, 21006, -1000, 38336, 54, -252, 1444, 54, 1444,
	22450, 823, 815, 21728, -1000, 20284, 15217, -1000, -1000, -1000,
	-1000, -1000, 21006, 21006, 21006, 21006, 21006, 21006, -1000, -1000,
	-1000, 21006, 21006, -1000, 21006, -1000, 21006, -1000, -1000, -1000,
	-1000, -1000, 929, -1000, 900, 900, 900, 52776, -1000, -1000,
	-1000, -1000, 1855, -1000, 2453, -1000, 2176, 2172, 2505, 2486,
	-1000, 28950, 2848, -1000, -1000, 52776, -418, -1000, 2216, 2197,
	869, 869, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12305,
	2404, 21006, 2087, 53498, 240, -1000, 28228, 52776, 53498, 28950,
	28950, 28950, 28950, 28950, -1000, 2134, 2132, -1000, 2161, 2126,
	2242, 54220, -1000, 1593, 1713, -1000, 21006, 31116, 1794, 28950,
	-1000, -1000, 28950, 54220, 11577, -1000, -1000, 3, -11, -1000,
	-1000, -1000, -1000, 4936, -1000, -1000, 964, 2357, 2247, -1000,
	-1000, -1000, -1000, -1000, 1708, -1000, 1687, 1847, 1672, 1669,
	304, -1000, 1989, 2279, 934, 934, -1000, 1217, -1000, 1288,
	1523, 1516, -1000, -1000, -1000, 441, -1000, 2325, 54220, 2086,
	2079, 2075, -1000, -518, 1212, 1994, 1980, 21006, 1993, 2464,
	1835, 52776, -1000, -1000, 53498, -1000, 275, -1000, 383, 52776,
	-1000, -1000, -1000, 311, 54220, -1000, 4163, -1000, -1000, -1000,
	211, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54220, 232,
	-1000, 1987, 1230, -1000, -1000, 2042, -1000, -1000, -1000, -1000,
	178, 295, 1514, 191, 1512, 191, -1000, 54220, 860, 2124,
	54220, -1000, -1000, -1000, 1088, 1088, -1000, -1000, 2263, -1000,
	1288, 1622, 23172, 23172, -1000, 876, -1000, -1000, 393, -228,
	1964, 1964, -1000, 1964, 1974, -1000, 1964, 146, 1964, 139,
	1964, -1000, -1000, 1357, 1357, -1000, 1410, -1000, 2265, 2237,
	-1000, 1429, 21006, 2703, -1000, -1000, -1000, -1000, -1000, -73,
	2643, 2633, 1622, -1000, 1963, 1962, 21006, 1622, 1357, 2261,
	1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622,
	1622, 1622, 2252, 2244, 2231, 2219, 2205, 2188, 2182, 2089,
	2073, 2065, 2017, 2007, 2003, 1984, 1975, 1957, 1622, 1622,
	1945, 1622, 1936, 1917, -1000, 1429, 1410, 2594, 1410, 1622,
	1622, 2518, 292, 1622, 1660, 1660, 1660, 1660, 1660, 1410,
	1410, 1410, 1410, 1622, 52776, -1000, -252, -1000, -1000, -297,
	-298, -1000, 1357, -252, 1843, 23172, 1622, 23172, 23172, 23172,
	1622, 1357, -1000, 1912, 1844, 2288, 1838, 1622, 2054, 1622,
	1622, 1622, 1813, -1000, 2390, 2390, 2390, 1602, 1204, 54220,
	-1000, -1000, -1000, -1000, 2486, 2445, 1840, -1000, -1000, 87,
	596, -1000, 2211, 2197, -1000, 2463, 2200, 2457, -1000, -1000,
	-1000, -1000, -1000, 1429, -1000, 2296, 1822, -1000, 937, 1818,
	-1000, -1000, 19562, 1609, 2156, 542, 1602, 1858, 2151, 2059,
	2067, 2967, -1000, -1000, -1000, -1000, 2128, -1000, 2114, -1000,
	-1000, 1948, -1000, 1886, 338, 28950, 1823, 1823, -1000, 537,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1064, 7767, 2539,
	-1000, 1505, -1000, 1287, 206, 1203, -1000, -1000, 934, 934,
	-1000, 1005, 1000, -1000, 54220, 1961, -1000, 342, 1500, 342,
	1195, -1000, -1000, 1172, -1000, -1000, -1000, -1000, 1925, 2108,
	-1000, -1000, -1000, -1000, 54220, -1000, -1000, 54220, 54220, 54220,
	1960, 2449, -1000, 21006, 1956, 936, 2330, 52776, 52776, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	426, 934, -484, 265, 264, 934, 934, 934, -526, -1000,
	-1000, 1570, 1546, -1000, -214, -1000, 21006, -1000, -1000, -1000,
	1208, 1208, 1497, 1494, 1486, -1000, 1948, -1000, -1000, -1000,
	1717, -1000, -1000, -190, 52776, 52776, 52776, 52776, -1000, -1000,
	1188, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 876, 1357, 349, -201, 1357, -1000, -1000,
	342, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21006, -1000, 21006, -1000, 1429, 21006, 2404, 1472, 21006,
	21006, -1000, 1171, 1166, 1622, -1000, -1000, -1000, 21006, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000,
	21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000,
	21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000, 21006, -1000,
	21006, -1000, 21006, -1000, -1000, 21006, -1000, -1000, -1000, 21006,
	-1000, 21006, -1000, 21006, -1000, -1000, -1000, 21006, 234, 353,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1357, 336, -1000, -1000, -1000, -1000, 2465, -1000, 1357,
	21006, 1198, -1000, 1198, 1198, 1198, -1000, -1000, -1000, 21006,
	-1000, 21006, 21006, -1000, 21006, -1000, 21006, -1000, -1000, -1000,
	-1000, 21006, 1446, 2238, 1446, 1446, 31116, -1000, -1000, 2445,
	2438, 2447, 2190, 2208, 2208, 2211, -1000, 2430, 2429, -1000,
	1461, 2427, 1457, 996, -1000, 53498, 21006, 240, -1000, 378,
	52776, 240, 52776, -1000, 2426, -1000, -1000, 21006, 1954, -1000,
	21006, -1000, -1000, -1000, -1000, 8458, 2486, 1823, -1000, -1000,
	887, -1000, 21006, -1000, -1000, -1000, 54700, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1445, 1436, -1000, -1000, 1950,
	21006, -1000, -1000, -1000, 1528, 1468, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1948, -1000, -1000, -1000, -1000, 311,
	-516, 2292, 52776, 1155, -1000, 1536, 1835, 307, 240, 1434,
	934, 934, 934, 1150, 1149, 36892, 1533, -1000, 52776, 401,
	-1000, 311, -1000, -219, -224, 1622, -1000, -1000, 2352, -1000,
	-1000, 15217, -1000, -1000, 1935, 2044, -1000, -1000, -1000, -1000,
	2154, -179, -206, -1000, -1000, 1622, 1622, 1849, 1357, -1000,
	1622, 1622, 1455, 1381, -1000, 1622, 1622, 1622, 1622, 1622,
	1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622,
	1622, 1622, 1622, 1622, 1622, 1410, 1808, -1000, 234, 1357,
	2064, -1000, -1000, 8458, -1000, -1000, 2426, 2407, 54, -1000,
	-1000, 202, 54, 1429, 969, 1357, 1357, 969, 1799, 1622,
	1777, 1627, 1622, 1622, 31838, -1000, 2406, 2403, 37614, 37614,
	929, 2438, -269, 21006, 21006, 2184, 1154, -1000, -1000, -1000,
	-1000, 1349, 1341, -1000, 1337, -1000, 2537, -1000, 1429, -1000,
	240, -1000, 512, 1818, -1000, 2404, 1429, 52776, 1429, 64,
	2426, -1000, 1622, -1000, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
	1446, 1446, 1446, -1000, -1000, 52776, 2274, -1000, -1000, 2349,
	1527, 164, -1000, 1359, 1835, -1000, -1000, 217, -1000, 21006,
	-1000, 36892, 1334, 1329, -1000, -1000, -1000, -1000, -526, -1000,
	-1000, -1000, -1000, -1000, -1000, 408, 1830, -1000, 932, 52776,
	54220, -1000, 2148, -1000, -1000, -1000, 21006, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21006, -1000, 1357, 2062, -1000, -355,
	-1000, -488, 21006, -252, -1000, -1000, -252, -1000, -1000, -1000,
	-1000, -1000, 21006, -1000, -1000, 21006, -1000, 21006, -1000, -1000,
	1504, -1000, -1000, -1000, -1000, -1000, 1504, 1504, -1000, -269,
	-1000, 1827, -1000, 52776, 1429, 1798, -1000, 1147, -1000, -1000,
	-1000, -1000, -1000, 53498, 1818, 52776, -1000, 1491, 1357, 1446,
	2404, -1000, 1465, -1000, 408, -1000, 1931, 1980, -1000, -1000,
	-1000, 18840, -1000, -1000, -1000, -1000, -1000, 284, -183, 15217,
	10849, 1450, -1000, -182, 1622, 1410, -1000, -458, -1000, -1000,
	-1000, -1000, 293, -1000, -1000, 1798, -1000, -1000, 1541, 1467,
	1454, 36170, -1000, -1000, -1000, -1000, -269, -1000, -1000, 2344,
	-1000, -1000, 1781, -1000, -1000, 31116, 52054, -1000, -174, 330,
	-183, 21006, 1926, 1357, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -34, -1000, -1000, 499, -1000, -1000, -1000, 2042,
	-204, -1000, -1000, -1000, 296, -476, -302, -304, 23172, -1000,
	21006, -1000, 21006, -1000, 21006, -1000, -1000, -1000, 52776, 1446,
	-1000, 1406, -1000, 4875, -317, 2061, -1000, -127, -1000, -1000,
	-1000, 1042, 1324, -1000, -1000, -1000, -1000, -1000, -1000, 1896,
	52776, -1000, 418, -1000, -1000, 14489, -190, -209, 956, -1000,
	-1000, -1000, -1000, -1000, 1198, 1418, 1270, 1622, -1000, 52776,
	-1000, 52054, -307, 875, 8458, -1000, 2053, 1955, 2494, -1000,
	-1000, -1000, -1000, -1000, -1000, -528, 1356, 235, -1000, -1000,
	-1000, 296, -313, -1000, 21006, -1000, 21006, -1000, 1357, -1000,
	-1000, 2319, 64, -1000, 2510, -1000, 2487, 993, 993, -1000,
	1097, -528, -1000, -1000, -1000, -1000, 1622, 1622, -1000, -320,
	-1000, -1000, -1000, -1000, -1000, 365, 1144, -1000, -1000, -1000,
	-1000, -1000, 8458, -1000, -1000, -1000, 228, 228, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3315, 3312, 41, 5, 39, 38, 3308, 3307, 3305,
	171, 3291, 3290, 3278, 3276, 3262, 3256, 2630, 2613, 2575,
	3185, 3183, 3177, 3171, 3170, 3169, 3168, 3167, 3164, 37,
	103, 68, 93, 214, 199, 3161, 176, 162, 198, 3159,
	3156, 3154, 117, 187, 80, 82, 195, 3151, 3148, 69,
	3137, 3136, 3135, 192, 185, 183, 1033, 3134, 184, 113,
	50, 3132, 3131, 3128, 3127, 3122, 3119, 3117, 3115, 3110,
	3109, 3107, 3106, 3101, 3100, 3099, 3093, 3092, 3089, 299,
	3088, 3083, 20, 3079, 72, 3075, 3071, 3070, 3068, 3067,
	7, 3066, 3063, 27, 49, 3061, 3059, 44, 3058, 3053,
	3051, 3028, 3016, 47, 3015, 21, 3013, 42, 3012, 3011,
	124, 3003, 3000, 2993, 43, 2992, 2987, 2986, 30, 166,
	2982, 2981, 135, 2976, 2975, 2972, 168, 216, 2970, 2969,
	178, 101, 105, 2968, 2967, 106, 193, 2963, 123, 2960,
	2957, 2954, 150, 2953, 3188, 2952, 66, 62, 2949, 194,
	2941, 2935, 233, 63, 10, 16, 17, 2929, 2925, 64,
	74, 2922, 108, 2915, 2911, 97, 83, 2908, 104, 92,
	2907, 2904, 22, 6, 2903, 1, 4, 2, 85, 2897,
	2892, 111, 2890, 2886, 2884, 91, 2883, 2881, 1056, 2880,
	89, 128, 99, 84, 2878, 172, 131, 2874, 2869, 2867,
	2865, 2863, 48, 2855, 2854, 2851, 134, 244, 164, 2849,
	145, 340, 51, 144, 2848, 196, 75, 200, 165, 2847,
	2844, 133, 132, 2842, 2836, 56, 163, 190, 2828, 96,
	127, 119, 167, 95, 130, 2826, 2823, 57, 61, 2822,
	2821, 2818, 2811, 169, 2805, 2801, 60, 2799, 55, 2797,
	189, 2788, 136, 70, 2787, 170, 177, 2784, 141, 2782,
	2781, 65, 100, 110, 35, 2780, 158, 161, 125, 174,
	2779, 2777, 54, 2774, 2772, 2771, 197, 272, 2769, 2768,
	295, 180, 140, 147, 81, 2767, 321, 2764, 2763, 13,
	4386, 6663, 2760, 32, 160, 2757, 2755, 6869, 15, 45,
	31, 2752, 205, 2749, 2748, 2746, 2744, 220, 204, 112,
	159, 58, 2743, 2739, 2738, 34, 2735, 2725, 2724, 2709,
	2708, 2706, 73, 36, 33, 29, 212, 59, 19, 94,
	157, 151, 67, 2703, 2702, 2701, 121, 79, 2696, 153,
	152, 120, 90, 2692, 182, 142, 116, 2690, 98, 26,
	2689, 2684, 2680, 2676, 87, 2675, 2674, 2673, 2668, 149,
	143, 118, 78, 2664, 76, 114, 148, 146, 53, 2662,
	46, 2659, 2657, 23, 188, 28, 2655, 18, 102, 109,
	2654, 5666, 186, 2653, 8, 314, 155, 2652, 2649, 9,
	12, 11, 2642, 2638, 2636, 2635, 129, 2634, 2629, 2622,
	2614, 25, 52, 24, 14, 115, 77, 2599, 2595, 137,
	2587, 2583, 2576, 0, 1003, 126, 2509, 206,
}

//line sql.y:8563
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 258, 381, 382, 382, 256, 256, 28, 74, 36,
	36, 35, 35, 38, 38, 37, 31, 31, 31, 32,
	32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
	33, 33, 29, 29, 29, 29, 30, 30, 30, 30,
	30, 15, 16, 34, 34, 17, 17, 108, 108, 18,
	19, 19, 19, 19, 415, 415, 183, 183, 181, 181,
	182, 182, 261, 261, 20, 265, 265, 267, 267, 267,
	267, 257, 257, 257, 21, 21, 266, 266, 268, 268,
	268, 271, 271, 271, 271, 310, 310, 310, 22, 22,
	22, 22, 22, 128, 128, 384, 384, 383, 377, 377,
	376, 376, 375, 380, 380, 379, 379, 378, 40, 41,
	50, 50, 50, 50, 51, 52, 385, 385, 350, 57,
	57, 56, 56, 56, 56, 56, 56, 58, 58, 54,
	54, 53, 53, 55, 55, 352, 352, 338, 338, 351,
	351, 351, 351, 351, 351, 351, 337, 337, 139, 139,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 400, 400, 400,
	399, 399, 236, 236, 236, 236, 236, 236, 236, 236,
	148, 148, 159, 159, 159, 159, 159, 159, 146, 146,
	147, 145, 145, 145, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 158, 158, 154, 154, 154, 155, 155,
	155, 156, 156, 401, 401, 401, 401, 315, 315, 315,
	315, 318, 318, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 317, 317, 317, 317, 317, 317, 317, 319,
	319, 319, 319, 319, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	321, 321, 321, 321, 321, 321, 321, 321, 336, 336,
	322, 322, 330, 330, 331, 331, 332, 332, 332, 333,
	333, 333, 334, 334, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 329, 329, 328, 328, 328, 339, 364,
	364, 363, 363, 361, 361, 361, 361, 361, 361, 361,
	361, 348, 348, 358, 358, 358, 358, 358, 347, 347,
	343, 343, 343, 344, 344, 345, 345, 342, 342, 346,
	346, 360, 360, 359, 359, 340, 340, 341, 341, 366,
	402, 402, 402, 402, 402, 403, 403, 367, 392, 394,
	394, 394, 393, 393, 390, 391, 389, 389, 389, 389,
	389, 84, 84, 84, 284, 284, 285, 285, 356, 356,
	355, 355, 355, 357, 357, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 279, 279, 279, 388,
	388, 388, 388, 388, 388, 387, 387, 387, 353, 353,
	353, 353, 386, 386, 59, 59, 216, 216, 405, 405,
	406, 406, 406, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 110, 110, 111, 111, 111, 111, 113,
	113, 113, 369, 369, 60, 60, 3, 3, 171, 173,
	174, 174, 172, 172, 172, 172, 172, 172, 62, 62,
	61, 61, 176, 175, 177, 177, 177, 1, 1, 2,
	2, 4, 4, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 335, 335, 335, 368, 368,
	370, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 116, 115, 115, 114, 117, 117, 117, 117, 117,
	117, 117, 117, 372, 372, 372, 63, 63, 373, 323,
	324, 325, 5, 6, 349, 371, 124, 124, 24, 39,
	39, 25, 25, 25, 25, 26, 26, 64, 67, 67,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 278, 278, 287, 287, 277, 277, 302, 302,
	302, 280, 280, 280, 281, 281, 398, 398, 398, 274,
	274, 66, 66, 66, 303, 303, 303, 303, 69, 69,
	407, 407, 408, 408, 409, 409, 409, 70, 71, 71,
	305, 305, 306, 306, 72, 73, 85, 85, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 109, 109, 109,
	10, 10, 10, 10, 81, 81, 81, 9, 9, 11,
	68, 68, 75, 395, 395, 396, 397, 397, 397, 397,
	76, 78, 27, 27, 27, 27, 27, 27, 134, 134,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 129, 129, 129, 123, 123, 416, 79, 80,
	80, 127, 127, 127, 120, 120, 120, 126, 126, 126,
	12, 12, 13, 260, 260, 14, 14, 131, 131, 133,
	133, 133, 133, 133, 135, 135, 135, 135, 135, 135,
	135, 130, 130, 132, 132, 132, 132, 295, 295, 295,
	294, 294, 165, 165, 167, 166, 166, 168, 168, 169,
	169, 169, 169, 214, 214, 191, 191, 253, 253, 254,
	254, 252, 252, 259, 259, 255, 255, 255, 255, 262,
	262, 170, 170, 170, 170, 178, 178, 179, 179, 180,
	180, 304, 304, 300, 300, 300, 299, 299, 184, 184,
	184, 186, 185, 185, 185, 185, 187, 187, 189, 189,
	188, 188, 190, 195, 195, 194, 194, 192, 192, 192,
	192, 193, 193, 193, 193, 196, 196, 144, 144, 144,
	144, 144, 144, 144, 144, 157, 157, 157, 157, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	243, 243, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 219, 219, 218, 218, 87, 87, 87, 88,
	88, 89, 89, 89, 89, 89, 90, 90, 90, 90,
	90, 90, 90, 92, 92, 91, 91, 209, 209, 292,
	292, 93, 94, 94, 97, 97, 96, 95, 95, 101,
	101, 98, 98, 100, 100, 99, 102, 102, 103, 104,
	104, 275, 275, 197, 197, 205, 205, 205, 205, 198,
	198, 198, 198, 198, 198, 198, 206, 206, 206, 213,
	207, 207, 203, 203, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 162, 162, 162, 162, 224,
	224, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 151, 151, 163, 163,
	163, 163, 164, 164, 164, 164, 164, 164, 164, 312,
	312, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 417,
	417, 326, 326, 326, 204, 204, 204, 204, 204, 125,
	125, 125, 125, 125, 309, 309, 309, 313, 313, 313,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 314, 314, 222, 222, 121,
	121, 220, 220, 221, 223, 223, 215, 215, 215, 215,
	217, 217, 200, 200, 200, 225, 225, 226, 226, 105,
	106, 106, 107, 107, 227, 227, 229, 228, 228, 230,
	231, 231, 231, 232, 232, 233, 233, 233, 49, 49,
	49, 49, 49, 44, 44, 44, 44, 45, 45, 45,
	45, 136, 136, 136, 136, 138, 138, 137, 137, 82,
	82, 83, 83, 83, 142, 142, 143, 143, 143, 140,
	140, 141, 141, 250, 250, 234, 234, 234, 241, 241,
	241, 237, 237, 239, 239, 239, 240, 240, 240, 238,
	247, 247, 249, 249, 248, 248, 244, 244, 245, 245,
	246, 246, 246, 242, 242, 199, 199, 199, 199, 199,
	251, 251, 251, 251, 263, 263, 210, 210, 212, 212,
	211, 211, 161, 264, 264, 272, 269, 269, 270, 270,
	296, 296, 296, 273, 273, 286, 286, 282, 282, 283,
	283, 276, 276, 288, 288, 288, 77, 208, 208, 365,
	365, 362, 291, 291, 293, 293, 297, 297, 301, 301,
	298, 298, 8, 410, 410, 410, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	413, 414, 307, 308, 308, 308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 5, 5,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 4, 4, 4,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 5, 5,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 5, 6,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	4, 2, 4, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 6, 8, 6,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 2,
	2, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 8, 4, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	4, 6, 6, 6, 8, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 6, 4, 6, 4, 4,
	4, 4, 4, 4, 6, 4, 6, 4, 4, 4,
	6, 4, 6, 4, 4, 6, 4, 6, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 4, 4, 6,
	4, 6, 4, 8, 6, 4, 4, 6, 4, 6,
	8, 4, 6, 8, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 4, 4, 6, 4,
	6, 5, 9, 6, 9, 8, 6, 8, 8, 8,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 6, 8, 10, 12, 14, 6, 8, 8, 10,
	12, 14, 6, 8, 10, 12, 6, 8, 4, 4,
	3, 4, 6, 6, 4, 6, 4, 6, 8, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 5,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 2,
	1, 3, 0, 1, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -411, -79, -416, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 10, 11, -108, -35, 33, -40,
	-50, 227, -51, -41, 228, -52, 230, 229, 267, 231,
	379, 260, 75, 315, 316, 318, 319, 320, 321, -109,
	684, 265, 266, 233, 37, 46, 34, 35, 38, 237,
	273, 274, 236, 133, -33, -36, 9, -413, 12, 469,
	262, 261, 29, -34, 578, 87, -80, -412, 732, -250,
	-234, 23, 34, 30, -233, -229, -127, -234, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -350, -352, 87,
	160, 87, -79, -57, -56, -54, -53, -55, -58, 32,
	-47, -48, -374, -46, -43, 232, 229, 277, 123, 124,
	267, 268, 269, 231, 251, 266, 270, 265, 286, -42,
	82, 34, 578, 581, -357, 228, 234, 235, 230, 470,
	126, 125, 76, -354, 374, 611, 702, -58, 704, 101,
	104, 703, 45, 241, 705, 706, 707, 618, 708, 250,
	709, 710, 711, 712, 718, 659, 719, 720, 721, 127,
	8, -79, -301, -297, 91, -290, 575, 253, 609, 423,
	610, 302, 82, 42, 514, 584, 371, 374, 611, 499,
	702, 380, 315, 331, 325, 504, 505, 506, 354, 346,
	576, 612, 585, 305, 254, 290, 696, 344, 136, 704,
	309, 613, 268, 381, 382, 614, 383, 101, 318, 420,
	717, 308, 615, 715, 104, 703, 323, 80, 498, 52,
	699, 45, 263, 428, 429, 342, 236, 338, 705, 291,
	616, 587, 284, 126, 123, 724, 37, 334, 51, 31,
	714, 125, 50, 706, 151, 617, 707, 618, 385, 361,
	690, 49, 386, 269, 619, 85, 274, 580, 312, 698,
	387, 519, 335, 388, 301, 713, 233, 620, 679, 671,
	672, 389, 390, 691, 366, 362, 367, 521, 621, 412,
	503, 391, 675, 676, 731, 53, 622, 623, 692, 124,
	624, 79, 708, 81, 329, 330, 625, 299, 252, 524,
	525, 414, 358, 481, 488, 489, 111, 112, 484, 113,
	490, 114, 491, 492, 493, 482, 115, 108, 483, 494,
	495, 359, 360, 116, 496, 110, 109, 485, 487, 117,
	497, 250, 36, 392, 577, 303, 59, 307, 278, 415,
	47, 364, 728, 46, 686, 526, 626, 689, 357, 353,
	478, 54, 627, 628, 629, 630, 500, 709, 356, 328,
	352, 723, 4, 296, 501, 710, 63, 235, 369, 368,
	370, 285, 411, 349, 631, 632, 633, 257, 83, 634,
	339, 22, 635, 636, 393, 292, 637, 57, 638, 639,
	418, 266, 640, 55, 711, 40, 641, 271, 725, 712,
	642, 643, 644, 685, 645, 273, 646, 395, 647, 673,
	674, 394, 363, 365, 527, 280, 396, 379, 238, 579,
	648, 313, 333, 270, 716, 649, 258, 515, 516, 517,
	518, 697, 523, 522, 272, 277, 265, 419, 259, 650,
	651, 652, 653, 654, 306, 670, 655, 656, 319, 718,
	479, 44, 657, 658, 659, 660, 661, 300, 295, 413,
	422, 62, 84, 376, 662, 663, 695, 327, 324, 293,
	460, 462, 463, 464, 465, 466, 461, 468, 664, 316,
	56, 719, 720, 721, 287, 722, 507, 508, 509, 510,
	10, 561, 544, 572, 545, 562, 546, 555, 547, 563,
	571, 573, 528, 536, 529, 537, 567, 550, 564, 556,
	549, 548, 570, 553, 557, 530, 538, 568, 554, 531,
	539, 532, 540, 533, 541, 566, 565, 558, 569, 534,
	542, 560, 535, 543, 559, 551, 552, 431, 729, 730,
	502, 398, 127, 297, 298, 48, 350, 279, 665, 310,
	666, 340, 341, 475, 476, 355, 326, 351, 682, 317,
	680, 281, 399, 480, 267, 667, 421, 294, 372, 377,
	311, 583, 520, 286, 400, 694, 582, 511, 512, 348,
	345, 288, 513, 668, 684, 401, 242, 282, 283, 669,
	681, 402, 403, 304, 404, 405, 406, 407, 408, 410,
	314, 409, 683, 677, 678, 289, 459, 581, 322, 343,
	378, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 477,
	240, -79, 240, -188, -297, 240, 179, -269, 382, -287,
	384, 397, 392, 402, 390, -278, 393, 395, 280, -398,
	412, 240, 399, 227, 385, 394, 403, 404, 304, 410,
	405, 314, 409, 289, 406, 407, 408, -381, 179, 707,
	722, 136, 347, 389, 387, 413, 686, 91, -303, 91,
	92, 93, -290, 317, -305, 322, -291, -381, -290, 320,
	-79, -79, -307, -307, -129, 686, 688, -207, -144, 144,
	-157, -258, -160, 92, -149, -152, -201, -202, -203, -204,
	-158, -217, -256, 168, 169, 176, 145, -213, -161, 27,
	574, 471, 470, 179, 32, 222, 69, 70, 473, 147,
	58, 12, 436, 437, -159, 426, 427, 438, 432, 433,
	498, 500, 501, 502, 499, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 503, 514, 475, 476, 118,
	477, 108, 110, 109, 478, 479, 480, 344, 526, 527,
	521, 524, 525, 523, 522, 359, 360, 481, 544, 545,
	549, 548, 546, 547, 550, 553, 554, 555, 556, 557,
	558, 560, 559, 551, 552, 529, 528, 530, 531, 532,
	533, 534, 535, 537, 536, 538, 539, 540, 541, 542,
	543, 561, 562, 563, 564, 565, 567, 566, 571, 570,
	568, 569, 573, 572, 482, 483, 111, 112, 113, 114,
	115, 116, 117, 484, 487, 485, 486, 488, 489, 490,
	495, 496, 491, 492, 493, 494, 497, 370, 368, 369,
	365, 364, 363, -89, -101, 600, 599, -102, 423, 428,
	429, 431, -150, -151, -163, -164, -291, -297, 245, 425,
	239, 174, 469, -153, -147, -215, 107, 93, -31, -211,
	424, 434, 435, 439, 430, 440, 586, 588, 603, 604,
	606, 591, 596, 595, 598, 515, 516, 517, 518, 519,
	520, 671, 672, 673, 674, 675, 676, 677, 678, -381,
	-290, 91, -155, -154, -197, 94, 99, 102, 103, 105,
	-404, 263, 340, 341, 119, -413, 700, 90, 95, 96,
	97, 98, 120, 121, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 45, 398, 398, -188,
	-79, -79, -79, -79, -410, 703, 579, -227, -127, -229,
	-33, -31, -413, 9, -79, -31, -32, -30, -36, -38,
	605, -37, -297, 100, -234, -250, 13, 163, 43, 51,
	-232, -233, -34, -31, -144, 20, 24, 25, -132, 170,
	-144, -297, -132, -276, 244, -79, -79, -265, -310, 317,
	-267, 413, 686, 412, -257, -270, 91, -256, -269, 411,
	92, -351, 160, -337, -341, -291, 255, -367, 251, -188,
	-360, -359, -291, -413, -128, -286, 241, 249, 248, 137,
	-385, 140, 297, 425, 239, -53, -54, -55, -269, 178,
	706, -110, 272, 276, 88, 88, -341, -340, -339, -386,
	276, 255, -366, -358, 247, 256, -347, 248, 249, -342,
	241, 138, -386, -342, 246, 256, 251, 255, 276, 276,
	127, 276, 127, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 271, -348, 152, -348, 582, 582, -354, -386,
	251, 241, -386, -386, 247, -288, -342, 243, 26, 243,
	36, 36, -348, -348, -348, -269, 178, -348, -348, -348,
	-348, 284, 284, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	240, -385, -136, 409, 304, 82, -56, 286, -39, -188,
	-286, 241, 242, -385, 273, -188, 223, -188, 689, -280,
	160, 16, -280, -277, 398, 396, 383, 388, -280, -280,
	-280, -280, 287, 381, -343, 241, 36, 252, 398, 287,
	381, 287, 288, 287, 288, 391, 401, 287, -302, 15,
	163, 425, 386, 390, 280, 240, 281, 242, 400, 288,
	-302, 90, -281, 160, 287, 398, 283, -280, -280, -308,
	-413, -293, -291, -289, 232, 24, 143, 26, 28, 146,
	179, 130, 20, 147, 38, 234, 347, 251, 178, 247,
	470, 227, 73, 586, 426, 433, 424, 432, 436, 472,
	473, 425, 384, 32, 14, 588, 29, 261, 25, 39,
	172, 229, 150, 589, 264, 27, 262, 118, 121, 591,
	23, 76, 256, 15, 249, 41, 17, 592, 593, 18,
	245, 244, 163, 241, 71, 12, 222, 30, 159, 67,
	594, 138, 133, 595, 596, 597, 598, 131, 69, 160,
	21, 726, 434, 435, 34, 687, 574, 275, 174, 74,
	60, 688, 144, 430, 599, 600, 119, 601, 122, 77,
	693, 140, 19, 72, 43, 602, 276, 603, 246, 727,
	604, 416, 605, 161, 230, 469, 70, 162, 700, 606,
	701, 239, 397, 9, 474, 33, 260, 248, 129, 68,
	440, 607, 240, 149, 243, 132, 120, 8, 137, 35,
	13, 75, 78, 437, 438, 439, 58, 128, 578, 148,
	16, 608, 417, 142, -381, 689, -308, -308, 33, 92,
	-407, -408, -409, 578, 416, 243, -291, -188, -85, 679,
	231, -86, 685, 24, 238, -134, 398, -122, 179, 707,
	690, 691, 692, 689, 395, 697, 695, 693, 287, 694,
	88, 140, 142, 143, 4, -144, 159, -198, 152, 153,
	154, 155, 156, 157, 158, 164, 163, 144, 146, 160,
	-243, 141, 165, 166, 167, 168, 169, 170, 171, 173,
	172, 174, 175, 161, 162, 178, 225, 226, -152, -152,
	-152, -152, -213, -219, -218, -413, -215, -381, -290, -297,
	-413, -413, -152, -275, -413, -149, -413, -413, -413, -413,
	-222, -144, -413, -413, -417, -413, -417, -417, -417, -326,
	-413, -326, -326, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, 223, -413, -413, -413,
	-413, -413, -326, -326, -326, -326, -326, -326, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, 103, 99, 102, 94, -217, 105, 90, 90,
	90, 90, -31, -32, -207, -413, -307, -395, -396, -191,
	-188, -413, 304, -291, -291, 273, 96, -232, -34, -31,
	-227, -233, -229, -31, -79, -120, -133, 64, 65, -135,
	25, 39, 68, 66, 24, -414, 89, -414, -250, -414,
	88, -38, -253, 87, 62, 44, 90, 90, 88, 22,
	-228, -230, -144, 15, -295, 4, -294, 26, -291, 90,
	223, 15, -189, 30, -188, -276, -276, 88, 91, 317,
	-266, -268, 414, 416, 152, -296, -291, 90, 32, 89,
	88, -188, -315, -318, -320, -319, -321, -316, -317, 344,
	345, 179, 348, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 361, 33, 263, 340, 341, 342, 343, 362,
	363, 364, 365, 367, 368, 369, 370, 325, 346, 576,
	326, 327, 328, 329, 330, 331, 333, 334, 337, 335,
	336, 338, 339, -382, -381, 87, 89, 88, -322, 87,
	-144, -136, 240, -381, 241, 241, 241, -79, 469, -348,
	-348, -348, 271, 20, -46, -43, -374, 19, -42, -43,
	232, 123, 124, 229, 87, -337, 87, -346, -382, -381,
	87, 138, 246, 137, -345, -342, -345, -346, -381, -215,
	-381, 138, 138, -381, -381, -262, -291, -262, -262, 24,
	-262, 24, -262, 24, 96, -291, -262, 24, -262, 24,
	-262, 24, -262, 24, -262, 24, 32, 79, 80, 81,
	32, 83, 84, 85, -215, -381, -381, -215, -337, -215,
	-188, -381, -269, 96, 96, 96, -348, -348, 96, 90,
	90, 90, -348, -348, 96, 90, -299, -297, 90, 90,
	-387, 257, 301, 303, 96, 96, 96, 96, 32, 90,
	-388, 32, 714, 713, 715, 716, 717, 90, 96, 32,
	96, 32, 96, -291, 87, -188, -142, 291, 227, 229,
	232, 77, 90, 307, 308, 305, 310, 311, 152, 45,
	88, 243, 240, -381, -282, 245, -282, -291, -298, -297,
	-289, 243, 380, 90, -144, -344, 15, 163, -302, -302,
	-280, -188, -344, -302, -280, -188, -280, -280, -280, -280,
	-302, -302, -302, -280, -297, -297, -188, -188, -188, -188,
	-188, -188, -188, -308, -281, -280, 689, 90, -274, 15,
	77, -308, -308, 88, 323, 417, 418, -306, 320, -81,
	-291, 90, -10, -29, -18, -17, -19, 152, -10, 88,
	578, -181, -188, 689, 689, 689, 689, 689, 689, -144,
	-144, -144, -144, 601, -205, 119, 144, 120, 121, -160,
	-144, -206, -211, -213, 106, 163, 146, 160, -243, -149,
	-152, -149, -149, -149, -149, -149, -149, 222, -149, 222,
	-149, -149, -149, -149, -149, -149, -309, -291, 90, 179,
	-156, -155, 105, -404, -156, 575, 88, -218, 223, -144,
	-144, -381, -118, 442, 443, 444, 445, 447, 448, 449,
	452, 453, 457, 458, 441, 459, 446, 451, 454, 455,
	456, 450, 343, -144, -130, -132, -130, -144, -220, -221,
	148, -215, -144, -414, -414, 96, 170, -126, 25, 39,
	-126, -126, -126, -126, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -126, -144, -119, 441, 459, 446,
	451, 454, 455, 456, 450, 343, 460, 461, 462, 463,
	464, 465, 466, 467, 468, -119, -118, -144, -144, -144,
	-144, -144, -144, -87, -144, 130, 131, 132, -207, -144,
	-149, -144, -144, -144, -414, -144, -144, -144, -208, -207,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -380, -379, -378, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -207, -207, -207, -207, -207, -144, -414, -144,
	-162, -147, 96, -258, 105, 92, -144, -144, -144, -144,
	-144, -144, -131, -130, -293, -298, -289, -290, -130, -131,
	-131, -130, -130, -144, -144, -144, -144, -144, -144, -144,
	-144, -414, -144, -144, -144, -144, -144, -250, -414, -207,
	88, -397, 416, 417, 687, -300, 276, -299, 26, -208,
	90, 15, -260, 78, -291, -232, -232, 64, 65, 60,
	-130, -135, -414, -37, 26, -252, -291, 63, 90, -327,
	-269, 371, 372, 179, -144, -144, 88, -231, 28, 29,
	-188, -294, 170, -298, -188, -261, 276, -188, -166, -168,
	-169, -170, -191, -214, -413, -171, -31, 597, 594, 15,
	-181, -182, -190, -297, -267, -310, -266, 88, 415, 417,
	418, 77, 122, -144, -328, 178, -356, -355, -354, -337,
	-339, -340, -341, 89, -328, -333, 377, 376, -322, -322,
	-322, -322, -322, -327, -327, -327, -327, 87, 87, -322,
	-322, -322, -322, -330, 87, -330, -330, -331, -330, 87,
	-331, -332, 87, -332, -367, -144, -364, -363, -361, -362,
	250, 101, 669, 625, 578, 618, 659, 78, -359, -231,
	96, -414, -142, -283, 245, -365, -362, -381, -381, -381,
	-283, 91, 90, 91, 90, 91, 90, -111, -60, -1,
	726, 727, 728, 88, 20, -338, -337, -59, 301, -370,
	-371, 276, -366, -360, -346, 138, -345, -346, -346, -381,
	88, 30, 127, 127, 127, 127, 578, 229, 33, -284,
	617, 144, 669, 625, -337, -59, 243, 243, -309, -309,
	-309, 90, 90, -279, 722, -181, -138, 293, 152, 282,
	282, 240, 240, 295, -188, 306, 309, 307, 308, 305,
	310, 311, 24, 24, 24, 24, 24, 294, 296, 298,
	284, -188, -188, -282, 77, -183, -188, 27, -297, 90,
	90, -188, -280, -280, -188, -280, -280, -188, -409, 324,
	-291, 358, 680, 681, 683, 682, -122, 416, 88, 578,
	23, -123, 23, -413, 119, 120, 121, -206, -149, -152,
	-149, 143, 264, -149, -149, -413, -215, -414, -293, 26,
	88, 78, -414, 168, 88, 88, -414, -414, 88, 15,
	-223, -221, 150, -144, -414, 88, -414, -414, -207, -144,
	-144, -144, -144, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -207, -414, 88, 88, 15, -313, 26,
	-414, -414, -414, -414, -414, -222, -414, 15, -414, 78,
	88, 163, 88, -414, -414, -414, 88, 88, -414, -414,
	88, -414, 88, -414, -414, -414, -414, -414, -414, 88,
	-414, 88, -414, -414, -414, 88, -414, 88, -414, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, -414, -414, 88, -414,
	88, -414, 88, -414, -414, 88, -414, 88, -414, 88,
	-414, 88, 88, -414, 88, 88, 88, -414, 88, 88,
	88, 88, -414, -414, -414, -414, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, -414, -414, -414, -414,
	-414, -414, 88, -94, 602, -414, -414, 88, -414, 88,
	88, 88, 88, 88, -414, -413, 223, -414, -414, -414,
	-414, -414, 88, 88, 88, 88, 88, 88, -414, -414,
	-414, 88, 88, -414, 88, -414, 88, -414, -396, 686,
	417, -195, -194, -192, 75, 244, 76, -413, -299, -414,
	-156, -258, -259, -258, -200, -291, 96, 105, -234, -165,
	-167, 15, -135, -213, 89, 88, -327, -238, -244, -277,
	-291, 90, 179, -329, 179, -329, 371, 372, -230, 223,
	-196, 16, -199, 33, 58, -29, -413, -413, 33, 88,
	-184, -186, -185, -187, 67, 71, 73, 68, 69, 70,
	74, -304, 26, -31, -166, -31, -413, -188, -181, -415,
	15, 78, -415, 88, 223, -268, -271, 419, 416, 422,
	-381, 90, -110, 88, -354, -341, -235, -139, 41, -334,
	378, -327, 585, -327, -336, 90, -336, 96, 96, 96,
	89, -49, -44, -45, 34, 82, -361, -348, 90, 40,
	-348, -348, -291, 89, -231, -138, -188, 144, 77, -365,
	-365, -365, -297, -2, 725, 731, 138, 87, 383, 19,
	-252, 88, 89, -216, 302, 89, -112, -291, 89, 87,
	-346, -346, -291, -413, 240, 32, 32, 669, 625, 617,
	-59, -216, -215, -381, -328, 724, 723, 89, 242, 300,
	-143, 436, -140, 90, 91, -188, -188, -188, -188, -188,
	232, 229, 406, -405, 312, -405, 285, 243, -181, -188,
	88, -84, 259, 254, -302, -302, 34, -188, 416, 698,
	696, -144, 143, 264, -160, -152, -118, -118, -149, -311,
	179, 344, 263, 342, 338, 358, 349, 376, 340, 377,
	335, 334, 333, -311, -309, -149, -207, -132, -144, -144,
	151, -144, 149, -144, -414, -414, -414, -414, -414, -227,
	-144, -144, -144, -414, 179, 344, 15, -144, -309, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -378, -144, -207, -144, -207, -144,
	-144, -144, -144, -144, -379, -379, -379, -379, -379, -207,
	-207, -207, -207, -144, -413, -291, -97, -96, -95, 652,
	244, -94, -162, -97, -162, 222, -144, 222, 222, 222,
	-144, -131, -293, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -192, -342, -342, -342, -262, 88, -273,
	23, 15, 58, 58, -165, -196, -166, -135, -291, -241,
	679, -247, 47, -245, -246, 48, -242, 49, 57, -329,
	-329, 170, -232, -144, -263, 77, -264, -272, -215, -210,
	-212, -211, -413, -251, -414, -291, -262, -264, -168, -169,
	-169, -168, -169, 67, 67, 67, 72, 67, 72, 67,
	-185, -297, -414, -144, -300, 78, -166, -166, -190, -297,
	170, 416, 420, 421, -354, -403, 119, 144, 32, 77,
	374, 101, -401, 178, 614, 664, 669, 625, 618, 659,
	-402, 246, 137, 138, 258, 26, 42, 89, 88, 89,
	88, 89, 89, 88, -285, -284, -45, -44, -348, -348,
	96, -381, 90, 90, 242, 27, -188, 77, 77, 77,
	-113, 729, 96, 87, -3, 82, -144, 87, 20, -337,
	-215, -372, -323, -373, -324, -325, -5, -6, -349, -116,
	58, 101, -63, 45, 241, 709, 710, 127, -413, 722,
	-364, -252, -368, -370, -188, -146, -413, -145, -147, -153,
	168, 169, 263, 340, 341, -216, -188, -137, 291, 299,
	87, -141, 92, -384, 78, 282, 374, 282, 90, -406,
	313, 90, -406, -188, -84, -49, -188, -280, -280, 34,
	-381, -414, -160, -152, -125, 163, 578, -314, 584, -322,
	-322, -322, -332, -322, 330, -322, 330, -322, -414, -414,
	-414, 88, -414, 23, -414, -144, 88, -121, 474, 88,
	88, -414, 87, 87, -144, -414, -414, -414, 88, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, -414, 88, -414, -414, -414, 88,
	-414, 88, -414, 88, -414, -414, -414, 88, -312, 670,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -93, -292, -291, -94, 634, 634, -414, -94, -224,
	88, -149, -414, -149, -149, -149, -414, -414, -414, 88,
	-414, 88, 88, -414, 88, -414, 88, -414, -414, -414,
	-414, 88, -193, 23, -193, -193, -414, -258, -188, -196,
	-225, 17, -238, 52, 350, -249, -248, 56, 48, -246,
	20, 50, 20, 31, -263, 88, 152, 88, -414, -414,
	88, 58, 223, -414, -196, -179, -178, 77, 78, -180,
	77, -178, 67, 67, -253, 88, -261, -166, -196, -196,
	223, 119, -413, -148, -159, -146, 13, 90, 90, -381,
	-400, 713, 714, 32, 96, -348, -348, 138, 138, -188,
	87, -327, 90, -327, 96, 96, 32, 83, 84, 85,
	32, 79, 80, 81, -188, -188, -188, -188, -369, 87,
	20, -144, 87, 152, 89, -252, -252, 278, 163, -348,
	707, 284, 284, -348, -348, -348, -115, -114, 729, 89,
	-414, 88, -335, 578, 581, -144, -154, -154, -253, 89,
	-377, 578, -383, -291, -291, -291, -291, 96, 98, -414,
	576, 74, 579, -414, -327, -144, -144, -144, -232, 90,
	-144, -144, 96, 96, -414, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -207, -144, -414, -176, -175,
	-177, 690, 119, 32, -311, -414, -209, 276, -100, -99,
	-98, 15, -414, -144, -118, -118, -118, -118, -144, -144,
	-144, -144, -144, -144, -413, 67, 19, 17, -413, -413,
	-300, -225, -226, 18, 20, -239, 54, -237, 53, -237,
	-248, 20, 20, 90, 20, 90, 138, -272, -144, -212,
	58, -29, -291, -210, -291, -227, -144, 87, -144, -156,
	-196, -196, -144, -202, 498, 500, 501, 502, 499, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 503,
	514, 475, 476, 477, 108, 110, 109, 478, 479, 480,
	344, 526, 527, 521, 524, 525, 523, 522, 359, 360,
	481, 544, 545, 549, 548, 546, 547, 550, 553, 554,
	555, 556, 557, 558, 560, 559, 551, 552, 529, 528,
	530, 531, 532, 533, 534, 535, 537, 536, 538, 539,
	540, 541, 542, 543, 561, 562, 563, 564, 565, 567,
	566, 571, 570, 568, 569, 573, 572, 482, 483, 111,
	112, 113, 114, 115, 116, 117, 484, 487, 485, 488,
	489, 490, 495, 496, 491, 492, 493, 494, 497, 370,
	368, 369, 365, 364, 363, 423, 428, 429, 431, 515,
	516, 517, 518, 519, 520, 671, 672, 673, 674, 675,
	676, 677, 678, 90, 90, 87, -144, 89, 89, -253,
	-368, -60, 89, -254, -252, 96, 89, 279, -211, -413,
	90, -348, -348, -348, 96, 96, -299, -414, 88, -291,
	-402, -370, 582, 582, -414, 26, -376, -375, -293, 87,
	78, 63, 577, 580, -414, -414, 88, -414, -414, -414,
	89, 89, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, 88, -414, -175, -177, -414, 77,
	-156, -227, 20, -97, 301, 303, -97, -414, -414, -414,
	-414, -414, 88, -414, -414, 88, -414, 88, -414, -414,
	-255, -414, -291, 246, 20, 20, -255, -255, -195, -226,
	-107, -106, -105, 608, -144, -207, -240, 55, 77, 122,
	90, 90, 90, 13, -210, 223, -232, -252, -173, 383,
	-227, -414, -252, 89, 26, 89, 731, 138, 89, -211,
	-124, -413, 275, -299, 90, 90, -114, -117, -29, 88,
	152, -252, -188, 63, -144, -207, -414, 77, 589, 690,
	-92, -91, -88, 701, 727, -207, -94, -94, -144, -144,
	-144, 88, -414, -414, -414, -107, 88, -104, -103, -291,
	77, 122, -264, -291, 89, -414, -413, -232, 89, -236,
	-29, 87, -3, 275, -323, -373, -324, -325, -5, -6,
	-349, -82, 578, -375, -353, -297, -293, 90, 96, 89,
	578, -414, -414, -90, 146, 699, 667, -154, 222, -414,
	88, -414, 88, -414, 88, -291, 246, -105, 88, 26,
	-300, -174, -172, -291, 631, -393, -392, 574, -403, -399,
	119, 144, 101, -401, 669, 625, 128, 129, -82, -144,
	87, -414, -83, 290, 686, 223, -384, 579, -90, 700,
	645, 620, 645, 620, -149, -144, -144, -144, -103, -413,
	-414, 88, 23, -315, -62, 642, -390, -391, 77, -394,
	389, 641, 662, 119, 90, 89, -252, 251, -298, -377,
	580, 143, -118, -414, 88, -414, 88, -414, -93, -172,
	638, -328, -156, -391, 77, -390, 77, 14, 13, -4,
	730, 89, 292, -90, 645, 620, -144, -144, -414, -61,
	27, -173, -389, 259, 254, 257, 33, -389, 96, -4,
	-414, -414, 642, 253, 32, 119, -156, -176, -175, -175,
}

var yyDef = [...]int{
	877, -2, -2, 879, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 877, 877, 877, 0, 877, 0,
	0, 877, -2, -2, 877, 1608, 0, 877, 0, 0,
	0, -2, 792, 798, 0, 807, -2, 0, 0, 877,
	877, 2232, 2232, 872, 0, 0, 0, 0, 0, 877,
	877, 877, 877, 1613, 1474, 52, 877, 0, 87, 88,
	827, 828, 829, 67, 0, 2230, 878, 1, 3, 73,
	77, 0, 0, 0, 60, 1483, 0, 80, 0, 0,
	881, 0, 0, 1591, 877, 877, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	603, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1593, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1501, 167, 1609, 1606, 1607, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	0, 1585, 0, 716, 980, 0, 0, 781, 781, 0,
	781, 781, 781, 781, 0, 0, 0, 730, 0, 0,
	0, 0, 778, 0, 746, 747, 0, 778, 0, 753,
	784, 0, 0, 759, 781, 781, 762, 2233, 0, 2233,
	2233, 1576, 0, 775, 773, 787, 788, 42, 791, 794,
	795, 796, 797, 800, 0, 811, 814, 1602, 1603, 0,
	816, 823, 840, 841, 0, 873, 874, 47, 1130, 0,
	1002, 0, 1008, -2, 1019, 1036, 1037, 1038, 1039, 1040,
	1042, 1043, 1044, 0, 0, 0, 0, 1049, 1050, 0,
	0, 0, 0, 0, 1111, 0, 0, 0, 0, 1447,
	0, 0, 1409, 1409, 1145, 1409, 1409, 1411, 1411, 1411,
	1818, 1956, 1964, 2140, 1779, 1785, 1786, 1787, 2086, 2087,
	2088, 2089, 2177, 2178, 2182, 1880, 1774, 2153, 2154, 0,
	2229, 1917, 1925, 1926, 1950, 2050, 2163, 1797, 1945, 2014,
	1877, 1899, 1900, 2032, 2033, 1921, 1922, 1903, 2092, 2094,
	2110, 2111, 2096, 2098, 2107, 2113, 2118, 2097, 2109, 2114,
	2127, 2131, 2134, 2135, 2136, 2104, 2102, 2115, 2119, 2121,
	2123, 2129, 2132, 2105, 2103, 2116, 2120, 2122, 2124, 2130,
	2133, 2091, 2095, 2099, 2108, 2126, 2106, 2125, 2100, 2112,
	2117, 2128, 2101, 2093, 1915, 1918, 1906, 1907, 1909, 1911,
	1916, 1923, 1929, 1908, 1928, 1927, 0, 1904, 1905, 1910,
	1920, 1924, 1912, 1913, 1914, 1919, 1930, 1970, 1969, 1968,
	2013, 1941, 2012, 0, 0, 0, 0, 0, 1769, 1823,
	1824, 2137, 1331, 1332, 1333, 1334, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 1460, 1461, 46, 1129, 1572,
	1411, 1411, 1411, 1411, 1411, 1411, 1071, 1072, 1073, 1074,
	1075, 1099, 1100, 1106, 1107, 2027, 2028, 2029, 2030, 1861,
	2172, 1869, 1870, 2009, 2010, 1882, 1883, 2203, 2204, -2,
	-2, -2, 234, 235, 236, 237, 238, 239, 240, 241,
	0, 1822, 2151, 2152, 230, 0, 0, 298, 299, 295,
	296, 297, 1113, 1114, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284, 285, 286,
	287, 288, 289, 290, 291, 292, 2232, 0, 850, 0,
	0, 0, 0, 0, 0, 1614, 1615, 1483, 0, 1475,
	1474, 65, 0, 877, -2, 0, 0, 0, 0, 49,
	0, 54, 937, 880, 79, 78, 1523, 0, 0, 0,
	61, 1484, 69, 71, 1485, 0, 882, 883, 0, 913,
	917, 0, 0, 0, 1592, 1591, 1591, 104, 0, 0,
	105, 125, 126, 127, 0, 0, 111, 112, 1578, 1579,
	45, 0, 0, 179, 180, 0, 43, 428, 0, 175,
	0, 421, 360, 0, 1501, 0, 0, 0, 0, 0,
	877, 0, 1586, 156, 157, 164, 165, 166, 401, 401,
	401, 575, 0, 0, 167, 167, 533, 534, 535, 0,
	0, -2, 426, 0, 513, 0, 0, 415, 415, 419,
	417, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 402, 0, 573, 574, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 1594, 1595, 0,
	550, 551, 0, 0, 0, 401, 401, 0, 0, 0,
	0, 401, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 1514, 0, 0, 0, -2, 0, 708, 0,
	0, 0, 1587, 1587, 0, 715, 0, 717, 0, 720,
	0, 0, 721, 0, 778, 778, 776, 777, 723, 724,
	725, 726, 781, 0, 0, 410, 411, 412, 778, 781,
	0, 781, 781, 781, 781, 778, 778, 778, 781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2233, 784,
	781, 0, 754, 0, 755, 756, 757, 760, 761, 763,
	2234, 2235, 1604, 1605, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 2233, 2233, 767, 771, 1577, 793,
	799, 801, 802, 0, 0, 812, 815, 834, 51, 1868,
	822, 51, 824, 825, 826, 852, 853, 858, 0, 0,
	0, 0, 864, 865, 866, 0, 0, 869, 870, 871,
	0, 0, 0, 0, 0, 1000, 0, 0, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1020, 1021, 0, 0, 0, 1045, 1046,
	1047, 1048, 1051, 0, 1062, 0, 1064, 1456, -2, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1448, 0, 0, 1143, 0, 1144, 1146, 1147, 1148,
	0, 1149, 1150, 887, 887, 887, 887, 887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 887, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 897, 0, 0, 897, 897,
	0, 0, 222, 223, 224, 225, 226, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 300, 248,
	249, 250, 1129, 0, 0, 0, 48, 842, 843, 0,
	963, 1597, 0, 0, 893, 0, 1612, 59, 68, 70,
	1483, 63, 1483, 0, 899, 0, 0, -2, -2, 900,
	906, 907, 908, 909, 910, 56, 2231, 57, 0, 76,
	0, 50, 0, 0, 0, 0, 374, 1526, 0, 0,
	1476, 1477, 1480, 0, 914, 1962, 918, 0, 920, 921,
	0, 0, 102, 0, 979, 0, 0, 0, 113, 0,
	115, 116, 0, 0, 0, 385, 1580, 1581, 1582, -2,
	408, 0, 385, 369, 308, 309, 310, 360, 312, 360,
	360, 360, 360, 374, 374, 374, 374, 343, 344, 345,
	346, 347, 0, 0, 329, 360, 360, 360, 360, 350,
	351, 352, 353, 354, 355, 356, 357, 313, 314, 315,
	316, 317, 318, 319, 320, 321, 362, 362, 362, 362,
	362, 366, 366, 0, 44, 0, 389, 0, 1480, 0,
	0, 1514, 1589, 1599, 0, 0, 0, 1589, 134, 0,
	0, 0, 576, 614, 527, 564, 577, 0, 530, 531,
	-2, 0, 0, 512, 0, 514, 0, 409, 0, -2,
	0, 419, 0, 415, 419, 416, 419, 407, 420, 554,
	555, 556, 0, 558, 559, 644, 949, 0, 0, 0,
	0, 0, 650, 651, 652, 0, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 0, 0, 0, 514, 0,
	561, 0, 0, 465, 466, 467, 0, 0, 470, 471,
	472, 473, 0, 0, 476, 477, 478, 966, 967, 479,
	480, 505, 506, 507, 481, 482, 483, 484, 485, 486,
	487, 499, 500, 501, 502, 503, 504, 488, 489, 490,
	491, 492, 493, 496, 0, 149, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1587, 0, 0, 0, 0, 896, 981, 1610,
	1611, 0, 0, 782, 783, 0, 413, 414, 781, 781,
	727, 768, 0, 781, 731, 769, 732, 734, 733, 735,
	748, 749, 781, 738, 779, 780, 739, 740, 741, 742,
	743, 744, 745, 764, 750, 751, 752, 785, 0, 789,
	790, 765, 766, 0, 0, 805, 806, 0, 813, 837,
	835, 836, 838, 830, 831, 832, 833, 0, 839, 0,
	0, 855, 98, 860, 861, 862, 863, 875, 868, 1131,
	997, 998, 999, 0, 1001, 1005, 0, 1115, 1117, 1007,
	1003, 1009, 1126, 1127, 1128, 0, 0, 0, 0, 0,
	1013, 1017, 1022, 1023, 1024, 1025, 1026, 0, 1027, 0,
	1030, 1031, 1032, 1033, 1034, 1035, 1041, 1424, 1425, 1426,
	1060, 301, 302, 0, 1061, 0, 0, 0, 0, 0,
	0, 0, 0, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1130, 0, 911, 0, 0, 1454, 1451,
	0, 0, 0, 1410, 1412, 0, 0, 0, 888, 889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 0, 0, 1427, 0, 0,
	0, 0, 0, 1447, 0, 1066, 1067, 1068, 0, 0,
	0, 0, 0, 0, 1189, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 1336, 1337, 1338, 41, 0, 0, 0, 0,
	0, 0, 0, 898, 1458, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1360, 0, 0, 0, 0, 0, 0, 1570, 0,
	0, 845, 846, 848, 0, 983, 0, 964, 0, 0,
	851, 0, 892, 0, 895, 62, 64, 904, 905, 0,
	922, 901, 58, 53, 0, 0, 941, 1524, 374, 1546,
	0, 383, 383, 380, 1486, 1487, 0, 1479, 1481, 1482,
	81, 919, 915, 0, 995, 0, 0, 978, 0, 925,
	927, 928, 929, 961, 0, 932, 933, 0, 0, 0,
	0, 0, 100, 980, 106, 0, 114, 0, 0, 119,
	120, 107, 108, 109, 110, 0, 603, -2, 460, 181,
	183, 184, 185, 176, -2, 372, 370, 371, 311, 374,
	374, 337, 338, 339, 340, 341, 342, 0, 0, 330,
	331, 332, 333, 322, 0, 323, 324, 325, 364, 0,
	326, 327, 0, 328, 427, 0, 1488, 390, 391, 393,
	401, 0, 396, 397, 0, 401, 401, 0, 422, 423,
	0, 1480, 1505, 0, 0, 0, 1600, 1599, 1599, 1599,
	0, 169, 170, 171, 172, 173, 174, 639, 0, 0,
	615, 637, 638, 167, 0, 0, 177, 516, 515, 0,
	671, 0, 425, 0, 0, 419, 419, 404, 405, 557,
	0, 0, 646, 647, 648, 649, 0, 0, 0, 543,
	454, 0, 544, 545, 514, 516, 0, 0, 385, 468,
	469, 474, 475, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 591, 592, 595, 597,
	518, 601, 594, 596, 598, 518, 602, 1502, 1503, 1504,
	0, 0, 709, 0, 0, 451, 96, 1588, 714, 718,
	719, 778, 737, 770, 778, 729, 736, 758, 803, 804,
	809, 817, 818, 819, 820, 821, 859, 0, 0, 0,
	0, 867, 0, 0, 1006, 1116, 1118, 1010, 0, 1014,
	1018, 0, 0, 0, 0, 0, 1065, 1063, 1458, 0,
	0, 0, 1112, 0, 0, 0, 1134, 1135, 0, 0,
	0, 1452, 0, 0, 1141, 0, 1413, 1151, 0, 0,
	0, 0, 0, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1474, 1168, 0, 0, 0, 0, 0,
	1173, 1174, 1175, 1176, 1177, 0, 1179, 0, 1180, 0,
	0, 0, 0, 1187, 1188, 1190, 0, 0, 1193, 1194,
	0, 1196, 0, 1198, 1199, 1200, 1201, 1202, 1203, 0,
	1205, 0, 1207, 1208, 1209, 0, 1211, 0, 1213, 1214,
	0, 1216, 0, 1218, 0, 1221, 0, 1224, 0, 1227,
	0, 1230, 0, 1233, 0, 1236, 0, 1239, 0, 1242,
	0, 1245, 0, 1248, 0, 1251, 0, 1254, 0, 1257,
	0, 1260, 0, 1263, 0, 1266, 1267, 1268, 0, 1270,
	0, 1272, 0, 1275, 1276, 0, 1278, 0, 1281, 0,
	1284, 0, 0, 1285, 0, 0, 0, 1289, 0, 0,
	0, 0, 1298, 1299, 1300, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 1313, 1314, 1315,
	1316, 1317, 0, 1319, 0, 1094, 0, 0, 1094, 0,
	0, 0, 0, 0, 1132, 897, 0, 1414, 1415, 1416,
	1417, 1418, 0, 0, 0, 0, 0, 0, 1358, 1359,
	1361, 0, 0, 1364, 0, 1366, 0, 1571, 844, 847,
	849, 935, 984, 985, 0, 0, 0, 0, 965, 1596,
	890, 891, 894, 943, 0, 1462, 0, 0, 922, 995,
	923, 0, 902, 55, 938, 0, 1528, 1527, 1540, 1553,
	383, 383, 377, 378, 384, 379, 381, 382, 1478, 0,
	1483, 0, 1564, 0, 0, 1556, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 971, 0, 0,
	0, 0, 962, 933, 0, 934, 0, -2, 0, 0,
	94, 95, 0, 0, 0, 117, 118, 0, 0, 124,
	386, 387, 158, 167, 462, 182, 435, 0, 0, 307,
	373, 334, 335, 336, 0, 358, 0, 0, 0, 0,
	456, 130, 1492, 1491, 401, 401, 392, 0, 395, 0,
	0, 0, 1601, 361, 424, 0, 148, 0, 0, 0,
	0, 0, 154, 609, 0, 0, 616, 0, 0, 0,
	525, 0, 536, 537, 0, 643, -2, 705, 389, 0,
	403, 406, 950, 0, 0, 538, 0, 541, 542, 455,
	516, 547, 548, 562, 549, 497, 498, 495, 0, 0,
	1515, 1516, 1521, 1519, 1520, 135, 583, 585, 584, 588,
	0, 0, 0, 520, 0, 520, 581, 0, 451, 1488,
	0, 713, 452, 453, 781, 781, 854, 99, 0, 857,
	0, 0, 0, 0, 1011, 1015, 1028, 1029, 1419, 1445,
	360, 360, 1432, 360, 366, 1435, 360, 1437, 360, 1440,
	360, 1443, 1444, 0, 0, 1058, 0, 912, 0, 0,
	1140, 1455, 0, 0, 1152, 1153, 1154, 1155, 1156, 1449,
	0, 0, 0, 1172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 147, 0, 0, 0, 0,
	0, 0, 1369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1089, 1093, 0, 1095, 1096, 0,
	0, 1321, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 1459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 986, 991, 991, 991, 0, 0, 0,
	1583, 1584, 1463, 1464, 995, 1465, 924, 903, 942, 1546,
	0, 1539, 0, -2, 1548, 0, 0, 0, 1554, 375,
	376, 916, 82, 996, 85, 0, 1564, 1573, 0, 1555,
	1566, 1568, 0, 0, 0, 1560, 0, 995, 926, 957,
	959, 0, 954, 969, 970, 972, 0, 974, 0, 976,
	977, 937, 931, 0, 102, 0, 995, 995, 101, 0,
	982, 121, 122, 123, 461, 186, 191, 0, 0, 0,
	196, 0, 198, 0, 0, 0, 203, 204, 401, 401,
	436, 0, 304, 306, 0, 0, 189, 374, 0, 374,
	0, 365, 367, 0, 437, 457, 1489, 1490, 0, 0,
	394, 398, 399, 400, 0, 1590, 150, 0, 0, 0,
	612, 0, 640, 0, 0, 0, 0, 0, 0, 178,
	517, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	0, 401, 0, 0, 0, 401, 401, 401, 0, 697,
	388, 0, 0, 668, 665, 539, 0, 228, 229, 231,
	0, 0, 0, 0, 0, 546, 937, 1506, 1507, 1508,
	0, 1518, 1522, 138, 0, 0, 0, 0, 593, 599,
	0, 519, 600, 710, 711, 712, 97, 722, 728, 856,
	876, 1004, 1012, 1016, 0, 0, 0, 0, 1446, 1430,
	374, 1433, 1434, 1436, 1438, 1439, 1441, 1442, 1054, 1055,
	1059, 0, 1137, 0, 1139, 1453, 0, 1483, 0, 0,
	0, 1171, 0, 0, 0, 1182, 1181, 1183, 0, 1185,
	1186, 1191, 1192, 1195, 1197, 1204, 1206, 1210, 1212, 1215,
	1217, 1219, 0, 1222, 0, 1225, 0, 1228, 0, 1231,
	0, 1234, 0, 1237, 0, 1240, 0, 1243, 0, 1246,
	0, 1249, 0, 1252, 0, 1255, 0, 1258, 0, 1261,
	0, 1264, 0, 1269, 1271, 0, 1274, 1277, 1279, 0,
	1282, 0, 1286, 0, 1288, 1290, 1291, 0, 0, 0,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1318, 0, 1087, 1090, 1320, 1097, 1098, 1103, 1323, 0,
	0, 0, 1326, 0, 0, 0, 1330, 1133, 1341, 0,
	1346, 0, 0, 1352, 0, 1356, 0, 1362, 1363, 1365,
	1367, 0, 0, 0, 0, 0, 963, 944, 66, 1465,
	1467, 0, 1533, 1531, 1531, 1541, 1542, 0, 0, 1549,
	0, 0, 0, 0, 86, 0, 0, 0, 1569, 0,
	0, 0, 0, 103, 1474, 951, 958, 0, 0, 952,
	0, 953, 973, 975, 930, 0, 995, 995, 92, 93,
	0, 192, 0, 194, 220, 221, 0, 197, 199, 200,
	201, 207, 208, 209, 202, 0, 0, 303, 305, 0,
	0, 348, 359, 349, 0, 0, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 937, 151, 152, 153, 604, 0,
	614, 0, 939, 0, 607, 0, 528, 0, 0, 0,
	401, 401, 401, 0, 0, 0, 0, 682, 0, 0,
	645, 0, 653, 0, 0, 0, 232, 233, 0, 1517,
	582, 0, 136, 137, 0, 0, 587, 521, 522, 1052,
	0, 0, 0, 1053, 1431, 0, 0, 0, 0, 1450,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1294, 0, 0,
	0, 634, 635, 0, 1370, 1092, 1474, 0, 1094, 1104,
	1105, 0, 1094, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 992, 0, 0, 0, 0,
	983, 1467, 1472, 0, 0, 1536, 0, 1529, 1532, 1530,
	1543, 0, 0, 1550, 0, 1552, 0, 1574, 1575, 1567,
	0, 1559, 1562, 1558, 1561, 1483, 955, 0, 960, 0,
	1474, 91, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 206, 0, 0, 363, 368, 0,
	0, 0, 605, 0, 940, 617, 608, 0, 695, 0,
	699, 0, 0, 0, 702, 703, 704, 681, 0, 685,
	429, 669, 666, 667, 540, 0, 139, 140, 0, 0,
	0, 1420, 0, 1423, 1136, 1138, 0, 1167, 1169, 1170,
	1428, 1429, 1184, 1220, 1223, 1226, 1229, 1232, 1235, 1238,
	1241, 1244, 1247, 1250, 1253, 1256, 1259, 1262, 1265, 1273,
	1280, 1283, 1287, 1292, 0, 1295, 0, 0, 1296, 0,
	636, 1083, 0, 0, 1101, 1102, 0, 1325, 1327, 1328,
	1329, 1342, 0, 1347, 1348, 0, 1353, 0, 1357, 1368,
	0, 988, 945, 946, 993, 994, 0, 0, 936, 1472,
	84, 1473, 1470, 0, 1468, 1466, 1525, 0, 1534, 1535,
	1544, 1545, 1551, 0, 1557, 0, 89, 0, 0, 0,
	1483, 193, 0, 212, 0, 613, 0, 616, 606, 693,
	694, 0, 706, 698, 700, 701, 683, -2, 1509, 0,
	0, 0, 589, 1421, 0, 0, 1297, 0, 632, 633,
	1091, 1084, 0, 1069, 1070, 1088, 1322, 1324, 0, 0,
	0, 0, 987, 989, 990, 83, 0, 1469, 1109, 0,
	1537, 1538, 1565, 1563, 956, 963, 0, 90, 442, 435,
	1509, 0, 0, 0, 686, 687, 688, 689, 690, 691,
	692, 579, 1511, 141, 142, 0, 509, 510, 511, 135,
	0, 1142, 1293, 1085, 0, 0, 0, 0, 0, 1343,
	0, 1349, 0, 1354, 0, 947, 948, 1471, 0, 0,
	618, 0, 620, 0, -2, 430, 443, 0, 187, 213,
	214, 0, 0, 217, 218, 219, 210, 211, 131, 0,
	0, 707, 0, 1512, 1513, 0, 138, 0, 0, 1076,
	1077, 1078, 1079, 1081, 0, 0, 0, 0, 1110, 1089,
	619, 0, 0, 385, 0, 629, 431, 432, 0, 438,
	439, 440, 441, 215, 216, 641, 0, 0, 508, 586,
	1422, 0, 0, 1344, 0, 1350, 0, 1355, 0, 621,
	622, 630, 0, 433, 0, 434, 0, 0, 0, 610,
	0, 641, 1510, 1086, 1080, 1082, 0, 0, 1108, 0,
	631, 627, 444, 446, 447, 0, 0, 445, 642, 611,
	1345, 1351, 0, 448, 449, 450, 623, 624, 625, 626,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 173, 165, 3,
	87, 89, 170, 168, 88, 169, 223, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 732,
	153, 152, 154, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 175, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 141, 3, 176,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 142, 143, 144, 146,
	147, 148, 149, 150, 151, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 166, 167, 172, 174, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:656
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:662
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:683
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:687
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:693
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:699
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:705
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:728
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:734
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:887
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:893
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:901
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:905
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:911
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:935
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:939
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:973
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:977
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:983
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:993
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1006
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1018
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1028
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1032
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1036
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1040
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1046
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1050
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1054
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1060
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1064
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1070
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1074
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1080
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1084
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1088
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1112
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1116
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1120
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1126
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1132
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1139
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1168
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1183
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1188
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1194
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1214
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1220
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1236
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1243
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1250
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1255
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1260
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1265
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1272
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1279
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1290
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1301
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1307
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1311
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1343
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1347
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1353
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1373
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1377
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1383
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1393
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1398
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1407
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1431
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1440
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1462
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1466
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1478
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1532
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1538
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1542
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1548
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1552
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1556
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1562
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1566
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1571
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1575
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1580
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1586
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1592
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1608
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1616
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1722
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1731
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1915
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1919
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1923
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1929
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1933
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1937
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1943
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1947
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1953
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1957
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1961
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1965
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2214
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2219
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2223
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2243
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2247
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2261
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2265
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2295
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2314
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2325
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2329
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2334
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2348
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2357
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2363
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2373
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2377
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2382
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2386
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2394
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2398
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2418
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2422
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2426
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2430
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2434
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2439
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2443
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = "key"
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2501
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2505
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2511
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2515
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2521
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2525
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2531
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2535
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2541
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2547
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2551
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2555
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2559
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2563
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2572
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2578
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2584
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2590
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2594
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2598
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2603
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2613
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2619
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2625
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2629
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2633
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2637
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2641
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2646
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2660
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2664
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2669
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2673
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2682
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2688
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2702
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2712
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2716
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2720
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2724
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2841
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2887
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2891
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2896
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2900
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2918
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2922
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2931
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2935
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2939
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2943
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2947
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2953
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2967
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2971
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3095
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3105
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3109
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3113
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3117
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3121
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3125
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3129
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3220
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3224
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3308
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3362
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3371
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3379
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3388
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3395
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3407
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3416
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3431
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3445
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3449
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3455
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3461
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3467
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3477
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3481
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3487
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3493
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3499
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3505
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3515
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3523
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3529
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3535
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3541
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3545
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3549
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3555
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3559
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3564
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3568
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3573
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3577
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3583
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3587
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3591
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3595
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3599
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3603
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3607
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3611
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3615
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3619
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3623
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3627
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3631
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3635
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3639
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3686
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3690
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3701
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3705
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3710
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3715
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3720
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3725
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3736
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3742
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3747
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3753
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3759
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3769
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3774
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3778
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3783
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3788
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3793
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3798
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3804
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3810
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3817
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3824
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3831
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3839
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3843
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3849
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3855
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3861
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3867
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3873
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3879
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3891
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3913
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3917
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = ""
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = "extended "
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4195
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4199
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4215
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4233
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4237
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4247
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4253
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4281
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4315
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4324
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4330
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4340
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4344
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4348
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4355
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4361
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4365
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4370
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4381
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4392
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4396
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4400
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4404
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4408
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4412
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4416
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4421
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4425
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4429
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4433
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4453
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4488
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4494
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4500
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4504
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4510
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4516
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4520
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4526
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4532
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4536
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4540
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4544
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4550
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4556
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4566
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4598
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4602
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4610
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4647
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4651
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4669
		{
			setAllowComments(yylex, true)
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4679
		{
			yyVAL.strs = nil
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = SQLCacheStr
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4729
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4733
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4743
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4752
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4758
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4762
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4771
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4776
		{
			yyVAL.strs = nil
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4780
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4784
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4788
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4792
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4828
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4838
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4842
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4846
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4850
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4855
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4859
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4863
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4875
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4879
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4885
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4891
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4905
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4909
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4913
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4917
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4923
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4927
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4933
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4937
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4946
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4955
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4961
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4965
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4971
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4981
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4985
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4989
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4993
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4999
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5003
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5016
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5020
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5024
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5028
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5034
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5036
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5040
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5046
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5048
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5051
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5056
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5077
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5081
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5085
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5091
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5097
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5101
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5105
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5109
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5115
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5119
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5133
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5143
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5149
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5158
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5164
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5168
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5174
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5178
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5182
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5186
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5191
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5195
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5199
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5203
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5318
		{
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5321
		{
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5495
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5499
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5505
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5509
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5515
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5519
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5523
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5529
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5533
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5540
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5544
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5548
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5552
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5556
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5562
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5566
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5570
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5574
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5578
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5582
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5586
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5595
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5601
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5605
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5614
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5619
		{
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5628
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5634
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5638
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5650
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5656
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5660
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5666
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5670
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5676
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5680
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5692
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5698
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5702
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5708
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5714
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5724
		{
			yyVAL.str = ""
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5734
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5738
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5745
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5749
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5753
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5757
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5763
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5767
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5771
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5775
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5779
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5783
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5787
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5793
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5797
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5801
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5808
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5814
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6800
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6806
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6810
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6814
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6818
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6822
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6826
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6830
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6834
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6838
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6842
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6846
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6850
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6854
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6858
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6862
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6866
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6870
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6874
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6878
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6882
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6888
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6892
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6896
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6900
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6904
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6908
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6912
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6916
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6920
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6924
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6928
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6932
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6936
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6940
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6944
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6948
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6952
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6956
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6966
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6970
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6974
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6984
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6988
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6992
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6996
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7000
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7006
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7010
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7014
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7018
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7022
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7028
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7032
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7036
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7046
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7050
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7056
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7060
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7064
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7068
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7072
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7078
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7082
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7086
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7090
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7094
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7098
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7102
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7106
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7110
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7114
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7120
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7124
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7133
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7138
		{
			yyVAL.str = string("")
		}
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7142
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7148
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7152
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7158
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7167
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7173
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7177
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7181
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7185
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7191
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7195
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7201
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7214
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7223
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7232
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7238
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7244
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7248
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7257
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7266
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7272
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7278
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7282
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7288
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7293
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7297
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7301
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7310
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7316
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7320
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7324
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7333
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7337
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7341
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7345
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7352
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7356
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7360
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7364
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7370
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7374
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7378
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7382
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7387
		{
			yyVAL.str = ""
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7391
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7395
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7399
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7404
		{
			yyVAL.str = ""
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7408
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7414
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7418
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7423
		{
			yyVAL.str = ""
		}
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7427
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7432
		{
			yyVAL.str = "cascaded"
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7436
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7440
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7449
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7455
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7461
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7467
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7476
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7480
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7485
		{
			yyVAL.str = ""
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7489
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7495
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7499
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7505
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7509
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7513
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7518
		{
			yyVAL.str = ""
		}
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7522
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7526
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7531
		{
			yyVAL.str = ""
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7535
		{
			yyVAL.str = " header"
		}
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7540
		{
			yyVAL.str = ""
		}
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7544
		{
			yyVAL.str = " manifest on"
		}
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7548
		{
			yyVAL.str = " manifest off"
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7553
		{
			yyVAL.str = ""
		}
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7557
		{
			yyVAL.str = " overwrite on"
		}
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7561
		{
			yyVAL.str = " overwrite off"
		}
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7572
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7576
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7582
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7592
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7596
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7601
		{
			yyVAL.str = ""
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7605
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7611
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7615
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7621
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7625
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7629
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7634
		{
			yyVAL.str = ""
		}
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7638
		{
			yyVAL.str = " optionally"
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7651
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7655
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7659
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7663
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7667
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7673
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7677
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7681
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7685
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7694
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7700
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7704
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7710
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7714
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7720
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7724
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7729
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7739
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7743
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7749
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7756
		{
			yyVAL.str = "charset"
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7766
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7770
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7774
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7783
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7785
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7788
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7790
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7793
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7795
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7798
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7803
		{
			yyVAL.empty = struct{}{}
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7805
		{
			yyVAL.empty = struct{}{}
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7807
		{
			yyVAL.empty = struct{}{}
		}
	case 1596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7811
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7820
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7827
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7831
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7837
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7841
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7848
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7854
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7858
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7864
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7868
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7875
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7881
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7887
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7891
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7895
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8538
		{
		}
	case 2231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8543
		{
		}
	case 2232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8547
		{
			skipToEnd(yylex)
		}
	case 2233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8552
		{
			skipToEnd(yylex)
		}
	case 2234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8556
		{
			skipToEnd(yylex)
		}
	case 2235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8560
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
