// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const LEX_ERROR = 57350
const UNION = 57351
const SELECT = 57352
const STREAM = 57353
const VSTREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const ALL = 57367
const ANY = 57368
const SOME = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const SET = 57378
const LOCK = 57379
const UNLOCK = 57380
const KEYS = 57381
const DO = 57382
const CALL = 57383
const DISTINCTROW = 57384
const PARSER = 57385
const GENERATED = 57386
const ALWAYS = 57387
const OUTFILE = 57388
const S3 = 57389
const DATA = 57390
const LOAD = 57391
const LINES = 57392
const TERMINATED = 57393
const ESCAPED = 57394
const ENCLOSED = 57395
const DUMPFILE = 57396
const CSV = 57397
const HEADER = 57398
const MANIFEST = 57399
const OVERWRITE = 57400
const STARTING = 57401
const OPTIONALLY = 57402
const VALUES = 57403
const LAST_INSERT_ID = 57404
const NEXT = 57405
const VALUE = 57406
const SHARE = 57407
const MODE = 57408
const SQL_NO_CACHE = 57409
const SQL_CACHE = 57410
const SQL_CALC_FOUND_ROWS = 57411
const JOIN = 57412
const STRAIGHT_JOIN = 57413
const LEFT = 57414
const RIGHT = 57415
const INNER = 57416
const OUTER = 57417
const CROSS = 57418
const NATURAL = 57419
const USE = 57420
const FORCE = 57421
const ON = 57422
const USING = 57423
const INPLACE = 57424
const COPY = 57425
const INSTANT = 57426
const ALGORITHM = 57427
const NONE = 57428
const SHARED = 57429
const EXCLUSIVE = 57430
const SUBQUERY_AS_EXPR = 57431
const STRING = 57432
const ID = 57433
const AT_ID = 57434
const AT_AT_ID = 57435
const HEX = 57436
const NCHAR_STRING = 57437
const INTEGRAL = 57438
const FLOAT = 57439
const DECIMAL = 57440
const HEXNUM = 57441
const COMMENT = 57442
const COMMENT_KEYWORD = 57443
const BITNUM = 57444
const BIT_LITERAL = 57445
const COMPRESSION = 57446
const VALUE_ARG = 57447
const LIST_ARG = 57448
const OFFSET_ARG = 57449
const JSON_PRETTY = 57450
const JSON_STORAGE_SIZE = 57451
const JSON_STORAGE_FREE = 57452
const JSON_CONTAINS = 57453
const JSON_CONTAINS_PATH = 57454
const JSON_EXTRACT = 57455
const JSON_KEYS = 57456
const JSON_OVERLAPS = 57457
const JSON_SEARCH = 57458
const JSON_VALUE = 57459
const EXTRACT = 57460
const NULL = 57461
const UNKNOWN = 57462
const TRUE = 57463
const FALSE = 57464
const OFF = 57465
const DISCARD = 57466
const IMPORT = 57467
const ENABLE = 57468
const DISABLE = 57469
const TABLESPACE = 57470
const VIRTUAL = 57471
const STORED = 57472
const BOTH = 57473
const LEADING = 57474
const TRAILING = 57475
const KILL = 57476
const EMPTY_FROM_CLAUSE = 57477
const LOWER_THAN_CHARSET = 57478
const CHARSET = 57479
const UNIQUE = 57480
const KEY = 57481
const EXPRESSION_PREC_SETTER = 57482
const OR = 57483
const XOR = 57484
const AND = 57485
const NOT = 57486
const BETWEEN = 57487
const CASE = 57488
const WHEN = 57489
const THEN = 57490
const ELSE = 57491
const END = 57492
const LE = 57493
const GE = 57494
const NE = 57495
const NULL_SAFE_EQUAL = 57496
const IS = 57497
const LIKE = 57498
const REGEXP = 57499
const RLIKE = 57500
const IN = 57501
const ASSIGNMENT_OPT = 57502
const SHIFT_LEFT = 57503
const SHIFT_RIGHT = 57504
const DIV = 57505
const MOD = 57506
const UNARY = 57507
const COLLATE = 57508
const BINARY = 57509
const UNDERSCORE_ARMSCII8 = 57510
const UNDERSCORE_ASCII = 57511
const UNDERSCORE_BIG5 = 57512
const UNDERSCORE_BINARY = 57513
const UNDERSCORE_CP1250 = 57514
const UNDERSCORE_CP1251 = 57515
const UNDERSCORE_CP1256 = 57516
const UNDERSCORE_CP1257 = 57517
const UNDERSCORE_CP850 = 57518
const UNDERSCORE_CP852 = 57519
const UNDERSCORE_CP866 = 57520
const UNDERSCORE_CP932 = 57521
const UNDERSCORE_DEC8 = 57522
const UNDERSCORE_EUCJPMS = 57523
const UNDERSCORE_EUCKR = 57524
const UNDERSCORE_GB18030 = 57525
const UNDERSCORE_GB2312 = 57526
const UNDERSCORE_GBK = 57527
const UNDERSCORE_GEOSTD8 = 57528
const UNDERSCORE_GREEK = 57529
const UNDERSCORE_HEBREW = 57530
const UNDERSCORE_HP8 = 57531
const UNDERSCORE_KEYBCS2 = 57532
const UNDERSCORE_KOI8R = 57533
const UNDERSCORE_KOI8U = 57534
const UNDERSCORE_LATIN1 = 57535
const UNDERSCORE_LATIN2 = 57536
const UNDERSCORE_LATIN5 = 57537
const UNDERSCORE_LATIN7 = 57538
const UNDERSCORE_MACCE = 57539
const UNDERSCORE_MACROMAN = 57540
const UNDERSCORE_SJIS = 57541
const UNDERSCORE_SWE7 = 57542
const UNDERSCORE_TIS620 = 57543
const UNDERSCORE_UCS2 = 57544
const UNDERSCORE_UJIS = 57545
const UNDERSCORE_UTF16 = 57546
const UNDERSCORE_UTF16LE = 57547
const UNDERSCORE_UTF32 = 57548
const UNDERSCORE_UTF8 = 57549
const UNDERSCORE_UTF8MB4 = 57550
const UNDERSCORE_UTF8MB3 = 57551
const INTERVAL = 57552
const WINDOW_EXPR = 57553
const JSON_EXTRACT_OP = 57554
const JSON_UNQUOTE_EXTRACT_OP = 57555
const CREATE = 57556
const ALTER = 57557
const DROP = 57558
const RENAME = 57559
const ANALYZE = 57560
const ADD = 57561
const FLUSH = 57562
const CHANGE = 57563
const MODIFY = 57564
const DEALLOCATE = 57565
const REVERT = 57566
const QUERIES = 57567
const SCHEMA = 57568
const TABLE = 57569
const INDEX = 57570
const VIEW = 57571
const TO = 57572
const IGNORE = 57573
const IF = 57574
const PRIMARY = 57575
const COLUMN = 57576
const SPATIAL = 57577
const FULLTEXT = 57578
const KEY_BLOCK_SIZE = 57579
const CHECK = 57580
const INDEXES = 57581
const ACTION = 57582
const CASCADE = 57583
const CONSTRAINT = 57584
const FOREIGN = 57585
const NO = 57586
const REFERENCES = 57587
const RESTRICT = 57588
const SHOW = 57589
const DESCRIBE = 57590
const EXPLAIN = 57591
const DATE = 57592
const ESCAPE = 57593
const REPAIR = 57594
const OPTIMIZE = 57595
const TRUNCATE = 57596
const COALESCE = 57597
const EXCHANGE = 57598
const REBUILD = 57599
const PARTITIONING = 57600
const REMOVE = 57601
const PREPARE = 57602
const EXECUTE = 57603
const MAXVALUE = 57604
const PARTITION = 57605
const REORGANIZE = 57606
const LESS = 57607
const THAN = 57608
const PROCEDURE = 57609
const TRIGGER = 57610
const VINDEX = 57611
const VINDEXES = 57612
const DIRECTORY = 57613
const NAME = 57614
const UPGRADE = 57615
const STATUS = 57616
const VARIABLES = 57617
const WARNINGS = 57618
const CASCADED = 57619
const DEFINER = 57620
const OPTION = 57621
const SQL = 57622
const UNDEFINED = 57623
const SEQUENCE = 57624
const MERGE = 57625
const TEMPORARY = 57626
const TEMPTABLE = 57627
const INVOKER = 57628
const SECURITY = 57629
const FIRST = 57630
const AFTER = 57631
const LAST = 57632
const VITESS_MIGRATION = 57633
const CANCEL = 57634
const RETRY = 57635
const LAUNCH = 57636
const COMPLETE = 57637
const CLEANUP = 57638
const THROTTLE = 57639
const UNTHROTTLE = 57640
const FORCE_CUTOVER = 57641
const EXPIRE = 57642
const RATIO = 57643
const VITESS_THROTTLER = 57644
const BEGIN = 57645
const START = 57646
const TRANSACTION = 57647
const COMMIT = 57648
const ROLLBACK = 57649
const SAVEPOINT = 57650
const RELEASE = 57651
const WORK = 57652
const CONSISTENT = 57653
const SNAPSHOT = 57654
const BIT = 57655
const TINYINT = 57656
const SMALLINT = 57657
const MEDIUMINT = 57658
const INT = 57659
const INTEGER = 57660
const BIGINT = 57661
const INTNUM = 57662
const REAL = 57663
const DOUBLE = 57664
const FLOAT_TYPE = 57665
const FLOAT4_TYPE = 57666
const FLOAT8_TYPE = 57667
const DECIMAL_TYPE = 57668
const NUMERIC = 57669
const TIME = 57670
const TIMESTAMP = 57671
const DATETIME = 57672
const YEAR = 57673
const CHAR = 57674
const VARCHAR = 57675
const BOOL = 57676
const CHARACTER = 57677
const VARBINARY = 57678
const NCHAR = 57679
const TEXT = 57680
const TINYTEXT = 57681
const MEDIUMTEXT = 57682
const LONGTEXT = 57683
const BLOB = 57684
const TINYBLOB = 57685
const MEDIUMBLOB = 57686
const LONGBLOB = 57687
const JSON = 57688
const JSON_SCHEMA_VALID = 57689
const JSON_SCHEMA_VALIDATION_REPORT = 57690
const ENUM = 57691
const GEOMETRY = 57692
const POINT = 57693
const LINESTRING = 57694
const POLYGON = 57695
const GEOMCOLLECTION = 57696
const GEOMETRYCOLLECTION = 57697
const MULTIPOINT = 57698
const MULTILINESTRING = 57699
const MULTIPOLYGON = 57700
const ASCII = 57701
const UNICODE = 57702
const NULLX = 57703
const AUTO_INCREMENT = 57704
const APPROXNUM = 57705
const SIGNED = 57706
const UNSIGNED = 57707
const ZEROFILL = 57708
const PURGE = 57709
const BEFORE = 57710
const CODE = 57711
const COLLATION = 57712
const COLUMNS = 57713
const DATABASES = 57714
const ENGINES = 57715
const EVENT = 57716
const EXTENDED = 57717
const FIELDS = 57718
const FULL = 57719
const FUNCTION = 57720
const GTID_EXECUTED = 57721
const KEYSPACES = 57722
const OPEN = 57723
const PLUGINS = 57724
const PRIVILEGES = 57725
const PROCESSLIST = 57726
const SCHEMAS = 57727
const TABLES = 57728
const TRIGGERS = 57729
const USER = 57730
const VGTID_EXECUTED = 57731
const VITESS_KEYSPACES = 57732
const VITESS_METADATA = 57733
const VITESS_MIGRATIONS = 57734
const VITESS_REPLICATION_STATUS = 57735
const VITESS_SHARDS = 57736
const VITESS_TABLETS = 57737
const VITESS_TARGET = 57738
const VSCHEMA = 57739
const VITESS_THROTTLED_APPS = 57740
const NAMES = 57741
const GLOBAL = 57742
const SESSION = 57743
const ISOLATION = 57744
const LEVEL = 57745
const READ = 57746
const WRITE = 57747
const ONLY = 57748
const REPEATABLE = 57749
const COMMITTED = 57750
const UNCOMMITTED = 57751
const SERIALIZABLE = 57752
const ADDDATE = 57753
const CURRENT_TIMESTAMP = 57754
const DATABASE = 57755
const CURRENT_DATE = 57756
const CURDATE = 57757
const DATE_ADD = 57758
const DATE_SUB = 57759
const NOW = 57760
const SUBDATE = 57761
const CURTIME = 57762
const CURRENT_TIME = 57763
const LOCALTIME = 57764
const LOCALTIMESTAMP = 57765
const CURRENT_USER = 57766
const UTC_DATE = 57767
const UTC_TIME = 57768
const UTC_TIMESTAMP = 57769
const SYSDATE = 57770
const DAY = 57771
const DAY_HOUR = 57772
const DAY_MICROSECOND = 57773
const DAY_MINUTE = 57774
const DAY_SECOND = 57775
const HOUR = 57776
const HOUR_MICROSECOND = 57777
const HOUR_MINUTE = 57778
const HOUR_SECOND = 57779
const MICROSECOND = 57780
const MINUTE = 57781
const MINUTE_MICROSECOND = 57782
const MINUTE_SECOND = 57783
const MONTH = 57784
const QUARTER = 57785
const SECOND = 57786
const SECOND_MICROSECOND = 57787
const YEAR_MONTH = 57788
const WEEK = 57789
const SQL_TSI_DAY = 57790
const SQL_TSI_WEEK = 57791
const SQL_TSI_HOUR = 57792
const SQL_TSI_MINUTE = 57793
const SQL_TSI_MONTH = 57794
const SQL_TSI_QUARTER = 57795
const SQL_TSI_SECOND = 57796
const SQL_TSI_MICROSECOND = 57797
const SQL_TSI_YEAR = 57798
const REPLACE = 57799
const CONVERT = 57800
const CAST = 57801
const SUBSTR = 57802
const SUBSTRING = 57803
const MID = 57804
const SEPARATOR = 57805
const TIMESTAMPADD = 57806
const TIMESTAMPDIFF = 57807
const WEIGHT_STRING = 57808
const LTRIM = 57809
const RTRIM = 57810
const TRIM = 57811
const JSON_ARRAY = 57812
const JSON_OBJECT = 57813
const JSON_QUOTE = 57814
const JSON_DEPTH = 57815
const JSON_TYPE = 57816
const JSON_LENGTH = 57817
const JSON_VALID = 57818
const JSON_ARRAY_APPEND = 57819
const JSON_ARRAY_INSERT = 57820
const JSON_INSERT = 57821
const JSON_MERGE = 57822
const JSON_MERGE_PATCH = 57823
const JSON_MERGE_PRESERVE = 57824
const JSON_REMOVE = 57825
const JSON_REPLACE = 57826
const JSON_SET = 57827
const JSON_UNQUOTE = 57828
const COUNT = 57829
const AVG = 57830
const MAX = 57831
const MIN = 57832
const SUM = 57833
const GROUP_CONCAT = 57834
const BIT_AND = 57835
const BIT_OR = 57836
const BIT_XOR = 57837
const STD = 57838
const STDDEV = 57839
const STDDEV_POP = 57840
const STDDEV_SAMP = 57841
const VAR_POP = 57842
const VAR_SAMP = 57843
const VARIANCE = 57844
const ANY_VALUE = 57845
const REGEXP_INSTR = 57846
const REGEXP_LIKE = 57847
const REGEXP_REPLACE = 57848
const REGEXP_SUBSTR = 57849
const ExtractValue = 57850
const UpdateXML = 57851
const GET_LOCK = 57852
const RELEASE_LOCK = 57853
const RELEASE_ALL_LOCKS = 57854
const IS_FREE_LOCK = 57855
const IS_USED_LOCK = 57856
const LOCATE = 57857
const POSITION = 57858
const ST_GeometryCollectionFromText = 57859
const ST_GeometryFromText = 57860
const ST_LineStringFromText = 57861
const ST_MultiLineStringFromText = 57862
const ST_MultiPointFromText = 57863
const ST_MultiPolygonFromText = 57864
const ST_PointFromText = 57865
const ST_PolygonFromText = 57866
const ST_GeometryCollectionFromWKB = 57867
const ST_GeometryFromWKB = 57868
const ST_LineStringFromWKB = 57869
const ST_MultiLineStringFromWKB = 57870
const ST_MultiPointFromWKB = 57871
const ST_MultiPolygonFromWKB = 57872
const ST_PointFromWKB = 57873
const ST_PolygonFromWKB = 57874
const ST_AsBinary = 57875
const ST_AsText = 57876
const ST_Dimension = 57877
const ST_Envelope = 57878
const ST_IsSimple = 57879
const ST_IsEmpty = 57880
const ST_GeometryType = 57881
const ST_X = 57882
const ST_Y = 57883
const ST_Latitude = 57884
const ST_Longitude = 57885
const ST_EndPoint = 57886
const ST_IsClosed = 57887
const ST_Length = 57888
const ST_NumPoints = 57889
const ST_StartPoint = 57890
const ST_PointN = 57891
const ST_Area = 57892
const ST_Centroid = 57893
const ST_ExteriorRing = 57894
const ST_InteriorRingN = 57895
const ST_NumInteriorRings = 57896
const ST_NumGeometries = 57897
const ST_GeometryN = 57898
const ST_LongFromGeoHash = 57899
const ST_PointFromGeoHash = 57900
const ST_LatFromGeoHash = 57901
const ST_GeoHash = 57902
const ST_AsGeoJSON = 57903
const ST_GeomFromGeoJSON = 57904
const MATCH = 57905
const AGAINST = 57906
const BOOLEAN = 57907
const LANGUAGE = 57908
const WITH = 57909
const QUERY = 57910
const EXPANSION = 57911
const WITHOUT = 57912
const VALIDATION = 57913
const ROLLUP = 57914
const UNUSED = 57915
const ARRAY = 57916
const BYTE = 57917
const CUME_DIST = 57918
const DESCRIPTION = 57919
const DENSE_RANK = 57920
const EMPTY = 57921
const EXCEPT = 57922
const FIRST_VALUE = 57923
const GROUPING = 57924
const GROUPS = 57925
const JSON_TABLE = 57926
const LAG = 57927
const LAST_VALUE = 57928
const LATERAL = 57929
const LEAD = 57930
const NTH_VALUE = 57931
const NTILE = 57932
const OF = 57933
const OVER = 57934
const PERCENT_RANK = 57935
const RANK = 57936
const RECURSIVE = 57937
const ROW_NUMBER = 57938
const SYSTEM = 57939
const WINDOW = 57940
const ACTIVE = 57941
const ADMIN = 57942
const AUTOEXTEND_SIZE = 57943
const BUCKETS = 57944
const CLONE = 57945
const COLUMN_FORMAT = 57946
const COMPONENT = 57947
const DEFINITION = 57948
const ENFORCED = 57949
const ENGINE_ATTRIBUTE = 57950
const EXCLUDE = 57951
const FOLLOWING = 57952
const GET_MASTER_PUBLIC_KEY = 57953
const HISTOGRAM = 57954
const HISTORY = 57955
const INACTIVE = 57956
const INVISIBLE = 57957
const LOCKED = 57958
const MASTER_COMPRESSION_ALGORITHMS = 57959
const MASTER_PUBLIC_KEY_PATH = 57960
const MASTER_TLS_CIPHERSUITES = 57961
const MASTER_ZSTD_COMPRESSION_LEVEL = 57962
const NESTED = 57963
const NETWORK_NAMESPACE = 57964
const NOWAIT = 57965
const NULLS = 57966
const OJ = 57967
const OLD = 57968
const OPTIONAL = 57969
const ORDINALITY = 57970
const ORGANIZATION = 57971
const OTHERS = 57972
const PARTIAL = 57973
const PATH = 57974
const PERSIST = 57975
const PERSIST_ONLY = 57976
const PRECEDING = 57977
const PRIVILEGE_CHECKS_USER = 57978
const PROCESS = 57979
const RANDOM = 57980
const REFERENCE = 57981
const REQUIRE_ROW_FORMAT = 57982
const RESOURCE = 57983
const RESPECT = 57984
const RESTART = 57985
const RETAIN = 57986
const REUSE = 57987
const ROLE = 57988
const SECONDARY = 57989
const SECONDARY_ENGINE = 57990
const SECONDARY_ENGINE_ATTRIBUTE = 57991
const SECONDARY_LOAD = 57992
const SECONDARY_UNLOAD = 57993
const SIMPLE = 57994
const SKIP = 57995
const SRID = 57996
const THREAD_PRIORITY = 57997
const TIES = 57998
const UNBOUNDED = 57999
const VCPU = 58000
const VISIBLE = 58001
const RETURNING = 58002
const FORMAT_BYTES = 58003
const FORMAT_PICO_TIME = 58004
const PS_CURRENT_THREAD_ID = 58005
const PS_THREAD_ID = 58006
const GTID_SUBSET = 58007
const GTID_SUBTRACT = 58008
const WAIT_FOR_EXECUTED_GTID_SET = 58009
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58010
const FORMAT = 58011
const TREE = 58012
const VITESS = 58013
const TRADITIONAL = 58014
const VTEXPLAIN = 58015
const VEXPLAIN = 58016
const PLAN = 58017
const LOCAL = 58018
const LOW_PRIORITY = 58019
const NO_WRITE_TO_BINLOG = 58020
const LOGS = 58021
const ERROR = 58022
const GENERAL = 58023
const HOSTS = 58024
const OPTIMIZER_COSTS = 58025
const USER_RESOURCES = 58026
const SLOW = 58027
const CHANNEL = 58028
const RELAY = 58029
const EXPORT = 58030
const CURRENT = 58031
const ROW = 58032
const ROWS = 58033
const AVG_ROW_LENGTH = 58034
const CONNECTION = 58035
const CHECKSUM = 58036
const DELAY_KEY_WRITE = 58037
const ENCRYPTION = 58038
const ENGINE = 58039
const INSERT_METHOD = 58040
const MAX_ROWS = 58041
const MIN_ROWS = 58042
const PACK_KEYS = 58043
const PASSWORD = 58044
const FIXED = 58045
const DYNAMIC = 58046
const COMPRESSED = 58047
const REDUNDANT = 58048
const COMPACT = 58049
const ROW_FORMAT = 58050
const STATS_AUTO_RECALC = 58051
const STATS_PERSISTENT = 58052
const STATS_SAMPLE_PAGES = 58053
const STORAGE = 58054
const MEMORY = 58055
const DISK = 58056
const PARTITIONS = 58057
const LINEAR = 58058
const RANGE = 58059
const LIST = 58060
const SUBPARTITION = 58061
const SUBPARTITIONS = 58062
const HASH = 58063

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	14, 49,
	15, 49,
	-2, 40,
	-1, 52,
	1, 157,
	739, 157,
	-2, 165,
	-1, 53,
	140, 165,
	182, 165,
	352, 165,
	-2, 523,
	-1, 61,
	39, 777,
	245, 777,
	256, 777,
	291, 791,
	292, 791,
	-2, 779,
	-1, 66,
	247, 815,
	-2, 813,
	-1, 122,
	244, 1606,
	-2, 131,
	-1, 124,
	1, 158,
	739, 158,
	-2, 165,
	-1, 135,
	141, 408,
	250, 408,
	-2, 512,
	-1, 154,
	140, 165,
	182, 165,
	352, 165,
	-2, 532,
	-1, 739,
	168, 41,
	-2, 43,
	-1, 946,
	90, 1623,
	-2, 1467,
	-1, 947,
	90, 1624,
	227, 1628,
	-2, 1468,
	-1, 948,
	227, 1627,
	-2, 42,
	-1, 1032,
	63, 887,
	-2, 900,
	-1, 1120,
	255, 1097,
	260, 1097,
	-2, 419,
	-1, 1205,
	1, 580,
	739, 580,
	-2, 165,
	-1, 1508,
	227, 1628,
	-2, 1468,
	-1, 1719,
	63, 888,
	-2, 904,
	-1, 1720,
	63, 889,
	-2, 905,
	-1, 1776,
	140, 165,
	182, 165,
	352, 165,
	-2, 458,
	-1, 1857,
	141, 408,
	250, 408,
	-2, 512,
	-1, 1866,
	255, 1098,
	260, 1098,
	-2, 420,
	-1, 2072,
	90, 1009,
	-2, 1795,
	-1, 2073,
	90, 1010,
	-2, 2094,
	-1, 2310,
	227, 1632,
	-2, 1626,
	-1, 2311,
	227, 1628,
	-2, 1624,
	-1, 2414,
	140, 165,
	182, 165,
	352, 165,
	-2, 459,
	-1, 2421,
	29, 186,
	-2, 188,
	-1, 2876,
	81, 96,
	91, 96,
	-2, 963,
	-1, 2945,
	714, 700,
	-2, 674,
	-1, 3167,
	53, 1571,
	-2, 1565,
	-1, 4001,
	714, 700,
	-2, 688,
	-1, 4093,
	93, 632,
	98, 632,
	108, 632,
	184, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	224, 632,
	225, 632,
	-2, 1998,
}

const yyPrivate = 57344

const yyLast = 57092

var yyAct = [...]int{
	962, 3654, 3655, 87, 3653, 4168, 950, 4181, 3982, 4072,
	2117, 4135, 957, 2105, 4136, 949, 3319, 3604, 2411, 4060,
	2339, 4091, 3219, 3226, 3454, 915, 2140, 3964, 42, 1271,
	3277, 3887, 3268, 1779, 3282, 3279, 3278, 3276, 3281, 3280,
	3180, 1273, 3962, 4033, 1986, 3591, 2341, 3297, 3118, 2485,
	3234, 3296, 743, 2042, 3184, 3181, 5, 3035, 3500, 3494,
	3696, 3009, 911, 3168, 3034, 2366, 737, 3484, 2836, 771,
	910, 738, 2910, 2448, 2991, 1835, 2942, 1735, 3299, 2382,
	3326, 2911, 2473, 2453, 2912, 2516, 1030, 2399, 87, 163,
	2385, 1082, 2861, 1882, 1152, 1050, 41, 2387, 1027, 43,
	2842, 733, 2386, 1057, 2828, 2812, 3522, 1030, 2139, 2263,
	2101, 1029, 2295, 1033, 2262, 2983, 2494, 1864, 2050, 2472,
	149, 2374, 1092, 2533, 2455, 1110, 2903, 3178, 1115, 1768,
	2878, 1748, 1052, 2389, 1700, 1521, 2145, 2064, 104, 100,
	2076, 105, 1447, 1432, 3183, 1982, 753, 1089, 1086, 3511,
	1121, 1128, 1871, 2470, 1963, 1090, 1118, 2444, 2445, 1116,
	1117, 1767, 1067, 2849, 741, 3691, 740, 2810, 1069, 2367,
	748, 1753, 2153, 1039, 1722, 2172, 1504, 1036, 3683, 1049,
	85, 1261, 107, 1480, 1034, 1994, 2041, 1035, 99, 132,
	167, 912, 1025, 127, 125, 126, 3455, 1856, 133, 1201,
	1062, 93, 747, 1525, 1269, 1247, 1037, 98, 4169, 3592,
	84, 2487, 2488, 2489, 4017, 1530, 1061, 3265, 730, 106,
	2487, 2965, 2964, 2531, 2933, 3584, 4118, 2999, 3000, 4012,
	1024, 675, 4013, 2336, 2337, 2057, 2056, 2055, 3658, 1042,
	4018, 2054, 2053, 128, 1157, 3547, 1154, 2052, 1083, 2025,
	1217, 134, 672, 4112, 673, 2808, 2581, 3164, 2520, 1171,
	1172, 1173, 1443, 1176, 1177, 1178, 1179, 1948, 3122, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1077, 1076, 1132, 1043,
	1464, 731, 2838, 1131, 2, 1729, 1028, 3287, 1107, 3658,
	1099, 4139, 2519, 1094, 1026, 4191, 1739, 3991, 1051, 2935,
	1165, 4134, 1158, 1161, 1162, 128, 3287, 1737, 1106, 1105,
	1104, 4159, 3458, 715, 3457, 3657, 2363, 715, 2362, 3284,
	4013, 4174, 2360, 95, 95, 1218, 1740, 1174, 2958, 111,
	112, 113, 95, 116, 4122, 4120, 122, 1738, 3965, 191,
	2773, 916, 667, 3285, 709, 1023, 4173, 2062, 95, 3345,
	2955, 2079, 4087, 190, 728, 729, 3883, 3882, 3597, 4121,
	4119, 3598, 3285, 709, 1018, 1019, 1020, 1021, 1156, 1155,
	3291, 1032, 4149, 128, 3893, 4116, 3657, 3616, 3605, 129,
	4061, 4069, 965, 966, 967, 86, 1108, 1434, 2588, 3291,
	2513, 86, 172, 1075, 1079, 914, 86, 3892, 2110, 1064,
	1065, 4096, 965, 966, 967, 3371, 706, 1845, 2809, 2972,
	2973, 2852, 3216, 3217, 2406, 2407, 1075, 1079, 914, 3215,
	1461, 2887, 1462, 1463, 2886, 2518, 1769, 2888, 1770, 1460,
	2034, 2035, 2998, 4073, 3615, 2892, 2853, 2585, 2405, 709,
	2982, 1266, 3710, 1242, 1243, 1237, 1016, 1015, 169, 3983,
	2899, 170, 1225, 3323, 691, 2586, 1103, 1226, 1210, 1211,
	1238, 3353, 709, 3056, 2936, 95, 1231, 689, 3351, 1444,
	3321, 95, 1225, 1990, 2579, 189, 95, 1226, 2424, 2423,
	1448, 2464, 1200, 2181, 3288, 1224, 2033, 1223, 723, 709,
	1213, 2845, 2846, 709, 709, 2037, 2338, 727, 709, 86,
	1765, 721, 88, 3288, 2458, 3327, 2984, 686, 3935, 4077,
	3936, 2495, 3996, 1704, 1101, 4101, 701, 2943, 1938, 2968,
	1448, 2547, 2543, 2545, 2546, 2544, 2548, 2549, 2550, 4077,
	3314, 696, 2370, 4099, 2534, 1175, 4171, 2540, 3315, 1964,
	1258, 2370, 699, 4105, 4106, 4140, 3324, 1263, 1244, 1206,
	1433, 1265, 3236, 3237, 1246, 1239, 710, 1264, 1245, 4100,
	2986, 1232, 1939, 3322, 1940, 2557, 4141, 2558, 1707, 2559,
	2582, 2536, 2583, 1240, 1241, 710, 3586, 3585, 2560, 95,
	1181, 2173, 1180, 3867, 2538, 1130, 2175, 1130, 1458, 173,
	2180, 2176, 2541, 3582, 2177, 2178, 2179, 2498, 179, 2174,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 3662,
	676, 1991, 678, 692, 2383, 712, 1112, 711, 682, 1150,
	680, 684, 693, 685, 3238, 679, 2537, 690, 1458, 3057,
	681, 694, 695, 698, 702, 703, 704, 700, 697, 2539,
	688, 713, 4113, 1102, 1068, 1111, 1149, 1148, 1147, 1112,
	1146, 710, 1145, 1481, 2457, 1849, 1144, 1143, 1138, 1151,
	1087, 3235, 1087, 4146, 1495, 1124, 1085, 4192, 1087, 3121,
	1123, 3497, 1983, 3238, 710, 3342, 2471, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1490, 1489, 1491, 1492, 1129, 1063,
	1129, 2987, 3130, 2524, 2523, 1979, 1270, 1454, 1270, 1270,
	1446, 710, 1435, 1160, 1168, 710, 710, 3258, 3581, 1123,
	710, 2967, 1843, 1159, 1842, 1078, 1072, 1070, 1841, 2953,
	1980, 1839, 1216, 164, 666, 2368, 2369, 2981, 1766, 3149,
	2980, 3147, 1496, 1497, 2368, 2369, 4114, 1454, 1078, 1072,
	1070, 3978, 3536, 3518, 2883, 2848, 1030, 1505, 1510, 1511,
	3003, 1514, 1516, 1517, 1518, 1519, 1520, 2970, 1523, 1524,
	1526, 1526, 2937, 1526, 1526, 1531, 1531, 1531, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	3656, 1259, 1502, 3990, 1656, 2934, 1658, 1659, 1660, 1661,
	1662, 2517, 1426, 1427, 1498, 1499, 1500, 1501, 1531, 1531,
	1531, 1531, 1531, 1531, 1512, 1425, 714, 1109, 1515, 1442,
	3545, 3546, 4036, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 707, 1506, 3614,
	963, 963, 1950, 1949, 1951, 1952, 1953, 2957, 2587, 963,
	2901, 3656, 708, 3442, 1697, 3289, 3290, 4075, 1212, 94,
	1222, 1209, 165, 89, 1527, 94, 1528, 1529, 3293, 177,
	94, 3498, 1141, 1098, 3289, 3290, 1100, 4075, 1694, 1696,
	1969, 1532, 1533, 1139, 2461, 4185, 1204, 3293, 1495, 4074,
	1130, 2956, 1071, 1453, 1450, 1451, 1452, 1457, 1459, 1456,
	1870, 1455, 1221, 1130, 1227, 1228, 1229, 1230, 1703, 4074,
	185, 1449, 2785, 2113, 1757, 1071, 1657, 1030, 2586, 1728,
	1215, 1030, 1235, 2515, 1167, 2462, 3129, 1030, 1267, 1268,
	2843, 2412, 2460, 1453, 1450, 1451, 1452, 1457, 1459, 1456,
	674, 1455, 1711, 4104, 1130, 1495, 1715, 2990, 124, 1695,
	1492, 1449, 1029, 166, 171, 168, 174, 175, 176, 178,
	180, 181, 182, 183, 3214, 2612, 2463, 2137, 1729, 184,
	186, 187, 188, 94, 2601, 1103, 2459, 1095, 1475, 1046,
	2813, 2815, 119, 2154, 1097, 1096, 1262, 4103, 4004, 1153,
	3577, 3510, 3343, 1129, 1248, 2535, 2081, 2155, 2046, 1123,
	1126, 1127, 1254, 1087, 1256, 1220, 1129, 1120, 1124, 1869,
	2082, 1493, 1494, 2080, 1976, 1713, 1995, 1695, 1714, 104,
	3010, 1142, 105, 1663, 1664, 1665, 1666, 1667, 1668, 1771,
	3030, 1464, 1140, 1101, 1968, 4142, 2146, 1130, 2621, 1701,
	2146, 2926, 1253, 1255, 1103, 1199, 4150, 1129, 2612, 3705,
	1688, 1463, 1133, 1123, 1462, 1463, 120, 1135, 2375, 2376,
	3552, 1136, 1134, 107, 3551, 2129, 2118, 2119, 2120, 2121,
	2131, 2122, 2123, 2124, 2136, 2132, 2125, 2126, 2133, 2134,
	2135, 2127, 2128, 2130, 2502, 2993, 1130, 1879, 1878, 1868,
	2992, 2512, 1846, 1847, 1848, 1709, 1972, 2510, 1970, 1971,
	1862, 1973, 1974, 1975, 3012, 1141, 3537, 4183, 1139, 1203,
	4184, 1712, 4182, 1731, 2993, 4037, 1041, 1130, 1710, 2992,
	2514, 1933, 1884, 1698, 1885, 1855, 1887, 1889, 1234, 2152,
	1893, 1895, 1897, 1899, 1901, 1734, 1874, 1028, 1026, 1236,
	1129, 1205, 1166, 4187, 1915, 1249, 1163, 1988, 1270, 1251,
	2814, 3875, 1219, 1252, 2507, 1762, 1763, 3874, 2507, 1923,
	1924, 4038, 1102, 1257, 1464, 1929, 1930, 1996, 1872, 1872,
	1873, 1461, 1830, 1462, 1463, 3022, 3021, 3020, 1958, 3865,
	3014, 3970, 3018, 1838, 3013, 1965, 3011, 1966, 1250, 1129,
	1967, 3016, 3628, 1853, 2511, 1123, 1126, 1127, 2509, 1087,
	3015, 1852, 1851, 1120, 1124, 3627, 3559, 1865, 1464, 2068,
	2069, 2593, 2594, 1876, 3558, 1202, 1716, 3548, 3017, 3019,
	1129, 4193, 1729, 1956, 1119, 1133, 1123, 3971, 1919, 2151,
	1135, 1102, 3266, 2648, 1136, 1134, 2068, 2069, 2066, 2067,
	1911, 190, 1957, 1914, 1481, 1916, 3254, 1477, 1984, 1478,
	965, 966, 967, 1945, 1464, 1137, 1487, 1488, 1490, 1489,
	1491, 1492, 2065, 1479, 1493, 1494, 1476, 129, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1490, 1489, 1491, 1492, 1464,
	172, 3611, 2908, 3612, 1844, 1464, 128, 1955, 2907, 1106,
	1105, 1104, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490,
	1489, 1491, 1492, 2300, 1461, 2906, 1462, 1463, 4194, 2001,
	2608, 2467, 1959, 3032, 1943, 1270, 1270, 1944, 1464, 1997,
	1998, 1485, 1486, 1487, 1488, 1490, 1489, 1491, 1492, 87,
	2023, 2300, 87, 2002, 1942, 2297, 169, 3222, 1941, 170,
	2009, 2010, 2011, 1481, 2299, 3002, 1931, 1925, 1461, 715,
	1462, 1463, 2022, 1922, 42, 1921, 2610, 42, 961, 1481,
	1920, 1891, 1708, 189, 3318, 1464, 2609, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1490, 1489, 1491, 1492, 3542, 715,
	1765, 2660, 3223, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1490, 1489, 1491, 1492, 1461, 1429, 1462, 1463, 4143, 2108,
	2108, 2109, 2106, 2106, 3999, 3897, 3225, 1483, 1484, 1485,
	1486, 1487, 1488, 1490, 1489, 1491, 1492, 2890, 715, 1461,
	3998, 1462, 1463, 1464, 3220, 1461, 3974, 1462, 1463, 2070,
	2483, 2482, 1694, 1696, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1466, 3973, 3236, 3237, 2481, 2480, 2479, 2478, 3972,
	3221, 3870, 4155, 1729, 2192, 1742, 3854, 1999, 1461, 3853,
	1462, 1463, 3704, 1481, 2003, 2600, 2005, 2006, 2007, 2008,
	2834, 4170, 2658, 2012, 4130, 1729, 1729, 173, 2204, 2834,
	1729, 1464, 1460, 1729, 3227, 2024, 179, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1490, 1489, 1491, 1492, 1481, 101,
	3702, 1743, 3624, 1695, 1693, 1461, 85, 1462, 1463, 85,
	4153, 1729, 102, 2078, 1460, 1729, 3992, 2141, 2047, 2030,
	2031, 1464, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490,
	1489, 1491, 1492, 1692, 2085, 2084, 1691, 2086, 2087, 2088,
	2089, 2090, 2091, 2093, 2095, 2096, 2097, 2098, 2099, 2100,
	3556, 2083, 3235, 1464, 2834, 4068, 3902, 1464, 2287, 2288,
	2289, 2290, 2291, 1461, 3238, 1462, 1463, 1729, 4083, 1729,
	2214, 3541, 2112, 2834, 4047, 2312, 3328, 2308, 2315, 2316,
	1464, 3325, 110, 110, 1464, 2834, 4043, 1506, 1464, 2310,
	3955, 1729, 2309, 109, 109, 108, 108, 1464, 2156, 2157,
	2158, 2159, 2296, 3595, 3989, 2147, 2298, 103, 4081, 1729,
	3901, 164, 2170, 3257, 2333, 3878, 1729, 3858, 2191, 101,
	2206, 1461, 1464, 1462, 1463, 2834, 3866, 103, 103, 3595,
	1729, 3857, 102, 2834, 3593, 2507, 1729, 3516, 1729, 3603,
	4079, 1729, 2740, 1729, 3948, 1729, 2944, 1464, 3256, 3247,
	3246, 3244, 3245, 2391, 2917, 2307, 3242, 3243, 2313, 2314,
	2904, 1461, 1690, 1462, 1463, 1729, 1729, 3946, 1729, 3242,
	3241, 3943, 1729, 2858, 1729, 3925, 1729, 2308, 2393, 1464,
	104, 3224, 1683, 105, 3483, 1729, 1729, 1729, 2421, 2310,
	1464, 2570, 2380, 1461, 1464, 1462, 1463, 1461, 2879, 1462,
	1463, 104, 2343, 2569, 105, 2529, 2617, 2586, 2966, 3476,
	1729, 1464, 2355, 1834, 2947, 2922, 1464, 2528, 2077, 2831,
	1461, 1464, 1462, 1463, 1461, 1092, 1462, 1463, 1461, 2365,
	1462, 1463, 2940, 2941, 3473, 1729, 103, 1461, 2344, 1462,
	1463, 2834, 2833, 2111, 1729, 2879, 2430, 2431, 2432, 2433,
	2425, 1464, 2426, 2427, 2428, 2429, 2415, 1464, 1092, 2416,
	2026, 1042, 1461, 2880, 1462, 1463, 3471, 1729, 2436, 2437,
	2438, 2439, 2397, 2882, 2331, 2850, 1992, 3434, 1729, 3513,
	1954, 2616, 2349, 2420, 2350, 1946, 2356, 1461, 1936, 1462,
	1463, 1932, 1928, 2450, 2829, 1927, 2419, 2358, 3432, 1729,
	109, 2496, 1926, 3428, 1729, 2857, 2456, 1744, 3425, 1729,
	2880, 1834, 1833, 1777, 1776, 2850, 2378, 2402, 2403, 1461,
	2586, 1462, 1463, 2401, 1077, 1076, 1260, 2418, 2417, 1464,
	1461, 3179, 1462, 1463, 1461, 3509, 1462, 1463, 3423, 1729,
	1460, 3512, 3509, 2493, 3421, 1729, 4031, 2466, 1464, 2858,
	165, 1461, 1464, 1462, 1463, 3209, 1461, 177, 1462, 1463,
	2858, 1461, 4003, 1462, 1463, 2586, 2834, 2858, 2508, 2451,
	3462, 1460, 2440, 2442, 2443, 2447, 2501, 1464, 3560, 2504,
	2465, 2505, 3244, 2469, 3152, 2404, 2740, 1464, 2477, 3509,
	2645, 1461, 1464, 1462, 1463, 2644, 2521, 1461, 185, 1462,
	1463, 2507, 1132, 2490, 2451, 2500, 2499, 1131, 2373, 1733,
	2334, 2111, 1872, 2503, 2048, 2032, 3419, 1729, 1978, 1764,
	2525, 1464, 2522, 3228, 2526, 2527, 2507, 3232, 1114, 3561,
	3562, 3563, 1031, 1113, 3231, 3417, 1729, 1464, 3269, 3415,
	1729, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 1464, 2591, 1730, 1732, 1464, 184, 186, 187,
	188, 95, 1030, 2914, 3413, 1729, 4109, 4050, 3233, 1461,
	2532, 1462, 1463, 3229, 3411, 1729, 3889, 1736, 3230, 3409,
	1729, 1464, 3855, 1516, 3717, 1516, 1464, 3576, 1461, 3573,
	1462, 1463, 1461, 3554, 1462, 1463, 3376, 3375, 1836, 2449,
	3316, 2604, 1464, 3271, 3267, 2948, 2446, 3320, 3407, 1729,
	2441, 2435, 95, 1464, 2434, 1961, 2563, 1461, 1464, 1462,
	1463, 1867, 1464, 2913, 3405, 1729, 1481, 1461, 1863, 1462,
	1463, 1907, 1461, 2607, 1462, 1463, 1832, 1464, 3360, 3403,
	1729, 121, 1464, 3401, 1729, 2310, 1464, 1204, 2309, 2656,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1489, 1491,
	1492, 1461, 3890, 1462, 1463, 2464, 2578, 3564, 3399, 1729,
	2627, 2914, 2347, 3397, 1729, 2028, 1464, 1461, 4007, 1462,
	1463, 2584, 1908, 1909, 1910, 3523, 3524, 2642, 4165, 3395,
	1729, 4163, 1461, 2592, 1462, 1463, 1461, 4137, 1462, 1463,
	3381, 1729, 4011, 1464, 3930, 3526, 1729, 3263, 2595, 3358,
	1729, 2596, 3891, 1464, 3565, 3566, 3567, 2078, 1464, 1903,
	3262, 1461, 1464, 1462, 1463, 1729, 1461, 1464, 1462, 1463,
	1729, 3261, 3179, 2805, 1729, 1464, 2927, 2598, 2597, 2029,
	2599, 2564, 1461, 3201, 1462, 1463, 671, 1464, 3202, 2602,
	3529, 2603, 1464, 1461, 1746, 1462, 1463, 3528, 1461, 3198,
	1462, 1463, 1461, 3531, 1462, 1463, 1904, 1905, 1906, 2364,
	3199, 2620, 3197, 1741, 2353, 3200, 1044, 1461, 3517, 1462,
	1463, 3682, 1461, 3681, 1462, 1463, 1461, 3157, 1462, 1463,
	2803, 1729, 3203, 2605, 2867, 2868, 3156, 3969, 3695, 2784,
	2778, 1729, 3169, 3171, 1977, 2755, 1729, 3505, 3697, 2747,
	1729, 3172, 1464, 1014, 2738, 1729, 1461, 3166, 1462, 1463,
	732, 1464, 1745, 2572, 2573, 2654, 1464, 1045, 2575, 2137,
	3502, 2816, 3240, 3680, 2736, 1729, 1047, 2576, 3501, 2723,
	1729, 2772, 2897, 1461, 1048, 1462, 1463, 2918, 2108, 2819,
	1030, 2106, 2154, 1461, 1170, 1462, 1463, 1169, 1461, 101,
	1462, 1463, 1461, 101, 1462, 1463, 2155, 1461, 103, 1462,
	1463, 3336, 102, 2855, 2856, 1461, 102, 1462, 1463, 2817,
	2913, 2996, 2391, 1464, 1428, 1030, 2875, 1461, 1464, 1462,
	1463, 2954, 1461, 129, 1462, 1463, 3507, 103, 42, 2721,
	1729, 1464, 2820, 4179, 2822, 2375, 2376, 2872, 2719, 1729,
	2874, 3259, 2567, 2717, 1729, 1464, 4086, 3988, 3885, 1464,
	3239, 2835, 2077, 1464, 2871, 2359, 2854, 2129, 2118, 2119,
	2120, 2121, 2131, 2122, 2123, 2124, 2136, 2132, 2125, 2126,
	2133, 2134, 2135, 2127, 2128, 2130, 1055, 2556, 3155, 1056,
	1464, 2555, 1461, 2554, 1462, 1463, 3154, 3485, 1701, 2807,
	2844, 1461, 2553, 1462, 1463, 1464, 1461, 2552, 1462, 1463,
	2715, 1729, 2873, 1464, 110, 2713, 1729, 2551, 1695, 2590,
	1464, 108, 2900, 2902, 2827, 109, 110, 108, 2711, 1729,
	109, 1464, 3954, 3953, 2893, 2847, 2832, 109, 103, 2952,
	3933, 3703, 2709, 1729, 1464, 2877, 2707, 1729, 1464, 3701,
	2705, 1729, 1464, 3700, 2863, 2866, 2867, 2868, 2864, 2881,
	2865, 2869, 3693, 1461, 2884, 1462, 1463, 2456, 1461, 2891,
	1462, 1463, 3574, 3506, 2963, 2894, 3504, 2703, 1729, 1464,
	3272, 1461, 2916, 1462, 1463, 2491, 2149, 2919, 2920, 1850,
	1054, 2150, 2905, 4144, 3495, 1461, 3692, 1462, 1463, 1461,
	3478, 1462, 1463, 1461, 2850, 1462, 1463, 2701, 1729, 2915,
	1464, 4167, 4166, 3, 3666, 2831, 3058, 1464, 2699, 1729,
	2923, 1464, 4166, 2924, 2928, 2929, 2930, 2210, 1464, 2960,
	1461, 3474, 1462, 1463, 2646, 2697, 1729, 1464, 2345, 2695,
	1729, 1855, 1758, 3006, 3007, 1461, 110, 1462, 1463, 4167,
	2949, 2950, 1464, 1461, 1750, 1462, 1463, 109, 3975, 108,
	1461, 3540, 1462, 1463, 114, 115, 2693, 1729, 2959, 2045,
	3026, 1461, 10, 1462, 1463, 2043, 2044, 97, 9, 8,
	1, 1022, 1431, 1430, 1461, 1464, 1462, 1463, 1461, 1464,
	1462, 1463, 1461, 1464, 1462, 1463, 3544, 2691, 1729, 1464,
	2985, 3023, 3004, 4098, 2689, 1729, 1464, 2293, 2684, 1729,
	1464, 687, 2988, 2335, 1699, 2680, 1729, 4138, 1464, 1461,
	4094, 1462, 1463, 4095, 2678, 1729, 1947, 3041, 3042, 3043,
	3044, 3045, 3046, 3047, 3048, 3049, 3050, 2325, 1937, 2671,
	1729, 3606, 2261, 3886, 3275, 2961, 2497, 3572, 2454, 1122,
	1461, 3024, 1462, 1463, 154, 1730, 2332, 1461, 2413, 1462,
	1463, 1461, 2414, 1462, 1463, 4063, 118, 1080, 1461, 117,
	1462, 1463, 2669, 1729, 1125, 1233, 3440, 1461, 2492, 1462,
	1463, 3987, 1464, 3596, 2898, 2422, 1783, 3862, 1781, 1464,
	1782, 2357, 1461, 3436, 1462, 1463, 3005, 1780, 3578, 3060,
	3098, 3008, 3100, 1785, 3116, 3373, 1784, 2994, 1464, 3025,
	2995, 4035, 3344, 2647, 3441, 2036, 722, 2870, 3111, 3112,
	3113, 3114, 716, 192, 1772, 1461, 1464, 1462, 1463, 1461,
	1751, 1462, 1463, 1461, 1164, 1462, 1463, 677, 3248, 1461,
	2530, 1462, 1463, 683, 1513, 3134, 1461, 2027, 1462, 1463,
	1461, 3153, 1462, 1463, 2939, 2885, 3125, 1074, 1461, 1066,
	1462, 1463, 2391, 3123, 2346, 3051, 1464, 2821, 1073, 2296,
	2909, 2296, 3863, 2298, 1464, 2298, 3372, 3187, 1464, 3499,
	3096, 3165, 3167, 2837, 3186, 3170, 87, 2393, 1464, 2391,
	2391, 2391, 2391, 2391, 1464, 3364, 3163, 2468, 3968, 3694,
	4048, 3106, 3107, 3108, 3109, 3110, 2895, 1747, 3134, 2391,
	3461, 1033, 2391, 3362, 2393, 2393, 2393, 2393, 2393, 3124,
	2619, 3126, 1461, 3133, 1462, 1463, 2144, 3208, 3191, 1461,
	1503, 1462, 1463, 2390, 2393, 3661, 2063, 2393, 745, 744,
	3151, 742, 1464, 2823, 2851, 1467, 1464, 3145, 1461, 951,
	1462, 1463, 3161, 2801, 2811, 1988, 1759, 1464, 2862, 2860,
	2859, 2800, 3158, 3160, 2565, 2796, 1461, 1464, 1462, 1463,
	3173, 3174, 2398, 3525, 3521, 2795, 3292, 4090, 2392, 2388,
	3190, 2794, 1034, 2830, 902, 1035, 3300, 3193, 3194, 901,
	3196, 3192, 3204, 754, 3195, 3146, 3148, 3150, 104, 3210,
	3212, 105, 3211, 1464, 746, 736, 1461, 1464, 1462, 1463,
	964, 1464, 3218, 900, 1461, 899, 1462, 1463, 1461, 3302,
	1462, 1463, 3159, 3303, 3251, 3249, 3250, 1464, 1461, 2793,
	1462, 1463, 2969, 2792, 1461, 3317, 1462, 1463, 3252, 3253,
	2971, 1464, 2896, 3313, 2791, 1445, 1718, 1721, 3304, 1464,
	2354, 1093, 3341, 1464, 2782, 3301, 3305, 3994, 2589, 3176,
	2456, 3294, 3273, 3370, 1717, 4001, 3311, 3283, 3590, 3264,
	2945, 2484, 69, 46, 3182, 3963, 1464, 4032, 894, 3182,
	891, 3663, 1461, 3664, 1462, 1463, 1461, 3665, 1462, 1463,
	2781, 3119, 3332, 3331, 2780, 3120, 3329, 1461, 2779, 1462,
	1463, 4014, 4015, 890, 3339, 4016, 2199, 1461, 1441, 1462,
	1463, 1438, 4111, 2038, 2776, 96, 3346, 3347, 3349, 3348,
	36, 35, 3350, 34, 3352, 33, 3354, 32, 2771, 26,
	1464, 3365, 3366, 3367, 3368, 3369, 2764, 25, 24, 23,
	2763, 22, 29, 1461, 19, 1462, 1463, 1461, 21, 1462,
	1463, 1461, 20, 1462, 1463, 18, 3286, 4133, 1516, 4178,
	123, 55, 1516, 2762, 52, 3274, 50, 1461, 131, 1462,
	1463, 130, 2606, 53, 49, 1207, 2611, 2071, 3486, 47,
	3488, 1461, 31, 1462, 1463, 30, 17, 16, 15, 1461,
	14, 1462, 1463, 1461, 13, 1462, 1463, 12, 3340, 2614,
	11, 2615, 7, 6, 39, 38, 3456, 2623, 37, 28,
	27, 2625, 2626, 3460, 40, 4, 1461, 2761, 1462, 1463,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2932, 2643, 2486, 0, 0, 3185, 0, 0, 0, 0,
	2391, 0, 0, 1696, 0, 0, 3487, 0, 3489, 3491,
	0, 0, 0, 3538, 2649, 2650, 2651, 2652, 2653, 0,
	2655, 3503, 3496, 0, 2657, 2393, 1464, 0, 2662, 2663,
	1461, 2664, 1462, 1463, 2667, 2668, 2670, 2672, 2673, 2674,
	2675, 2676, 2677, 2679, 2681, 2682, 2683, 2685, 734, 2687,
	2688, 2690, 2692, 2694, 2696, 2698, 2700, 2702, 2704, 2706,
	2708, 2710, 2712, 2714, 2716, 2718, 2720, 2722, 2724, 2725,
	2726, 3295, 2728, 3530, 2730, 3304, 2732, 2733, 3532, 2735,
	2737, 2739, 3301, 3305, 3463, 2742, 3465, 3466, 3467, 2746,
	3533, 3539, 3527, 2751, 2752, 2753, 2754, 3555, 3508, 3557,
	1464, 0, 0, 3600, 3601, 1464, 2765, 2766, 2767, 2768,
	2769, 2770, 3493, 2760, 2774, 2775, 0, 3549, 3550, 0,
	3334, 3335, 2777, 0, 0, 0, 0, 2783, 0, 1464,
	0, 0, 2786, 2787, 2788, 2789, 2790, 0, 1702, 1464,
	0, 0, 0, 2797, 2798, 3520, 2799, 1464, 0, 2802,
	2804, 2357, 0, 2806, 0, 0, 1727, 1053, 0, 1723,
	1059, 1059, 1464, 2818, 3534, 3535, 1461, 1464, 1462, 1463,
	3583, 1464, 0, 1724, 3587, 3588, 3589, 0, 1464, 0,
	3602, 0, 0, 1464, 0, 0, 0, 2759, 0, 0,
	1464, 0, 2758, 0, 0, 0, 1464, 669, 2351, 2352,
	1726, 0, 1725, 3618, 1464, 0, 0, 0, 0, 0,
	0, 1464, 0, 0, 0, 0, 2757, 1017, 0, 0,
	0, 0, 0, 0, 0, 1464, 2756, 0, 0, 1464,
	0, 0, 0, 0, 2750, 1464, 0, 0, 0, 0,
	1461, 0, 1462, 1463, 0, 1461, 0, 1462, 1463, 2749,
	0, 0, 0, 3650, 2748, 0, 0, 0, 2745, 1088,
	0, 0, 0, 0, 3669, 2744, 3670, 3671, 3672, 1461,
	2743, 1462, 1463, 0, 0, 3679, 1464, 2741, 3686, 1461,
	3688, 1462, 1463, 2734, 0, 0, 0, 1461, 0, 1462,
	1463, 2731, 0, 0, 3659, 1464, 0, 0, 2729, 1464,
	0, 3689, 1461, 3186, 1462, 1463, 87, 1461, 3186, 1462,
	1463, 1461, 2727, 1462, 1463, 0, 2686, 0, 1461, 0,
	1462, 1463, 2666, 1461, 0, 1462, 1463, 0, 0, 0,
	1461, 42, 1462, 1463, 2108, 3719, 1461, 2106, 1462, 1463,
	3623, 1464, 0, 3690, 1461, 0, 1462, 1463, 3699, 3698,
	3709, 1461, 0, 1462, 1463, 3706, 1464, 3708, 0, 3711,
	0, 0, 0, 2665, 0, 1461, 0, 1462, 1463, 1461,
	0, 1462, 1463, 3869, 0, 1461, 0, 1462, 1463, 0,
	0, 0, 2661, 3723, 0, 0, 2659, 0, 0, 0,
	0, 0, 0, 0, 3579, 3580, 2863, 2866, 2867, 2868,
	2864, 0, 2865, 2869, 0, 0, 3523, 3524, 0, 0,
	0, 0, 0, 0, 3861, 3860, 1461, 0, 1462, 1463,
	0, 0, 0, 0, 0, 3888, 3876, 0, 2624, 0,
	0, 0, 0, 3881, 3880, 1461, 3859, 1462, 1463, 1461,
	0, 1462, 1463, 2618, 0, 3927, 3928, 3036, 3037, 3038,
	3039, 3040, 3713, 0, 0, 0, 0, 3687, 0, 0,
	0, 2108, 3931, 0, 2106, 1727, 0, 3055, 1723, 3871,
	3872, 3873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1461, 1724, 1462, 1463, 0, 3720, 3721, 0, 0,
	0, 3182, 0, 0, 0, 0, 1461, 0, 1462, 1463,
	3976, 3186, 3934, 3715, 0, 0, 3937, 1719, 1720, 1726,
	3967, 1725, 0, 0, 0, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1652, 1653, 1654, 1655,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 3932, 3977, 3961, 3960, 3951, 1464,
	0, 0, 0, 3979, 3185, 3957, 0, 3959, 3995, 3185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3188, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 3980, 1696, 0, 0, 0,
	0, 0, 0, 3206, 0, 0, 0, 0, 0, 3864,
	0, 42, 0, 3984, 0, 0, 0, 0, 3997, 0,
	0, 0, 0, 0, 4000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3868, 0, 0, 0, 0, 4002,
	0, 0, 0, 0, 0, 0, 2613, 0, 0, 0,
	0, 0, 4009, 0, 0, 0, 0, 0, 0, 0,
	4019, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4045, 0, 0, 0, 0, 87,
	0, 0, 4020, 0, 1465, 4021, 0, 0, 0, 1461,
	0, 1462, 1463, 0, 4030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 1208, 4039, 1214, 0, 0,
	0, 0, 1696, 4076, 4051, 1522, 0, 0, 0, 0,
	0, 3338, 4054, 3888, 4065, 4062, 4059, 4056, 4055, 4053,
	4058, 4057, 4049, 0, 0, 0, 0, 0, 0, 0,
	3981, 0, 0, 3355, 3356, 0, 3357, 3359, 3361, 4084,
	0, 0, 3185, 0, 0, 4089, 0, 0, 0, 4107,
	0, 4097, 4102, 0, 0, 0, 0, 1437, 0, 0,
	4076, 0, 0, 4117, 3374, 4115, 0, 4128, 0, 3378,
	3379, 3380, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389,
	3390, 3391, 3392, 3393, 3394, 3396, 3398, 3400, 3402, 3404,
	3406, 3408, 3410, 3412, 3414, 3416, 3418, 3420, 3422, 3424,
	3426, 3427, 3429, 3430, 3431, 3433, 4132, 4041, 3435, 4127,
	3437, 3438, 3439, 4148, 4151, 3443, 3444, 3445, 3446, 3447,
	3448, 3449, 3450, 3451, 3452, 3453, 2108, 4161, 4164, 2106,
	4162, 4160, 4158, 4157, 3459, 0, 1988, 4076, 3464, 4147,
	4172, 0, 3468, 3469, 4046, 3470, 3472, 3182, 3475, 3477,
	4180, 3479, 3480, 3481, 3482, 4186, 4188, 0, 0, 0,
	0, 3490, 0, 0, 0, 0, 0, 0, 3986, 0,
	0, 0, 0, 0, 0, 0, 0, 4197, 4198, 3928,
	4196, 0, 0, 0, 2108, 4195, 0, 2106, 0, 0,
	0, 0, 0, 0, 0, 0, 3514, 3515, 4131, 3993,
	3519, 0, 4005, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4040,
	0, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3613, 0, 0, 3617, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3629, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3652, 0, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 0, 3660, 0, 0, 0, 0, 0,
	0, 3667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1917, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1817, 1818, 1819, 1820, 1821,
	1822, 0, 1823, 1824, 1826, 1827, 1825, 1828, 1829, 1802,
	1803, 1804, 1805, 1786, 1787, 1815, 0, 1789, 1962, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 0, 0,
	1799, 1806, 1807, 1808, 1809, 1989, 1810, 1811, 1812, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3877, 0, 0, 0, 0, 0, 0, 0, 0, 3884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3894,
	3895, 3896, 0, 3898, 0, 3899, 3900, 0, 0, 0,
	3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3912,
	3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922,
	3923, 3924, 0, 3926, 3929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3938,
	3939, 3940, 3941, 3942, 3944, 3945, 3947, 3949, 3950, 3952,
	0, 0, 0, 3956, 0, 0, 0, 3958, 0, 2058,
	2059, 2060, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2114,
	2115, 0, 0, 0, 0, 2138, 1816, 0, 2142, 2143,
	0, 0, 0, 2148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 0, 2171,
	0, 0, 0, 2193, 2194, 2195, 2196, 2197, 2198, 2200,
	0, 2205, 0, 2207, 2208, 2209, 0, 2211, 2212, 2213,
	0, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	0, 0, 0, 0, 0, 2292, 0, 2294, 0, 2301,
	2302, 2303, 2304, 2305, 2306, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2317, 2318,
	2319, 2320, 2321, 2322, 2323, 2324, 0, 2326, 2327, 2328,
	2329, 2330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	0, 4025, 0, 0, 0, 0, 0, 4028, 0, 4029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2371, 2372, 0, 0, 0, 0,
	0, 0, 4044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2410, 0, 0, 0, 0, 0, 0, 0, 4070, 4071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4078, 4080, 4082, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 0,
	4088, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	0, 0, 4110, 0, 0, 0, 0, 0, 0, 0,
	0, 2452, 0, 0, 0, 0, 0, 0, 0, 2377,
	0, 0, 0, 0, 0, 0, 0, 2381, 0, 2384,
	0, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	4129, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 195, 0, 0, 0, 720, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 195, 0, 4152, 4154, 4156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4177, 0, 0,
	0, 0, 0, 726, 195, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4189, 4190, 0, 0, 1814,
	1817, 1818, 1819, 1820, 1821, 1822, 0, 1823, 1824, 1826,
	1827, 1825, 1828, 1829, 1802, 1803, 1804, 1805, 1786, 1787,
	1815, 0, 1789, 0, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 0, 0, 1799, 1806, 1807, 1808, 1809,
	0, 1810, 1811, 1812, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3744, 3746, 3745, 3809, 3810, 3811,
	3812, 3813, 3814, 3815, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 0, 0, 0, 2542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2561, 2562, 0,
	0, 2566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2571, 0, 0, 0, 0, 0, 0,
	2574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2628, 2629, 2630, 2631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1012, 0,
	2300, 0, 0, 1013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2107, 0, 0, 0, 0, 1522, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3758, 3759, 0,
	0, 3834, 3833, 3832, 0, 0, 3830, 3831, 3829, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3835, 917, 0, 772, 773, 3836, 3837, 921, 3838,
	775, 776, 918, 919, 0, 770, 774, 920, 922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 3741, 3742, 3743, 3747, 3748, 3749,
	3760, 3807, 3808, 3816, 3818, 873, 3817, 3819, 3820, 3821,
	3824, 3825, 3826, 3827, 3822, 3823, 3828, 3724, 3728, 3725,
	3726, 3727, 3739, 3729, 3730, 3731, 3732, 3733, 3734, 3735,
	3736, 3737, 3738, 3740, 3839, 3840, 3841, 3842, 3843, 3844,
	3753, 3757, 3756, 3754, 3755, 3751, 3752, 3779, 3778, 3780,
	3781, 3782, 3783, 3784, 3785, 3787, 3786, 3788, 3789, 3790,
	3791, 3792, 3793, 3761, 3762, 3765, 3766, 3764, 3763, 3767,
	3776, 3777, 3768, 3769, 3770, 3771, 3772, 3773, 3775, 3774,
	3794, 3795, 3796, 3797, 3798, 3800, 3799, 3803, 3804, 3802,
	3801, 3806, 3805, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 195, 0, 0, 2876, 923, 0, 924, 0,
	0, 928, 0, 0, 0, 930, 929, 0, 931, 893,
	892, 0, 0, 925, 926, 0, 927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 726, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3027, 3028, 3029, 0, 0,
	3031, 0, 0, 3033, 0, 2974, 2975, 2976, 2977, 2978,
	2979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3052, 3053, 3054, 0, 0, 0, 0,
	0, 0, 2051, 2989, 0, 3059, 0, 0, 3061, 3062,
	3063, 0, 0, 0, 3064, 3065, 0, 0, 3066, 0,
	3067, 0, 0, 0, 0, 2997, 0, 3068, 0, 3069,
	0, 0, 0, 3070, 0, 3071, 0, 0, 3072, 0,
	3073, 0, 3074, 0, 3075, 0, 3076, 0, 3077, 0,
	3078, 0, 3079, 0, 3080, 0, 3081, 0, 3082, 0,
	3083, 0, 3084, 0, 3085, 0, 3086, 0, 3087, 0,
	3088, 0, 3089, 0, 0, 0, 3090, 0, 3091, 0,
	3092, 0, 0, 3093, 0, 3094, 0, 3095, 0, 2264,
	3097, 0, 0, 3099, 0, 0, 3101, 3102, 3103, 3104,
	0, 0, 0, 0, 3105, 2264, 2264, 2264, 2264, 2264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3115, 1508, 0, 0, 0, 0, 0, 0, 3128, 0,
	0, 3132, 0, 0, 0, 0, 0, 0, 0, 0,
	3135, 3136, 3137, 3138, 3139, 3140, 0, 0, 0, 3141,
	3142, 0, 3143, 0, 3144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1059, 195,
	0, 0, 0, 726, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3177,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 3207, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 726, 3270, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 1508, 726, 0, 0, 726,
	726, 726, 726, 0, 726, 0, 726, 726, 0, 726,
	726, 726, 726, 726, 726, 86, 44, 45, 88, 0,
	0, 0, 1508, 726, 726, 1508, 726, 1508, 195, 726,
	0, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 48, 76, 77, 0, 74, 78, 0, 195, 0,
	0, 0, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 726, 0, 195, 0, 0, 3260, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 726, 0, 195,
	195, 3363, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 3298, 0, 0, 95, 195, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 3312, 3377, 0, 0,
	190, 0, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 726, 0, 0, 0, 0, 3330, 0, 0, 3333,
	0, 0, 0, 0, 0, 0, 129, 0, 151, 0,
	0, 0, 83, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 139,
	161, 160, 189, 0, 0, 0, 51, 54, 57, 56,
	59, 0, 73, 0, 0, 82, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 61,
	91, 90, 0, 0, 71, 72, 58, 0, 0, 0,
	0, 0, 80, 81, 0, 0, 0, 0, 726, 726,
	0, 0, 3492, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 3575, 0, 0, 0,
	0, 0, 0, 0, 0, 63, 64, 0, 65, 66,
	67, 68, 0, 155, 136, 158, 143, 135, 0, 156,
	157, 0, 0, 0, 0, 0, 173, 0, 0, 3599,
	0, 0, 0, 0, 0, 179, 144, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	147, 145, 140, 141, 142, 146, 0, 3553, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 1508, 0, 60,
	0, 148, 0, 0, 0, 946, 0, 3568, 0, 0,
	3569, 3570, 3571, 0, 0, 0, 0, 3619, 0, 3620,
	0, 3621, 0, 3622, 0, 0, 0, 0, 0, 0,
	0, 3625, 3626, 0, 0, 0, 0, 0, 0, 0,
	3630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3631, 0, 3632, 0, 3633, 0,
	3634, 0, 3635, 0, 3636, 0, 3637, 705, 3638, 0,
	3639, 0, 3640, 725, 3641, 0, 3642, 0, 3643, 0,
	3644, 0, 3645, 0, 3646, 0, 0, 3647, 0, 89,
	164, 3648, 0, 3649, 0, 0, 0, 0, 0, 3651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3668, 0, 0, 0, 725, 0, 725, 0, 0,
	3673, 2311, 3674, 3675, 0, 3676, 0, 3677, 0, 0,
	0, 0, 3678, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3707,
	129, 0, 151, 0, 0, 0, 195, 0, 0, 0,
	0, 726, 3716, 172, 0, 3718, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3722, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	726, 0, 0, 3856, 162, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 195, 0, 0, 0, 726, 0,
	0, 2311, 195, 0, 195, 0, 195, 195, 0, 169,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 1859, 161, 160, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 726, 0,
	0, 0, 0, 0, 0, 726, 726, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 726, 177, 0, 0, 0,
	0, 726, 726, 0, 0, 726, 0, 726, 0, 0,
	0, 3966, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 1860, 158,
	0, 1857, 0, 156, 157, 0, 0, 185, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 726, 179,
	0, 0, 0, 726, 0, 0, 0, 726, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 0, 0, 0, 0, 195, 184, 186, 187, 188,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 195, 0, 0, 195, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4008, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 2311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4022, 0, 0, 4023, 0, 4024, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4108,
	0, 725, 1424, 725, 725, 0, 0, 0, 0, 152,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 725, 0, 150, 0, 0, 4124, 0,
	4125, 0, 4126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 169, 0, 0, 170, 0, 0,
	177, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 1859, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 4175, 0, 4176, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 0, 0, 0, 0,
	184, 186, 187, 188, 0, 195, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 1860, 158, 0, 1857, 904, 156, 157,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 193, 195, 0, 670, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 726, 670, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 726, 726, 0, 0,
	0, 726, 1040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 726, 1060,
	1060, 0, 0, 0, 0, 0, 0, 0, 670, 0,
	195, 195, 195, 195, 195, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 725, 725, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 725, 159, 725, 0, 0, 0,
	0, 0, 726, 0, 725, 0, 0, 1507, 725, 0,
	0, 725, 725, 725, 725, 0, 725, 0, 725, 725,
	0, 725, 725, 725, 725, 725, 725, 0, 0, 0,
	0, 0, 0, 0, 1507, 725, 725, 1507, 725, 1507,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1084, 152, 1091, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 725, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 1508, 0, 0, 726,
	726, 1508, 195, 195, 195, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	195, 0, 195, 0, 0, 195, 195, 195, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 0, 0, 0, 0, 184, 186, 187, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 1508, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 195, 0, 0,
	725, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 195, 195, 195, 0, 0,
	0, 0, 725, 0, 0, 726, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 726, 726, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 1272, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 1436, 0, 0, 0, 1509, 0, 725, 725, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 725, 0, 0,
	0, 0, 0, 725, 725, 0, 0, 725, 0, 725,
	0, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 0, 725, 1040, 0, 0, 725,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 726, 0, 195, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 195, 0, 0,
	726, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 1509, 0, 0, 1509,
	726, 1509, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 726, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 725,
	670, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 1705, 1706, 0, 2013, 2014, 670, 670,
	670, 670, 670, 670, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 0, 0, 0, 0, 0, 0,
	726, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1084, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 1877, 0, 0, 1880,
	1881, 1883, 1883, 0, 1883, 0, 1883, 1883, 0, 1892,
	1883, 1883, 1883, 1883, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 1912, 1913, 0, 1084, 0, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 1985, 0, 726,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 0, 0, 726, 195, 0, 0, 0, 0, 0,
	0, 1272, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 2889, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	726, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 0, 0, 0, 726, 2311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 725, 0, 0,
	0, 0, 0, 0, 725, 0, 0, 0, 725, 725,
	0, 0, 0, 725, 0, 0, 0, 0, 195, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	725, 0, 0, 0, 0, 0, 0, 0, 1272, 1272,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 0, 0, 0, 0, 195, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 726, 0, 1060, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	0, 1040, 0, 0, 95, 0, 0, 1012, 0, 0,
	0, 952, 1013, 965, 966, 967, 953, 0, 670, 954,
	955, 0, 956, 0, 0, 1987, 670, 0, 670, 0,
	670, 2400, 0, 0, 0, 0, 961, 0, 968, 969,
	0, 0, 0, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3306, 3307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2348, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	2361, 0, 0, 0, 725, 0, 670, 0, 1507, 0,
	0, 725, 725, 1507, 0, 0, 670, 670, 1755, 0,
	670, 1272, 2568, 0, 0, 0, 0, 0, 0, 3309,
	3310, 0, 670, 0, 0, 0, 0, 0, 0, 670,
	0, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 3255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 1091, 1507,
	0, 0, 0, 1012, 725, 2474, 2475, 2476, 1013, 0,
	0, 0, 0, 917, 0, 0, 0, 0, 2107, 921,
	0, 0, 0, 918, 919, 1084, 0, 0, 920, 922,
	0, 1091, 1875, 0, 0, 1875, 0, 1875, 0, 0,
	0, 0, 0, 2506, 0, 0, 0, 0, 0, 1509,
	0, 1987, 0, 0, 0, 0, 3337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1084, 0,
	0, 0, 0, 2102, 0, 0, 0, 2102, 2102, 0,
	0, 0, 0, 0, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 1272, 0, 0,
	1934, 0, 0, 3543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 725, 725, 670,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 725, 725, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 2931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 670, 670, 670, 670, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2824, 0, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 2839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 725, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2921, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 2361, 0, 0, 0, 0,
	0, 725, 2946, 0, 0, 0, 1875, 1875, 0, 0,
	0, 2951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	0, 0, 725, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 670,
	0, 0, 0, 725, 2102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 1509, 670, 670, 670, 670,
	670, 0, 0, 0, 0, 0, 0, 0, 3205, 0,
	0, 0, 0, 0, 1934, 0, 670, 0, 0, 670,
	3213, 1987, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 3117, 0, 0,
	0, 0, 0, 0, 0, 725, 0, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 1272, 0, 0, 0, 0, 0, 0, 3189,
	1883, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 725, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 2361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 725, 0, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 0, 670,
	670, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 2361, 2361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 1934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3607, 3608, 3609, 3610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3684, 0, 3684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3712, 0, 3714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3684, 0, 0, 0, 0, 0, 0,
	3684, 0, 3684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 2361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2361, 0, 4042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 1831, 0, 4092, 1407, 1393, 525, 0, 1335,
	1410, 1304, 1323, 1420, 1326, 1329, 1372, 1282, 1350, 414,
	1320, 1275, 204, 503, 1308, 1277, 1315, 1278, 1306, 1337,
	270, 1303, 1395, 1354, 1409, 364, 267, 1284, 1309, 428,
	1325, 203, 1374, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 1416, 368, 1360,
	0, 495, 399, 0, 0, 0, 1339, 1399, 1348, 1386,
	1334, 1373, 1292, 1359, 1411, 1321, 1369, 1412, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 4066,
	948, 0, 0, 0, 0, 4067, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1317, 1366, 604,
	1406, 1318, 1368, 265, 321, 272, 264, 577, 1417, 1398,
	1281, 1347, 1405, 1342, 0, 0, 229, 1408, 1341, 0,
	1371, 0, 1423, 1276, 1362, 0, 1279, 1283, 1419, 1403,
	1312, 275, 0, 0, 0, 0, 0, 0, 0, 1338,
	1349, 1383, 1387, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 1358, 0, 0, 0, 1288, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 1291, 0, 1311,
	1384, 0, 1274, 297, 1285, 400, 257, 0, 451, 1391,
	1402, 1333, 622, 1404, 1331, 1330, 1378, 1289, 1397, 1324,
	363, 1287, 330, 197, 225, 0, 1322, 410, 459, 471,
	1396, 1307, 1316, 253, 1314, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 1357, 1376, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 1286, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 1302, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 1392, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 1381, 1422, 423,
	470, 240, 601, 494, 199, 1296, 1301, 1294, 0, 254,
	255, 1363, 572, 1297, 1295, 1352, 1353, 1298, 1413, 1414,
	1415, 1400, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	1385, 1290, 0, 1299, 1300, 396, 1394, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 1356, 196, 221, 366,
	1418, 452, 288, 643, 612, 482, 607, 206, 223, 1293,
	262, 1305, 1313, 0, 1319, 1327, 1328, 1340, 1343, 1344,
	1345, 1346, 1364, 1365, 1367, 1375, 1377, 1380, 1382, 1389,
	1401, 1421, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	1355, 1361, 379, 281, 305, 320, 1370, 611, 500, 227,
	464, 290, 251, 1388, 1390, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 1351,
	1379, 374, 573, 574, 316, 394, 0, 0, 0, 0,
	1407, 1393, 525, 0, 1335, 1410, 1304, 1323, 1420, 1326,
	1329, 1372, 1282, 1350, 414, 1320, 1275, 204, 503, 1308,
	1277, 1315, 1278, 1306, 1337, 270, 1303, 1395, 1354, 1409,
	364, 267, 1284, 1309, 428, 1325, 203, 1374, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 1416, 368, 1360, 0, 495, 399, 0, 0,
	0, 1339, 1399, 1348, 1386, 1334, 1373, 1292, 1359, 1411,
	1321, 1369, 1412, 323, 248, 325, 202, 411, 496, 286,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 1317, 1366, 604, 1406, 1318, 1368, 265, 321,
	272, 264, 577, 1417, 1398, 1281, 1347, 1405, 1342, 0,
	0, 229, 1408, 1341, 0, 1371, 0, 1423, 1276, 1362,
	0, 1279, 1283, 1419, 1403, 1312, 275, 0, 0, 0,
	0, 0, 0, 0, 1338, 1349, 1383, 1387, 1332, 0,
	0, 0, 0, 0, 0, 3214, 0, 1310, 0, 1358,
	0, 0, 0, 1288, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 1291, 0, 1311, 1384, 0, 1274, 297, 1285,
	400, 257, 0, 451, 1391, 1402, 1333, 622, 1404, 1331,
	1330, 1378, 1289, 1397, 1324, 363, 1287, 330, 197, 225,
	0, 1322, 410, 459, 471, 1396, 1307, 1316, 253, 1314,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	1357, 1376, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 586, 587, 256, 645,
	228, 616, 220, 1286, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 353, 354, 280, 307, 445,
	373, 446, 306, 308, 402, 401, 403, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	1302, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 1392, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 1381, 1422, 423, 470, 240, 601, 494, 199,
	1296, 1301, 1294, 0, 254, 255, 1363, 572, 1297, 1295,
	1352, 1353, 1298, 1413, 1414, 1415, 1400, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 1385, 1290, 0, 1299, 1300,
	396, 1394, 588, 589, 665, 382, 484, 598, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 249, 210, 388, 397, 575,
	312, 216, 217, 218, 521, 522, 523, 524, 613, 614,
	618, 205, 460, 461, 462, 463, 292, 608, 309, 466,
	465, 331, 332, 377, 447, 537, 539, 550, 554, 556,
	558, 564, 567, 538, 540, 551, 555, 557, 559, 565,
	568, 527, 529, 531, 533, 546, 545, 542, 570, 571,
	548, 553, 532, 544, 549, 562, 569, 566, 526, 530,
	534, 543, 561, 560, 541, 552, 563, 547, 535, 528,
	536, 1356, 196, 221, 366, 1418, 452, 288, 643, 612,
	482, 607, 206, 223, 1293, 262, 1305, 1313, 0, 1319,
	1327, 1328, 1340, 1343, 1344, 1345, 1346, 1364, 1365, 1367,
	1375, 1377, 1380, 1382, 1389, 1401, 1421, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 301,
	302, 442, 443, 314, 315, 639, 640, 300, 595, 626,
	593, 638, 620, 436, 376, 1355, 1361, 379, 281, 305,
	320, 1370, 611, 500, 227, 464, 290, 251, 1388, 1390,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 1351, 1379, 374, 573, 574, 316,
	394, 0, 0, 0, 0, 1407, 1393, 525, 0, 1335,
	1410, 1304, 1323, 1420, 1326, 1329, 1372, 1282, 1350, 414,
	1320, 1275, 204, 503, 1308, 1277, 1315, 1278, 1306, 1337,
	270, 1303, 1395, 1354, 1409, 364, 267, 1284, 1309, 428,
	1325, 203, 1374, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 1416, 368, 1360,
	0, 495, 399, 0, 0, 0, 1339, 1399, 1348, 1386,
	1334, 1373, 1292, 1359, 1411, 1321, 1369, 1412, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1317, 1366, 604,
	1406, 1318, 1368, 265, 321, 272, 264, 577, 1417, 1398,
	1281, 1347, 1405, 1342, 0, 0, 229, 1408, 1341, 0,
	1371, 0, 1423, 1276, 1362, 0, 1279, 1283, 1419, 1403,
	1312, 275, 0, 0, 0, 0, 0, 0, 0, 1338,
	1349, 1383, 1387, 1332, 0, 0, 0, 0, 0, 0,
	3175, 0, 1310, 0, 1358, 0, 0, 0, 1288, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 1291, 0, 1311,
	1384, 0, 1274, 297, 1285, 400, 257, 0, 451, 1391,
	1402, 1333, 622, 1404, 1331, 1330, 1378, 1289, 1397, 1324,
	363, 1287, 330, 197, 225, 0, 1322, 410, 459, 471,
	1396, 1307, 1316, 253, 1314, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 1357, 1376, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 1286, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 1302, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 1392, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 1381, 1422, 423,
	470, 240, 601, 494, 199, 1296, 1301, 1294, 0, 254,
	255, 1363, 572, 1297, 1295, 1352, 1353, 1298, 1413, 1414,
	1415, 1400, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	1385, 1290, 0, 1299, 1300, 396, 1394, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 1356, 196, 221, 366,
	1418, 452, 288, 643, 612, 482, 607, 206, 223, 1293,
	262, 1305, 1313, 0, 1319, 1327, 1328, 1340, 1343, 1344,
	1345, 1346, 1364, 1365, 1367, 1375, 1377, 1380, 1382, 1389,
	1401, 1421, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	1355, 1361, 379, 281, 305, 320, 1370, 611, 500, 227,
	464, 290, 251, 1388, 1390, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 1351,
	1379, 374, 573, 574, 316, 394, 0, 0, 0, 0,
	1407, 1393, 525, 0, 1335, 1410, 1304, 1323, 1420, 1326,
	1329, 1372, 1282, 1350, 414, 1320, 1275, 204, 503, 1308,
	1277, 1315, 1278, 1306, 1337, 270, 1303, 1395, 1354, 1409,
	364, 267, 1284, 1309, 428, 1325, 203, 1374, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 1416, 368, 1360, 0, 495, 399, 0, 0,
	0, 1339, 1399, 1348, 1386, 1334, 1373, 1292, 1359, 1411,
	1321, 1369, 1412, 323, 248, 325, 202, 411, 496, 286,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 1317, 1366, 604, 1406, 1318, 1368, 265, 321,
	272, 264, 577, 1417, 1398, 1281, 1347, 1405, 1342, 0,
	0, 229, 1408, 1341, 0, 1371, 0, 1423, 1276, 1362,
	0, 1279, 1283, 1419, 1403, 1312, 275, 0, 0, 0,
	0, 0, 0, 0, 1338, 1349, 1383, 1387, 1332, 0,
	0, 0, 0, 0, 0, 2379, 0, 1310, 0, 1358,
	0, 0, 0, 1288, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 1291, 0, 1311, 1384, 0, 1274, 297, 1285,
	400, 257, 0, 451, 1391, 1402, 1333, 622, 1404, 1331,
	1330, 1378, 1289, 1397, 1324, 363, 1287, 330, 197, 225,
	0, 1322, 410, 459, 471, 1396, 1307, 1316, 253, 1314,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	1357, 1376, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 586, 587, 256, 645,
	228, 616, 220, 1286, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 353, 354, 280, 307, 445,
	373, 446, 306, 308, 402, 401, 403, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	1302, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 1392, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 1381, 1422, 423, 470, 240, 601, 494, 199,
	1296, 1301, 1294, 0, 254, 255, 1363, 572, 1297, 1295,
	1352, 1353, 1298, 1413, 1414, 1415, 1400, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 1385, 1290, 0, 1299, 1300,
	396, 1394, 588, 589, 665, 382, 484, 598, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 249, 210, 388, 397, 575,
	312, 216, 217, 218, 521, 522, 523, 524, 613, 614,
	618, 205, 460, 461, 462, 463, 292, 608, 309, 466,
	465, 331, 332, 377, 447, 537, 539, 550, 554, 556,
	558, 564, 567, 538, 540, 551, 555, 557, 559, 565,
	568, 527, 529, 531, 533, 546, 545, 542, 570, 571,
	548, 553, 532, 544, 549, 562, 569, 566, 526, 530,
	534, 543, 561, 560, 541, 552, 563, 547, 535, 528,
	536, 1356, 196, 221, 366, 1418, 452, 288, 643, 612,
	482, 607, 206, 223, 1293, 262, 1305, 1313, 0, 1319,
	1327, 1328, 1340, 1343, 1344, 1345, 1346, 1364, 1365, 1367,
	1375, 1377, 1380, 1382, 1389, 1401, 1421, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 301,
	302, 442, 443, 314, 315, 639, 640, 300, 595, 626,
	593, 638, 620, 436, 376, 1355, 1361, 379, 281, 305,
	320, 1370, 611, 500, 227, 464, 290, 251, 1388, 1390,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 1351, 1379, 374, 573, 574, 316,
	394, 0, 0, 0, 0, 1407, 1393, 525, 0, 1335,
	1410, 1304, 1323, 1420, 1326, 1329, 1372, 1282, 1350, 414,
	1320, 1275, 204, 503, 1308, 1277, 1315, 1278, 1306, 1337,
	270, 1303, 1395, 1354, 1409, 364, 267, 1284, 1309, 428,
	1325, 203, 1374, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 1416, 368, 1360,
	0, 495, 399, 0, 0, 0, 1339, 1399, 1348, 1386,
	1334, 1373, 1292, 1359, 1411, 1321, 1369, 1412, 323, 248,
	325, 202, 411, 496, 286, 0, 95, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1317, 1366, 604,
	1406, 1318, 1368, 265, 321, 272, 264, 577, 1417, 1398,
	1281, 1347, 1405, 1342, 0, 0, 229, 1408, 1341, 0,
	1371, 0, 1423, 1276, 1362, 0, 1279, 1283, 1419, 1403,
	1312, 275, 0, 0, 0, 0, 0, 0, 0, 1338,
	1349, 1383, 1387, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 1358, 0, 0, 0, 1288, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 1291, 0, 1311,
	1384, 0, 1274, 297, 1285, 400, 257, 0, 451, 1391,
	1402, 1333, 622, 1404, 1331, 1330, 1378, 1289, 1397, 1324,
	363, 1287, 330, 197, 225, 0, 1322, 410, 459, 471,
	1396, 1307, 1316, 253, 1314, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 1357, 1376, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 1286, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 1302, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 1392, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 1381, 1422, 423,
	470, 240, 601, 494, 199, 1296, 1301, 1294, 0, 254,
	255, 1363, 572, 1297, 1295, 1352, 1353, 1298, 1413, 1414,
	1415, 1400, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	1385, 1290, 0, 1299, 1300, 396, 1394, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 1356, 196, 221, 366,
	1418, 452, 288, 643, 612, 482, 607, 206, 223, 1293,
	262, 1305, 1313, 0, 1319, 1327, 1328, 1340, 1343, 1344,
	1345, 1346, 1364, 1365, 1367, 1375, 1377, 1380, 1382, 1389,
	1401, 1421, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	1355, 1361, 379, 281, 305, 320, 1370, 611, 500, 227,
	464, 290, 251, 1388, 1390, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 1351,
	1379, 374, 573, 574, 316, 394, 0, 0, 0, 0,
	1407, 1393, 525, 0, 1335, 1410, 1304, 1323, 1420, 1326,
	1329, 1372, 1282, 1350, 414, 1320, 1275, 204, 503, 1308,
	1277, 1315, 1278, 1306, 1337, 270, 1303, 1395, 1354, 1409,
	364, 267, 1284, 1309, 428, 1325, 203, 1374, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 1416, 368, 1360, 0, 495, 399, 0, 0,
	0, 1339, 1399, 1348, 1386, 1334, 1373, 1292, 1359, 1411,
	1321, 1369, 1412, 323, 248, 325, 202, 411, 496, 286,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 1317, 1366, 604, 1406, 1318, 1368, 265, 321,
	272, 264, 577, 1417, 1398, 1281, 1347, 1405, 1342, 0,
	0, 229, 1408, 1341, 0, 1371, 0, 1423, 1276, 1362,
	0, 1279, 1283, 1419, 1403, 1312, 275, 0, 0, 0,
	0, 0, 0, 0, 1338, 1349, 1383, 1387, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 1358,
	0, 0, 0, 1288, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 1291, 0, 1311, 1384, 0, 1274, 297, 1285,
	400, 257, 0, 451, 1391, 1402, 1333, 622, 1404, 1331,
	1330, 1378, 1289, 1397, 1324, 363, 1287, 330, 197, 225,
	0, 1322, 410, 459, 471, 1396, 1307, 1316, 253, 1314,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	1357, 1376, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 586, 587, 256, 645,
	228, 616, 220, 1286, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 353, 354, 280, 307, 445,
	373, 446, 306, 308, 402, 401, 403, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	1302, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 1392, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 1381, 1422, 423, 470, 240, 601, 494, 199,
	1296, 1301, 1294, 0, 254, 255, 1363, 572, 1297, 1295,
	1352, 1353, 1298, 1413, 1414, 1415, 1400, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 1385, 1290, 0, 1299, 1300,
	396, 1394, 588, 589, 665, 382, 484, 598, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 249, 210, 388, 397, 575,
	312, 216, 217, 218, 521, 522, 523, 524, 613, 614,
	618, 205, 460, 461, 462, 463, 292, 608, 309, 466,
	465, 331, 332, 377, 447, 537, 539, 550, 554, 556,
	558, 564, 567, 538, 540, 551, 555, 557, 559, 565,
	568, 527, 529, 531, 533, 546, 545, 542, 570, 571,
	548, 553, 532, 544, 549, 562, 569, 566, 526, 530,
	534, 543, 561, 560, 541, 552, 563, 547, 535, 528,
	536, 1356, 196, 221, 366, 1418, 452, 288, 643, 612,
	482, 607, 206, 223, 1293, 262, 1305, 1313, 0, 1319,
	1327, 1328, 1340, 1343, 1344, 1345, 1346, 1364, 1365, 1367,
	1375, 1377, 1380, 1382, 1389, 1401, 1421, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 301,
	302, 442, 443, 314, 315, 639, 640, 300, 595, 626,
	593, 638, 620, 436, 376, 1355, 1361, 379, 281, 305,
	320, 1370, 611, 500, 227, 464, 290, 251, 1388, 1390,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 1351, 1379, 374, 573, 574, 316,
	394, 0, 0, 0, 0, 1407, 1393, 525, 0, 1335,
	1410, 1304, 1323, 1420, 1326, 1329, 1372, 1282, 1350, 414,
	1320, 1275, 204, 503, 1308, 1277, 1315, 1278, 1306, 1337,
	270, 1303, 1395, 1354, 1409, 364, 267, 1284, 1309, 428,
	1325, 203, 1374, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 1416, 368, 1360,
	0, 495, 399, 0, 0, 0, 1339, 1399, 1348, 1386,
	1334, 1373, 1292, 1359, 1411, 1321, 1369, 1412, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1317, 1366, 604,
	1406, 1318, 1368, 265, 321, 272, 264, 577, 1417, 1398,
	1281, 1347, 1405, 1342, 0, 0, 229, 1408, 1341, 0,
	1371, 0, 1423, 1276, 1362, 0, 1279, 1283, 1419, 1403,
	1312, 275, 0, 0, 0, 0, 0, 0, 0, 1338,
	1349, 1383, 1387, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 1358, 0, 0, 0, 1288, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 1291, 0, 1311,
	1384, 0, 1274, 297, 1285, 400, 257, 0, 451, 1391,
	1402, 1333, 622, 1404, 1331, 1330, 1378, 1289, 1397, 1324,
	363, 1287, 330, 197, 225, 0, 1322, 410, 459, 471,
	1396, 1307, 1316, 253, 1314, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 1357, 1376, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 1286, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 1302, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 1392, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 1381, 1422, 423,
	470, 240, 601, 494, 199, 1296, 1301, 1294, 0, 254,
	255, 1363, 572, 1297, 1295, 1352, 1353, 1298, 1413, 1414,
	1415, 1400, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	1385, 1290, 0, 1299, 1300, 396, 1394, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 1356, 196, 221, 366,
	1418, 452, 288, 643, 612, 482, 607, 206, 223, 1293,
	262, 1305, 1313, 0, 1319, 1327, 1328, 1340, 1343, 1344,
	1345, 1346, 1364, 1365, 1367, 1375, 1377, 1380, 1382, 1389,
	1401, 1421, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	1355, 1361, 379, 281, 305, 320, 1370, 611, 500, 227,
	464, 290, 251, 1388, 1390, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 1351,
	1379, 374, 573, 574, 316, 394, 0, 0, 0, 0,
	1407, 1393, 525, 0, 1335, 1410, 1304, 1323, 1420, 1326,
	1329, 1372, 1282, 1350, 414, 1320, 1275, 204, 503, 1308,
	1277, 1315, 1278, 1306, 1337, 270, 1303, 1395, 1354, 1409,
	364, 267, 1284, 1309, 428, 1325, 203, 1374, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 1416, 368, 1360, 0, 495, 399, 0, 0,
	0, 1339, 1399, 1348, 1386, 1334, 1373, 1292, 1359, 1411,
	1321, 1369, 1412, 323, 248, 325, 202, 411, 496, 286,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 1317, 1366, 604, 1406, 1318, 1368, 265, 321,
	272, 264, 577, 1417, 1398, 1281, 1347, 1405, 1342, 0,
	0, 229, 1408, 1341, 0, 1371, 0, 1423, 1276, 1362,
	0, 1279, 1283, 1419, 1403, 1312, 275, 0, 0, 0,
	0, 0, 0, 0, 1338, 1349, 1383, 1387, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 1358,
	0, 0, 0, 1288, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 1291, 0, 1311, 1384, 0, 1274, 297, 1285,
	400, 257, 0, 451, 1391, 1402, 1333, 622, 1404, 1331,
	1330, 1378, 1289, 1397, 1324, 363, 1287, 330, 197, 225,
	0, 1322, 410, 459, 471, 1396, 1307, 1316, 253, 1314,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	1357, 1376, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 586, 587, 256, 645,
	228, 616, 220, 1286, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 353, 354, 280, 307, 445,
	373, 446, 306, 308, 402, 401, 403, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	1302, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 1392, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 1381, 1422, 423, 470, 240, 601, 494, 199,
	1296, 1301, 1294, 0, 254, 255, 1363, 572, 1297, 1295,
	1352, 1353, 1298, 1413, 1414, 1415, 1400, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 1385, 1290, 0, 1299, 1300,
	396, 1394, 588, 589, 665, 382, 484, 598, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 249, 210, 388, 397, 575,
	312, 216, 217, 218, 521, 522, 523, 524, 613, 614,
	618, 205, 460, 461, 462, 463, 292, 608, 309, 466,
	465, 331, 332, 377, 447, 537, 539, 550, 554, 556,
	558, 564, 567, 538, 540, 551, 555, 557, 559, 565,
	568, 527, 529, 531, 533, 546, 545, 542, 570, 571,
	548, 553, 532, 544, 549, 562, 569, 566, 526, 530,
	534, 543, 561, 560, 541, 552, 563, 547, 535, 528,
	536, 1356, 196, 221, 366, 1418, 452, 288, 643, 612,
	482, 607, 206, 223, 1293, 262, 1305, 1313, 0, 1319,
	1327, 1328, 1340, 1343, 1344, 1345, 1346, 1364, 1365, 1367,
	1375, 1377, 1380, 1382, 1389, 1401, 1421, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 301,
	302, 442, 443, 314, 315, 639, 640, 300, 595, 626,
	593, 638, 620, 436, 376, 1355, 1361, 379, 281, 305,
	320, 1370, 611, 500, 227, 464, 290, 251, 1388, 1390,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 1351, 1379, 374, 573, 574, 316,
	394, 0, 0, 0, 0, 0, 0, 525, 0, 768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 204, 503, 0, 0, 755, 0, 0, 0,
	270, 760, 0, 0, 0, 364, 267, 0, 0, 428,
	0, 203, 0, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 767, 368, 0,
	0, 495, 399, 0, 0, 0, 0, 0, 762, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 411, 496, 286, 0, 95, 0, 0, 1012,
	948, 739, 914, 952, 1013, 965, 966, 967, 953, 0,
	238, 954, 955, 245, 956, 0, 913, 798, 800, 799,
	863, 864, 865, 866, 867, 868, 869, 796, 961, 604,
	968, 969, 0, 265, 321, 272, 264, 577, 0, 0,
	2201, 2202, 2203, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 735, 752, 0, 766, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 749, 750,
	0, 0, 0, 0, 908, 0, 751, 0, 0, 759,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 400, 257, 0, 451, 907,
	0, 0, 622, 0, 0, 905, 0, 0, 0, 0,
	363, 0, 330, 197, 225, 0, 0, 410, 459, 471,
	0, 0, 0, 958, 0, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 0, 0, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 959, 960, 256, 645, 804, 616, 220, 0, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	812, 813, 280, 307, 889, 888, 887, 306, 308, 885,
	886, 884, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 0, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 0, 0, 423,
	470, 240, 601, 494, 895, 917, 906, 772, 773, 896,
	897, 921, 898, 775, 776, 918, 919, 769, 770, 774,
	920, 922, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	909, 758, 757, 0, 764, 765, 0, 794, 795, 797,
	801, 802, 803, 814, 861, 862, 870, 872, 873, 871,
	874, 875, 876, 879, 880, 881, 882, 877, 878, 883,
	777, 781, 778, 779, 780, 792, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 793, 932, 933, 934,
	935, 936, 937, 807, 811, 810, 808, 809, 805, 806,
	833, 832, 834, 835, 836, 837, 838, 839, 841, 840,
	842, 843, 844, 845, 846, 847, 815, 816, 819, 820,
	818, 817, 821, 830, 831, 822, 823, 824, 825, 826,
	827, 829, 828, 848, 849, 850, 851, 852, 854, 853,
	857, 858, 856, 855, 860, 859, 756, 196, 221, 366,
	0, 452, 288, 643, 612, 482, 607, 206, 223, 923,
	262, 924, 0, 0, 928, 0, 0, 0, 930, 929,
	0, 931, 893, 892, 0, 0, 925, 926, 0, 927,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 938, 939, 940, 941, 942, 943,
	944, 945, 300, 595, 626, 593, 638, 620, 436, 376,
	0, 0, 379, 281, 305, 320, 0, 611, 500, 227,
	464, 290, 251, 963, 0, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 394,
	0, 374, 573, 574, 316, 0, 525, 0, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 204, 503, 0, 0, 755, 0, 0, 0, 270,
	760, 0, 0, 0, 364, 267, 0, 0, 428, 0,
	203, 0, 485, 252, 375, 372, 580, 282, 273, 269,
	250, 317, 383, 426, 515, 420, 767, 368, 0, 0,
	495, 399, 0, 0, 0, 0, 0, 762, 763, 0,
	0, 0, 0, 0, 0, 2408, 0, 323, 248, 325,
	202, 411, 496, 286, 0, 95, 0, 0, 1012, 948,
	739, 914, 952, 1013, 965, 966, 967, 953, 0, 238,
	954, 955, 245, 956, 0, 913, 798, 800, 799, 863,
	864, 865, 866, 867, 868, 869, 796, 961, 604, 968,
	969, 2409, 265, 321, 272, 264, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 735, 752, 0, 766, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 749, 750, 0,
	0, 0, 0, 908, 0, 751, 0, 0, 759, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 400, 257, 0, 451, 907, 0,
	0, 622, 0, 0, 905, 0, 0, 0, 0, 363,
	0, 330, 197, 225, 0, 0, 410, 459, 471, 0,
	0, 0, 958, 0, 469, 424, 599, 233, 284, 456,
	430, 467, 438, 287, 0, 0, 468, 370, 582, 448,
	596, 623, 624, 263, 404, 609, 519, 617, 641, 226,
	260, 418, 504, 602, 492, 395, 578, 579, 329, 491,
	295, 201, 367, 629, 224, 477, 369, 242, 231, 584,
	606, 299, 289, 454, 636, 213, 514, 594, 239, 481,
	0, 0, 644, 247, 502, 215, 591, 501, 391, 326,
	327, 214, 0, 455, 268, 293, 0, 0, 258, 413,
	959, 960, 256, 645, 804, 616, 220, 0, 615, 406,
	581, 592, 392, 381, 219, 590, 390, 380, 334, 812,
	813, 280, 307, 889, 888, 887, 306, 308, 885, 886,
	884, 207, 603, 0, 208, 0, 497, 605, 646, 450,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 365, 417, 444, 440, 449, 0, 576, 597,
	610, 621, 627, 628, 630, 631, 632, 633, 634, 637,
	635, 405, 311, 493, 333, 371, 0, 0, 423, 470,
	240, 601, 494, 895, 917, 906, 772, 773, 896, 897,
	921, 898, 775, 776, 918, 919, 769, 770, 774, 920,
	922, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 642,
	505, 511, 506, 507, 508, 509, 510, 0, 512, 909,
	758, 757, 0, 764, 765, 0, 794, 795, 797, 801,
	802, 803, 814, 861, 862, 870, 872, 873, 871, 874,
	875, 876, 879, 880, 881, 882, 877, 878, 883, 777,
	781, 778, 779, 780, 792, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 793, 932, 933, 934, 935,
	936, 937, 807, 811, 810, 808, 809, 805, 806, 833,
	832, 834, 835, 836, 837, 838, 839, 841, 840, 842,
	843, 844, 845, 846, 847, 815, 816, 819, 820, 818,
	817, 821, 830, 831, 822, 823, 824, 825, 826, 827,
	829, 828, 848, 849, 850, 851, 852, 854, 853, 857,
	858, 856, 855, 860, 859, 756, 196, 221, 366, 0,
	452, 288, 643, 612, 482, 607, 206, 223, 923, 262,
	924, 0, 0, 928, 0, 0, 0, 930, 929, 0,
	931, 893, 892, 0, 0, 925, 926, 0, 927, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 407, 408, 409, 412, 415, 416, 419,
	421, 422, 425, 429, 433, 434, 435, 437, 439, 441,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 486,
	487, 488, 489, 490, 498, 499, 513, 583, 585, 600,
	619, 625, 478, 938, 939, 940, 941, 942, 943, 944,
	945, 300, 595, 626, 593, 638, 620, 436, 376, 0,
	0, 379, 281, 305, 320, 0, 611, 500, 227, 464,
	290, 251, 963, 0, 211, 246, 230, 259, 274, 277,
	324, 389, 398, 427, 432, 296, 271, 244, 457, 241,
	483, 516, 517, 518, 520, 393, 266, 431, 394, 0,
	374, 573, 574, 316, 86, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	204, 503, 0, 0, 755, 0, 0, 0, 270, 760,
	0, 0, 0, 364, 267, 0, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 94, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 525, 0, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 204,
	503, 0, 0, 755, 0, 0, 0, 270, 760, 0,
	0, 0, 364, 267, 0, 0, 428, 0, 203, 0,
	485, 252, 375, 372, 580, 282, 273, 269, 250, 317,
	383, 426, 515, 420, 767, 368, 0, 0, 495, 399,
	0, 0, 0, 0, 0, 762, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 411,
	496, 286, 0, 95, 0, 0, 1012, 948, 739, 914,
	952, 1013, 965, 966, 967, 953, 0, 238, 954, 955,
	245, 956, 0, 913, 798, 800, 799, 863, 864, 865,
	866, 867, 868, 869, 796, 961, 604, 968, 969, 0,
	265, 321, 272, 264, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 735, 752, 0, 766, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 749, 750, 0, 0, 0,
	0, 908, 0, 751, 0, 0, 759, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 400, 257, 0, 451, 907, 0, 0, 622,
	0, 0, 905, 0, 0, 0, 0, 363, 0, 330,
	197, 225, 0, 0, 410, 459, 471, 0, 0, 0,
	958, 0, 469, 424, 599, 233, 284, 456, 430, 467,
	438, 287, 4052, 0, 468, 370, 582, 448, 596, 623,
	624, 263, 404, 609, 519, 617, 641, 226, 260, 418,
	504, 602, 492, 395, 578, 579, 329, 491, 295, 201,
	367, 629, 224, 477, 369, 242, 231, 584, 606, 299,
	289, 454, 636, 213, 514, 594, 239, 481, 0, 0,
	644, 247, 502, 215, 591, 501, 391, 326, 327, 214,
	0, 455, 268, 293, 0, 0, 258, 413, 959, 960,
	256, 645, 804, 616, 220, 0, 615, 406, 581, 592,
	392, 381, 219, 590, 390, 380, 334, 812, 813, 280,
	307, 889, 888, 887, 306, 308, 885, 886, 884, 207,
	603, 0, 208, 0, 497, 605, 646, 450, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	365, 417, 444, 440, 449, 0, 576, 597, 610, 621,
	627, 628, 630, 631, 632, 633, 634, 637, 635, 405,
	311, 493, 333, 371, 0, 0, 423, 470, 240, 601,
	494, 895, 917, 906, 772, 773, 896, 897, 921, 898,
	775, 776, 918, 919, 769, 770, 774, 920, 922, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 642, 505, 511,
	506, 507, 508, 509, 510, 0, 512, 909, 758, 757,
	0, 764, 765, 0, 794, 795, 797, 801, 802, 803,
	814, 861, 862, 870, 872, 873, 871, 874, 875, 876,
	879, 880, 881, 882, 877, 878, 883, 777, 781, 778,
	779, 780, 792, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 793, 932, 933, 934, 935, 936, 937,
	807, 811, 810, 808, 809, 805, 806, 833, 832, 834,
	835, 836, 837, 838, 839, 841, 840, 842, 843, 844,
	845, 846, 847, 815, 816, 819, 820, 818, 817, 821,
	830, 831, 822, 823, 824, 825, 826, 827, 829, 828,
	848, 849, 850, 851, 852, 854, 853, 857, 858, 856,
	855, 860, 859, 756, 196, 221, 366, 0, 452, 288,
	643, 612, 482, 607, 206, 223, 923, 262, 924, 0,
	0, 928, 0, 0, 0, 930, 929, 0, 931, 893,
	892, 0, 0, 925, 926, 0, 927, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 407, 408, 409, 412, 415, 416, 419, 421, 422,
	425, 429, 433, 434, 435, 437, 439, 441, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 486, 487, 488,
	489, 490, 498, 499, 513, 583, 585, 600, 619, 625,
	478, 938, 939, 940, 941, 942, 943, 944, 945, 300,
	595, 626, 593, 638, 620, 436, 376, 0, 0, 379,
	281, 305, 320, 0, 611, 500, 227, 464, 290, 251,
	963, 0, 211, 246, 230, 259, 274, 277, 324, 389,
	398, 427, 432, 296, 271, 244, 457, 241, 483, 516,
	517, 518, 520, 393, 266, 431, 394, 0, 374, 573,
	574, 316, 0, 525, 0, 768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 204, 503,
	0, 0, 755, 0, 0, 0, 270, 760, 0, 0,
	0, 364, 267, 0, 0, 428, 0, 203, 0, 485,
	252, 375, 372, 580, 282, 273, 269, 250, 317, 383,
	426, 515, 420, 767, 368, 0, 0, 495, 399, 0,
	0, 0, 0, 0, 762, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 411, 496,
	286, 0, 95, 0, 1729, 1012, 948, 739, 914, 952,
	1013, 965, 966, 967, 953, 0, 238, 954, 955, 245,
	956, 0, 913, 798, 800, 799, 863, 864, 865, 866,
	867, 868, 869, 796, 961, 604, 968, 969, 0, 265,
	321, 272, 264, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	735, 752, 0, 766, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 750, 0, 0, 0, 0,
	908, 0, 751, 0, 0, 759, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 400, 257, 0, 451, 907, 0, 0, 622, 0,
	0, 905, 0, 0, 0, 0, 363, 0, 330, 197,
	225, 0, 0, 410, 459, 471, 0, 0, 0, 958,
	0, 469, 424, 599, 233, 284, 456, 430, 467, 438,
	287, 0, 0, 468, 370, 582, 448, 596, 623, 624,
	263, 404, 609, 519, 617, 641, 226, 260, 418, 504,
	602, 492, 395, 578, 579, 329, 491, 295, 201, 367,
	629, 224, 477, 369, 242, 231, 584, 606, 299, 289,
	454, 636, 213, 514, 594, 239, 481, 0, 0, 644,
	247, 502, 215, 591, 501, 391, 326, 327, 214, 0,
	455, 268, 293, 0, 0, 258, 413, 959, 960, 256,
	645, 804, 616, 220, 0, 615, 406, 581, 592, 392,
	381, 219, 590, 390, 380, 334, 812, 813, 280, 307,
	889, 888, 887, 306, 308, 885, 886, 884, 207, 603,
	0, 208, 0, 497, 605, 646, 450, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 365,
	417, 444, 440, 449, 0, 576, 597, 610, 621, 627,
	628, 630, 631, 632, 633, 634, 637, 635, 405, 311,
	493, 333, 371, 0, 0, 423, 470, 240, 601, 494,
	895, 917, 906, 772, 773, 896, 897, 921, 898, 775,
	776, 918, 919, 769, 770, 774, 920, 922, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 642, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 909, 758, 757, 0,
	764, 765, 0, 794, 795, 797, 801, 802, 803, 814,
	861, 862, 870, 872, 873, 871, 874, 875, 876, 879,
	880, 881, 882, 877, 878, 883, 777, 781, 778, 779,
	780, 792, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 793, 932, 933, 934, 935, 936, 937, 807,
	811, 810, 808, 809, 805, 806, 833, 832, 834, 835,
	836, 837, 838, 839, 841, 840, 842, 843, 844, 845,
	846, 847, 815, 816, 819, 820, 818, 817, 821, 830,
	831, 822, 823, 824, 825, 826, 827, 829, 828, 848,
	849, 850, 851, 852, 854, 853, 857, 858, 856, 855,
	860, 859, 756, 196, 221, 366, 0, 452, 288, 643,
	612, 482, 607, 206, 223, 923, 262, 924, 0, 0,
	928, 0, 0, 0, 930, 929, 0, 931, 893, 892,
	0, 0, 925, 926, 0, 927, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	407, 408, 409, 412, 415, 416, 419, 421, 422, 425,
	429, 433, 434, 435, 437, 439, 441, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 486, 487, 488, 489,
	490, 498, 499, 513, 583, 585, 600, 619, 625, 478,
	938, 939, 940, 941, 942, 943, 944, 945, 300, 595,
	626, 593, 638, 620, 436, 376, 0, 0, 379, 281,
	305, 320, 0, 611, 500, 227, 464, 290, 251, 963,
	0, 211, 246, 230, 259, 274, 277, 324, 389, 398,
	427, 432, 296, 271, 244, 457, 241, 483, 516, 517,
	518, 520, 393, 266, 431, 394, 0, 374, 573, 574,
	316, 0, 525, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 204, 503, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 428, 0, 203, 0, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 767, 368, 0, 0, 495, 399, 0, 0,
	0, 0, 0, 762, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 411, 496, 286,
	0, 95, 0, 0, 1012, 948, 739, 914, 952, 1013,
	965, 966, 967, 953, 0, 238, 954, 955, 245, 956,
	0, 913, 798, 800, 799, 863, 864, 865, 866, 867,
	868, 869, 796, 961, 604, 968, 969, 0, 265, 321,
	272, 264, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 735,
	752, 0, 766, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 750, 1058, 0, 0, 0, 908,
	0, 751, 0, 0, 759, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	400, 257, 0, 451, 907, 0, 0, 622, 0, 0,
	905, 0, 0, 0, 0, 363, 0, 330, 197, 225,
	0, 0, 410, 459, 471, 0, 0, 0, 958, 0,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	0, 0, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 959, 960, 256, 645,
	804, 616, 220, 0, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 812, 813, 280, 307, 889,
	888, 887, 306, 308, 885, 886, 884, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 0, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 0, 0, 423, 470, 240, 601, 494, 895,
	917, 906, 772, 773, 896, 897, 921, 898, 775, 776,
	918, 919, 769, 770, 774, 920, 922, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 909, 758, 757, 0, 764,
	765, 0, 794, 795, 797, 801, 802, 803, 814, 861,
	862, 870, 872, 873, 871, 874, 875, 876, 879, 880,
	881, 882, 877, 878, 883, 777, 781, 778, 779, 780,
	792, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 793, 932, 933, 934, 935, 936, 937, 807, 811,
	810, 808, 809, 805, 806, 833, 832, 834, 835, 836,
	837, 838, 839, 841, 840, 842, 843, 844, 845, 846,
	847, 815, 816, 819, 820, 818, 817, 821, 830, 831,
	822, 823, 824, 825, 826, 827, 829, 828, 848, 849,
	850, 851, 852, 854, 853, 857, 858, 856, 855, 860,
	859, 756, 196, 221, 366, 0, 452, 288, 643, 612,
	482, 607, 206, 223, 923, 262, 924, 0, 0, 928,
	0, 0, 0, 930, 929, 0, 931, 893, 892, 0,
	0, 925, 926, 0, 927, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 938,
	939, 940, 941, 942, 943, 944, 945, 300, 595, 626,
	593, 638, 620, 436, 376, 0, 0, 379, 281, 305,
	320, 0, 611, 500, 227, 464, 290, 251, 963, 0,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 394, 0, 374, 573, 574, 316,
	0, 525, 0, 768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 204, 503, 0, 0,
	755, 0, 0, 0, 270, 760, 0, 0, 0, 364,
	267, 0, 0, 428, 0, 203, 0, 485, 252, 375,
	372, 580, 282, 273, 269, 250, 317, 383, 426, 515,
	420, 767, 368, 0, 0, 495, 399, 0, 0, 0,
	0, 0, 762, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 411, 496, 286, 0,
	95, 0, 0, 1012, 948, 739, 914, 952, 1013, 965,
	966, 967, 953, 0, 238, 954, 955, 245, 956, 0,
	913, 798, 800, 799, 863, 864, 865, 866, 867, 868,
	869, 796, 961, 604, 968, 969, 0, 265, 321, 272,
	264, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 735, 752,
	0, 766, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 749, 750, 0, 0, 0, 0, 908, 0,
	751, 0, 0, 759, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 400,
	257, 0, 451, 907, 0, 0, 622, 0, 0, 905,
	0, 0, 0, 0, 363, 0, 330, 197, 225, 0,
	0, 410, 459, 471, 0, 0, 0, 958, 0, 469,
	424, 599, 233, 284, 456, 430, 467, 438, 287, 0,
	0, 468, 370, 582, 448, 596, 623, 624, 263, 404,
	609, 519, 617, 641, 226, 260, 418, 504, 602, 492,
	395, 578, 579, 329, 491, 295, 201, 367, 629, 224,
	477, 369, 242, 231, 584, 606, 299, 289, 454, 636,
	213, 514, 594, 239, 481, 0, 0, 644, 247, 502,
	215, 591, 501, 391, 326, 327, 214, 0, 455, 268,
	293, 0, 0, 258, 413, 959, 960, 256, 645, 804,
	616, 220, 0, 615, 406, 581, 592, 392, 381, 219,
	590, 390, 380, 334, 812, 813, 280, 307, 889, 888,
	887, 306, 308, 885, 886, 884, 207, 603, 0, 208,
	0, 497, 605, 646, 450, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 365, 417, 444,
	440, 449, 0, 576, 597, 610, 621, 627, 628, 630,
	631, 632, 633, 634, 637, 635, 405, 311, 493, 333,
	371, 0, 0, 423, 470, 240, 601, 494, 895, 917,
	906, 772, 773, 896, 897, 921, 898, 775, 776, 918,
	919, 769, 770, 774, 920, 922, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 642, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 909, 758, 757, 0, 764, 765,
	0, 794, 795, 797, 801, 802, 803, 814, 861, 862,
	870, 872, 873, 871, 874, 875, 876, 879, 880, 881,
	882, 877, 878, 883, 777, 781, 778, 779, 780, 792,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	793, 932, 933, 934, 935, 936, 937, 807, 811, 810,
	808, 809, 805, 806, 833, 832, 834, 835, 836, 837,
	838, 839, 841, 840, 842, 843, 844, 845, 846, 847,
	815, 816, 819, 820, 818, 817, 821, 830, 831, 822,
	823, 824, 825, 826, 827, 829, 828, 848, 849, 850,
	851, 852, 854, 853, 857, 858, 856, 855, 860, 859,
	756, 196, 221, 366, 0, 452, 288, 643, 612, 482,
	607, 206, 223, 923, 262, 924, 0, 0, 928, 0,
	0, 0, 930, 929, 0, 931, 893, 892, 0, 0,
	925, 926, 0, 927, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 407, 408,
	409, 412, 415, 416, 419, 421, 422, 425, 429, 433,
	434, 435, 437, 439, 441, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 486, 487, 488, 489, 490, 498,
	499, 513, 583, 585, 600, 619, 625, 478, 938, 939,
	940, 941, 942, 943, 944, 945, 300, 595, 626, 593,
	638, 620, 436, 376, 0, 0, 379, 281, 305, 320,
	0, 611, 500, 227, 464, 290, 251, 963, 0, 211,
	246, 230, 259, 274, 277, 324, 389, 398, 427, 432,
	296, 271, 244, 457, 241, 483, 516, 517, 518, 520,
	393, 266, 431, 394, 0, 374, 573, 574, 316, 0,
	525, 0, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 204, 503, 0, 0, 755,
	0, 0, 0, 270, 760, 0, 0, 0, 364, 267,
	0, 0, 428, 0, 203, 0, 485, 252, 375, 372,
	580, 282, 273, 269, 250, 317, 383, 426, 515, 420,
	767, 368, 0, 0, 495, 399, 0, 0, 0, 0,
	0, 762, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 411, 496, 286, 0, 95,
	0, 0, 1012, 948, 739, 914, 952, 1013, 965, 966,
	967, 953, 0, 238, 954, 955, 245, 956, 0, 913,
	798, 800, 799, 863, 864, 865, 866, 867, 868, 869,
	796, 961, 604, 968, 969, 0, 265, 321, 272, 264,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 735, 752, 0,
	766, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 749, 750, 0, 0, 0, 0, 908, 0, 751,
	0, 0, 759, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 3131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 400, 257,
	0, 451, 907, 0, 0, 622, 0, 0, 905, 0,
	0, 0, 0, 363, 0, 330, 197, 225, 0, 0,
	410, 459, 471, 0, 0, 0, 958, 0, 469, 424,
	599, 233, 284, 456, 430, 467, 438, 287, 0, 0,
	468, 370, 582, 448, 596, 623, 624, 263, 404, 609,
	519, 617, 641, 226, 260, 418, 504, 602, 492, 395,
	578, 579, 329, 491, 295, 201, 367, 629, 224, 477,
	369, 242, 231, 584, 606, 299, 289, 454, 636, 213,
	514, 594, 239, 481, 0, 0, 644, 247, 502, 215,
	591, 501, 391, 326, 327, 214, 0, 455, 268, 293,
	0, 0, 258, 413, 959, 960, 256, 645, 804, 616,
	220, 0, 615, 406, 581, 592, 392, 381, 219, 590,
	390, 380, 334, 812, 813, 280, 307, 889, 888, 887,
	306, 308, 885, 886, 884, 207, 603, 0, 208, 0,
	497, 605, 646, 450, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 365, 417, 444, 440,
	449, 0, 576, 597, 610, 621, 627, 628, 630, 631,
	632, 633, 634, 637, 635, 405, 311, 493, 333, 371,
	0, 0, 423, 470, 240, 601, 494, 895, 917, 906,
	772, 773, 896, 897, 921, 898, 775, 776, 918, 919,
	769, 770, 774, 920, 922, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 642, 505, 511, 506, 507, 508, 509,
	510, 0, 512, 909, 758, 757, 0, 764, 765, 0,
	794, 795, 797, 801, 802, 803, 814, 861, 862, 870,
	872, 873, 871, 874, 875, 876, 879, 880, 881, 882,
	877, 878, 883, 777, 781, 778, 779, 780, 792, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 793,
	932, 933, 934, 935, 936, 937, 807, 811, 810, 808,
	809, 805, 806, 833, 832, 834, 835, 836, 837, 838,
	839, 841, 840, 842, 843, 844, 845, 846, 847, 815,
	816, 819, 820, 818, 817, 821, 830, 831, 822, 823,
	824, 825, 826, 827, 829, 828, 848, 849, 850, 851,
	852, 854, 853, 857, 858, 856, 855, 860, 859, 756,
	196, 221, 366, 0, 452, 288, 643, 612, 482, 607,
	206, 223, 923, 262, 924, 0, 0, 928, 0, 0,
	0, 930, 929, 0, 931, 893, 892, 0, 0, 925,
	926, 0, 927, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 407, 408, 409,
	412, 415, 416, 419, 421, 422, 425, 429, 433, 434,
	435, 437, 439, 441, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 486, 487, 488, 489, 490, 498, 499,
	513, 583, 585, 600, 619, 625, 478, 938, 939, 940,
	941, 942, 943, 944, 945, 300, 595, 626, 593, 638,
	620, 436, 376, 0, 0, 379, 281, 305, 320, 0,
	611, 500, 227, 464, 290, 251, 963, 0, 211, 246,
	230, 259, 274, 277, 324, 389, 398, 427, 432, 296,
	271, 244, 457, 241, 483, 516, 517, 518, 520, 393,
	266, 431, 394, 0, 374, 573, 574, 316, 0, 525,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 204, 503, 0, 0, 755, 0,
	0, 0, 270, 760, 0, 0, 0, 364, 267, 0,
	0, 428, 0, 203, 0, 485, 252, 375, 372, 580,
	282, 273, 269, 250, 317, 383, 426, 515, 420, 767,
	368, 0, 0, 495, 399, 0, 0, 0, 0, 0,
	762, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 411, 496, 286, 0, 95, 0,
	0, 1012, 948, 739, 914, 952, 1013, 965, 966, 967,
	953, 0, 238, 954, 955, 245, 956, 0, 913, 798,
	800, 799, 863, 864, 865, 866, 867, 868, 869, 796,
	961, 604, 968, 969, 0, 265, 321, 272, 264, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 735, 752, 0, 766,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	749, 750, 0, 0, 0, 0, 908, 0, 751, 0,
	0, 759, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 3127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 400, 257, 0,
	451, 907, 0, 0, 622, 0, 0, 905, 0, 0,
	0, 0, 363, 0, 330, 197, 225, 0, 0, 410,
	459, 471, 0, 0, 0, 958, 0, 469, 424, 599,
	233, 284, 456, 430, 467, 438, 287, 0, 0, 468,
	370, 582, 448, 596, 623, 624, 263, 404, 609, 519,
	617, 641, 226, 260, 418, 504, 602, 492, 395, 578,
	579, 329, 491, 295, 201, 367, 629, 224, 477, 369,
	242, 231, 584, 606, 299, 289, 454, 636, 213, 514,
	594, 239, 481, 0, 0, 644, 247, 502, 215, 591,
	501, 391, 326, 327, 214, 0, 455, 268, 293, 0,
	0, 258, 413, 959, 960, 256, 645, 804, 616, 220,
	0, 615, 406, 581, 592, 392, 381, 219, 590, 390,
	380, 334, 812, 813, 280, 307, 889, 888, 887, 306,
	308, 885, 886, 884, 207, 603, 0, 208, 0, 497,
	605, 646, 450, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 365, 417, 444, 440, 449,
	0, 576, 597, 610, 621, 627, 628, 630, 631, 632,
	633, 634, 637, 635, 405, 311, 493, 333, 371, 0,
	0, 423, 470, 240, 601, 494, 895, 917, 906, 772,
	773, 896, 897, 921, 898, 775, 776, 918, 919, 769,
	770, 774, 920, 922, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 642, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 909, 758, 757, 0, 764, 765, 0, 794,
	795, 797, 801, 802, 803, 814, 861, 862, 870, 872,
	873, 871, 874, 875, 876, 879, 880, 881, 882, 877,
	878, 883, 777, 781, 778, 779, 780, 792, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 793, 932,
	933, 934, 935, 936, 937, 807, 811, 810, 808, 809,
	805, 806, 833, 832, 834, 835, 836, 837, 838, 839,
	841, 840, 842, 843, 844, 845, 846, 847, 815, 816,
	819, 820, 818, 817, 821, 830, 831, 822, 823, 824,
	825, 826, 827, 829, 828, 848, 849, 850, 851, 852,
	854, 853, 857, 858, 856, 855, 860, 859, 756, 196,
	221, 366, 0, 452, 288, 643, 612, 482, 607, 206,
	223, 923, 262, 924, 0, 0, 928, 0, 0, 0,
	930, 929, 0, 931, 893, 892, 0, 0, 925, 926,
	0, 927, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 407, 408, 409, 412,
	415, 416, 419, 421, 422, 425, 429, 433, 434, 435,
	437, 439, 441, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 486, 487, 488, 489, 490, 498, 499, 513,
	583, 585, 600, 619, 625, 478, 938, 939, 940, 941,
	942, 943, 944, 945, 300, 595, 626, 593, 638, 620,
	436, 376, 0, 0, 379, 281, 305, 320, 0, 611,
	500, 227, 464, 290, 251, 963, 0, 211, 246, 230,
	259, 274, 277, 324, 389, 398, 427, 432, 296, 271,
	244, 457, 241, 483, 516, 517, 518, 520, 393, 266,
	431, 394, 0, 374, 573, 574, 316, 0, 525, 0,
	768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 2074, 2072, 2073, 0, 0, 755, 0, 0,
	0, 270, 760, 0, 0, 0, 364, 267, 0, 0,
	428, 0, 203, 0, 485, 252, 375, 372, 580, 282,
	273, 269, 250, 317, 383, 426, 515, 420, 767, 368,
	0, 0, 495, 399, 0, 0, 0, 0, 0, 762,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 411, 496, 286, 0, 95, 0, 0,
	1012, 948, 1079, 914, 952, 1013, 965, 966, 967, 953,
	0, 238, 954, 955, 245, 956, 0, 913, 798, 800,
	799, 863, 864, 865, 866, 867, 868, 869, 796, 961,
	604, 968, 969, 0, 265, 321, 272, 264, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 766, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 749,
	750, 0, 0, 0, 0, 908, 0, 751, 0, 0,
	759, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 400, 257, 0, 451,
	907, 0, 0, 622, 0, 0, 905, 0, 0, 0,
	0, 363, 0, 330, 197, 225, 0, 0, 410, 459,
	471, 0, 0, 0, 958, 0, 469, 424, 599, 233,
	284, 456, 430, 467, 438, 287, 0, 0, 468, 370,
	582, 448, 596, 623, 624, 263, 404, 609, 519, 617,
	641, 226, 260, 418, 504, 602, 492, 395, 578, 579,
	329, 491, 295, 201, 367, 629, 224, 477, 369, 242,
	231, 584, 606, 299, 289, 454, 636, 213, 514, 594,
	239, 481, 0, 0, 644, 247, 502, 215, 591, 501,
	391, 326, 327, 214, 0, 455, 268, 293, 0, 0,
	258, 413, 959, 960, 256, 645, 804, 616, 220, 0,
	615, 406, 581, 592, 392, 381, 219, 590, 390, 380,
	334, 812, 813, 280, 307, 889, 888, 887, 306, 308,
	885, 886, 884, 207, 603, 0, 208, 0, 497, 605,
	646, 450, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 365, 417, 444, 440, 449, 0,
	576, 597, 610, 621, 627, 628, 630, 631, 632, 633,
	634, 637, 635, 405, 311, 493, 333, 371, 0, 0,
	423, 470, 240, 601, 494, 895, 917, 906, 772, 773,
	896, 897, 921, 898, 775, 776, 918, 919, 769, 770,
	774, 920, 922, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 642, 505, 511, 506, 507, 508, 509, 510, 0,
	512, 909, 758, 757, 0, 764, 765, 0, 794, 795,
	797, 801, 802, 803, 814, 861, 862, 870, 872, 873,
	871, 874, 875, 876, 879, 880, 881, 882, 877, 878,
	883, 777, 781, 778, 779, 780, 792, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 793, 932, 933,
	934, 935, 936, 937, 807, 811, 810, 808, 809, 805,
	806, 833, 832, 834, 835, 836, 837, 838, 839, 841,
	840, 842, 843, 844, 845, 846, 847, 815, 816, 819,
	820, 818, 817, 821, 830, 831, 822, 823, 824, 825,
	826, 827, 829, 828, 848, 849, 850, 851, 852, 854,
	853, 857, 858, 856, 855, 860, 859, 756, 196, 221,
	366, 0, 452, 288, 643, 612, 482, 607, 206, 223,
	923, 262, 924, 0, 0, 928, 0, 0, 0, 930,
	929, 0, 931, 893, 892, 0, 0, 925, 926, 0,
	927, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 407, 408, 409, 412, 415,
	416, 419, 421, 422, 425, 429, 433, 434, 435, 437,
	439, 441, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 486, 487, 488, 489, 490, 498, 499, 513, 583,
	585, 600, 619, 625, 478, 938, 939, 940, 941, 942,
	943, 944, 945, 300, 595, 626, 593, 638, 620, 436,
	376, 0, 0, 379, 281, 305, 320, 0, 611, 500,
	227, 464, 290, 251, 963, 0, 211, 246, 230, 259,
	274, 277, 324, 389, 398, 427, 432, 296, 271, 244,
	457, 241, 483, 516, 517, 518, 520, 393, 266, 431,
	394, 0, 374, 573, 574, 316, 0, 525, 0, 768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 204, 503, 0, 0, 755, 0, 0, 0,
	270, 760, 0, 0, 0, 364, 267, 0, 0, 428,
	0, 203, 0, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 767, 368, 0,
	0, 495, 399, 0, 0, 0, 0, 0, 762, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 411, 496, 286, 0, 95, 0, 0, 1012,
	948, 1079, 914, 952, 1013, 965, 966, 967, 953, 0,
	238, 954, 955, 245, 956, 0, 913, 798, 800, 799,
	863, 864, 865, 866, 867, 868, 869, 796, 961, 604,
	968, 969, 0, 265, 321, 272, 264, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 766, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 749, 750,
	0, 0, 0, 0, 908, 0, 751, 0, 0, 759,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 400, 257, 0, 451, 907,
	0, 0, 622, 0, 0, 905, 0, 0, 0, 0,
	363, 0, 330, 197, 225, 0, 0, 410, 459, 471,
	0, 0, 0, 958, 0, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 0, 0, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 959, 960, 256, 645, 804, 616, 220, 0, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	812, 813, 280, 307, 889, 888, 887, 306, 308, 885,
	886, 884, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 0, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 0, 0, 423,
	470, 240, 601, 494, 895, 917, 906, 772, 773, 896,
	897, 921, 898, 775, 776, 918, 919, 769, 770, 774,
	920, 922, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	909, 758, 757, 0, 764, 765, 0, 794, 795, 797,
	801, 802, 803, 814, 861, 862, 870, 872, 873, 871,
	874, 875, 876, 879, 880, 881, 882, 877, 878, 883,
	777, 781, 778, 779, 780, 792, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 793, 932, 933, 934,
	935, 936, 937, 807, 811, 810, 808, 809, 805, 806,
	833, 832, 834, 835, 836, 837, 838, 839, 841, 840,
	842, 843, 844, 845, 846, 847, 815, 816, 819, 820,
	818, 817, 821, 830, 831, 822, 823, 824, 825, 826,
	827, 829, 828, 848, 849, 850, 851, 852, 854, 853,
	857, 858, 856, 855, 860, 859, 756, 196, 221, 366,
	0, 452, 288, 643, 612, 482, 607, 206, 223, 923,
	262, 924, 0, 0, 928, 0, 0, 0, 930, 929,
	0, 931, 893, 892, 0, 0, 925, 926, 0, 927,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 938, 939, 940, 941, 942, 943,
	944, 945, 300, 595, 626, 593, 638, 620, 436, 376,
	0, 0, 379, 281, 305, 320, 0, 611, 500, 227,
	464, 290, 251, 963, 0, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 394,
	0, 374, 573, 574, 316, 0, 525, 0, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 204, 503, 0, 0, 755, 0, 0, 0, 270,
	760, 0, 0, 0, 364, 267, 0, 0, 428, 0,
	203, 0, 485, 252, 375, 372, 580, 282, 273, 269,
	250, 317, 383, 426, 515, 420, 767, 368, 0, 0,
	495, 399, 0, 0, 0, 0, 0, 762, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 411, 496, 286, 0, 95, 0, 0, 1012, 948,
	1079, 914, 952, 1013, 965, 966, 967, 953, 0, 238,
	954, 955, 245, 956, 0, 913, 798, 800, 799, 863,
	864, 865, 866, 867, 868, 869, 796, 961, 604, 968,
	969, 0, 265, 321, 272, 264, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 0, 766, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 749, 750, 0,
	0, 0, 0, 908, 0, 751, 0, 0, 759, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 400, 257, 0, 451, 907, 0,
	0, 622, 0, 0, 905, 0, 0, 0, 0, 363,
	0, 330, 197, 225, 0, 0, 410, 459, 471, 0,
	0, 0, 958, 0, 469, 424, 599, 233, 284, 456,
	430, 467, 438, 287, 0, 0, 468, 370, 582, 448,
	596, 623, 624, 263, 404, 609, 519, 617, 641, 226,
	260, 418, 504, 602, 492, 395, 578, 579, 329, 491,
	295, 201, 367, 629, 224, 477, 369, 242, 231, 584,
	606, 299, 289, 454, 636, 213, 514, 594, 239, 481,
	0, 0, 644, 247, 502, 215, 591, 501, 391, 326,
	327, 214, 0, 455, 268, 293, 0, 0, 258, 413,
	959, 960, 256, 645, 804, 616, 220, 0, 615, 406,
	581, 592, 392, 381, 219, 590, 390, 380, 334, 812,
	813, 280, 307, 889, 888, 887, 306, 308, 885, 886,
	884, 207, 603, 0, 208, 0, 497, 605, 646, 450,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 365, 417, 444, 440, 449, 0, 576, 597,
	610, 621, 627, 628, 630, 631, 632, 633, 634, 637,
	635, 405, 311, 493, 333, 371, 0, 0, 423, 470,
	240, 601, 494, 895, 917, 906, 772, 773, 896, 897,
	921, 898, 775, 776, 918, 919, 769, 770, 774, 920,
	922, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 642,
	505, 511, 506, 507, 508, 509, 510, 0, 512, 909,
	758, 757, 0, 764, 765, 0, 794, 795, 797, 801,
	802, 803, 814, 861, 862, 870, 872, 873, 871, 874,
	875, 876, 879, 880, 881, 882, 877, 878, 883, 777,
	781, 778, 779, 780, 792, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 793, 932, 933, 934, 935,
	936, 937, 807, 811, 810, 808, 809, 805, 806, 833,
	832, 834, 835, 836, 837, 838, 839, 841, 840, 842,
	843, 844, 845, 846, 847, 815, 816, 819, 820, 818,
	817, 821, 830, 831, 822, 823, 824, 825, 826, 827,
	829, 828, 848, 849, 850, 851, 852, 854, 853, 857,
	858, 856, 855, 860, 859, 756, 196, 221, 366, 0,
	452, 288, 643, 612, 482, 607, 206, 223, 923, 262,
	924, 0, 0, 928, 0, 0, 0, 930, 929, 0,
	931, 893, 892, 0, 0, 925, 926, 0, 927, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 407, 408, 409, 412, 415, 416, 419,
	421, 422, 425, 429, 433, 434, 435, 437, 439, 441,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 486,
	487, 488, 489, 490, 498, 499, 513, 583, 585, 600,
	619, 625, 478, 938, 939, 940, 941, 942, 943, 944,
	945, 300, 595, 626, 593, 638, 620, 436, 376, 0,
	0, 379, 281, 305, 320, 0, 611, 500, 227, 464,
	290, 251, 963, 0, 211, 246, 230, 259, 274, 277,
	324, 389, 398, 427, 432, 296, 271, 244, 457, 241,
	483, 516, 517, 518, 520, 393, 266, 431, 394, 0,
	374, 573, 574, 316, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	204, 503, 0, 0, 755, 0, 0, 0, 270, 760,
	0, 0, 0, 364, 267, 0, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 1079,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 204,
	503, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 364, 267, 0, 0, 428, 0, 203, 0,
	485, 252, 375, 372, 580, 282, 273, 269, 250, 317,
	383, 426, 515, 420, 0, 368, 0, 0, 495, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 411,
	496, 286, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 604, 0, 0, 0,
	265, 321, 272, 264, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 1130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 400, 257, 0, 451, 0, 0, 1129, 622,
	0, 0, 0, 0, 0, 1126, 1127, 363, 1087, 330,
	197, 225, 1120, 1124, 410, 459, 471, 0, 0, 0,
	253, 0, 469, 424, 599, 233, 284, 456, 430, 467,
	438, 287, 0, 0, 468, 370, 582, 448, 596, 623,
	624, 263, 404, 609, 519, 617, 641, 226, 260, 418,
	504, 602, 492, 395, 578, 579, 329, 491, 295, 201,
	367, 629, 224, 477, 369, 242, 231, 584, 606, 299,
	289, 454, 636, 213, 514, 594, 239, 481, 0, 0,
	644, 247, 502, 215, 591, 501, 391, 326, 327, 214,
	0, 455, 268, 293, 0, 0, 258, 413, 586, 587,
	256, 645, 228, 616, 220, 0, 615, 406, 581, 592,
	392, 381, 219, 590, 390, 380, 334, 353, 354, 280,
	307, 445, 373, 446, 306, 308, 402, 401, 403, 207,
	603, 0, 208, 0, 497, 605, 646, 450, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	365, 417, 444, 440, 449, 0, 576, 597, 610, 621,
	627, 628, 630, 631, 632, 633, 634, 637, 635, 405,
	311, 493, 333, 371, 0, 0, 423, 470, 240, 601,
	494, 199, 0, 0, 0, 0, 254, 255, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 642, 505, 511,
	506, 507, 508, 509, 510, 0, 512, 0, 0, 0,
	0, 0, 396, 0, 588, 589, 665, 382, 484, 598,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 249, 210, 388,
	397, 575, 312, 216, 217, 218, 521, 522, 523, 524,
	613, 614, 618, 205, 460, 461, 462, 463, 292, 608,
	309, 466, 465, 331, 332, 377, 447, 537, 539, 550,
	554, 556, 558, 564, 567, 538, 540, 551, 555, 557,
	559, 565, 568, 527, 529, 531, 533, 546, 545, 542,
	570, 571, 548, 553, 532, 544, 549, 562, 569, 566,
	526, 530, 534, 543, 561, 560, 541, 552, 563, 547,
	535, 528, 536, 0, 196, 221, 366, 0, 452, 288,
	643, 612, 482, 607, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 407, 408, 409, 412, 415, 416, 419, 421, 422,
	425, 429, 433, 434, 435, 437, 439, 441, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 486, 487, 488,
	489, 490, 498, 499, 513, 583, 585, 600, 619, 625,
	478, 301, 302, 442, 443, 314, 315, 639, 640, 300,
	595, 626, 593, 638, 620, 436, 376, 0, 0, 379,
	281, 305, 320, 0, 611, 500, 227, 464, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 389,
	398, 427, 432, 296, 271, 244, 457, 241, 483, 516,
	517, 518, 520, 393, 266, 431, 394, 0, 374, 573,
	574, 316, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 204, 503,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 364, 267, 0, 0, 428, 0, 203, 0, 485,
	252, 375, 372, 580, 282, 273, 269, 250, 317, 383,
	426, 515, 420, 0, 368, 0, 0, 495, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 411, 496,
	286, 0, 0, 0, 0, 1690, 948, 0, 0, 1687,
	0, 0, 0, 0, 1685, 0, 238, 1686, 1684, 245,
	1689, 0, 913, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 604, 0, 0, 0, 265,
	321, 272, 264, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 400, 257, 0, 451, 0, 0, 0, 622, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 197,
	225, 0, 0, 410, 459, 471, 0, 0, 0, 253,
	0, 469, 424, 599, 233, 284, 456, 430, 467, 438,
	287, 0, 0, 468, 370, 582, 448, 596, 623, 624,
	263, 404, 609, 519, 617, 641, 226, 260, 418, 504,
	602, 492, 395, 578, 579, 329, 491, 295, 201, 367,
	629, 224, 477, 369, 242, 231, 584, 606, 299, 289,
	454, 636, 213, 514, 594, 239, 481, 0, 0, 644,
	247, 502, 215, 591, 501, 391, 326, 327, 214, 0,
	455, 268, 293, 0, 0, 258, 413, 586, 587, 256,
	645, 228, 616, 220, 0, 615, 406, 581, 592, 392,
	381, 219, 590, 390, 380, 334, 353, 354, 280, 307,
	445, 373, 446, 306, 308, 402, 401, 403, 207, 603,
	0, 208, 0, 497, 605, 646, 450, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 365,
	417, 444, 440, 449, 0, 576, 597, 610, 621, 627,
	628, 630, 631, 632, 633, 634, 637, 635, 405, 311,
	493, 333, 371, 0, 0, 423, 470, 240, 601, 494,
	199, 0, 0, 0, 0, 254, 255, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 642, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 396, 0, 588, 589, 665, 382, 484, 598, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 249, 210, 388, 397,
	575, 312, 216, 217, 218, 521, 522, 523, 524, 613,
	614, 618, 205, 460, 461, 462, 463, 292, 608, 309,
	466, 465, 331, 332, 377, 447, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 196, 221, 366, 0, 452, 288, 643,
	612, 482, 607, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	407, 408, 409, 412, 415, 416, 419, 421, 422, 425,
	429, 433, 434, 435, 437, 439, 441, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 486, 487, 488, 489,
	490, 498, 499, 513, 583, 585, 600, 619, 625, 478,
	301, 302, 442, 443, 314, 315, 639, 640, 300, 595,
	626, 593, 638, 620, 436, 376, 0, 0, 379, 281,
	305, 320, 0, 611, 500, 227, 464, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 389, 398,
	427, 432, 296, 271, 244, 457, 241, 483, 516, 517,
	518, 520, 393, 266, 431, 394, 0, 374, 573, 574,
	316, 86, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 204, 503, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 428, 0, 203, 0, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 0, 368, 0, 0, 495, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 411, 496, 286,
	0, 95, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 604, 0, 0, 0, 265, 321,
	272, 264, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	400, 257, 0, 451, 0, 0, 0, 622, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 197, 225,
	0, 0, 410, 459, 471, 0, 0, 0, 253, 0,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	0, 0, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 586, 587, 256, 645,
	228, 616, 220, 0, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 353, 354, 280, 307, 445,
	373, 446, 306, 308, 402, 401, 403, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 0, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 0, 0, 423, 470, 240, 601, 494, 199,
	0, 0, 0, 0, 254, 255, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 0, 0, 0, 0, 0,
	396, 0, 588, 589, 665, 382, 484, 598, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 249, 210, 388, 397, 575,
	312, 216, 217, 218, 521, 522, 523, 524, 613, 614,
	618, 205, 460, 461, 462, 463, 292, 608, 309, 466,
	465, 331, 332, 377, 447, 537, 539, 550, 554, 556,
	558, 564, 567, 538, 540, 551, 555, 557, 559, 565,
	568, 527, 529, 531, 533, 546, 545, 542, 570, 571,
	548, 553, 532, 544, 549, 562, 569, 566, 526, 530,
	534, 543, 561, 560, 541, 552, 563, 547, 535, 528,
	536, 0, 196, 221, 366, 94, 452, 288, 643, 612,
	482, 607, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 2395, 0, 0, 2394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 301,
	302, 442, 443, 314, 315, 639, 640, 300, 595, 626,
	593, 638, 620, 436, 376, 0, 0, 379, 281, 305,
	320, 0, 611, 500, 227, 464, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 1752, 0, 374, 573, 574, 316,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 204, 503, 0, 1754,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 364,
	267, 0, 0, 428, 0, 203, 0, 485, 252, 375,
	372, 580, 282, 273, 269, 250, 317, 383, 426, 515,
	420, 0, 368, 0, 0, 495, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 411, 496, 286, 0,
	0, 0, 0, 1756, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 604, 0, 0, 0, 265, 321, 272,
	264, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 1461, 0, 1462, 1463, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 400,
	257, 0, 451, 0, 0, 0, 622, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 197, 225, 0,
	0, 410, 459, 471, 0, 0, 0, 253, 0, 469,
	424, 599, 233, 284, 456, 430, 467, 438, 287, 0,
	0, 468, 370, 582, 448, 596, 623, 624, 263, 404,
	609, 519, 617, 641, 226, 260, 418, 504, 602, 492,
	395, 578, 579, 329, 491, 295, 201, 367, 629, 224,
	477, 369, 242, 231, 584, 606, 299, 289, 454, 636,
	213, 514, 594, 239, 481, 0, 0, 644, 247, 502,
	215, 591, 501, 391, 326, 327, 214, 0, 455, 268,
	293, 0, 0, 258, 413, 586, 587, 256, 645, 228,
	616, 220, 0, 615, 406, 581, 592, 392, 381, 219,
	590, 390, 380, 334, 353, 354, 280, 307, 445, 373,
	446, 306, 308, 402, 401, 403, 207, 603, 0, 208,
	0, 497, 605, 646, 450, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 365, 417, 444,
	440, 449, 0, 576, 597, 610, 621, 627, 628, 630,
	631, 632, 633, 634, 637, 635, 405, 311, 493, 333,
	371, 0, 0, 423, 470, 240, 601, 494, 199, 0,
	0, 0, 0, 254, 255, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 642, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 396,
	0, 588, 589, 665, 382, 484, 598, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 249, 210, 388, 397, 575, 312,
	216, 217, 218, 521, 522, 523, 524, 613, 614, 618,
	205, 460, 461, 462, 463, 292, 608, 309, 466, 465,
	331, 332, 377, 447, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 196, 221, 366, 0, 452, 288, 643, 612, 482,
	607, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 407, 408,
	409, 412, 415, 416, 419, 421, 422, 425, 429, 433,
	434, 435, 437, 439, 441, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 486, 487, 488, 489, 490, 498,
	499, 513, 583, 585, 600, 619, 625, 478, 301, 302,
	442, 443, 314, 315, 639, 640, 300, 595, 626, 593,
	638, 620, 436, 376, 0, 0, 379, 281, 305, 320,
	0, 611, 500, 227, 464, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 389, 398, 427, 432,
	296, 271, 244, 457, 241, 483, 516, 517, 518, 520,
	393, 266, 431, 394, 0, 374, 573, 574, 316, 86,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 204, 503, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 364, 267,
	0, 0, 428, 0, 203, 0, 485, 252, 375, 372,
	580, 282, 273, 269, 250, 317, 383, 426, 515, 420,
	0, 368, 0, 0, 495, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 411, 496, 286, 0, 95,
	0, 1729, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 604, 0, 0, 0, 265, 321, 272, 264,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 400, 257,
	0, 451, 0, 0, 0, 622, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 197, 225, 0, 0,
	410, 459, 471, 0, 0, 0, 253, 0, 469, 424,
	599, 233, 284, 456, 430, 467, 438, 287, 0, 0,
	468, 370, 582, 448, 596, 623, 624, 263, 404, 609,
	519, 617, 641, 226, 260, 418, 504, 602, 492, 395,
	578, 579, 329, 491, 295, 201, 367, 629, 224, 477,
	369, 242, 231, 584, 606, 299, 289, 454, 636, 213,
	514, 594, 239, 481, 0, 0, 644, 247, 502, 215,
	591, 501, 391, 326, 327, 214, 0, 455, 268, 293,
	0, 0, 258, 413, 586, 587, 256, 645, 228, 616,
	220, 0, 615, 406, 581, 592, 392, 381, 219, 590,
	390, 380, 334, 353, 354, 280, 307, 445, 373, 446,
	306, 308, 402, 401, 403, 207, 603, 0, 208, 0,
	497, 605, 646, 450, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 365, 417, 444, 440,
	449, 0, 576, 597, 610, 621, 627, 628, 630, 631,
	632, 633, 634, 637, 635, 405, 311, 493, 333, 371,
	0, 0, 423, 470, 240, 601, 494, 199, 0, 0,
	0, 0, 254, 255, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 642, 505, 511, 506, 507, 508, 509,
	510, 0, 512, 0, 0, 0, 0, 0, 396, 0,
	588, 589, 665, 382, 484, 598, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 249, 210, 388, 397, 575, 312, 216,
	217, 218, 521, 522, 523, 524, 613, 614, 618, 205,
	460, 461, 462, 463, 292, 608, 309, 466, 465, 331,
	332, 377, 447, 537, 539, 550, 554, 556, 558, 564,
	567, 538, 540, 551, 555, 557, 559, 565, 568, 527,
	529, 531, 533, 546, 545, 542, 570, 571, 548, 553,
	532, 544, 549, 562, 569, 566, 526, 530, 534, 543,
	561, 560, 541, 552, 563, 547, 535, 528, 536, 0,
	196, 221, 366, 94, 452, 288, 643, 612, 482, 607,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 407, 408, 409,
	412, 415, 416, 419, 421, 422, 425, 429, 433, 434,
	435, 437, 439, 441, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 486, 487, 488, 489, 490, 498, 499,
	513, 583, 585, 600, 619, 625, 478, 301, 302, 442,
	443, 314, 315, 639, 640, 300, 595, 626, 593, 638,
	620, 436, 376, 0, 0, 379, 281, 305, 320, 0,
	611, 500, 227, 464, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 389, 398, 427, 432, 296,
	271, 244, 457, 241, 483, 516, 517, 518, 520, 393,
	266, 431, 394, 0, 374, 573, 574, 316, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 204, 503, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 364, 267, 0,
	0, 428, 0, 203, 0, 485, 252, 375, 372, 580,
	282, 273, 269, 250, 317, 383, 426, 515, 420, 0,
	368, 0, 0, 495, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 411, 496, 286, 0, 95, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 604, 0, 0, 0, 265, 321, 272, 264, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 400, 257, 0,
	451, 0, 0, 0, 622, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 197, 225, 0, 0, 410,
	459, 471, 0, 0, 0, 253, 0, 469, 424, 599,
	233, 284, 456, 430, 467, 438, 287, 0, 0, 468,
	370, 582, 448, 596, 623, 624, 263, 404, 609, 519,
	617, 641, 226, 260, 418, 504, 602, 492, 395, 578,
	579, 329, 491, 295, 201, 367, 629, 224, 477, 369,
	242, 231, 584, 606, 299, 289, 454, 636, 213, 514,
	594, 239, 481, 0, 0, 644, 247, 502, 215, 591,
	501, 391, 326, 327, 214, 0, 455, 268, 293, 0,
	0, 258, 413, 586, 587, 256, 645, 228, 616, 220,
	0, 615, 406, 581, 592, 392, 381, 219, 590, 390,
	380, 334, 353, 354, 280, 307, 445, 373, 446, 306,
	308, 402, 401, 403, 207, 603, 0, 208, 0, 497,
	605, 646, 450, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 365, 417, 444, 440, 449,
	0, 576, 597, 610, 621, 627, 628, 630, 631, 632,
	633, 634, 637, 635, 405, 311, 493, 333, 371, 0,
	0, 423, 470, 240, 601, 494, 199, 0, 0, 0,
	0, 254, 255, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 642, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 396, 0, 588,
	589, 665, 382, 484, 598, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 249, 210, 388, 397, 575, 312, 216, 217,
	218, 521, 522, 523, 524, 613, 614, 618, 205, 460,
	461, 462, 463, 292, 608, 309, 466, 465, 331, 332,
	377, 447, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 196,
	221, 366, 0, 452, 288, 643, 612, 482, 607, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 2395,
	0, 0, 2394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 407, 408, 409, 412,
	415, 416, 419, 421, 422, 425, 429, 433, 434, 435,
	437, 439, 441, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 486, 487, 488, 489, 490, 498, 499, 513,
	583, 585, 600, 619, 625, 478, 301, 302, 442, 443,
	314, 315, 639, 640, 300, 595, 626, 593, 638, 620,
	436, 376, 0, 0, 379, 281, 305, 320, 0, 611,
	500, 227, 464, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 389, 398, 427, 432, 296, 271,
	244, 457, 241, 483, 516, 517, 518, 520, 393, 266,
	431, 394, 0, 374, 573, 574, 316, 0, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 204, 503, 0, 2342, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 364, 267, 0, 0,
	428, 0, 203, 0, 485, 252, 375, 372, 580, 282,
	273, 269, 250, 317, 383, 426, 515, 420, 0, 368,
	0, 0, 495, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 411, 496, 286, 0, 0, 0, 0,
	1935, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	604, 0, 0, 0, 265, 321, 272, 264, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 400, 257, 0, 451,
	0, 0, 0, 622, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 197, 225, 0, 0, 410, 459,
	471, 0, 0, 0, 253, 0, 469, 424, 599, 233,
	284, 456, 430, 467, 438, 287, 0, 2340, 468, 370,
	582, 448, 596, 623, 624, 263, 404, 609, 519, 617,
	641, 226, 260, 418, 504, 602, 492, 395, 578, 579,
	329, 491, 295, 201, 367, 629, 224, 477, 369, 242,
	231, 584, 606, 299, 289, 454, 636, 213, 514, 594,
	239, 481, 0, 0, 644, 247, 502, 215, 591, 501,
	391, 326, 327, 214, 0, 455, 268, 293, 0, 0,
	258, 413, 586, 587, 256, 645, 228, 616, 220, 0,
	615, 406, 581, 592, 392, 381, 219, 590, 390, 380,
	334, 353, 354, 280, 307, 445, 373, 446, 306, 308,
	402, 401, 403, 207, 603, 0, 208, 0, 497, 605,
	646, 450, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 365, 417, 444, 440, 449, 0,
	576, 597, 610, 621, 627, 628, 630, 631, 632, 633,
	634, 637, 635, 405, 311, 493, 333, 371, 0, 0,
	423, 470, 240, 601, 494, 199, 0, 0, 0, 0,
	254, 255, 0, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 642, 505, 511, 506, 507, 508, 509, 510, 0,
	512, 0, 0, 0, 0, 0, 396, 0, 588, 589,
	665, 382, 484, 598, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 249, 210, 388, 397, 575, 312, 216, 217, 218,
	521, 522, 523, 524, 613, 614, 618, 205, 460, 461,
	462, 463, 292, 608, 309, 466, 465, 331, 332, 377,
	447, 537, 539, 550, 554, 556, 558, 564, 567, 538,
	540, 551, 555, 557, 559, 565, 568, 527, 529, 531,
	533, 546, 545, 542, 570, 571, 548, 553, 532, 544,
	549, 562, 569, 566, 526, 530, 534, 543, 561, 560,
	541, 552, 563, 547, 535, 528, 536, 0, 196, 221,
	366, 0, 452, 288, 643, 612, 482, 607, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 407, 408, 409, 412, 415,
	416, 419, 421, 422, 425, 429, 433, 434, 435, 437,
	439, 441, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 486, 487, 488, 489, 490, 498, 499, 513, 583,
	585, 600, 619, 625, 478, 301, 302, 442, 443, 314,
	315, 639, 640, 300, 595, 626, 593, 638, 620, 436,
	376, 0, 0, 379, 281, 305, 320, 0, 611, 500,
	227, 464, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 389, 398, 427, 432, 296, 271, 244,
	457, 241, 483, 516, 517, 518, 520, 393, 266, 431,
	394, 0, 374, 573, 574, 316, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 204, 503, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 364, 267, 0, 0, 428,
	0, 203, 0, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 0, 368, 0,
	0, 495, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 604,
	0, 0, 0, 265, 321, 272, 264, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 400, 257, 0, 451, 0,
	0, 0, 622, 0, 0, 0, 0, 0, 0, 0,
	363, 1087, 330, 197, 225, 1085, 0, 410, 459, 471,
	0, 0, 0, 253, 0, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 0, 0, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 0, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 0, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 0, 0, 423,
	470, 240, 601, 494, 199, 0, 0, 0, 0, 254,
	255, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 396, 0, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 196, 221, 366,
	0, 452, 288, 643, 612, 482, 607, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	0, 0, 379, 281, 305, 320, 0, 611, 500, 227,
	464, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 394,
	0, 374, 573, 574, 316, 0, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 204, 503, 0, 2342, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 364, 267, 0, 0, 428, 0,
	203, 0, 485, 252, 375, 372, 580, 282, 273, 269,
	250, 317, 383, 426, 515, 420, 0, 368, 0, 0,
	495, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 411, 496, 286, 0, 0, 0, 0, 1935, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 604, 0,
	0, 0, 265, 321, 272, 264, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 400, 257, 0, 451, 0, 0,
	0, 622, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 197, 225, 0, 0, 410, 459, 471, 0,
	0, 0, 253, 0, 469, 424, 599, 233, 284, 456,
	430, 467, 438, 287, 0, 0, 468, 370, 582, 448,
	596, 623, 624, 263, 404, 609, 519, 617, 641, 226,
	260, 418, 504, 602, 492, 395, 578, 579, 329, 491,
	295, 201, 367, 629, 224, 477, 369, 242, 231, 584,
	606, 299, 289, 454, 636, 213, 514, 594, 239, 481,
	0, 0, 644, 247, 502, 215, 591, 501, 391, 326,
	327, 214, 0, 455, 268, 293, 0, 0, 258, 413,
	586, 587, 256, 645, 228, 616, 220, 0, 615, 406,
	581, 592, 392, 381, 219, 590, 390, 380, 334, 353,
	354, 280, 307, 445, 373, 446, 306, 308, 402, 401,
	403, 207, 603, 0, 208, 0, 497, 605, 646, 450,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 365, 417, 444, 440, 449, 0, 576, 597,
	610, 621, 627, 628, 630, 631, 632, 633, 634, 637,
	635, 405, 311, 493, 333, 371, 0, 0, 423, 470,
	240, 601, 494, 199, 0, 0, 0, 0, 254, 255,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 642,
	505, 511, 506, 507, 508, 509, 510, 0, 512, 0,
	0, 0, 0, 0, 396, 0, 588, 589, 665, 382,
	484, 598, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 249,
	210, 388, 397, 575, 312, 216, 217, 218, 521, 522,
	523, 524, 613, 614, 618, 205, 460, 461, 462, 463,
	292, 608, 309, 466, 465, 331, 332, 377, 447, 537,
	539, 550, 554, 556, 558, 564, 567, 538, 540, 551,
	555, 557, 559, 565, 568, 527, 529, 531, 533, 546,
	545, 542, 570, 571, 548, 553, 532, 544, 549, 562,
	569, 566, 526, 530, 534, 543, 561, 560, 541, 552,
	563, 547, 535, 528, 536, 0, 196, 221, 366, 0,
	452, 288, 643, 612, 482, 607, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 407, 408, 409, 412, 415, 416, 419,
	421, 422, 425, 429, 433, 434, 435, 437, 439, 441,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 486,
	487, 488, 489, 490, 498, 499, 513, 583, 585, 600,
	619, 625, 478, 301, 302, 442, 443, 314, 315, 639,
	640, 300, 595, 626, 593, 638, 620, 436, 376, 0,
	0, 379, 281, 305, 320, 0, 611, 500, 227, 464,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 389, 398, 427, 432, 296, 271, 244, 457, 241,
	483, 516, 517, 518, 520, 393, 266, 431, 394, 0,
	374, 573, 574, 316, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	204, 503, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 364, 267, 0, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 1729, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 3685, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 204,
	503, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 364, 267, 0, 0, 428, 0, 203, 0,
	485, 252, 375, 372, 580, 282, 273, 269, 250, 317,
	383, 426, 515, 420, 0, 368, 0, 0, 495, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 411,
	496, 286, 0, 0, 0, 0, 2103, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 604, 0, 0, 0,
	265, 321, 272, 264, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 400, 257, 0, 451, 0, 0, 0, 622,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	197, 225, 0, 0, 410, 459, 471, 0, 0, 0,
	253, 0, 469, 424, 599, 233, 284, 456, 430, 467,
	438, 287, 0, 0, 468, 370, 582, 448, 596, 623,
	624, 263, 404, 609, 519, 617, 641, 226, 260, 418,
	504, 602, 492, 395, 578, 579, 329, 491, 295, 201,
	367, 629, 224, 477, 369, 242, 231, 584, 606, 299,
	289, 454, 636, 213, 514, 594, 239, 481, 0, 0,
	644, 247, 502, 215, 591, 501, 391, 326, 327, 214,
	0, 455, 268, 293, 0, 0, 258, 413, 586, 587,
	256, 645, 228, 616, 220, 0, 615, 406, 581, 592,
	392, 381, 219, 590, 390, 380, 334, 353, 354, 280,
	307, 445, 373, 446, 306, 308, 402, 401, 403, 207,
	603, 0, 208, 0, 497, 605, 646, 450, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	365, 417, 444, 440, 449, 0, 576, 597, 610, 621,
	627, 628, 630, 631, 632, 633, 634, 637, 635, 405,
	311, 493, 333, 371, 0, 0, 423, 470, 240, 601,
	494, 199, 0, 0, 0, 0, 254, 255, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 642, 505, 511,
	506, 507, 508, 509, 510, 0, 512, 0, 0, 0,
	0, 0, 396, 0, 588, 589, 665, 382, 484, 598,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 249, 210, 388,
	397, 575, 312, 216, 217, 218, 521, 522, 523, 524,
	613, 614, 618, 205, 460, 461, 462, 463, 292, 608,
	309, 466, 465, 331, 332, 377, 447, 537, 539, 550,
	554, 556, 558, 564, 567, 538, 540, 551, 555, 557,
	559, 565, 568, 527, 529, 531, 533, 546, 545, 542,
	570, 571, 548, 553, 532, 544, 549, 562, 569, 566,
	526, 530, 534, 543, 561, 560, 541, 552, 563, 547,
	535, 528, 536, 0, 196, 221, 366, 0, 452, 288,
	643, 612, 482, 607, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 407, 408, 409, 412, 415, 416, 419, 421, 422,
	425, 429, 433, 434, 435, 437, 439, 441, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 486, 487, 488,
	489, 490, 498, 499, 513, 583, 585, 600, 619, 625,
	478, 301, 302, 442, 443, 314, 315, 639, 640, 300,
	595, 626, 593, 638, 620, 436, 376, 0, 0, 379,
	281, 305, 320, 0, 611, 500, 227, 464, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 389,
	398, 427, 432, 296, 271, 244, 457, 241, 483, 516,
	517, 518, 520, 393, 266, 431, 394, 0, 374, 573,
	574, 316, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 204, 503,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 364, 267, 0, 0, 428, 0, 203, 0, 485,
	252, 375, 372, 580, 282, 273, 269, 250, 317, 383,
	426, 515, 420, 0, 368, 0, 0, 495, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 411, 496,
	286, 0, 0, 0, 0, 2840, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 604, 0, 0, 0, 265,
	321, 272, 264, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 400, 257, 0, 451, 0, 0, 0, 622, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 197,
	225, 0, 0, 410, 459, 471, 0, 0, 0, 253,
	0, 469, 424, 599, 233, 284, 456, 430, 467, 438,
	287, 0, 0, 468, 370, 582, 448, 596, 623, 624,
	263, 404, 609, 519, 617, 641, 226, 260, 418, 504,
	602, 492, 395, 578, 579, 329, 491, 295, 201, 367,
	629, 224, 477, 369, 242, 231, 584, 606, 299, 289,
	454, 636, 213, 514, 594, 239, 481, 0, 0, 644,
	247, 502, 215, 591, 501, 391, 326, 327, 214, 0,
	455, 268, 293, 0, 0, 258, 413, 586, 587, 256,
	645, 228, 616, 220, 0, 615, 406, 581, 592, 392,
	381, 219, 590, 390, 380, 334, 353, 354, 280, 307,
	445, 373, 446, 306, 308, 402, 401, 403, 207, 603,
	0, 208, 0, 497, 605, 646, 450, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 365,
	417, 444, 440, 449, 0, 576, 597, 610, 621, 627,
	628, 630, 631, 632, 633, 634, 637, 635, 405, 311,
	493, 333, 371, 0, 0, 423, 470, 240, 601, 494,
	199, 0, 0, 0, 0, 254, 255, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 642, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 396, 0, 588, 589, 665, 382, 484, 598, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 249, 210, 388, 397,
	575, 312, 216, 217, 218, 521, 522, 523, 524, 613,
	614, 618, 205, 460, 461, 462, 463, 292, 608, 309,
	466, 465, 331, 332, 377, 447, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 196, 221, 366, 0, 452, 288, 643,
	612, 482, 607, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	407, 408, 409, 412, 415, 416, 419, 421, 422, 425,
	429, 433, 434, 435, 437, 439, 441, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 486, 487, 488, 489,
	490, 498, 499, 513, 583, 585, 600, 619, 625, 478,
	301, 302, 442, 443, 314, 315, 639, 640, 300, 595,
	626, 593, 638, 620, 436, 376, 0, 0, 379, 281,
	305, 320, 0, 611, 500, 227, 464, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 389, 398,
	427, 432, 296, 271, 244, 457, 241, 483, 516, 517,
	518, 520, 393, 266, 431, 394, 0, 374, 573, 574,
	316, 0, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 204, 503, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 428, 0, 203, 0, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 0, 368, 0, 0, 495, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 411, 496, 286,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	2825, 0, 0, 0, 0, 238, 0, 0, 245, 2826,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 604, 0, 0, 0, 265, 321,
	272, 264, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	400, 257, 0, 451, 0, 0, 0, 622, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 197, 225,
	0, 0, 410, 459, 471, 0, 0, 0, 253, 0,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	0, 0, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 586, 587, 256, 645,
	228, 616, 220, 0, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 353, 354, 280, 307, 445,
	373, 446, 306, 308, 402, 401, 403, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 0, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 0, 0, 423, 470, 240, 601, 494, 199,
	0, 0, 0, 0, 254, 255, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 0, 0, 0, 0, 0,
	396, 0, 588, 589, 665, 382, 484, 598, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 249, 210, 388, 397, 575,
	312, 216, 217, 218, 521, 522, 523, 524, 613, 614,
	618, 205, 460, 461, 462, 463, 292, 608, 309, 466,
	465, 331, 332, 377, 447, 537, 539, 550, 554, 556,
	558, 564, 567, 538, 540, 551, 555, 557, 559, 565,
	568, 527, 529, 531, 533, 546, 545, 542, 570, 571,
	548, 553, 532, 544, 549, 562, 569, 566, 526, 530,
	534, 543, 561, 560, 541, 552, 563, 547, 535, 528,
	536, 0, 196, 221, 366, 0, 452, 288, 643, 612,
	482, 607, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 301,
	302, 442, 443, 314, 315, 639, 640, 300, 595, 626,
	593, 638, 620, 436, 376, 0, 0, 379, 281, 305,
	320, 0, 611, 500, 227, 464, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 394, 0, 374, 573, 574, 316,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 204, 503, 0, 0,
	0, 0, 0, 0, 270, 1775, 0, 0, 0, 364,
	267, 0, 0, 428, 0, 203, 0, 485, 252, 375,
	372, 580, 282, 273, 269, 250, 317, 383, 426, 515,
	420, 0, 368, 0, 0, 495, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 411, 496, 286, 0,
	0, 0, 0, 1774, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 604, 0, 0, 0, 265, 321, 272,
	264, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 400,
	257, 0, 451, 0, 0, 0, 622, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 197, 225, 0,
	0, 410, 459, 471, 0, 0, 0, 253, 0, 469,
	424, 599, 233, 284, 456, 430, 467, 438, 287, 0,
	0, 468, 370, 582, 448, 596, 623, 624, 263, 404,
	609, 519, 617, 641, 226, 260, 418, 504, 602, 492,
	395, 578, 579, 329, 491, 295, 201, 367, 629, 224,
	477, 369, 242, 231, 584, 606, 299, 289, 454, 636,
	213, 514, 594, 239, 481, 0, 0, 644, 247, 502,
	215, 591, 501, 391, 326, 327, 214, 0, 455, 268,
	293, 0, 0, 258, 413, 586, 587, 256, 645, 228,
	616, 220, 0, 615, 406, 581, 592, 392, 381, 219,
	590, 390, 380, 334, 353, 354, 280, 307, 445, 373,
	446, 306, 308, 402, 401, 403, 207, 603, 0, 208,
	0, 497, 605, 646, 450, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 365, 417, 444,
	440, 449, 0, 576, 597, 610, 621, 627, 628, 630,
	631, 632, 633, 634, 637, 635, 405, 311, 493, 333,
	371, 0, 0, 423, 470, 240, 601, 494, 199, 0,
	0, 0, 0, 254, 255, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 642, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 396,
	0, 588, 589, 665, 382, 484, 598, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 249, 210, 388, 397, 575, 312,
	216, 217, 218, 521, 522, 523, 524, 613, 614, 618,
	205, 460, 461, 462, 463, 292, 608, 309, 466, 465,
	331, 332, 377, 447, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 196, 221, 366, 0, 452, 288, 643, 612, 482,
	607, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 407, 408,
	409, 412, 415, 416, 419, 421, 422, 425, 429, 433,
	434, 435, 437, 439, 441, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 486, 487, 488, 489, 490, 498,
	499, 513, 583, 585, 600, 619, 625, 478, 301, 302,
	442, 443, 314, 315, 639, 640, 300, 595, 626, 593,
	638, 620, 436, 376, 0, 0, 379, 281, 305, 320,
	0, 611, 500, 227, 464, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 389, 398, 427, 432,
	296, 271, 244, 457, 241, 483, 516, 517, 518, 520,
	393, 266, 431, 394, 0, 374, 573, 574, 316, 0,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 204, 503, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 364, 267,
	0, 0, 428, 0, 203, 0, 485, 252, 375, 372,
	580, 282, 273, 269, 250, 317, 383, 426, 515, 420,
	0, 368, 0, 0, 495, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 411, 496, 286, 0, 0,
	0, 0, 0, 717, 718, 719, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 604, 0, 0, 0, 265, 321, 272, 264,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 400, 257,
	0, 451, 0, 0, 0, 622, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 197, 225, 0, 0,
	410, 459, 471, 0, 0, 0, 253, 0, 469, 424,
	599, 233, 284, 456, 430, 467, 438, 287, 0, 0,
	468, 370, 582, 448, 596, 623, 624, 263, 404, 609,
	519, 617, 641, 226, 260, 418, 504, 602, 492, 395,
	578, 579, 329, 491, 295, 201, 367, 629, 224, 477,
	369, 242, 231, 584, 606, 299, 289, 454, 636, 213,
	514, 594, 239, 481, 0, 0, 644, 247, 502, 215,
	591, 501, 391, 326, 327, 214, 0, 455, 268, 293,
	0, 0, 258, 413, 586, 587, 256, 645, 228, 616,
	220, 0, 615, 406, 581, 592, 392, 381, 219, 590,
	390, 380, 334, 353, 354, 280, 307, 445, 373, 446,
	306, 308, 402, 401, 403, 207, 603, 0, 208, 0,
	497, 605, 646, 450, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 365, 417, 444, 440,
	449, 0, 576, 597, 610, 621, 627, 628, 630, 631,
	632, 633, 634, 637, 635, 405, 311, 493, 333, 371,
	0, 0, 423, 470, 240, 601, 494, 199, 0, 0,
	0, 0, 254, 255, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 642, 505, 511, 506, 507, 508, 509,
	510, 0, 512, 0, 0, 0, 0, 0, 396, 0,
	588, 589, 665, 382, 484, 598, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 249, 210, 388, 397, 575, 312, 216,
	217, 218, 521, 522, 523, 524, 613, 614, 618, 205,
	460, 461, 462, 463, 292, 608, 309, 466, 465, 331,
	332, 377, 447, 537, 539, 550, 554, 556, 558, 564,
	567, 538, 540, 551, 555, 557, 559, 565, 568, 527,
	529, 531, 533, 546, 545, 542, 570, 571, 548, 553,
	532, 544, 549, 562, 569, 566, 526, 530, 534, 543,
	561, 560, 541, 552, 563, 547, 535, 528, 536, 0,
	196, 221, 366, 0, 452, 288, 643, 612, 482, 607,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 407, 408, 409,
	412, 415, 416, 419, 421, 422, 425, 429, 433, 434,
	435, 437, 439, 441, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 486, 487, 488, 489, 490, 498, 499,
	513, 583, 585, 600, 619, 625, 478, 301, 302, 442,
	443, 314, 315, 639, 640, 300, 595, 626, 593, 638,
	620, 436, 376, 0, 0, 379, 281, 305, 320, 0,
	611, 500, 227, 464, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 389, 398, 427, 432, 296,
	271, 244, 457, 241, 483, 516, 517, 518, 520, 393,
	266, 431, 394, 0, 374, 573, 574, 316, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 204, 503, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 364, 267, 0,
	0, 428, 0, 203, 0, 485, 252, 375, 372, 580,
	282, 273, 269, 250, 317, 383, 426, 515, 420, 0,
	368, 0, 0, 495, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 411, 496, 286, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 604, 0, 0, 0, 265, 321, 272, 264, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 400, 257, 0,
	451, 0, 0, 0, 622, 0, 0, 0, 4027, 0,
	0, 0, 363, 0, 330, 197, 225, 0, 0, 410,
	459, 471, 0, 0, 0, 253, 0, 469, 424, 599,
	233, 284, 456, 430, 467, 438, 287, 0, 0, 468,
	370, 582, 448, 596, 623, 624, 263, 404, 609, 519,
	617, 641, 226, 260, 418, 504, 602, 492, 395, 578,
	579, 329, 491, 295, 201, 367, 629, 224, 477, 369,
	242, 231, 584, 606, 299, 289, 454, 636, 213, 514,
	594, 239, 481, 0, 0, 644, 247, 502, 215, 591,
	501, 391, 326, 327, 214, 0, 455, 268, 293, 0,
	0, 258, 413, 586, 587, 256, 645, 228, 616, 220,
	0, 615, 406, 581, 592, 392, 381, 219, 590, 390,
	380, 334, 353, 354, 280, 307, 445, 373, 446, 306,
	308, 402, 401, 403, 207, 603, 0, 208, 0, 497,
	605, 646, 450, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 365, 417, 444, 440, 449,
	0, 576, 597, 610, 621, 627, 628, 630, 631, 632,
	633, 634, 637, 635, 405, 311, 493, 333, 371, 0,
	0, 423, 470, 240, 601, 494, 199, 0, 0, 0,
	0, 254, 255, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 642, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 396, 0, 588,
	589, 665, 382, 484, 598, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 249, 210, 388, 397, 575, 312, 216, 217,
	218, 521, 522, 523, 524, 613, 614, 618, 205, 460,
	461, 462, 463, 292, 608, 309, 466, 465, 331, 332,
	377, 447, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 196,
	221, 366, 0, 452, 288, 643, 612, 482, 607, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 407, 408, 409, 412,
	415, 416, 419, 421, 422, 425, 429, 433, 434, 435,
	437, 439, 441, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 486, 487, 488, 489, 490, 498, 499, 513,
	583, 585, 600, 619, 625, 478, 301, 302, 442, 443,
	314, 315, 639, 640, 300, 595, 626, 593, 638, 620,
	436, 376, 0, 0, 379, 281, 305, 320, 0, 611,
	500, 227, 464, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 389, 398, 427, 432, 296, 271,
	244, 457, 241, 483, 516, 517, 518, 520, 393, 266,
	431, 394, 0, 374, 573, 574, 316, 0, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 204, 503, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 364, 267, 0, 0,
	428, 0, 203, 0, 485, 252, 375, 372, 580, 282,
	273, 269, 250, 317, 383, 426, 515, 420, 0, 368,
	0, 0, 495, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 411, 496, 286, 0, 0, 0, 0,
	1935, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	604, 0, 0, 0, 265, 321, 272, 264, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 400, 257, 0, 451,
	0, 0, 0, 622, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 197, 225, 0, 0, 410, 459,
	471, 0, 0, 0, 253, 0, 469, 424, 599, 233,
	284, 456, 430, 467, 438, 287, 0, 0, 468, 370,
	582, 448, 596, 623, 624, 263, 404, 609, 519, 617,
	641, 226, 260, 418, 504, 602, 492, 395, 578, 579,
	329, 491, 295, 201, 367, 629, 224, 477, 369, 242,
	231, 584, 606, 299, 289, 454, 636, 213, 514, 594,
	239, 481, 0, 0, 644, 247, 502, 215, 591, 501,
	391, 326, 327, 214, 0, 455, 268, 293, 0, 0,
	258, 413, 586, 587, 256, 645, 228, 616, 220, 0,
	615, 406, 581, 592, 392, 381, 219, 590, 390, 380,
	334, 353, 354, 280, 307, 445, 373, 446, 306, 308,
	402, 401, 403, 207, 603, 0, 208, 0, 497, 605,
	646, 450, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 365, 417, 444, 440, 449, 0,
	576, 597, 610, 621, 627, 628, 630, 631, 632, 633,
	634, 637, 635, 405, 311, 493, 333, 371, 0, 0,
	423, 470, 240, 601, 494, 199, 0, 0, 0, 0,
	254, 255, 0, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 642, 505, 511, 506, 507, 508, 509, 510, 0,
	512, 0, 0, 0, 0, 0, 396, 0, 588, 589,
	665, 382, 484, 598, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 249, 210, 388, 397, 575, 312, 216, 217, 218,
	521, 522, 523, 524, 613, 614, 618, 205, 460, 461,
	462, 463, 292, 608, 309, 466, 465, 331, 332, 377,
	447, 537, 539, 550, 554, 556, 558, 564, 567, 538,
	540, 551, 555, 557, 559, 565, 568, 527, 529, 531,
	533, 546, 545, 542, 570, 571, 548, 553, 532, 544,
	549, 562, 569, 566, 526, 530, 534, 543, 561, 560,
	541, 552, 563, 547, 535, 528, 536, 0, 196, 221,
	366, 0, 452, 288, 643, 612, 482, 607, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 407, 408, 409, 412, 415,
	416, 419, 421, 422, 425, 429, 433, 434, 435, 437,
	439, 441, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 486, 487, 488, 489, 490, 498, 499, 513, 583,
	585, 600, 619, 625, 478, 301, 302, 442, 443, 314,
	315, 639, 640, 300, 595, 626, 593, 638, 620, 436,
	376, 0, 0, 379, 281, 305, 320, 0, 611, 500,
	227, 464, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 389, 398, 427, 432, 296, 271, 244,
	457, 241, 483, 516, 517, 518, 520, 393, 266, 431,
	394, 0, 374, 573, 574, 316, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 204, 503, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 364, 267, 0, 0, 428,
	0, 203, 0, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 0, 368, 0,
	0, 495, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 604,
	0, 0, 0, 265, 321, 272, 264, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 400, 257, 0, 451, 0,
	0, 0, 622, 0, 0, 0, 3685, 0, 0, 0,
	363, 0, 330, 197, 225, 0, 0, 410, 459, 471,
	0, 0, 0, 253, 0, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 0, 0, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 0, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 0, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 0, 0, 423,
	470, 240, 601, 494, 199, 0, 0, 0, 0, 254,
	255, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 396, 0, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 196, 221, 366,
	0, 452, 288, 643, 612, 482, 607, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	0, 0, 379, 281, 305, 320, 0, 611, 500, 227,
	464, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 394,
	0, 374, 573, 574, 316, 0, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 204, 503, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 364, 267, 0, 0, 428, 0,
	203, 0, 485, 252, 375, 372, 580, 282, 273, 269,
	250, 317, 383, 426, 515, 420, 0, 368, 0, 0,
	495, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 411, 496, 286, 0, 95, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 604, 0,
	0, 0, 265, 321, 272, 264, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 400, 257, 0, 451, 0, 0,
	0, 622, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 197, 225, 0, 0, 410, 459, 471, 0,
	0, 0, 253, 0, 469, 424, 599, 233, 284, 456,
	430, 467, 438, 287, 0, 0, 468, 370, 582, 448,
	596, 623, 624, 263, 404, 609, 519, 617, 641, 226,
	260, 418, 504, 602, 492, 395, 578, 579, 329, 491,
	295, 201, 367, 629, 224, 477, 369, 242, 231, 584,
	606, 299, 289, 454, 636, 213, 514, 594, 239, 481,
	0, 0, 644, 247, 502, 215, 591, 501, 391, 326,
	327, 214, 0, 455, 268, 293, 0, 0, 258, 413,
	586, 587, 256, 645, 228, 616, 220, 0, 615, 406,
	581, 592, 392, 381, 219, 590, 390, 380, 334, 353,
	354, 280, 307, 445, 373, 446, 306, 308, 402, 401,
	403, 207, 603, 0, 208, 0, 497, 605, 646, 450,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 365, 417, 444, 440, 449, 0, 576, 597,
	610, 621, 627, 628, 630, 631, 632, 633, 634, 637,
	635, 405, 311, 493, 333, 371, 0, 0, 423, 470,
	240, 601, 494, 199, 0, 0, 0, 0, 254, 255,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 642,
	505, 511, 506, 507, 508, 509, 510, 0, 512, 0,
	0, 0, 0, 0, 396, 0, 588, 589, 665, 382,
	484, 598, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 249,
	210, 388, 397, 575, 312, 216, 217, 218, 521, 522,
	523, 524, 613, 614, 618, 205, 460, 461, 462, 463,
	292, 608, 309, 466, 465, 331, 332, 377, 447, 537,
	539, 550, 554, 556, 558, 564, 567, 538, 540, 551,
	555, 557, 559, 565, 568, 527, 529, 531, 533, 546,
	545, 542, 570, 571, 548, 553, 532, 544, 549, 562,
	569, 566, 526, 530, 534, 543, 561, 560, 541, 552,
	563, 547, 535, 528, 536, 0, 196, 221, 366, 0,
	452, 288, 643, 612, 482, 607, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 407, 408, 409, 412, 415, 416, 419,
	421, 422, 425, 429, 433, 434, 435, 437, 439, 441,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 486,
	487, 488, 489, 490, 498, 499, 513, 583, 585, 600,
	619, 625, 478, 301, 302, 442, 443, 314, 315, 639,
	640, 300, 595, 626, 593, 638, 620, 436, 376, 0,
	0, 379, 281, 305, 320, 0, 611, 500, 227, 464,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 389, 398, 427, 432, 296, 271, 244, 457, 241,
	483, 516, 517, 518, 520, 393, 266, 431, 394, 0,
	374, 573, 574, 316, 0, 525, 0, 0, 0, 0,
	2396, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	204, 503, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 364, 267, 0, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 204,
	503, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 364, 267, 0, 0, 428, 0, 203, 0,
	485, 252, 375, 372, 580, 282, 273, 269, 250, 317,
	383, 426, 515, 420, 0, 368, 0, 0, 495, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 411,
	496, 286, 0, 0, 0, 0, 1756, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 604, 0, 0, 0,
	265, 321, 272, 264, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 400, 257, 0, 451, 0, 0, 0, 622,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	197, 225, 0, 0, 410, 459, 471, 0, 0, 0,
	253, 0, 469, 424, 599, 233, 284, 456, 430, 467,
	438, 287, 0, 0, 468, 370, 582, 448, 596, 623,
	624, 263, 404, 609, 519, 617, 641, 226, 260, 418,
	504, 602, 492, 395, 578, 579, 329, 491, 295, 201,
	367, 629, 224, 477, 369, 242, 231, 584, 606, 299,
	289, 454, 636, 213, 514, 594, 239, 481, 0, 0,
	644, 247, 502, 215, 591, 501, 391, 326, 327, 214,
	0, 455, 268, 293, 0, 0, 258, 413, 586, 587,
	256, 645, 228, 616, 220, 0, 615, 406, 581, 592,
	392, 381, 219, 590, 390, 380, 334, 353, 354, 280,
	307, 445, 373, 446, 306, 308, 402, 401, 403, 207,
	603, 0, 208, 0, 497, 605, 646, 450, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	365, 417, 444, 440, 449, 0, 576, 597, 610, 621,
	627, 628, 630, 631, 632, 633, 634, 637, 635, 405,
	311, 493, 333, 371, 0, 0, 423, 470, 240, 601,
	494, 199, 0, 0, 0, 0, 254, 255, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 642, 505, 511,
	506, 507, 508, 509, 510, 0, 512, 0, 0, 0,
	0, 0, 396, 0, 588, 589, 665, 382, 484, 598,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 249, 210, 388,
	397, 575, 312, 216, 217, 218, 521, 522, 523, 524,
	613, 614, 618, 205, 460, 461, 462, 463, 292, 608,
	309, 466, 465, 331, 332, 377, 447, 537, 539, 550,
	554, 556, 558, 564, 567, 538, 540, 551, 555, 557,
	559, 565, 568, 527, 529, 531, 533, 546, 545, 542,
	570, 571, 548, 553, 532, 544, 549, 562, 569, 566,
	526, 530, 534, 543, 561, 560, 541, 552, 563, 547,
	535, 528, 536, 0, 196, 221, 366, 0, 452, 288,
	643, 612, 482, 607, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 407, 408, 409, 412, 415, 416, 419, 421, 422,
	425, 429, 433, 434, 435, 437, 439, 441, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 486, 487, 488,
	489, 490, 498, 499, 513, 583, 585, 600, 619, 625,
	478, 301, 302, 442, 443, 314, 315, 639, 640, 300,
	595, 626, 593, 638, 620, 436, 376, 0, 0, 379,
	281, 305, 320, 0, 611, 500, 227, 464, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 389,
	398, 427, 432, 296, 271, 244, 457, 241, 483, 516,
	517, 518, 520, 393, 266, 431, 394, 0, 374, 573,
	574, 316, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 204, 503,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 364, 267, 0, 0, 428, 0, 203, 0, 485,
	252, 375, 372, 580, 282, 273, 269, 250, 317, 383,
	426, 515, 420, 0, 368, 0, 0, 495, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 411, 496,
	286, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 604, 0, 0, 0, 265,
	321, 272, 264, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 400, 257, 0, 451, 0, 0, 0, 622, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 197,
	225, 0, 0, 410, 459, 471, 0, 0, 0, 253,
	0, 469, 424, 599, 233, 284, 456, 430, 467, 438,
	287, 0, 0, 468, 370, 582, 448, 596, 623, 624,
	263, 404, 609, 519, 617, 641, 226, 260, 418, 504,
	602, 492, 395, 578, 579, 329, 491, 295, 201, 367,
	629, 224, 477, 369, 242, 231, 584, 606, 299, 289,
	454, 636, 213, 514, 594, 239, 481, 0, 0, 644,
	247, 502, 215, 591, 501, 391, 326, 327, 214, 0,
	455, 268, 293, 0, 0, 258, 413, 586, 587, 256,
	645, 228, 616, 220, 0, 615, 406, 581, 592, 392,
	381, 219, 590, 390, 380, 334, 353, 354, 280, 307,
	445, 373, 446, 306, 308, 402, 401, 403, 207, 603,
	0, 208, 0, 497, 605, 646, 450, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 365,
	417, 444, 440, 449, 0, 576, 597, 610, 621, 627,
	628, 630, 631, 632, 633, 634, 637, 635, 405, 311,
	493, 333, 371, 0, 0, 423, 470, 240, 601, 494,
	199, 0, 0, 0, 0, 254, 255, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 642, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 396, 0, 588, 589, 665, 382, 484, 598, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 249, 210, 388, 397,
	575, 312, 216, 217, 218, 521, 522, 523, 524, 613,
	614, 618, 205, 460, 461, 462, 463, 292, 608, 309,
	466, 465, 331, 332, 377, 447, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 196, 221, 366, 2049, 452, 288, 643,
	612, 482, 607, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	407, 408, 409, 412, 415, 416, 419, 421, 422, 425,
	429, 433, 434, 435, 437, 439, 441, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 486, 487, 488, 489,
	490, 498, 499, 513, 583, 585, 600, 619, 625, 478,
	301, 302, 442, 443, 314, 315, 639, 640, 300, 595,
	626, 593, 638, 620, 436, 376, 0, 0, 379, 281,
	305, 320, 0, 611, 500, 227, 464, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 389, 398,
	427, 432, 296, 271, 244, 457, 241, 483, 516, 517,
	518, 520, 393, 266, 431, 394, 0, 374, 573, 574,
	316, 0, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 204, 503, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 428, 0, 203, 0, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 0, 368, 0, 0, 495, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 411, 496, 286,
	0, 0, 0, 0, 2040, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 604, 0, 0, 0, 265, 321,
	272, 264, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	400, 257, 0, 451, 0, 0, 0, 622, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 197, 225,
	0, 0, 410, 459, 471, 0, 0, 0, 253, 0,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	0, 0, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 586, 587, 256, 645,
	228, 616, 220, 0, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 353, 354, 280, 307, 445,
	373, 446, 306, 308, 402, 401, 403, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 0, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 0, 0, 423, 470, 240, 601, 494, 199,
	0, 0, 0, 0, 254, 255, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 0, 0, 0, 0, 0,
	396, 0, 588, 589, 665, 382, 484, 598, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 249, 210, 388, 397, 575,
	312, 216, 217, 218, 521, 522, 523, 524, 613, 614,
	618, 205, 460, 461, 462, 463, 292, 608, 309, 466,
	465, 331, 332, 377, 447, 537, 539, 550, 554, 556,
	558, 564, 567, 538, 540, 551, 555, 557, 559, 565,
	568, 527, 529, 531, 533, 546, 545, 542, 570, 571,
	548, 553, 532, 544, 549, 562, 569, 566, 526, 530,
	534, 543, 561, 560, 541, 552, 563, 547, 535, 528,
	536, 0, 196, 221, 366, 0, 452, 288, 643, 612,
	482, 607, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 301,
	302, 442, 443, 314, 315, 639, 640, 300, 595, 626,
	593, 638, 620, 436, 376, 0, 0, 379, 281, 305,
	320, 0, 611, 500, 227, 464, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 394, 0, 374, 573, 574, 316,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 1902, 204, 503, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 364,
	267, 0, 0, 428, 0, 203, 0, 485, 252, 375,
	372, 580, 282, 273, 269, 250, 317, 383, 426, 515,
	420, 0, 368, 0, 0, 495, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 411, 496, 286, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 604, 0, 0, 0, 265, 321, 272,
	264, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 400,
	257, 0, 451, 0, 0, 0, 622, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 197, 225, 0,
	0, 410, 459, 471, 0, 0, 0, 253, 0, 469,
	424, 599, 233, 284, 456, 430, 467, 438, 287, 0,
	0, 468, 370, 582, 448, 596, 623, 624, 263, 404,
	609, 519, 617, 641, 226, 260, 418, 504, 602, 492,
	395, 578, 579, 329, 491, 295, 201, 367, 629, 224,
	477, 369, 242, 231, 584, 606, 299, 289, 454, 636,
	213, 514, 594, 239, 481, 0, 0, 644, 247, 502,
	215, 591, 501, 391, 326, 327, 214, 0, 455, 268,
	293, 0, 0, 258, 413, 586, 587, 256, 645, 228,
	616, 220, 0, 615, 406, 581, 592, 392, 381, 219,
	590, 390, 380, 334, 353, 354, 280, 307, 445, 373,
	446, 306, 308, 402, 401, 403, 207, 603, 0, 208,
	0, 497, 605, 646, 450, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 365, 417, 444,
	440, 449, 0, 576, 597, 610, 621, 627, 628, 630,
	631, 632, 633, 634, 637, 635, 405, 311, 493, 333,
	371, 0, 0, 423, 470, 240, 601, 494, 199, 0,
	0, 0, 0, 254, 255, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 642, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 396,
	0, 588, 589, 665, 382, 484, 598, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 249, 210, 388, 397, 575, 312,
	216, 217, 218, 521, 522, 523, 524, 613, 614, 618,
	205, 460, 461, 462, 463, 292, 608, 309, 466, 465,
	331, 332, 377, 447, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 196, 221, 366, 0, 452, 288, 643, 612, 482,
	607, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 407, 408,
	409, 412, 415, 416, 419, 421, 422, 425, 429, 433,
	434, 435, 437, 439, 441, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 486, 487, 488, 489, 490, 498,
	499, 513, 583, 585, 600, 619, 625, 478, 301, 302,
	442, 443, 314, 315, 639, 640, 300, 595, 626, 593,
	638, 620, 436, 376, 0, 0, 379, 281, 305, 320,
	0, 611, 500, 227, 464, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 389, 398, 427, 432,
	296, 271, 244, 457, 241, 483, 516, 517, 518, 520,
	393, 266, 431, 394, 0, 374, 573, 574, 316, 0,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 1900, 204, 503, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 364, 267,
	0, 0, 428, 0, 203, 0, 485, 252, 375, 372,
	580, 282, 273, 269, 250, 317, 383, 426, 515, 420,
	0, 368, 0, 0, 495, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 411, 496, 286, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 604, 0, 0, 0, 265, 321, 272, 264,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 400, 257,
	0, 451, 0, 0, 0, 622, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 197, 225, 0, 0,
	410, 459, 471, 0, 0, 0, 253, 0, 469, 424,
	599, 233, 284, 456, 430, 467, 438, 287, 0, 0,
	468, 370, 582, 448, 596, 623, 624, 263, 404, 609,
	519, 617, 641, 226, 260, 418, 504, 602, 492, 395,
	578, 579, 329, 491, 295, 201, 367, 629, 224, 477,
	369, 242, 231, 584, 606, 299, 289, 454, 636, 213,
	514, 594, 239, 481, 0, 0, 644, 247, 502, 215,
	591, 501, 391, 326, 327, 214, 0, 455, 268, 293,
	0, 0, 258, 413, 586, 587, 256, 645, 228, 616,
	220, 0, 615, 406, 581, 592, 392, 381, 219, 590,
	390, 380, 334, 353, 354, 280, 307, 445, 373, 446,
	306, 308, 402, 401, 403, 207, 603, 0, 208, 0,
	497, 605, 646, 450, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 365, 417, 444, 440,
	449, 0, 576, 597, 610, 621, 627, 628, 630, 631,
	632, 633, 634, 637, 635, 405, 311, 493, 333, 371,
	0, 0, 423, 470, 240, 601, 494, 199, 0, 0,
	0, 0, 254, 255, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 642, 505, 511, 506, 507, 508, 509,
	510, 0, 512, 0, 0, 0, 0, 0, 396, 0,
	588, 589, 665, 382, 484, 598, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 249, 210, 388, 397, 575, 312, 216,
	217, 218, 521, 522, 523, 524, 613, 614, 618, 205,
	460, 461, 462, 463, 292, 608, 309, 466, 465, 331,
	332, 377, 447, 537, 539, 550, 554, 556, 558, 564,
	567, 538, 540, 551, 555, 557, 559, 565, 568, 527,
	529, 531, 533, 546, 545, 542, 570, 571, 548, 553,
	532, 544, 549, 562, 569, 566, 526, 530, 534, 543,
	561, 560, 541, 552, 563, 547, 535, 528, 536, 0,
	196, 221, 366, 0, 452, 288, 643, 612, 482, 607,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 407, 408, 409,
	412, 415, 416, 419, 421, 422, 425, 429, 433, 434,
	435, 437, 439, 441, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 486, 487, 488, 489, 490, 498, 499,
	513, 583, 585, 600, 619, 625, 478, 301, 302, 442,
	443, 314, 315, 639, 640, 300, 595, 626, 593, 638,
	620, 436, 376, 0, 0, 379, 281, 305, 320, 0,
	611, 500, 227, 464, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 389, 398, 427, 432, 296,
	271, 244, 457, 241, 483, 516, 517, 518, 520, 393,
	266, 431, 394, 0, 374, 573, 574, 316, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 1898, 204, 503, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 364, 267, 0,
	0, 428, 0, 203, 0, 485, 252, 375, 372, 580,
	282, 273, 269, 250, 317, 383, 426, 515, 420, 0,
	368, 0, 0, 495, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 411, 496, 286, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 604, 0, 0, 0, 265, 321, 272, 264, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 400, 257, 0,
	451, 0, 0, 0, 622, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 197, 225, 0, 0, 410,
	459, 471, 0, 0, 0, 253, 0, 469, 424, 599,
	233, 284, 456, 430, 467, 438, 287, 0, 0, 468,
	370, 582, 448, 596, 623, 624, 263, 404, 609, 519,
	617, 641, 226, 260, 418, 504, 602, 492, 395, 578,
	579, 329, 491, 295, 201, 367, 629, 224, 477, 369,
	242, 231, 584, 606, 299, 289, 454, 636, 213, 514,
	594, 239, 481, 0, 0, 644, 247, 502, 215, 591,
	501, 391, 326, 327, 214, 0, 455, 268, 293, 0,
	0, 258, 413, 586, 587, 256, 645, 228, 616, 220,
	0, 615, 406, 581, 592, 392, 381, 219, 590, 390,
	380, 334, 353, 354, 280, 307, 445, 373, 446, 306,
	308, 402, 401, 403, 207, 603, 0, 208, 0, 497,
	605, 646, 450, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 365, 417, 444, 440, 449,
	0, 576, 597, 610, 621, 627, 628, 630, 631, 632,
	633, 634, 637, 635, 405, 311, 493, 333, 371, 0,
	0, 423, 470, 240, 601, 494, 199, 0, 0, 0,
	0, 254, 255, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 642, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 396, 0, 588,
	589, 665, 382, 484, 598, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 249, 210, 388, 397, 575, 312, 216, 217,
	218, 521, 522, 523, 524, 613, 614, 618, 205, 460,
	461, 462, 463, 292, 608, 309, 466, 465, 331, 332,
	377, 447, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 196,
	221, 366, 0, 452, 288, 643, 612, 482, 607, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 407, 408, 409, 412,
	415, 416, 419, 421, 422, 425, 429, 433, 434, 435,
	437, 439, 441, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 486, 487, 488, 489, 490, 498, 499, 513,
	583, 585, 600, 619, 625, 478, 301, 302, 442, 443,
	314, 315, 639, 640, 300, 595, 626, 593, 638, 620,
	436, 376, 0, 0, 379, 281, 305, 320, 0, 611,
	500, 227, 464, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 389, 398, 427, 432, 296, 271,
	244, 457, 241, 483, 516, 517, 518, 520, 393, 266,
	431, 394, 0, 374, 573, 574, 316, 0, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 1896, 204, 503, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 364, 267, 0, 0,
	428, 0, 203, 0, 485, 252, 375, 372, 580, 282,
	273, 269, 250, 317, 383, 426, 515, 420, 0, 368,
	0, 0, 495, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 411, 496, 286, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	604, 0, 0, 0, 265, 321, 272, 264, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 400, 257, 0, 451,
	0, 0, 0, 622, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 197, 225, 0, 0, 410, 459,
	471, 0, 0, 0, 253, 0, 469, 424, 599, 233,
	284, 456, 430, 467, 438, 287, 0, 0, 468, 370,
	582, 448, 596, 623, 624, 263, 404, 609, 519, 617,
	641, 226, 260, 418, 504, 602, 492, 395, 578, 579,
	329, 491, 295, 201, 367, 629, 224, 477, 369, 242,
	231, 584, 606, 299, 289, 454, 636, 213, 514, 594,
	239, 481, 0, 0, 644, 247, 502, 215, 591, 501,
	391, 326, 327, 214, 0, 455, 268, 293, 0, 0,
	258, 413, 586, 587, 256, 645, 228, 616, 220, 0,
	615, 406, 581, 592, 392, 381, 219, 590, 390, 380,
	334, 353, 354, 280, 307, 445, 373, 446, 306, 308,
	402, 401, 403, 207, 603, 0, 208, 0, 497, 605,
	646, 450, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 365, 417, 444, 440, 449, 0,
	576, 597, 610, 621, 627, 628, 630, 631, 632, 633,
	634, 637, 635, 405, 311, 493, 333, 371, 0, 0,
	423, 470, 240, 601, 494, 199, 0, 0, 0, 0,
	254, 255, 0, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 642, 505, 511, 506, 507, 508, 509, 510, 0,
	512, 0, 0, 0, 0, 0, 396, 0, 588, 589,
	665, 382, 484, 598, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 249, 210, 388, 397, 575, 312, 216, 217, 218,
	521, 522, 523, 524, 613, 614, 618, 205, 460, 461,
	462, 463, 292, 608, 309, 466, 465, 331, 332, 377,
	447, 537, 539, 550, 554, 556, 558, 564, 567, 538,
	540, 551, 555, 557, 559, 565, 568, 527, 529, 531,
	533, 546, 545, 542, 570, 571, 548, 553, 532, 544,
	549, 562, 569, 566, 526, 530, 534, 543, 561, 560,
	541, 552, 563, 547, 535, 528, 536, 0, 196, 221,
	366, 0, 452, 288, 643, 612, 482, 607, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 407, 408, 409, 412, 415,
	416, 419, 421, 422, 425, 429, 433, 434, 435, 437,
	439, 441, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 486, 487, 488, 489, 490, 498, 499, 513, 583,
	585, 600, 619, 625, 478, 301, 302, 442, 443, 314,
	315, 639, 640, 300, 595, 626, 593, 638, 620, 436,
	376, 0, 0, 379, 281, 305, 320, 0, 611, 500,
	227, 464, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 389, 398, 427, 432, 296, 271, 244,
	457, 241, 483, 516, 517, 518, 520, 393, 266, 431,
	394, 0, 374, 573, 574, 316, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 1894, 204, 503, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 364, 267, 0, 0, 428,
	0, 203, 0, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 0, 368, 0,
	0, 495, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 604,
	0, 0, 0, 265, 321, 272, 264, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 400, 257, 0, 451, 0,
	0, 0, 622, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 197, 225, 0, 0, 410, 459, 471,
	0, 0, 0, 253, 0, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 0, 0, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 0, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 0, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 0, 0, 423,
	470, 240, 601, 494, 199, 0, 0, 0, 0, 254,
	255, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 396, 0, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 196, 221, 366,
	0, 452, 288, 643, 612, 482, 607, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	0, 0, 379, 281, 305, 320, 0, 611, 500, 227,
	464, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 394,
	0, 374, 573, 574, 316, 0, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	1890, 204, 503, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 364, 267, 0, 0, 428, 0,
	203, 0, 485, 252, 375, 372, 580, 282, 273, 269,
	250, 317, 383, 426, 515, 420, 0, 368, 0, 0,
	495, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 411, 496, 286, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 604, 0,
	0, 0, 265, 321, 272, 264, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 400, 257, 0, 451, 0, 0,
	0, 622, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 197, 225, 0, 0, 410, 459, 471, 0,
	0, 0, 253, 0, 469, 424, 599, 233, 284, 456,
	430, 467, 438, 287, 0, 0, 468, 370, 582, 448,
	596, 623, 624, 263, 404, 609, 519, 617, 641, 226,
	260, 418, 504, 602, 492, 395, 578, 579, 329, 491,
	295, 201, 367, 629, 224, 477, 369, 242, 231, 584,
	606, 299, 289, 454, 636, 213, 514, 594, 239, 481,
	0, 0, 644, 247, 502, 215, 591, 501, 391, 326,
	327, 214, 0, 455, 268, 293, 0, 0, 258, 413,
	586, 587, 256, 645, 228, 616, 220, 0, 615, 406,
	581, 592, 392, 381, 219, 590, 390, 380, 334, 353,
	354, 280, 307, 445, 373, 446, 306, 308, 402, 401,
	403, 207, 603, 0, 208, 0, 497, 605, 646, 450,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 365, 417, 444, 440, 449, 0, 576, 597,
	610, 621, 627, 628, 630, 631, 632, 633, 634, 637,
	635, 405, 311, 493, 333, 371, 0, 0, 423, 470,
	240, 601, 494, 199, 0, 0, 0, 0, 254, 255,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 642,
	505, 511, 506, 507, 508, 509, 510, 0, 512, 0,
	0, 0, 0, 0, 396, 0, 588, 589, 665, 382,
	484, 598, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 249,
	210, 388, 397, 575, 312, 216, 217, 218, 521, 522,
	523, 524, 613, 614, 618, 205, 460, 461, 462, 463,
	292, 608, 309, 466, 465, 331, 332, 377, 447, 537,
	539, 550, 554, 556, 558, 564, 567, 538, 540, 551,
	555, 557, 559, 565, 568, 527, 529, 531, 533, 546,
	545, 542, 570, 571, 548, 553, 532, 544, 549, 562,
	569, 566, 526, 530, 534, 543, 561, 560, 541, 552,
	563, 547, 535, 528, 536, 0, 196, 221, 366, 0,
	452, 288, 643, 612, 482, 607, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 407, 408, 409, 412, 415, 416, 419,
	421, 422, 425, 429, 433, 434, 435, 437, 439, 441,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 486,
	487, 488, 489, 490, 498, 499, 513, 583, 585, 600,
	619, 625, 478, 301, 302, 442, 443, 314, 315, 639,
	640, 300, 595, 626, 593, 638, 620, 436, 376, 0,
	0, 379, 281, 305, 320, 0, 611, 500, 227, 464,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 389, 398, 427, 432, 296, 271, 244, 457, 241,
	483, 516, 517, 518, 520, 393, 266, 431, 394, 0,
	374, 573, 574, 316, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 1888,
	204, 503, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 364, 267, 0, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 1886, 204,
	503, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 364, 267, 0, 0, 428, 0, 203, 0,
	485, 252, 375, 372, 580, 282, 273, 269, 250, 317,
	383, 426, 515, 420, 0, 368, 0, 0, 495, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 411,
	496, 286, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 604, 0, 0, 0,
	265, 321, 272, 264, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 400, 257, 0, 451, 0, 0, 0, 622,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	197, 225, 0, 0, 410, 459, 471, 0, 0, 0,
	253, 0, 469, 424, 599, 233, 284, 456, 430, 467,
	438, 287, 0, 0, 468, 370, 582, 448, 596, 623,
	624, 263, 404, 609, 519, 617, 641, 226, 260, 418,
	504, 602, 492, 395, 578, 579, 329, 491, 295, 201,
	367, 629, 224, 477, 369, 242, 231, 584, 606, 299,
	289, 454, 636, 213, 514, 594, 239, 481, 0, 0,
	644, 247, 502, 215, 591, 501, 391, 326, 327, 214,
	0, 455, 268, 293, 0, 0, 258, 413, 586, 587,
	256, 645, 228, 616, 220, 0, 615, 406, 581, 592,
	392, 381, 219, 590, 390, 380, 334, 353, 354, 280,
	307, 445, 373, 446, 306, 308, 402, 401, 403, 207,
	603, 0, 208, 0, 497, 605, 646, 450, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	365, 417, 444, 440, 449, 0, 576, 597, 610, 621,
	627, 628, 630, 631, 632, 633, 634, 637, 635, 405,
	311, 493, 333, 371, 0, 0, 423, 470, 240, 601,
	494, 199, 0, 0, 0, 0, 254, 255, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 642, 505, 511,
	506, 507, 508, 509, 510, 0, 512, 0, 0, 0,
	0, 0, 396, 0, 588, 589, 665, 382, 484, 598,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 249, 210, 388,
	397, 575, 312, 216, 217, 218, 521, 522, 523, 524,
	613, 614, 618, 205, 460, 461, 462, 463, 292, 608,
	309, 466, 465, 331, 332, 377, 447, 537, 539, 550,
	554, 556, 558, 564, 567, 538, 540, 551, 555, 557,
	559, 565, 568, 527, 529, 531, 533, 546, 545, 542,
	570, 571, 548, 553, 532, 544, 549, 562, 569, 566,
	526, 530, 534, 543, 561, 560, 541, 552, 563, 547,
	535, 528, 536, 0, 196, 221, 366, 0, 452, 288,
	643, 612, 482, 607, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 407, 408, 409, 412, 415, 416, 419, 421, 422,
	425, 429, 433, 434, 435, 437, 439, 441, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 486, 487, 488,
	489, 490, 498, 499, 513, 583, 585, 600, 619, 625,
	478, 301, 302, 442, 443, 314, 315, 639, 640, 300,
	595, 626, 593, 638, 620, 436, 376, 0, 0, 379,
	281, 305, 320, 0, 611, 500, 227, 464, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 389,
	398, 427, 432, 296, 271, 244, 457, 241, 483, 516,
	517, 518, 520, 393, 266, 431, 394, 0, 374, 573,
	574, 316, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 204, 503,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 364, 267, 0, 0, 428, 0, 203, 0, 485,
	252, 375, 372, 580, 282, 273, 269, 250, 317, 383,
	426, 515, 420, 0, 368, 0, 0, 495, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 411, 496,
	286, 0, 1861, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 604, 0, 0, 0, 265,
	321, 272, 264, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 400, 257, 0, 451, 0, 0, 0, 622, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 197,
	225, 0, 0, 410, 459, 471, 0, 0, 0, 253,
	0, 469, 424, 599, 233, 284, 456, 430, 467, 438,
	287, 0, 0, 468, 370, 582, 448, 596, 623, 624,
	263, 404, 609, 519, 617, 641, 226, 260, 418, 504,
	602, 492, 395, 578, 579, 329, 491, 295, 201, 367,
	629, 224, 477, 369, 242, 231, 584, 606, 299, 289,
	454, 636, 213, 514, 594, 239, 481, 0, 0, 644,
	247, 502, 215, 591, 501, 391, 326, 327, 214, 0,
	455, 268, 293, 0, 0, 258, 413, 586, 587, 256,
	645, 228, 616, 220, 0, 615, 406, 581, 592, 392,
	381, 219, 590, 390, 380, 334, 353, 354, 280, 307,
	445, 373, 446, 306, 308, 402, 401, 403, 207, 603,
	0, 208, 0, 497, 605, 646, 450, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 365,
	417, 444, 440, 449, 0, 576, 597, 610, 621, 627,
	628, 630, 631, 632, 633, 634, 637, 635, 405, 311,
	493, 333, 371, 0, 0, 423, 470, 240, 601, 494,
	199, 0, 0, 0, 0, 254, 255, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 642, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 396, 0, 588, 589, 665, 382, 484, 598, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 249, 210, 388, 397,
	575, 312, 216, 217, 218, 521, 522, 523, 524, 613,
	614, 618, 205, 460, 461, 462, 463, 292, 608, 309,
	466, 465, 331, 332, 377, 447, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 196, 221, 366, 0, 452, 288, 643,
	612, 482, 607, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	407, 408, 409, 412, 415, 416, 419, 421, 422, 425,
	429, 433, 434, 435, 437, 439, 441, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 486, 487, 488, 489,
	490, 498, 499, 513, 583, 585, 600, 619, 625, 478,
	301, 302, 442, 443, 314, 315, 639, 640, 300, 595,
	626, 593, 638, 620, 436, 376, 0, 0, 379, 281,
	305, 320, 0, 611, 500, 227, 464, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 389, 398,
	427, 432, 296, 271, 244, 457, 241, 483, 516, 517,
	518, 520, 393, 266, 431, 394, 0, 374, 573, 574,
	316, 0, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 204, 503, 0,
	0, 0, 0, 0, 1760, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 428, 0, 203, 0, 485, 252,
	375, 372, 580, 282, 273, 269, 250, 317, 383, 426,
	515, 420, 0, 368, 0, 0, 495, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 411, 496, 286,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 604, 0, 0, 0, 265, 321,
	272, 264, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	400, 257, 0, 451, 0, 0, 0, 622, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 197, 225,
	0, 0, 410, 459, 471, 0, 0, 0, 253, 0,
	469, 424, 599, 233, 284, 456, 430, 467, 438, 287,
	0, 0, 468, 370, 582, 448, 596, 623, 624, 263,
	404, 609, 519, 617, 641, 226, 260, 418, 504, 602,
	492, 395, 578, 579, 329, 491, 295, 201, 367, 629,
	224, 477, 369, 242, 231, 584, 606, 299, 289, 454,
	636, 213, 514, 594, 239, 481, 0, 0, 644, 247,
	502, 215, 591, 501, 391, 326, 327, 214, 0, 455,
	268, 293, 0, 0, 258, 413, 586, 587, 256, 645,
	228, 616, 220, 0, 615, 406, 581, 592, 392, 381,
	219, 590, 390, 380, 334, 353, 354, 280, 307, 445,
	373, 446, 306, 308, 402, 401, 403, 207, 603, 0,
	208, 0, 497, 605, 646, 450, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 365, 417,
	444, 440, 449, 0, 576, 597, 610, 621, 627, 628,
	630, 631, 632, 633, 634, 637, 635, 405, 311, 493,
	333, 371, 0, 0, 423, 470, 240, 601, 494, 199,
	0, 0, 0, 0, 254, 255, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 642, 505, 511, 506, 507,
	508, 509, 510, 0, 512, 0, 0, 0, 0, 0,
	396, 0, 588, 589, 665, 382, 484, 598, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 249, 210, 388, 397, 575,
	312, 216, 217, 218, 521, 522, 523, 524, 613, 614,
	618, 205, 460, 461, 462, 463, 292, 608, 309, 466,
	465, 331, 332, 377, 447, 537, 539, 550, 554, 556,
	558, 564, 567, 538, 540, 551, 555, 557, 559, 565,
	568, 527, 529, 531, 533, 546, 545, 542, 570, 571,
	548, 553, 532, 544, 549, 562, 569, 566, 526, 530,
	534, 543, 561, 560, 541, 552, 563, 547, 535, 528,
	536, 0, 196, 221, 366, 0, 452, 288, 643, 612,
	482, 607, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 407,
	408, 409, 412, 415, 416, 419, 421, 422, 425, 429,
	433, 434, 435, 437, 439, 441, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 486, 487, 488, 489, 490,
	498, 499, 513, 583, 585, 600, 619, 625, 478, 301,
	302, 442, 443, 314, 315, 639, 640, 300, 595, 626,
	593, 638, 620, 436, 376, 0, 0, 379, 281, 305,
	320, 0, 611, 500, 227, 464, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 389, 398, 427,
	432, 296, 271, 244, 457, 241, 483, 516, 517, 518,
	520, 393, 266, 431, 394, 0, 374, 573, 574, 316,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 204, 503, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 364,
	267, 0, 0, 428, 0, 203, 0, 485, 252, 375,
	372, 580, 282, 273, 269, 250, 317, 383, 426, 515,
	420, 0, 368, 0, 0, 495, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 411, 496, 286, 0,
	95, 0, 0, 0, 948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 604, 0, 0, 0, 265, 321, 272,
	264, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 400,
	257, 0, 451, 0, 0, 0, 622, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 197, 225, 0,
	0, 410, 459, 471, 0, 0, 0, 253, 0, 469,
	424, 599, 233, 284, 456, 430, 467, 438, 287, 0,
	0, 468, 370, 582, 448, 596, 623, 624, 263, 404,
	609, 519, 617, 641, 226, 260, 418, 504, 602, 492,
	395, 578, 579, 329, 491, 295, 201, 367, 629, 224,
	477, 369, 242, 231, 584, 606, 299, 289, 454, 636,
	213, 514, 594, 239, 481, 0, 0, 644, 247, 502,
	215, 591, 501, 391, 326, 327, 214, 0, 455, 268,
	293, 0, 0, 258, 413, 586, 587, 256, 645, 228,
	616, 220, 0, 615, 406, 581, 592, 392, 381, 219,
	590, 390, 380, 334, 353, 354, 280, 307, 445, 373,
	446, 306, 308, 402, 401, 403, 207, 603, 0, 208,
	0, 497, 605, 646, 450, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 365, 417, 444,
	440, 449, 0, 576, 597, 610, 621, 627, 628, 630,
	631, 632, 633, 634, 637, 635, 405, 311, 493, 333,
	371, 0, 0, 423, 470, 240, 601, 494, 199, 0,
	0, 0, 0, 254, 255, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 642, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 396,
	0, 588, 589, 665, 382, 484, 598, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 249, 210, 388, 397, 575, 312,
	216, 217, 218, 521, 522, 523, 524, 613, 614, 618,
	205, 460, 461, 462, 463, 292, 608, 309, 466, 465,
	331, 332, 377, 447, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 196, 221, 366, 0, 452, 288, 643, 612, 482,
	607, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 407, 408,
	409, 412, 415, 416, 419, 421, 422, 425, 429, 433,
	434, 435, 437, 439, 441, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 486, 487, 488, 489, 490, 498,
	499, 513, 583, 585, 600, 619, 625, 478, 301, 302,
	442, 443, 314, 315, 639, 640, 300, 595, 626, 593,
	638, 620, 436, 376, 0, 0, 379, 281, 305, 320,
	0, 611, 500, 227, 464, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 389, 398, 427, 432,
	296, 271, 244, 457, 241, 483, 516, 517, 518, 520,
	393, 266, 431, 394, 0, 374, 573, 574, 316, 0,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 204, 503, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 364, 267,
	0, 0, 428, 0, 203, 0, 485, 252, 375, 372,
	580, 282, 273, 269, 250, 317, 383, 426, 515, 420,
	0, 368, 0, 0, 495, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 411, 496, 286, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 604, 0, 0, 0, 265, 321, 272, 264,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1440, 0, 297, 0, 400, 257,
	0, 451, 0, 0, 0, 622, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 197, 225, 0, 0,
	410, 459, 471, 0, 0, 0, 253, 0, 469, 424,
	599, 233, 284, 456, 430, 467, 438, 287, 0, 0,
	468, 370, 582, 448, 596, 623, 624, 263, 404, 609,
	519, 617, 641, 226, 260, 418, 504, 602, 492, 395,
	578, 579, 329, 491, 295, 201, 367, 629, 224, 477,
	369, 242, 231, 584, 606, 299, 289, 454, 636, 213,
	514, 594, 239, 481, 0, 0, 644, 247, 502, 215,
	591, 501, 391, 326, 327, 214, 0, 455, 268, 293,
	0, 0, 258, 413, 586, 587, 256, 645, 228, 616,
	220, 0, 615, 406, 581, 592, 392, 381, 219, 590,
	390, 380, 334, 353, 354, 280, 307, 445, 373, 446,
	306, 308, 402, 401, 403, 207, 603, 0, 208, 0,
	497, 605, 646, 450, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 365, 417, 444, 440,
	449, 0, 576, 597, 610, 621, 627, 628, 630, 631,
	632, 633, 634, 637, 635, 405, 311, 493, 333, 371,
	0, 0, 423, 470, 240, 601, 494, 199, 0, 0,
	0, 0, 254, 255, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 642, 505, 511, 506, 507, 508, 509,
	510, 0, 512, 0, 0, 0, 0, 0, 396, 0,
	588, 589, 665, 382, 484, 598, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 249, 210, 388, 397, 575, 312, 216,
	217, 218, 521, 522, 523, 524, 613, 614, 618, 205,
	460, 461, 462, 463, 292, 608, 309, 466, 465, 331,
	332, 377, 447, 537, 539, 550, 554, 556, 558, 564,
	567, 538, 540, 551, 555, 557, 559, 565, 568, 527,
	529, 531, 533, 546, 545, 542, 570, 571, 548, 553,
	532, 544, 549, 562, 569, 566, 526, 530, 534, 543,
	561, 560, 541, 552, 563, 547, 535, 528, 536, 0,
	196, 221, 366, 0, 452, 288, 643, 612, 482, 607,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 407, 408, 409,
	412, 415, 416, 419, 421, 422, 425, 429, 433, 434,
	435, 437, 439, 441, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 486, 487, 488, 489, 490, 498, 499,
	513, 583, 585, 600, 619, 625, 478, 301, 302, 442,
	443, 314, 315, 639, 640, 1439, 595, 626, 593, 638,
	620, 436, 376, 0, 0, 379, 281, 305, 320, 0,
	611, 500, 227, 464, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 389, 398, 427, 432, 296,
	271, 244, 457, 241, 483, 516, 517, 518, 520, 393,
	266, 431, 394, 0, 374, 573, 574, 316, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 204, 503, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 364, 267, 0,
	0, 428, 0, 203, 0, 485, 252, 375, 372, 580,
	282, 273, 269, 250, 317, 383, 426, 515, 420, 0,
	368, 0, 0, 495, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 411, 496, 286, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 604, 0, 0, 0, 265, 321, 272, 264, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 400, 257, 0,
	451, 0, 0, 0, 622, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 197, 225, 0, 0, 410,
	459, 471, 0, 0, 0, 253, 0, 469, 424, 599,
	233, 284, 456, 430, 467, 438, 287, 0, 0, 468,
	370, 582, 448, 596, 623, 624, 263, 404, 609, 519,
	617, 641, 226, 260, 418, 504, 602, 492, 395, 578,
	579, 329, 491, 295, 201, 367, 629, 224, 477, 369,
	242, 231, 584, 606, 299, 289, 454, 636, 213, 514,
	594, 239, 481, 0, 0, 644, 247, 502, 215, 591,
	501, 391, 326, 327, 214, 0, 455, 268, 293, 0,
	0, 258, 413, 586, 587, 256, 645, 228, 616, 220,
	0, 615, 406, 581, 592, 392, 381, 219, 590, 390,
	380, 334, 353, 354, 280, 307, 445, 373, 446, 306,
	308, 402, 401, 403, 207, 603, 0, 208, 0, 497,
	605, 646, 450, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 365, 417, 444, 440, 449,
	0, 576, 597, 610, 621, 627, 628, 630, 631, 632,
	633, 634, 637, 635, 405, 311, 493, 333, 371, 0,
	0, 423, 470, 240, 601, 494, 199, 0, 0, 0,
	0, 254, 255, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 642, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 396, 0, 588,
	589, 665, 382, 484, 598, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 249, 210, 388, 397, 575, 312, 216, 217,
	218, 521, 522, 523, 524, 613, 614, 618, 205, 460,
	461, 462, 463, 292, 608, 309, 466, 465, 331, 332,
	377, 447, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 196,
	221, 366, 0, 452, 288, 643, 612, 482, 607, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1038, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 407, 408, 409, 412,
	415, 416, 419, 421, 422, 425, 429, 433, 434, 435,
	437, 439, 441, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 486, 487, 488, 489, 490, 498, 499, 513,
	583, 585, 600, 619, 625, 478, 301, 302, 442, 443,
	314, 315, 639, 640, 300, 595, 626, 593, 638, 620,
	436, 376, 0, 0, 379, 281, 305, 320, 0, 611,
	500, 227, 464, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 389, 398, 427, 432, 296, 271,
	244, 457, 241, 483, 516, 517, 518, 520, 393, 266,
	431, 394, 0, 374, 573, 574, 316, 0, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 204, 503, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 364, 267, 0, 0,
	428, 0, 203, 0, 485, 252, 375, 372, 580, 282,
	273, 269, 250, 317, 383, 426, 515, 420, 0, 368,
	0, 0, 495, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 411, 496, 286, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	604, 0, 0, 0, 265, 321, 272, 264, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 400, 257, 0, 451,
	0, 668, 0, 622, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 197, 225, 0, 0, 410, 459,
	471, 0, 0, 0, 253, 0, 469, 424, 599, 233,
	284, 456, 430, 467, 438, 287, 0, 0, 468, 370,
	582, 448, 596, 623, 624, 263, 404, 609, 519, 617,
	641, 226, 260, 418, 504, 602, 492, 395, 578, 579,
	329, 491, 295, 201, 367, 629, 224, 477, 369, 242,
	231, 584, 606, 299, 289, 454, 636, 213, 514, 594,
	239, 481, 0, 0, 644, 247, 502, 215, 591, 501,
	391, 326, 327, 214, 0, 455, 268, 293, 0, 0,
	258, 413, 586, 587, 256, 645, 228, 616, 220, 0,
	615, 406, 581, 592, 392, 381, 219, 590, 390, 380,
	334, 353, 354, 280, 307, 445, 373, 446, 306, 308,
	402, 401, 403, 207, 603, 0, 208, 0, 497, 605,
	646, 450, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 365, 417, 444, 440, 449, 0,
	576, 597, 610, 621, 627, 628, 630, 631, 632, 633,
	634, 637, 635, 405, 311, 493, 333, 371, 0, 0,
	423, 470, 240, 601, 494, 199, 0, 0, 0, 0,
	254, 255, 0, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 642, 505, 511, 506, 507, 508, 509, 510, 0,
	512, 0, 0, 0, 0, 0, 396, 0, 588, 589,
	665, 382, 484, 598, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 249, 210, 388, 397, 575, 312, 216, 217, 218,
	521, 522, 523, 524, 613, 614, 618, 205, 460, 461,
	462, 463, 292, 608, 309, 466, 465, 331, 332, 377,
	447, 537, 539, 550, 554, 556, 558, 564, 567, 538,
	540, 551, 555, 557, 559, 565, 568, 527, 529, 531,
	533, 546, 545, 542, 570, 571, 548, 553, 532, 544,
	549, 562, 569, 566, 526, 530, 534, 543, 561, 560,
	541, 552, 563, 547, 535, 528, 536, 0, 196, 221,
	366, 0, 452, 288, 643, 612, 482, 607, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 407, 408, 409, 412, 415,
	416, 419, 421, 422, 425, 429, 433, 434, 435, 437,
	439, 441, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 486, 487, 488, 489, 490, 498, 499, 513, 583,
	585, 600, 619, 625, 478, 301, 302, 442, 443, 314,
	315, 639, 640, 300, 595, 626, 593, 638, 620, 436,
	376, 0, 0, 379, 281, 305, 320, 0, 611, 500,
	227, 464, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 389, 398, 427, 432, 296, 271, 244,
	457, 241, 483, 516, 517, 518, 520, 393, 266, 431,
	394, 0, 374, 573, 574, 316, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 204, 503, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 364, 267, 0, 0, 428,
	0, 203, 0, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 0, 368, 0,
	0, 495, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 604,
	0, 0, 0, 265, 321, 272, 264, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 400, 257, 0, 451, 0,
	0, 0, 622, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 197, 225, 0, 0, 410, 459, 471,
	0, 0, 0, 253, 0, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 0, 0, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 0, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 0, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 0, 0, 423,
	470, 240, 601, 494, 199, 0, 0, 0, 0, 254,
	255, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 396, 0, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 196, 221, 366,
	0, 452, 288, 643, 612, 482, 607, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 4093, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	0, 0, 379, 281, 305, 320, 0, 611, 500, 227,
	464, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 394,
	0, 374, 573, 574, 316, 0, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 204, 503, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 364, 267, 0, 0, 428, 0,
	203, 0, 485, 252, 375, 372, 580, 282, 273, 269,
	250, 317, 383, 426, 515, 420, 0, 368, 0, 0,
	495, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 411, 496, 286, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 604, 0,
	0, 0, 265, 321, 272, 264, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 400, 257, 0, 451, 0, 0,
	0, 622, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 197, 225, 0, 0, 410, 459, 471, 0,
	0, 0, 253, 0, 469, 424, 599, 233, 284, 456,
	430, 467, 438, 287, 0, 0, 468, 370, 582, 448,
	596, 623, 624, 263, 404, 609, 519, 617, 641, 226,
	260, 418, 504, 602, 492, 395, 578, 579, 329, 491,
	295, 201, 367, 629, 224, 477, 369, 242, 231, 584,
	606, 299, 289, 454, 636, 213, 514, 594, 239, 481,
	0, 0, 644, 247, 502, 215, 591, 501, 391, 326,
	327, 214, 0, 455, 268, 293, 0, 0, 258, 413,
	586, 587, 256, 645, 228, 616, 220, 0, 615, 406,
	581, 592, 392, 381, 219, 590, 390, 380, 334, 353,
	354, 280, 307, 445, 373, 446, 306, 308, 402, 401,
	403, 207, 603, 0, 208, 0, 497, 605, 646, 450,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 365, 417, 444, 440, 449, 0, 576, 597,
	610, 621, 627, 628, 630, 631, 632, 633, 634, 637,
	635, 405, 311, 493, 333, 371, 0, 0, 423, 470,
	240, 601, 494, 199, 0, 0, 0, 0, 254, 255,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 642,
	505, 511, 506, 507, 508, 509, 510, 0, 512, 0,
	0, 0, 0, 0, 396, 0, 588, 589, 665, 382,
	484, 598, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 249,
	210, 388, 397, 575, 312, 216, 217, 218, 521, 522,
	523, 524, 613, 614, 618, 205, 460, 461, 462, 463,
	292, 608, 309, 466, 465, 331, 332, 377, 447, 537,
	539, 550, 554, 556, 558, 564, 567, 538, 540, 551,
	555, 557, 559, 565, 568, 527, 529, 531, 533, 546,
	545, 542, 570, 571, 548, 553, 532, 544, 549, 562,
	569, 566, 526, 530, 534, 543, 561, 560, 541, 552,
	563, 547, 535, 528, 536, 0, 196, 221, 366, 0,
	452, 288, 643, 612, 482, 607, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 407, 408, 409, 412, 415, 416, 419,
	421, 422, 425, 429, 433, 434, 435, 437, 439, 441,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 486,
	487, 488, 489, 490, 498, 499, 513, 583, 585, 600,
	619, 625, 478, 301, 302, 442, 443, 314, 315, 639,
	640, 300, 595, 626, 593, 638, 620, 436, 376, 0,
	0, 379, 281, 305, 320, 0, 611, 500, 227, 464,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 389, 398, 427, 432, 296, 271, 244, 457, 241,
	483, 516, 517, 518, 520, 393, 266, 431, 394, 0,
	374, 573, 574, 316, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	204, 503, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 364, 267, 0, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 204,
	503, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 364, 267, 0, 0, 428, 0, 203, 0,
	485, 252, 375, 372, 580, 282, 273, 269, 250, 317,
	383, 426, 515, 420, 0, 368, 0, 0, 495, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 411,
	496, 286, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 604, 0, 0, 0,
	265, 321, 272, 264, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 400, 257, 0, 451, 0, 0, 0, 622,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	197, 225, 0, 0, 410, 459, 471, 0, 0, 0,
	253, 0, 469, 424, 599, 233, 284, 456, 430, 467,
	438, 287, 0, 0, 468, 370, 582, 448, 596, 623,
	624, 263, 404, 609, 519, 617, 641, 226, 260, 418,
	504, 602, 492, 395, 578, 579, 329, 491, 295, 201,
	367, 629, 224, 477, 369, 242, 231, 584, 606, 299,
	289, 454, 636, 213, 514, 594, 239, 481, 0, 0,
	644, 247, 502, 215, 591, 501, 391, 326, 327, 214,
	0, 455, 268, 293, 0, 0, 258, 413, 586, 587,
	256, 645, 228, 616, 220, 0, 615, 406, 581, 592,
	392, 381, 219, 590, 390, 380, 334, 353, 354, 280,
	307, 445, 373, 446, 306, 308, 402, 401, 403, 207,
	603, 0, 208, 0, 497, 605, 646, 450, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	365, 417, 444, 440, 449, 0, 576, 597, 610, 621,
	627, 628, 630, 631, 632, 633, 634, 637, 635, 405,
	311, 493, 333, 371, 0, 0, 423, 470, 240, 601,
	494, 199, 0, 0, 0, 0, 254, 255, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 642, 505, 511,
	506, 507, 508, 509, 510, 0, 512, 0, 0, 0,
	0, 0, 396, 0, 588, 589, 665, 382, 484, 598,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 249, 210, 388,
	397, 575, 312, 216, 217, 218, 521, 522, 523, 524,
	613, 614, 618, 205, 460, 461, 462, 463, 292, 608,
	309, 466, 465, 331, 332, 377, 447, 537, 539, 550,
	554, 556, 558, 564, 567, 538, 540, 551, 555, 557,
	559, 565, 568, 527, 529, 531, 533, 546, 545, 542,
	570, 571, 548, 553, 532, 544, 549, 562, 569, 566,
	526, 530, 534, 543, 561, 560, 541, 552, 563, 547,
	535, 528, 536, 0, 196, 221, 366, 0, 452, 288,
	643, 612, 482, 607, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 407, 408, 409, 412, 415, 416, 419, 421, 422,
	425, 429, 433, 434, 435, 437, 439, 441, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 486, 487, 488,
	489, 490, 498, 499, 513, 583, 585, 600, 619, 625,
	478, 301, 302, 442, 443, 314, 315, 639, 640, 300,
	595, 626, 593, 638, 620, 436, 376, 0, 0, 379,
	281, 305, 320, 0, 611, 500, 227, 464, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 389,
	398, 427, 432, 296, 271, 244, 457, 241, 483, 516,
	517, 518, 520, 393, 266, 431, 0, 0, 374, 573,
	574, 316,
}

var yyPact = [...]int{
	-1000, -1000, 6215, -1000, -532, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2345, 2475, -1000, -1000, -1000, -1000, 2620, -1000, 1002,
	2061, -1000, 2368, 6311, -1000, 56353, 490, -1000, 53437, -441,
	867, 233, 37399, -1000, 189, -1000, 171, 54895, 182, -1000,
	-1000, -1000, -1000, -441, 22090, 2275, 54, 53, 56353, -1000,
	-1000, -1000, -1000, -355, 2487, 2032, -1000, 396, -1000, -1000,
	-1000, -1000, -1000, -1000, 52708, -1000, 1123, -1000, -1000, 2374,
	2349, 2272, 922, 2300, -1000, 2469, 2032, -1000, 22090, 2539,
	2431, 21361, 21361, 451, -1000, -1000, 332, -1000, -1000, 32296,
	56353, 40315, 842, -1000, 2368, -1000, -1000, -1000, 214, -1000,
	379, 1952, -1000, 1947, -1000, 1054, 1085, 388, 862, 851,
	387, 386, 382, 380, 378, 377, 376, 349, 394, -1000,
	943, 943, -209, -210, 1342, 468, 429, 429, 1005, 467,
	2328, 2325, -1000, -1000, 943, 943, 943, 363, 943, 943,
	943, 943, 304, 302, 943, 943, 943, 943, 943, 943,
	943, 943, 943, 943, 943, 943, 943, 943, 943, 943,
	943, 911, 2368, 269, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 56353, 223, 56353, -1000,
	803, 488, -1000, -1000, -446, 1098, 1098, 94, 1098, 1098,
	1098, 1098, 185, 993, 52, -1000, 179, 292, 162, 273,
	1088, 868, -1000, -1000, 258, 1088, 1843, -1000, 932, 266,
	164, -1000, 1098, 1098, -1000, 14776, 229, 14776, 14776, -1000,
	2358, -1000, -1000, -1000, -1000, -1000, 1410, -1000, -1000, -1000,
	-1000, -24, 465, -1000, -1000, -1000, -1000, 54895, 51979, 237,
	-1000, -1000, 307, 1859, 1360, 22090, 1388, 920, -1000, -1000,
	1209, 873, -1000, -1000, -1000, -1000, -1000, 513, -1000, 25006,
	25006, 25006, 25006, -1000, -1000, 1981, 51250, 1981, 1981, 25006,
	1981, 25006, 1981, 1981, 1981, 1981, 22090, 1981, 1981, 1981,
	1981, -1000, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, -1000,
	-1000, -1000, -1000, 1981, 799, 1981, 1981, 1981, 1981, 1981,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1981, 1981, 1981,
	1981, 1981, 1981, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, -1000, -1000, -1000, 1699,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27922, 1553, 1550,
	1521, -1000, 19174, 1981, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 56353, -1000, 1981, 215, 54895,
	54895, 301, 1373, -1000, -1000, 2469, 2032, -1000, 2487, 2607,
	396, -1000, 3650, 1684, 1705, 1494, 2032, 1928, 56353, -1000,
	1997, -1000, -1000, -1000, -323, -334, 2218, 1518, 1824, -1000,
	-1000, -1000, -1000, 2241, 22090, -1000, -1000, 2608, -1000, 29380,
	797, 2596, 50521, -1000, 451, 451, 1938, 416, 17, -1000,
	-1000, -1000, -1000, 983, 36670, -1000, -1000, -1000, -1000, -1000,
	1832, 56353, -1000, -1000, 4879, 54895, -1000, 2056, -1000, 1830,
	-1000, 2018, 22090, 2072, 487, 54895, 483, 479, 477, -1000,
	-57, -1000, -1000, -1000, -1000, -1000, -1000, 943, 943, 943,
	-1000, 390, 2538, 6311, 7250, -1000, -1000, -1000, 49792, 2048,
	54895, -1000, 2041, -1000, 1057, 869, 871, 871, 54895, -1000,
	-1000, 55624, 54895, 1056, 1055, 54895, 54895, 54895, 54895, -1000,
	49063, -1000, 48334, 47605, 1372, 54895, 46876, 46147, 45418, 44689,
	43960, -1000, 2194, -1000, 2106, -1000, -1000, -1000, 55624, 54895,
	54895, 55624, 54895, 55624, 56353, 54895, -1000, -1000, 364, -1000,
	-1000, 1371, 1366, 1364, 943, 943, 1358, 1819, 1812, 1809,
	943, 943, 1357, 1808, 38857, 1805, 267, 1349, 1345, 1325,
	1328, 1802, 232, 1797, 1298, 1253, 1323, 54895, 2035, 56353,
	-1000, 254, 1064, 897, 968, 2368, 2266, 1937, 458, 486,
	54895, 433, 433, 54895, -1000, 15511, 56353, 236, -1000, 1793,
	22090, -1000, 1110, 1088, 1088, -1000, -1000, -1000, -1000, -1000,
	-1000, 1098, 56353, 1110, -1000, -1000, -1000, 1088, 1098, 56353,
	1098, 1098, 1098, 1098, 1088, 1088, 1088, 1098, 56353, 56353,
	56353, 56353, 56353, 56353, 56353, 56353, 56353, 14776, 932, 1098,
	-447, -1000, 1777, -1000, -1000, -1000, 2169, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14776, 14776, -1000, -1000, -1000, -1000,
	-1000, 1934, -1000, 168, 18, 180, -1000, 43231, 499, 952,
	-1000, 499, -1000, -1000, -1000, 1933, 42502, -1000, -449, -454,
	-455, -459, -1000, -1000, -1000, -460, -461, -1000, -1000, -1000,
	22090, 22090, 22090, 22090, -251, -1000, 1224, 24277, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22090, 252, 956, 25006, 25006,
	25006, 25006, 25006, 25006, 25006, 26464, 25735, 25006, 25006, 25006,
	25006, 25006, 25006, -1000, -1000, 34483, 9460, 9460, 873, 873,
	873, 873, -1000, -173, 1930, 55624, -1000, -1000, -1000, 796,
	22090, 22090, 873, -1000, 1365, 1991, 19174, 22090, 22090, 22090,
	22090, 998, 1360, 55624, 22090, -1000, 1494, -1000, -1000, -1000,
	-1000, 1240, -1000, -1000, 1065, 2334, 2334, 2334, 2334, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 2334,
	22090, 145, 145, 729, 22090, 22090, 22090, 22090, 22090, 22090,
	17716, 22090, 22090, 25006, 22090, 22090, 22090, 1494, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 1494, 22090, 1346,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 16981, 22090, 22090,
	22090, 22090, 22090, -1000, -1000, -1000, -1000, -1000, -1000, 22090,
	22090, 22090, 22090, 22090, 22090, 22090, 22090, 1494, 22090, 22090,
	22090, 22090, 22090, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1683, 1585, 1533, 22090, -1000, 1929,
	-1000, -188, 31567, 22090, 1755, 2592, 2101, 54895, -1000, -1000,
	-1000, -1000, 2469, -1000, 2469, 1683, 3341, 2221, 21361, -1000,
	-1000, 3341, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1704, -1000, 56353, 1928, 2406, 54895, -1000, -305, -1000,
	-307, 2213, 1746, 359, -1000, 22090, 22090, 1927, -1000, 1137,
	56353, -1000, -251, -1000, 41773, -1000, -1000, 14041, 56353, 344,
	56353, -1000, 30838, 41044, 309, -1000, 17, 1904, -1000, 28,
	2, 18445, 859, -1000, -1000, -1000, 1342, 27193, 1801, 859,
	107, -1000, -1000, -1000, 2018, -1000, 2018, 2018, 2018, 2018,
	359, 359, 359, 359, -1000, -1000, -1000, -1000, -1000, 2034,
	2031, -1000, 2018, 2018, 2018, 2018, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2030, 2030, 2030, 2026, 2026, 2019, 2019,
	423, -1000, 22090, 410, 40315, 2384, 1322, 2148, 254, 437,
	2094, 54895, 54895, 54895, 437, -1000, 1464, 1462, 1447, -1000,
	-522, 1922, -1000, -1000, 2534, -1000, -1000, 858, 1087, 1084,
	912, 54895, 216, 327, -1000, 415, -1000, 40315, 54895, 1052,
	871, 54895, -1000, 54895, -1000, -1000, -1000, -1000, -1000, 54895,
	-1000, -1000, 1920, -1000, 1945, 1177, 1076, 1173, 1070, 1920,
	-1000, -1000, -184, 1920, -1000, 1920, -1000, 1920, -1000, 1920,
	-1000, 1920, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 997, 287, -374, 54895, 216, 457, -1000, 456, 34483,
	-1000, -1000, -1000, 34483, 34483, -1000, -1000, -1000, -1000, 1734,
	1722, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-506, 56353, -1000, 247, 949, 295, 350, 303, 56353, 222,
	2462, 2452, 2447, 2438, 2436, 2432, 277, 300, 56353, 56353,
	433, 2171, 56353, 2392, 56353, -1000, -1000, -1000, -1000, -1000,
	1720, 1708, -1000, 1360, 56353, -1000, -1000, 1098, 1098, -1000,
	-1000, 56353, 1098, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1098, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 56353, -1000, -1000,
	-1000, -1000, -24, 155, -1000, -1000, 54895, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -107, -1000, 347, 26,
	374, -1000, -1000, -1000, -1000, -1000, 2465, -1000, 1360, 1018,
	1014, -1000, 1981, -1000, -1000, 1197, -1000, -1000, -1000, -1000,
	-1000, 1981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	252, 25006, 25006, 25006, 1428, 816, 1463, 1233, 1347, 1259,
	1259, 1192, 25006, 1192, 25006, 881, 881, 881, 881, 881,
	-1000, -1000, -1000, -1000, -1000, -1000, 1699, -1000, 1679, -1000,
	1981, 55624, 1762, 16981, 1391, 1385, 1494, 903, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3855, 1494,
	1859, 1494, 1800, 3562, 994, -1000, 22090, 1494, 3547, -1000,
	-1000, 1494, 1494, 22090, -1000, -1000, 22090, 22090, 22090, 22090,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	22090, 2148, 1914, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1909, 2588, 1314, 2148, 2148, 2148, 2148, 2148, 22090,
	2143, -1000, -1000, -1000, 1501, 3505, 1324, 3501, 2148, 2148,
	-1000, 2148, 3482, 3441, 1494, 2651, 2618, 2148, 2148, 2148,
	2148, 2148, 2603, 2594, 2148, 2148, 2587, 2148, 3435, 2148,
	2583, 2576, 2545, 2518, 2514, 2497, 2486, 2456, 2429, 2425,
	2421, 2407, 2394, 2389, 2332, 2327, 2318, 2258, 2148, 2148,
	2148, 3431, 2148, 3417, 2148, 3410, 2148, 2148, 3402, 2253,
	2233, 1494, 1905, -1000, 3396, 2148, 3389, 3384, 3377, 2228,
	3373, 3368, 3353, 2148, 2148, 2148, 2224, 3345, 3335, 3311,
	3306, 3232, 3096, 3042, 3019, 3015, 2148, 1533, 1533, 1533,
	1533, 1533, 3007, -259, 2148, 1494, -1000, -1000, -1000, -1000,
	-1000, 2993, 2219, 2977, 2973, 2969, 2933, 1494, 1981, 795,
	-1000, -1000, 1533, 1494, 1494, 1533, 1533, 2923, 2912, 2908,
	2860, 2854, 2844, 2148, 2148, -1000, 2148, 2840, 2832, 2209,
	2152, 1494, -1000, 1533, 56353, -1000, -438, -1000, -4, 1012,
	1981, -1000, 38857, 1494, -1000, 5345, -1000, 1318, -1000, -1000,
	-1000, -1000, -1000, 35941, 1813, -1000, -1000, -1000, -1000, 1981,
	1760, -1000, -1000, -1000, -1000, 359, 74, 35212, 857, 857,
	125, 1360, 1360, 22090, -1000, -1000, -1000, -1000, -1000, -1000,
	528, 2557, 385, 1981, -1000, 1879, 2454, -1000, -1000, -1000,
	2405, 28651, -1000, -1000, 1981, 1981, 56353, 1839, 1792, -1000,
	527, -1000, 1396, 1904, 17, 10, -1000, -1000, -1000, -1000,
	1360, -1000, 1434, 346, 354, -1000, 417, -1000, -1000, -1000,
	-1000, 2308, 77, -1000, -1000, -1000, 368, 359, -1000, -1000,
	-1000, -1000, -1000, -1000, 1677, 1677, -1000, -1000, -1000, -1000,
	-1000, 1316, -1000, -1000, -1000, -1000, 1299, -1000, -1000, 1293,
	-1000, -1000, 2748, 2096, 410, -1000, -1000, 943, 1671, -1000,
	-1000, 2314, 943, 943, 54895, -1000, -1000, 1733, 2384, 247,
	56353, 1003, 2166, -1000, 2094, 2094, 2094, 56353, -1000, -1000,
	-1000, -1000, -1000, -1000, -508, 167, 384, -1000, -1000, -1000,
	6735, 54895, 1751, -1000, 221, -1000, 1664, -1000, 54895, -1000,
	1732, 2025, 54895, 54895, -1000, -1000, -1000, 54895, 1981, -1000,
	-1000, -1000, -1000, 485, 2366, 325, -1000, -1000, -286, -1000,
	-1000, 216, 221, 55624, 54895, 859, -1000, -1000, -1000, -1000,
	-1000, -509, 1726, 475, 225, 326, 56353, 56353, 56353, 56353,
	56353, 56353, 504, -1000, -1000, 39, -1000, -1000, 199, -1000,
	-1000, -1000, -1000, -1000, 199, -1000, -1000, -1000, -1000, -1000,
	281, 454, -1000, 56353, 56353, 966, -1000, -1000, -1000, -1000,
	-1000, 1088, -1000, -1000, 1088, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2354, 56353, 21, -478, -1000,
	-475, 22090, -1000, -1000, -1000, -1000, -1000, 1308, 492, 1463,
	25006, 25006, 1991, 1991, 25006, -1000, -1000, -1000, 947, 947,
	34483, -1000, 25006, 22090, -1000, -1000, 22090, 22090, 22090, 985,
	-1000, 22090, 1270, -1000, 22090, -1000, -259, 1533, 2148, 2148,
	2148, 2148, -259, -259, -259, -259, -259, -259, -259, -259,
	-259, -259, 1890, -1000, 22090, 22090, 22090, 1494, 290, -1000,
	-1000, -1000, -1000, -1000, 2570, -1000, 22090, -1000, 34483, 22090,
	22090, 22090, -1000, -1000, -1000, 22090, 22090, -1000, -1000, 22090,
	-1000, 22090, -1000, -1000, -1000, -1000, -1000, -1000, 22090, -1000,
	22090, -1000, -1000, -1000, 22090, -1000, 22090, -1000, -1000, 22090,
	-1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090,
	-1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090,
	-1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090,
	-1000, 22090, -1000, 22090, -1000, -1000, -1000, 22090, -1000, 22090,
	-1000, 22090, -1000, -1000, 22090, -1000, 22090, -1000, 22090, -1000,
	22090, 22090, -1000, 22090, 22090, 22090, -1000, 22090, 22090, 22090,
	22090, -1000, -1000, -1000, -1000, 22090, 22090, 22090, 22090, 22090,
	22090, 22090, 22090, 22090, 22090, -1000, -1000, -1000, -1000, -1000,
	-1000, 22090, -1000, 40315, 20, -259, 1346, 20, 1346, 23548,
	810, 476, 22819, -1000, 22090, 16246, -1000, -1000, -1000, -1000,
	-1000, 22090, 22090, 22090, 22090, 22090, 22090, -1000, -1000, -1000,
	22090, 22090, -1000, 22090, -1000, 22090, -1000, -1000, -1000, -1000,
	-1000, 1012, -1000, 455, 453, 871, 54895, -1000, -1000, -1000,
	-1000, 1903, -1000, 2442, -1000, 2245, 2236, 2569, 2557, 21361,
	-1000, 30838, -1000, -1000, 54895, -429, -1000, 2277, 2261, 857,
	857, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13306, 2469,
	22090, 2162, 55624, 244, -1000, 30109, 54895, 55624, 30838, 30838,
	30838, 30838, 30838, -1000, 2212, 2199, -1000, 2210, 2183, 2232,
	56353, -1000, 1683, 1692, -1000, 22090, 33025, 1884, 30838, -1000,
	-1000, 30838, 56353, 12571, -1000, -1000, 8, -3, -1000, -1000,
	-1000, -1000, 1342, -1000, -1000, 1412, 2401, 2297, -1000, -1000,
	-1000, -1000, -1000, 1688, -1000, 1675, 1901, 1670, 1668, 287,
	-1000, 1988, 2353, 943, 943, -1000, 1257, -1000, 1365, 1665,
	1630, -1000, -1000, -1000, 471, -1000, 2391, 56353, 2161, 2150,
	2137, -1000, -519, 1243, 2024, 1963, 22090, 2023, 2529, 1885,
	54895, -1000, -1000, 55624, -1000, 268, -1000, 410, 54895, -1000,
	-1000, -1000, 327, 56353, -1000, 9134, -1000, -1000, -1000, 221,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 56353, 245, -1000,
	2020, 1379, -1000, -1000, 2036, -1000, -1000, -1000, -1000, -1000,
	194, 177, 1598, 197, 1593, 197, -1000, 56353, 937, 2096,
	56353, -1000, -1000, -1000, 1098, 1098, -1000, -1000, 2344, -1000,
	1365, 2148, 25006, 25006, -1000, 873, -1000, -1000, 518, -232,
	2018, 2018, -1000, 2018, 2019, -1000, 2018, 143, 2018, 136,
	2018, -1000, -1000, 1494, 1494, -1000, 1533, 2128, 2124, 2792,
	-1000, 1360, 22090, 2774, -1000, -1000, -259, -259, -259, -259,
	-259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -65, 2755, 2684, 2148, -1000, 2017, 2016, 22090, 2148,
	1494, 2119, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2108, 2092, 2087, 2062, 2058, 2043,
	2027, 1998, 1993, 1983, 1958, 1954, 1935, 1863, 1857, 1827,
	2148, 2148, 1822, 2148, 1817, 1796, -1000, 1360, 1533, 2672,
	1533, 2148, 2148, 2655, 286, 2148, 1661, 1661, 1661, 1661,
	1661, 1533, 1533, 1533, 1533, 2148, 54895, -1000, -259, -1000,
	-1000, -317, -319, -1000, 1494, -259, 1889, 25006, 2148, 25006,
	25006, 25006, 2148, 1494, -1000, 1785, 1753, 2510, 1728, 2148,
	2479, 2148, 2148, 2148, 1703, -1000, 2443, 1981, 2443, 1981,
	2443, 1654, 1318, 56353, -1000, -1000, -1000, -1000, 2557, 2546,
	-1000, 1886, -1000, 74, 626, -1000, 2289, 2261, -1000, 2525,
	2264, 2522, -1000, -1000, -1000, -1000, -1000, 1360, -1000, 2372,
	1861, -1000, 945, 1860, -1000, -1000, 20632, 1656, 2227, 526,
	1654, 1908, 2454, 2115, 2135, 3536, -1000, -1000, -1000, -1000,
	2197, -1000, 2190, -1000, -1000, 1997, -1000, 2182, 344, 30838,
	1868, 1868, -1000, 525, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1094, 9134, 2617, -1000, 1588, -1000, 1395, 210, 1228,
	-1000, -1000, 943, 943, -1000, 1032, 1028, -1000, 56353, 2013,
	-1000, 359, 1567, 359, 1225, -1000, -1000, 1217, -1000, -1000,
	-1000, -1000, 1953, 2142, -1000, -1000, -1000, -1000, 56353, -1000,
	-1000, 56353, 56353, 56353, 2009, 2521, -1000, 22090, 2007, 944,
	2676, 54895, 54895, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 436, 943, -489, 299, 298, 943,
	943, 943, -527, -1000, -1000, 1652, 1648, -1000, -216, -1000,
	22090, -1000, -1000, -1000, -1000, -1000, 1261, 1261, 1553, 1550,
	1521, -1000, 1997, -1000, -1000, -1000, 1657, -1000, -1000, -196,
	54895, 54895, 54895, 54895, -1000, -1000, -1000, 1292, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	873, 1494, 367, -198, 1494, -1000, -1000, 359, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22090, -1000,
	22090, -1000, 22090, 1360, 22090, -1000, -1000, -1000, -1000, -1000,
	2469, 1519, 22090, 22090, -1000, 1216, 1203, 2148, -1000, -1000,
	-1000, 22090, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22090, -1000, 22090, -1000, 22090,
	-1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090,
	-1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090, -1000, 22090,
	-1000, 22090, -1000, 22090, -1000, 22090, -1000, -1000, 22090, -1000,
	-1000, -1000, 22090, -1000, 22090, -1000, 22090, -1000, -1000, -1000,
	22090, 203, 947, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1494, 339, -1000, -1000, -1000, 2568,
	-1000, 1494, 22090, 1991, -1000, 1991, 1991, 1991, -1000, -1000,
	-1000, 22090, -1000, 22090, 22090, -1000, 22090, -1000, 22090, -1000,
	-1000, -1000, -1000, 22090, 1981, 2273, 39586, 1981, 39586, 1981,
	33025, -1000, -1000, 2546, 2547, 2511, 2251, 2262, 2262, 2289,
	-1000, 2502, 2498, -1000, 1517, 2490, 1479, 1017, -1000, 55624,
	22090, -1000, 244, 38857, -1000, 391, 54895, 244, 54895, -1000,
	2480, -1000, -1000, 22090, 2004, -1000, 22090, -1000, -1000, -1000,
	-1000, 9460, 2557, 1868, -1000, -1000, 900, -1000, 22090, -1000,
	5153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1476,
	1473, -1000, -1000, 2002, 22090, -1000, -1000, -1000, 1649, 1635,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1997, -1000,
	-1000, -1000, -1000, 327, -513, 2665, 54895, 1190, -1000, 1644,
	1885, 310, 244, 1468, 943, 943, 943, 1168, 1162, 38857,
	1634, -1000, 54895, 372, -1000, 327, -1000, -221, -222, 2148,
	-1000, -1000, 2399, -1000, -1000, 16246, -1000, -1000, 1996, 2091,
	-1000, -1000, -1000, -1000, 2156, -176, -202, -1000, -1000, 2148,
	2148, 2148, 1424, 1494, -1000, 2148, 2148, 1628, 1574, -1000,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	1533, 1694, -1000, 203, 1494, 2134, -1000, -1000, 9460, -1000,
	-1000, 2480, 2489, 20, -1000, -1000, 213, 20, 1360, 986,
	1494, 1494, 986, 1690, 2148, 1686, 1663, 2148, 2148, 33754,
	-1000, 2482, 2481, 1609, -1000, -1000, 39586, 1609, 39586, 1012,
	2547, -267, 22090, 22090, 2249, 1211, -1000, -1000, -1000, -1000,
	1466, 1459, -1000, 1443, -1000, 2614, -1000, 1360, -1000, 1981,
	244, -1000, 524, 1860, -1000, 2469, 1360, 54895, 1360, 71,
	2480, -1000, 2148, -1000, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, -1000, -1000, 54895, 2659, -1000, -1000, 2398,
	1622, 165, -1000, 1534, 1885, -1000, -1000, 243, -1000, 22090,
	-1000, 38857, 1437, 1421, -1000, -1000, -1000, -1000, -527, -1000,
	-1000, -1000, -1000, -1000, -1000, 396, 1881, -1000, 942, 54895,
	56353, -1000, 2122, -1000, -1000, -1000, -1000, 22090, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22090, -1000, 1494, 2132, -1000,
	-367, -1000, -494, 22090, -259, -1000, -1000, -259, -1000, -1000,
	-1000, -1000, -1000, 22090, -1000, -1000, 22090, -1000, 22090, -1000,
	-1000, 1609, -1000, -1000, -1000, 38128, -1000, 1609, -1000, 1609,
	-1000, -267, -1000, 1865, -1000, 54895, 1360, 348, -1000, 1145,
	-1000, -1000, -1000, -1000, -1000, 55624, 54895, 1860, 54895, -1000,
	-1000, 1604, 1494, 1981, 2469, -1000, 1592, -1000, 396, -1000,
	1987, 1963, -1000, -1000, -1000, 19903, -1000, -1000, -1000, -1000,
	-1000, 249, -194, 16246, 11836, 1573, -1000, -193, 2148, 1533,
	-1000, -465, -1000, -1000, -1000, -1000, 293, -1000, -1000, 1859,
	-1000, -1000, 1659, 1627, 1587, -1000, -1000, -1000, -1000, -1000,
	-1000, -267, -1000, -1000, 2397, -1000, -227, -1000, -1000, 1854,
	1498, -1000, -1000, -1000, 33025, 54166, -1000, -169, 421, -194,
	22090, 1986, 1494, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -41, -1000, -1000, 519, -1000, -1000, -1000, 2036, -200,
	-1000, -1000, -1000, 313, -481, -282, -283, 25006, -1000, 22090,
	-1000, 22090, -1000, 22090, -1000, 54895, 1981, -1000, -1000, -1000,
	1493, -1000, 4194, -338, 2127, -1000, -93, -1000, -1000, -1000,
	1023, 1415, -1000, -1000, -1000, -1000, -1000, -1000, 2471, 54895,
	-1000, 418, -1000, -1000, 15511, -196, -204, 1009, -1000, -1000,
	-1000, -1000, -1000, 1991, 1529, 1471, 2148, -1000, 54895, -1000,
	54166, -324, 859, 9460, -1000, 2121, 2118, 2567, -1000, -1000,
	-1000, -1000, -1000, -1000, -529, 1489, 250, -1000, -1000, -1000,
	313, -296, -1000, 22090, -1000, 22090, -1000, 1494, -1000, -1000,
	2383, 71, -1000, 2605, -1000, 2577, 959, 959, -1000, 1154,
	-529, -1000, -1000, -1000, -1000, 2148, 2148, -1000, -344, -1000,
	-1000, -1000, -1000, -1000, 420, 1296, -1000, -1000, -1000, -1000,
	-1000, 9460, -1000, -1000, -1000, 264, 264, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3202, 3200, 32, 5, 39, 38, 3185, 3184, 3180,
	186, 3179, 3178, 3175, 3174, 3173, 3172, 2646, 2645, 2639,
	3170, 3167, 3164, 3160, 3158, 3157, 3156, 3155, 3152, 53,
	99, 25, 96, 210, 201, 3149, 177, 3147, 173, 206,
	3145, 3144, 3143, 120, 197, 81, 84, 198, 3141, 3138,
	72, 3136, 3134, 3131, 195, 194, 193, 1058, 3130, 190,
	116, 49, 3129, 3127, 3126, 3125, 3122, 3118, 3114, 3112,
	3111, 3109, 3108, 3107, 3099, 3097, 3095, 3093, 3091, 3090,
	294, 3085, 3083, 19, 3082, 74, 3081, 3078, 3076, 3075,
	3073, 9, 3072, 3071, 24, 57, 64, 3065, 3061, 48,
	3057, 3053, 3051, 3050, 3048, 43, 3047, 27, 3045, 42,
	3043, 3042, 125, 3041, 3040, 3039, 45, 3038, 3037, 3035,
	10, 175, 3034, 3033, 142, 3028, 3027, 3022, 172, 219,
	3021, 2256, 3020, 103, 3017, 3016, 3015, 174, 199, 3013,
	123, 3012, 3010, 3005, 154, 3002, 3258, 2993, 2989, 62,
	78, 166, 2985, 2983, 164, 70, 6, 2980, 15, 13,
	2975, 2974, 69, 71, 2963, 112, 2959, 2954, 104, 90,
	2953, 102, 97, 2949, 2948, 21, 8, 2947, 1, 4,
	2, 106, 2944, 2943, 118, 2942, 2934, 2930, 92, 2929,
	2928, 3348, 2926, 87, 133, 105, 67, 2924, 167, 163,
	2919, 2915, 2914, 2913, 2911, 52, 2909, 2908, 2906, 140,
	26, 108, 2905, 144, 351, 54, 146, 2903, 191, 76,
	202, 176, 2900, 2896, 136, 135, 2890, 2880, 59, 165,
	192, 2877, 98, 131, 121, 179, 95, 139, 2876, 2870,
	60, 68, 2869, 2868, 2866, 2855, 183, 2853, 2852, 63,
	2851, 58, 2849, 188, 2847, 332, 77, 2842, 178, 170,
	2838, 66, 2837, 2834, 79, 93, 127, 40, 2829, 161,
	168, 129, 169, 2827, 2825, 55, 2821, 2817, 2814, 200,
	292, 2813, 2810, 335, 181, 145, 153, 85, 2808, 303,
	2807, 2804, 41, 5073, 7713, 196, 29, 171, 2800, 2794,
	7487, 44, 46, 20, 2793, 205, 2792, 149, 2787, 2786,
	2785, 218, 204, 110, 162, 61, 2784, 2783, 2782, 2781,
	33, 2776, 2773, 2767, 2760, 2758, 2756, 37, 36, 35,
	75, 215, 65, 18, 100, 158, 157, 73, 2755, 2754,
	2753, 126, 91, 2748, 160, 159, 128, 151, 2745, 185,
	152, 117, 2744, 94, 34, 2739, 2737, 2736, 2735, 89,
	2732, 2728, 2724, 2719, 155, 147, 124, 82, 2718, 83,
	119, 150, 148, 51, 2717, 47, 2716, 2714, 30, 189,
	31, 2713, 17, 109, 114, 2712, 6605, 2711, 16, 300,
	156, 2708, 2696, 7, 11, 14, 2693, 2690, 2687, 2684,
	134, 2683, 2681, 2673, 2666, 23, 50, 22, 12, 115,
	137, 80, 2653, 2652, 143, 2651, 2650, 2647, 0, 1029,
	130, 2583, 203,
}

//line sql.y:8677
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) anyAllSomeUnion() ComparisonModifier {
	v, _ := st.union.(ComparisonModifier)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 261, 386, 259, 259, 28, 75, 36, 36, 35,
	35, 39, 39, 38, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 110, 110, 18, 19, 19,
	19, 19, 420, 420, 186, 186, 184, 184, 185, 185,
	264, 264, 20, 268, 268, 270, 270, 270, 270, 260,
	260, 260, 21, 21, 269, 269, 271, 271, 271, 274,
	274, 274, 274, 314, 314, 314, 22, 22, 22, 22,
	22, 130, 130, 388, 388, 387, 382, 382, 381, 381,
	380, 385, 385, 384, 384, 383, 41, 42, 51, 51,
	51, 51, 52, 53, 389, 389, 355, 58, 58, 57,
	57, 57, 57, 57, 57, 59, 59, 55, 55, 54,
	54, 56, 56, 357, 357, 343, 343, 356, 356, 356,
	356, 356, 356, 356, 342, 342, 141, 141, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 404, 404, 404, 403, 403,
	239, 239, 239, 239, 239, 239, 239, 239, 150, 150,
	162, 162, 162, 162, 162, 162, 148, 148, 149, 147,
	147, 147, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 161, 161, 156, 156, 156, 158, 158, 157, 157,
	157, 159, 159, 405, 405, 405, 405, 320, 320, 320,
	320, 323, 323, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 322, 322, 322, 322, 322, 322, 322, 324,
	324, 324, 324, 324, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	326, 326, 326, 326, 326, 326, 326, 326, 341, 341,
	330, 330, 335, 335, 336, 336, 337, 337, 337, 338,
	338, 338, 339, 339, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 334, 334, 333, 333, 333, 344, 369,
	369, 368, 368, 366, 366, 366, 366, 366, 366, 366,
	366, 353, 353, 363, 363, 363, 363, 363, 352, 352,
	348, 348, 348, 349, 349, 350, 350, 347, 347, 351,
	351, 365, 365, 364, 364, 345, 345, 346, 346, 371,
	406, 406, 406, 406, 406, 407, 407, 372, 396, 398,
	398, 398, 397, 397, 394, 395, 393, 393, 393, 393,
	393, 85, 85, 85, 287, 287, 288, 288, 361, 361,
	360, 360, 360, 362, 362, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 282, 282, 282, 392,
	392, 392, 392, 392, 392, 391, 391, 391, 358, 358,
	358, 358, 390, 390, 60, 60, 219, 219, 409, 409,
	411, 411, 411, 48, 48, 48, 48, 48, 48, 47,
	47, 47, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 49, 49, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 112, 112, 113,
	113, 113, 113, 115, 115, 115, 374, 374, 61, 61,
	3, 3, 174, 176, 177, 177, 175, 175, 175, 175,
	175, 175, 63, 63, 62, 62, 179, 178, 180, 180,
	180, 1, 1, 2, 2, 4, 4, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 340,
	340, 340, 373, 373, 375, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 118, 117, 117, 116, 119,
	119, 119, 119, 119, 119, 119, 119, 377, 377, 377,
	64, 64, 378, 327, 328, 329, 5, 6, 354, 376,
	126, 126, 24, 40, 40, 25, 25, 25, 25, 26,
	26, 65, 68, 68, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 281, 281, 290,
	290, 280, 280, 305, 305, 305, 283, 283, 283, 284,
	284, 402, 402, 402, 277, 277, 67, 67, 67, 306,
	306, 306, 306, 70, 70, 412, 412, 413, 413, 414,
	414, 414, 71, 72, 72, 309, 309, 310, 310, 73,
	74, 86, 86, 86, 86, 86, 87, 87, 87, 87,
	111, 111, 111, 10, 10, 10, 10, 82, 82, 82,
	9, 9, 11, 69, 69, 76, 399, 399, 400, 401,
	401, 401, 401, 77, 79, 27, 27, 27, 27, 27,
	27, 136, 136, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 131, 131, 131, 125, 125,
	421, 80, 81, 81, 129, 129, 129, 122, 122, 122,
	128, 128, 128, 12, 12, 13, 263, 263, 14, 14,
	135, 135, 134, 134, 137, 137, 137, 137, 137, 137,
	137, 132, 132, 133, 133, 133, 133, 298, 298, 298,
	297, 297, 168, 168, 170, 169, 169, 171, 171, 172,
	172, 172, 172, 217, 217, 194, 194, 256, 256, 257,
	257, 255, 255, 262, 262, 258, 258, 258, 258, 265,
	265, 173, 173, 173, 173, 181, 181, 182, 182, 183,
	183, 308, 308, 303, 303, 303, 302, 302, 187, 187,
	187, 189, 188, 188, 188, 188, 190, 190, 192, 192,
	191, 191, 193, 198, 198, 197, 197, 195, 195, 195,
	195, 195, 195, 196, 196, 196, 196, 199, 199, 146,
	146, 146, 146, 146, 146, 146, 146, 410, 410, 37,
	37, 37, 160, 160, 160, 160, 160, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 246, 246,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	222, 222, 221, 221, 88, 88, 88, 89, 89, 90,
	90, 90, 90, 90, 91, 91, 91, 91, 91, 91,
	91, 93, 93, 92, 92, 212, 212, 295, 295, 94,
	95, 95, 96, 96, 99, 99, 98, 97, 97, 103,
	103, 100, 100, 102, 102, 101, 104, 104, 105, 106,
	106, 278, 278, 200, 200, 208, 208, 208, 208, 201,
	201, 201, 201, 201, 201, 201, 209, 209, 209, 216,
	210, 210, 206, 206, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 165, 165, 165, 165,
	227, 227, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 153, 153, 166,
	166, 166, 166, 167, 167, 167, 167, 167, 167, 167,
	316, 316, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	422, 422, 331, 331, 331, 207, 207, 207, 207, 207,
	127, 127, 127, 127, 127, 313, 313, 313, 317, 317,
	317, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 318, 318, 225, 225,
	123, 123, 223, 223, 224, 226, 226, 218, 218, 218,
	218, 220, 220, 203, 203, 203, 228, 228, 319, 319,
	229, 229, 107, 108, 108, 109, 109, 230, 230, 232,
	231, 231, 233, 234, 234, 234, 235, 235, 236, 236,
	236, 50, 50, 50, 50, 50, 45, 45, 45, 45,
	46, 46, 46, 46, 138, 138, 138, 138, 140, 140,
	139, 139, 83, 83, 84, 84, 84, 144, 144, 145,
	145, 145, 142, 142, 143, 143, 253, 253, 253, 253,
	253, 253, 253, 237, 237, 237, 244, 244, 244, 240,
	240, 242, 242, 242, 243, 243, 243, 241, 250, 250,
	252, 252, 251, 251, 247, 247, 248, 248, 249, 249,
	249, 245, 245, 202, 202, 202, 202, 202, 254, 254,
	254, 254, 307, 307, 307, 266, 266, 213, 213, 215,
	215, 214, 214, 164, 267, 267, 275, 272, 272, 273,
	273, 299, 299, 299, 276, 276, 289, 289, 285, 285,
	286, 286, 279, 279, 291, 291, 291, 78, 211, 211,
	370, 370, 367, 294, 294, 296, 296, 300, 300, 304,
	304, 301, 301, 8, 415, 415, 415, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 418, 419, 311,
	312, 312, 312,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 5, 5, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 6, 1, 1, 1,
	1, 1, 3, 4, 3, 4, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 5, 5, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 5, 6, 3, 3,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 4, 2,
	4, 0, 1, 2, 5, 0, 3, 0, 1, 4,
	4, 2, 1, 0, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 8, 6, 8,
	6, 5, 4, 10, 2, 2, 1, 2, 2, 2,
	2, 2, 5, 6, 6, 6, 6, 6, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 8, 4,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 6, 4, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 4, 4,
	4, 6, 4, 6, 4, 4, 6, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 4, 4,
	6, 4, 6, 4, 8, 6, 4, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 5, 9, 6, 9, 8, 6, 8, 8,
	8, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 4, 0, 2,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 3, 4, 2,
	3, 4, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 3, 1, 6, 5, 4, 1, 3,
	3, 5, 0, 2, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -416, -80, -421, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -65, -68,
	-66, -67, -70, -71, -72, -73, -74, -9, -11, -69,
	-27, -28, -75, -76, -77, -78, -79, -12, -13, -14,
	-8, -32, -31, -30, 11, 12, -110, -35, 36, -41,
	-51, 231, -52, -42, 232, -53, 234, 233, 271, 235,
	384, 264, 78, 320, 321, 323, 324, 325, 326, -111,
	691, 269, 270, 237, 40, 49, 37, 38, 41, 241,
	277, 278, 240, 137, -33, -36, 10, -418, 13, 474,
	266, 265, 32, -34, 584, 90, -81, -417, 739, -253,
	-237, 24, 37, 33, -236, -232, -129, -237, 22, 20,
	9, -80, -80, -80, 14, 15, -80, -355, -357, 90,
	164, 90, -80, -58, -57, -55, -54, -56, -59, 35,
	-48, -49, -379, -47, -44, 236, 233, 281, 127, 128,
	271, 272, 273, 235, 255, 270, 274, 269, 290, -43,
	85, 37, 584, 587, -362, 232, 238, 239, 234, 475,
	130, 129, 79, -359, 379, 618, 709, -59, 711, 104,
	107, 710, 48, 245, 712, 713, 714, 625, 715, 254,
	716, 717, 718, 719, 725, 666, 726, 727, 728, 131,
	9, -80, -304, -300, 94, -293, 581, 257, 616, 428,
	617, 306, 85, 45, 26, 520, 591, 376, 379, 618,
	505, 709, 385, 320, 336, 330, 510, 511, 512, 359,
	351, 582, 619, 592, 309, 258, 294, 703, 349, 140,
	711, 313, 620, 272, 386, 387, 621, 388, 104, 323,
	425, 724, 312, 622, 722, 107, 710, 328, 83, 504,
	55, 706, 48, 267, 433, 434, 347, 240, 343, 712,
	295, 623, 594, 288, 130, 127, 731, 40, 339, 54,
	34, 721, 129, 53, 713, 155, 624, 714, 625, 390,
	366, 697, 52, 391, 273, 626, 88, 278, 586, 317,
	705, 392, 525, 340, 393, 305, 720, 237, 627, 316,
	686, 678, 679, 394, 395, 698, 371, 367, 372, 527,
	628, 417, 509, 396, 682, 683, 738, 56, 629, 630,
	699, 128, 631, 82, 715, 84, 334, 335, 632, 303,
	256, 530, 531, 419, 363, 487, 494, 495, 114, 115,
	490, 116, 496, 117, 497, 498, 499, 488, 118, 111,
	489, 500, 501, 364, 365, 119, 502, 113, 112, 491,
	493, 120, 503, 254, 39, 397, 583, 307, 62, 311,
	282, 420, 50, 369, 735, 49, 693, 532, 633, 696,
	362, 358, 484, 57, 634, 635, 636, 637, 506, 716,
	361, 333, 357, 730, 4, 300, 479, 507, 717, 66,
	239, 374, 373, 375, 289, 416, 354, 638, 639, 640,
	261, 86, 641, 344, 23, 642, 643, 398, 296, 644,
	60, 645, 646, 423, 270, 647, 58, 718, 43, 648,
	275, 732, 719, 649, 650, 651, 692, 652, 277, 653,
	400, 654, 680, 681, 399, 368, 370, 533, 284, 401,
	384, 242, 585, 655, 318, 338, 274, 723, 656, 262,
	521, 522, 523, 524, 704, 529, 528, 276, 281, 269,
	424, 263, 657, 658, 659, 660, 661, 310, 677, 662,
	663, 324, 589, 725, 485, 47, 664, 665, 666, 667,
	668, 304, 299, 418, 427, 65, 87, 381, 669, 670,
	702, 332, 329, 27, 297, 465, 467, 468, 469, 470,
	471, 466, 473, 671, 321, 59, 726, 727, 728, 291,
	729, 513, 514, 515, 516, 11, 567, 550, 578, 551,
	568, 552, 561, 553, 569, 577, 579, 534, 542, 535,
	543, 573, 556, 570, 562, 555, 554, 576, 559, 563,
	536, 544, 574, 560, 537, 545, 538, 546, 539, 547,
	572, 571, 564, 575, 540, 548, 566, 541, 549, 565,
	557, 558, 436, 736, 737, 508, 403, 131, 301, 302,
	51, 355, 283, 672, 314, 673, 345, 346, 481, 482,
	360, 331, 356, 689, 322, 687, 285, 404, 486, 271,
	674, 426, 298, 377, 123, 382, 315, 590, 526, 290,
	405, 701, 588, 517, 518, 353, 350, 292, 519, 675,
	691, 406, 246, 286, 287, 676, 688, 407, 408, 308,
	409, 410, 411, 412, 413, 415, 319, 414, 690, 684,
	685, 293, 464, 587, 327, 348, 383, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 461, 462, 463, 483, 244, -80, 244, -191,
	-300, -131, 693, 695, 183, -272, 387, -290, 389, 402,
	397, 407, 395, -281, 398, 400, 284, -402, 417, 244,
	404, 231, 390, 399, 408, 409, 308, 415, 410, 319,
	414, 293, 411, 412, 413, -386, 183, 714, 729, 140,
	352, 394, 392, 418, 693, 94, -306, 94, 95, 96,
	-293, 322, -309, 327, -294, -386, -293, 325, -80, -80,
	-311, -311, -131, -210, -146, 148, -160, -261, -163, 95,
	-151, -154, -204, -205, -206, -207, -161, -220, -259, 172,
	173, 180, 149, -216, -164, 30, 580, 476, 475, 183,
	35, 226, 72, 73, 478, 479, 151, 61, 13, 441,
	442, -162, 431, 432, 443, 437, 438, 504, 506, 507,
	508, 505, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 509, 520, 481, 482, 121, 483, 111, 113,
	112, 484, 485, 486, 349, 532, 533, 527, 530, 531,
	529, 528, 364, 365, 487, 550, 551, 555, 554, 552,
	553, 556, 559, 560, 561, 562, 563, 564, 566, 565,
	557, 558, 535, 534, 536, 537, 538, 539, 540, 541,
	543, 542, 544, 545, 546, 547, 548, 549, 567, 568,
	569, 570, 571, 573, 572, 577, 576, 574, 575, 579,
	578, 488, 489, 114, 115, 116, 117, 118, 119, 120,
	490, 493, 491, 492, 494, 495, 496, 501, 502, 497,
	498, 499, 500, 503, 375, 373, 374, 370, 369, 368,
	-90, -103, 607, 606, -104, 428, 433, 434, 436, -152,
	-153, -166, -167, -294, -300, 249, 430, 243, 178, 474,
	-155, -149, -218, 110, 96, -31, -214, 429, 439, 440,
	444, 435, 445, 593, 595, 610, 611, 613, 598, 603,
	602, 605, 521, 522, 523, 524, 525, 526, 678, 679,
	680, 681, 682, 683, 684, 685, -386, -293, 94, -158,
	-156, -200, 97, 102, 105, 106, 108, -408, 267, 345,
	346, 122, -418, 707, -157, 99, 100, 101, 124, 125,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 93, 98, 48, 403, 403, -191, -80, -80,
	-80, -80, -415, 710, 585, -230, -129, -232, -33, -31,
	-418, 10, -80, -31, -32, -30, -36, -39, 612, -38,
	-300, 103, -237, -253, 14, 65, 167, 46, 54, -235,
	-236, -34, -31, -146, 21, 25, 28, -133, 174, -146,
	-300, -133, -279, 248, -80, -80, -268, -314, 322, -270,
	418, 693, 417, -260, -273, 94, -259, -272, 416, 95,
	-356, 164, -342, -346, -294, 259, -372, 255, -191, -365,
	-364, -294, -418, -130, -289, 245, 253, 252, 141, -389,
	144, 301, 430, 243, -54, -55, -56, -272, 182, 713,
	-112, 276, 280, 91, 91, -346, -345, -344, -390, 280,
	259, -371, -363, 251, 260, -352, 252, 253, -347, 245,
	142, -390, -347, 250, 260, 255, 259, 280, 280, 131,
	280, 131, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 275, -353, 156, -353, 588, 588, -359, -390, 255,
	245, -390, -390, 251, -291, -347, 247, 29, 247, 39,
	39, -353, -353, -353, -272, 182, -353, -353, -353, -353,
	288, 288, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, 244,
	-389, -138, 414, 308, 85, -57, 290, -40, -191, -289,
	245, 246, -389, 277, -191, 227, 244, 696, -283, 164,
	17, -283, -280, 403, 401, 388, 393, -283, -283, -283,
	-283, 291, 386, -348, 245, 39, 256, 403, 291, 386,
	291, 292, 291, 292, 396, 406, 291, -305, 16, 167,
	430, 391, 395, 284, 244, 285, 246, 405, 292, -305,
	93, -284, 164, 291, 403, 397, 287, -283, -283, -312,
	-418, -296, -294, -292, 236, 25, 147, 29, 31, 150,
	183, 134, 21, 151, 41, 238, 352, 255, 182, 251,
	475, 231, 76, 593, 431, 438, 429, 437, 441, 477,
	478, 430, 389, 35, 15, 595, 32, 265, 28, 42,
	176, 233, 154, 596, 268, 30, 266, 121, 125, 598,
	24, 79, 260, 16, 253, 44, 18, 599, 600, 19,
	249, 248, 167, 245, 74, 13, 226, 33, 163, 70,
	601, 142, 137, 602, 603, 604, 605, 135, 72, 164,
	22, 733, 439, 440, 37, 694, 580, 279, 178, 77,
	63, 695, 148, 435, 606, 607, 122, 608, 126, 80,
	700, 144, 20, 75, 46, 609, 280, 610, 250, 734,
	611, 421, 612, 165, 234, 474, 73, 166, 707, 613,
	708, 243, 402, 10, 480, 36, 264, 252, 133, 71,
	445, 614, 244, 153, 247, 136, 124, 9, 141, 38,
	14, 78, 81, 442, 443, 444, 61, 132, 584, 152,
	17, 615, 422, 146, -386, 696, -312, -312, 36, 95,
	-412, -413, -414, 584, 421, 247, -294, -191, -86, 686,
	235, -87, 692, 25, 242, -136, 403, -124, 183, 714,
	697, 698, 699, 696, 400, 704, 702, 700, 291, 701,
	91, 144, 146, 147, 4, -146, 163, -201, 156, 157,
	158, 159, 160, 161, 162, 168, 167, 148, 150, 164,
	-246, 145, 169, 170, 171, 172, 173, 174, 175, 177,
	176, 178, 179, 165, 166, 182, 229, 230, -154, -154,
	-154, -154, -216, -222, -221, -418, -218, -386, -293, -300,
	-418, -418, -154, -278, -418, -151, -418, -418, -418, -418,
	-418, -225, -146, -418, -418, -422, -418, -422, -422, -422,
	-331, -418, -331, -331, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, 227, -418, -418,
	-418, -418, -418, -331, -331, -331, -331, -331, -331, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, 93, 106, 102, 105, 97, -220, 108,
	93, 93, 93, 93, -31, -32, -210, -418, -311, -399,
	-400, -194, -191, -418, 308, -294, -294, 277, 99, -235,
	-34, -31, -230, -236, -232, -31, -80, -122, -135, 67,
	68, -134, -137, 28, 42, 71, 69, 25, -419, 92,
	-419, -253, -419, 91, -39, -256, 90, 640, 670, 640,
	670, 65, 47, 93, 93, 91, 23, -231, -233, -146,
	16, -298, 4, -297, 29, -294, 93, 227, 16, -192,
	33, -191, -279, -279, 91, 94, 322, -269, -271, 419,
	421, 156, -299, -294, 93, 35, 92, 91, -191, -320,
	-323, -325, -324, -326, -321, -322, 349, 350, 183, 353,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 366,
	36, 267, 345, 346, 347, 348, 367, 368, 369, 370,
	372, 373, 374, 375, 330, 351, 582, 331, 332, 333,
	334, 335, 336, 338, 339, 342, 340, 341, 343, 344,
	-295, -294, 90, 92, 91, -330, 90, -146, -138, 244,
	-294, 245, 245, 245, -80, 474, -353, -353, -353, 275,
	21, -47, -44, -379, 20, -43, -44, 236, 127, 128,
	233, 90, -342, 90, -351, -295, -294, 90, 142, 250,
	141, -350, -347, -350, -351, -294, -218, -294, 142, 142,
	-294, -294, -265, -294, -265, -265, 25, -265, 25, -265,
	25, 99, -294, -265, 25, -265, 25, -265, 25, -265,
	25, -265, 25, 35, 82, 83, 84, 35, 86, 87,
	88, -218, -294, -294, -218, -342, -218, -191, -294, -272,
	99, 99, 99, -353, -353, 99, 93, 93, 93, -353,
	-353, 99, 93, -302, -300, 93, 93, -391, 261, 305,
	307, 99, 99, 99, 99, 35, 93, -392, 35, 721,
	720, 722, 723, 724, 93, 99, 35, 99, 35, 99,
	-294, 90, -191, -144, 295, 231, 233, 236, 80, 93,
	311, 312, 309, 314, 315, 316, 156, 48, 91, 247,
	244, -294, -285, 249, -285, -294, -301, -300, -292, -191,
	247, 385, 93, -146, -349, 16, 167, -305, -305, -283,
	-191, -349, -305, -283, -191, -283, -283, -283, -283, -305,
	-305, -305, -283, -300, -300, -191, -191, -191, -191, -191,
	-191, -191, -312, -284, -283, 696, 93, -277, 16, 80,
	-312, -312, 91, 328, 422, 423, -310, 325, -82, -294,
	93, -10, -29, -18, -17, -19, 156, -10, 91, 584,
	-184, -191, 696, 696, 696, 696, 696, 696, -146, -146,
	-146, -146, 608, -208, -410, 148, 124, 125, 122, 123,
	-163, -37, 26, 27, 25, -146, -209, -214, -216, 109,
	167, 150, 164, -246, -151, -154, -151, -151, -151, -151,
	-151, -151, 226, -151, 226, -151, -151, -151, -151, -151,
	-151, -313, -294, 93, 183, -159, -158, 108, -408, -159,
	581, 91, -221, 227, -146, -146, -386, -120, 447, 448,
	449, 450, 452, 453, 454, 457, 458, 462, 463, 446,
	464, 451, 456, 459, 460, 461, 455, 348, -146, -211,
	-210, -211, -146, -146, -223, -224, 152, -218, -146, -419,
	-419, 99, 174, -128, 28, 42, -128, -128, -128, -128,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-128, -146, -121, 446, 464, 451, 456, 459, 460, 461,
	455, 348, 465, 466, 467, 468, 469, 470, 471, 472,
	473, -121, -120, -146, -146, -146, -146, -146, -146, -88,
	-146, 134, 135, 136, -210, -146, -151, -146, -146, -146,
	-419, -146, -146, -146, -211, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -385, -384, -383, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -210, -210, -210,
	-210, -210, -146, -419, -146, -165, -149, 99, -261, 108,
	95, -146, -146, -146, -146, -146, -146, -211, -296, -301,
	-292, -293, -210, -211, -211, -210, -210, -146, -146, -146,
	-146, -146, -146, -146, -146, -419, -146, -146, -146, -146,
	-146, -253, -419, -210, 91, -401, 421, 422, 694, -303,
	280, -302, 29, -211, 93, 16, -263, 81, -294, -235,
	-235, 67, 68, 63, -132, -133, -137, -419, -38, 29,
	-255, -294, 633, 633, 66, 93, -332, -272, 376, 377,
	183, -146, -146, 91, -234, 31, 32, -191, -297, 174,
	-301, -191, -264, 280, -191, -169, -171, -172, -173, -194,
	-217, -418, -174, -31, 604, 601, 16, -184, -185, -193,
	-300, -270, -314, -269, 91, 420, 422, 423, 80, 126,
	-146, -333, 182, -361, -360, -359, -342, -344, -345, -346,
	92, -333, -338, 382, 381, -330, -330, -330, -330, -330,
	-332, -332, -332, -332, 90, 90, -330, -330, -330, -330,
	-335, 90, -335, -335, -336, -335, 90, -336, -337, 90,
	-337, -372, -146, -369, -368, -366, -367, 254, 104, 676,
	632, 584, 625, 666, 81, -364, -234, 99, -419, -144,
	-286, 249, -370, -367, -294, -294, -294, -286, 94, 93,
	94, 93, 94, 93, -113, -61, -1, 733, 734, 735,
	91, 21, -343, -342, -60, 305, -375, -376, 280, -371,
	-365, -351, 142, -350, -351, -351, -294, 91, 33, 131,
	131, 131, 131, 584, 233, 36, -287, 624, 148, 676,
	632, -342, -60, 247, 247, -313, -313, -313, 93, 93,
	-282, 729, -184, -140, 297, 156, 286, 286, 244, 299,
	244, 299, -191, 310, 313, 311, 312, 309, 314, 315,
	316, 25, 25, 25, 25, 25, 25, 298, 300, 302,
	288, -191, -191, -285, 80, -186, -191, 30, -300, 93,
	93, -191, -283, -283, -191, -283, -283, -191, -414, 329,
	-294, 363, 687, 689, -124, 421, 91, 584, 24, -125,
	24, -418, -410, 124, 125, -216, -209, -151, -154, -151,
	147, 268, -151, -151, -418, -218, -419, -296, 29, 91,
	81, -419, 172, 91, -419, -419, 91, 16, 91, -226,
	-224, 154, -146, -419, 91, -419, -419, -210, -146, -146,
	-146, -146, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -210, -419, 91, 91, 16, -317, 29, -419,
	-419, -419, -419, -419, -225, -419, 16, -419, 81, 91,
	167, 91, -419, -419, -419, 91, 91, -419, -419, 91,
	-419, 91, -419, -419, -419, -419, -419, -419, 91, -419,
	91, -419, -419, -419, 91, -419, 91, -419, -419, 91,
	-419, 91, -419, 91, -419, 91, -419, 91, -419, 91,
	-419, 91, -419, 91, -419, 91, -419, 91, -419, 91,
	-419, 91, -419, 91, -419, 91, -419, 91, -419, 91,
	-419, 91, -419, 91, -419, -419, -419, 91, -419, 91,
	-419, 91, -419, -419, 91, -419, 91, -419, 91, -419,
	91, 91, -419, 91, 91, 91, -419, 91, 91, 91,
	91, -419, -419, -419, -419, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, -419, -419, -419, -419, -419,
	-419, 91, -95, 609, -419, -419, 91, -419, 91, 91,
	91, 91, 91, -419, -418, 227, -419, -419, -419, -419,
	-419, 91, 91, 91, 91, 91, 91, -419, -419, -419,
	91, 91, -419, 91, -419, 91, -419, -400, 693, 422,
	-198, -197, -195, 78, 248, 79, -418, -302, -419, -159,
	-261, -262, -261, -203, -294, 99, 108, -237, -168, 91,
	-170, 16, -216, 92, 91, -332, -241, -247, -280, -294,
	93, 183, -334, 183, -334, 376, 377, -233, 227, -199,
	17, -202, 36, 61, -29, -418, -418, 36, 91, -187,
	-189, -188, -190, 70, 74, 76, 71, 72, 73, 77,
	-308, 29, -31, -169, -31, -418, -191, -184, -420, 16,
	81, -420, 91, 227, -271, -274, 424, 421, 427, -386,
	93, -112, 91, -359, -346, -238, -141, 44, -339, 383,
	-332, 592, -332, -341, 93, -341, 99, 99, 99, 92,
	-50, -45, -46, 37, 85, -366, -353, 93, 43, -353,
	-353, -294, 92, -234, -140, -191, 148, 80, -370, -370,
	-370, -300, -2, 732, 738, 142, 90, 388, 20, -255,
	91, 92, -219, 306, 92, -114, -294, 92, 90, -351,
	-351, -294, -418, 244, 35, 35, 676, 632, 624, -60,
	-219, -218, -294, -333, 731, 730, 92, 246, 304, -145,
	441, -142, 93, 94, -191, -191, -191, -191, -191, -191,
	236, 233, 411, -409, 317, -409, 289, 247, -184, -191,
	91, -85, 263, 258, -305, -305, 37, -191, 421, 705,
	703, -146, 147, 268, -163, -154, -120, -120, -151, -315,
	183, 349, 267, 347, 343, 363, 354, 381, 345, 382,
	340, 339, 338, -315, -313, -151, -210, -146, -146, -146,
	155, -146, 153, -146, -96, -95, -419, -419, -419, -419,
	-419, -96, -96, -96, -96, -96, -96, -96, -96, -96,
	-96, -230, -146, -146, -146, -419, 183, 349, 16, -146,
	-313, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -383, -146, -210, -146,
	-210, -146, -146, -146, -146, -146, -384, -384, -384, -384,
	-384, -210, -210, -210, -210, -146, -418, -294, -99, -98,
	-97, 659, 248, -95, -165, -99, -165, 226, -146, 226,
	226, 226, -146, -211, -296, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -195, -347, 286, -347, 286,
	-347, -265, 91, -276, 24, 16, 61, 61, -168, -199,
	-133, -169, -294, -244, 686, -250, 50, -248, -249, 51,
	-245, 52, 60, -334, -334, 174, -235, -146, -266, 80,
	-267, -275, -218, -213, -215, -214, -418, -254, -419, -294,
	-265, -267, -171, -172, -172, -171, -172, 70, 70, 70,
	75, 70, 75, 70, -188, -300, -419, -146, -303, 81,
	-169, -169, -193, -300, 174, 421, 425, 426, -359, -407,
	122, 148, 35, 80, 379, 104, -405, 182, 621, 671,
	676, 632, 625, 666, -406, 250, 141, 142, 262, 29,
	45, 92, 91, 92, 91, 92, 92, 91, -288, -287,
	-46, -45, -353, -353, 99, -386, 93, 93, 246, 30,
	-191, 80, 80, 80, -115, 736, 99, 90, -3, 85,
	-146, 90, 21, -342, -218, -377, -327, -378, -328, -329,
	-5, -6, -354, -118, 61, 104, -64, 48, 245, 716,
	717, 131, -418, 729, -369, -255, -373, -375, -191, -150,
	-418, -162, -148, -147, -149, -155, 172, 173, 267, 345,
	346, -219, -191, -139, 295, 303, 90, -143, 95, -388,
	81, 286, 379, 286, 379, 93, -411, 318, 93, -411,
	-191, -85, -50, -191, -283, -283, 37, -386, -419, -163,
	-154, -127, 167, 584, -318, 591, -330, -330, -330, -337,
	-330, 335, -330, 335, -330, -419, -419, -419, 91, -419,
	24, -419, 91, -146, 91, -96, -96, -96, -96, -96,
	-123, 480, 91, 91, -419, 90, 90, -146, -419, -419,
	-419, 91, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, 91, -419, 91, -419, 91,
	-419, 91, -419, 91, -419, 91, -419, 91, -419, 91,
	-419, 91, -419, 91, -419, 91, -419, 91, -419, 91,
	-419, 91, -419, 91, -419, 91, -419, -419, 91, -419,
	-419, -419, 91, -419, 91, -419, 91, -419, -419, -419,
	91, -316, 677, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -94, -295, -95, 641, 641, -419,
	-95, -227, 91, -151, -419, -151, -151, -151, -419, -419,
	-419, 91, -419, 91, 91, -419, 91, -419, 91, -419,
	-419, -419, -419, 91, -196, 24, -418, -196, -418, -196,
	-419, -261, -191, -199, -228, 18, -241, 55, 355, -252,
	-251, 59, 51, -249, 21, 53, 21, 34, -266, 91,
	156, -307, 91, 29, -419, -419, 91, 61, 227, -419,
	-199, -182, -181, 80, 81, -183, 80, -181, 70, 70,
	-256, 91, -264, -169, -199, -199, 227, 122, -418, -150,
	14, 93, 93, -386, -404, 720, 721, 35, 99, -353,
	-353, 142, 142, -191, 90, -332, 93, -332, 99, 99,
	35, 86, 87, 88, 35, 82, 83, 84, -191, -191,
	-191, -191, -374, 90, 21, -146, 90, 156, 92, -255,
	-255, 282, 167, -353, 714, 288, 288, -353, -353, -353,
	-117, -116, 736, 92, -419, 91, -340, 584, 587, -146,
	-156, -156, -256, 92, -382, 584, -387, -294, -294, -294,
	-294, 99, 101, -419, 582, 77, 585, -419, -332, -146,
	-146, -146, -146, -235, 93, -146, -146, 99, 99, -419,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-210, -146, -419, -179, -178, -180, 697, 122, 35, -315,
	-419, -212, 280, -102, -101, -100, 16, -419, -146, -120,
	-120, -120, -120, -146, -146, -146, -146, -146, -146, -418,
	70, 20, 18, -258, -294, 250, -418, -258, -418, -303,
	-228, -229, 19, 21, -242, 57, -240, 56, -240, -251,
	21, 21, 93, 21, 93, 142, -275, -146, -215, -302,
	61, -29, -294, -213, -294, -230, -146, 90, -146, -159,
	-199, -199, -146, -205, 504, 506, 507, 508, 505, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 509,
	520, 481, 482, 483, 111, 113, 112, 484, 485, 486,
	349, 532, 533, 527, 530, 531, 529, 528, 364, 365,
	487, 550, 551, 555, 554, 552, 553, 556, 559, 560,
	561, 562, 563, 564, 566, 565, 557, 558, 535, 534,
	536, 537, 538, 539, 540, 541, 543, 542, 544, 545,
	546, 547, 548, 549, 567, 568, 569, 570, 571, 573,
	572, 577, 576, 574, 575, 579, 578, 488, 489, 114,
	115, 116, 117, 118, 119, 120, 490, 493, 491, 494,
	495, 496, 501, 502, 497, 498, 499, 500, 503, 375,
	373, 374, 370, 369, 368, 428, 433, 434, 436, 521,
	522, 523, 524, 525, 526, 678, 679, 680, 681, 682,
	683, 684, 685, 93, 93, 90, -146, 92, 92, -256,
	-373, -61, 92, -257, -255, 99, 92, 283, -214, -418,
	93, -353, -353, -353, 99, 99, -302, -419, 91, -294,
	-406, -375, 588, 588, -419, 29, -381, -380, -296, 90,
	81, 66, 583, 586, -419, -419, -419, 91, -419, -419,
	-419, 92, 92, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, 91, -419, -178, -180, -419,
	80, -159, -230, 21, -99, 305, 307, -99, -419, -419,
	-419, -419, -419, 91, -419, -419, 91, -419, 91, -419,
	-419, -258, -419, 21, 21, 91, -419, -258, -419, -258,
	-198, -229, -109, -108, -107, 615, -146, -210, -243, 58,
	80, 126, 93, 93, 93, 14, -418, -213, 227, -307,
	-235, -255, -176, 388, -230, -419, -255, 92, 29, 92,
	738, 142, 92, -214, -126, -418, 279, -302, 93, 93,
	-116, -119, -29, 91, 156, -255, -191, 66, -146, -210,
	-419, 80, 596, 697, -93, -92, -89, 708, 734, -210,
	-95, -95, -146, -146, -146, -419, -294, 250, -419, -419,
	-109, 91, -106, -105, -294, -319, 584, 80, 126, -267,
	-255, -307, -294, 92, -419, -418, -235, 92, -239, -29,
	90, -3, 279, -327, -378, -328, -329, -5, -6, -354,
	-83, 584, -380, -358, -300, -296, 93, 99, 92, 584,
	-419, -419, -91, 150, 706, 674, -156, 226, -419, 91,
	-419, 91, -419, 91, -107, 91, 29, 589, -419, -303,
	-177, -175, -294, 638, -397, -396, 580, -407, -403, 122,
	148, 104, -405, 676, 632, 132, 133, -83, -146, 90,
	-419, -84, 294, 693, 227, -388, 585, -91, 707, 652,
	627, 652, 627, -151, -146, -146, -146, -105, -418, -419,
	91, 24, -320, -63, 649, -394, -395, 80, -398, 394,
	648, 669, 122, 93, 92, -255, 255, -301, -382, 586,
	147, -120, -419, 91, -419, 91, -419, -94, -175, 645,
	-333, -159, -395, 80, -394, 80, 15, 14, -4, 737,
	92, 296, -91, 652, 627, -146, -146, -419, -62, 30,
	-176, -393, 263, 258, 261, 36, -393, 99, -4, -419,
	-419, 649, 257, 35, 122, -159, -179, -178, -178,
}

var yyDef = [...]int{
	880, -2, -2, 882, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 880, 880, 880, 0, 880, 0,
	0, 880, -2, -2, 880, 1629, 0, 880, 0, 875,
	0, -2, 797, 803, 0, 812, -2, 0, 0, 880,
	880, 2259, 2259, 875, 0, 0, 0, 0, 0, 880,
	880, 880, 880, 1634, 1487, 50, 880, 0, 85, 86,
	830, 831, 832, 65, 0, 2257, 881, 1, 3, 71,
	75, 0, 0, 0, 58, 1496, 0, 78, 0, 0,
	884, 0, 0, 1612, 880, 880, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1614, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1514, 165, 1630, 1627, 1628, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 0, 1606, 0, 720,
	980, 0, 876, 877, 0, 786, 786, 0, 786, 786,
	786, 786, 0, 0, 0, 734, 0, 0, 0, 0,
	783, 0, 750, 751, 0, 783, 0, 757, 789, 0,
	0, 764, 786, 786, 767, 2260, 0, 2260, 2260, 1597,
	0, 780, 778, 792, 793, 42, 796, 799, 800, 801,
	802, 805, 0, 816, 819, 1623, 1624, 0, 821, 826,
	843, 844, 0, 45, 1140, 0, 1004, 0, 1016, -2,
	1027, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 0,
	0, 0, 0, 1057, 1058, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 1987, 1458, 0, 0, 1420,
	1420, 1156, 1420, 1420, 1422, 1422, 1422, 1840, 1979, 1988,
	2166, 1801, 1807, 1808, 1809, 2112, 2113, 2114, 2115, 2204,
	2205, 2209, 1903, 1796, 2179, 2180, 0, 2256, 1940, 1948,
	1949, 1973, 2075, 2189, 1819, 1968, 2038, 1900, 1922, 1923,
	2056, 2057, 1944, 1945, 1926, 2118, 2120, 2136, 2137, 2122,
	2124, 2133, 2139, 2144, 2123, 2135, 2140, 2153, 2157, 2160,
	2161, 2162, 2130, 2128, 2141, 2145, 2147, 2149, 2155, 2158,
	2131, 2129, 2142, 2146, 2148, 2150, 2156, 2159, 2117, 2121,
	2125, 2134, 2152, 2132, 2151, 2126, 2138, 2143, 2154, 2127,
	2119, 1938, 1941, 1929, 1930, 1932, 1934, 1939, 1946, 1952,
	1931, 1951, 1950, 0, 1927, 1928, 1933, 1943, 1947, 1935,
	1936, 1937, 1942, 1953, 1994, 1993, 1992, 2037, 1964, 2036,
	0, 0, 0, 0, 0, 1790, 1845, 1846, 2163, 1342,
	1343, 1344, 1345, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 1471, 1472, 44, 1139, 1593, 1422, 1422, 1422,
	1422, 1422, 1422, 1079, 1080, 1081, 1082, 1083, 1109, 1110,
	1116, 1117, 2051, 2052, 2053, 2054, 1883, 2199, 1892, 1893,
	2033, 2034, 1905, 1906, 2230, 2231, -2, -2, -2, 232,
	233, 234, 235, 236, 237, 238, 239, 0, 1844, 2177,
	2178, 228, 0, 0, 296, 293, 294, 295, 1123, 1124,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 298, 299, 2259, 0, 853, 0, 0, 0,
	0, 0, 0, 1635, 1636, 1496, 0, 1488, 1487, 63,
	0, 880, -2, 0, 0, 0, 0, 47, 0, 52,
	937, 883, 77, 76, 1536, 1539, 0, 0, 0, 59,
	1497, 67, 69, 1498, 0, 885, 886, 0, 913, 917,
	0, 0, 0, 1613, 1612, 1612, 102, 0, 0, 103,
	123, 124, 125, 0, 0, 109, 110, 1599, 1600, 43,
	0, 0, 177, 178, 0, 1097, 428, 0, 173, 0,
	421, 360, 0, 1514, 0, 0, 0, 0, 0, 880,
	0, 1607, 154, 155, 162, 163, 164, 401, 401, 401,
	575, 0, 0, 165, 165, 533, 534, 535, 0, 0,
	-2, 426, 0, 513, 0, 0, 415, 415, 419, 417,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 0, 402, 0, 573, 574, 464, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 0, 550,
	551, 0, 0, 0, 401, 401, 0, 0, 0, 0,
	401, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 1527, 0, 0, 0, -2, 0, 712, 0, 0,
	0, 1608, 1608, 0, 719, 0, 0, 0, 724, 0,
	0, 725, 0, 783, 783, 781, 782, 727, 728, 729,
	730, 786, 0, 0, 410, 411, 412, 783, 786, 0,
	786, 786, 786, 786, 783, 783, 783, 786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2260, 789, 786,
	0, 758, 0, 759, 760, 761, 762, 765, 766, 768,
	2261, 2262, 1625, 1626, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 2260, 2260, 772, 776, 1598, 798,
	804, 806, 807, 0, 0, 817, 820, 837, 49, 1891,
	825, 49, 827, 828, 829, 855, 856, 861, 0, 0,
	0, 0, 867, 868, 869, 0, 0, 872, 873, 874,
	0, 0, 0, 0, 0, 1002, 0, 0, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 1053, 1054,
	1055, 1056, 1059, 0, 1070, 0, 1072, 1467, -2, 0,
	0, 0, 1064, 1065, 0, 0, 0, 1618, 1618, 0,
	0, 0, 1459, 0, 0, 1154, 0, 1155, 1157, 1158,
	1159, 0, 1160, 1161, 890, 890, 890, 890, 890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 1618,
	1618, 0, 0, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 240, 241, 242, 243, 244, 245,
	300, 246, 247, 248, 1139, 0, 0, 0, 46, 845,
	846, 0, 963, 1618, 0, 0, 896, 0, 1633, 57,
	66, 68, 1496, 61, 1496, 0, 900, 0, 0, -2,
	-2, 901, 902, 906, 907, 908, 909, 910, 54, 2258,
	55, 0, 74, 0, 48, 0, 0, 1537, 0, 1540,
	0, 0, 0, 374, 1544, 0, 0, 1489, 1490, 1493,
	0, 914, 1985, 918, 0, 920, 921, 0, 0, 100,
	0, 979, 0, 0, 0, 111, 0, 113, 114, 0,
	0, 0, 385, 1601, 1602, 1603, -2, 408, 0, 385,
	369, 308, 309, 310, 360, 312, 360, 360, 360, 360,
	374, 374, 374, 374, 343, 344, 345, 346, 347, 0,
	0, 329, 360, 360, 360, 360, 350, 351, 352, 353,
	354, 355, 356, 357, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 362, 362, 362, 362, 362, 366, 366,
	0, 1098, 0, 389, 0, 1493, 0, 0, 1527, 1610,
	1620, 0, 0, 0, 1610, 132, 0, 0, 0, 576,
	618, 527, 564, 577, 0, 530, 531, -2, 0, 0,
	512, 0, 514, 0, 409, 0, -2, 0, 419, 0,
	415, 419, 416, 419, 407, 420, 554, 555, 556, 0,
	558, 559, 648, 949, 0, 0, 0, 0, 0, 654,
	655, 656, 0, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 0, 0, 0, 514, 0, 561, 0, 0,
	465, 466, 467, 0, 0, 470, 471, 472, 473, 0,
	0, 476, 477, 478, 966, 967, 479, 480, 505, 506,
	507, 481, 482, 483, 484, 485, 486, 487, 499, 500,
	501, 502, 503, 504, 488, 489, 490, 491, 492, 493,
	496, 0, 147, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 899, 981, 1631, 1632, 721,
	0, 0, 787, 788, 0, 413, 414, 786, 786, 731,
	773, 0, 786, 735, 774, 736, 738, 737, 739, 752,
	753, 786, 742, 784, 785, 743, 744, 745, 746, 747,
	748, 749, 769, 754, 755, 756, 790, 0, 794, 795,
	770, 771, 0, 0, 810, 811, 0, 818, 840, 838,
	839, 841, 833, 834, 835, 836, 0, 842, 0, 0,
	858, 96, 863, 864, 865, 866, 878, 871, 1141, 999,
	1000, 1001, 0, 1003, 1012, 0, 1125, 1127, 1007, 1008,
	1014, 0, -2, -2, 1011, 1005, 1017, 1136, 1137, 1138,
	0, 0, 0, 0, 0, 1021, 1025, 1030, 1031, 1032,
	1033, 1034, 0, 1035, 0, 1038, 1039, 1040, 1041, 1042,
	1043, 1049, 1435, 1436, 1437, 1068, 301, 302, 0, 1069,
	0, 0, 0, 0, 0, 0, 0, 0, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1140, 0,
	1619, 0, 0, 0, 1465, 1462, 0, 0, 0, 1421,
	1423, 0, 0, 0, 891, 892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 0, 0, 1438, 0, 0, 0, 0, 0, 1458,
	0, 1074, 1075, 1076, 0, 0, 0, 0, 0, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1347, 1348, 1349,
	41, 0, 0, 0, 0, 0, 0, 0, 1469, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1371, 0, 0, 0, 0,
	0, 0, 1591, 0, 0, 848, 849, 851, 0, 983,
	0, 964, 0, 0, 854, 0, 895, 0, 898, 60,
	62, 904, 905, 0, 922, 911, 903, 56, 51, 0,
	0, 941, 1538, 1541, 1542, 374, 1564, 0, 383, 383,
	380, 1499, 1500, 0, 1492, 1494, 1495, 79, 919, 915,
	0, 997, 0, 0, 978, 0, 925, 927, 928, 929,
	961, 0, 932, 933, 0, 0, 0, 0, 0, 98,
	980, 104, 0, 112, 0, 0, 117, 118, 105, 106,
	107, 108, 0, 607, -2, 460, 179, 181, 182, 183,
	174, -2, 372, 370, 371, 311, 374, 374, 337, 338,
	339, 340, 341, 342, 0, 0, 330, 331, 332, 333,
	322, 0, 323, 324, 325, 364, 0, 326, 327, 0,
	328, 427, 0, 1501, 390, 391, 393, 401, 0, 396,
	397, 0, 401, 401, 0, 422, 423, 0, 1493, 1518,
	0, 0, 0, 1621, 1620, 1620, 1620, 0, 167, 168,
	169, 170, 171, 172, 643, 0, 0, 619, 641, 642,
	165, 0, 0, 175, 516, 515, 0, 675, 0, 425,
	0, 0, 419, 419, 404, 405, 557, 0, 0, 650,
	651, 652, 653, 0, 0, 0, 543, 454, 0, 544,
	545, 514, 516, 0, 0, 385, 468, 469, 474, 475,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 593, 594, 597, 599, 518, 603,
	605, 596, 598, 600, 518, 604, 606, 1515, 1516, 1517,
	0, 0, 713, 0, 0, 451, 94, 1609, 718, 722,
	723, 783, 741, 775, 783, 733, 740, 763, 808, 809,
	814, 822, 823, 824, 862, 0, 0, 0, 0, 870,
	0, 0, 1013, 1126, 1128, 1015, 1018, 0, 1022, 1026,
	0, 0, 0, 0, 0, 1073, 1071, 1469, 0, 0,
	0, 1122, 0, 0, 1144, 1145, 0, 0, 0, 0,
	1463, 0, 0, 1152, 0, 1424, 1103, 0, 0, 0,
	0, 0, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
	1103, 1103, 1487, 1179, 0, 0, 0, 0, 0, 1184,
	1185, 1186, 1187, 1188, 0, 1190, 0, 1191, 0, 0,
	0, 0, 1198, 1199, 1201, 0, 0, 1204, 1205, 0,
	1207, 0, 1209, 1210, 1211, 1212, 1213, 1214, 0, 1216,
	0, 1218, 1219, 1220, 0, 1222, 0, 1224, 1225, 0,
	1227, 0, 1229, 0, 1232, 0, 1235, 0, 1238, 0,
	1241, 0, 1244, 0, 1247, 0, 1250, 0, 1253, 0,
	1256, 0, 1259, 0, 1262, 0, 1265, 0, 1268, 0,
	1271, 0, 1274, 0, 1277, 1278, 1279, 0, 1281, 0,
	1283, 0, 1286, 1287, 0, 1289, 0, 1292, 0, 1295,
	0, 0, 1296, 0, 0, 0, 1300, 0, 0, 0,
	0, 1309, 1310, 1311, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 1324, 1325, 1326, 1327,
	1328, 0, 1330, 0, 1104, 0, 0, 1104, 0, 0,
	0, 0, 0, 1142, 1618, 0, 1425, 1426, 1427, 1428,
	1429, 0, 0, 0, 0, 0, 0, 1369, 1370, 1372,
	0, 0, 1375, 0, 1377, 0, 1592, 847, 850, 852,
	935, 984, 985, 0, 0, 0, 0, 965, 1617, 893,
	894, 897, 943, 0, 1473, 0, 0, 922, 997, 0,
	923, 0, 53, 938, 0, 1546, 1545, 1558, 1571, 383,
	383, 377, 378, 384, 379, 381, 382, 1491, 0, 1496,
	0, 1585, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 968, 0, 0, 971, 0, 0, 0,
	0, 962, 933, 0, 934, 0, -2, 0, 0, 92,
	93, 0, 0, 0, 115, 116, 0, 0, 122, 386,
	387, 156, 165, 462, 180, 435, 0, 0, 307, 373,
	334, 335, 336, 0, 358, 0, 0, 0, 0, 456,
	128, 1505, 1504, 401, 401, 392, 0, 395, 0, 0,
	0, 1622, 361, 424, 0, 146, 0, 0, 0, 0,
	0, 152, 613, 0, 0, 620, 0, 0, 0, 525,
	0, 536, 537, 0, 647, -2, 709, 389, 0, 403,
	406, 950, 0, 0, 538, 0, 541, 542, 455, 516,
	547, 548, 562, 549, 497, 498, 495, 0, 0, 1528,
	1529, 1534, 1532, 1533, 133, 583, 585, 589, 584, 588,
	0, 0, 0, 520, 0, 520, 581, 0, 451, 1501,
	0, 717, 452, 453, 786, 786, 857, 97, 0, 860,
	0, 0, 0, 0, 1019, 1023, 1036, 1037, 1430, 1456,
	360, 360, 1443, 360, 366, 1446, 360, 1448, 360, 1451,
	360, 1454, 1455, 0, 0, 1066, 0, 0, 0, 0,
	1151, 1466, 0, 0, 1162, 1102, 1103, 1103, 1103, 1103,
	1103, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1460, 0, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 145, 0, 0,
	0, 0, 0, 0, 1380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 1101, 0, 1105,
	1106, 0, 0, 1332, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 1470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 986, 993, 0, 993, 0,
	993, 0, 0, 0, 1604, 1605, 1474, 1475, 997, 1476,
	912, 924, 942, 1564, 0, 1557, 0, -2, 1566, 0,
	0, 0, 1572, 375, 376, 916, 80, 998, 83, 0,
	1585, 1594, 0, 1582, 1587, 1589, 0, 0, 0, 1578,
	0, 997, 926, 957, 959, 0, 954, 969, 970, 972,
	0, 974, 0, 976, 977, 937, 931, 0, 100, 0,
	997, 997, 99, 0, 982, 119, 120, 121, 461, 184,
	189, 0, 0, 0, 194, 0, 196, 0, 0, 0,
	201, 202, 401, 401, 436, 0, 304, 306, 0, 0,
	187, 374, 0, 374, 0, 365, 367, 0, 437, 457,
	1502, 1503, 0, 0, 394, 398, 399, 400, 0, 1611,
	148, 0, 0, 0, 616, 0, 644, 0, 0, 0,
	0, 0, 0, 176, 517, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 0, 401, 0, 0, 0, 401,
	401, 401, 0, 701, 388, 0, 0, 672, 669, 539,
	0, 218, 219, 226, 227, 229, 0, 0, 0, 0,
	0, 546, 937, 1519, 1520, 1521, 0, 1531, 1535, 136,
	0, 0, 0, 0, 591, 595, 601, 0, 519, 602,
	714, 715, 716, 95, 726, 732, 859, 879, 1006, 1020,
	1024, 0, 0, 0, 0, 1457, 1441, 374, 1444, 1445,
	1447, 1449, 1450, 1452, 1453, 1062, 1063, 1067, 0, 1148,
	0, 1150, 0, 1464, 0, 1163, 1164, 1165, 1166, 1167,
	1496, 0, 0, 0, 1182, 0, 0, 0, 1193, 1192,
	1194, 0, 1196, 1197, 1202, 1203, 1206, 1208, 1215, 1217,
	1221, 1223, 1226, 1228, 1230, 0, 1233, 0, 1236, 0,
	1239, 0, 1242, 0, 1245, 0, 1248, 0, 1251, 0,
	1254, 0, 1257, 0, 1260, 0, 1263, 0, 1266, 0,
	1269, 0, 1272, 0, 1275, 0, 1280, 1282, 0, 1285,
	1288, 1290, 0, 1293, 0, 1297, 0, 1299, 1301, 1302,
	0, 0, 0, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1329, 0, 1095, 1331, 1107, 1108, 1113,
	1334, 0, 0, 0, 1337, 0, 0, 0, 1341, 1143,
	1352, 0, 1357, 0, 0, 1363, 0, 1367, 0, 1373,
	1374, 1376, 1378, 0, 0, 0, 0, 0, 0, 0,
	963, 944, 64, 1476, 1480, 0, 1551, 1549, 1549, 1559,
	1560, 0, 0, 1567, 0, 0, 0, 0, 84, 0,
	0, 1573, 0, 0, 1590, 0, 0, 0, 0, 101,
	1487, 951, 958, 0, 0, 952, 0, 953, 973, 975,
	930, 0, 997, 997, 90, 91, 0, 190, 0, 192,
	0, 195, 197, 198, 199, 205, 206, 207, 200, 0,
	0, 303, 305, 0, 0, 348, 359, 349, 0, 0,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 937, 149,
	150, 151, 608, 0, 618, 0, 939, 0, 611, 0,
	528, 0, 0, 0, 401, 401, 401, 0, 0, 0,
	0, 686, 0, 0, 649, 0, 657, 0, 0, 0,
	230, 231, 0, 1530, 582, 0, 134, 135, 0, 0,
	587, 521, 522, 1060, 0, 0, 0, 1061, 1442, 0,
	0, 0, 0, 0, 1461, 0, 0, 0, 0, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 638, 639, 0, 1381,
	1100, 1487, 0, 1104, 1114, 1115, 0, 1104, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 945, 946, 0, 0, 0, 983,
	1480, 1485, 0, 0, 1554, 0, 1547, 1550, 1548, 1561,
	0, 0, 1568, 0, 1570, 0, 1595, 1596, 1588, 1583,
	0, 1577, 1580, 1582, 1579, 1496, 955, 0, 960, 0,
	1487, 89, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 204, 0, 0, 363, 368, 0,
	0, 0, 609, 0, 940, 621, 612, 0, 699, 0,
	703, 0, 0, 0, 706, 707, 708, 685, 0, 689,
	429, 673, 670, 671, 540, 0, 137, 138, 0, 0,
	0, 1431, 0, 1434, 1146, 1149, 1147, 0, 1178, 1180,
	1181, 1439, 1440, 1195, 1231, 1234, 1237, 1240, 1243, 1246,
	1249, 1252, 1255, 1258, 1261, 1264, 1267, 1270, 1273, 1276,
	1284, 1291, 1294, 1298, 1303, 0, 1306, 0, 0, 1307,
	0, 640, 1091, 0, 0, 1111, 1112, 0, 1336, 1338,
	1339, 1340, 1353, 0, 1358, 1359, 0, 1364, 0, 1368,
	1379, 0, 988, 995, 996, 0, 991, 0, 992, 0,
	936, 1485, 82, 1486, 1483, 0, 1481, 1478, 1543, 0,
	1552, 1553, 1562, 1563, 1569, 0, 0, 1582, 0, 1576,
	87, 0, 0, 0, 1496, 191, 0, 210, 0, 617,
	0, 620, 610, 697, 698, 0, 710, 702, 704, 705,
	687, -2, 1522, 0, 0, 0, 590, 1432, 0, 0,
	1308, 0, 636, 637, 1099, 1092, 0, 1077, 1078, 1096,
	1333, 1335, 0, 0, 0, 987, 947, 948, 989, 990,
	81, 0, 1482, 1119, 0, 1477, 0, 1555, 1556, 1586,
	0, 1575, 1581, 956, 963, 0, 88, 442, 435, 1522,
	0, 0, 0, 690, 691, 692, 693, 694, 695, 696,
	579, 1524, 139, 140, 0, 509, 510, 511, 133, 0,
	1153, 1304, 1093, 0, 0, 0, 0, 0, 1354, 0,
	1360, 0, 1365, 0, 1484, 0, 0, 1479, 1584, 622,
	0, 624, 0, -2, 430, 443, 0, 185, 211, 212,
	0, 0, 215, 216, 217, 208, 209, 129, 0, 0,
	711, 0, 1525, 1526, 0, 136, 0, 0, 1084, 1085,
	1086, 1087, 1089, 0, 0, 0, 0, 1120, 1097, 623,
	0, 0, 385, 0, 633, 431, 432, 0, 438, 439,
	440, 441, 213, 214, 645, 0, 0, 508, 586, 1433,
	0, 0, 1355, 0, 1361, 0, 1366, 0, 625, 626,
	634, 0, 433, 0, 434, 0, 0, 0, 614, 0,
	645, 1523, 1094, 1088, 1090, 0, 0, 1118, 0, 635,
	631, 444, 446, 447, 0, 0, 445, 646, 615, 1356,
	1362, 0, 448, 449, 450, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 149, 3, 3, 3, 177, 169, 3,
	90, 92, 174, 172, 91, 173, 227, 175, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 739,
	157, 156, 158, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 179, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 145, 3, 180,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	146, 147, 148, 150, 151, 152, 153, 154, 155, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 170,
	171, 176, 178, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:631
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:632
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:636
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:675
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:681
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:687
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:693
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:697
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:703
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:709
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:715
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:734
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:738
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:744
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:818
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:884
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:897
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:911
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:915
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:945
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:949
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:983
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:993
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1003
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1016
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1022
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1028
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1038
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1042
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1046
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1056
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1060
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1064
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1070
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1074
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1080
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1084
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1090
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1094
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1098
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1122
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1126
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1130
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1136
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1142
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1149
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1158
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1162
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1169
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1173
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1178
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1188
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1193
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1198
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1204
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1215
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1224
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1230
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1246
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1253
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1260
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1265
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1270
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1275
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1282
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1289
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1300
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1311
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1317
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1321
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1325
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1343
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1347
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1353
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1373
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1377
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1383
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1387
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1393
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1403
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1408
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1441
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1450
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1481
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1535
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1555
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1559
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1563
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1569
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1573
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1578
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1582
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1587
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1592
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1612
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1626
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1663
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1918
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1922
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1926
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1932
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1966
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1970
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1974
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1978
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2227
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2256
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2260
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2266
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2291
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2338
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2342
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2347
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2361
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2370
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2376
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2380
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2386
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2395
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2431
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2439
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2443
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2514
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2524
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2528
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2534
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2538
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2544
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2548
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2554
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2560
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2572
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2585
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2591
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2597
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2603
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2611
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2616
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2620
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2626
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2632
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2638
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2646
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2650
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2673
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2686
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2695
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2701
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2715
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2719
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2900
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2904
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2913
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2918
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2931
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2935
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2944
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2948
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2960
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2966
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2970
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3106
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3302
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3358
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3366
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3379
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3386
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3397
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3406
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3414
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3423
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3430
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3442
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3451
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3462
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3466
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3480
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3484
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3490
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3496
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3502
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3506
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3512
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3516
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3522
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3528
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3534
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3540
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3546
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3554
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3558
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3564
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3570
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3576
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3580
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3584
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3590
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3594
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3599
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3603
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3608
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3612
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3690
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3694
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3698
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3702
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3707
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3721
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3725
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3736
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3750
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3755
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3760
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3765
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3770
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3775
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3780
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3786
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3792
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3796
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3802
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3807
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3811
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3816
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3821
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3826
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3831
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3836
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3841
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3848
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3855
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3862
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3870
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3874
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3880
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3886
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3892
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3898
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3904
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3910
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3922
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3944
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3948
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4182
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4230
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4250
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4254
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4258
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4268
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4272
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4282
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4288
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4346
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4359
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4365
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4375
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4379
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4383
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4390
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4396
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4400
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4405
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4410
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4416
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4422
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4427
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4431
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4435
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4439
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4443
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4448
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4452
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4456
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4460
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4480
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4488
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4497
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4527
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4537
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4543
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4547
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4553
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4559
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4563
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4567
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4571
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4597
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4601
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4609
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4619
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4657
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4678
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4696
		{
			setAllowComments(yylex, true)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4700
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4706
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4710
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4716
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4720
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4729
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4742
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4746
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4756
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4770
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4779
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4785
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4789
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4794
		{
			yyVAL.strs = nil
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4808
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4844
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4848
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4854
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4858
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4862
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4866
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4871
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4879
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4886
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4891
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4895
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4901
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4907
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4911
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4921
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4925
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4929
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4933
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4939
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4943
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4949
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4953
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4962
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4971
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4977
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4981
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4987
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4991
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4997
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5001
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5005
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5009
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5015
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5019
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5032
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5036
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5040
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5044
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5050
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5052
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5056
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5062
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5067
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5072
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5080
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5093
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5097
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5101
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5107
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5113
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5121
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5125
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5131
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5135
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5145
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5149
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5155
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5159
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5165
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5174
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5180
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5184
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5190
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5194
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5198
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5202
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5206
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5210
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5215
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5219
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5223
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5227
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonModifier
//line sql.y:5286
		{
			yyLOCAL = Any
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonModifier
//line sql.y:5290
		{
			yyLOCAL = Any
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonModifier
//line sql.y:5294
		{
			yyLOCAL = All
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: yyDollar[3].anyAllSomeUnion(), Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5368
		{
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5467
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5507
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5511
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5515
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5545
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5549
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5555
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5559
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5565
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5569
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5573
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5579
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5583
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5590
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5594
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5598
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5602
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5606
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5612
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5616
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5620
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5624
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5628
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5632
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5636
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5645
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5651
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5655
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5660
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5664
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5669
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5673
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5679
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5685
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5689
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5695
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5699
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5711
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5717
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5721
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5727
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5731
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5737
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5741
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5746
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5753
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5759
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5763
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5769
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5775
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5779
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5785
		{
			yyVAL.str = ""
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5789
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5795
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5799
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5806
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5810
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5814
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5818
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5824
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5828
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5832
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5836
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5840
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5844
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5848
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5854
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5858
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5862
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5869
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5875
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6814
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6818
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6822
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6826
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6865
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6871
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6875
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6879
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6883
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6887
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6891
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6895
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6899
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6903
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6915
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6953
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6957
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6961
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6965
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6969
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6973
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6977
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6985
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6989
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6993
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6997
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7001
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7005
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7009
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7013
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7017
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7021
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7031
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7035
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7039
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7049
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7053
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7057
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7061
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7065
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7071
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7075
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7079
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7083
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7087
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7093
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7097
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7101
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7111
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7115
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7121
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7125
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7129
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7133
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7137
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7143
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7147
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7151
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7155
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7159
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7163
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7167
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7175
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7179
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7185
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7189
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7198
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7203
		{
			yyVAL.str = string("")
		}
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7207
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7213
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7217
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7223
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7232
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7238
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7242
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7246
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7250
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7256
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7260
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7266
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7275
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7279
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7288
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7297
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7307
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7313
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7319
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7323
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7332
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7341
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7347
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7353
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7357
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7363
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7368
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7372
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7376
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7385
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7391
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7395
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7399
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7408
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7412
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7416
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7420
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7427
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7431
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7435
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7439
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7445
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7449
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7453
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7457
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7462
		{
			yyVAL.str = ""
		}
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7466
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7470
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7474
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7479
		{
			yyVAL.str = ""
		}
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7483
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7498
		{
			yyVAL.str = ""
		}
	case 1523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7502
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7507
		{
			yyVAL.str = "cascaded"
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7524
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7530
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7536
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7542
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7551
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7555
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7560
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7564
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7570
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7574
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7578
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7582
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7586
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7590
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7594
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7600
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7604
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7608
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7613
		{
			yyVAL.str = ""
		}
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7617
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7621
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7626
		{
			yyVAL.str = ""
		}
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7630
		{
			yyVAL.str = " header"
		}
	case 1551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7635
		{
			yyVAL.str = ""
		}
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7639
		{
			yyVAL.str = " manifest on"
		}
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7643
		{
			yyVAL.str = " manifest off"
		}
	case 1554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7648
		{
			yyVAL.str = ""
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7652
		{
			yyVAL.str = " overwrite on"
		}
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7656
		{
			yyVAL.str = " overwrite off"
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7662
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7667
		{
			yyVAL.str = ""
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7671
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7677
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7681
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7687
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7691
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7696
		{
			yyVAL.str = ""
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7700
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7706
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7710
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7716
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7720
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7724
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7729
		{
			yyVAL.str = ""
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7733
		{
			yyVAL.str = " optionally"
		}
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7746
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7750
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7754
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7758
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7762
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7768
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7772
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7776
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1581:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7780
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7789
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7793
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7802
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7808
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7812
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7818
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7822
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7828
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7832
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7837
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7847
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7851
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7857
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7864
		{
			yyVAL.str = "charset"
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7874
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7878
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7882
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7891
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7893
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7898
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7901
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7906
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7911
		{
			yyVAL.empty = struct{}{}
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7913
		{
			yyVAL.empty = struct{}{}
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7915
		{
			yyVAL.empty = struct{}{}
		}
	case 1617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7919
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7928
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7935
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7939
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7945
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7949
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7956
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7962
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7966
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7972
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7976
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7983
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7989
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7995
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7999
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8003
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8652
		{
		}
	case 2258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8657
		{
		}
	case 2259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8661
		{
			skipToEnd(yylex)
		}
	case 2260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8666
		{
			skipToEnd(yylex)
		}
	case 2261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8670
		{
			skipToEnd(yylex)
		}
	case 2262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8674
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
