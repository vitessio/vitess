// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BITNUM = 57442
const BIT_LITERAL = 57443
const COMPRESSION = 57444
const JSON_PRETTY = 57445
const JSON_STORAGE_SIZE = 57446
const JSON_STORAGE_FREE = 57447
const JSON_CONTAINS = 57448
const JSON_CONTAINS_PATH = 57449
const JSON_EXTRACT = 57450
const JSON_KEYS = 57451
const JSON_OVERLAPS = 57452
const JSON_SEARCH = 57453
const JSON_VALUE = 57454
const EXTRACT = 57455
const NULL = 57456
const TRUE = 57457
const FALSE = 57458
const OFF = 57459
const DISCARD = 57460
const IMPORT = 57461
const ENABLE = 57462
const DISABLE = 57463
const TABLESPACE = 57464
const VIRTUAL = 57465
const STORED = 57466
const BOTH = 57467
const LEADING = 57468
const TRAILING = 57469
const EMPTY_FROM_CLAUSE = 57470
const LOWER_THAN_CHARSET = 57471
const CHARSET = 57472
const UNIQUE = 57473
const KEY = 57474
const EXPRESSION_PREC_SETTER = 57475
const OR = 57476
const XOR = 57477
const AND = 57478
const NOT = 57479
const BETWEEN = 57480
const CASE = 57481
const WHEN = 57482
const THEN = 57483
const ELSE = 57484
const END = 57485
const LE = 57486
const GE = 57487
const NE = 57488
const NULL_SAFE_EQUAL = 57489
const IS = 57490
const LIKE = 57491
const REGEXP = 57492
const RLIKE = 57493
const IN = 57494
const SHIFT_LEFT = 57495
const SHIFT_RIGHT = 57496
const DIV = 57497
const MOD = 57498
const UNARY = 57499
const COLLATE = 57500
const BINARY = 57501
const UNDERSCORE_ARMSCII8 = 57502
const UNDERSCORE_ASCII = 57503
const UNDERSCORE_BIG5 = 57504
const UNDERSCORE_BINARY = 57505
const UNDERSCORE_CP1250 = 57506
const UNDERSCORE_CP1251 = 57507
const UNDERSCORE_CP1256 = 57508
const UNDERSCORE_CP1257 = 57509
const UNDERSCORE_CP850 = 57510
const UNDERSCORE_CP852 = 57511
const UNDERSCORE_CP866 = 57512
const UNDERSCORE_CP932 = 57513
const UNDERSCORE_DEC8 = 57514
const UNDERSCORE_EUCJPMS = 57515
const UNDERSCORE_EUCKR = 57516
const UNDERSCORE_GB18030 = 57517
const UNDERSCORE_GB2312 = 57518
const UNDERSCORE_GBK = 57519
const UNDERSCORE_GEOSTD8 = 57520
const UNDERSCORE_GREEK = 57521
const UNDERSCORE_HEBREW = 57522
const UNDERSCORE_HP8 = 57523
const UNDERSCORE_KEYBCS2 = 57524
const UNDERSCORE_KOI8R = 57525
const UNDERSCORE_KOI8U = 57526
const UNDERSCORE_LATIN1 = 57527
const UNDERSCORE_LATIN2 = 57528
const UNDERSCORE_LATIN5 = 57529
const UNDERSCORE_LATIN7 = 57530
const UNDERSCORE_MACCE = 57531
const UNDERSCORE_MACROMAN = 57532
const UNDERSCORE_SJIS = 57533
const UNDERSCORE_SWE7 = 57534
const UNDERSCORE_TIS620 = 57535
const UNDERSCORE_UCS2 = 57536
const UNDERSCORE_UJIS = 57537
const UNDERSCORE_UTF16 = 57538
const UNDERSCORE_UTF16LE = 57539
const UNDERSCORE_UTF32 = 57540
const UNDERSCORE_UTF8 = 57541
const UNDERSCORE_UTF8MB4 = 57542
const UNDERSCORE_UTF8MB3 = 57543
const INTERVAL = 57544
const WINDOW_EXPR = 57545
const JSON_EXTRACT_OP = 57546
const JSON_UNQUOTE_EXTRACT_OP = 57547
const CREATE = 57548
const ALTER = 57549
const DROP = 57550
const RENAME = 57551
const ANALYZE = 57552
const ADD = 57553
const FLUSH = 57554
const CHANGE = 57555
const MODIFY = 57556
const DEALLOCATE = 57557
const REVERT = 57558
const SCHEMA = 57559
const TABLE = 57560
const INDEX = 57561
const VIEW = 57562
const TO = 57563
const IGNORE = 57564
const IF = 57565
const PRIMARY = 57566
const COLUMN = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const KEY_BLOCK_SIZE = 57570
const CHECK = 57571
const INDEXES = 57572
const ACTION = 57573
const CASCADE = 57574
const CONSTRAINT = 57575
const FOREIGN = 57576
const NO = 57577
const REFERENCES = 57578
const RESTRICT = 57579
const SHOW = 57580
const DESCRIBE = 57581
const EXPLAIN = 57582
const DATE = 57583
const ESCAPE = 57584
const REPAIR = 57585
const OPTIMIZE = 57586
const TRUNCATE = 57587
const COALESCE = 57588
const EXCHANGE = 57589
const REBUILD = 57590
const PARTITIONING = 57591
const REMOVE = 57592
const PREPARE = 57593
const EXECUTE = 57594
const MAXVALUE = 57595
const PARTITION = 57596
const REORGANIZE = 57597
const LESS = 57598
const THAN = 57599
const PROCEDURE = 57600
const TRIGGER = 57601
const VINDEX = 57602
const VINDEXES = 57603
const DIRECTORY = 57604
const NAME = 57605
const UPGRADE = 57606
const STATUS = 57607
const VARIABLES = 57608
const WARNINGS = 57609
const CASCADED = 57610
const DEFINER = 57611
const OPTION = 57612
const SQL = 57613
const UNDEFINED = 57614
const SEQUENCE = 57615
const MERGE = 57616
const TEMPORARY = 57617
const TEMPTABLE = 57618
const INVOKER = 57619
const SECURITY = 57620
const FIRST = 57621
const AFTER = 57622
const LAST = 57623
const VITESS_MIGRATION = 57624
const CANCEL = 57625
const RETRY = 57626
const COMPLETE = 57627
const CLEANUP = 57628
const THROTTLE = 57629
const UNTHROTTLE = 57630
const EXPIRE = 57631
const RATIO = 57632
const BEGIN = 57633
const START = 57634
const TRANSACTION = 57635
const COMMIT = 57636
const ROLLBACK = 57637
const SAVEPOINT = 57638
const RELEASE = 57639
const WORK = 57640
const BIT = 57641
const TINYINT = 57642
const SMALLINT = 57643
const MEDIUMINT = 57644
const INT = 57645
const INTEGER = 57646
const BIGINT = 57647
const INTNUM = 57648
const REAL = 57649
const DOUBLE = 57650
const FLOAT_TYPE = 57651
const DECIMAL_TYPE = 57652
const NUMERIC = 57653
const TIME = 57654
const TIMESTAMP = 57655
const DATETIME = 57656
const YEAR = 57657
const CHAR = 57658
const VARCHAR = 57659
const BOOL = 57660
const CHARACTER = 57661
const VARBINARY = 57662
const NCHAR = 57663
const TEXT = 57664
const TINYTEXT = 57665
const MEDIUMTEXT = 57666
const LONGTEXT = 57667
const BLOB = 57668
const TINYBLOB = 57669
const MEDIUMBLOB = 57670
const LONGBLOB = 57671
const JSON = 57672
const JSON_SCHEMA_VALID = 57673
const JSON_SCHEMA_VALIDATION_REPORT = 57674
const ENUM = 57675
const GEOMETRY = 57676
const POINT = 57677
const LINESTRING = 57678
const POLYGON = 57679
const GEOMCOLLECTION = 57680
const GEOMETRYCOLLECTION = 57681
const MULTIPOINT = 57682
const MULTILINESTRING = 57683
const MULTIPOLYGON = 57684
const ASCII = 57685
const UNICODE = 57686
const NULLX = 57687
const AUTO_INCREMENT = 57688
const APPROXNUM = 57689
const SIGNED = 57690
const UNSIGNED = 57691
const ZEROFILL = 57692
const CODE = 57693
const COLLATION = 57694
const COLUMNS = 57695
const DATABASES = 57696
const ENGINES = 57697
const EVENT = 57698
const EXTENDED = 57699
const FIELDS = 57700
const FULL = 57701
const FUNCTION = 57702
const GTID_EXECUTED = 57703
const KEYSPACES = 57704
const OPEN = 57705
const PLUGINS = 57706
const PRIVILEGES = 57707
const PROCESSLIST = 57708
const SCHEMAS = 57709
const TABLES = 57710
const TRIGGERS = 57711
const USER = 57712
const VGTID_EXECUTED = 57713
const VITESS_KEYSPACES = 57714
const VITESS_METADATA = 57715
const VITESS_MIGRATIONS = 57716
const VITESS_REPLICATION_STATUS = 57717
const VITESS_SHARDS = 57718
const VITESS_TABLETS = 57719
const VITESS_TARGET = 57720
const VSCHEMA = 57721
const VITESS_THROTTLED_APPS = 57722
const NAMES = 57723
const GLOBAL = 57724
const SESSION = 57725
const ISOLATION = 57726
const LEVEL = 57727
const READ = 57728
const WRITE = 57729
const ONLY = 57730
const REPEATABLE = 57731
const COMMITTED = 57732
const UNCOMMITTED = 57733
const SERIALIZABLE = 57734
const CURRENT_TIMESTAMP = 57735
const DATABASE = 57736
const CURRENT_DATE = 57737
const NOW = 57738
const CURRENT_TIME = 57739
const LOCALTIME = 57740
const LOCALTIMESTAMP = 57741
const CURRENT_USER = 57742
const UTC_DATE = 57743
const UTC_TIME = 57744
const UTC_TIMESTAMP = 57745
const DAY = 57746
const DAY_HOUR = 57747
const DAY_MICROSECOND = 57748
const DAY_MINUTE = 57749
const DAY_SECOND = 57750
const HOUR = 57751
const HOUR_MICROSECOND = 57752
const HOUR_MINUTE = 57753
const HOUR_SECOND = 57754
const MICROSECOND = 57755
const MINUTE = 57756
const MINUTE_MICROSECOND = 57757
const MINUTE_SECOND = 57758
const MONTH = 57759
const QUARTER = 57760
const SECOND = 57761
const SECOND_MICROSECOND = 57762
const YEAR_MONTH = 57763
const WEEK = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const SEPARATOR = 57770
const TIMESTAMPADD = 57771
const TIMESTAMPDIFF = 57772
const WEIGHT_STRING = 57773
const LTRIM = 57774
const RTRIM = 57775
const TRIM = 57776
const JSON_ARRAY = 57777
const JSON_OBJECT = 57778
const JSON_QUOTE = 57779
const JSON_DEPTH = 57780
const JSON_TYPE = 57781
const JSON_LENGTH = 57782
const JSON_VALID = 57783
const JSON_ARRAY_APPEND = 57784
const JSON_ARRAY_INSERT = 57785
const JSON_INSERT = 57786
const JSON_MERGE = 57787
const JSON_MERGE_PATCH = 57788
const JSON_MERGE_PRESERVE = 57789
const JSON_REMOVE = 57790
const JSON_REPLACE = 57791
const JSON_SET = 57792
const JSON_UNQUOTE = 57793
const COUNT = 57794
const AVG = 57795
const MAX = 57796
const MIN = 57797
const SUM = 57798
const GROUP_CONCAT = 57799
const BIT_AND = 57800
const BIT_OR = 57801
const BIT_XOR = 57802
const STD = 57803
const STDDEV = 57804
const STDDEV_POP = 57805
const STDDEV_SAMP = 57806
const VAR_POP = 57807
const VAR_SAMP = 57808
const VARIANCE = 57809
const REGEXP_INSTR = 57810
const REGEXP_LIKE = 57811
const REGEXP_REPLACE = 57812
const REGEXP_SUBSTR = 57813
const ExtractValue = 57814
const UpdateXML = 57815
const GET_LOCK = 57816
const RELEASE_LOCK = 57817
const RELEASE_ALL_LOCKS = 57818
const IS_FREE_LOCK = 57819
const IS_USED_LOCK = 57820
const LOCATE = 57821
const POSITION = 57822
const MATCH = 57823
const AGAINST = 57824
const BOOLEAN = 57825
const LANGUAGE = 57826
const WITH = 57827
const QUERY = 57828
const EXPANSION = 57829
const WITHOUT = 57830
const VALIDATION = 57831
const UNUSED = 57832
const ARRAY = 57833
const BYTE = 57834
const CUME_DIST = 57835
const DESCRIPTION = 57836
const DENSE_RANK = 57837
const EMPTY = 57838
const EXCEPT = 57839
const FIRST_VALUE = 57840
const GROUPING = 57841
const GROUPS = 57842
const JSON_TABLE = 57843
const LAG = 57844
const LAST_VALUE = 57845
const LATERAL = 57846
const LEAD = 57847
const NTH_VALUE = 57848
const NTILE = 57849
const OF = 57850
const OVER = 57851
const PERCENT_RANK = 57852
const RANK = 57853
const RECURSIVE = 57854
const ROW_NUMBER = 57855
const SYSTEM = 57856
const WINDOW = 57857
const ACTIVE = 57858
const ADMIN = 57859
const AUTOEXTEND_SIZE = 57860
const BUCKETS = 57861
const CLONE = 57862
const COLUMN_FORMAT = 57863
const COMPONENT = 57864
const DEFINITION = 57865
const ENFORCED = 57866
const ENGINE_ATTRIBUTE = 57867
const EXCLUDE = 57868
const FOLLOWING = 57869
const GET_MASTER_PUBLIC_KEY = 57870
const HISTOGRAM = 57871
const HISTORY = 57872
const INACTIVE = 57873
const INVISIBLE = 57874
const LOCKED = 57875
const MASTER_COMPRESSION_ALGORITHMS = 57876
const MASTER_PUBLIC_KEY_PATH = 57877
const MASTER_TLS_CIPHERSUITES = 57878
const MASTER_ZSTD_COMPRESSION_LEVEL = 57879
const NESTED = 57880
const NETWORK_NAMESPACE = 57881
const NOWAIT = 57882
const NULLS = 57883
const OJ = 57884
const OLD = 57885
const OPTIONAL = 57886
const ORDINALITY = 57887
const ORGANIZATION = 57888
const OTHERS = 57889
const PARTIAL = 57890
const PATH = 57891
const PERSIST = 57892
const PERSIST_ONLY = 57893
const PRECEDING = 57894
const PRIVILEGE_CHECKS_USER = 57895
const PROCESS = 57896
const RANDOM = 57897
const REFERENCE = 57898
const REQUIRE_ROW_FORMAT = 57899
const RESOURCE = 57900
const RESPECT = 57901
const RESTART = 57902
const RETAIN = 57903
const REUSE = 57904
const ROLE = 57905
const SECONDARY = 57906
const SECONDARY_ENGINE = 57907
const SECONDARY_ENGINE_ATTRIBUTE = 57908
const SECONDARY_LOAD = 57909
const SECONDARY_UNLOAD = 57910
const SIMPLE = 57911
const SKIP = 57912
const SRID = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const UNBOUNDED = 57916
const VCPU = 57917
const VISIBLE = 57918
const RETURNING = 57919
const FORMAT_BYTES = 57920
const FORMAT_PICO_TIME = 57921
const PS_CURRENT_THREAD_ID = 57922
const PS_THREAD_ID = 57923
const GTID_SUBSET = 57924
const GTID_SUBTRACT = 57925
const WAIT_FOR_EXECUTED_GTID_SET = 57926
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57927
const FORMAT = 57928
const TREE = 57929
const VITESS = 57930
const TRADITIONAL = 57931
const VTEXPLAIN = 57932
const LOCAL = 57933
const LOW_PRIORITY = 57934
const NO_WRITE_TO_BINLOG = 57935
const LOGS = 57936
const ERROR = 57937
const GENERAL = 57938
const HOSTS = 57939
const OPTIMIZER_COSTS = 57940
const USER_RESOURCES = 57941
const SLOW = 57942
const CHANNEL = 57943
const RELAY = 57944
const EXPORT = 57945
const CURRENT = 57946
const ROW = 57947
const ROWS = 57948
const AVG_ROW_LENGTH = 57949
const CONNECTION = 57950
const CHECKSUM = 57951
const DELAY_KEY_WRITE = 57952
const ENCRYPTION = 57953
const ENGINE = 57954
const INSERT_METHOD = 57955
const MAX_ROWS = 57956
const MIN_ROWS = 57957
const PACK_KEYS = 57958
const PASSWORD = 57959
const FIXED = 57960
const DYNAMIC = 57961
const COMPRESSED = 57962
const REDUNDANT = 57963
const COMPACT = 57964
const ROW_FORMAT = 57965
const STATS_AUTO_RECALC = 57966
const STATS_PERSISTENT = 57967
const STATS_SAMPLE_PAGES = 57968
const STORAGE = 57969
const MEMORY = 57970
const DISK = 57971
const PARTITIONS = 57972
const LINEAR = 57973
const RANGE = 57974
const LIST = 57975
const SUBPARTITION = 57976
const SUBPARTITIONS = 57977
const HASH = 57978

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	12, 48,
	13, 48,
	-2, 37,
	-1, 49,
	1, 147,
	654, 147,
	-2, 155,
	-1, 50,
	133, 155,
	174, 155,
	336, 155,
	-2, 502,
	-1, 57,
	35, 745,
	236, 745,
	247, 745,
	282, 759,
	283, 759,
	-2, 747,
	-1, 62,
	238, 776,
	-2, 774,
	-1, 116,
	235, 1428,
	-2, 121,
	-1, 118,
	1, 148,
	654, 148,
	-2, 155,
	-1, 129,
	134, 388,
	241, 388,
	-2, 491,
	-1, 148,
	133, 155,
	174, 155,
	336, 155,
	-2, 511,
	-1, 766,
	86, 1445,
	-2, 1292,
	-1, 767,
	86, 1446,
	219, 1450,
	-2, 1293,
	-1, 800,
	219, 1449,
	-2, 39,
	-1, 877,
	59, 845,
	-2, 860,
	-1, 963,
	246, 40,
	251, 40,
	-2, 399,
	-1, 1048,
	1, 559,
	654, 559,
	-2, 155,
	-1, 1342,
	219, 1450,
	-2, 1293,
	-1, 1487,
	59, 846,
	-2, 865,
	-1, 1488,
	59, 847,
	-2, 866,
	-1, 1539,
	133, 155,
	174, 155,
	336, 155,
	-2, 438,
	-1, 1618,
	134, 388,
	241, 388,
	-2, 491,
	-1, 1627,
	246, 41,
	251, 41,
	-2, 400,
	-1, 1976,
	219, 1454,
	-2, 1448,
	-1, 1977,
	219, 1450,
	-2, 1446,
	-1, 2076,
	133, 155,
	174, 155,
	336, 155,
	-2, 439,
	-1, 2083,
	25, 176,
	-2, 178,
	-1, 2439,
	77, 95,
	87, 95,
	-2, 922,
	-1, 2507,
	629, 672,
	-2, 646,
	-1, 2673,
	49, 1387,
	-2, 1381,
	-1, 2967,
	7, 54,
	18, 54,
	20, 54,
	88, 54,
	-2, 894,
	-1, 3325,
	629, 672,
	-2, 660,
	-1, 3413,
	22, 1805,
	32, 1805,
	175, 1805,
	258, 1805,
	316, 1805,
	317, 1805,
	318, 1805,
	319, 1805,
	320, 1805,
	321, 1805,
	322, 1805,
	324, 1805,
	325, 1805,
	326, 1805,
	327, 1805,
	328, 1805,
	329, 1805,
	330, 1805,
	331, 1805,
	332, 1805,
	333, 1805,
	334, 1805,
	335, 1805,
	337, 1805,
	339, 1805,
	340, 1805,
	341, 1805,
	342, 1805,
	343, 1805,
	344, 1805,
	345, 1805,
	346, 1805,
	347, 1805,
	350, 1805,
	351, 1805,
	352, 1805,
	353, 1805,
	354, 1805,
	356, 1805,
	357, 1805,
	358, 1805,
	359, 1805,
	500, 1805,
	-2, 604,
}

const yyPrivate = 57344

const yyLast = 47572

var yyAct = [...]int{
	1495, 809, 3074, 3075, 801, 1843, 3073, 3484, 3495, 3306,
	802, 674, 3390, 3453, 2073, 3454, 2899, 3411, 1542, 2025,
	3044, 3356, 2822, 2728, 3379, 3290, 2735, 770, 660, 654,
	39, 2005, 3238, 2785, 2776, 2790, 2787, 2786, 2784, 1111,
	2789, 2686, 2337, 2788, 3288, 3031, 870, 2689, 2007, 3103,
	3278, 2371, 2632, 2805, 2143, 1465, 893, 656, 1502, 2804,
	5, 995, 2687, 2743, 2690, 3108, 2938, 2932, 2567, 2029,
	765, 2410, 2045, 2958, 764, 771, 684, 2807, 2433, 2684,
	2674, 2397, 1967, 2924, 2472, 2111, 2551, 1596, 2106, 2473,
	2061, 652, 2827, 2131, 2474, 925, 2422, 2504, 2174, 2403,
	2050, 157, 38, 1489, 2389, 2049, 1113, 874, 894, 878,
	872, 2373, 40, 1643, 1964, 1938, 1972, 1089, 653, 1839,
	2543, 1797, 1937, 2113, 2152, 648, 1625, 2130, 896, 2466,
	143, 953, 1531, 2441, 1511, 958, 2037, 2191, 971, 1354,
	1862, 1858, 1816, 2052, 932, 666, 1469, 1745, 98, 1632,
	99, 1282, 1741, 929, 1060, 964, 2128, 1724, 94, 933,
	2102, 961, 959, 960, 661, 2030, 1530, 1516, 911, 913,
	884, 1934, 1973, 1871, 1338, 1314, 1103, 1750, 161, 1591,
	121, 119, 120, 126, 879, 1109, 1044, 127, 882, 100,
	1997, 78, 87, 643, 880, 1362, 3315, 2497, 101, 92,
	1617, 906, 1358, 3485, 2145, 2146, 2147, 997, 3032, 2773,
	2145, 2527, 2526, 2189, 2495, 1709, 881, 10, 9, 79,
	1014, 1015, 1016, 587, 1019, 1020, 1021, 1022, 122, 93,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 901, 905, 926,
	1000, 128, 887, 3341, 8, 620, 2795, 2987, 3024, 89,
	89, 644, 3437, 89, 2559, 2560, 3337, 3336, 871, 975,
	3078, 873, 626, 2, 1819, 920, 921, 2002, 2003, 3342,
	1283, 1804, 2795, 1803, 3078, 888, 1802, 1801, 950, 1800,
	1799, 1008, 974, 895, 1781, 2792, 951, 122, 3432, 949,
	948, 947, 815, 816, 817, 815, 816, 817, 626, 1790,
	2369, 1001, 1004, 1005, 2793, 105, 106, 107, 184, 110,
	1283, 646, 116, 647, 89, 185, 2670, 1017, 582, 2517,
	919, 768, 769, 919, 768, 769, 1299, 2799, 2399, 2636,
	2793, 1496, 123, 3457, 145, 2178, 937, 942, 866, 867,
	868, 869, 620, 3391, 877, 166, 3077, 3505, 3452, 3441,
	2122, 3475, 2904, 2799, 2903, 122, 3337, 2520, 3439, 3291,
	3077, 2176, 2338, 1809, 620, 1315, 2846, 620, 3234, 3233,
	3466, 999, 908, 909, 3440, 2116, 156, 1293, 3037, 2177,
	80, 3038, 144, 3438, 617, 998, 3244, 2843, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1324, 1323, 1325, 1326, 3435,
	2234, 80, 3056, 163, 2413, 3045, 164, 80, 80, 3380,
	3387, 82, 2171, 3243, 620, 3397, 1848, 1293, 3397, 3416,
	2866, 3421, 132, 133, 155, 154, 183, 3055, 1606, 2414,
	2725, 2726, 603, 3320, 2068, 2069, 3419, 2535, 2796, 2370,
	1532, 2534, 1533, 2724, 601, 3425, 3426, 2558, 621, 2450,
	3121, 2231, 2449, 2745, 2746, 2451, 2033, 2067, 89, 1296,
	3420, 1297, 1298, 1079, 2796, 2232, 946, 1106, 1053, 1054,
	864, 863, 1096, 2004, 1098, 3307, 2462, 1289, 2498, 89,
	1281, 1084, 1085, 1067, 598, 89, 89, 1067, 1068, 1080,
	1073, 2935, 1068, 612, 2086, 2085, 1066, 620, 1065, 2601,
	1056, 1047, 2406, 2407, 2854, 2852, 634, 1789, 608, 638,
	2824, 1529, 1095, 1097, 620, 632, 941, 1289, 2115, 943,
	2828, 2544, 3458, 1043, 944, 149, 130, 152, 137, 129,
	2530, 150, 151, 2192, 3266, 1473, 3267, 167, 1018, 2505,
	2153, 912, 2197, 3459, 2817, 621, 173, 138, 3487, 2210,
	620, 2211, 2818, 2212, 1725, 1100, 1791, 1792, 1794, 1793,
	2744, 141, 139, 134, 135, 136, 140, 621, 1088, 1699,
	621, 1049, 2747, 131, 1105, 1081, 1074, 1086, 588, 2546,
	590, 604, 142, 623, 3026, 622, 594, 1087, 592, 596,
	605, 597, 2033, 591, 3025, 602, 2825, 2198, 593, 606,
	607, 610, 613, 614, 615, 611, 609, 2213, 600, 624,
	1093, 3433, 1024, 1700, 1094, 1701, 946, 621, 938, 1082,
	1083, 1023, 2826, 2194, 1099, 940, 939, 3218, 3022, 922,
	916, 914, 922, 916, 914, 2203, 2200, 2202, 2201, 2204,
	2205, 2031, 2032, 945, 2196, 2156, 984, 954, 1092, 1610,
	982, 955, 1476, 994, 946, 1042, 3082, 2602, 39, 2046,
	955, 993, 992, 2232, 158, 184, 2635, 991, 990, 989,
	1329, 1329, 988, 987, 944, 986, 981, 2747, 3506, 1730,
	3464, 930, 1332, 1333, 1334, 1335, 2195, 966, 1340, 123,
	930, 1275, 1346, 930, 928, 1350, 2550, 1742, 967, 1077,
	621, 1631, 166, 2129, 3314, 2496, 1288, 1285, 1286, 1287,
	1292, 1294, 1291, 907, 1290, 1101, 1003, 621, 2766, 1046,
	2547, 2182, 966, 2181, 1284, 1738, 1002, 1269, 3499, 2844,
	1011, 973, 1528, 1063, 1604, 1069, 1070, 1071, 1072, 2529,
	952, 3021, 153, 2374, 2376, 2455, 1288, 1285, 1286, 1287,
	1292, 1294, 1291, 621, 1290, 2563, 2246, 2515, 1107, 1108,
	163, 2175, 2499, 164, 1284, 2532, 1603, 1602, 1739, 1600,
	586, 581, 3303, 2542, 2173, 2119, 2541, 2031, 2032, 2936,
	1330, 1331, 2974, 183, 1264, 812, 812, 2954, 3393, 812,
	2464, 3393, 985, 945, 1265, 1266, 983, 2446, 2409, 1010,
	1729, 2346, 1851, 146, 1336, 118, 147, 1520, 1630, 1711,
	1710, 1712, 1713, 1714, 1431, 2120, 1045, 625, 3392, 1058,
	2404, 3392, 2118, 2074, 1329, 2553, 1326, 2723, 1460, 1463,
	2552, 945, 972, 2797, 2798, 1090, 159, 2519, 618, 915,
	83, 3076, 915, 171, 890, 1062, 2801, 79, 1278, 1276,
	1751, 2985, 2986, 619, 3054, 3076, 2121, 1104, 2553, 2797,
	2798, 3328, 996, 2552, 3017, 2948, 2117, 2193, 3424, 113,
	1497, 1499, 2801, 1364, 88, 973, 1360, 1735, 1361, 1534,
	2233, 2518, 1279, 2587, 179, 1277, 1732, 2488, 1731, 1479,
	1733, 1734, 1863, 1483, 167, 88, 1297, 1298, 973, 874,
	1076, 88, 88, 173, 1464, 3467, 1298, 1872, 2375, 973,
	1480, 1078, 3423, 3460, 2975, 1299, 2888, 1477, 1064, 1052,
	1055, 1873, 1821, 973, 3117, 160, 165, 162, 168, 169,
	170, 172, 174, 175, 176, 177, 1822, 1327, 1328, 1820,
	114, 178, 180, 181, 182, 3497, 2992, 1726, 3498, 1727,
	3496, 2991, 1728, 2568, 1863, 2160, 2263, 1640, 1437, 1438,
	1439, 1440, 1441, 1639, 1629, 2170, 973, 2172, 1464, 2168,
	1811, 1813, 1814, 1481, 984, 1482, 972, 98, 3358, 99,
	2165, 1091, 966, 969, 970, 982, 930, 1061, 2165, 3296,
	963, 967, 1048, 1637, 1812, 886, 1752, 1470, 3507, 972,
	1719, 1717, 1607, 1608, 1609, 966, 969, 970, 3461, 930,
	972, 962, 1009, 963, 967, 1299, 1006, 3051, 2169, 3052,
	1672, 158, 3359, 1675, 972, 1677, 2167, 101, 1706, 976,
	966, 3501, 3226, 3297, 978, 1299, 2570, 3225, 979, 977,
	1321, 1322, 1324, 1323, 1325, 1326, 1467, 1623, 1296, 1870,
	1297, 1298, 3216, 871, 1478, 1299, 2290, 2589, 3067, 980,
	1498, 3066, 1501, 873, 1718, 1716, 1694, 972, 2999, 1684,
	1685, 2998, 976, 966, 2988, 1690, 1691, 978, 1616, 2774,
	2762, 979, 977, 2470, 3508, 1645, 2469, 1646, 1635, 1648,
	1650, 1676, 1705, 1654, 1656, 1658, 1660, 1662, 1633, 1633,
	1525, 1526, 2580, 2579, 2578, 2572, 1969, 2576, 2125, 2571,
	1634, 2569, 1720, 1599, 1704, 1703, 2574, 1319, 1320, 1321,
	1322, 1324, 1323, 1325, 1326, 2573, 1299, 2238, 2239, 2240,
	1614, 1702, 1692, 1626, 1612, 1496, 1686, 1683, 3471, 1496,
	1484, 1682, 1868, 2575, 2577, 1681, 1869, 1613, 1296, 767,
	1297, 1298, 815, 816, 817, 1747, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1324, 1323, 1325, 1326, 1680, 1296, 1652,
	1297, 1298, 1969, 1753, 1754, 2947, 626, 1966, 3323, 184,
	2982, 1968, 1299, 1505, 3322, 626, 3300, 1758, 1296, 2453,
	1297, 1298, 2298, 159, 1765, 1766, 1767, 2140, 1743, 810,
	171, 2141, 189, 123, 3299, 189, 1605, 2138, 631, 3469,
	1496, 2139, 3298, 637, 3221, 189, 166, 122, 1755, 949,
	948, 947, 3206, 189, 1315, 1759, 2562, 1761, 1762, 1763,
	1764, 3205, 2136, 1506, 1768, 2821, 2137, 3116, 189, 3114,
	3063, 179, 2996, 1757, 2981, 1299, 1780, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1324, 1323, 1325, 1326, 2829, 1296,
	2765, 1297, 1298, 637, 189, 637, 1496, 1779, 1299, 2731,
	2764, 1268, 2479, 2467, 163, 1778, 1462, 164, 1299, 2187,
	1315, 2186, 160, 165, 162, 168, 169, 170, 172, 174,
	175, 176, 177, 2028, 2010, 1782, 1748, 183, 178, 180,
	181, 182, 2302, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1324, 1323, 1325, 1326, 2732, 1296, 1299, 1297, 1298, 1715,
	1707, 626, 1846, 1846, 1697, 1844, 1844, 1847, 3403, 1496,
	1693, 2823, 1689, 1825, 2861, 1688, 1687, 1507, 1102, 1529,
	2734, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1301, 95,
	1866, 3401, 1496, 95, 1867, 2729, 97, 1496, 1340, 3252,
	96, 3399, 1496, 3251, 96, 3210, 1315, 1463, 2245, 3209,
	1299, 3043, 2745, 2746, 1299, 1864, 1817, 97, 1296, 2730,
	1297, 1298, 2395, 3486, 1815, 3448, 1496, 2506, 1930, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1324, 1323, 1325, 1326,
	1496, 1296, 2484, 1297, 1298, 1295, 1496, 2082, 167, 104,
	1295, 1296, 2736, 1297, 1298, 1496, 1962, 173, 89, 1496,
	103, 1824, 102, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1496, 1924, 1299, 1786,
	1787, 1991, 1464, 1315, 2395, 3386, 1818, 1935, 2411, 1296,
	2166, 1297, 1298, 3275, 1496, 1497, 1998, 3273, 1496, 2395,
	3366, 1974, 2395, 3362, 3349, 1496, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1324, 1323, 1325, 1326, 1823, 2949, 2744,
	2395, 3316, 3035, 3313, 3229, 1496, 2395, 3217, 1965, 2022,
	1496, 2747, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1323,
	1325, 1326, 1926, 1296, 1850, 1297, 1298, 1296, 2165, 1297,
	1298, 3354, 1999, 2411, 1857, 1859, 3035, 1496, 1935, 1299,
	2419, 3270, 1496, 104, 1299, 2395, 3033, 2015, 1976, 2016,
	1874, 1875, 1876, 1877, 103, 158, 102, 1299, 2300, 3327,
	1979, 1980, 2165, 1496, 1888, 97, 2391, 2083, 1295, 1496,
	1974, 2952, 1496, 2311, 1496, 103, 1299, 2755, 2754, 2751,
	2752, 97, 98, 1299, 99, 2751, 2750, 1299, 2685, 1975,
	2395, 1296, 2419, 1297, 1298, 2908, 1299, 2419, 1496, 2947,
	1299, 2753, 98, 2021, 99, 2947, 2038, 2039, 2658, 2126,
	2232, 2528, 2066, 1299, 2048, 1978, 2256, 2251, 1981, 1982,
	2311, 2733, 3256, 1496, 1496, 1595, 2509, 2923, 1496, 2502,
	2503, 2395, 2394, 2092, 2093, 2094, 2095, 1976, 2287, 2256,
	2916, 1496, 2256, 1496, 1295, 2087, 2078, 2088, 2089, 2090,
	2091, 2077, 2442, 2418, 2009, 1849, 1496, 2286, 2059, 2913,
	1496, 2165, 1299, 2098, 2099, 2100, 2101, 887, 1299, 2020,
	2911, 1496, 1296, 2148, 1297, 1298, 2036, 1296, 2043, 1297,
	1298, 2023, 1500, 2876, 1496, 2000, 2081, 2442, 2154, 2108,
	1296, 2718, 1297, 1298, 1299, 2041, 2859, 1496, 2114, 1595,
	1594, 2232, 920, 921, 1849, 2065, 2064, 2063, 2419, 1296,
	3000, 1297, 1298, 2080, 2079, 2443, 1296, 1795, 1297, 1298,
	1296, 1737, 1297, 1298, 1527, 2445, 957, 159, 2151, 1296,
	956, 1297, 1298, 1296, 171, 1297, 1298, 1540, 1539, 3429,
	3369, 3240, 1503, 2124, 2777, 3247, 1296, 3207, 1297, 1298,
	2443, 189, 1496, 189, 3128, 2109, 189, 3016, 2104, 2105,
	2232, 3001, 3002, 3003, 876, 2123, 2159, 2127, 3013, 2162,
	975, 2163, 2135, 2994, 1299, 179, 2476, 2366, 1496, 2871,
	1633, 2179, 2870, 2158, 1597, 1668, 637, 2107, 637, 637,
	2109, 2161, 2157, 974, 2819, 1296, 2737, 1297, 1298, 2779,
	2741, 1296, 2775, 1297, 1298, 2510, 2103, 2740, 637, 637,
	2183, 2180, 2097, 2096, 2184, 2185, 160, 165, 162, 168,
	169, 170, 172, 174, 175, 176, 177, 1296, 1722, 1297,
	1298, 1299, 178, 180, 181, 182, 1669, 1670, 1671, 1342,
	3241, 2742, 89, 1628, 1624, 1593, 2738, 115, 1047, 2959,
	2960, 2739, 1299, 2122, 2190, 2013, 3004, 2364, 1496, 1784,
	3481, 2249, 2243, 1299, 2475, 2254, 3479, 3455, 2257, 1299,
	2258, 3335, 3261, 2260, 2962, 2265, 2771, 2770, 2769, 2267,
	2268, 2269, 1299, 2685, 2489, 2217, 1299, 2965, 2248, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 1509,
	2964, 2250, 2216, 3005, 3006, 3007, 1817, 1296, 2707, 1297,
	1298, 1299, 2476, 2708, 2343, 1496, 2704, 2705, 2223, 2224,
	2703, 1785, 2706, 2226, 3331, 2291, 2292, 2293, 2294, 2295,
	1299, 2297, 2227, 3242, 2027, 2299, 3462, 2270, 1504, 2304,
	2305, 3295, 2306, 2019, 1299, 2309, 2259, 2310, 2953, 1299,
	2242, 2313, 2244, 3311, 2285, 2317, 2663, 2230, 2662, 2322,
	2323, 2324, 2325, 2940, 1296, 1508, 1297, 1298, 1976, 2326,
	1496, 2939, 2336, 2241, 2339, 2340, 1818, 1299, 2709, 1342,
	2428, 2429, 2342, 2344, 3098, 1296, 3097, 1297, 1298, 2347,
	2348, 2349, 2350, 2351, 2318, 1496, 1296, 3107, 1297, 1298,
	2358, 2359, 1296, 2360, 1297, 1298, 2363, 2365, 2022, 1975,
	2367, 3109, 2262, 1299, 3214, 1296, 891, 1297, 1298, 1296,
	2379, 1297, 1298, 1846, 892, 2943, 1844, 2380, 3018, 2672,
	1494, 1490, 2969, 189, 3096, 1736, 2749, 637, 637, 2675,
	2677, 862, 1664, 2460, 1296, 1491, 1297, 1298, 2678, 1299,
	2253, 2480, 1013, 189, 1872, 2424, 2427, 2428, 2429, 2425,
	2252, 2426, 2430, 1296, 1012, 1297, 1298, 2378, 1873, 2296,
	2017, 2018, 1493, 637, 1492, 2837, 189, 1296, 1267, 1297,
	1298, 2475, 1296, 39, 1297, 1298, 1299, 2556, 637, 1665,
	1666, 1667, 2435, 2516, 189, 123, 2918, 2945, 95, 97,
	1299, 2038, 2039, 95, 2381, 97, 2383, 2209, 2396, 96,
	1296, 3493, 1297, 1298, 96, 2767, 2415, 1299, 2220, 3408,
	3312, 2208, 1299, 2424, 2427, 2428, 2429, 2425, 3236, 2426,
	2430, 637, 2914, 2959, 2960, 2392, 2748, 2432, 2207, 2024,
	899, 900, 2405, 2206, 1342, 2925, 1296, 2236, 1297, 1298,
	637, 637, 102, 637, 1470, 637, 637, 2368, 637, 637,
	637, 637, 637, 637, 2661, 3283, 1299, 2434, 2463, 2465,
	2471, 1342, 2660, 1299, 1342, 637, 1342, 189, 3282, 2501,
	2393, 2408, 1296, 2886, 1297, 1298, 3264, 2478, 2456, 2388,
	2440, 1299, 2481, 2482, 3115, 3113, 3112, 189, 3105, 3014,
	2882, 2944, 104, 2942, 2444, 2868, 3104, 2780, 2525, 2447,
	637, 2149, 189, 103, 104, 102, 2114, 2454, 104, 1296,
	2523, 1297, 1298, 1611, 2457, 103, 637, 898, 189, 103,
	103, 102, 2933, 1296, 2411, 1297, 1298, 2468, 3086, 1299,
	97, 3483, 3482, 3482, 189, 2391, 2477, 2603, 2288, 2867,
	1296, 189, 1297, 1298, 1299, 1296, 2864, 1297, 1298, 2011,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 637,
	2490, 2491, 2492, 2485, 2362, 2486, 1521, 1513, 108, 109,
	3483, 2591, 2592, 2593, 2594, 2595, 2565, 3301, 2522, 1616,
	1299, 2980, 889, 3, 91, 1, 1299, 2511, 2512, 1296,
	2600, 1297, 1298, 2984, 3418, 1299, 1296, 599, 1297, 1298,
	2001, 1468, 3456, 3414, 2521, 3415, 1708, 1698, 3046, 1936,
	1299, 2583, 2361, 3237, 1296, 2783, 1297, 1298, 2155, 3012,
	2112, 2581, 965, 148, 2075, 1315, 649, 2357, 1311, 2545,
	1312, 2076, 2596, 3382, 112, 923, 111, 2564, 2548, 968,
	2554, 1075, 1299, 2555, 1313, 1327, 1328, 1310, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1324, 1323, 1325, 1326, 1494,
	1490, 2150, 1296, 2356, 1297, 1298, 2566, 3036, 2461, 2355,
	2613, 2084, 2615, 2582, 1491, 1546, 1299, 1296, 2354, 1297,
	1298, 1544, 1545, 2637, 1543, 1548, 2642, 1547, 2626, 2627,
	2628, 2629, 2845, 2353, 2289, 2639, 2887, 1788, 2584, 1487,
	1488, 1493, 633, 1492, 2431, 627, 186, 1535, 1514, 2900,
	1007, 589, 1965, 1296, 1965, 1297, 1298, 2694, 2756, 1296,
	2605, 1297, 1298, 637, 637, 2352, 2188, 2611, 1296, 897,
	1297, 1298, 903, 903, 2712, 2713, 595, 1347, 1783, 2659,
	2448, 189, 2688, 1296, 878, 1297, 1298, 2688, 918, 2642,
	2621, 2622, 2623, 2624, 2625, 910, 2638, 2012, 2640, 2341,
	2697, 2665, 2641, 2382, 1483, 2435, 1299, 2682, 917, 2693,
	2666, 2717, 2937, 2671, 2673, 1296, 2398, 1297, 1298, 2676,
	2669, 3294, 3106, 3367, 2653, 2458, 1510, 2907, 2261, 637,
	2691, 2657, 1861, 2664, 1337, 2053, 2667, 3081, 1810, 1342,
	2679, 2680, 658, 657, 655, 2384, 2412, 1302, 803, 1296,
	637, 1297, 1298, 2654, 2655, 2656, 1342, 2372, 1522, 879,
	2719, 2699, 2700, 2720, 2702, 2698, 2423, 2710, 2701, 880,
	2803, 2696, 1299, 2421, 2782, 2420, 2721, 2760, 2761, 2714,
	2715, 637, 637, 2218, 98, 2060, 99, 2961, 2957, 2335,
	3410, 2055, 2051, 1747, 1299, 2390, 756, 2727, 755, 667,
	659, 651, 2839, 754, 2759, 753, 1299, 2977, 2758, 2809,
	2757, 3394, 1299, 2531, 2820, 2533, 2459, 2816, 1280, 1486,
	645, 936, 2856, 2857, 2858, 2842, 2860, 2862, 2810, 1299,
	3318, 1977, 2811, 2841, 2235, 2802, 1299, 2865, 2781, 1296,
	2869, 1297, 1298, 2114, 1485, 2873, 2874, 2875, 2877, 2878,
	2879, 2880, 1299, 1891, 2881, 2334, 2883, 2884, 2885, 2814,
	1892, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897,
	2898, 189, 3325, 2791, 2833, 2832, 637, 2333, 2830, 2905,
	3030, 2772, 2909, 1299, 2910, 2912, 2507, 2915, 2917, 2332,
	2919, 2920, 2921, 2922, 2840, 2331, 2847, 2848, 2928, 2849,
	189, 2850, 2851, 637, 2853, 1296, 2855, 1297, 1298, 2142,
	65, 43, 2330, 189, 3289, 2902, 3355, 637, 1299, 2329,
	1977, 189, 2906, 189, 752, 189, 189, 1296, 749, 1297,
	1298, 3083, 3084, 2950, 2951, 2328, 3085, 2955, 1299, 1296,
	637, 1297, 1298, 1299, 2633, 1296, 2634, 1297, 1298, 2835,
	2836, 3338, 3339, 748, 3340, 2967, 2968, 1919, 1299, 640,
	3431, 1271, 1296, 90, 1297, 1298, 2327, 34, 33, 1296,
	32, 1297, 1298, 1299, 31, 30, 2931, 25, 24, 2926,
	2927, 2929, 1299, 23, 22, 1296, 21, 1297, 1298, 27,
	20, 2934, 19, 18, 2941, 637, 2794, 3451, 3492, 1299,
	117, 2321, 52, 49, 47, 125, 2946, 124, 50, 2956,
	2966, 46, 1050, 44, 29, 2963, 1296, 28, 1297, 1298,
	1299, 2320, 637, 17, 16, 15, 2319, 14, 637, 13,
	2970, 2972, 2973, 1299, 12, 11, 7, 2971, 1299, 3019,
	3020, 2316, 2810, 2989, 2990, 3034, 2811, 6, 2978, 2979,
	37, 1296, 36, 1297, 1298, 35, 2315, 1274, 26, 1299,
	2995, 4, 2997, 3040, 3041, 2314, 1299, 2494, 2144, 0,
	0, 1296, 0, 1297, 1298, 637, 1296, 1299, 1297, 1298,
	637, 0, 2312, 3053, 637, 637, 3057, 0, 0, 0,
	0, 1296, 0, 1297, 1298, 3023, 0, 0, 0, 3027,
	3028, 3029, 0, 2308, 0, 0, 1296, 0, 1297, 1298,
	0, 0, 0, 3068, 3042, 1296, 2307, 1297, 1298, 0,
	0, 2303, 189, 0, 0, 0, 0, 0, 3072, 189,
	0, 1912, 1296, 0, 1297, 1298, 0, 189, 189, 0,
	3080, 189, 2301, 189, 0, 0, 0, 0, 3087, 2266,
	189, 0, 0, 1296, 0, 1297, 1298, 189, 3058, 0,
	2255, 0, 3062, 0, 0, 0, 1296, 0, 1297, 1298,
	0, 1296, 0, 1297, 1298, 0, 0, 0, 3070, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 637, 0,
	0, 0, 1296, 0, 1297, 1298, 0, 3079, 0, 1296,
	3101, 1297, 1298, 0, 0, 0, 0, 0, 0, 0,
	1296, 1846, 1297, 1298, 1844, 3130, 2688, 1300, 0, 39,
	1904, 1893, 1894, 1895, 1896, 1906, 1897, 1898, 1899, 1911,
	1907, 1900, 1901, 1908, 1909, 1910, 1902, 1903, 1905, 3102,
	0, 3124, 3110, 3126, 3111, 0, 1355, 0, 0, 1342,
	3118, 1977, 3122, 0, 3120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2691, 0, 0, 0, 2691,
	0, 3228, 0, 0, 0, 0, 3215, 0, 3134, 0,
	3235, 0, 3131, 3132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3245, 3246, 0, 3248, 0, 3249, 3250, 3211, 0, 3213,
	3253, 3254, 3255, 3212, 3257, 3260, 3258, 3259, 3227, 0,
	1846, 0, 0, 1844, 3262, 3239, 3222, 3223, 3224, 3232,
	3269, 3271, 3272, 3274, 3276, 3277, 3279, 3231, 3219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3263, 0,
	0, 0, 0, 0, 3309, 0, 3265, 0, 0, 0,
	3268, 0, 0, 0, 0, 0, 0, 0, 3305, 0,
	3284, 3285, 3287, 3286, 0, 0, 0, 0, 0, 0,
	189, 3293, 0, 0, 0, 0, 0, 0, 189, 3302,
	0, 0, 0, 0, 0, 0, 0, 0, 3308, 637,
	0, 0, 0, 3304, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 2691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 1512, 0, 3310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3334,
	3329, 0, 1598, 0, 39, 0, 0, 0, 0, 0,
	0, 3321, 0, 0, 0, 3324, 0, 0, 0, 3350,
	0, 0, 637, 0, 0, 3351, 3352, 0, 189, 0,
	0, 0, 0, 0, 3317, 189, 0, 3326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3363, 3344, 637,
	0, 3345, 3333, 0, 0, 0, 637, 0, 0, 0,
	3343, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	2688, 0, 3353, 3388, 3389, 0, 0, 0, 0, 0,
	39, 1342, 0, 3360, 0, 0, 0, 3398, 3400, 3402,
	3370, 3395, 3396, 0, 189, 189, 189, 189, 189, 3373,
	3381, 3378, 3375, 3374, 3372, 3365, 3377, 3239, 3383, 3376,
	0, 0, 3430, 3368, 0, 0, 189, 189, 0, 0,
	3406, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	0, 3417, 189, 3427, 3422, 3409, 0, 0, 0, 0,
	0, 0, 3395, 3396, 3436, 0, 0, 0, 0, 3434,
	0, 3447, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 3445,
	0, 3450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3468, 3470, 3472, 0, 0, 0, 3463,
	0, 0, 0, 1846, 0, 3465, 1844, 3477, 0, 0,
	637, 0, 0, 3473, 0, 3476, 3474, 0, 3480, 3478,
	0, 0, 0, 0, 3491, 0, 0, 0, 3395, 3396,
	3488, 0, 0, 0, 0, 0, 0, 3494, 0, 0,
	3503, 3504, 3500, 0, 3502, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 637, 1846, 0, 0,
	1844, 3509, 3511, 3512, 3259, 0, 3510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 1342, 0, 0, 637, 637, 1342, 189,
	189, 189, 189, 189, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 189, 0, 0, 189,
	0, 189, 0, 0, 189, 189, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 1806, 1807, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	3152, 3154, 3153, 3171, 3172, 3173, 3174, 3175, 3176, 3177,
	706, 0, 637, 0, 0, 1342, 0, 0, 0, 0,
	637, 1852, 1853, 0, 0, 189, 1855, 0, 903, 903,
	1860, 0, 0, 0, 1865, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 189, 0, 0,
	189, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 0, 1925,
	0, 1927, 1928, 1929, 0, 1931, 1932, 1933, 0, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 0, 1963, 0, 1970, 1971, 903, 0, 903,
	903, 903, 903, 903, 0, 0, 0, 0, 0, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 0, 1992, 1993,
	1994, 1995, 1996, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 2035, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3158, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3166, 3167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 0, 0, 0, 0, 0, 189, 0, 0, 189,
	189, 189, 0, 0, 0, 0, 0, 0, 0, 637,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 772, 0, 685, 776, 687, 773,
	774, 0, 683, 686, 775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 637, 637, 637, 0, 0, 0,
	704, 705, 3151, 3155, 3156, 3157, 3168, 3169, 3170, 3178,
	3180, 737, 3179, 3181, 3182, 3183, 3186, 3187, 3188, 3189,
	3184, 3185, 3190, 3135, 3139, 3136, 3137, 3138, 3150, 3140,
	3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3191,
	3192, 3193, 3194, 3195, 3196, 3161, 3165, 3164, 3162, 3163,
	3159, 3160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 777, 0, 778, 0, 0, 782,
	0, 0, 0, 784, 783, 0, 785, 751, 750, 0,
	0, 779, 780, 0, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 637, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3197,
	3198, 3199, 3200, 3201, 3202, 3203, 3204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	811, 0, 0, 81, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	2500, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	2264, 0, 637, 123, 0, 145, 0, 0, 0, 0,
	0, 2271, 2272, 2273, 2274, 637, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 804, 813, 814, 815, 816, 817, 805, 808,
	0, 0, 0, 806, 807, 0, 0, 156, 0, 0,
	875, 0, 81, 144, 0, 0, 1355, 810, 818, 819,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 637,
	637, 875, 0, 0, 163, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 1619, 1620, 155, 154, 183, 637, 0,
	0, 0, 0, 0, 2812, 2813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 149, 1621, 152, 0,
	1618, 0, 150, 151, 0, 0, 0, 0, 167, 0,
	637, 189, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1342, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 637, 0,
	0, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 637,
	865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 637, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	772, 0, 0, 776, 0, 773, 774, 0, 0, 0,
	775, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2561, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 2585, 2586, 0, 637,
	2588, 0, 0, 2590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 637, 0, 637, 0,
	0, 0, 0, 2597, 2598, 2599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2604, 0, 0, 2606, 2607,
	2608, 0, 0, 0, 2609, 2610, 0, 0, 1939, 2612,
	0, 0, 2614, 0, 0, 2616, 2617, 2618, 2619, 0,
	0, 0, 0, 2620, 1939, 1939, 1939, 1939, 1939, 766,
	0, 0, 0, 0, 146, 0, 0, 147, 0, 0,
	0, 0, 903, 0, 0, 0, 0, 0, 0, 2643,
	2644, 2645, 2646, 2647, 2648, 0, 0, 0, 2649, 2650,
	0, 2651, 0, 2652, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2683, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3449, 0, 0, 0, 2716, 0, 0, 0, 0,
	0, 1563, 0, 636, 0, 636, 0, 1110, 0, 1110,
	1110, 0, 0, 0, 0, 0, 160, 165, 162, 168,
	169, 170, 172, 174, 175, 176, 177, 0, 0, 0,
	0, 81, 178, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1563,
	0, 0, 0, 0, 0, 2778, 0, 0, 0, 875,
	1339, 1344, 1345, 0, 1348, 0, 1349, 1351, 1352, 1353,
	0, 1356, 1357, 1359, 1359, 0, 1359, 1363, 1363, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1551, 0, 2863, 0, 1430, 0,
	1432, 1433, 1434, 1435, 1436, 0, 0, 0, 0, 0,
	2872, 0, 0, 1363, 1363, 1363, 1363, 1363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	1057, 0, 0, 1059, 0, 0, 1472, 0, 0, 0,
	0, 0, 875, 0, 0, 0, 875, 0, 0, 0,
	0, 0, 875, 0, 0, 1564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 1580, 1581, 1582, 1583,
	1584, 1585, 0, 1586, 1587, 1588, 1589, 1590, 1565, 1566,
	1567, 1568, 1549, 1550, 1578, 0, 1552, 0, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 0, 0, 1562,
	1569, 1570, 1571, 1572, 0, 1573, 1574, 1575, 1576, 0,
	0, 0, 3015, 1577, 1580, 1581, 1582, 1583, 1584, 1585,
	0, 1586, 1587, 1588, 1589, 1590, 1565, 1566, 1567, 1568,
	1549, 1550, 1578, 0, 1552, 0, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 3039, 0, 1562, 1569, 1570,
	1571, 1572, 0, 1573, 1574, 1575, 1576, 0, 80, 41,
	42, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 45, 71, 72, 0, 69, 73, 0, 0,
	0, 0, 0, 0, 0, 70, 3059, 0, 3060, 0,
	0, 3061, 0, 0, 3064, 3065, 0, 0, 0, 184,
	0, 0, 0, 3069, 0, 0, 0, 0, 0, 0,
	1615, 0, 0, 3071, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 145, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 3088, 166, 0, 3089, 1579,
	3090, 3091, 0, 3092, 0, 3093, 0, 0, 0, 0,
	3094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 144, 0, 3119, 636, 1263, 636, 636,
	0, 0, 0, 0, 0, 0, 3127, 1579, 0, 3129,
	0, 0, 0, 0, 163, 0, 0, 164, 636, 636,
	0, 0, 0, 3133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 1620, 155, 154, 183, 0, 0,
	0, 3208, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 48, 51, 54, 53, 56, 0, 68,
	0, 0, 77, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 85, 84, 757, 0,
	66, 67, 55, 0, 0, 0, 0, 0, 75, 76,
	0, 0, 0, 0, 0, 0, 149, 1621, 152, 0,
	1618, 0, 150, 151, 1110, 1110, 0, 0, 167, 0,
	0, 3292, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 1678, 0, 0, 0, 59, 60,
	0, 61, 62, 63, 64, 0, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 927, 0, 934, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 636, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3332, 0, 0, 0, 636, 0,
	83, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 3346, 1601, 0,
	3347, 0, 3348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 153, 1341, 1638, 0, 0, 1641, 1642,
	636, 636, 88, 636, 0, 636, 636, 0, 636, 636,
	636, 636, 636, 636, 0, 0, 0, 0, 0, 0,
	0, 1341, 1673, 1674, 1341, 636, 1341, 0, 1679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2054, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 3428, 147, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 636, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 3442, 159, 3443, 0,
	3444, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 935, 0, 0, 636,
	89, 0, 0, 0, 0, 0, 804, 813, 814, 815,
	816, 817, 805, 808, 0, 179, 0, 806, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 935,
	0, 810, 818, 819, 0, 0, 3489, 0, 3490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 165, 162, 168,
	169, 170, 172, 174, 175, 176, 177, 0, 0, 0,
	0, 0, 178, 180, 181, 182, 0, 0, 2812, 2813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 636, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	2047, 0, 1969, 1798, 0, 813, 814, 0, 0, 0,
	2237, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 2247,
	636, 0, 0, 0, 0, 1112, 1341, 1112, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 1272, 0,
	0, 636, 636, 0, 0, 0, 0, 0, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2345, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 636, 0, 0, 2199, 2377, 0, 0,
	0, 0, 0, 0, 2214, 2215, 0, 636, 2219, 0,
	636, 0, 0, 0, 0, 875, 0, 2222, 0, 0,
	0, 0, 0, 0, 2225, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 2416, 2417, 0, 0,
	0, 0, 0, 0, 0, 2436, 0, 2437, 2438, 0,
	2228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 2132, 2133, 2134, 0, 1474, 1475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 636, 1636,
	0, 0, 1636, 0, 1636, 0, 0, 0, 0, 0,
	2164, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2514, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	636, 0, 0, 0, 636, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	1644, 0, 1644, 0, 1644, 1644, 0, 1653, 1644, 1644,
	1644, 1644, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2439, 0, 0, 1112, 2630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2692, 0, 81, 0, 0,
	2054, 2054, 2054, 2054, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2436, 875, 0,
	0, 0, 2054, 0, 0, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2536, 2537, 2538, 2539, 2540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 2549, 0, 0, 0, 0, 0,
	0, 0, 1112, 1112, 0, 0, 0, 0, 2800, 2557,
	0, 0, 0, 0, 0, 0, 0, 0, 2808, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 2452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 1890, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	1636, 1636, 0, 0, 0, 636, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1341, 2524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 2014, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 885, 0,
	0, 0, 2976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 904, 904, 0, 0, 0,
	0, 0, 0, 636, 585, 0, 1518, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 2768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2806, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 2815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2831, 0, 0, 2834, 0, 0,
	0, 0, 0, 0, 934, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 0, 0, 0, 0, 0, 934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 1341, 927, 0, 636, 636, 1341, 1840,
	0, 0, 0, 1840, 1840, 3095, 0, 3099, 3100, 0,
	0, 0, 0, 0, 0, 0, 2930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2692, 0, 81, 0, 2692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 1341, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3220, 2993, 0, 0, 2229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3008, 0, 0, 3009, 3010, 3011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2692, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3319,
	0, 585, 0, 585, 0, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2983, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3364, 1343,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 636, 636, 636, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 2508, 0, 0, 0, 0,
	0, 0, 0, 0, 2513, 0, 0, 0, 0, 3446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1341, 0, 1343,
	0, 0, 636, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 3330, 0,
	0, 0, 0, 885, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 636, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2631, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 636,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 2668, 0, 0, 0, 0, 0,
	0, 1343, 0, 0, 1343, 0, 1343, 585, 1112, 0,
	0, 0, 0, 0, 0, 2695, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 1770, 585, 585, 585, 585, 585, 585, 585, 0,
	636, 927, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1341, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 2901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 813, 814, 0,
	0, 0, 0, 1845, 0, 0, 636, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 904, 904, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 2026,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 3047, 3048, 3049, 3050, 0, 0, 0, 0,
	904, 1746, 904, 904, 904, 904, 904, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	1746, 585, 0, 585, 0, 585, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3123, 0, 3125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3280, 0, 0, 0, 3280, 3280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 2026, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 585, 585, 0,
	0, 585, 0, 2221, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 1112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 3357, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2901, 0, 3412, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 2493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 585, 585, 585, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 1343, 585,
	585, 585, 585, 585, 0, 0, 0, 0, 0, 0,
	0, 2711, 0, 0, 0, 0, 585, 0, 0, 1695,
	0, 585, 0, 0, 585, 2722, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 585,
	585, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 379, 0, 0, 1246, 1231, 495, 0, 1174,
	1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188, 398,
	1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257, 1142,
	1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164, 196,
	1212, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1255, 354, 1198, 0, 475,
	383, 0, 0, 1695, 1178, 1237, 1186, 1224, 1173, 1211,
	1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 3384, 0, 3385, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206, 252,
	307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244, 0,
	0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116, 1200,
	0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0, 0,
	0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 1196, 0,
	0, 0, 1128, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125, 384,
	244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169, 1216,
	1129, 1235, 1163, 349, 1127, 316, 191, 215, 0, 1161,
	394, 440, 452, 1234, 1146, 1155, 242, 1153, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1195, 1214,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1126, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1141,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1230, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1219, 1261, 407, 451, 230, 521, 474, 1136, 1140,
	1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1223, 1130,
	0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1194, 190, 211, 352,
	1257, 433, 275, 558, 531, 526, 197, 213, 1133, 249,
	1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182, 1183,
	1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238,
	1260, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1193, 1199, 364,
	268, 291, 306, 1208, 530, 480, 217, 445, 277, 240,
	1226, 1228, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1189, 1217, 359, 496,
	497, 302, 379, 0, 0, 1246, 1231, 495, 0, 1174,
	1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188, 398,
	1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257, 1142,
	1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164, 196,
	1212, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1255, 354, 1198, 0, 475,
	383, 0, 0, 0, 1178, 1237, 1186, 1224, 1173, 1211,
	1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206, 252,
	307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244, 0,
	0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116, 1200,
	0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0, 0,
	0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171, 0,
	0, 0, 0, 0, 2723, 0, 1149, 0, 1196, 0,
	0, 0, 1128, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125, 384,
	244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169, 1216,
	1129, 1235, 1163, 349, 1127, 316, 191, 215, 0, 1161,
	394, 440, 452, 1234, 1146, 1155, 242, 1153, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1195, 1214,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1126, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1141,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1230, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1219, 1261, 407, 451, 230, 521, 474, 1136, 1140,
	1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1223, 1130,
	0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1194, 190, 211, 352,
	1257, 433, 275, 558, 531, 526, 197, 213, 1133, 249,
	1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182, 1183,
	1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238,
	1260, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1193, 1199, 364,
	268, 291, 306, 1208, 530, 480, 217, 445, 277, 240,
	1226, 1228, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1189, 1217, 359, 496,
	497, 302, 379, 0, 0, 1246, 1231, 495, 0, 1174,
	1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188, 398,
	1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257, 1142,
	1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164, 196,
	1212, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1255, 354, 1198, 0, 475,
	383, 0, 0, 0, 1178, 1237, 1186, 1224, 1173, 1211,
	1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206, 252,
	307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244, 0,
	0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116, 1200,
	0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0, 0,
	0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171, 0,
	0, 0, 0, 0, 2681, 0, 1149, 0, 1196, 0,
	0, 0, 1128, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125, 384,
	244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169, 1216,
	1129, 1235, 1163, 349, 1127, 316, 191, 215, 0, 1161,
	394, 440, 452, 1234, 1146, 1155, 242, 1153, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1195, 1214,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1126, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1141,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1230, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1219, 1261, 407, 451, 230, 521, 474, 1136, 1140,
	1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1223, 1130,
	0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1194, 190, 211, 352,
	1257, 433, 275, 558, 531, 526, 197, 213, 1133, 249,
	1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182, 1183,
	1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238,
	1260, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1193, 1199, 364,
	268, 291, 306, 1208, 530, 480, 217, 445, 277, 240,
	1226, 1228, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1189, 1217, 359, 496,
	497, 302, 379, 0, 0, 1246, 1231, 495, 0, 1174,
	1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188, 398,
	1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257, 1142,
	1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164, 196,
	1212, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1255, 354, 1198, 0, 475,
	383, 0, 0, 0, 1178, 1237, 1186, 1224, 1173, 1211,
	1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206, 252,
	307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244, 0,
	0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116, 1200,
	0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0, 0,
	0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171, 0,
	0, 0, 0, 0, 2042, 0, 1149, 0, 1196, 0,
	0, 0, 1128, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125, 384,
	244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169, 1216,
	1129, 1235, 1163, 349, 1127, 316, 191, 215, 0, 1161,
	394, 440, 452, 1234, 1146, 1155, 242, 1153, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1195, 1214,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1126, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1141,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1230, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1219, 1261, 407, 451, 230, 521, 474, 1136, 1140,
	1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1223, 1130,
	0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1194, 190, 211, 352,
	1257, 433, 275, 558, 531, 526, 197, 213, 1133, 249,
	1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182, 1183,
	1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238,
	1260, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1193, 1199, 364,
	268, 291, 306, 1208, 530, 480, 217, 445, 277, 240,
	1226, 1228, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1189, 1217, 359, 496,
	497, 302, 379, 0, 0, 1246, 1231, 495, 0, 1174,
	1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188, 398,
	1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257, 1142,
	1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164, 196,
	1212, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1255, 354, 1198, 0, 475,
	383, 0, 0, 0, 1178, 1237, 1186, 1224, 1173, 1211,
	1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206, 252,
	307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244, 0,
	0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116, 1200,
	0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0, 0,
	0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 1196, 0,
	0, 0, 1128, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125, 384,
	244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169, 1216,
	1129, 1235, 1163, 349, 1127, 316, 191, 215, 0, 1161,
	394, 440, 452, 1234, 1146, 1155, 242, 1153, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1195, 1214,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1126, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1141,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1230, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1219, 1261, 407, 451, 230, 521, 474, 1136, 1140,
	1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1223, 1130,
	0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1194, 190, 211, 352,
	1257, 433, 275, 558, 531, 526, 197, 213, 1133, 249,
	1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182, 1183,
	1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238,
	1260, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1193, 1199, 364,
	268, 291, 306, 1208, 530, 480, 217, 445, 277, 240,
	1226, 1228, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1189, 1217, 359, 496,
	497, 302, 379, 0, 0, 1246, 1231, 495, 0, 1174,
	1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188, 398,
	1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257, 1142,
	1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164, 196,
	1212, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1255, 354, 1198, 0, 475,
	383, 0, 0, 0, 1178, 1237, 1186, 1224, 1173, 1211,
	1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206, 252,
	307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244, 0,
	0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116, 1200,
	0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0, 0,
	0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 1196, 0,
	0, 0, 1128, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125, 384,
	244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169, 1216,
	1129, 1235, 1163, 349, 1127, 316, 191, 215, 0, 1161,
	394, 440, 452, 1234, 1146, 1155, 242, 1153, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1195, 1214,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1126, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1141,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1230, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1219, 1261, 407, 451, 230, 521, 474, 1136, 1140,
	1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1223, 1130,
	0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1194, 190, 211, 352,
	1257, 433, 275, 558, 531, 526, 197, 213, 1133, 249,
	1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182, 1183,
	1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238,
	1260, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1193, 1199, 364,
	268, 291, 306, 1208, 530, 480, 217, 445, 277, 240,
	1226, 1228, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1189, 1217, 359, 496,
	497, 302, 379, 0, 0, 1246, 1231, 495, 0, 1174,
	1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188, 398,
	1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257, 1142,
	1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164, 196,
	1212, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1255, 354, 1198, 0, 475,
	383, 0, 0, 0, 1178, 1237, 1186, 1224, 1173, 1211,
	1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206, 252,
	307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244, 0,
	0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116, 1200,
	0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0, 0,
	0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 1196, 0,
	0, 0, 1128, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125, 384,
	244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169, 1216,
	1129, 1235, 1163, 349, 1127, 316, 191, 215, 0, 1161,
	394, 440, 452, 1234, 1146, 1155, 242, 1153, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1195, 1214,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1126, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1141,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1230, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1219, 1261, 407, 451, 230, 521, 474, 1136, 1140,
	1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1223, 1130,
	0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1194, 190, 211, 352,
	1257, 433, 275, 558, 531, 526, 197, 213, 1133, 249,
	1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182, 1183,
	1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238,
	1260, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1193, 1199, 364,
	268, 291, 306, 1208, 530, 480, 217, 445, 277, 240,
	1226, 1228, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1189, 1217, 359, 496,
	497, 302, 379, 0, 0, 1246, 1231, 495, 0, 1174,
	1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188, 398,
	1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257, 1142,
	1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164, 196,
	1212, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1255, 354, 1198, 0, 475,
	383, 0, 0, 0, 1178, 1237, 1186, 1224, 1173, 1211,
	1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206, 252,
	307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244, 0,
	0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116, 1200,
	0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0, 0,
	0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 1196, 0,
	0, 0, 1128, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125, 384,
	244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169, 1216,
	1129, 1235, 1163, 349, 1127, 316, 191, 215, 0, 1161,
	394, 440, 452, 1234, 1146, 1155, 242, 1153, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1195, 1214,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1126, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1141,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1230, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1219, 1261, 407, 451, 230, 521, 474, 1136, 1140,
	1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1223, 1130,
	0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1194, 190, 211, 352,
	1257, 433, 275, 558, 531, 526, 197, 213, 1133, 249,
	1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182, 1183,
	1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238,
	1260, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1193, 1199, 364,
	268, 291, 306, 1208, 530, 480, 217, 445, 277, 240,
	1226, 1228, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1189, 1217, 359, 496,
	497, 302, 379, 0, 0, 0, 0, 495, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 668, 0, 0, 0, 257, 673,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 680, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 676, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 800, 768, 769,
	804, 813, 814, 815, 816, 817, 805, 808, 0, 0,
	228, 806, 807, 235, 708, 710, 709, 727, 728, 729,
	730, 731, 732, 733, 706, 810, 818, 819, 0, 252,
	307, 259, 251, 500, 0, 0, 1921, 1922, 1923, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 650,
	665, 0, 679, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 663, 0, 0, 0, 0, 762, 0,
	664, 0, 0, 672, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 761, 0, 0, 540, 0, 0, 759, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 714, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 722, 723, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 772, 760,
	685, 776, 687, 773, 774, 682, 683, 686, 775, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 763, 671,
	670, 0, 678, 0, 704, 705, 707, 711, 712, 713,
	724, 725, 726, 734, 736, 737, 735, 738, 739, 740,
	743, 744, 745, 746, 741, 742, 747, 688, 692, 689,
	690, 691, 703, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 786, 787, 788, 789, 790, 791, 717,
	721, 720, 718, 719, 715, 716, 669, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 777, 249,
	778, 0, 0, 782, 0, 0, 0, 784, 783, 0,
	785, 751, 750, 0, 0, 779, 780, 0, 781, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 792, 793, 794, 795, 796, 797, 798,
	799, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	812, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 668,
	0, 0, 0, 257, 673, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	680, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 676, 677, 0, 0, 0, 0, 0, 0, 2070,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 800, 768, 769, 804, 813, 814, 815, 816,
	817, 805, 808, 0, 0, 228, 806, 807, 235, 708,
	710, 709, 727, 728, 729, 730, 731, 732, 733, 706,
	810, 818, 819, 2071, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 650, 665, 0, 679, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 663, 0,
	0, 0, 0, 762, 0, 664, 0, 0, 672, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 761, 0, 0,
	540, 0, 0, 759, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 714, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 722, 723, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 772, 760, 685, 776, 687, 773, 774,
	682, 683, 686, 775, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 763, 671, 670, 0, 678, 0, 704,
	705, 707, 711, 712, 713, 724, 725, 726, 734, 736,
	737, 735, 738, 739, 740, 743, 744, 745, 746, 741,
	742, 747, 688, 692, 689, 690, 691, 703, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 786, 787,
	788, 789, 790, 791, 717, 721, 720, 718, 719, 715,
	716, 669, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 777, 249, 778, 0, 0, 782, 0,
	0, 0, 784, 783, 0, 785, 751, 750, 0, 0,
	779, 780, 0, 781, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 792, 793,
	794, 795, 796, 797, 798, 799, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 812, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 0, 359, 496, 497, 302, 379, 0, 0,
	0, 80, 495, 0, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 668,
	0, 0, 0, 257, 673, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	680, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 676, 677, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 800, 768, 769, 804, 813, 814, 815, 816,
	817, 805, 808, 0, 0, 228, 806, 807, 235, 708,
	710, 709, 727, 728, 729, 730, 731, 732, 733, 706,
	810, 818, 819, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 650, 665, 0, 679, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 663, 0,
	0, 0, 0, 762, 0, 664, 0, 0, 672, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 761, 0, 0,
	540, 0, 0, 759, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 714, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 722, 723, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 772, 760, 685, 776, 687, 773, 774,
	682, 683, 686, 775, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 763, 671, 670, 0, 678, 0, 704,
	705, 707, 711, 712, 713, 724, 725, 726, 734, 736,
	737, 735, 738, 739, 740, 743, 744, 745, 746, 741,
	742, 747, 688, 692, 689, 690, 691, 703, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 786, 787,
	788, 789, 790, 791, 717, 721, 720, 718, 719, 715,
	716, 669, 190, 211, 352, 88, 433, 275, 558, 531,
	526, 197, 213, 777, 249, 778, 0, 0, 782, 0,
	0, 0, 784, 783, 0, 785, 751, 750, 0, 0,
	779, 780, 0, 781, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 792, 793,
	794, 795, 796, 797, 798, 799, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 812, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 668, 0, 0, 0, 257, 673,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 680, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 676, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 800, 768, 769,
	804, 813, 814, 815, 816, 817, 805, 808, 0, 0,
	228, 806, 807, 235, 708, 710, 709, 727, 728, 729,
	730, 731, 732, 733, 706, 810, 818, 819, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 650,
	665, 0, 679, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 663, 0, 0, 0, 0, 762, 0,
	664, 0, 0, 672, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 761, 0, 0, 540, 0, 0, 759, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 3371, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 714, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 722, 723, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 772, 760,
	685, 776, 687, 773, 774, 682, 683, 686, 775, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 763, 671,
	670, 0, 678, 0, 704, 705, 707, 711, 712, 713,
	724, 725, 726, 734, 736, 737, 735, 738, 739, 740,
	743, 744, 745, 746, 741, 742, 747, 688, 692, 689,
	690, 691, 703, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 786, 787, 788, 789, 790, 791, 717,
	721, 720, 718, 719, 715, 716, 669, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 777, 249,
	778, 0, 0, 782, 0, 0, 0, 784, 783, 0,
	785, 751, 750, 0, 0, 779, 780, 0, 781, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 792, 793, 794, 795, 796, 797, 798,
	799, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	812, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 668,
	0, 0, 0, 257, 673, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	680, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 676, 677, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 1496, 800, 768, 769, 804, 813, 814, 815, 816,
	817, 805, 808, 0, 0, 228, 806, 807, 235, 708,
	710, 709, 727, 728, 729, 730, 731, 732, 733, 706,
	810, 818, 819, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 650, 665, 0, 679, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 663, 0,
	0, 0, 0, 762, 0, 664, 0, 0, 672, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 761, 0, 0,
	540, 0, 0, 759, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 714, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 722, 723, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 772, 760, 685, 776, 687, 773, 774,
	682, 683, 686, 775, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 763, 671, 670, 0, 678, 0, 704,
	705, 707, 711, 712, 713, 724, 725, 726, 734, 736,
	737, 735, 738, 739, 740, 743, 744, 745, 746, 741,
	742, 747, 688, 692, 689, 690, 691, 703, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 786, 787,
	788, 789, 790, 791, 717, 721, 720, 718, 719, 715,
	716, 669, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 777, 249, 778, 0, 0, 782, 0,
	0, 0, 784, 783, 0, 785, 751, 750, 0, 0,
	779, 780, 0, 781, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 792, 793,
	794, 795, 796, 797, 798, 799, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 812, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 668, 0, 0, 0, 257, 673,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 680, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 676, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 800, 768, 769,
	804, 813, 814, 815, 816, 817, 805, 808, 0, 0,
	228, 806, 807, 235, 708, 710, 709, 727, 728, 729,
	730, 731, 732, 733, 706, 810, 818, 819, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 650,
	665, 0, 679, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 663, 902, 0, 0, 0, 762, 0,
	664, 0, 0, 672, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 761, 0, 0, 540, 0, 0, 759, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 714, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 722, 723, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 772, 760,
	685, 776, 687, 773, 774, 682, 683, 686, 775, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 763, 671,
	670, 0, 678, 0, 704, 705, 707, 711, 712, 713,
	724, 725, 726, 734, 736, 737, 735, 738, 739, 740,
	743, 744, 745, 746, 741, 742, 747, 688, 692, 689,
	690, 691, 703, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 786, 787, 788, 789, 790, 791, 717,
	721, 720, 718, 719, 715, 716, 669, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 777, 249,
	778, 0, 0, 782, 0, 0, 0, 784, 783, 0,
	785, 751, 750, 0, 0, 779, 780, 0, 781, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 792, 793, 794, 795, 796, 797, 798,
	799, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	812, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 668,
	0, 0, 0, 257, 673, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	680, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 676, 677, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 800, 768, 769, 804, 813, 814, 815, 816,
	817, 805, 808, 0, 0, 228, 806, 807, 235, 708,
	710, 709, 727, 728, 729, 730, 731, 732, 733, 706,
	810, 818, 819, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 650, 665, 0, 679, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 663, 0,
	0, 0, 0, 762, 0, 664, 0, 0, 672, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 761, 0, 0,
	540, 0, 0, 759, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 714, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 722, 723, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 772, 760, 685, 776, 687, 773, 774,
	682, 683, 686, 775, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 763, 671, 670, 0, 678, 0, 704,
	705, 707, 711, 712, 713, 724, 725, 726, 734, 736,
	737, 735, 738, 739, 740, 743, 744, 745, 746, 741,
	742, 747, 688, 692, 689, 690, 691, 703, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 786, 787,
	788, 789, 790, 791, 717, 721, 720, 718, 719, 715,
	716, 669, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 777, 249, 778, 0, 0, 782, 0,
	0, 0, 784, 783, 0, 785, 751, 750, 0, 0,
	779, 780, 0, 781, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 792, 793,
	794, 795, 796, 797, 798, 799, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 812, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 668, 0, 0, 0, 257, 673,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 680, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 676, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 800, 768, 769,
	804, 813, 814, 815, 816, 817, 805, 808, 0, 0,
	228, 806, 807, 235, 708, 710, 709, 727, 728, 729,
	730, 731, 732, 733, 706, 810, 818, 819, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 679, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 663, 0, 0, 0, 0, 762, 0,
	664, 0, 0, 672, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 761, 0, 0, 540, 0, 0, 759, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 714, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 722, 723, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 772, 760,
	685, 776, 687, 773, 774, 682, 683, 686, 775, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 763, 671,
	670, 0, 678, 0, 704, 705, 707, 711, 712, 713,
	724, 725, 726, 734, 736, 737, 735, 738, 739, 740,
	743, 744, 745, 746, 741, 742, 747, 688, 692, 689,
	690, 691, 703, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 786, 787, 788, 789, 790, 791, 717,
	721, 720, 718, 719, 715, 716, 669, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 777, 249,
	778, 0, 0, 782, 0, 0, 0, 784, 783, 0,
	785, 751, 750, 0, 0, 779, 780, 0, 781, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 792, 793, 794, 795, 796, 797, 798,
	799, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	812, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 972,
	540, 0, 0, 0, 0, 0, 969, 970, 349, 930,
	316, 191, 215, 963, 967, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 800, 0, 0,
	1459, 1462, 0, 0, 0, 0, 1457, 1461, 0, 0,
	228, 1458, 1456, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 0, 359, 496,
	497, 302, 379, 0, 0, 0, 80, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	88, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 1515, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 1517, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	1296, 0, 1297, 1298, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 0, 359, 496, 497, 302, 379, 0, 0,
	0, 80, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 1496, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 88, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 2008, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 188, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 2006, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 930, 316, 191, 215, 928, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 2008, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 188, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 1496, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 3281,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 2401, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 2386, 0,
	0, 0, 2387, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 1538,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 3405,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 188, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 3281,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 1796, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 1663, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 1661, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 1659, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 1657, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 1655, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 1651, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 1649, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 1647, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 1622, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 1523, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 641, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 583, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 3413, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 0, 359, 496,
	497, 302,
}

var yyPact = [...]int{
	-1000, -1000, 5140, -1000, -455, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2066, 2201,
	-1000, -1000, -1000, -1000, 2256, -1000, 793, 1751, -1000, 2054,
	311, -1000, 46918, 546, -1000, 44338, 545, 219, 29503, -1000,
	215, -1000, 201, 45628, 206, 43693, -1000, -1000, -287, 19173,
	1987, 96, 95, 46918, -1000, -1000, -1000, -1000, 2197, 1746,
	-1000, 409, -1000, -1000, -1000, -1000, -1000, -1000, 43048, -1000,
	904, -1000, -1000, 2060, 2071, 2270, 694, 1964, -1000, 2122,
	1746, -1000, 19173, 2198, 2107, 18528, 18528, 484, -1000, -1000,
	241, -1000, -1000, 24988, 46918, 32083, 392, -1000, 2054, -1000,
	-1000, -1000, 122, -1000, 390, 1633, -1000, 1629, -1000, 750,
	798, 415, 535, 531, 414, 412, 411, 408, 407, 406,
	401, 400, 397, -1000, 723, 723, -111, -125, 1182, 490,
	455, 455, 784, 502, 2019, 2007, -1000, -1000, 723, 723,
	723, 374, 723, 723, 723, 723, 352, 343, 723, 723,
	723, 723, 723, 723, 723, 723, 723, 723, 723, 723,
	723, 723, 723, 723, 723, 430, 2054, 300, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46918, 242, 46918, -1000, 610, 46918, 840, 840, 123,
	840, 840, 840, 840, 218, 674, 88, -1000, 217, 347,
	209, 296, 831, 247, -1000, -1000, 282, 831, 1255, -1000,
	710, 199, -1000, 840, 840, -1000, 12698, 183, 12698, 12698,
	-1000, 2036, -1000, -1000, -1000, -1000, -1000, 1191, -1000, -1000,
	-1000, -1000, -1000, 499, -1000, -1000, -1000, -1000, 45628, 42403,
	410, 743, -1000, -1000, -1000, 105, -1000, -1000, 1333, 1021,
	19173, 1202, -1000, 2187, 660, -1000, -1000, -1000, -1000, -1000,
	569, -1000, 19818, 19818, 19818, 19818, -1000, -1000, 1342, 41758,
	1342, 1342, 19818, 1342, -1000, 19818, 1342, 1342, 1342, 19173,
	1342, 1342, 1342, 1342, -1000, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, -1000, -1000, -1000, -1000, 1342, 605, 1342,
	1342, 1342, 1342, 1342, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1342, 1342, 1342, 1342, 1342, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21108,
	-1000, 16593, 1342, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46918, -1000, 1342, 246, 45628, 45628, 394,
	2122, 1746, -1000, 2197, 2185, 409, -1000, 2336, 1526, 1337,
	1279, 1746, 1585, 46918, -1000, 1646, -1000, -1000, -1000, -1000,
	1867, 1150, 1254, -1000, -1000, -1000, -1000, 1868, 19173, -1000,
	-1000, 2253, -1000, 22403, 598, 2252, 41113, -1000, 484, 484,
	1627, 432, 49, -1000, -1000, -1000, -1000, 740, 28858, -1000,
	-1000, -1000, -1000, 1640, 46918, -1000, -1000, 4787, 1242, -1000,
	1749, -1000, 1602, -1000, 1688, 19173, 1757, 544, 1242, 541,
	540, 508, -1000, -2, -1000, -1000, -1000, -1000, -1000, -1000,
	723, 723, 723, -1000, 393, 2194, 311, 5192, -1000, -1000,
	-1000, 40468, 1748, 1242, -1000, 1747, -1000, 839, 577, 606,
	606, 1242, -1000, -1000, 46273, 1242, 838, 832, 1242, 1242,
	45628, 45628, -1000, 39823, -1000, 39178, 38533, 1084, 45628, 37888,
	37243, 36598, 35953, 35308, -1000, 2001, -1000, 1744, -1000, -1000,
	-1000, 46273, 1242, 1242, 46273, 45628, 46273, 46918, 1242, -1000,
	-1000, 391, -1000, -1000, 1060, 1056, 1052, 723, 723, 1051,
	1253, 1252, 1249, 723, 723, 1047, 1247, 30793, 1241, 327,
	1046, 1030, 1029, 1007, 1237, 184, 1236, 980, 979, 1027,
	45628, 1732, 46918, -1000, 278, 734, 596, 738, 2054, 1981,
	1624, 497, 543, 1242, 467, 467, 45628, -1000, 14648, -1000,
	-1000, 1213, 19173, -1000, 846, 831, 831, -1000, -1000, -1000,
	-1000, -1000, -1000, 840, 46918, 846, -1000, -1000, -1000, 831,
	840, 46918, 840, 840, 840, 840, 831, 831, 831, 840,
	46918, 46918, 46918, 46918, 46918, 46918, 46918, 46918, 46918, 12698,
	710, 840, -317, -1000, 1212, -1000, 1835, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 12698, 12698, -1000, -1000, -1000, -1000, 204,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -38,
	1620, 34663, -1000, -321, -322, -324, -325, -1000, -1000, -1000,
	-328, -330, -1000, -1000, -1000, 19173, 19173, 19173, 19173, -152,
	-1000, 863, 19818, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	174, 789, 19818, 19818, 19818, 19818, 19818, 19818, 19818, 19818,
	19818, 19818, 19818, 19818, 19818, 19818, 19818, -1000, -1000, 26923,
	8004, 8004, 660, 660, 660, 660, -1000, -73, 1607, 46273,
	-1000, -1000, -1000, 593, 19173, 19173, 660, -1000, 1242, 16593,
	34018, 18528, 18528, 19173, 757, 1021, 46273, 19173, -1000, 1279,
	-1000, -1000, -1000, 1057, -1000, 893, 2020, 2020, 2020, 2020,
	19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173,
	2020, 45628, 45628, 2559, 19173, 19173, 19173, 19173, 19173, 19173,
	15298, 19173, 19173, 19818, 19173, 19173, 19173, 1279, 19173, 19173,
	19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173,
	19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173,
	19173, 19173, 19173, 19173, 19173, 1279, 19173, 1092, 19173, 19173,
	18528, 13998, 18528, 18528, 18528, 18528, 18528, -1000, -1000, -1000,
	-1000, -1000, 19173, 19173, 19173, 19173, 19173, 19173, 19173, 19173,
	1279, 19173, 19173, 19173, 19173, 19173, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1412, 1341, 1328, 19173, -1000, 1588, -1000,
	-126, 24343, 19173, 1211, 2235, 1768, 45628, -1000, -1000, -1000,
	2122, -1000, 2122, 1412, 1997, 1874, 18528, -1000, -1000, 1997,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1358, -1000,
	46918, 1585, 2104, 45628, 1862, 1210, 427, -1000, 19173, 19173,
	1579, -1000, 1569, 46918, -1000, -152, -1000, 33373, -1000, -1000,
	12048, 46918, 398, 46918, -1000, 23698, 32728, 244, 49, -1000,
	1515, -1000, 65, 40, 15943, 659, -1000, -1000, -1000, 1182,
	20463, 1329, 659, 139, -1000, -1000, -1000, 1688, -1000, 1688,
	1688, 1688, 1688, 427, 427, 427, 427, -1000, -1000, -1000,
	-1000, -1000, 1717, 1716, -1000, 1688, 1688, 1688, 1688, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1710, 1710, 1710, 1691,
	1691, 445, -1000, 19173, 283, 32083, 2064, 1023, 1654, 278,
	473, 1766, 1242, 1242, 1242, 473, -1000, 1153, 1128, 1118,
	-1000, -444, 1576, -1000, -1000, 2182, -1000, -1000, 773, 870,
	859, 841, 45628, 254, 384, -1000, 457, -1000, 32083, 1242,
	830, 606, 1242, -1000, 1242, -1000, -1000, -1000, -1000, -1000,
	1242, -1000, -1000, 1564, -1000, 1431, 911, 854, 903, 850,
	1564, -1000, -1000, -80, 1564, -1000, 1564, -1000, 1564, -1000,
	1564, -1000, 1564, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 752, 230, -204, 45628, 254, 495, -1000, 493,
	26923, -1000, -1000, -1000, 26923, 26923, -1000, -1000, -1000, -1000,
	1198, 1196, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -431, 46918, -1000, 255, 728, 356, 419, 317, 46918,
	345, 2110, 2105, 2088, 2074, 270, 338, 46918, 46918, 467,
	1799, 46918, 2082, 46918, -1000, -1000, -1000, -1000, -1000, 1021,
	46918, -1000, -1000, 840, 840, -1000, -1000, 46918, 840, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 840, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46918, -1000, -1000, -1000, -1000, 45628, -1000,
	-1000, -1000, -1000, -1000, -1000, 145, 58, 388, -1000, -1000,
	-1000, -1000, -1000, 2115, -1000, 1021, 767, 776, -1000, 1342,
	-1000, -1000, 1020, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	174, 19818, 19818, 19818, 1238, 507, 1315, 1005, 1340, 963,
	963, 884, 884, 665, 665, 665, 665, 665, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1193, -1000, 1342, 46273,
	1558, 13998, 1582, 1963, 1279, 2833, -1000, 1545, -1000, 1545,
	1849, 819, -1000, 19173, 1279, 2822, -1000, -1000, 1279, 1279,
	1279, 19173, -1000, -1000, 19173, 19173, 19173, 19173, 1654, 1654,
	1654, 1654, 1654, 1654, 1654, 1654, 1654, 1654, 19173, 1560,
	1541, 2224, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1041, 1654, 1654, 1654, 1654, 1654, 19173,
	1188, -1000, -1000, -1000, 1471, 2815, 1152, 2794, 1654, 1654,
	-1000, 1654, 2789, 2776, 1279, 1333, 1279, 1523, -1000, 2755,
	1654, 2738, 2729, 2714, 1897, 2699, 2694, 2674, 1654, 1654,
	1654, 1872, 2639, 2608, 2592, 2585, 2568, 2562, 2550, 2528,
	2462, 1654, -154, 1654, 1279, -1000, -1000, -1000, -1000, -1000,
	2372, 1817, 1279, 1519, 1342, 592, -1000, -1000, 1545, 1279,
	1279, 1545, 1545, 2338, 2306, 2291, 2282, 2276, 2240, 1654,
	1654, -1000, 1654, 2225, 2177, 1760, 1680, 1279, -1000, 1328,
	46918, -1000, -298, -1000, 45, 679, 1342, -1000, 30793, 1279,
	-1000, 5872, -1000, 1026, -1000, -1000, -1000, -1000, -1000, 28213,
	1542, 1997, -1000, -1000, 1342, 1534, -1000, -1000, 427, 127,
	27568, 655, 655, 152, 1021, 1021, 19173, -1000, -1000, -1000,
	-1000, -1000, -1000, 589, 2209, 382, 1342, -1000, 1611, 1979,
	-1000, -1000, -1000, 2102, 21758, -1000, 1342, 1342, 46918, 1663,
	1628, -1000, 588, -1000, 1260, 1515, 49, 56, -1000, -1000,
	-1000, -1000, 1021, -1000, 1106, 399, 668, -1000, 454, -1000,
	-1000, -1000, -1000, 1993, 119, -1000, -1000, -1000, 291, 427,
	-1000, -1000, -1000, -1000, -1000, -1000, 1190, 1190, -1000, -1000,
	-1000, -1000, -1000, 1001, -1000, -1000, -1000, 998, -1000, -1000,
	2072, 1821, 283, -1000, -1000, 723, 1189, -1000, -1000, 2002,
	723, 723, 45628, -1000, -1000, 1324, 2064, 255, 46918, 756,
	1798, -1000, 1766, 1766, 1766, 46918, -1000, -1000, -1000, -1000,
	-1000, -1000, -433, 62, 402, -1000, -1000, -1000, 4162, 45628,
	1532, -1000, 252, -1000, 1309, -1000, 45628, -1000, 1528, 1709,
	1242, 1242, -1000, -1000, -1000, 45628, 1342, -1000, -1000, -1000,
	-1000, 532, 2052, 298, -1000, -1000, -174, -1000, -1000, 254,
	252, 46273, 1242, 659, -1000, -1000, -1000, -1000, -1000, -434,
	1513, 512, 245, 358, 46918, 46918, 46918, 46918, 46918, 558,
	-1000, -1000, -1000, -1000, 225, -1000, -1000, -1000, 225, -1000,
	-1000, -1000, -1000, 309, 492, -1000, 46918, 46918, 619, -1000,
	-1000, -1000, 831, -1000, -1000, 831, -1000, -1000, -1000, -1000,
	-1000, 2044, 46918, 54, -356, -1000, -353, 19173, -1000, -1000,
	-1000, -1000, 1096, 506, 1315, 19818, 19818, 19818, -1000, -1000,
	-1000, 788, 788, 26923, -1000, 19173, 18528, -1000, -1000, 19173,
	19173, 745, -1000, 19173, 921, -1000, 19173, -1000, -1000, -1000,
	1328, 1654, 1654, 1654, 1654, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1547, 19173, 19173, 19173, 1279,
	334, -1000, -1000, -1000, -1000, -1000, 2223, -1000, 19173, -1000,
	26923, 19173, 19173, 19173, -1000, -1000, -1000, 19173, 19173, -1000,
	-1000, 19173, 19173, -1000, 19173, 19173, 19173, -1000, 19173, 19173,
	19173, 19173, -1000, -1000, -1000, -1000, 19173, 19173, 19173, 19173,
	19173, 19173, 19173, 19173, 19173, 19173, -1000, -1000, 32083, 100,
	-154, 1092, 100, 1092, -1000, 18528, 13348, -1000, -1000, -1000,
	-1000, -1000, 19173, 19173, 19173, 19173, 19173, 19173, -1000, -1000,
	-1000, 19173, 19173, -1000, 19173, -1000, 19173, -1000, -1000, -1000,
	-1000, -1000, 679, -1000, 606, 606, 606, 45628, -1000, -1000,
	-1000, -1000, 1511, -1000, 2140, -1000, 1891, 1889, 2221, 2209,
	-1000, 23698, 1997, -1000, -1000, 45628, -277, -1000, 1973, 1982,
	655, 655, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11398,
	2122, 19173, 1797, 46273, 177, -1000, 23053, 45628, 46273, 23698,
	23698, 23698, 23698, 23698, -1000, 1844, 1840, -1000, 1841, 1832,
	1902, 46918, -1000, 1500, 1279, 2185, 21758, 409, 19173, 25633,
	1604, 23698, -1000, -1000, 23698, 46918, 10748, -1000, -1000, 50,
	33, -1000, -1000, -1000, -1000, 1182, -1000, -1000, 1248, 2101,
	1985, -1000, -1000, -1000, -1000, -1000, 1488, -1000, 1482, 1504,
	1480, 230, -1000, 1685, 2038, 723, 723, -1000, 995, -1000,
	1242, 1187, 1177, -1000, -1000, -1000, 491, -1000, 2079, 46918,
	1792, 1791, 1790, -1000, -442, 994, 1706, 1653, 19173, 1703,
	2178, 1493, 45628, -1000, -1000, 46273, -1000, 238, -1000, 283,
	45628, -1000, -1000, -1000, 384, 46918, -1000, 5674, -1000, -1000,
	-1000, 252, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46918,
	268, -1000, 1698, 1155, -1000, -1000, 1264, -1000, -1000, -1000,
	-1000, 243, 355, 223, 1175, 223, -1000, 46918, 586, 1821,
	46918, -1000, -1000, -1000, 840, 840, -1000, -1000, 2032, -1000,
	1242, 1654, 19818, 19818, -1000, 660, 237, -132, 1688, 1688,
	-1000, 1688, 1691, -1000, 1688, 194, 1688, 193, 1688, -1000,
	-1000, 1279, 1279, 1328, -1000, 1599, 1322, -1000, 1021, 19173,
	2159, -1000, -1000, -1000, -1000, -1000, -15, 2152, 2108, 1654,
	-1000, 1686, 1683, 19173, 1654, 1279, 1586, 1654, 1654, 1654,
	1654, -1000, 1021, 1328, 2103, 1328, 1654, 1654, 2086, 332,
	1654, 1476, 1476, 1476, 1476, 1476, 1328, 1328, 1328, 1328,
	45628, -1000, -154, -1000, -1000, -194, -196, -1000, 1279, -154,
	1498, 1279, -1000, 1573, 1562, 2035, 1543, 1654, 1999, 1654,
	1654, 1654, 1530, -1000, 2113, 2113, 2113, 1465, 1026, 46918,
	-1000, -1000, -1000, -1000, 2209, 2206, 1495, -1000, -1000, 127,
	450, -1000, 1906, 1982, -1000, 2174, 1966, 2172, -1000, -1000,
	-1000, -1000, -1000, 1021, -1000, 2057, 1502, -1000, 726, 1401,
	-1000, -1000, 17883, 1474, 1881, 578, 1465, 1508, 1979, 1763,
	1788, 2047, -1000, -1000, -1000, -1000, 1824, -1000, 1811, -1000,
	-1000, 1646, -1000, -1000, 1341, 1279, 1935, 398, 23698, 1443,
	1443, -1000, 573, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	807, 4130, 2269, -1000, 1161, -1000, 1097, 226, 989, -1000,
	-1000, 723, 723, -1000, 826, 821, -1000, 46918, 1677, -1000,
	427, 1159, 427, 986, -1000, 983, -1000, -1000, -1000, -1000,
	1669, 1815, -1000, -1000, -1000, -1000, 46918, -1000, -1000, 46918,
	46918, 46918, 1672, 2170, -1000, 19173, 1661, 725, 1930, 45628,
	45628, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 478, 723, -371, 325, 315, 723, 723, 723,
	-443, -1000, -1000, 1448, 1439, -1000, -114, -1000, 19173, -1000,
	-1000, -1000, 1067, 1067, -1000, 1646, -1000, -1000, -1000, 1293,
	-1000, -1000, -87, 45628, 45628, 45628, 45628, -1000, 932, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 660, 1279, 364, -91, 1279, -1000, -1000, 427, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19173,
	-1000, 19173, -1000, 1021, 19173, 2122, 1157, 19173, 19173, -1000,
	976, 973, 1654, -1000, -1000, -1000, 19173, -1000, -1000, -1000,
	-1000, -1000, 19173, -1000, -1000, -1000, 19173, 253, 788, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1279,
	395, -1000, -1000, -1000, -1000, 2214, -1000, 1279, 19173, -1000,
	-1000, 19173, -1000, 19173, 19173, -1000, 19173, -1000, 19173, -1000,
	-1000, -1000, -1000, 19173, 1342, 1958, 1342, 1342, 25633, -1000,
	-1000, 2206, 2179, 2169, 1934, 1949, 1949, 1906, -1000, 2167,
	2166, -1000, 1156, 2165, 1154, 799, -1000, 46273, 19173, 177,
	-1000, 403, 45628, 177, 45628, -1000, 2202, -1000, -1000, 19173,
	1658, -1000, 19173, -1000, -1000, -1000, -1000, -1000, -1000, 8004,
	2209, 1443, -1000, -1000, 671, -1000, 19173, -1000, -1000, -1000,
	3544, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1148,
	1139, -1000, -1000, 1651, 19173, -1000, -1000, -1000, 1291, 1287,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1646, -1000,
	-1000, -1000, -1000, 384, -438, 1916, 45628, 967, -1000, 1409,
	1493, 363, 177, 1131, 723, 723, 723, 952, 947, 30793,
	1407, -1000, 45628, 434, -1000, 384, -1000, -127, -128, 1654,
	-1000, -1000, 2093, -1000, -1000, 13348, -1000, -1000, 1645, 1753,
	-1000, -1000, -1000, -1000, 1861, -78, -108, -1000, -1000, 1654,
	1654, 1648, 1279, -1000, 1654, 1654, 1285, 1281, -1000, 1654,
	1328, 1525, -1000, 253, 1279, 1786, -1000, -1000, 8004, -1000,
	-1000, 2202, 2157, 100, -1000, -1000, 248, 100, 1021, 1444,
	1654, 1380, 1376, 1654, 1654, 26278, -1000, 2149, 2136, 31438,
	31438, 679, 2179, -163, 19173, 19173, 1877, 923, -1000, -1000,
	-1000, -1000, 1129, 1121, -1000, 1103, -1000, 2265, -1000, 1021,
	-1000, 177, -1000, 563, 1401, -1000, 2122, 1021, 45628, 1021,
	115, 2202, -1000, 1654, -1000, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 1342, -1000, -1000, 45628, 1855, -1000,
	-1000, 2085, 1405, 61, -1000, 1403, -1000, -1000, 173, -1000,
	19173, -1000, 30793, 1101, 1095, -1000, -1000, -1000, -1000, -443,
	-1000, -1000, -1000, -1000, -1000, -1000, 409, 1462, -1000, 722,
	45628, 46918, -1000, 1852, -1000, -1000, -1000, 19173, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19173, -1000, 1279, 1785,
	-1000, -246, -1000, -370, 19173, -154, -1000, -1000, -154, -1000,
	19173, -1000, -1000, 19173, -1000, 19173, -1000, -1000, 1387, -1000,
	-1000, -1000, -1000, -1000, 1387, 1387, -1000, -163, -1000, 1434,
	-1000, 45628, 1021, 1333, -1000, 912, -1000, -1000, -1000, -1000,
	-1000, 46273, 1401, 45628, -1000, 1385, 1279, 1342, 2122, -1000,
	1382, -1000, 409, -1000, 1644, 1653, -1000, -1000, -1000, 17238,
	-1000, -1000, -1000, -1000, -1000, 212, -83, 13348, 10098, 1367,
	-1000, -82, 1654, 1328, -1000, -346, -1000, -1000, -1000, -1000,
	210, -1000, -1000, 1333, -1000, -1000, 1284, 1274, 1251, 30148,
	-1000, -1000, -1000, -1000, -163, -1000, -1000, 2084, -1000, -1000,
	1098, -1000, -1000, 25633, 44983, -1000, -69, 329, -83, 19173,
	1643, 1279, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13, -1000, -1000, -1000, -1000, -1000, 1264, -94, -1000, -1000,
	-1000, 207, -360, -176, -185, -1000, -1000, 19818, -1000, 19173,
	-1000, 19173, -1000, 19173, -1000, -1000, -1000, 45628, 1342, -1000,
	1308, -1000, 4739, -208, 1781, -1000, -33, -1000, -1000, -1000,
	806, 925, -1000, -1000, -1000, -1000, -1000, -1000, 1838, 45628,
	-1000, 444, -1000, -1000, -87, -124, 775, -1000, -1000, -1000,
	-1000, -1000, 1132, 1061, 1654, -1000, 45628, -1000, 44983, -201,
	659, 8004, -1000, 1780, 1774, 2219, -1000, -1000, -1000, -1000,
	-1000, -1000, -449, 1305, 271, -1000, -1000, 207, -1000, 19173,
	-1000, 19173, -1000, 1279, -1000, -1000, 2075, 115, -1000, 2258,
	-1000, 2220, 706, 706, -1000, 946, -449, -1000, -1000, 1654,
	1654, -1000, -209, -1000, -1000, -1000, -1000, -1000, 440, 977,
	-1000, -1000, -1000, -1000, -1000, 8004, -1000, -1000, -1000, 239,
	239, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2828, 2827, 34, 7, 43, 40, 2821, 27, 102,
	191, 60, 192, 112, 2818, 2817, 2815, 2812, 2810, 2807,
	2796, 254, 218, 217, 2795, 2794, 2789, 2787, 2785, 2784,
	2783, 2777, 2774, 2773, 216, 170, 188, 2772, 2771, 2768,
	130, 200, 89, 94, 187, 2767, 2765, 84, 2764, 2763,
	2762, 182, 181, 180, 815, 2760, 178, 124, 54, 2758,
	2757, 2756, 2753, 2752, 2750, 2749, 2746, 2744, 2743, 2738,
	2737, 2735, 2734, 2730, 2728, 2727, 273, 2723, 2721, 24,
	2720, 86, 2719, 2717, 2714, 2713, 12, 2712, 2711, 16,
	42, 2706, 2704, 52, 2696, 2692, 2691, 2688, 2684, 21,
	2676, 25, 2674, 44, 2671, 2670, 131, 2669, 2646, 2641,
	45, 2640, 2633, 2632, 2620, 2613, 2604, 2597, 151, 2594,
	2590, 2585, 173, 189, 2581, 2580, 172, 116, 141, 2579,
	2578, 103, 186, 2577, 137, 2576, 2575, 2574, 157, 2573,
	2326, 2571, 2569, 77, 70, 2567, 118, 2565, 2563, 11,
	29, 74, 10, 4, 5, 2561, 2560, 76, 91, 2559,
	114, 2558, 2556, 104, 78, 2555, 105, 100, 2552, 2551,
	17, 9, 2550, 2, 6, 3, 73, 2548, 2547, 121,
	2545, 2543, 2535, 96, 2533, 2526, 4436, 2518, 90, 143,
	111, 83, 2517, 51, 71, 2508, 2507, 2506, 2505, 2504,
	57, 2503, 2502, 2498, 142, 55, 171, 2497, 47, 75,
	64, 145, 2495, 28, 97, 174, 2494, 2492, 140, 139,
	2488, 2487, 67, 49, 46, 2486, 110, 134, 136, 56,
	108, 158, 2485, 2483, 65, 81, 2482, 2481, 2480, 2479,
	175, 2476, 2474, 80, 2473, 66, 2472, 190, 2469, 19,
	58, 50, 164, 2468, 82, 2463, 2457, 72, 113, 79,
	41, 2455, 165, 2448, 62, 169, 132, 166, 2440, 2439,
	2438, 2437, 201, 338, 2436, 2426, 154, 176, 152, 156,
	98, 2418, 346, 2411, 2410, 106, 1159, 5398, 2409, 39,
	167, 2408, 2407, 6799, 147, 48, 31, 2406, 117, 2405,
	2404, 2402, 2397, 193, 185, 119, 168, 68, 2396, 2394,
	2392, 18, 2387, 2385, 2384, 2382, 2381, 2375, 87, 38,
	37, 36, 195, 69, 14, 99, 160, 88, 2371, 2368,
	2367, 129, 95, 2361, 163, 162, 135, 138, 2341, 177,
	149, 126, 2339, 61, 35, 2336, 2335, 2334, 2333, 101,
	2331, 2324, 2323, 2322, 159, 144, 123, 93, 2320, 85,
	127, 155, 153, 59, 2319, 53, 2318, 2315, 33, 183,
	32, 2313, 20, 115, 122, 2309, 4659, 179, 2308, 22,
	347, 161, 2307, 2306, 8, 13, 15, 2305, 2303, 2302,
	2301, 146, 2300, 2297, 2294, 2293, 26, 63, 23, 1,
	120, 92, 2285, 2284, 4160, 0, 133, 2283, 202,
}

//line sql.y:7818
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 402, 403, 403, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 254, 376,
	377, 377, 252, 252, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 406, 406, 181, 181, 179, 179, 180, 180, 257,
	257, 24, 25, 25, 267, 267, 266, 266, 266, 268,
	268, 268, 268, 306, 306, 306, 26, 26, 26, 26,
	26, 124, 124, 379, 379, 378, 372, 372, 371, 371,
	370, 375, 375, 374, 374, 373, 38, 39, 48, 48,
	48, 48, 49, 50, 380, 380, 345, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 347, 347, 333, 333, 346, 346, 346,
	346, 346, 346, 346, 332, 332, 135, 135, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 395, 395, 395, 394, 394,
	233, 233, 233, 233, 233, 233, 233, 233, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 156, 156, 152,
	152, 152, 153, 153, 153, 154, 154, 396, 396, 396,
	396, 311, 311, 311, 311, 314, 314, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 313, 313, 313, 313,
	313, 315, 315, 315, 315, 315, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 317, 317, 317, 317, 317, 317, 317, 317,
	331, 331, 318, 318, 326, 326, 327, 327, 327, 328,
	328, 328, 329, 329, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 325, 325, 324, 324, 324, 334, 359,
	359, 358, 358, 356, 356, 356, 356, 356, 356, 356,
	356, 343, 343, 353, 353, 353, 353, 353, 342, 342,
	338, 338, 338, 339, 339, 340, 340, 337, 337, 341,
	341, 355, 355, 354, 354, 335, 335, 336, 336, 361,
	397, 397, 397, 397, 397, 398, 398, 362, 387, 389,
	389, 389, 388, 388, 385, 386, 384, 384, 384, 384,
	384, 81, 81, 81, 280, 280, 281, 281, 351, 351,
	350, 350, 350, 352, 352, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 275, 275, 275, 383,
	383, 383, 383, 383, 383, 382, 382, 382, 348, 348,
	348, 381, 381, 57, 57, 214, 214, 400, 400, 401,
	401, 401, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 46, 46, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 106,
	106, 107, 107, 107, 107, 109, 109, 109, 364, 364,
	58, 58, 3, 3, 169, 171, 172, 172, 170, 170,
	170, 170, 170, 170, 60, 60, 59, 59, 174, 173,
	175, 175, 175, 1, 1, 2, 2, 4, 4, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 330, 330, 330, 363, 363, 365, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 112, 111, 111,
	110, 113, 113, 113, 113, 113, 113, 113, 113, 367,
	367, 367, 61, 61, 368, 319, 320, 321, 5, 6,
	344, 366, 120, 120, 28, 37, 37, 29, 29, 29,
	29, 30, 30, 62, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 274, 274, 283, 283, 273,
	273, 298, 298, 298, 276, 276, 276, 277, 277, 393,
	393, 393, 270, 270, 64, 64, 64, 299, 299, 299,
	299, 66, 66, 67, 68, 68, 301, 301, 302, 302,
	69, 70, 82, 82, 82, 82, 82, 82, 82, 105,
	105, 105, 15, 15, 15, 15, 78, 78, 78, 14,
	14, 65, 65, 72, 390, 390, 391, 392, 392, 392,
	392, 73, 75, 31, 31, 31, 31, 31, 31, 130,
	130, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 125, 125, 125, 119, 119, 407, 76,
	77, 77, 123, 123, 123, 116, 116, 116, 122, 122,
	122, 16, 16, 17, 256, 256, 18, 18, 127, 127,
	129, 129, 129, 129, 129, 131, 131, 131, 131, 131,
	131, 131, 126, 126, 128, 128, 128, 128, 291, 291,
	291, 290, 290, 163, 163, 165, 164, 164, 166, 166,
	167, 167, 167, 167, 212, 212, 189, 189, 250, 250,
	249, 249, 255, 255, 251, 251, 251, 251, 258, 258,
	168, 168, 168, 168, 176, 176, 177, 177, 178, 178,
	300, 300, 296, 296, 296, 295, 295, 182, 182, 182,
	184, 183, 183, 183, 183, 185, 185, 187, 187, 186,
	186, 188, 193, 193, 192, 192, 190, 190, 190, 190,
	191, 191, 191, 191, 194, 194, 140, 140, 140, 140,
	140, 140, 140, 155, 155, 155, 155, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 240, 240,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 149, 216,
	216, 215, 215, 83, 83, 83, 84, 84, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 86, 141, 141,
	88, 88, 87, 87, 207, 207, 288, 288, 89, 90,
	90, 93, 93, 92, 91, 91, 97, 97, 94, 94,
	96, 96, 95, 98, 98, 99, 100, 100, 271, 271,
	195, 195, 203, 203, 203, 203, 196, 196, 196, 196,
	196, 196, 196, 204, 204, 204, 211, 205, 205, 201,
	201, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 160, 160, 160,
	160, 221, 221, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 148, 148,
	161, 161, 161, 161, 162, 162, 162, 162, 162, 162,
	162, 308, 308, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 408, 408, 322, 322, 322, 322,
	202, 202, 202, 202, 202, 121, 121, 121, 121, 121,
	305, 305, 305, 309, 309, 309, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 310, 310, 219, 219, 117, 117, 217, 217, 218,
	220, 220, 213, 213, 213, 213, 198, 198, 198, 222,
	222, 223, 223, 101, 102, 102, 103, 103, 224, 224,
	226, 225, 225, 227, 228, 228, 228, 229, 229, 230,
	230, 230, 47, 47, 47, 47, 47, 42, 42, 42,
	42, 43, 43, 43, 43, 132, 132, 132, 132, 134,
	134, 133, 133, 79, 79, 80, 80, 80, 138, 138,
	139, 139, 139, 136, 136, 137, 137, 247, 247, 231,
	231, 231, 238, 238, 238, 234, 234, 236, 236, 236,
	237, 237, 237, 235, 244, 244, 246, 246, 245, 245,
	241, 241, 242, 242, 243, 243, 243, 239, 239, 197,
	197, 197, 197, 197, 248, 248, 248, 248, 259, 259,
	208, 208, 210, 210, 209, 209, 159, 260, 260, 264,
	261, 261, 265, 265, 265, 265, 253, 253, 253, 262,
	262, 263, 263, 292, 292, 292, 269, 269, 282, 282,
	278, 278, 279, 279, 272, 272, 284, 284, 284, 74,
	206, 206, 360, 360, 357, 287, 287, 289, 289, 293,
	293, 297, 297, 294, 294, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 404, 405, 303, 304, 304,
	304,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 5, 5, 5, 7, 7, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 3, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 5, 2, 3, 3, 2, 3, 4, 4, 4,
	3, 4, 4, 5, 3, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 1, 1, 2, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 7, 7,
	6, 6, 2, 2, 1, 6, 3, 3, 3, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 4, 8, 6, 8, 6, 5, 4, 10,
	2, 2, 1, 2, 2, 2, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 8, 8, 8, 6, 5, 4, 4, 4,
	4, 4, 7, 4, 4, 6, 6, 6, 8, 6,
	6, 4, 4, 3, 4, 6, 6, 4, 4, 4,
	6, 8, 6, 4, 6, 6, 8, 10, 7, 8,
	8, 9, 4, 4, 4, 4, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 4, 4, 6, 5,
	9, 6, 9, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 6, 8,
	4, 4, 3, 4, 6, 6, 4, 6, 4, 6,
	8, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 2, 1, 3, 0, 1, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 4, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -402, -76, -407, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 9, 10, -104, -33, 32, -38, -48, 223, -49,
	-39, 224, -50, 226, 225, 262, 227, 255, 74, 308,
	309, 311, 312, 313, 314, -105, 260, 261, 229, 36,
	45, 33, 34, 37, 233, 268, 269, 232, -10, -34,
	8, -404, 11, 440, 257, 256, 28, -12, 502, 86,
	-77, -403, 654, -247, -231, 22, 33, 29, -230, -226,
	-123, -231, 20, 18, 7, -76, -76, -76, 12, 13,
	-76, -345, -347, 86, 157, 86, -76, -55, -54, -52,
	-51, -53, -56, 31, -45, -46, -369, -44, -41, 228,
	225, 272, 121, 122, 262, 263, 264, 227, 246, 261,
	265, 260, 281, -40, 81, 33, 502, 505, -352, 224,
	230, 231, 226, 441, 124, 123, 75, -349, 363, 535,
	624, -56, 626, 102, 105, 625, 44, 236, 627, 628,
	629, 542, 630, 245, 631, 632, 633, 634, 640, 583,
	641, 642, 643, 125, 7, -76, -297, -293, 89, -286,
	499, 248, 533, 534, 297, 81, 41, 508, 360, 363,
	535, 470, 624, 308, 322, 316, 475, 476, 477, 343,
	335, 500, 536, 509, 300, 249, 285, 618, 333, 133,
	626, 303, 537, 263, 368, 369, 538, 370, 102, 311,
	407, 639, 302, 539, 637, 105, 625, 79, 469, 51,
	621, 44, 258, 331, 232, 327, 627, 286, 540, 511,
	279, 124, 121, 646, 36, 325, 50, 30, 636, 123,
	49, 628, 148, 541, 629, 542, 372, 350, 612, 48,
	373, 264, 543, 84, 269, 504, 306, 620, 374, 489,
	326, 375, 296, 635, 229, 544, 603, 595, 596, 376,
	377, 613, 355, 351, 356, 491, 545, 399, 474, 378,
	599, 600, 653, 52, 546, 547, 614, 122, 548, 78,
	630, 80, 320, 321, 549, 294, 247, 494, 495, 401,
	347, 452, 459, 460, 109, 110, 455, 111, 461, 112,
	462, 463, 464, 453, 113, 106, 454, 465, 466, 348,
	349, 114, 467, 108, 107, 456, 458, 115, 468, 245,
	35, 379, 501, 298, 58, 273, 402, 46, 353, 650,
	45, 608, 496, 550, 611, 346, 342, 449, 53, 551,
	552, 553, 554, 471, 631, 345, 319, 341, 645, 4,
	291, 472, 632, 62, 231, 358, 357, 359, 280, 398,
	338, 555, 556, 557, 252, 82, 558, 328, 21, 559,
	560, 380, 287, 561, 56, 562, 563, 405, 261, 564,
	54, 633, 39, 565, 266, 647, 634, 566, 567, 568,
	569, 268, 570, 382, 571, 597, 598, 381, 352, 354,
	497, 275, 383, 503, 572, 307, 324, 265, 638, 573,
	253, 485, 486, 487, 488, 619, 493, 492, 267, 272,
	260, 406, 254, 574, 575, 576, 577, 578, 301, 594,
	579, 580, 312, 640, 450, 43, 581, 582, 583, 584,
	585, 295, 290, 400, 409, 61, 83, 365, 586, 587,
	617, 318, 288, 588, 309, 55, 641, 642, 643, 282,
	644, 478, 479, 480, 481, 9, 651, 652, 473, 385,
	125, 292, 293, 47, 339, 274, 589, 304, 590, 329,
	330, 344, 317, 340, 310, 604, 276, 386, 451, 262,
	591, 408, 289, 361, 366, 305, 507, 490, 281, 387,
	616, 506, 482, 483, 337, 334, 283, 484, 592, 388,
	237, 277, 278, 593, 605, 389, 390, 299, 391, 392,
	393, 394, 395, 397, 396, 601, 602, 284, 505, 315,
	332, 367, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	448, 235, -76, 235, -186, -293, 235, -262, 369, -283,
	371, 384, 379, 389, 377, -274, 380, 382, 275, -393,
	399, 235, 386, 223, 372, 381, 390, 391, 299, 397,
	392, 396, 284, 393, 394, 395, -376, 175, 629, 644,
	133, 336, 376, 374, 400, 608, 89, -299, 89, 90,
	91, -286, 310, -301, 315, -287, -376, -286, 313, -186,
	-82, 603, 227, -303, -303, -125, 608, 610, -205, -140,
	141, -155, -158, -146, -150, -199, -200, -201, -202, -156,
	-213, -252, 164, 165, 172, 142, -211, -159, 26, 498,
	442, 441, 175, 31, -149, 218, 68, 69, 444, 144,
	57, 11, 417, 418, -157, 412, 419, 414, 469, 471,
	472, 473, 470, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 474, 446, 447, 116, 448, 106, 108,
	107, 449, 450, 451, 333, 496, 497, 491, 494, 495,
	493, 492, 348, 349, 452, 453, 454, 109, 110, 111,
	112, 113, 114, 115, 455, 458, 456, 457, 459, 460,
	461, 466, 467, 462, 463, 464, 465, 468, -85, -97,
	524, 523, -98, -147, -148, -161, -162, -287, -293, 240,
	411, 234, 170, 440, -151, -144, -376, -286, 90, 91,
	-8, -209, 410, 415, 416, 420, 413, 510, 512, 527,
	528, 530, 515, 520, 519, 522, 485, 486, 487, 488,
	489, 490, 595, 596, 597, 598, 599, 600, 601, 602,
	89, -153, -152, -195, 92, 98, 103, 104, 99, -399,
	117, -404, 622, 93, 94, 95, 96, 97, 118, 119,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 44, 385, 385, -186, -76, -76, -76, -76,
	-224, -123, -226, -10, -8, -404, 8, -76, -8, -9,
	-13, -34, -36, 529, -35, -293, 101, -231, -247, 12,
	160, 42, 50, -229, -230, -12, -8, -140, 19, 23,
	24, -128, 166, -140, -293, -128, -272, 239, -76, -76,
	-261, -306, 310, -265, 400, 608, 399, -253, -263, 89,
	-252, -262, 398, -346, 157, -332, -336, -287, 250, -362,
	246, -186, -355, -354, -287, -404, -124, -282, 236, 244,
	243, 134, -380, 137, 292, 411, 234, -51, -52, -53,
	-262, 174, 628, -106, 267, 271, 87, 87, -336, -335,
	-334, -381, 271, 250, -361, -353, 242, 251, -342, 243,
	244, -337, 236, 135, -381, -337, 241, 251, 246, 250,
	271, 271, 125, 271, 125, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 266, -343, 149, -343, 506, 506,
	-349, -381, 246, 236, -381, -381, 242, -284, -337, 238,
	25, 238, 35, 35, -343, -343, -343, -262, 174, -343,
	-343, -343, -343, 279, 279, -343, -343, -343, -343, -343,
	-343, -343, -343, -343, -343, -343, -343, -343, -343, -343,
	-343, -343, 235, -380, -132, 396, 299, 81, -54, 281,
	-37, -186, -282, 236, 237, -380, 268, -186, 219, -186,
	-276, 157, 15, -276, -273, 385, 383, 370, 375, -276,
	-276, -276, -276, 282, 368, -338, 236, 35, 247, 385,
	282, 368, 282, 283, 282, 283, 378, 388, 282, -298,
	14, 160, 411, 373, 377, 275, 235, 276, 237, 387,
	283, -298, 93, -277, 157, 385, 278, -276, -276, -304,
	-404, -289, -287, -285, 228, 23, 140, 25, 27, 143,
	175, 128, 19, 144, 37, 230, 336, 246, 174, 242,
	441, 223, 72, 510, 412, 414, 410, 417, 443, 444,
	411, 371, 31, 13, 512, 28, 256, 24, 38, 168,
	225, 147, 513, 259, 26, 257, 116, 119, 515, 22,
	75, 251, 14, 244, 40, 16, 516, 517, 17, 240,
	239, 160, 236, 70, 11, 218, 29, 156, 66, 518,
	135, 519, 520, 521, 522, 129, 68, 157, 20, 648,
	415, 416, 33, 609, 498, 270, 170, 73, 59, 610,
	141, 413, 523, 524, 117, 525, 120, 76, 615, 137,
	18, 71, 42, 526, 271, 527, 241, 649, 528, 403,
	529, 158, 226, 440, 69, 159, 622, 530, 623, 234,
	384, 8, 445, 32, 255, 243, 127, 67, 531, 235,
	146, 446, 447, 238, 130, 118, 7, 134, 34, 12,
	74, 77, 418, 419, 420, 57, 126, 502, 145, 15,
	532, 404, 139, -376, 611, -304, -304, 32, 90, 238,
	-287, -78, -287, 93, -15, -11, -22, -21, -23, 149,
	-130, 385, -118, 175, 629, 612, 613, 614, 611, 382,
	619, 617, 615, 282, 616, 87, 137, 139, 140, 4,
	-140, 156, -196, 149, 150, 151, 152, 153, 154, 155,
	160, 141, 143, 157, -240, 138, 161, 162, 163, 164,
	165, 166, 167, 169, 168, 170, 171, 158, 159, 174,
	221, 222, -150, -150, -150, -150, -211, -216, -215, -404,
	-213, -376, -286, -293, -404, -404, -150, -271, -404, -404,
	-150, -404, -404, -404, -219, -140, -404, -404, -408, -404,
	-408, -408, -322, -404, -322, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, 219, -404, -404, -404, -404, -404, -322, -322, -322,
	-322, -322, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, 104, 98, 103, 92,
	-213, 99, 93, -8, -9, -205, -404, -303, -390, -391,
	-189, -186, -404, 299, -287, -287, 268, -229, -12, -8,
	-224, -230, -226, -8, -76, -116, -129, 63, 64, -131,
	24, 38, 67, 65, 23, -405, 88, -405, -247, -405,
	87, -36, -250, 86, 61, 43, 93, 93, 87, 21,
	-225, -227, -140, 14, -291, 4, -290, 25, -287, 93,
	219, 14, -187, 29, -186, -272, -272, 87, 310, 89,
	-267, -266, 401, 403, 149, -292, -287, 93, 31, 88,
	87, -186, -311, -314, -316, -315, -317, -312, -313, 333,
	334, 175, 337, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 350, 32, 258, 329, 330, 331, 332, 351,
	352, 353, 354, 356, 357, 358, 359, 316, 335, 500,
	317, 318, 319, 320, 321, 322, 324, 325, 326, 327,
	328, -377, -376, 86, 88, 87, -318, 86, -140, -132,
	235, -376, 236, 236, 236, -76, 440, -343, -343, -343,
	266, 19, -44, -41, -369, 18, -40, -41, 228, 121,
	122, 225, 86, -332, 86, -341, -377, -376, 86, 135,
	241, 134, -340, -337, -340, -341, -376, -213, -376, 135,
	135, -376, -376, -258, -287, -258, -258, 23, -258, 23,
	-258, 23, 95, -287, -258, 23, -258, 23, -258, 23,
	-258, 23, -258, 23, 31, 78, 79, 80, 31, 82,
	83, 84, -213, -376, -376, -213, -332, -213, -186, -376,
	-262, 95, 95, 95, -343, -343, 95, 93, 93, 93,
	-343, -343, 95, 93, -295, -293, 93, 93, -382, 252,
	296, 298, 95, 95, 95, 95, 31, 93, -383, 31,
	636, 635, 637, 638, 639, 93, 95, 31, 95, 31,
	95, -287, 86, -186, -138, 286, 223, 225, 228, 76,
	93, 302, 300, 304, 305, 149, 44, 87, 238, 235,
	-376, -278, 240, -278, -287, -294, -293, -285, 93, -140,
	-339, 14, 160, -298, -298, -276, -186, -339, -298, -276,
	-186, -276, -276, -276, -276, -298, -298, -298, -276, -293,
	-293, -186, -186, -186, -186, -186, -186, -186, -304, -277,
	-276, 611, 93, -270, 14, 76, -304, -304, -302, 313,
	347, 604, 605, 607, 606, 87, 502, -179, -186, 611,
	611, 611, 611, 611, 611, -140, -140, -140, -140, 525,
	-203, 117, 141, 118, 119, -158, -204, -209, -211, 100,
	160, 143, 157, -240, -146, -150, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -305,
	-287, 93, 175, -154, -153, 99, -399, -154, 499, 87,
	-215, 219, -140, -140, -376, -140, -287, -126, -128, -126,
	-140, -217, -218, 145, -213, -140, -405, -405, 95, 99,
	166, -122, 24, 38, -122, -122, -122, -122, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -122, -287,
	-287, -115, -114, 422, 423, 424, 425, 427, 428, 429,
	432, 433, 437, 438, 421, 439, 426, 431, 434, 435,
	436, 430, 332, -140, -140, -140, -140, -140, -140, -83,
	-140, 128, 129, 130, -205, -140, -146, -140, -140, -140,
	-405, -140, -140, -140, -206, -205, -375, -374, -373, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -405, -140, -160, -144, 95, -254, 99, 90,
	-140, -140, -127, -126, -289, -294, -285, -286, -126, -127,
	-127, -126, -126, -140, -140, -140, -140, -140, -140, -140,
	-140, -405, -140, -140, -140, -140, -140, -247, -405, -205,
	87, -392, 403, 404, 609, -296, 271, -295, 25, -206,
	93, 14, -256, 77, -287, -229, -229, 63, 64, 59,
	-126, -131, -405, -35, 25, -249, -287, 62, 93, -323,
	-262, 360, 361, 175, -140, -140, 87, -228, 27, 28,
	-186, -290, 166, -294, -186, -257, 271, -186, -164, -166,
	-167, -168, -189, -212, -404, -169, 521, 518, 14, -179,
	-180, -188, -293, -265, -306, -267, 87, 402, 404, 405,
	76, 120, -140, -324, 174, -351, -350, -349, -332, -334,
	-335, -336, 88, -324, -328, 366, 365, -318, -318, -318,
	-318, -318, -323, -323, -323, -323, 86, 86, -318, -318,
	-318, -318, -326, 86, -326, -326, -327, 86, -327, -362,
	-140, -359, -358, -356, -357, 245, 102, 593, 549, 502,
	542, 583, 77, -354, -228, 95, -405, -138, -279, 240,
	-360, -357, -376, -376, -376, -279, 89, 93, 89, 93,
	89, 93, -107, -58, -1, 648, 649, 650, 87, 19,
	-333, -332, -57, 296, -365, -366, 271, -361, -355, -341,
	135, -340, -341, -341, -376, 87, 29, 125, 125, 125,
	125, 502, 225, 32, -280, 541, 141, 593, 549, -332,
	-57, 238, 238, -305, -305, -305, 93, 93, -275, 644,
	-179, -134, 288, 149, 277, 277, 235, 235, 290, -186,
	301, 303, 302, 300, 304, 305, 23, 23, 23, 23,
	289, 291, 293, 279, -186, -186, -278, 76, -181, -186,
	26, -293, -186, -276, -276, -186, -276, -276, -186, -287,
	-118, 403, 87, 502, 22, -119, 22, -404, 117, 118,
	119, -204, -146, -150, -146, 140, 259, -404, -213, -405,
	-289, 25, 87, 77, -405, 87, 87, -405, -405, 87,
	14, -220, -218, 147, -140, -405, 87, -405, -405, -405,
	-205, -140, -140, -140, -140, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -205, 87, 87, 14, -309,
	25, -405, -405, -405, -405, -405, -219, -405, 14, -405,
	77, 87, 160, 87, -405, -405, -405, 87, 87, -405,
	-405, 87, 87, -405, 87, 87, 87, -405, 87, 87,
	87, 87, -405, -405, -405, -405, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, -405, -90, 526, -405,
	-405, 87, -405, 87, -405, -404, 219, -405, -405, -405,
	-405, -405, 87, 87, 87, 87, 87, 87, -405, -405,
	-405, 87, 87, -405, 87, -405, 87, -405, -391, 608,
	404, -193, -192, -190, 74, 239, 75, -404, -295, -405,
	-154, -254, -255, -254, -198, -287, 95, 99, -231, -163,
	-165, 14, -131, -211, 88, 87, -323, -235, -241, -273,
	-287, 93, 175, -325, 175, -325, 360, 361, -227, 219,
	-194, 15, -197, 32, 57, -11, -404, -404, 32, 87,
	-182, -184, -183, -185, 66, 70, 72, 67, 68, 69,
	73, -300, 25, -164, -9, -8, -404, -404, -404, -186,
	-179, -406, 14, 77, -406, 87, 219, -266, -268, 406,
	403, 409, -376, 93, -106, 87, -349, -336, -232, -135,
	40, -329, 367, -323, 509, -323, -331, 93, -331, 95,
	95, 88, -47, -42, -43, 33, 81, -356, -343, 93,
	39, -343, -343, -287, 88, -228, -134, -186, 141, 76,
	-360, -360, -360, -293, -2, 647, 653, 135, 86, 370,
	18, -249, 87, 88, -214, 297, 88, -108, -287, 88,
	86, -341, -341, -287, -404, 235, 31, 31, 593, 549,
	541, -57, -214, -213, -376, -324, 646, 645, 88, 237,
	295, -139, 417, -136, 93, 89, -186, -186, -186, -186,
	-186, 228, 225, -400, 306, -400, 280, 238, -179, -186,
	87, -81, 254, 249, -298, -298, 33, -186, 403, 620,
	618, -140, 140, 259, -158, -150, -146, -307, 175, 333,
	258, 331, 327, 347, 338, 365, 329, 366, 326, 325,
	324, -307, -305, -205, -128, -140, -140, 148, -140, 146,
	-140, -405, -405, -405, -405, -405, -224, -140, -140, -140,
	-405, 175, 333, 14, -140, -305, -140, -140, -140, -140,
	-140, -373, -140, -205, -140, -205, -140, -140, -140, -140,
	-140, -374, -374, -374, -374, -374, -205, -205, -205, -205,
	-404, -287, -93, -92, -91, 576, 239, -90, -160, -93,
	-160, -127, -289, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -190, -337, -337, -337, -258, 87, -269,
	22, 14, 57, 57, -163, -194, -164, -131, -287, -238,
	603, -244, 46, -242, -243, 47, -239, 48, 56, -325,
	-325, 166, -229, -140, -259, 76, -260, -264, -213, -208,
	-210, -209, -404, -248, -405, -287, -258, -260, -166, -167,
	-167, -166, -167, 66, 66, 66, 71, 66, 71, 66,
	-183, -293, -405, -405, -9, -9, -140, -296, 77, -164,
	-164, -188, -293, 166, 403, 407, 408, -349, -398, 117,
	141, 31, 76, 363, 102, -396, 174, 538, 588, 593,
	549, 542, 583, -397, 241, 134, 135, 253, 25, 41,
	88, 87, 88, 87, 88, 87, -281, -280, -43, -42,
	-343, -343, 95, -376, 93, 93, 237, 26, -186, 76,
	76, 76, -109, 651, 95, 86, -3, 81, -140, 86,
	19, -332, -213, -367, -319, -368, -320, -321, -5, -6,
	-344, -112, 57, 102, -61, 44, 236, 631, 632, 125,
	-404, 644, -359, -249, -363, -365, -186, -143, -404, -142,
	-144, -151, 164, 165, -214, -186, -133, 286, 294, 86,
	-137, 90, -379, 77, 277, 363, 277, -401, 307, 93,
	-401, -186, -81, -47, -186, -276, -276, 33, -376, -405,
	-158, -150, -121, 160, 502, -310, 508, -318, -318, -318,
	-327, -318, 321, -318, 321, -318, -405, -405, -405, 87,
	-405, 22, -405, -140, 87, -117, 445, 87, 87, -405,
	86, 86, -140, -405, -405, -405, 87, -405, -405, -405,
	-405, -405, 87, -405, -405, -405, 87, -308, 594, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -89,
	-288, -287, -90, 558, 558, -405, -90, -221, 87, -405,
	-405, 87, -405, 87, 87, -405, 87, -405, 87, -405,
	-405, -405, -405, 87, -191, 22, -191, -191, -405, -254,
	-186, -194, -222, 16, -235, 51, 339, -246, -245, 55,
	47, -243, 19, 49, 19, 30, -259, 87, 149, 87,
	-405, -405, 87, 57, 219, -405, -194, -177, -176, 76,
	77, -178, 76, -176, 66, 66, -250, -405, -405, 87,
	-257, -164, -194, -194, 219, 117, -404, -145, -157, -143,
	12, 93, 93, -376, -395, 635, 636, 31, 95, -343,
	-343, 135, 135, -186, 86, -323, 93, -323, 95, 95,
	31, 82, 83, 84, 31, 78, 79, 80, -186, -186,
	-186, -186, -364, 86, 19, -140, 86, 149, 88, -249,
	-249, 273, 160, -343, 629, 279, 279, -343, -343, -343,
	-111, -110, 651, 88, -405, 87, -330, 502, 505, -140,
	-152, -152, -250, 88, -372, 502, -378, -287, -287, -287,
	-287, 95, 97, -405, 500, 73, 503, -405, -323, -140,
	-140, -140, -229, 93, -140, -140, 95, 95, -405, -140,
	-205, -140, -405, -174, -173, -175, 612, 117, 31, -307,
	-405, -207, 271, -96, -95, -94, 14, -405, -140, -140,
	-140, -140, -140, -140, -140, -404, 66, 18, 16, -404,
	-404, -296, -222, -223, 17, 19, -236, 53, -234, 52,
	-234, -245, 19, 19, 93, 19, 93, 135, -264, -140,
	-210, 57, -11, -287, -208, -287, -224, -140, 86, -140,
	-154, -194, -194, -140, -200, 469, 471, 472, 473, 470,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	474, 448, 106, 108, 107, 449, 450, 451, 333, 496,
	497, 491, 494, 495, 493, 492, 348, 349, 452, 453,
	454, 109, 110, 111, 112, 113, 114, 115, 455, 458,
	456, 459, 460, 461, 466, 467, 462, 463, 464, 465,
	468, 485, 486, 487, 488, 489, 490, 595, 596, 597,
	598, 599, 600, 601, 602, 93, 93, 86, -140, 88,
	88, -250, -363, -58, 88, -249, 95, 88, 274, -209,
	-404, 93, -343, -343, -343, 95, 95, -295, -405, 87,
	-287, -397, -365, 506, 506, -405, 25, -371, -370, -289,
	86, 77, 62, 501, 504, -405, -405, 87, -405, -405,
	-405, 88, 88, -405, -405, -405, 87, -405, -173, -175,
	-405, 76, -154, -224, 19, -93, 296, 298, -93, -405,
	87, -405, -405, 87, -405, 87, -405, -405, -251, -405,
	-287, 241, 19, 19, -251, -251, -193, -223, -103, -102,
	-101, 532, -140, -205, -237, 54, 76, 120, 93, 93,
	93, 12, -208, 219, -229, -249, -171, 370, -224, -405,
	-249, 88, 25, 88, 653, 135, 88, -209, -120, -404,
	270, -295, 93, 93, -110, -113, -11, 87, 149, -249,
	-186, 62, -140, -205, -405, 76, 513, 612, -88, -87,
	-84, 623, 649, -205, -90, -90, -140, -140, -140, 87,
	-405, -405, -405, -103, 87, -100, -99, -287, 76, 120,
	-260, -287, 88, -405, -404, -229, 88, -233, -11, 86,
	-3, 270, -319, -368, -320, -321, -5, -6, -344, -79,
	502, -370, -348, -289, 93, 95, 88, 502, -405, -405,
	-86, 143, 621, 591, -141, -152, -149, 218, -405, 87,
	-405, 87, -405, 87, -287, 241, -101, 87, 25, -296,
	-172, -170, -287, 555, -388, -387, 498, -398, -394, 117,
	141, 102, -396, 593, 549, 126, 127, -79, -140, 86,
	-405, -80, 285, 608, -379, 503, -86, 622, 569, 544,
	569, 544, -140, -140, -140, -99, -404, -405, 87, 22,
	-311, -60, 566, -385, -386, 76, -389, 376, 565, 586,
	117, 93, 88, -249, 246, -372, 504, 140, -405, 87,
	-405, 87, -405, -89, -170, 562, -324, -154, -386, 76,
	-385, 76, 13, 12, -4, 652, 88, 287, -86, -140,
	-140, -405, -59, 26, -171, -384, 254, 249, 252, 32,
	-384, 95, -4, -405, -405, 566, 248, 31, 117, -154,
	-174, -173, -173,
}

var yyDef = [...]int{
	838, -2, -2, 840, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 838, 838, 838, 0, 838, 0, 0, 838, -2,
	-2, 838, 1451, 0, 838, 0, 0, -2, 765, 771,
	0, 773, -2, 0, 0, 782, 1997, 1997, 833, 0,
	0, 0, 0, 0, 838, 838, 838, 838, 1308, 49,
	838, 0, 84, 85, 789, 790, 791, 64, 0, 1995,
	839, 1, 3, 70, 74, 0, 0, 0, 57, 1317,
	0, 77, 0, 0, 842, 0, 0, 1434, 838, 838,
	0, 116, 117, 0, 0, 0, -2, 120, -2, 149,
	150, 151, 0, 156, 579, 505, 557, 503, 542, -2,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 381, 381, 0, 0, -2, 491,
	491, 491, 1436, 0, 0, 0, 539, 443, 381, 381,
	381, 0, 381, 381, 381, 381, 0, 0, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 1335, 155, 1452, 1449, 1450,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 0, 1428, 0, 692, 939, 0, 754, 754, 0,
	754, 754, 754, 754, 0, 0, 0, 704, 0, 0,
	0, 0, 751, 0, 720, 721, 0, 751, 0, 727,
	757, 0, 732, 754, 754, 735, 1998, 0, 1998, 1998,
	1419, 0, 748, 746, 760, 761, 39, 764, 767, 768,
	769, 770, 772, 0, 777, 780, 1445, 1446, 0, 796,
	48, 1700, 788, 801, 802, 0, 834, 835, 44, 1087,
	0, 961, 966, 977, 992, 993, 994, 995, 996, 998,
	999, 1000, 0, 0, 0, 0, 1005, 1006, 0, 0,
	0, 0, 0, 1068, 1014, 0, 0, 0, 0, 1283,
	0, 0, 1244, 1244, 1102, 1244, 1246, 1246, 1652, 1787,
	1795, 1912, 1615, 1620, 1621, 1622, 1905, 1906, 1907, 1908,
	1946, 1947, 1951, 1712, 0, 0, 0, 1994, 1749, 1757,
	1758, 1781, 1878, 1932, 1632, 1776, 1844, 1709, 1731, 1732,
	1860, 1861, 1753, 1754, 1735, 1747, 1750, 1738, 1739, 1741,
	1743, 1748, 1755, 1761, 1740, 1760, 1759, 0, 1736, 1737,
	1742, 1752, 1756, 1744, 1745, 1746, 1751, 1762, 0, 0,
	0, 0, 0, 1183, 1184, 1185, 1186, 0, 0, 0,
	0, 0, 0, 0, 277, 278, -2, -2, 42, 43,
	1086, 1406, 1246, 1246, 1246, 1246, 1246, 1028, 1029, 1030,
	1031, 1032, 1056, 1057, 1063, 1064, 1855, 1856, 1857, 1858,
	1693, 1941, 1701, 1702, 1839, 1840, 1714, 1715, 1969, 1970,
	-2, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	217, 0, 0, 282, 283, 279, 280, 281, 1070, 1071,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 1997, 0, 811, 0, 0, 0, 0, 0,
	1317, 0, 1309, 1308, 62, 0, 838, -2, 0, 0,
	0, 0, 46, 0, 51, 898, 841, 76, 75, 1357,
	0, 0, 0, 58, 1318, 66, 68, 1319, 0, 843,
	844, 0, 874, 878, 0, 0, 0, 1435, 1434, 1434,
	101, 0, 0, 1410, 113, 114, 115, 0, 0, 1416,
	1417, 1421, 1422, 0, 0, 167, 168, 0, 40, 408,
	0, 163, 0, 401, 342, 0, 1335, 0, 0, 0,
	0, 0, 838, 0, 1429, 144, 145, 152, 153, 154,
	381, 381, 381, 554, 0, 0, 155, 155, 512, 513,
	514, 0, 0, -2, 406, 0, 492, 0, 0, 395,
	395, 399, 397, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 640, 0, 382, 0, 552, 553,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 1437,
	1438, 0, 529, 530, 0, 0, 0, 381, 381, 0,
	0, 0, 0, 381, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 1348, 0, 0, 0, -2, 0,
	684, 0, 0, 0, 1430, 1430, 0, 691, 0, 693,
	694, 0, 0, 695, 0, 751, 751, 749, 750, 697,
	698, 699, 700, 754, 0, 0, 390, 391, 392, 751,
	754, 0, 754, 754, 754, 754, 751, 751, 751, 754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	757, 754, 0, 728, 0, 729, 730, 733, 734, 736,
	1999, 2000, 1447, 1448, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1998, 1998, 740, 744, 1420, 766, 778,
	781, 799, 797, 798, 800, 792, 793, 794, 795, 0,
	813, 814, 819, 0, 0, 0, 0, 825, 826, 827,
	0, 0, 830, 831, 832, 0, 0, 0, 0, 0,
	959, 0, 0, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 978, 979, 0,
	0, 0, 1001, 1002, 1003, 1004, 1007, 0, 1019, 0,
	1021, 1292, -2, 0, 0, 0, 1012, 1013, 0, 0,
	0, 0, 0, 0, 0, 1284, 0, 0, 1100, 0,
	1101, 1103, 1104, 0, 1105, 848, 848, 848, 848, 848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1440, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	858, 0, 0, 858, 858, 0, 0, 210, 211, 212,
	213, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 230, 231, 232,
	233, 234, 284, 1086, 0, 0, 0, 45, 803, 804,
	0, 922, 1440, 0, 0, 854, 0, 56, 65, 67,
	1317, 60, 1317, 0, 860, 0, 0, -2, -2, 861,
	867, 868, 869, 870, 871, 53, 1996, 54, 0, 73,
	0, 47, 0, 0, 0, 0, 354, 1360, 0, 0,
	1310, 1311, 1314, 0, 875, 1793, 879, 0, 881, 882,
	0, 0, 99, 0, 938, 0, 0, 0, 0, 1418,
	103, 104, 0, 0, 0, 365, 1423, 1424, 1425, -2,
	388, 0, 365, 349, 292, 293, 294, 342, 296, 342,
	342, 342, 342, 354, 354, 354, 354, 325, 326, 327,
	328, 329, 0, 0, 311, 342, 342, 342, 342, 332,
	333, 334, 335, 336, 337, 338, 339, 297, 298, 299,
	300, 301, 302, 303, 304, 305, 344, 344, 344, 346,
	346, 0, 41, 0, 369, 0, 1314, 0, 0, 1348,
	1432, 1442, 0, 0, 0, 1432, 122, 0, 0, 0,
	555, 590, 506, 543, 556, 0, 509, 510, -2, 0,
	0, 491, 0, 493, 0, 389, 0, -2, 0, 399,
	0, 395, 399, 396, 399, 387, 400, 533, 534, 535,
	0, 537, 538, 620, 908, 0, 0, 0, 0, 0,
	626, 627, 628, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 0, 0, 0, 493, 0, 540, 0,
	0, 445, 446, 447, 0, 0, 450, 451, 452, 453,
	0, 0, 456, 457, 458, 925, 926, 459, 460, 485,
	486, 487, 461, 462, 463, 464, 465, 466, 467, 479,
	480, 481, 482, 483, 484, 468, 469, 470, 471, 472,
	473, 476, 0, 137, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1430,
	0, 0, 0, 0, 857, 940, 1453, 1454, 755, 756,
	0, 393, 394, 754, 754, 701, 741, 0, 754, 705,
	742, 706, 708, 707, 709, 722, 723, 754, 712, 752,
	753, 713, 714, 715, 716, 717, 718, 719, 737, 724,
	725, 726, 758, 0, 762, 763, 738, 739, 0, 779,
	783, 784, 785, 786, 787, 0, 0, 816, 95, 821,
	822, 823, 824, 836, 829, 1088, 956, 957, 958, 0,
	960, 963, 0, 1072, 1074, 965, 967, 1083, 1084, 1085,
	0, 0, 0, 0, 0, 971, 975, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 997,
	1260, 1261, 1262, 1016, 285, 286, 0, 1017, 0, 0,
	0, 0, 0, 0, 0, 1087, 1018, 0, 872, 0,
	0, 1290, 1287, 0, 0, 0, 1245, 1247, 0, 0,
	0, 0, 849, 850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1263, 0, 0, 0, 0, 0, 1283,
	0, 1023, 1024, 1025, 0, 0, 0, 0, 0, 0,
	1143, 0, 0, 0, 0, 1441, 0, 132, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1187, 1188, 1189, 1190, 38,
	0, 0, 0, 859, 1294, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1212, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 806, 807, 809, 0, 942, 0, 923, 0, 0,
	812, 0, 853, 0, 856, 59, 61, 865, 866, 0,
	883, 862, 55, 50, 0, 0, 900, 1358, 354, 1380,
	0, 363, 363, 360, 1320, 1321, 0, 1313, 1315, 1316,
	78, 880, 876, 0, 954, 0, 0, 937, 0, 886,
	888, 889, 890, 920, 0, 893, 0, 0, 0, 0,
	0, 97, 939, 1411, 0, 102, 0, 0, 107, 108,
	1412, 1413, 1414, 1415, 0, 579, -2, 440, 169, 171,
	172, 173, 164, -2, 352, 350, 351, 295, 354, 354,
	319, 320, 321, 322, 323, 324, 0, 0, 312, 313,
	314, 315, 306, 0, 307, 308, 309, 0, 310, 407,
	0, 1322, 370, 371, 373, 381, 0, 376, 377, 0,
	381, 381, 0, 402, 403, 0, 1314, 1339, 0, 0,
	0, 1443, 1442, 1442, 1442, 0, 157, 158, 159, 160,
	161, 162, 615, 0, 0, 591, 613, 614, 155, 0,
	0, 165, 495, 494, 0, 647, 0, 405, 0, 0,
	399, 399, 384, 385, 536, 0, 0, 622, 623, 624,
	625, 0, 0, 0, 522, 434, 0, 523, 524, 493,
	495, 0, 0, 365, 448, 449, 454, 455, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 570, 571, 573, 497, 577, 572, 574, 497, 578,
	1336, 1337, 1338, 0, 0, 685, 0, 0, 431, 93,
	1431, 690, 751, 711, 743, 751, 703, 710, 731, 775,
	820, 0, 0, 0, 0, 828, 0, 0, 964, 1073,
	1075, 968, 0, 972, 976, 0, 0, 0, 1022, 1020,
	1294, 0, 0, 0, 1069, 0, 0, 1091, 1092, 0,
	0, 0, 1288, 0, 0, 1098, 0, 1248, 1249, 1106,
	0, 0, 0, 0, 0, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1308, 0, 0, 0, 0,
	0, 1127, 1128, 1129, 1130, 1131, 0, 1133, 0, 1134,
	0, 0, 0, 0, 1141, 1142, 1144, 0, 0, 1147,
	1148, 0, 0, 1149, 0, 0, 0, 1153, 0, 0,
	0, 0, 1162, 1163, 1164, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 1177, 0, 1051,
	0, 0, 1051, 0, 1089, 858, 0, 1250, 1251, 1252,
	1253, 1254, 0, 0, 0, 0, 0, 0, 1210, 1211,
	1213, 0, 0, 1216, 0, 1218, 0, 1405, 805, 808,
	810, 896, 943, 944, 0, 0, 0, 0, 924, 1439,
	851, 852, 855, 902, 0, 1296, 0, 0, 883, 954,
	884, 0, 863, 52, 899, 0, 1362, 1361, 1374, 1387,
	363, 363, 357, 358, 364, 359, 361, 362, 1312, 0,
	1317, 0, 1398, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 927, 0, 0, 930, 0, 0,
	0, 0, 921, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 91, 92, 0, 0, 0, 105, 106, 0,
	0, 112, 366, 367, 146, 155, 442, 170, 415, 0,
	0, 291, 353, 316, 317, 318, 0, 340, 0, 0,
	0, 436, 118, 1326, 1325, 381, 381, 372, 0, 375,
	0, 0, 0, 1444, 343, 404, 0, 136, 0, 0,
	0, 0, 0, 142, 585, 0, 0, 592, 0, 0,
	0, 504, 0, 515, 516, 0, 619, -2, 681, 369,
	0, 383, 386, 909, 0, 0, 517, 0, 520, 521,
	435, 495, 526, 527, 541, 528, 477, 478, 475, 0,
	0, 1349, 1350, 1355, 1353, 1354, 123, 562, 564, 563,
	567, 0, 0, 499, 0, 499, 560, 0, 431, 1322,
	0, 689, 432, 433, 754, 754, 815, 96, 0, 818,
	0, 0, 0, 0, 969, 973, 1255, 1281, 342, 342,
	1268, 342, 346, 1271, 342, 1273, 342, 1276, 342, 1279,
	1280, 0, 0, 0, 873, 0, 0, 1097, 1291, 0,
	0, 1107, 1108, 1109, 1110, 1111, 1285, 0, 0, 0,
	1126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 0, 0, 0, 0, 0, 0, 1221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1046, 1050, 0, 1052, 1053, 0, 0, 1179, 0, 0,
	1191, 0, 1295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 945, 950, 950, 950, 0, 0, 0,
	1426, 1427, 1297, 1298, 954, 1299, 885, 864, 901, 1380,
	0, 1373, 0, -2, 1382, 0, 0, 0, 1388, 355,
	356, 877, 79, 955, 82, 0, 1398, 1407, 0, 1389,
	1400, 1402, 0, 0, 0, 1394, 0, 954, 887, 916,
	918, 0, 913, 928, 929, 931, 0, 933, 0, 935,
	936, 898, 892, 894, 0, 0, 0, 99, 0, 954,
	954, 98, 0, 941, 109, 110, 111, 441, 174, 179,
	0, 0, 0, 184, 0, 186, 0, 0, 0, 191,
	192, 381, 381, 416, 0, 288, 290, 0, 0, 177,
	354, 0, 354, 0, 347, 0, 417, 437, 1323, 1324,
	0, 0, 374, 378, 379, 380, 0, 1433, 138, 0,
	0, 0, 588, 0, 616, 0, 0, 0, 0, 0,
	0, 166, 496, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 0, 381, 0, 0, 0, 381, 381, 381,
	0, 673, 368, 0, 0, 644, 641, 518, 0, 215,
	216, 218, 0, 0, 525, 898, 1340, 1341, 1342, 0,
	1352, 1356, 126, 0, 0, 0, 0, 575, 0, 498,
	576, 686, 687, 688, 94, 696, 702, 817, 837, 962,
	970, 974, 0, 0, 0, 0, 1282, 1266, 354, 1269,
	1270, 1272, 1274, 1275, 1277, 1278, 1010, 1011, 1015, 0,
	1094, 0, 1096, 1289, 0, 1317, 0, 0, 0, 1125,
	0, 0, 0, 1136, 1135, 1137, 0, 1139, 1140, 1145,
	1146, 1150, 0, 1152, 1154, 1155, 0, 0, 0, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 0,
	1044, 1047, 1178, 1054, 1055, 1060, 1181, 0, 0, 1090,
	1193, 0, 1198, 0, 0, 1204, 0, 1208, 0, 1214,
	1215, 1217, 1219, 0, 0, 0, 0, 0, 922, 903,
	63, 1299, 1301, 0, 1367, 1365, 1365, 1375, 1376, 0,
	0, 1383, 0, 0, 0, 0, 83, 0, 0, 0,
	1403, 0, 0, 0, 0, 100, 1308, 910, 917, 0,
	0, 911, 0, 912, 932, 934, 891, -2, 895, 0,
	954, 954, 89, 90, 0, 180, 0, 182, 208, 209,
	0, 185, 187, 188, 189, 195, 196, 197, 190, 0,
	0, 287, 289, 0, 0, 330, 341, 331, 0, 0,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 898, 139,
	140, 141, 580, 0, 590, 0, 0, 0, 583, 0,
	507, 0, 0, 0, 381, 381, 381, 0, 0, 0,
	0, 658, 0, 0, 621, 0, 629, 0, 0, 0,
	219, 220, 0, 1351, 561, 0, 124, 125, 0, 0,
	566, 500, 501, 1008, 0, 0, 0, 1009, 1267, 0,
	0, 0, 0, 1286, 0, 0, 0, 0, 1132, 0,
	0, 0, 1158, 0, 0, 0, 610, 611, 0, 1222,
	1049, 1308, 0, 1051, 1061, 1062, 0, 1051, 1192, 0,
	0, 0, 0, 0, 0, 0, 951, 0, 0, 0,
	0, 942, 1301, 1306, 0, 0, 1370, 0, 1363, 1366,
	1364, 1377, 0, 0, 1384, 0, 1386, 0, 1408, 1409,
	1401, 0, 1393, 1396, 1392, 1395, 1317, 914, 0, 919,
	0, 1308, 88, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 345,
	348, 0, 0, 0, 581, 0, 593, 584, 0, 671,
	0, 675, 0, 0, 0, 678, 679, 680, 657, 0,
	661, 409, 645, 642, 643, 519, 0, 127, 128, 0,
	0, 0, 1256, 0, 1259, 1093, 1095, 0, 1122, 1123,
	1124, 1264, 1265, 1138, 1151, 1156, 0, 1159, 0, 0,
	1160, 0, 612, 1040, 0, 0, 1058, 1059, 0, 1194,
	0, 1199, 1200, 0, 1205, 0, 1209, 1220, 0, 947,
	904, 905, 952, 953, 0, 0, 897, 1306, 81, 1307,
	1304, 0, 1302, 1300, 1359, 0, 1368, 1369, 1378, 1379,
	1385, 0, 1391, 0, 86, 0, 0, 0, 1317, 181,
	0, 200, 0, 589, 0, 592, 582, 669, 670, 0,
	682, 674, 676, 677, 659, -2, 1343, 0, 0, 0,
	568, 1257, 0, 0, 1161, 0, 608, 609, 1048, 1041,
	0, 1026, 1027, 1045, 1180, 1182, 0, 0, 0, 0,
	946, 948, 949, 80, 0, 1303, 1066, 0, 1371, 1372,
	1399, 1397, 915, 922, 0, 87, 422, 415, 1343, 0,
	0, 0, 662, 663, 664, 665, 666, 667, 668, 558,
	1345, 129, 130, 488, 489, 490, 123, 0, 1099, 1157,
	1042, 0, 0, 0, 0, 1038, 1039, 0, 1195, 0,
	1201, 0, 1206, 0, 906, 907, 1305, 0, 0, 594,
	0, 596, 0, -2, 410, 423, 0, 175, 201, 202,
	0, 0, 205, 206, 207, 198, 199, 119, 0, 0,
	683, 0, 1346, 1347, 126, 0, 0, 1033, 1034, 1035,
	1036, 1037, 0, 0, 0, 1067, 1046, 595, 0, 0,
	365, 0, 605, 411, 412, 0, 418, 419, 420, 421,
	203, 204, 617, 0, 0, 565, 1258, 0, 1196, 0,
	1202, 0, 1207, 0, 597, 598, 606, 0, 413, 0,
	414, 0, 0, 0, 586, 0, 617, 1344, 1043, 0,
	0, 1065, 0, 607, 603, 424, 426, 427, 0, 0,
	425, 618, 587, 1197, 1203, 0, 428, 429, 430, 599,
	600, 601, 602,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 142, 3, 3, 3, 169, 161, 3,
	86, 88, 166, 164, 87, 165, 219, 167, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 654,
	150, 149, 151, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 171, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 172,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 139, 140, 141, 143, 144, 145, 146,
	147, 148, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 162, 163, 168, 170, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:585
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:598
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:599
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:603
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:639
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:645
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:656
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:666
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:670
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:676
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:682
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:688
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:692
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:701
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:711
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:717
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:870
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:884
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:918
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:922
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:951
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:952
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:956
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:966
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:970
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:976
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:989
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:995
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1001
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1005
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1011
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1021
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1025
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1029
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1035
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1039
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1043
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1047
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1053
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1057
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1061
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1067
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1073
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1080
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1089
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1093
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1104
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1109
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1119
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1124
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1129
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1135
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1146
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1155
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1161
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1177
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1184
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1191
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1196
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1201
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1206
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1213
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1220
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1231
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1242
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1248
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1252
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1256
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1264
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1268
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1284
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1288
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1294
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1298
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1304
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1308
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1314
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1318
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1324
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1334
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1339
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1348
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1372
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1381
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1390
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1407
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1413
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1419
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1424
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1429
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1434
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1444
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1453
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1462
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1489
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1493
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1497
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1503
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1507
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1538
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1549
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1557
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1590
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1607
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Armscii8Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = ASCIIStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Big5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = UBinaryStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Cp1250Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Cp1251Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Cp1256Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Cp1257Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Cp850Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = Cp852Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = Cp866Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Cp932Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Dec8Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = EucjpmsStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = EuckrStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Gb18030Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Gb2312Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = GbkStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Geostd8Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = GreekStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = HebrewStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Hp8Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Keybcs2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Koi8rStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Koi8uStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Latin1Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Latin2Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Latin5Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Latin7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = MacceStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = MacromanStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = SjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Swe7Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Tis620Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Ucs2Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = UjisStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Utf16Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = Utf16leStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Utf32Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Utf8mb4Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Utf8Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1841
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1845
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1849
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1855
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1859
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1863
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1869
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1873
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1880
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1884
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1888
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1892
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2016
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2129
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2134
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2138
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2156
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2202
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2217
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2237
		{
			yyVAL.str = ""
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2245
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2251
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2260
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2266
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2276
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2280
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2285
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2289
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2293
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2297
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2301
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2305
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = ""
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2321
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2325
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2329
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2333
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2337
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.str = yyDollar[2].str
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = "key"
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = yyDollar[1].str
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2394
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2404
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2414
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2418
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2424
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2428
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2434
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2438
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2444
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2450
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2454
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2458
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2462
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2466
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2475
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2481
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2487
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2493
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2497
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2501
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2506
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2510
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2516
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2522
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2528
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2532
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2536
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2540
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2544
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2549
		{
			yyVAL.str = ""
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2563
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2567
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2572
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2576
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2585
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2591
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2605
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2609
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2615
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2619
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2623
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2627
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2631
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2635
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2639
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2643
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2647
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2651
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2655
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2659
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2663
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2667
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2671
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2675
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2679
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2683
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2740
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2748
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2786
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2790
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2799
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2817
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2821
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2830
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2834
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2838
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2846
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2852
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2860
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2866
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2912
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2916
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2920
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2924
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2928
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2932
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2940
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2948
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2952
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2956
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2960
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2964
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2994
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3046
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3053
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3060
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3073
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3109
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3123
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3140
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3240
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3249
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3257
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3266
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3273
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3285
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3294
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3309
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3314
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3318
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3323
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3327
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3333
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3339
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3345
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3355
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3359
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3365
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3371
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3377
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3383
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3389
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3397
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3407
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3413
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3419
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3423
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3427
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3433
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3437
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3442
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3446
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3451
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3455
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3465
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3469
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3473
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3477
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3481
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3509
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3513
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3517
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3521
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3525
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3529
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3533
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3537
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3541
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3545
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3554
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3558
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3564
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3574
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3579
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3583
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3588
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3593
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3598
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3603
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3608
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3614
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3620
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3625
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3631
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3637
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3641
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3647
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3652
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3656
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3661
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3666
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3671
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3676
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3682
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3688
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3695
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3702
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3709
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3717
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3721
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3727
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3733
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3739
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3745
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3751
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3757
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3769
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.str = ""
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3791
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3795
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3818
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.str = "extended "
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4059
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4063
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4079
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4093
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4097
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4101
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4111
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4117
		{
			yyVAL.empty = struct{}{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4200
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4205
		{
			yyVAL.empty = struct{}{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.empty = struct{}{}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4211
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4222
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4226
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4230
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4234
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4238
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4242
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4246
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.str = yyDollar[1].str
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = yyDollar[1].str
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = yyDollar[1].str
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = ""
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4297
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4301
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4307
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4323
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4333
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4339
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4343
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4347
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4351
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4357
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4377
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4381
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4385
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4395
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4399
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4421
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4454
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4458
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4462
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = ""
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4476
		{
			setAllowComments(yylex, true)
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4480
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4486
		{
			yyVAL.strs = nil
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4496
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = ""
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.str = SQLCacheStr
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4522
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4526
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4536
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4540
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4550
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4559
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4569
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4578
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4583
		{
			yyVAL.strs = nil
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4591
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4595
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4599
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.str = SQLCacheStr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.str = DistinctStr
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4617
		{
			yyVAL.str = DistinctStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.str = StraightJoinHint
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4635
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4645
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4649
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4653
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4657
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4662
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4670
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4682
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4686
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4692
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4698
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4702
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4712
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4716
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4720
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4724
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4730
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4734
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4740
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4744
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4753
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4759
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4763
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4769
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4779
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4783
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4797
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4814
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4818
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4822
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4826
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4834
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4838
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4840
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4844
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4846
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4849
		{
			yyVAL.empty = struct{}{}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4851
		{
			yyVAL.empty = struct{}{}
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4854
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4862
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4875
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4879
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4883
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4889
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4895
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4899
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4903
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4907
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4913
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4917
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4931
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4941
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4956
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4962
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4966
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4972
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4976
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4980
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4984
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4989
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4993
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4997
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5001
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5112
		{
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5291
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5295
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5301
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5305
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5311
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5315
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5319
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5325
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5329
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5336
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5340
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5344
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5348
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5352
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5358
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5362
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5366
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5370
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5374
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5393
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5399
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5403
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5412
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5417
		{
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5420
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5426
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5432
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5436
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5448
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5454
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5458
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5464
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5468
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5474
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5478
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5483
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5490
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5496
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5500
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5506
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5512
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5516
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5522
		{
			yyVAL.str = ""
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5526
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5532
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5536
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5543
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5547
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5551
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5555
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5561
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5565
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5569
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5573
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5577
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5581
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5585
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5591
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5595
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5599
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5606
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5612
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5616
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5640
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5644
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5648
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5652
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5656
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5660
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5664
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5706
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5718
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6178
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6184
		{
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6186
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6190
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6194
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6198
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6202
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6206
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6210
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6214
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6218
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6222
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6226
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6232
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6236
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6240
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6244
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6248
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6252
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6256
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6260
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6264
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6319
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6323
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6327
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6331
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6335
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6341
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6345
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6349
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6359
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6363
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6369
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6373
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6377
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6381
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6385
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6391
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6395
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6399
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6403
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6407
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6411
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6415
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6419
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6423
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6427
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6433
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6437
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6451
		{
			yyVAL.str = string("")
		}
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6455
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6461
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6465
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6471
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6486
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6490
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6494
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6498
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6523
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6527
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6542
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6548
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6552
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6561
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6570
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6576
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6582
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6586
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6592
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6597
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6601
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6605
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6614
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6620
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6624
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6628
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6637
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6641
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6645
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6649
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6656
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6660
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6664
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6668
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6674
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6678
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6682
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6686
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6691
		{
			yyVAL.str = ""
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6695
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6699
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6703
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6708
		{
			yyVAL.str = ""
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6712
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6718
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6722
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6727
		{
			yyVAL.str = ""
		}
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6731
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6736
		{
			yyVAL.str = "cascaded"
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6740
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6744
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6753
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6759
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6765
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6771
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6780
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6784
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6789
		{
			yyVAL.str = ""
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6793
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6799
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6803
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6809
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6813
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6817
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6822
		{
			yyVAL.str = ""
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6826
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6830
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6835
		{
			yyVAL.str = ""
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6839
		{
			yyVAL.str = " header"
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6844
		{
			yyVAL.str = ""
		}
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6848
		{
			yyVAL.str = " manifest on"
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6852
		{
			yyVAL.str = " manifest off"
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6857
		{
			yyVAL.str = ""
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6861
		{
			yyVAL.str = " overwrite on"
		}
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6865
		{
			yyVAL.str = " overwrite off"
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6871
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6876
		{
			yyVAL.str = ""
		}
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6880
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6886
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6890
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6896
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6900
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6905
		{
			yyVAL.str = ""
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6909
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6915
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6919
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6925
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6929
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6933
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6938
		{
			yyVAL.str = ""
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6942
		{
			yyVAL.str = " optionally"
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6955
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6959
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6963
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6967
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6971
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6977
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6981
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6985
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6989
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6998
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7004
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7008
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7014
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7018
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7024
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7028
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7033
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7043
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7047
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7053
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7059
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7063
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7069
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7073
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7077
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7081
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7087
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7091
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7095
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7102
		{
			yyVAL.str = "charset"
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7112
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7116
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7120
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7131
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7134
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7136
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7139
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7141
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7144
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7146
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7149
		{
			yyVAL.empty = struct{}{}
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7151
		{
			yyVAL.empty = struct{}{}
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7153
		{
			yyVAL.empty = struct{}{}
		}
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7157
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7162
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7166
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7173
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7177
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7183
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7187
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7194
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7200
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7204
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7210
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7214
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7221
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7788
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7797
		{
			decNesting(yylex)
		}
	case 1997:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7802
		{
			skipToEnd(yylex)
		}
	case 1998:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7807
		{
			skipToEnd(yylex)
		}
	case 1999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7811
		{
			skipToEnd(yylex)
		}
	case 2000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7815
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
