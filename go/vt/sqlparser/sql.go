// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const VITESS_THROTTLER = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const CONSISTENT = 57646
const SNAPSHOT = 57647
const BIT = 57648
const TINYINT = 57649
const SMALLINT = 57650
const MEDIUMINT = 57651
const INT = 57652
const INTEGER = 57653
const BIGINT = 57654
const INTNUM = 57655
const REAL = 57656
const DOUBLE = 57657
const FLOAT_TYPE = 57658
const FLOAT4_TYPE = 57659
const FLOAT8_TYPE = 57660
const DECIMAL_TYPE = 57661
const NUMERIC = 57662
const TIME = 57663
const TIMESTAMP = 57664
const DATETIME = 57665
const YEAR = 57666
const CHAR = 57667
const VARCHAR = 57668
const BOOL = 57669
const CHARACTER = 57670
const VARBINARY = 57671
const NCHAR = 57672
const TEXT = 57673
const TINYTEXT = 57674
const MEDIUMTEXT = 57675
const LONGTEXT = 57676
const BLOB = 57677
const TINYBLOB = 57678
const MEDIUMBLOB = 57679
const LONGBLOB = 57680
const JSON = 57681
const JSON_SCHEMA_VALID = 57682
const JSON_SCHEMA_VALIDATION_REPORT = 57683
const ENUM = 57684
const GEOMETRY = 57685
const POINT = 57686
const LINESTRING = 57687
const POLYGON = 57688
const GEOMCOLLECTION = 57689
const GEOMETRYCOLLECTION = 57690
const MULTIPOINT = 57691
const MULTILINESTRING = 57692
const MULTIPOLYGON = 57693
const ASCII = 57694
const UNICODE = 57695
const NULLX = 57696
const AUTO_INCREMENT = 57697
const APPROXNUM = 57698
const SIGNED = 57699
const UNSIGNED = 57700
const ZEROFILL = 57701
const PURGE = 57702
const BEFORE = 57703
const CODE = 57704
const COLLATION = 57705
const COLUMNS = 57706
const DATABASES = 57707
const ENGINES = 57708
const EVENT = 57709
const EXTENDED = 57710
const FIELDS = 57711
const FULL = 57712
const FUNCTION = 57713
const GTID_EXECUTED = 57714
const KEYSPACES = 57715
const OPEN = 57716
const PLUGINS = 57717
const PRIVILEGES = 57718
const PROCESSLIST = 57719
const SCHEMAS = 57720
const TABLES = 57721
const TRIGGERS = 57722
const USER = 57723
const VGTID_EXECUTED = 57724
const VITESS_KEYSPACES = 57725
const VITESS_METADATA = 57726
const VITESS_MIGRATIONS = 57727
const VITESS_REPLICATION_STATUS = 57728
const VITESS_SHARDS = 57729
const VITESS_TABLETS = 57730
const VITESS_TARGET = 57731
const VSCHEMA = 57732
const VITESS_THROTTLED_APPS = 57733
const NAMES = 57734
const GLOBAL = 57735
const SESSION = 57736
const ISOLATION = 57737
const LEVEL = 57738
const READ = 57739
const WRITE = 57740
const ONLY = 57741
const REPEATABLE = 57742
const COMMITTED = 57743
const UNCOMMITTED = 57744
const SERIALIZABLE = 57745
const CURRENT_TIMESTAMP = 57746
const DATABASE = 57747
const CURRENT_DATE = 57748
const NOW = 57749
const CURRENT_TIME = 57750
const LOCALTIME = 57751
const LOCALTIMESTAMP = 57752
const CURRENT_USER = 57753
const UTC_DATE = 57754
const UTC_TIME = 57755
const UTC_TIMESTAMP = 57756
const DAY = 57757
const DAY_HOUR = 57758
const DAY_MICROSECOND = 57759
const DAY_MINUTE = 57760
const DAY_SECOND = 57761
const HOUR = 57762
const HOUR_MICROSECOND = 57763
const HOUR_MINUTE = 57764
const HOUR_SECOND = 57765
const MICROSECOND = 57766
const MINUTE = 57767
const MINUTE_MICROSECOND = 57768
const MINUTE_SECOND = 57769
const MONTH = 57770
const QUARTER = 57771
const SECOND = 57772
const SECOND_MICROSECOND = 57773
const YEAR_MONTH = 57774
const WEEK = 57775
const REPLACE = 57776
const CONVERT = 57777
const CAST = 57778
const SUBSTR = 57779
const SUBSTRING = 57780
const SEPARATOR = 57781
const TIMESTAMPADD = 57782
const TIMESTAMPDIFF = 57783
const WEIGHT_STRING = 57784
const LTRIM = 57785
const RTRIM = 57786
const TRIM = 57787
const JSON_ARRAY = 57788
const JSON_OBJECT = 57789
const JSON_QUOTE = 57790
const JSON_DEPTH = 57791
const JSON_TYPE = 57792
const JSON_LENGTH = 57793
const JSON_VALID = 57794
const JSON_ARRAY_APPEND = 57795
const JSON_ARRAY_INSERT = 57796
const JSON_INSERT = 57797
const JSON_MERGE = 57798
const JSON_MERGE_PATCH = 57799
const JSON_MERGE_PRESERVE = 57800
const JSON_REMOVE = 57801
const JSON_REPLACE = 57802
const JSON_SET = 57803
const JSON_UNQUOTE = 57804
const COUNT = 57805
const AVG = 57806
const MAX = 57807
const MIN = 57808
const SUM = 57809
const GROUP_CONCAT = 57810
const BIT_AND = 57811
const BIT_OR = 57812
const BIT_XOR = 57813
const STD = 57814
const STDDEV = 57815
const STDDEV_POP = 57816
const STDDEV_SAMP = 57817
const VAR_POP = 57818
const VAR_SAMP = 57819
const VARIANCE = 57820
const REGEXP_INSTR = 57821
const REGEXP_LIKE = 57822
const REGEXP_REPLACE = 57823
const REGEXP_SUBSTR = 57824
const ExtractValue = 57825
const UpdateXML = 57826
const GET_LOCK = 57827
const RELEASE_LOCK = 57828
const RELEASE_ALL_LOCKS = 57829
const IS_FREE_LOCK = 57830
const IS_USED_LOCK = 57831
const LOCATE = 57832
const POSITION = 57833
const MATCH = 57834
const AGAINST = 57835
const BOOLEAN = 57836
const LANGUAGE = 57837
const WITH = 57838
const QUERY = 57839
const EXPANSION = 57840
const WITHOUT = 57841
const VALIDATION = 57842
const UNUSED = 57843
const ARRAY = 57844
const BYTE = 57845
const CUME_DIST = 57846
const DESCRIPTION = 57847
const DENSE_RANK = 57848
const EMPTY = 57849
const EXCEPT = 57850
const FIRST_VALUE = 57851
const GROUPING = 57852
const GROUPS = 57853
const JSON_TABLE = 57854
const LAG = 57855
const LAST_VALUE = 57856
const LATERAL = 57857
const LEAD = 57858
const NTH_VALUE = 57859
const NTILE = 57860
const OF = 57861
const OVER = 57862
const PERCENT_RANK = 57863
const RANK = 57864
const RECURSIVE = 57865
const ROW_NUMBER = 57866
const SYSTEM = 57867
const WINDOW = 57868
const ACTIVE = 57869
const ADMIN = 57870
const AUTOEXTEND_SIZE = 57871
const BUCKETS = 57872
const CLONE = 57873
const COLUMN_FORMAT = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const ENGINE_ATTRIBUTE = 57878
const EXCLUDE = 57879
const FOLLOWING = 57880
const GET_MASTER_PUBLIC_KEY = 57881
const HISTOGRAM = 57882
const HISTORY = 57883
const INACTIVE = 57884
const INVISIBLE = 57885
const LOCKED = 57886
const MASTER_COMPRESSION_ALGORITHMS = 57887
const MASTER_PUBLIC_KEY_PATH = 57888
const MASTER_TLS_CIPHERSUITES = 57889
const MASTER_ZSTD_COMPRESSION_LEVEL = 57890
const NESTED = 57891
const NETWORK_NAMESPACE = 57892
const NOWAIT = 57893
const NULLS = 57894
const OJ = 57895
const OLD = 57896
const OPTIONAL = 57897
const ORDINALITY = 57898
const ORGANIZATION = 57899
const OTHERS = 57900
const PARTIAL = 57901
const PATH = 57902
const PERSIST = 57903
const PERSIST_ONLY = 57904
const PRECEDING = 57905
const PRIVILEGE_CHECKS_USER = 57906
const PROCESS = 57907
const RANDOM = 57908
const REFERENCE = 57909
const REQUIRE_ROW_FORMAT = 57910
const RESOURCE = 57911
const RESPECT = 57912
const RESTART = 57913
const RETAIN = 57914
const REUSE = 57915
const ROLE = 57916
const SECONDARY = 57917
const SECONDARY_ENGINE = 57918
const SECONDARY_ENGINE_ATTRIBUTE = 57919
const SECONDARY_LOAD = 57920
const SECONDARY_UNLOAD = 57921
const SIMPLE = 57922
const SKIP = 57923
const SRID = 57924
const THREAD_PRIORITY = 57925
const TIES = 57926
const UNBOUNDED = 57927
const VCPU = 57928
const VISIBLE = 57929
const RETURNING = 57930
const FORMAT_BYTES = 57931
const FORMAT_PICO_TIME = 57932
const PS_CURRENT_THREAD_ID = 57933
const PS_THREAD_ID = 57934
const GTID_SUBSET = 57935
const GTID_SUBTRACT = 57936
const WAIT_FOR_EXECUTED_GTID_SET = 57937
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57938
const FORMAT = 57939
const TREE = 57940
const VITESS = 57941
const TRADITIONAL = 57942
const VTEXPLAIN = 57943
const VEXPLAIN = 57944
const PLAN = 57945
const LOCAL = 57946
const LOW_PRIORITY = 57947
const NO_WRITE_TO_BINLOG = 57948
const LOGS = 57949
const ERROR = 57950
const GENERAL = 57951
const HOSTS = 57952
const OPTIMIZER_COSTS = 57953
const USER_RESOURCES = 57954
const SLOW = 57955
const CHANNEL = 57956
const RELAY = 57957
const EXPORT = 57958
const CURRENT = 57959
const ROW = 57960
const ROWS = 57961
const AVG_ROW_LENGTH = 57962
const CONNECTION = 57963
const CHECKSUM = 57964
const DELAY_KEY_WRITE = 57965
const ENCRYPTION = 57966
const ENGINE = 57967
const INSERT_METHOD = 57968
const MAX_ROWS = 57969
const MIN_ROWS = 57970
const PACK_KEYS = 57971
const PASSWORD = 57972
const FIXED = 57973
const DYNAMIC = 57974
const COMPRESSED = 57975
const REDUNDANT = 57976
const COMPACT = 57977
const ROW_FORMAT = 57978
const STATS_AUTO_RECALC = 57979
const STATS_PERSISTENT = 57980
const STATS_SAMPLE_PAGES = 57981
const STORAGE = 57982
const MEMORY = 57983
const DISK = 57984
const PARTITIONS = 57985
const LINEAR = 57986
const RANGE = 57987
const LIST = 57988
const SUBPARTITION = 57989
const SUBPARTITIONS = 57990
const HASH = 57991

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 50,
	14, 50,
	-2, 39,
	-1, 51,
	1, 158,
	667, 158,
	-2, 166,
	-1, 52,
	135, 166,
	176, 166,
	345, 166,
	-2, 520,
	-1, 60,
	36, 769,
	239, 769,
	250, 769,
	285, 783,
	286, 783,
	-2, 771,
	-1, 65,
	241, 807,
	-2, 805,
	-1, 120,
	238, 1465,
	-2, 132,
	-1, 122,
	1, 159,
	667, 159,
	-2, 166,
	-1, 133,
	136, 406,
	244, 406,
	-2, 509,
	-1, 152,
	135, 166,
	176, 166,
	345, 166,
	-2, 529,
	-1, 821,
	87, 1482,
	-2, 1336,
	-1, 822,
	87, 1483,
	221, 1487,
	-2, 1337,
	-1, 823,
	221, 1486,
	-2, 41,
	-1, 903,
	60, 881,
	-2, 896,
	-1, 989,
	249, 42,
	254, 42,
	-2, 417,
	-1, 1074,
	1, 577,
	667, 577,
	-2, 166,
	-1, 1374,
	221, 1487,
	-2, 1337,
	-1, 1528,
	60, 882,
	-2, 901,
	-1, 1529,
	60, 883,
	-2, 902,
	-1, 1580,
	135, 166,
	176, 166,
	345, 166,
	-2, 456,
	-1, 1661,
	136, 406,
	244, 406,
	-2, 509,
	-1, 1670,
	249, 43,
	254, 43,
	-2, 418,
	-1, 2037,
	221, 1491,
	-2, 1485,
	-1, 2038,
	221, 1487,
	-2, 1483,
	-1, 2138,
	135, 166,
	176, 166,
	345, 166,
	-2, 457,
	-1, 2145,
	26, 187,
	-2, 189,
	-1, 2520,
	78, 97,
	88, 97,
	-2, 960,
	-1, 2589,
	642, 693,
	-2, 667,
	-1, 2757,
	50, 1433,
	-2, 1427,
	-1, 3417,
	642, 693,
	-2, 681,
	-1, 3505,
	90, 625,
	95, 625,
	105, 625,
	178, 625,
	179, 625,
	180, 625,
	181, 625,
	182, 625,
	183, 625,
	184, 625,
	185, 625,
	186, 625,
	187, 625,
	188, 625,
	189, 625,
	190, 625,
	191, 625,
	192, 625,
	193, 625,
	194, 625,
	195, 625,
	196, 625,
	197, 625,
	198, 625,
	199, 625,
	200, 625,
	201, 625,
	202, 625,
	203, 625,
	204, 625,
	205, 625,
	206, 625,
	207, 625,
	208, 625,
	209, 625,
	210, 625,
	211, 625,
	212, 625,
	213, 625,
	214, 625,
	215, 625,
	216, 625,
	217, 625,
	218, 625,
	219, 625,
	-2, 1845,
}

const yyPrivate = 57344

const yyLast = 47604

var yyAct = [...]int{
	1536, 837, 3159, 832, 85, 3160, 3576, 3158, 3587, 824,
	3398, 825, 689, 3482, 3545, 2135, 3546, 2986, 3503, 3129,
	1583, 3448, 2907, 3471, 3382, 1898, 2809, 2816, 791, 2066,
	3330, 41, 3380, 2867, 2872, 2869, 2868, 2866, 2871, 2870,
	2770, 2858, 2420, 1844, 3116, 2716, 5, 2887, 2068, 2209,
	2824, 671, 2774, 2886, 1139, 2771, 2493, 3193, 3025, 1543,
	3019, 2650, 2090, 2109, 786, 699, 2889, 2106, 785, 2768,
	3045, 2758, 2480, 2028, 2172, 2586, 667, 3011, 2555, 2197,
	2177, 2556, 2554, 161, 2086, 901, 668, 85, 1021, 919,
	2913, 1639, 2773, 2634, 2240, 2123, 2505, 951, 1686, 2111,
	40, 1141, 920, 2486, 1530, 2110, 901, 898, 2456, 42,
	2472, 2033, 900, 669, 904, 3188, 2025, 1894, 1913, 3370,
	2454, 961, 1993, 1852, 2626, 147, 1668, 2218, 2196, 2179,
	2098, 2257, 2547, 922, 979, 1572, 984, 2522, 1552, 896,
	681, 98, 2113, 1510, 102, 1785, 1917, 1386, 1789, 103,
	1314, 1871, 1675, 1299, 997, 955, 958, 787, 987, 2194,
	1992, 990, 1767, 1506, 1116, 2168, 2169, 959, 985, 986,
	2091, 1571, 676, 1557, 937, 939, 2034, 910, 1989, 1926,
	97, 1370, 1346, 105, 1130, 907, 905, 1843, 83, 1796,
	1634, 1660, 1137, 165, 125, 906, 130, 123, 124, 131,
	1070, 932, 908, 91, 675, 104, 96, 3577, 658, 1390,
	3117, 82, 2211, 2212, 2213, 3433, 2855, 2211, 2577, 1394,
	2609, 2608, 2255, 3109, 3529, 2642, 1315, 3072, 927, 931,
	2643, 603, 1752, 93, 3429, 1859, 1026, 663, 1023, 913,
	3163, 3434, 3428, 1858, 132, 126, 2877, 3407, 1857, 2579,
	1856, 1040, 1041, 1042, 952, 1045, 1046, 1047, 1048, 93,
	1855, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 2, 914,
	659, 2063, 2064, 1854, 637, 947, 792, 946, 897, 1001,
	93, 1827, 1086, 1000, 3524, 899, 643, 976, 841, 842,
	843, 643, 2875, 2302, 2452, 945, 789, 790, 921, 1874,
	2754, 1034, 1027, 1030, 1031, 2482, 126, 975, 188, 1310,
	974, 973, 109, 110, 111, 977, 114, 3162, 2881, 120,
	3163, 3597, 189, 2877, 1325, 597, 1043, 661, 1331, 662,
	637, 2599, 127, 3429, 2244, 3549, 2874, 656, 657, 637,
	945, 789, 790, 3544, 3533, 170, 2720, 892, 893, 894,
	895, 968, 963, 903, 1087, 3531, 3567, 2991, 2602, 2990,
	2242, 3383, 2421, 1864, 2932, 93, 841, 842, 843, 3532,
	3326, 3325, 634, 3122, 126, 1025, 3123, 1537, 2243, 2875,
	3530, 934, 935, 1024, 637, 3558, 84, 3336, 2536, 3527,
	2311, 84, 3141, 1301, 3130, 3472, 3479, 84, 2237, 3335,
	1903, 167, 3508, 2952, 168, 2881, 3140, 3162, 1649, 3412,
	2453, 637, 3489, 188, 1315, 3483, 3513, 2806, 2807, 2531,
	619, 2496, 2530, 2805, 2582, 2532, 84, 187, 2641, 86,
	2878, 2308, 1321, 617, 3511, 1313, 1573, 127, 1574, 149,
	3206, 2616, 2617, 3517, 3518, 1134, 2497, 2130, 2131, 2188,
	170, 2826, 2827, 2094, 2129, 2309, 2625, 972, 3512, 1079,
	1080, 1836, 1837, 1328, 93, 1329, 1330, 1106, 890, 93,
	889, 1094, 2182, 614, 3399, 93, 1095, 2543, 2684, 2065,
	1094, 160, 629, 1792, 638, 1095, 2940, 148, 2148, 2147,
	3489, 1082, 1300, 1093, 2938, 1092, 2580, 624, 2300, 1107,
	2489, 2490, 3022, 1835, 93, 1839, 167, 627, 651, 168,
	1100, 2627, 1111, 1112, 655, 970, 2909, 2878, 649, 938,
	2914, 1311, 1325, 3358, 3550, 3359, 1742, 2219, 1662, 1663,
	159, 158, 187, 1514, 2587, 2902, 2612, 1768, 2258, 171,
	638, 1069, 2278, 2903, 2279, 3551, 2280, 3579, 177, 638,
	1109, 1110, 2303, 2304, 2306, 2305, 2629, 2263, 1127, 2825,
	1133, 2270, 2266, 2268, 2269, 2267, 2271, 2272, 1569, 1132,
	1743, 2828, 1744, 3111, 1115, 604, 1075, 606, 620, 3110,
	640, 2262, 639, 610, 2281, 608, 612, 621, 613, 1050,
	607, 1049, 618, 1108, 638, 609, 622, 623, 626, 630,
	631, 632, 628, 625, 1101, 616, 641, 637, 2910, 2911,
	637, 637, 2264, 948, 942, 940, 1113, 3525, 2260, 2181,
	1793, 638, 3310, 2261, 2222, 1138, 1114, 1138, 1138, 3167,
	1321, 153, 1664, 156, 2107, 1661, 980, 154, 155, 981,
	981, 1517, 971, 2685, 171, 2092, 2093, 1019, 1044, 1018,
	1017, 2828, 2094, 177, 1016, 1015, 3556, 1014, 948, 942,
	940, 1013, 1653, 1320, 1317, 1318, 1319, 1324, 1326, 1323,
	1012, 1322, 162, 1007, 3598, 901, 1371, 1376, 1377, 3107,
	1380, 1316, 1381, 1383, 1384, 1385, 2309, 1388, 1389, 1391,
	1391, 2719, 1391, 1395, 1395, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 3406, 1382, 2578, 2241,
	1468, 838, 1470, 1471, 1472, 1473, 1474, 162, 1128, 2614,
	978, 1364, 1365, 1366, 1367, 1395, 1395, 1395, 1395, 1395,
	2581, 1378, 1570, 3106, 3485, 1020, 2545, 838, 3023, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1010, 1368, 2633, 642, 638, 1293, 1294,
	638, 638, 1773, 3161, 1292, 941, 3484, 956, 838, 1361,
	1507, 1008, 1372, 3070, 3071, 2879, 2880, 635, 1754, 1753,
	1755, 1756, 1757, 3139, 2092, 2093, 163, 1361, 2883, 956,
	2636, 992, 636, 175, 993, 2635, 1504, 157, 1786, 2601,
	1674, 1320, 1317, 1318, 1319, 1324, 1326, 1323, 87, 1322,
	941, 967, 3485, 956, 969, 3516, 1029, 954, 2195, 1316,
	2310, 933, 992, 1513, 2185, 2630, 1028, 2457, 2459, 901,
	92, 2248, 2247, 901, 183, 92, 1538, 1540, 1392, 901,
	1393, 92, 1782, 2600, 3484, 1309, 1302, 1037, 2848, 2611,
	1073, 1091, 1396, 3161, 3591, 2646, 1520, 1647, 150, 3515,
	1524, 151, 2879, 2880, 2186, 2597, 900, 1646, 1505, 2974,
	92, 2184, 1104, 2323, 1645, 2883, 1783, 164, 169, 166,
	172, 173, 174, 176, 178, 179, 180, 181, 1643, 1081,
	1078, 163, 601, 182, 184, 185, 186, 596, 175, 1090,
	1011, 1096, 1097, 1098, 1099, 2187, 999, 999, 1673, 1036,
	2624, 3395, 972, 2623, 964, 2183, 1518, 3059, 1009, 2636,
	3041, 966, 965, 2527, 2635, 1135, 1136, 1347, 122, 2239,
	1362, 1363, 1505, 1522, 1772, 2651, 2492, 102, 1523, 183,
	2429, 1906, 103, 1475, 1476, 1477, 1478, 1479, 1561, 2929,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1355, 1357,
	1358, 1469, 1511, 1084, 1358, 2487, 602, 1498, 2136, 1521,
	970, 1123, 1361, 1125, 2804, 1776, 105, 1774, 1775, 1117,
	1777, 1778, 164, 169, 166, 172, 173, 174, 176, 178,
	179, 180, 181, 1797, 2458, 1650, 1651, 1652, 182, 184,
	185, 186, 916, 1131, 1089, 972, 1068, 3420, 998, 998,
	1927, 1122, 1124, 1002, 992, 1666, 1539, 1022, 1004, 2653,
	999, 3102, 1005, 1003, 1928, 3035, 2259, 1508, 1848, 117,
	1779, 1519, 1737, 1575, 999, 897, 1688, 2670, 1689, 1659,
	1691, 1693, 1542, 1006, 1697, 1699, 1701, 1703, 1705, 899,
	999, 1918, 1918, 2340, 1678, 2570, 1329, 1330, 1138, 1719,
	3559, 1330, 1727, 1728, 3202, 3077, 1566, 1567, 1733, 1734,
	1072, 3076, 2226, 3589, 1683, 1103, 3590, 1682, 3588, 1677,
	1676, 1676, 1769, 1672, 1770, 2236, 1105, 1771, 1680, 2663,
	2662, 2661, 2234, 1642, 2655, 2231, 2659, 971, 2654, 1010,
	2652, 118, 2231, 3450, 1656, 2657, 1008, 3593, 1331, 1657,
	1669, 1525, 1655, 999, 2656, 1715, 1791, 1120, 1718, 1074,
	1720, 1121, 998, 2238, 1035, 3552, 1118, 3060, 1032, 3599,
	912, 1126, 2658, 2660, 2235, 3136, 998, 3137, 1723, 3318,
	1798, 2233, 992, 995, 996, 3317, 956, 1088, 3451, 2030,
	989, 993, 998, 1925, 3308, 1119, 1331, 1787, 992, 995,
	996, 3388, 956, 2315, 2316, 2317, 989, 993, 3152, 3151,
	188, 988, 1866, 1868, 1869, 1071, 3084, 1648, 1967, 1351,
	1352, 1353, 1354, 1356, 1355, 1357, 1358, 1799, 1800, 3083,
	971, 2030, 3563, 1537, 127, 2027, 1867, 1876, 126, 975,
	2906, 1804, 974, 973, 2029, 3073, 3389, 170, 1811, 1812,
	1813, 1877, 1359, 1360, 1875, 998, 3600, 2856, 836, 2844,
	1002, 992, 1803, 1138, 1138, 1004, 2552, 2551, 1347, 1005,
	1003, 1353, 1354, 1356, 1355, 1357, 1358, 85, 2550, 2191,
	85, 1537, 1825, 1328, 1763, 1329, 1330, 1747, 1296, 1824,
	2379, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1355,
	1357, 1358, 643, 167, 41, 1746, 168, 41, 1745, 1959,
	1948, 1949, 1950, 1951, 1961, 1952, 1953, 1954, 1966, 1962,
	1955, 1956, 1963, 1964, 1965, 1957, 1958, 1960, 1735, 187,
	1331, 1328, 1729, 1329, 1330, 1331, 1901, 1901, 1762, 1726,
	2930, 1725, 1899, 1899, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1356, 1355, 1357, 1358, 1724, 1695, 2367, 1569, 1902,
	1331, 1760, 1921, 3553, 1347, 3415, 1922, 1343, 1331, 1344,
	1349, 1350, 1351, 1352, 1353, 1354, 1356, 1355, 1357, 1358,
	1504, 1870, 2328, 1345, 1359, 1360, 1342, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1356, 1355, 1357, 1358, 3067, 643,
	1985, 1879, 1761, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1333, 1537, 1759, 1331, 2534, 643, 1880,
	3414, 1923, 3392, 1331, 2023, 1801, 3391, 2375, 1331, 3390,
	1924, 171, 1805, 1749, 1807, 1808, 1809, 1810, 3313, 2337,
	177, 1814, 1505, 1873, 1832, 1833, 841, 842, 843, 2052,
	1347, 83, 2645, 1826, 83, 1328, 1849, 1329, 1330, 3297,
	1328, 1331, 1329, 1330, 2672, 3296, 1538, 2059, 2207, 2206,
	2205, 2204, 1981, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1356, 1355, 1357, 1358, 2035, 1328, 1878, 1329, 1330, 1372,
	2026, 1546, 1331, 1328, 3201, 1329, 1330, 1748, 2203, 2202,
	2083, 1537, 2478, 3578, 2377, 108, 1919, 3561, 1537, 3540,
	1537, 2947, 2336, 1905, 1327, 1537, 107, 3199, 106, 3148,
	1912, 1914, 108, 1327, 1537, 99, 1503, 101, 2115, 2478,
	3478, 2037, 101, 107, 1502, 106, 100, 1547, 1929, 1930,
	1931, 1932, 1501, 2040, 2041, 3495, 1537, 1979, 2478, 3458,
	1331, 1328, 1943, 1329, 1330, 2117, 3081, 1990, 1328, 2145,
	1329, 1330, 3066, 1328, 162, 1329, 1330, 102, 2915, 2812,
	1331, 2076, 103, 2077, 2478, 3454, 2035, 1537, 2036, 3441,
	1537, 2017, 2018, 2019, 2020, 2021, 1537, 102, 2912, 1872,
	2847, 1537, 103, 3120, 3405, 2082, 1328, 1331, 1329, 1330,
	961, 99, 2192, 1537, 1537, 1331, 2846, 2039, 2561, 1331,
	2042, 2043, 100, 2548, 2813, 3321, 1537, 2154, 2155, 2156,
	2157, 2478, 3309, 2037, 2139, 1500, 2291, 1328, 2290, 1329,
	1330, 2060, 1331, 961, 3493, 1537, 1331, 1990, 2815, 2140,
	2149, 913, 2150, 2151, 2152, 2153, 2058, 3120, 1537, 2478,
	3118, 2121, 2070, 2253, 3491, 1537, 2810, 2252, 2160, 2161,
	2162, 2163, 2231, 1537, 2081, 1331, 2089, 1537, 2174, 2071,
	2104, 3039, 1537, 2826, 2827, 2220, 1828, 2180, 2143, 2084,
	2811, 3367, 1537, 2388, 1537, 1328, 1794, 1329, 1330, 3365,
	1537, 3408, 2102, 3362, 1537, 2837, 2836, 2834, 2835, 947,
	1758, 946, 2127, 2126, 2125, 1328, 1750, 1329, 1330, 2523,
	2142, 2141, 1740, 2817, 2832, 2833, 3348, 1537, 2832, 2831,
	3010, 1537, 3344, 2217, 2502, 1537, 1331, 2309, 2610, 3343,
	2190, 2523, 1328, 1736, 1329, 1330, 1638, 2591, 163, 2330,
	1328, 1331, 1329, 1330, 1328, 175, 1329, 1330, 1732, 2329,
	2175, 2584, 2585, 101, 2164, 2166, 2167, 2171, 1731, 2225,
	2478, 2477, 2228, 1730, 2229, 2193, 2189, 1328, 2201, 1329,
	1330, 1328, 2524, 1329, 1330, 1548, 2245, 3301, 1331, 1001,
	1129, 2825, 2526, 1000, 3300, 2175, 183, 2227, 2224, 1676,
	1347, 2223, 2322, 2828, 2524, 3128, 1550, 2333, 1537, 2494,
	1328, 2249, 1329, 1330, 2309, 2250, 2251, 2246, 2588, 2474,
	3003, 1537, 1537, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1356, 1355, 1357, 1358, 101, 3339, 2314, 1347, 2566, 164,
	169, 166, 172, 173, 174, 176, 178, 179, 180, 181,
	1904, 1537, 1638, 1637, 2144, 182, 184, 185, 186, 2256,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1355, 1357,
	1358, 1328, 1549, 1329, 1330, 2324, 2326, 1581, 1580, 107,
	2331, 2502, 2769, 2334, 2494, 2335, 1328, 2799, 1329, 1330,
	2342, 2232, 2333, 3034, 2344, 2345, 2346, 2309, 2501, 2284,
	1331, 3034, 1327, 3036, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 3446, 3419, 1331, 2478, 2502, 2814,
	2995, 1331, 2834, 1328, 2742, 1329, 1330, 1331, 2128, 3085,
	2333, 2327, 1331, 2319, 2388, 2321, 2364, 2363, 1331, 2231,
	2368, 2369, 2370, 2371, 2372, 1331, 2374, 2214, 1327, 2231,
	2376, 2099, 2100, 2502, 2381, 2382, 3034, 2383, 2299, 2097,
	2386, 2320, 2387, 1541, 1331, 2061, 2390, 1904, 1850, 1834,
	2394, 2307, 1781, 1568, 2399, 2400, 2401, 2402, 2037, 983,
	3086, 3087, 3088, 902, 3000, 1537, 1873, 2413, 2414, 2415,
	2416, 2417, 2418, 982, 93, 2422, 2423, 2318, 3521, 2557,
	2998, 1537, 3461, 2425, 2427, 2962, 1537, 2428, 3332, 1544,
	2430, 2431, 2432, 2433, 2434, 2908, 2945, 1537, 1331, 3298,
	3213, 2441, 2442, 3554, 2443, 2036, 1331, 2446, 2448, 2083,
	3403, 2450, 2325, 2339, 1331, 1328, 3101, 1329, 1330, 2460,
	3098, 2462, 3079, 2957, 1331, 2956, 1901, 2558, 2449, 1537,
	1640, 1328, 1899, 1329, 1330, 2173, 1328, 901, 1329, 1330,
	2347, 93, 1328, 1331, 1329, 1330, 2904, 1328, 2463, 1329,
	1330, 2861, 2857, 1328, 1331, 1329, 1330, 2362, 2499, 2500,
	1328, 1331, 1329, 1330, 2592, 2170, 1331, 2115, 2461, 2165,
	901, 2519, 2373, 2159, 1331, 2158, 2818, 1765, 1671, 1328,
	2822, 1329, 1330, 3305, 1667, 41, 1331, 2821, 1636, 2859,
	2447, 1537, 119, 1331, 2516, 2558, 2464, 2518, 2466, 3103,
	2498, 1331, 2479, 1073, 3046, 3047, 1331, 3333, 2426, 1537,
	2188, 1331, 1872, 2074, 2293, 2294, 1711, 1331, 3573, 2296,
	1830, 2823, 1331, 3571, 3547, 3427, 2819, 3054, 2297, 2517,
	3353, 2820, 3049, 1328, 3052, 1329, 1330, 2475, 2403, 1537,
	2853, 1328, 2852, 1329, 1330, 2395, 1537, 2488, 1331, 1328,
	3005, 1329, 1330, 2851, 1511, 2451, 1331, 2769, 3001, 1328,
	664, 1329, 1330, 2544, 2546, 2571, 1505, 1712, 1713, 1714,
	2972, 2285, 2537, 2471, 3423, 3051, 2476, 2968, 1328, 2788,
	1329, 1330, 1831, 2791, 2596, 2954, 2491, 2787, 2792, 1328,
	2953, 1329, 1330, 3334, 2521, 2950, 1328, 1331, 1329, 1330,
	2088, 1328, 2553, 1329, 1330, 1331, 2445, 1545, 2180, 1328,
	2525, 1329, 1330, 2789, 2528, 2607, 3089, 2080, 2790, 3040,
	2560, 1328, 2535, 1329, 1330, 2563, 2564, 2538, 1328, 1331,
	1329, 1330, 2444, 2747, 1331, 2746, 1328, 3387, 1329, 1330,
	2440, 1328, 2549, 1329, 1330, 1331, 1328, 3194, 1329, 1330,
	2583, 3192, 1328, 1331, 1329, 1330, 3030, 1328, 2559, 1329,
	1330, 1707, 1331, 3090, 3091, 3092, 1331, 923, 2756, 1780,
	929, 929, 2604, 2567, 2830, 2568, 1331, 2572, 2573, 2574,
	3183, 2439, 3182, 1328, 2541, 1329, 1330, 2759, 2761, 2438,
	1659, 1328, 1331, 1329, 1330, 888, 2762, 2562, 2674, 2675,
	2676, 2677, 2678, 2593, 2594, 1331, 1927, 1039, 1708, 1709,
	1710, 1038, 2793, 2437, 2511, 2512, 3027, 2683, 2436, 917,
	1928, 2923, 99, 2603, 3026, 1331, 2557, 918, 2639, 2435,
	3181, 1295, 1328, 100, 1329, 1330, 2598, 2424, 1331, 127,
	1328, 2664, 1329, 1330, 3032, 99, 2419, 2099, 2100, 2647,
	2412, 2628, 101, 101, 3585, 2605, 100, 108, 2631, 2849,
	2411, 2649, 2288, 3500, 1328, 3404, 1329, 1330, 107, 1328,
	106, 1329, 1330, 2714, 3328, 1331, 2410, 2829, 2515, 101,
	1328, 2085, 1329, 1330, 925, 926, 2277, 2648, 1328, 2409,
	1329, 1330, 2276, 2275, 2274, 106, 2273, 1328, 2665, 1329,
	1330, 1328, 2667, 1329, 1330, 1331, 3012, 2637, 2313, 2408,
	2638, 1328, 2745, 1329, 1330, 3375, 2721, 3020, 3374, 3356,
	2744, 2723, 2407, 3200, 108, 3198, 2115, 1328, 3197, 1329,
	1330, 3190, 3099, 3031, 2726, 107, 107, 106, 1331, 2026,
	1328, 2026, 1329, 1330, 3029, 2688, 2666, 2862, 2215, 2776,
	2778, 85, 2679, 2117, 2115, 2115, 2115, 2115, 2115, 2406,
	1328, 2694, 1329, 1330, 1331, 1654, 924, 3189, 2796, 108,
	2494, 3575, 3574, 1328, 2115, 1329, 1330, 2115, 904, 2749,
	107, 2117, 2117, 2117, 2117, 2117, 3171, 2474, 2750, 2405,
	2725, 2722, 2781, 2724, 2686, 2365, 2072, 2726, 1562, 1331,
	2798, 2117, 1554, 3574, 2117, 2696, 3575, 2698, 3, 2741,
	1328, 3393, 1329, 1330, 2737, 2704, 2705, 2706, 2707, 2708,
	112, 113, 2404, 2709, 2710, 2711, 2712, 3065, 915, 95,
	2751, 1847, 2748, 2766, 10, 1, 2800, 2763, 2764, 2801,
	1328, 2882, 1329, 1330, 1845, 1298, 1297, 9, 2398, 2780,
	905, 2890, 1846, 2783, 2784, 8, 2786, 3069, 2782, 906,
	2794, 2785, 2738, 2739, 2740, 3510, 1535, 1531, 615, 102,
	2808, 2062, 2802, 1328, 103, 1329, 1330, 1509, 3548, 1791,
	3506, 1532, 1331, 2397, 3507, 2841, 1331, 2840, 1751, 1741,
	3131, 1991, 3329, 2865, 2221, 2925, 2842, 2843, 2839, 1328,
	3097, 1329, 1330, 2178, 2772, 1331, 2078, 2079, 1534, 2772,
	1533, 991, 152, 2137, 2892, 2942, 2943, 2944, 2893, 2946,
	2948, 2180, 2884, 1331, 2138, 3474, 116, 2885, 949, 2899,
	115, 994, 2863, 2955, 1328, 1102, 1329, 1330, 2959, 2960,
	2961, 2963, 2964, 2965, 2966, 1331, 2216, 2967, 3121, 2969,
	2970, 2971, 2542, 2146, 2975, 2976, 2977, 2978, 2979, 2980,
	2981, 2982, 2983, 2984, 2985, 2919, 2396, 1587, 1585, 2916,
	2393, 1586, 2926, 2992, 1584, 2918, 2996, 1589, 2997, 2999,
	2936, 3002, 3004, 1588, 3006, 3007, 3008, 3009, 2931, 2392,
	2366, 2973, 3015, 2933, 2934, 2864, 2935, 1331, 1838, 2937,
	650, 2939, 2514, 2941, 644, 1331, 190, 2391, 1576, 2989,
	2927, 1555, 1331, 2987, 1033, 605, 2993, 1328, 2838, 1329,
	1330, 1328, 2254, 1329, 1330, 611, 1379, 3037, 3038, 2389,
	1331, 3042, 1829, 2743, 2775, 1331, 2529, 944, 936, 1331,
	1328, 2073, 1329, 1330, 2465, 943, 2507, 2510, 2511, 2512,
	2508, 2115, 2509, 2513, 3306, 3018, 3046, 3047, 1328, 2777,
	1329, 1330, 3024, 2755, 3061, 2757, 3016, 3013, 3014, 2481,
	2760, 2753, 3386, 3191, 3459, 2539, 3021, 1551, 2117, 3028,
	1328, 2385, 1329, 1330, 2994, 2338, 1916, 1369, 3043, 2384,
	3033, 2507, 2510, 2511, 2512, 2508, 2380, 2509, 2513, 2114,
	3166, 1865, 673, 672, 670, 3053, 3050, 3057, 3058, 2467,
	2495, 1334, 826, 3056, 2378, 2455, 3055, 1563, 2506, 2343,
	2504, 2503, 2286, 2332, 2122, 3048, 1332, 2892, 3063, 3064,
	3044, 2893, 1328, 3502, 1329, 1330, 2116, 3119, 2112, 2473,
	1328, 777, 1329, 1330, 3080, 776, 3082, 1328, 682, 1329,
	1330, 1535, 1531, 674, 666, 1387, 3125, 3126, 775, 774,
	3062, 3074, 3075, 2891, 3486, 1328, 1532, 1329, 1330, 2613,
	1328, 2905, 1329, 1330, 1328, 2615, 1329, 1330, 2540, 3138,
	2901, 1312, 3142, 1527, 660, 962, 2928, 3410, 2312, 2951,
	1526, 1528, 1529, 1534, 1946, 1533, 3104, 3105, 1947, 3417,
	2873, 3115, 2854, 2589, 2208, 68, 45, 3381, 3447, 3153,
	3127, 773, 770, 3168, 3108, 3169, 3170, 2717, 3112, 3113,
	3114, 2718, 3430, 3431, 3157, 769, 3432, 1974, 1308, 1305,
	3523, 1840, 94, 36, 35, 34, 33, 3165, 32, 26,
	25, 24, 23, 22, 29, 3172, 19, 3143, 21, 20,
	18, 2876, 2921, 2922, 3543, 3584, 121, 54, 51, 49,
	129, 128, 52, 3180, 48, 3184, 3185, 1076, 46, 31,
	30, 17, 16, 15, 14, 13, 12, 11, 7, 6,
	39, 38, 28, 37, 27, 4, 3164, 2576, 2776, 2210,
	85, 3147, 2776, 0, 0, 3186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1901, 0,
	0, 0, 0, 0, 1899, 0, 0, 41, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3187,
	3215, 3195, 3207, 3196, 0, 0, 0, 0, 0, 3205,
	3203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3312,
	0, 0, 3216, 3217, 0, 0, 3320, 3219, 0, 0,
	0, 0, 0, 0, 0, 3327, 0, 0, 0, 0,
	0, 0, 3155, 3209, 0, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3337, 3338, 0, 3340, 3304,
	3341, 3342, 3303, 3302, 0, 3345, 3346, 3347, 0, 3349,
	3352, 3350, 0, 3319, 3351, 0, 0, 1901, 3324, 3323,
	0, 0, 1641, 1899, 0, 3361, 3363, 3364, 3366, 3368,
	3369, 3371, 0, 3211, 0, 3331, 3307, 0, 0, 3354,
	0, 0, 2772, 0, 0, 0, 0, 0, 3314, 3315,
	3316, 0, 0, 0, 0, 0, 0, 0, 2776, 0,
	0, 0, 0, 0, 3357, 0, 0, 0, 3360, 3401,
	0, 0, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 3397, 3394,
	1795, 3396, 0, 3379, 3376, 3377, 3355, 3378, 0, 0,
	0, 0, 3411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2775, 0, 0, 0, 2775, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3426, 0, 0, 3385, 0, 3400, 41, 0, 0,
	0, 0, 0, 3413, 0, 0, 3416, 0, 0, 0,
	0, 3442, 3418, 0, 0, 0, 0, 3443, 3444, 0,
	822, 0, 0, 3402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3311, 0, 0, 0, 0, 3455,
	3436, 3456, 0, 3437, 0, 0, 85, 0, 0, 0,
	0, 0, 3445, 0, 0, 0, 0, 3421, 0, 0,
	0, 0, 0, 0, 0, 3480, 3481, 0, 0, 0,
	0, 0, 0, 41, 3452, 193, 0, 0, 193, 3490,
	3492, 3494, 648, 0, 3487, 3488, 0, 654, 3460, 3462,
	3473, 3465, 3470, 3467, 3466, 3464, 3469, 3468, 193, 0,
	0, 0, 0, 0, 3522, 0, 0, 0, 0, 0,
	0, 3498, 0, 193, 3331, 3475, 0, 0, 0, 0,
	0, 0, 0, 0, 3519, 3501, 3509, 3514, 0, 0,
	3457, 0, 0, 2775, 0, 3487, 3488, 3528, 654, 193,
	654, 3526, 3538, 3539, 0, 0, 0, 0, 0, 0,
	0, 0, 3425, 0, 0, 0, 0, 0, 0, 0,
	3435, 3537, 0, 0, 0, 3542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3560, 3562, 3564, 1860, 1861,
	1862, 1863, 0, 0, 0, 0, 3557, 1901, 0, 0,
	0, 2772, 0, 1899, 3541, 0, 3565, 0, 3568, 3566,
	0, 3572, 3570, 0, 1604, 0, 3583, 0, 0, 3569,
	0, 3487, 3488, 3580, 0, 0, 1382, 0, 0, 0,
	3586, 0, 3595, 3596, 3592, 3594, 0, 1907, 1908, 0,
	0, 0, 1910, 0, 929, 929, 1915, 3409, 0, 0,
	1920, 1901, 0, 0, 3603, 3604, 3555, 1899, 3351, 3602,
	0, 0, 0, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 3601, 0, 0, 0, 1968, 1969, 1970,
	1971, 1972, 1973, 1975, 0, 1980, 0, 1982, 1983, 1984,
	0, 1986, 1987, 1988, 0, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 2022, 0, 2024, 0, 2031, 2032, 929,
	0, 929, 929, 929, 929, 929, 0, 0, 0, 0,
	0, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 0,
	2053, 2054, 2055, 2056, 2057, 0, 0, 188, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 149, 0, 0, 0, 0, 929, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2095, 2096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 2134, 0, 0, 0,
	0, 1604, 1605, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 159, 158, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2176, 0, 0,
	0, 0, 0, 0, 1618, 1621, 1622, 1623, 1624, 1625,
	1626, 0, 1627, 1628, 1630, 1631, 1629, 1632, 1633, 1606,
	1607, 1608, 1609, 1590, 1591, 1619, 0, 1593, 0, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 0, 0,
	1603, 1610, 1611, 1612, 1613, 0, 1614, 1615, 1616, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 134, 156, 141, 133,
	0, 154, 155, 0, 188, 1592, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 1658, 0, 177, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	149, 0, 145, 143, 138, 139, 140, 144, 0, 0,
	0, 170, 0, 0, 135, 0, 0, 193, 0, 193,
	0, 0, 193, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 148, 0,
	0, 0, 0, 0, 654, 0, 654, 654, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	168, 0, 0, 0, 0, 0, 654, 193, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 1662,
	1663, 159, 158, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1374, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 0, 1627,
	1628, 1630, 1631, 1629, 1632, 1633, 1606, 1607, 1608, 1609,
	1590, 1591, 1619, 0, 1593, 0, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 0, 0, 1603, 1610, 1611,
	1612, 1613, 0, 1614, 1615, 1616, 1617, 0, 0, 2341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2348, 2349, 2350, 2351, 0, 0, 0, 0, 0, 0,
	0, 157, 153, 1664, 156, 0, 1661, 0, 154, 155,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 1374, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 1512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1620,
	193, 0, 0, 0, 654, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 183, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 0,
	654, 0, 0, 193, 0, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 891, 164, 169, 166, 172,
	173, 174, 176, 178, 179, 180, 181, 0, 0, 0,
	0, 0, 182, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	0, 0, 0, 0, 0, 0, 957, 0, 157, 0,
	0, 1374, 0, 0, 0, 0, 0, 654, 654, 0,
	654, 0, 654, 654, 0, 654, 654, 654, 654, 654,
	654, 0, 0, 0, 0, 0, 0, 0, 1374, 0,
	0, 1374, 654, 1374, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 150,
	0, 0, 151, 0, 0, 0, 0, 654, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 193, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 2644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 2668, 2669, 0,
	0, 2671, 0, 0, 2673, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 169, 166, 172, 173, 174, 176,
	178, 179, 180, 181, 2680, 2681, 2682, 0, 0, 182,
	184, 185, 186, 0, 0, 0, 2687, 0, 0, 2689,
	2690, 2691, 0, 0, 0, 2692, 2693, 0, 0, 1994,
	2695, 0, 0, 2697, 0, 0, 2699, 2700, 2701, 2702,
	0, 0, 0, 0, 2703, 1994, 1994, 1994, 1994, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2713, 0, 0, 0, 0, 0, 0, 0, 0, 929,
	0, 0, 0, 0, 0, 0, 2727, 2728, 2729, 2730,
	2731, 2732, 0, 0, 0, 2733, 2734, 0, 2735, 0,
	2736, 0, 0, 0, 0, 0, 0, 0, 0, 778,
	0, 0, 654, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2797, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1374, 0, 0, 84, 43, 44, 86, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 1374,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 47,
	75, 76, 0, 73, 77, 0, 0, 953, 0, 960,
	0, 2860, 74, 0, 654, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 1077, 0, 1083, 0, 0, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 2958, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 654,
	0, 0, 2038, 193, 0, 193, 0, 193, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 53, 56, 55, 58, 0, 72, 0, 0,
	81, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 89, 88, 0, 0, 70,
	71, 57, 0, 0, 0, 0, 0, 79, 80, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 62,
	63, 821, 64, 65, 66, 67, 0, 0, 3100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 3124, 0, 0, 654, 0, 0, 0, 654, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 633, 59, 0, 0, 0, 0, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 3144, 0, 3145, 0,
	0, 3146, 193, 193, 3149, 3150, 193, 0, 193, 0,
	0, 0, 0, 3154, 0, 0, 0, 193, 0, 653,
	0, 653, 0, 3156, 193, 0, 0, 0, 0, 0,
	1565, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 3173, 0, 1582, 3174,
	193, 3175, 3176, 0, 3177, 0, 3178, 0, 0, 654,
	0, 3179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3212, 0, 92,
	3214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1374, 0, 2038, 0, 0,
	3299, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1140, 0, 1140, 1140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 69, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 839, 0, 0, 0, 827, 840,
	841, 842, 843, 828, 0, 0, 829, 830, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 836, 844, 845, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2894, 2895, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 193, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 0, 0, 0, 0, 0, 0,
	3424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 1516, 0, 0, 0, 0, 654,
	0, 1853, 0, 3438, 0, 193, 3439, 0, 3440, 0,
	0, 0, 193, 0, 0, 2896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 1559,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 193, 193, 193, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	0, 0, 2897, 2898, 0, 193, 193, 0, 0, 0,
	0, 0, 3520, 0, 0, 0, 1687, 1687, 0, 1687,
	0, 1687, 1687, 0, 1696, 1687, 1687, 1687, 1687, 1687,
	193, 0, 0, 0, 0, 653, 1291, 653, 653, 0,
	0, 953, 3534, 0, 3535, 0, 3536, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 793, 1373, 0, 797, 0,
	794, 795, 1788, 0, 0, 796, 0, 0, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3581, 0, 3582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1140, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 2101, 0, 0, 0, 0, 0, 0, 0,
	2105, 839, 2108, 2030, 0, 1853, 840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1900, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 1374, 0, 0,
	654, 654, 1374, 193, 193, 193, 193, 193, 0, 0,
	0, 0, 0, 0, 1373, 193, 0, 0, 0, 0,
	0, 193, 0, 193, 0, 0, 193, 193, 193, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 0, 193, 0, 0, 653, 653, 0, 0, 0,
	0, 1140, 1140, 0, 0, 654, 0, 0, 1374, 0,
	0, 0, 0, 654, 1841, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 193, 0, 0, 193, 0, 1635, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 1644, 0, 0, 0,
	2265, 1895, 0, 0, 0, 0, 0, 0, 0, 2282,
	2283, 0, 0, 2287, 0, 0, 0, 0, 0, 653,
	0, 1670, 1911, 0, 2292, 0, 0, 0, 0, 1679,
	0, 2295, 1373, 1681, 0, 0, 1684, 1685, 653, 653,
	0, 653, 0, 653, 653, 0, 653, 653, 653, 653,
	653, 653, 0, 1944, 1945, 0, 0, 2298, 0, 1373,
	1716, 1717, 1373, 653, 1373, 654, 1722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1140,
	0, 1784, 0, 0, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 2075, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	779, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1559, 193,
	0, 1140, 193, 193, 193, 0, 0, 0, 0, 0,
	0, 0, 654, 654, 0, 0, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 654,
	654, 654, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 911, 0, 0, 0, 0, 960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	930, 930, 0, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 0, 0, 0, 953, 0, 0, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 1895, 0, 0, 193, 1895, 1895, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1374, 0, 0, 0, 0,
	654, 0, 654, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 1909, 0, 653, 0, 0, 0, 0, 0,
	1373, 0, 2569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 653, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2301, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 2618, 2619,
	2620, 2621, 2622, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 2632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 654, 654, 2640, 0, 0,
	0, 0, 0, 0, 0, 0, 1140, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	653, 0, 0, 0, 0, 0, 0, 2198, 2199, 2200,
	0, 0, 0, 654, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 0,
	0, 0, 0, 653, 1679, 0, 0, 1679, 0, 1679,
	0, 0, 0, 0, 0, 2230, 0, 0, 0, 0,
	2468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2483, 0, 0, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1374, 0, 654, 0, 0, 0,
	653, 0, 0, 0, 0, 653, 0, 0, 0, 653,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 654, 0, 0, 0, 0, 0, 600, 0, 600,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 2850,
	0, 93, 0, 0, 839, 0, 193, 654, 827, 840,
	841, 842, 843, 828, 0, 0, 829, 830, 0, 831,
	0, 0, 0, 0, 0, 2888, 0, 0, 2565, 0,
	0, 0, 0, 836, 844, 845, 0, 600, 0, 2900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 0, 0, 0, 2087, 0, 0, 2917, 0,
	0, 2920, 2590, 0, 0, 1375, 0, 0, 0, 0,
	653, 2595, 654, 0, 0, 0, 0, 0, 0, 0,
	2894, 2895, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 654, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 0, 0, 1373, 0, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1895, 3017, 0, 0, 0, 2896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1375, 0, 0, 0, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2897, 2898, 0, 0, 3078, 0, 0, 0,
	0, 2715, 0, 0, 0, 0, 0, 0, 0, 1140,
	600, 0, 0, 0, 0, 0, 3093, 0, 0, 3094,
	3095, 3096, 0, 0, 0, 0, 0, 0, 0, 0,
	911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 653, 600, 0, 0, 0, 0, 2752, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 600, 1140, 0, 0, 0, 0, 0, 0, 2779,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1375, 0,
	0, 1375, 0, 1375, 600, 0, 0, 0, 0, 0,
	653, 839, 0, 0, 953, 0, 840, 0, 0, 0,
	0, 0, 2087, 0, 1738, 0, 1900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 600,
	0, 0, 0, 0, 653, 0, 0, 0, 1679, 1679,
	0, 0, 0, 653, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1373,
	2606, 0, 600, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 1816,
	600, 600, 600, 600, 600, 600, 600, 0, 0, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 0, 0, 0, 2988, 0, 0, 0, 0, 0,
	0, 0, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 653, 0, 600, 0, 0, 0, 0, 0,
	0, 2087, 2087, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 653, 0, 0, 0, 1373, 0,
	0, 653, 653, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3132, 3133,
	3134, 3135, 1375, 0, 0, 0, 0, 0, 0, 0,
	0, 3422, 0, 0, 930, 930, 0, 0, 0, 1375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 1373,
	0, 0, 0, 0, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 930,
	1790, 930, 930, 930, 930, 930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2924, 0, 0, 0, 3208,
	0, 3210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 0, 0, 0,
	0, 2087, 1790, 600, 0, 600, 653, 600, 2124, 0,
	0, 0, 0, 0, 0, 0, 0, 3322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3372, 0, 0, 0, 3372, 3372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3068,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	653, 653, 653, 653, 0, 0, 600, 0, 0, 0,
	0, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 600, 0, 0, 600, 0, 2289, 0,
	0, 0, 2087, 0, 0, 0, 0, 600, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1140,
	1140, 0, 0, 0, 0, 0, 1373, 0, 0, 0,
	0, 653, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 3496, 0, 0, 0, 1375, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 3504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 3449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2988, 0,
	3504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 653, 0, 0, 0, 653, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 653, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 0, 0, 0,
	0, 0, 2575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1373, 0, 653, 1375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 600, 600, 600, 600, 0, 0, 0, 0,
	0, 653, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 600, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3237, 3239, 3238, 3256, 3257, 3258, 3259, 3260, 3261, 3262,
	721, 0, 0, 0, 930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 930,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1375, 0, 0,
	0, 0, 1375, 600, 600, 600, 600, 600, 0, 0,
	0, 0, 0, 0, 0, 2795, 0, 0, 0, 0,
	0, 1738, 0, 600, 0, 0, 600, 2803, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3251,
	3252, 0, 600, 3281, 3280, 3279, 0, 0, 3277, 3278,
	3276, 0, 0, 0, 0, 0, 0, 0, 1375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 793, 600, 700, 797, 702, 794, 795,
	0, 698, 701, 796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	720, 3236, 3240, 3241, 3242, 3253, 3254, 3255, 3263, 3265,
	752, 3264, 3266, 3267, 3268, 3271, 3272, 3273, 3274, 3269,
	3270, 3275, 3220, 3224, 3221, 3222, 3223, 3235, 3225, 3226,
	3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3282, 3283,
	3284, 3285, 3286, 3287, 3246, 3250, 3249, 3247, 3248, 3244,
	3245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 798, 0, 799, 0, 0, 803, 0,
	0, 0, 805, 804, 600, 806, 772, 771, 0, 0,
	800, 801, 0, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3288, 3289,
	3290, 3291, 3292, 3293, 3294, 3295, 0, 0, 0, 600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 600, 600, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 1274, 1259, 506, 0, 1202,
	1277, 1171, 1190, 1287, 1193, 1196, 1238, 1150, 1216, 405,
	1187, 1143, 1175, 1145, 1182, 1146, 1173, 1204, 263, 1170,
	1261, 1220, 1276, 356, 260, 1152, 1176, 419, 1192, 200,
	1240, 475, 247, 367, 364, 514, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 1283, 360, 1226, 0, 485,
	390, 0, 0, 0, 1206, 1265, 1214, 1252, 1201, 1239,
	1160, 1225, 1278, 1188, 1235, 1279, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 1738, 0, 3476, 643, 0,
	0, 0, 0, 3477, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 600, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 1184, 1232, 1273, 1185, 1234,
	258, 313, 265, 257, 511, 1284, 1264, 1149, 1213, 1272,
	0, 0, 224, 1275, 1208, 0, 1237, 0, 1290, 1144,
	1228, 0, 1147, 1151, 1286, 1268, 1179, 268, 0, 0,
	0, 0, 0, 0, 0, 1205, 1215, 1249, 1253, 1199,
	0, 0, 0, 0, 1375, 0, 0, 1177, 0, 1224,
	0, 0, 0, 1156, 1148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1203, 0, 0,
	0, 0, 1159, 0, 1178, 1250, 1738, 1142, 290, 1153,
	391, 250, 0, 442, 1257, 1267, 1200, 553, 1271, 1198,
	1197, 1244, 1157, 1263, 1191, 355, 1155, 322, 195, 220,
	0, 1189, 401, 450, 462, 1262, 1174, 1183, 248, 1181,
	460, 415, 531, 228, 277, 447, 421, 458, 429, 280,
	1223, 1242, 459, 362, 516, 439, 528, 554, 555, 256,
	395, 540, 500, 548, 572, 221, 253, 409, 493, 534,
	482, 387, 512, 513, 321, 481, 288, 198, 359, 560,
	219, 468, 361, 237, 226, 518, 537, 282, 445, 567,
	208, 495, 526, 234, 472, 0, 0, 574, 242, 492,
	210, 523, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 520, 521, 249, 575, 223,
	547, 215, 1154, 546, 397, 515, 524, 384, 373, 214,
	522, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 535, 0, 203,
	0, 487, 536, 576, 441, 207, 229, 230, 232, 1169,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 1258, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 568, 566, 396, 303, 483, 325,
	363, 1247, 1289, 414, 461, 235, 533, 484, 1164, 1168,
	1162, 1229, 1163, 1218, 1219, 1165, 1280, 1281, 1282, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 1251, 1158,
	0, 1166, 1167, 1260, 1269, 1270, 595, 374, 474, 530,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 509, 304, 211, 212, 213, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 285, 539, 301,
	457, 456, 323, 324, 369, 438, 1222, 194, 216, 358,
	1285, 443, 281, 573, 543, 538, 201, 218, 1161, 255,
	1172, 1180, 0, 1186, 1194, 1195, 1207, 1209, 1210, 1211,
	1212, 1230, 1231, 1233, 1241, 1243, 1246, 1248, 1255, 1266,
	1288, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 293, 294, 433, 434, 306, 307, 570,
	571, 292, 527, 557, 525, 569, 551, 427, 368, 1221,
	1227, 371, 274, 297, 312, 1236, 542, 490, 222, 455,
	283, 246, 1254, 1256, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 1217, 1245,
	366, 507, 508, 308, 386, 0, 0, 0, 1274, 1259,
	506, 0, 1202, 1277, 1171, 1190, 1287, 1193, 1196, 1238,
	1150, 1216, 405, 1187, 1143, 1175, 1145, 1182, 1146, 1173,
	1204, 263, 1170, 1261, 1220, 1276, 356, 260, 1152, 1176,
	419, 1192, 200, 1240, 475, 247, 367, 364, 514, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 1283, 360,
	1226, 0, 485, 390, 0, 0, 0, 1206, 1265, 1214,
	1252, 1201, 1239, 1160, 1225, 1278, 1188, 1235, 1279, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 1184, 1232,
	1273, 1185, 1234, 258, 313, 265, 257, 511, 1284, 1264,
	1149, 1213, 1272, 0, 0, 224, 1275, 1208, 0, 1237,
	0, 1290, 1144, 1228, 0, 1147, 1151, 1286, 1268, 1179,
	268, 0, 0, 0, 0, 0, 0, 0, 1205, 1215,
	1249, 1253, 1199, 0, 0, 0, 0, 0, 2804, 0,
	1177, 0, 1224, 0, 0, 0, 1156, 1148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 1159, 0, 1178, 1250, 0,
	1142, 290, 1153, 391, 250, 0, 442, 1257, 1267, 1200,
	553, 1271, 1198, 1197, 1244, 1157, 1263, 1191, 355, 1155,
	322, 195, 220, 0, 1189, 401, 450, 462, 1262, 1174,
	1183, 248, 1181, 460, 415, 531, 228, 277, 447, 421,
	458, 429, 280, 1223, 1242, 459, 362, 516, 439, 528,
	554, 555, 256, 395, 540, 500, 548, 572, 221, 253,
	409, 493, 534, 482, 387, 512, 513, 321, 481, 288,
	198, 359, 560, 219, 468, 361, 237, 226, 518, 537,
	282, 445, 567, 208, 495, 526, 234, 472, 0, 0,
	574, 242, 492, 210, 523, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 520, 521,
	249, 575, 223, 547, 215, 1154, 546, 397, 515, 524,
	384, 373, 214, 522, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	535, 0, 203, 0, 487, 536, 576, 441, 207, 229,
	230, 232, 1169, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 1258, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 568, 566, 396,
	303, 483, 325, 363, 1247, 1289, 414, 461, 235, 533,
	484, 1164, 1168, 1162, 1229, 1163, 1218, 1219, 1165, 1280,
	1281, 1282, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 1251, 1158, 0, 1166, 1167, 1260, 1269, 1270, 595,
	374, 474, 530, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 509, 304, 211, 212, 213, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	285, 539, 301, 457, 456, 323, 324, 369, 438, 1222,
	194, 216, 358, 1285, 443, 281, 573, 543, 538, 201,
	218, 1161, 255, 1172, 1180, 0, 1186, 1194, 1195, 1207,
	1209, 1210, 1211, 1212, 1230, 1231, 1233, 1241, 1243, 1246,
	1248, 1255, 1266, 1288, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 293, 294, 433, 434,
	306, 307, 570, 571, 292, 527, 557, 525, 569, 551,
	427, 368, 1221, 1227, 371, 274, 297, 312, 1236, 542,
	490, 222, 455, 283, 246, 1254, 1256, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 1217, 1245, 366, 507, 508, 308, 386, 0, 0,
	0, 1274, 1259, 506, 0, 1202, 1277, 1171, 1190, 1287,
	1193, 1196, 1238, 1150, 1216, 405, 1187, 1143, 1175, 1145,
	1182, 1146, 1173, 1204, 263, 1170, 1261, 1220, 1276, 356,
	260, 1152, 1176, 419, 1192, 200, 1240, 475, 247, 367,
	364, 514, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 1283, 360, 1226, 0, 485, 390, 0, 0, 0,
	1206, 1265, 1214, 1252, 1201, 1239, 1160, 1225, 1278, 1188,
	1235, 1279, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 1184, 1232, 1273, 1185, 1234, 258, 313, 265, 257,
	511, 1284, 1264, 1149, 1213, 1272, 0, 0, 224, 1275,
	1208, 0, 1237, 0, 1290, 1144, 1228, 0, 1147, 1151,
	1286, 1268, 1179, 268, 0, 0, 0, 0, 0, 0,
	0, 1205, 1215, 1249, 1253, 1199, 0, 0, 0, 0,
	0, 2765, 0, 1177, 0, 1224, 0, 0, 0, 1156,
	1148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 1159, 0,
	1178, 1250, 0, 1142, 290, 1153, 391, 250, 0, 442,
	1257, 1267, 1200, 553, 1271, 1198, 1197, 1244, 1157, 1263,
	1191, 355, 1155, 322, 195, 220, 0, 1189, 401, 450,
	462, 1262, 1174, 1183, 248, 1181, 460, 415, 531, 228,
	277, 447, 421, 458, 429, 280, 1223, 1242, 459, 362,
	516, 439, 528, 554, 555, 256, 395, 540, 500, 548,
	572, 221, 253, 409, 493, 534, 482, 387, 512, 513,
	321, 481, 288, 198, 359, 560, 219, 468, 361, 237,
	226, 518, 537, 282, 445, 567, 208, 495, 526, 234,
	472, 0, 0, 574, 242, 492, 210, 523, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 520, 521, 249, 575, 223, 547, 215, 1154, 546,
	397, 515, 524, 384, 373, 214, 522, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 535, 0, 203, 0, 487, 536, 576,
	441, 207, 229, 230, 232, 1169, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 1258, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	568, 566, 396, 303, 483, 325, 363, 1247, 1289, 414,
	461, 235, 533, 484, 1164, 1168, 1162, 1229, 1163, 1218,
	1219, 1165, 1280, 1281, 1282, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 1251, 1158, 0, 1166, 1167, 1260,
	1269, 1270, 595, 374, 474, 530, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 509, 304, 211,
	212, 213, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 285, 539, 301, 457, 456, 323, 324,
	369, 438, 1222, 194, 216, 358, 1285, 443, 281, 573,
	543, 538, 201, 218, 1161, 255, 1172, 1180, 0, 1186,
	1194, 1195, 1207, 1209, 1210, 1211, 1212, 1230, 1231, 1233,
	1241, 1243, 1246, 1248, 1255, 1266, 1288, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 293,
	294, 433, 434, 306, 307, 570, 571, 292, 527, 557,
	525, 569, 551, 427, 368, 1221, 1227, 371, 274, 297,
	312, 1236, 542, 490, 222, 455, 283, 246, 1254, 1256,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 1217, 1245, 366, 507, 508, 308,
	386, 0, 0, 0, 1274, 1259, 506, 0, 1202, 1277,
	1171, 1190, 1287, 1193, 1196, 1238, 1150, 1216, 405, 1187,
	1143, 1175, 1145, 1182, 1146, 1173, 1204, 263, 1170, 1261,
	1220, 1276, 356, 260, 1152, 1176, 419, 1192, 200, 1240,
	475, 247, 367, 364, 514, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 1283, 360, 1226, 0, 485, 390,
	0, 0, 0, 1206, 1265, 1214, 1252, 1201, 1239, 1160,
	1225, 1278, 1188, 1235, 1279, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 1184, 1232, 1273, 1185, 1234, 258,
	313, 265, 257, 511, 1284, 1264, 1149, 1213, 1272, 0,
	0, 224, 1275, 1208, 0, 1237, 0, 1290, 1144, 1228,
	0, 1147, 1151, 1286, 1268, 1179, 268, 0, 0, 0,
	0, 0, 0, 0, 1205, 1215, 1249, 1253, 1199, 0,
	0, 0, 0, 0, 2103, 0, 1177, 0, 1224, 0,
	0, 0, 1156, 1148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 1159, 0, 1178, 1250, 0, 1142, 290, 1153, 391,
	250, 0, 442, 1257, 1267, 1200, 553, 1271, 1198, 1197,
	1244, 1157, 1263, 1191, 355, 1155, 322, 195, 220, 0,
	1189, 401, 450, 462, 1262, 1174, 1183, 248, 1181, 460,
	415, 531, 228, 277, 447, 421, 458, 429, 280, 1223,
	1242, 459, 362, 516, 439, 528, 554, 555, 256, 395,
	540, 500, 548, 572, 221, 253, 409, 493, 534, 482,
	387, 512, 513, 321, 481, 288, 198, 359, 560, 219,
	468, 361, 237, 226, 518, 537, 282, 445, 567, 208,
	495, 526, 234, 472, 0, 0, 574, 242, 492, 210,
	523, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 520, 521, 249, 575, 223, 547,
	215, 1154, 546, 397, 515, 524, 384, 373, 214, 522,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 535, 0, 203, 0,
	487, 536, 576, 441, 207, 229, 230, 232, 1169, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 1258, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 568, 566, 396, 303, 483, 325, 363,
	1247, 1289, 414, 461, 235, 533, 484, 1164, 1168, 1162,
	1229, 1163, 1218, 1219, 1165, 1280, 1281, 1282, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 1251, 1158, 0,
	1166, 1167, 1260, 1269, 1270, 595, 374, 474, 530, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	509, 304, 211, 212, 213, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 285, 539, 301, 457,
	456, 323, 324, 369, 438, 1222, 194, 216, 358, 1285,
	443, 281, 573, 543, 538, 201, 218, 1161, 255, 1172,
	1180, 0, 1186, 1194, 1195, 1207, 1209, 1210, 1211, 1212,
	1230, 1231, 1233, 1241, 1243, 1246, 1248, 1255, 1266, 1288,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 293, 294, 433, 434, 306, 307, 570, 571,
	292, 527, 557, 525, 569, 551, 427, 368, 1221, 1227,
	371, 274, 297, 312, 1236, 542, 490, 222, 455, 283,
	246, 1254, 1256, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 1217, 1245, 366,
	507, 508, 308, 386, 0, 0, 0, 1274, 1259, 506,
	0, 1202, 1277, 1171, 1190, 1287, 1193, 1196, 1238, 1150,
	1216, 405, 1187, 1143, 1175, 1145, 1182, 1146, 1173, 1204,
	263, 1170, 1261, 1220, 1276, 356, 260, 1152, 1176, 419,
	1192, 200, 1240, 475, 247, 367, 364, 514, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 1283, 360, 1226,
	0, 485, 390, 0, 0, 0, 1206, 1265, 1214, 1252,
	1201, 1239, 1160, 1225, 1278, 1188, 1235, 1279, 315, 243,
	317, 199, 402, 486, 279, 0, 93, 0, 0, 0,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 1184, 1232, 1273,
	1185, 1234, 258, 313, 265, 257, 511, 1284, 1264, 1149,
	1213, 1272, 0, 0, 224, 1275, 1208, 0, 1237, 0,
	1290, 1144, 1228, 0, 1147, 1151, 1286, 1268, 1179, 268,
	0, 0, 0, 0, 0, 0, 0, 1205, 1215, 1249,
	1253, 1199, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 1224, 0, 0, 0, 1156, 1148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 1159, 0, 1178, 1250, 0, 1142,
	290, 1153, 391, 250, 0, 442, 1257, 1267, 1200, 553,
	1271, 1198, 1197, 1244, 1157, 1263, 1191, 355, 1155, 322,
	195, 220, 0, 1189, 401, 450, 462, 1262, 1174, 1183,
	248, 1181, 460, 415, 531, 228, 277, 447, 421, 458,
	429, 280, 1223, 1242, 459, 362, 516, 439, 528, 554,
	555, 256, 395, 540, 500, 548, 572, 221, 253, 409,
	493, 534, 482, 387, 512, 513, 321, 481, 288, 198,
	359, 560, 219, 468, 361, 237, 226, 518, 537, 282,
	445, 567, 208, 495, 526, 234, 472, 0, 0, 574,
	242, 492, 210, 523, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 520, 521, 249,
	575, 223, 547, 215, 1154, 546, 397, 515, 524, 384,
	373, 214, 522, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 535,
	0, 203, 0, 487, 536, 576, 441, 207, 229, 230,
	232, 1169, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 1258, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 568, 566, 396, 303,
	483, 325, 363, 1247, 1289, 414, 461, 235, 533, 484,
	1164, 1168, 1162, 1229, 1163, 1218, 1219, 1165, 1280, 1281,
	1282, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	1251, 1158, 0, 1166, 1167, 1260, 1269, 1270, 595, 374,
	474, 530, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 509, 304, 211, 212, 213, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 285,
	539, 301, 457, 456, 323, 324, 369, 438, 1222, 194,
	216, 358, 1285, 443, 281, 573, 543, 538, 201, 218,
	1161, 255, 1172, 1180, 0, 1186, 1194, 1195, 1207, 1209,
	1210, 1211, 1212, 1230, 1231, 1233, 1241, 1243, 1246, 1248,
	1255, 1266, 1288, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 293, 294, 433, 434, 306,
	307, 570, 571, 292, 527, 557, 525, 569, 551, 427,
	368, 1221, 1227, 371, 274, 297, 312, 1236, 542, 490,
	222, 455, 283, 246, 1254, 1256, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	1217, 1245, 366, 507, 508, 308, 386, 0, 0, 0,
	1274, 1259, 506, 0, 1202, 1277, 1171, 1190, 1287, 1193,
	1196, 1238, 1150, 1216, 405, 1187, 1143, 1175, 1145, 1182,
	1146, 1173, 1204, 263, 1170, 1261, 1220, 1276, 356, 260,
	1152, 1176, 419, 1192, 200, 1240, 475, 247, 367, 364,
	514, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	1283, 360, 1226, 0, 485, 390, 0, 0, 0, 1206,
	1265, 1214, 1252, 1201, 1239, 1160, 1225, 1278, 1188, 1235,
	1279, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	1184, 1232, 1273, 1185, 1234, 258, 313, 265, 257, 511,
	1284, 1264, 1149, 1213, 1272, 0, 0, 224, 1275, 1208,
	0, 1237, 0, 1290, 1144, 1228, 0, 1147, 1151, 1286,
	1268, 1179, 268, 0, 0, 0, 0, 0, 0, 0,
	1205, 1215, 1249, 1253, 1199, 0, 0, 0, 0, 0,
	0, 0, 1177, 0, 1224, 0, 0, 0, 1156, 1148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 1159, 0, 1178,
	1250, 0, 1142, 290, 1153, 391, 250, 0, 442, 1257,
	1267, 1200, 553, 1271, 1198, 1197, 1244, 1157, 1263, 1191,
	355, 1155, 322, 195, 220, 0, 1189, 401, 450, 462,
	1262, 1174, 1183, 248, 1181, 460, 415, 531, 228, 277,
	447, 421, 458, 429, 280, 1223, 1242, 459, 362, 516,
	439, 528, 554, 555, 256, 395, 540, 500, 548, 572,
	221, 253, 409, 493, 534, 482, 387, 512, 513, 321,
	481, 288, 198, 359, 560, 219, 468, 361, 237, 226,
	518, 537, 282, 445, 567, 208, 495, 526, 234, 472,
	0, 0, 574, 242, 492, 210, 523, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	520, 521, 249, 575, 223, 547, 215, 1154, 546, 397,
	515, 524, 384, 373, 214, 522, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 535, 0, 203, 0, 487, 536, 576, 441,
	207, 229, 230, 232, 1169, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 1258, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 568,
	566, 396, 303, 483, 325, 363, 1247, 1289, 414, 461,
	235, 533, 484, 1164, 1168, 1162, 1229, 1163, 1218, 1219,
	1165, 1280, 1281, 1282, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 1251, 1158, 0, 1166, 1167, 1260, 1269,
	1270, 595, 374, 474, 530, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 509, 304, 211, 212,
	213, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 285, 539, 301, 457, 456, 323, 324, 369,
	438, 1222, 194, 216, 358, 1285, 443, 281, 573, 543,
	538, 201, 218, 1161, 255, 1172, 1180, 0, 1186, 1194,
	1195, 1207, 1209, 1210, 1211, 1212, 1230, 1231, 1233, 1241,
	1243, 1246, 1248, 1255, 1266, 1288, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 293, 294,
	433, 434, 306, 307, 570, 571, 292, 527, 557, 525,
	569, 551, 427, 368, 1221, 1227, 371, 274, 297, 312,
	1236, 542, 490, 222, 455, 283, 246, 1254, 1256, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 1217, 1245, 366, 507, 508, 308, 386,
	0, 0, 0, 1274, 1259, 506, 0, 1202, 1277, 1171,
	1190, 1287, 1193, 1196, 1238, 1150, 1216, 405, 1187, 1143,
	1175, 1145, 1182, 1146, 1173, 1204, 263, 1170, 1261, 1220,
	1276, 356, 260, 1152, 1176, 419, 1192, 200, 1240, 475,
	247, 367, 364, 514, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 1283, 360, 1226, 0, 485, 390, 0,
	0, 0, 1206, 1265, 1214, 1252, 1201, 1239, 1160, 1225,
	1278, 1188, 1235, 1279, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 1184, 1232, 1273, 1185, 1234, 258, 313,
	265, 257, 511, 1284, 1264, 1149, 1213, 1272, 0, 0,
	224, 1275, 1208, 0, 1237, 0, 1290, 1144, 1228, 0,
	1147, 1151, 1286, 1268, 1179, 268, 0, 0, 0, 0,
	0, 0, 0, 1205, 1215, 1249, 1253, 1199, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 1224, 0, 0,
	0, 1156, 1148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1203, 0, 0, 0, 0,
	1159, 0, 1178, 1250, 0, 1142, 290, 1153, 391, 250,
	0, 442, 1257, 1267, 1200, 553, 1271, 1198, 1197, 1244,
	1157, 1263, 1191, 355, 1155, 322, 195, 220, 0, 1189,
	401, 450, 462, 1262, 1174, 1183, 248, 1181, 460, 415,
	531, 228, 277, 447, 421, 458, 429, 280, 1223, 1242,
	459, 362, 516, 439, 528, 554, 555, 256, 395, 540,
	500, 548, 572, 221, 253, 409, 493, 534, 482, 387,
	512, 513, 321, 481, 288, 198, 359, 560, 219, 468,
	361, 237, 226, 518, 537, 282, 445, 567, 208, 495,
	526, 234, 472, 0, 0, 574, 242, 492, 210, 523,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 520, 521, 249, 575, 223, 547, 215,
	1154, 546, 397, 515, 524, 384, 373, 214, 522, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 535, 0, 203, 0, 487,
	536, 576, 441, 207, 229, 230, 232, 1169, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	1258, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 568, 566, 396, 303, 483, 325, 363, 1247,
	1289, 414, 461, 235, 533, 484, 1164, 1168, 1162, 1229,
	1163, 1218, 1219, 1165, 1280, 1281, 1282, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 1251, 1158, 0, 1166,
	1167, 1260, 1269, 1270, 595, 374, 474, 530, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 509,
	304, 211, 212, 213, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 285, 539, 301, 457, 456,
	323, 324, 369, 438, 1222, 194, 216, 358, 1285, 443,
	281, 573, 543, 538, 201, 218, 1161, 255, 1172, 1180,
	0, 1186, 1194, 1195, 1207, 1209, 1210, 1211, 1212, 1230,
	1231, 1233, 1241, 1243, 1246, 1248, 1255, 1266, 1288, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 293, 294, 433, 434, 306, 307, 570, 571, 292,
	527, 557, 525, 569, 551, 427, 368, 1221, 1227, 371,
	274, 297, 312, 1236, 542, 490, 222, 455, 283, 246,
	1254, 1256, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 1217, 1245, 366, 507,
	508, 308, 386, 0, 0, 0, 1274, 1259, 506, 0,
	1202, 1277, 1171, 1190, 1287, 1193, 1196, 1238, 1150, 1216,
	405, 1187, 1143, 1175, 1145, 1182, 1146, 1173, 1204, 263,
	1170, 1261, 1220, 1276, 356, 260, 1152, 1176, 419, 1192,
	200, 1240, 475, 247, 367, 364, 514, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 1283, 360, 1226, 0,
	485, 390, 0, 0, 0, 1206, 1265, 1214, 1252, 1201,
	1239, 1160, 1225, 1278, 1188, 1235, 1279, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 1184, 1232, 1273, 1185,
	1234, 258, 313, 265, 257, 511, 1284, 1264, 1149, 1213,
	1272, 0, 0, 224, 1275, 1208, 0, 1237, 0, 1290,
	1144, 1228, 0, 1147, 1151, 1286, 1268, 1179, 268, 0,
	0, 0, 0, 0, 0, 0, 1205, 1215, 1249, 1253,
	1199, 0, 0, 0, 0, 0, 0, 0, 1177, 0,
	1224, 0, 0, 0, 1156, 1148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 1159, 0, 1178, 1250, 0, 1142, 290,
	1153, 391, 250, 0, 442, 1257, 1267, 1200, 553, 1271,
	1198, 1197, 1244, 1157, 1263, 1191, 355, 1155, 322, 195,
	220, 0, 1189, 401, 450, 462, 1262, 1174, 1183, 248,
	1181, 460, 415, 531, 228, 277, 447, 421, 458, 429,
	280, 1223, 1242, 459, 362, 516, 439, 528, 554, 555,
	256, 395, 540, 500, 548, 572, 221, 253, 409, 493,
	534, 482, 387, 512, 513, 321, 481, 288, 198, 359,
	560, 219, 468, 361, 237, 226, 518, 537, 282, 445,
	567, 208, 495, 526, 234, 472, 0, 0, 574, 242,
	492, 210, 523, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 520, 521, 249, 575,
	223, 547, 215, 1154, 546, 397, 515, 524, 384, 373,
	214, 522, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 535, 0,
	203, 0, 487, 536, 576, 441, 207, 229, 230, 232,
	1169, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 1258, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 568, 566, 396, 303, 483,
	325, 363, 1247, 1289, 414, 461, 235, 533, 484, 1164,
	1168, 1162, 1229, 1163, 1218, 1219, 1165, 1280, 1281, 1282,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 1251,
	1158, 0, 1166, 1167, 1260, 1269, 1270, 595, 374, 474,
	530, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 509, 304, 211, 212, 213, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 285, 539,
	301, 457, 456, 323, 324, 369, 438, 1222, 194, 216,
	358, 1285, 443, 281, 573, 543, 538, 201, 218, 1161,
	255, 1172, 1180, 0, 1186, 1194, 1195, 1207, 1209, 1210,
	1211, 1212, 1230, 1231, 1233, 1241, 1243, 1246, 1248, 1255,
	1266, 1288, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 293, 294, 433, 434, 306, 307,
	570, 571, 292, 527, 557, 525, 569, 551, 427, 368,
	1221, 1227, 371, 274, 297, 312, 1236, 542, 490, 222,
	455, 283, 246, 1254, 1256, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 1217,
	1245, 366, 507, 508, 308, 386, 0, 0, 0, 0,
	0, 506, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 683, 0,
	0, 0, 263, 688, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 514,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 695,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	691, 692, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 93, 0,
	0, 839, 823, 789, 790, 827, 840, 841, 842, 843,
	828, 0, 233, 829, 830, 240, 831, 0, 788, 723,
	725, 724, 742, 743, 744, 745, 746, 747, 748, 721,
	836, 844, 845, 0, 258, 313, 265, 257, 511, 0,
	0, 1976, 1977, 1978, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 665, 680, 0, 694, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 677, 678, 0,
	0, 0, 0, 783, 0, 679, 0, 0, 687, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 782, 0,
	0, 553, 0, 0, 780, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 833, 0, 460, 415, 531, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 516, 439,
	528, 554, 555, 256, 395, 540, 500, 548, 572, 221,
	253, 409, 493, 534, 482, 387, 512, 513, 321, 481,
	288, 198, 359, 560, 219, 468, 361, 237, 226, 518,
	537, 282, 445, 567, 208, 495, 526, 234, 472, 0,
	0, 574, 242, 492, 210, 523, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 834,
	835, 249, 575, 729, 547, 215, 0, 546, 397, 515,
	524, 384, 373, 214, 522, 382, 372, 326, 737, 738,
	273, 299, 768, 767, 766, 298, 300, 764, 765, 763,
	202, 535, 0, 203, 0, 487, 536, 576, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 568, 566,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	533, 484, 793, 781, 700, 797, 702, 794, 795, 697,
	698, 701, 796, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 784, 686, 685, 0, 693, 0, 719, 720,
	722, 726, 727, 728, 739, 740, 741, 749, 751, 752,
	750, 753, 754, 755, 758, 759, 760, 761, 756, 757,
	762, 703, 707, 704, 705, 706, 718, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 807, 808, 809,
	810, 811, 812, 732, 736, 735, 733, 734, 730, 731,
	684, 194, 216, 358, 0, 443, 281, 573, 543, 538,
	201, 218, 798, 255, 799, 0, 0, 803, 0, 0,
	0, 805, 804, 0, 806, 772, 771, 0, 0, 800,
	801, 0, 802, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 813, 814, 815,
	816, 817, 818, 819, 820, 292, 527, 557, 525, 569,
	551, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	542, 490, 222, 455, 283, 246, 838, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 507, 508, 308, 506, 0,
	696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 683, 0, 0, 0, 263,
	688, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 514, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 695, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 691, 692, 0,
	0, 0, 0, 0, 0, 2132, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 93, 0, 0, 839, 823,
	789, 790, 827, 840, 841, 842, 843, 828, 0, 233,
	829, 830, 240, 831, 0, 788, 723, 725, 724, 742,
	743, 744, 745, 746, 747, 748, 721, 836, 844, 845,
	2133, 258, 313, 265, 257, 511, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 665, 680, 0, 694, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 677, 678, 0, 0, 0, 0,
	783, 0, 679, 0, 0, 687, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 782, 0, 0, 553, 0,
	0, 780, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 833,
	0, 460, 415, 531, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 516, 439, 528, 554, 555,
	256, 395, 540, 500, 548, 572, 221, 253, 409, 493,
	534, 482, 387, 512, 513, 321, 481, 288, 198, 359,
	560, 219, 468, 361, 237, 226, 518, 537, 282, 445,
	567, 208, 495, 526, 234, 472, 0, 0, 574, 242,
	492, 210, 523, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 834, 835, 249, 575,
	729, 547, 215, 0, 546, 397, 515, 524, 384, 373,
	214, 522, 382, 372, 326, 737, 738, 273, 299, 768,
	767, 766, 298, 300, 764, 765, 763, 202, 535, 0,
	203, 0, 487, 536, 576, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 568, 566, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 533, 484, 793,
	781, 700, 797, 702, 794, 795, 697, 698, 701, 796,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 784,
	686, 685, 0, 693, 0, 719, 720, 722, 726, 727,
	728, 739, 740, 741, 749, 751, 752, 750, 753, 754,
	755, 758, 759, 760, 761, 756, 757, 762, 703, 707,
	704, 705, 706, 718, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 807, 808, 809, 810, 811, 812,
	732, 736, 735, 733, 734, 730, 731, 684, 194, 216,
	358, 0, 443, 281, 573, 543, 538, 201, 218, 798,
	255, 799, 0, 0, 803, 0, 0, 0, 805, 804,
	0, 806, 772, 771, 0, 0, 800, 801, 0, 802,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 813, 814, 815, 816, 817, 818,
	819, 820, 292, 527, 557, 525, 569, 551, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 542, 490, 222,
	455, 283, 246, 838, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 0,
	386, 366, 507, 508, 308, 84, 506, 0, 696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 683, 0, 0, 0, 263, 688, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 514, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 695, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 691, 692, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 93, 0, 0, 839, 823, 789, 790,
	827, 840, 841, 842, 843, 828, 0, 233, 829, 830,
	240, 831, 0, 788, 723, 725, 724, 742, 743, 744,
	745, 746, 747, 748, 721, 836, 844, 845, 0, 258,
	313, 265, 257, 511, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 665,
	680, 0, 694, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 677, 678, 0, 0, 0, 0, 783, 0,
	679, 0, 0, 687, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 782, 0, 0, 553, 0, 0, 780,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 833, 0, 460,
	415, 531, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 516, 439, 528, 554, 555, 256, 395,
	540, 500, 548, 572, 221, 253, 409, 493, 534, 482,
	387, 512, 513, 321, 481, 288, 198, 359, 560, 219,
	468, 361, 237, 226, 518, 537, 282, 445, 567, 208,
	495, 526, 234, 472, 0, 0, 574, 242, 492, 210,
	523, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 834, 835, 249, 575, 729, 547,
	215, 0, 546, 397, 515, 524, 384, 373, 214, 522,
	382, 372, 326, 737, 738, 273, 299, 768, 767, 766,
	298, 300, 764, 765, 763, 202, 535, 0, 203, 0,
	487, 536, 576, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 568, 566, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 533, 484, 793, 781, 700,
	797, 702, 794, 795, 697, 698, 701, 796, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 784, 686, 685,
	0, 693, 0, 719, 720, 722, 726, 727, 728, 739,
	740, 741, 749, 751, 752, 750, 753, 754, 755, 758,
	759, 760, 761, 756, 757, 762, 703, 707, 704, 705,
	706, 718, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 807, 808, 809, 810, 811, 812, 732, 736,
	735, 733, 734, 730, 731, 684, 194, 216, 358, 92,
	443, 281, 573, 543, 538, 201, 218, 798, 255, 799,
	0, 0, 803, 0, 0, 0, 805, 804, 0, 806,
	772, 771, 0, 0, 800, 801, 0, 802, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 813, 814, 815, 816, 817, 818, 819, 820,
	292, 527, 557, 525, 569, 551, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 542, 490, 222, 455, 283,
	246, 838, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	507, 508, 308, 506, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	683, 0, 0, 0, 263, 688, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 514, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 695, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 691, 692, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	93, 0, 0, 839, 823, 789, 790, 827, 840, 841,
	842, 843, 828, 0, 233, 829, 830, 240, 831, 0,
	788, 723, 725, 724, 742, 743, 744, 745, 746, 747,
	748, 721, 836, 844, 845, 0, 258, 313, 265, 257,
	511, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 665, 680, 0, 694,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 677,
	678, 0, 0, 0, 0, 783, 0, 679, 0, 0,
	687, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	782, 0, 0, 553, 0, 0, 780, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 833, 0, 460, 415, 531, 228,
	277, 447, 421, 458, 429, 280, 3463, 0, 459, 362,
	516, 439, 528, 554, 555, 256, 395, 540, 500, 548,
	572, 221, 253, 409, 493, 534, 482, 387, 512, 513,
	321, 481, 288, 198, 359, 560, 219, 468, 361, 237,
	226, 518, 537, 282, 445, 567, 208, 495, 526, 234,
	472, 0, 0, 574, 242, 492, 210, 523, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 834, 835, 249, 575, 729, 547, 215, 0, 546,
	397, 515, 524, 384, 373, 214, 522, 382, 372, 326,
	737, 738, 273, 299, 768, 767, 766, 298, 300, 764,
	765, 763, 202, 535, 0, 203, 0, 487, 536, 576,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	568, 566, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 533, 484, 793, 781, 700, 797, 702, 794,
	795, 697, 698, 701, 796, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 784, 686, 685, 0, 693, 0,
	719, 720, 722, 726, 727, 728, 739, 740, 741, 749,
	751, 752, 750, 753, 754, 755, 758, 759, 760, 761,
	756, 757, 762, 703, 707, 704, 705, 706, 718, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 807,
	808, 809, 810, 811, 812, 732, 736, 735, 733, 734,
	730, 731, 684, 194, 216, 358, 0, 443, 281, 573,
	543, 538, 201, 218, 798, 255, 799, 0, 0, 803,
	0, 0, 0, 805, 804, 0, 806, 772, 771, 0,
	0, 800, 801, 0, 802, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 813,
	814, 815, 816, 817, 818, 819, 820, 292, 527, 557,
	525, 569, 551, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 542, 490, 222, 455, 283, 246, 838, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 507, 508, 308,
	506, 0, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 683, 0, 0,
	0, 263, 688, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 514, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 695, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 691,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 93, 0, 1537,
	839, 823, 789, 790, 827, 840, 841, 842, 843, 828,
	0, 233, 829, 830, 240, 831, 0, 788, 723, 725,
	724, 742, 743, 744, 745, 746, 747, 748, 721, 836,
	844, 845, 0, 258, 313, 265, 257, 511, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 665, 680, 0, 694, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 677, 678, 0, 0,
	0, 0, 783, 0, 679, 0, 0, 687, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 782, 0, 0,
	553, 0, 0, 780, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 833, 0, 460, 415, 531, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 516, 439, 528,
	554, 555, 256, 395, 540, 500, 548, 572, 221, 253,
	409, 493, 534, 482, 387, 512, 513, 321, 481, 288,
	198, 359, 560, 219, 468, 361, 237, 226, 518, 537,
	282, 445, 567, 208, 495, 526, 234, 472, 0, 0,
	574, 242, 492, 210, 523, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 834, 835,
	249, 575, 729, 547, 215, 0, 546, 397, 515, 524,
	384, 373, 214, 522, 382, 372, 326, 737, 738, 273,
	299, 768, 767, 766, 298, 300, 764, 765, 763, 202,
	535, 0, 203, 0, 487, 536, 576, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 568, 566, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 533,
	484, 793, 781, 700, 797, 702, 794, 795, 697, 698,
	701, 796, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 784, 686, 685, 0, 693, 0, 719, 720, 722,
	726, 727, 728, 739, 740, 741, 749, 751, 752, 750,
	753, 754, 755, 758, 759, 760, 761, 756, 757, 762,
	703, 707, 704, 705, 706, 718, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 807, 808, 809, 810,
	811, 812, 732, 736, 735, 733, 734, 730, 731, 684,
	194, 216, 358, 0, 443, 281, 573, 543, 538, 201,
	218, 798, 255, 799, 0, 0, 803, 0, 0, 0,
	805, 804, 0, 806, 772, 771, 0, 0, 800, 801,
	0, 802, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 813, 814, 815, 816,
	817, 818, 819, 820, 292, 527, 557, 525, 569, 551,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 542,
	490, 222, 455, 283, 246, 838, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 507, 508, 308, 506, 0, 696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 683, 0, 0, 0, 263, 688,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 514, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 695, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 691, 692, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 93, 0, 0, 839, 823, 789,
	790, 827, 840, 841, 842, 843, 828, 0, 233, 829,
	830, 240, 831, 0, 788, 723, 725, 724, 742, 743,
	744, 745, 746, 747, 748, 721, 836, 844, 845, 0,
	258, 313, 265, 257, 511, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	665, 680, 0, 694, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 677, 678, 928, 0, 0, 0, 783,
	0, 679, 0, 0, 687, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 782, 0, 0, 553, 0, 0,
	780, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 833, 0,
	460, 415, 531, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 516, 439, 528, 554, 555, 256,
	395, 540, 500, 548, 572, 221, 253, 409, 493, 534,
	482, 387, 512, 513, 321, 481, 288, 198, 359, 560,
	219, 468, 361, 237, 226, 518, 537, 282, 445, 567,
	208, 495, 526, 234, 472, 0, 0, 574, 242, 492,
	210, 523, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 834, 835, 249, 575, 729,
	547, 215, 0, 546, 397, 515, 524, 384, 373, 214,
	522, 382, 372, 326, 737, 738, 273, 299, 768, 767,
	766, 298, 300, 764, 765, 763, 202, 535, 0, 203,
	0, 487, 536, 576, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 568, 566, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 533, 484, 793, 781,
	700, 797, 702, 794, 795, 697, 698, 701, 796, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 784, 686,
	685, 0, 693, 0, 719, 720, 722, 726, 727, 728,
	739, 740, 741, 749, 751, 752, 750, 753, 754, 755,
	758, 759, 760, 761, 756, 757, 762, 703, 707, 704,
	705, 706, 718, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 807, 808, 809, 810, 811, 812, 732,
	736, 735, 733, 734, 730, 731, 684, 194, 216, 358,
	0, 443, 281, 573, 543, 538, 201, 218, 798, 255,
	799, 0, 0, 803, 0, 0, 0, 805, 804, 0,
	806, 772, 771, 0, 0, 800, 801, 0, 802, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 813, 814, 815, 816, 817, 818, 819,
	820, 292, 527, 557, 525, 569, 551, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 542, 490, 222, 455,
	283, 246, 838, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 507, 508, 308, 506, 0, 696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 683, 0, 0, 0, 263, 688, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 514, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 695, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 691, 692, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 93, 0, 0, 839, 823, 789, 790, 827, 840,
	841, 842, 843, 828, 0, 233, 829, 830, 240, 831,
	0, 788, 723, 725, 724, 742, 743, 744, 745, 746,
	747, 748, 721, 836, 844, 845, 0, 258, 313, 265,
	257, 511, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 665, 680, 0,
	694, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	677, 678, 0, 0, 0, 0, 783, 0, 679, 0,
	0, 687, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 782, 0, 0, 553, 0, 0, 780, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 833, 0, 460, 415, 531,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 516, 439, 528, 554, 555, 256, 395, 540, 500,
	548, 572, 221, 253, 409, 493, 534, 482, 387, 512,
	513, 321, 481, 288, 198, 359, 560, 219, 468, 361,
	237, 226, 518, 537, 282, 445, 567, 208, 495, 526,
	234, 472, 0, 0, 574, 242, 492, 210, 523, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 834, 835, 249, 575, 729, 547, 215, 0,
	546, 397, 515, 524, 384, 373, 214, 522, 382, 372,
	326, 737, 738, 273, 299, 768, 767, 766, 298, 300,
	764, 765, 763, 202, 535, 0, 203, 0, 487, 536,
	576, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 568, 566, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 533, 484, 793, 781, 700, 797, 702,
	794, 795, 697, 698, 701, 796, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 784, 686, 685, 0, 693,
	0, 719, 720, 722, 726, 727, 728, 739, 740, 741,
	749, 751, 752, 750, 753, 754, 755, 758, 759, 760,
	761, 756, 757, 762, 703, 707, 704, 705, 706, 718,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	807, 808, 809, 810, 811, 812, 732, 736, 735, 733,
	734, 730, 731, 684, 194, 216, 358, 0, 443, 281,
	573, 543, 538, 201, 218, 798, 255, 799, 0, 0,
	803, 0, 0, 0, 805, 804, 0, 806, 772, 771,
	0, 0, 800, 801, 0, 802, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	813, 814, 815, 816, 817, 818, 819, 820, 292, 527,
	557, 525, 569, 551, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 542, 490, 222, 455, 283, 246, 838,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 507, 508,
	308, 506, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 683, 0,
	0, 0, 263, 688, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 514,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 695,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	691, 692, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 93, 0,
	0, 839, 823, 789, 790, 827, 840, 841, 842, 843,
	828, 0, 233, 829, 830, 240, 831, 0, 788, 723,
	725, 724, 742, 743, 744, 745, 746, 747, 748, 721,
	836, 844, 845, 0, 258, 313, 265, 257, 511, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 694, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 677, 678, 0,
	0, 0, 0, 783, 0, 679, 0, 0, 687, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 782, 0,
	0, 553, 0, 0, 780, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 833, 0, 460, 415, 531, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 516, 439,
	528, 554, 555, 256, 395, 540, 500, 548, 572, 221,
	253, 409, 493, 534, 482, 387, 512, 513, 321, 481,
	288, 198, 359, 560, 219, 468, 361, 237, 226, 518,
	537, 282, 445, 567, 208, 495, 526, 234, 472, 0,
	0, 574, 242, 492, 210, 523, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 834,
	835, 249, 575, 729, 547, 215, 0, 546, 397, 515,
	524, 384, 373, 214, 522, 382, 372, 326, 737, 738,
	273, 299, 768, 767, 766, 298, 300, 764, 765, 763,
	202, 535, 0, 203, 0, 487, 536, 576, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 568, 566,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	533, 484, 793, 781, 700, 797, 702, 794, 795, 697,
	698, 701, 796, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 784, 686, 685, 0, 693, 0, 719, 720,
	722, 726, 727, 728, 739, 740, 741, 749, 751, 752,
	750, 753, 754, 755, 758, 759, 760, 761, 756, 757,
	762, 703, 707, 704, 705, 706, 718, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 807, 808, 809,
	810, 811, 812, 732, 736, 735, 733, 734, 730, 731,
	684, 194, 216, 358, 0, 443, 281, 573, 543, 538,
	201, 218, 798, 255, 799, 0, 0, 803, 0, 0,
	0, 805, 804, 0, 806, 772, 771, 0, 0, 800,
	801, 0, 802, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 813, 814, 815,
	816, 817, 818, 819, 820, 292, 527, 557, 525, 569,
	551, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	542, 490, 222, 455, 283, 246, 838, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 507, 508, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 514, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 511, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1355,
	1357, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 531, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 516, 439, 528, 554, 555,
	256, 395, 540, 500, 548, 572, 221, 253, 409, 493,
	534, 482, 387, 512, 513, 321, 481, 288, 198, 359,
	560, 219, 468, 361, 237, 226, 518, 537, 282, 445,
	567, 208, 495, 526, 234, 472, 0, 0, 574, 242,
	492, 210, 523, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 520, 521, 249, 575,
	223, 547, 215, 0, 546, 397, 515, 524, 384, 373,
	214, 522, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 535, 0,
	203, 0, 487, 536, 576, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 568, 566, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 374, 474,
	530, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 509, 304, 211, 212, 213, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 285, 539,
	301, 457, 456, 323, 324, 369, 438, 0, 194, 216,
	358, 0, 443, 281, 573, 543, 538, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 293, 294, 433, 434, 306, 307,
	570, 571, 292, 527, 557, 525, 569, 551, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 542, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 507, 508, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 514, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 511, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 999, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 998, 553, 0, 0, 0, 0,
	0, 995, 996, 355, 956, 322, 195, 220, 989, 993,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	531, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 516, 439, 528, 554, 555, 256, 395, 540,
	500, 548, 572, 221, 253, 409, 493, 534, 482, 387,
	512, 513, 321, 481, 288, 198, 359, 560, 219, 468,
	361, 237, 226, 518, 537, 282, 445, 567, 208, 495,
	526, 234, 472, 0, 0, 574, 242, 492, 210, 523,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 520, 521, 249, 575, 223, 547, 215,
	0, 546, 397, 515, 524, 384, 373, 214, 522, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 535, 0, 203, 0, 487,
	536, 576, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 568, 566, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 374, 474, 530, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 509,
	304, 211, 212, 213, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 285, 539, 301, 457, 456,
	323, 324, 369, 438, 0, 194, 216, 358, 0, 443,
	281, 573, 543, 538, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 293, 294, 433, 434, 306, 307, 570, 571, 292,
	527, 557, 525, 569, 551, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 542, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 507,
	508, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	514, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 1500, 823, 0, 0, 1497, 0, 0, 0,
	0, 1495, 0, 233, 1496, 1494, 240, 1499, 0, 788,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 511,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 531, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 516,
	439, 528, 554, 555, 256, 395, 540, 500, 548, 572,
	221, 253, 409, 493, 534, 482, 387, 512, 513, 321,
	481, 288, 198, 359, 560, 219, 468, 361, 237, 226,
	518, 537, 282, 445, 567, 208, 495, 526, 234, 472,
	0, 0, 574, 242, 492, 210, 523, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	520, 521, 249, 575, 223, 547, 215, 0, 546, 397,
	515, 524, 384, 373, 214, 522, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 535, 0, 203, 0, 487, 536, 576, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 568,
	566, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 374, 474, 530, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 509, 304, 211, 212,
	213, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 285, 539, 301, 457, 456, 323, 324, 369,
	438, 0, 194, 216, 358, 0, 443, 281, 573, 543,
	538, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 293, 294,
	433, 434, 306, 307, 570, 571, 292, 527, 557, 525,
	569, 551, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 542, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 0, 386, 366, 507, 508, 308, 84,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 514, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 93, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 511, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 531, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 516, 439, 528,
	554, 555, 256, 395, 540, 500, 548, 572, 221, 253,
	409, 493, 534, 482, 387, 512, 513, 321, 481, 288,
	198, 359, 560, 219, 468, 361, 237, 226, 518, 537,
	282, 445, 567, 208, 495, 526, 234, 472, 0, 0,
	574, 242, 492, 210, 523, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 520, 521,
	249, 575, 223, 547, 215, 0, 546, 397, 515, 524,
	384, 373, 214, 522, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	535, 0, 203, 0, 487, 536, 576, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 568, 566, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	374, 474, 530, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 509, 304, 211, 212, 213, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	285, 539, 301, 457, 456, 323, 324, 369, 438, 0,
	194, 216, 358, 92, 443, 281, 573, 543, 538, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 2119,
	0, 0, 2118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 293, 294, 433, 434,
	306, 307, 570, 571, 292, 527, 557, 525, 569, 551,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 542,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 1556, 0, 366, 507, 508, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 1558, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 514, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 1560, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 511, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 1328, 0, 1329, 1330,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 531, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 516, 439, 528, 554, 555, 256,
	395, 540, 500, 548, 572, 221, 253, 409, 493, 534,
	482, 387, 512, 513, 321, 481, 288, 198, 359, 560,
	219, 468, 361, 237, 226, 518, 537, 282, 445, 567,
	208, 495, 526, 234, 472, 0, 0, 574, 242, 492,
	210, 523, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 520, 521, 249, 575, 223,
	547, 215, 0, 546, 397, 515, 524, 384, 373, 214,
	522, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 535, 0, 203,
	0, 487, 536, 576, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 568, 566, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 374, 474, 530,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 509, 304, 211, 212, 213, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 285, 539, 301,
	457, 456, 323, 324, 369, 438, 0, 194, 216, 358,
	0, 443, 281, 573, 543, 538, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 293, 294, 433, 434, 306, 307, 570,
	571, 292, 527, 557, 525, 569, 551, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 542, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 0, 386,
	366, 507, 508, 308, 84, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 514, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 93, 0, 1537, 0, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 511, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	531, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 516, 439, 528, 554, 555, 256, 395, 540,
	500, 548, 572, 221, 253, 409, 493, 534, 482, 387,
	512, 513, 321, 481, 288, 198, 359, 560, 219, 468,
	361, 237, 226, 518, 537, 282, 445, 567, 208, 495,
	526, 234, 472, 0, 0, 574, 242, 492, 210, 523,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 520, 521, 249, 575, 223, 547, 215,
	0, 546, 397, 515, 524, 384, 373, 214, 522, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 535, 0, 203, 0, 487,
	536, 576, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 568, 566, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 374, 474, 530, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 509,
	304, 211, 212, 213, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 285, 539, 301, 457, 456,
	323, 324, 369, 438, 0, 194, 216, 358, 92, 443,
	281, 573, 543, 538, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 293, 294, 433, 434, 306, 307, 570, 571, 292,
	527, 557, 525, 569, 551, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 542, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 507,
	508, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	514, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 93,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 511,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 531, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 516,
	439, 528, 554, 555, 256, 395, 540, 500, 548, 572,
	221, 253, 409, 493, 534, 482, 387, 512, 513, 321,
	481, 288, 198, 359, 560, 219, 468, 361, 237, 226,
	518, 537, 282, 445, 567, 208, 495, 526, 234, 472,
	0, 0, 574, 242, 492, 210, 523, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	520, 521, 249, 575, 223, 547, 215, 0, 546, 397,
	515, 524, 384, 373, 214, 522, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 535, 0, 203, 0, 487, 536, 576, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 568,
	566, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 374, 474, 530, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 509, 304, 211, 212,
	213, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 285, 539, 301, 457, 456, 323, 324, 369,
	438, 0, 194, 216, 358, 0, 443, 281, 573, 543,
	538, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 293, 294,
	433, 434, 306, 307, 570, 571, 292, 527, 557, 525,
	569, 551, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 542, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 507, 508, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 2069, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 514, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 1739,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 511, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 531, 228, 277, 447, 421, 458,
	429, 280, 0, 2067, 459, 362, 516, 439, 528, 554,
	555, 256, 395, 540, 500, 548, 572, 221, 253, 409,
	493, 534, 482, 387, 512, 513, 321, 481, 288, 198,
	359, 560, 219, 468, 361, 237, 226, 518, 537, 282,
	445, 567, 208, 495, 526, 234, 472, 0, 0, 574,
	242, 492, 210, 523, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 520, 521, 249,
	575, 223, 547, 215, 0, 546, 397, 515, 524, 384,
	373, 214, 522, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 535,
	0, 203, 0, 487, 536, 576, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 568, 566, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 374,
	474, 530, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 509, 304, 211, 212, 213, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 285,
	539, 301, 457, 456, 323, 324, 369, 438, 0, 194,
	216, 358, 0, 443, 281, 573, 543, 538, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 293, 294, 433, 434, 306,
	307, 570, 571, 292, 527, 557, 525, 569, 551, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 542, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 507, 508, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 514, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 511, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 355, 956, 322, 195, 220, 954,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 531, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 516, 439, 528, 554, 555, 256, 395,
	540, 500, 548, 572, 221, 253, 409, 493, 534, 482,
	387, 512, 513, 321, 481, 288, 198, 359, 560, 219,
	468, 361, 237, 226, 518, 537, 282, 445, 567, 208,
	495, 526, 234, 472, 0, 0, 574, 242, 492, 210,
	523, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 520, 521, 249, 575, 223, 547,
	215, 0, 546, 397, 515, 524, 384, 373, 214, 522,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 535, 0, 203, 0,
	487, 536, 576, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 568, 566, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 374, 474, 530, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	509, 304, 211, 212, 213, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 285, 539, 301, 457,
	456, 323, 324, 369, 438, 0, 194, 216, 358, 0,
	443, 281, 573, 543, 538, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 293, 294, 433, 434, 306, 307, 570, 571,
	292, 527, 557, 525, 569, 551, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 542, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	507, 508, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 2069,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 514, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 1739, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	511, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 531, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	516, 439, 528, 554, 555, 256, 395, 540, 500, 548,
	572, 221, 253, 409, 493, 534, 482, 387, 512, 513,
	321, 481, 288, 198, 359, 560, 219, 468, 361, 237,
	226, 518, 537, 282, 445, 567, 208, 495, 526, 234,
	472, 0, 0, 574, 242, 492, 210, 523, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 520, 521, 249, 575, 223, 547, 215, 0, 546,
	397, 515, 524, 384, 373, 214, 522, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 535, 0, 203, 0, 487, 536, 576,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	568, 566, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 374, 474, 530, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 509, 304, 211,
	212, 213, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 285, 539, 301, 457, 456, 323, 324,
	369, 438, 0, 194, 216, 358, 0, 443, 281, 573,
	543, 538, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 293,
	294, 433, 434, 306, 307, 570, 571, 292, 527, 557,
	525, 569, 551, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 542, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 507, 508, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 514, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 1537,
	0, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 511, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	553, 0, 0, 0, 3373, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 531, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 516, 439, 528,
	554, 555, 256, 395, 540, 500, 548, 572, 221, 253,
	409, 493, 534, 482, 387, 512, 513, 321, 481, 288,
	198, 359, 560, 219, 468, 361, 237, 226, 518, 537,
	282, 445, 567, 208, 495, 526, 234, 472, 0, 0,
	574, 242, 492, 210, 523, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 520, 521,
	249, 575, 223, 547, 215, 0, 546, 397, 515, 524,
	384, 373, 214, 522, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	535, 0, 203, 0, 487, 536, 576, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 568, 566, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	374, 474, 530, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 509, 304, 211, 212, 213, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	285, 539, 301, 457, 456, 323, 324, 369, 438, 0,
	194, 216, 358, 0, 443, 281, 573, 543, 538, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 293, 294, 433, 434,
	306, 307, 570, 571, 292, 527, 557, 525, 569, 551,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 542,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 507, 508, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 514, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 1896, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 511, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1897, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 531, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 516, 439, 528, 554, 555, 256,
	395, 540, 500, 548, 572, 221, 253, 409, 493, 534,
	482, 387, 512, 513, 321, 481, 288, 198, 359, 560,
	219, 468, 361, 237, 226, 518, 537, 282, 445, 567,
	208, 495, 526, 234, 472, 0, 0, 574, 242, 492,
	210, 523, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 520, 521, 249, 575, 223,
	547, 215, 0, 546, 397, 515, 524, 384, 373, 214,
	522, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 535, 0, 203,
	0, 487, 536, 576, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 568, 566, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 374, 474, 530,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 509, 304, 211, 212, 213, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 285, 539, 301,
	457, 456, 323, 324, 369, 438, 0, 194, 216, 358,
	0, 443, 281, 573, 543, 538, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 293, 294, 433, 434, 306, 307, 570,
	571, 292, 527, 557, 525, 569, 551, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 542, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 507, 508, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 514, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 2484, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 511, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 553, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 531,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 516, 439, 528, 554, 555, 256, 395, 540, 500,
	548, 572, 221, 253, 409, 493, 534, 482, 387, 512,
	513, 321, 481, 288, 198, 359, 560, 219, 468, 361,
	237, 226, 518, 537, 282, 445, 567, 208, 495, 526,
	234, 472, 0, 0, 574, 242, 492, 210, 523, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 520, 521, 249, 575, 223, 547, 215, 0,
	546, 397, 515, 524, 384, 373, 214, 522, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 535, 0, 203, 0, 487, 536,
	576, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 568, 566, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 533, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 374, 474, 530, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 509, 304,
	211, 212, 213, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 285, 539, 301, 457, 456, 323,
	324, 369, 438, 0, 194, 216, 358, 0, 443, 281,
	573, 543, 538, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	293, 294, 433, 434, 306, 307, 570, 571, 292, 527,
	557, 525, 569, 551, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 542, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 507, 508,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 514,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 2469, 0, 0,
	0, 0, 233, 0, 0, 240, 2470, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 511, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 531, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 516, 439,
	528, 554, 555, 256, 395, 540, 500, 548, 572, 221,
	253, 409, 493, 534, 482, 387, 512, 513, 321, 481,
	288, 198, 359, 560, 219, 468, 361, 237, 226, 518,
	537, 282, 445, 567, 208, 495, 526, 234, 472, 0,
	0, 574, 242, 492, 210, 523, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 520,
	521, 249, 575, 223, 547, 215, 0, 546, 397, 515,
	524, 384, 373, 214, 522, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 535, 0, 203, 0, 487, 536, 576, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 568, 566,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 374, 474, 530, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 509, 304, 211, 212, 213,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 285, 539, 301, 457, 456, 323, 324, 369, 438,
	0, 194, 216, 358, 0, 443, 281, 573, 543, 538,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 293, 294, 433,
	434, 306, 307, 570, 571, 292, 527, 557, 525, 569,
	551, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	542, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 507, 508, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	1579, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 514, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 1578, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 511, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 531, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 516, 439, 528, 554, 555,
	256, 395, 540, 500, 548, 572, 221, 253, 409, 493,
	534, 482, 387, 512, 513, 321, 481, 288, 198, 359,
	560, 219, 468, 361, 237, 226, 518, 537, 282, 445,
	567, 208, 495, 526, 234, 472, 0, 0, 574, 242,
	492, 210, 523, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 520, 521, 249, 575,
	223, 547, 215, 0, 546, 397, 515, 524, 384, 373,
	214, 522, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 535, 0,
	203, 0, 487, 536, 576, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 568, 566, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 374, 474,
	530, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 509, 304, 211, 212, 213, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 285, 539,
	301, 457, 456, 323, 324, 369, 438, 0, 194, 216,
	358, 0, 443, 281, 573, 543, 538, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 293, 294, 433, 434, 306, 307,
	570, 571, 292, 527, 557, 525, 569, 551, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 542, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 507, 508, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 514, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 511, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	531, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 516, 439, 528, 554, 555, 256, 395, 540,
	500, 548, 572, 221, 253, 409, 493, 534, 482, 387,
	512, 513, 321, 481, 288, 198, 359, 560, 219, 468,
	361, 237, 226, 518, 537, 282, 445, 567, 208, 495,
	526, 234, 472, 0, 0, 574, 242, 492, 210, 523,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 520, 521, 249, 575, 223, 547, 215,
	0, 546, 397, 515, 524, 384, 373, 214, 522, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 535, 0, 203, 0, 487,
	536, 576, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 568, 566, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 374, 474, 530, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 509,
	304, 211, 212, 213, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 285, 539, 301, 457, 456,
	323, 324, 369, 438, 0, 194, 216, 358, 0, 443,
	281, 573, 543, 538, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 293, 294, 433, 434, 306, 307, 570, 571, 292,
	527, 557, 525, 569, 551, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 542, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 507,
	508, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	514, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 511,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 3497, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 531, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 516,
	439, 528, 554, 555, 256, 395, 540, 500, 548, 572,
	221, 253, 409, 493, 534, 482, 387, 512, 513, 321,
	481, 288, 198, 359, 560, 219, 468, 361, 237, 226,
	518, 537, 282, 445, 567, 208, 495, 526, 234, 472,
	0, 0, 574, 242, 492, 210, 523, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	520, 521, 249, 575, 223, 547, 215, 0, 546, 397,
	515, 524, 384, 373, 214, 522, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 535, 0, 203, 0, 487, 536, 576, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 568,
	566, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 374, 474, 530, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 509, 304, 211, 212,
	213, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 285, 539, 301, 457, 456, 323, 324, 369,
	438, 0, 194, 216, 358, 0, 443, 281, 573, 543,
	538, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 293, 294,
	433, 434, 306, 307, 570, 571, 292, 527, 557, 525,
	569, 551, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 542, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 507, 508, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 514, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 1739,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 511, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 531, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 516, 439, 528, 554,
	555, 256, 395, 540, 500, 548, 572, 221, 253, 409,
	493, 534, 482, 387, 512, 513, 321, 481, 288, 198,
	359, 560, 219, 468, 361, 237, 226, 518, 537, 282,
	445, 567, 208, 495, 526, 234, 472, 0, 0, 574,
	242, 492, 210, 523, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 520, 521, 249,
	575, 223, 547, 215, 0, 546, 397, 515, 524, 384,
	373, 214, 522, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 535,
	0, 203, 0, 487, 536, 576, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 568, 566, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 374,
	474, 530, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 509, 304, 211, 212, 213, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 285,
	539, 301, 457, 456, 323, 324, 369, 438, 0, 194,
	216, 358, 0, 443, 281, 573, 543, 538, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 293, 294, 433, 434, 306,
	307, 570, 571, 292, 527, 557, 525, 569, 551, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 542, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 507, 508, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 514, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 511, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 553, 0, 0, 0,
	3373, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 531, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 516, 439, 528, 554, 555, 256, 395,
	540, 500, 548, 572, 221, 253, 409, 493, 534, 482,
	387, 512, 513, 321, 481, 288, 198, 359, 560, 219,
	468, 361, 237, 226, 518, 537, 282, 445, 567, 208,
	495, 526, 234, 472, 0, 0, 574, 242, 492, 210,
	523, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 520, 521, 249, 575, 223, 547,
	215, 0, 546, 397, 515, 524, 384, 373, 214, 522,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 535, 0, 203, 0,
	487, 536, 576, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 568, 566, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 374, 474, 530, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	509, 304, 211, 212, 213, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 285, 539, 301, 457,
	456, 323, 324, 369, 438, 0, 194, 216, 358, 0,
	443, 281, 573, 543, 538, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 293, 294, 433, 434, 306, 307, 570, 571,
	292, 527, 557, 525, 569, 551, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 542, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	507, 508, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 514, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	93, 0, 0, 0, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	511, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 531, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	516, 439, 528, 554, 555, 256, 395, 540, 500, 548,
	572, 221, 253, 409, 493, 534, 482, 387, 512, 513,
	321, 481, 288, 198, 359, 560, 219, 468, 361, 237,
	226, 518, 537, 282, 445, 567, 208, 495, 526, 234,
	472, 0, 0, 574, 242, 492, 210, 523, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 520, 521, 249, 575, 223, 547, 215, 0, 546,
	397, 515, 524, 384, 373, 214, 522, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 535, 0, 203, 0, 487, 536, 576,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	568, 566, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 374, 474, 530, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 509, 304, 211,
	212, 213, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 285, 539, 301, 457, 456, 323, 324,
	369, 438, 0, 194, 216, 358, 0, 443, 281, 573,
	543, 538, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 293,
	294, 433, 434, 306, 307, 570, 571, 292, 527, 557,
	525, 569, 551, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 542, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 507, 508, 308,
	506, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 514, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 511, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 531, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 516, 439, 528,
	554, 555, 256, 395, 540, 500, 548, 572, 221, 253,
	409, 493, 534, 482, 387, 512, 513, 321, 481, 288,
	198, 359, 560, 219, 468, 361, 237, 226, 518, 537,
	282, 445, 567, 208, 495, 526, 234, 472, 0, 0,
	574, 242, 492, 210, 523, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 520, 521,
	249, 575, 223, 547, 215, 0, 546, 397, 515, 524,
	384, 373, 214, 522, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	535, 0, 203, 0, 487, 536, 576, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 568, 566, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	374, 474, 530, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 509, 304, 211, 212, 213, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	285, 539, 301, 457, 456, 323, 324, 369, 438, 0,
	194, 216, 358, 0, 443, 281, 573, 543, 538, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 293, 294, 433, 434,
	306, 307, 570, 571, 292, 527, 557, 525, 569, 551,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 542,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 507, 508, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 514, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 1560, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 511, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 531, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 516, 439, 528, 554, 555, 256,
	395, 540, 500, 548, 572, 221, 253, 409, 493, 534,
	482, 387, 512, 513, 321, 481, 288, 198, 359, 560,
	219, 468, 361, 237, 226, 518, 537, 282, 445, 567,
	208, 495, 526, 234, 472, 0, 0, 574, 242, 492,
	210, 523, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 520, 521, 249, 575, 223,
	547, 215, 0, 546, 397, 515, 524, 384, 373, 214,
	522, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 535, 0, 203,
	0, 487, 536, 576, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 568, 566, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 374, 474, 530,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 509, 304, 211, 212, 213, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 285, 539, 301,
	457, 456, 323, 324, 369, 438, 0, 194, 216, 358,
	0, 443, 281, 573, 543, 538, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 293, 294, 433, 434, 306, 307, 570,
	571, 292, 527, 557, 525, 569, 551, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 542, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 507, 508, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 514, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 511, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 553, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 531,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 516, 439, 528, 554, 555, 256, 395, 540, 500,
	548, 572, 221, 253, 409, 493, 534, 482, 387, 512,
	513, 321, 481, 288, 198, 359, 560, 219, 468, 361,
	237, 226, 518, 537, 282, 445, 567, 208, 495, 526,
	234, 472, 0, 0, 574, 242, 492, 210, 523, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 520, 521, 249, 575, 223, 547, 215, 0,
	546, 397, 515, 524, 384, 373, 214, 522, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 535, 0, 203, 0, 487, 536,
	576, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 568, 566, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 533, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 374, 474, 530, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 509, 304,
	211, 212, 213, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 285, 539, 301, 457, 456, 323,
	324, 369, 438, 0, 194, 216, 358, 1851, 443, 281,
	573, 543, 538, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	293, 294, 433, 434, 306, 307, 570, 571, 292, 527,
	557, 525, 569, 551, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 542, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 507, 508,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 514,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 1842, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 511, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 531, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 516, 439,
	528, 554, 555, 256, 395, 540, 500, 548, 572, 221,
	253, 409, 493, 534, 482, 387, 512, 513, 321, 481,
	288, 198, 359, 560, 219, 468, 361, 237, 226, 518,
	537, 282, 445, 567, 208, 495, 526, 234, 472, 0,
	0, 574, 242, 492, 210, 523, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 520,
	521, 249, 575, 223, 547, 215, 0, 546, 397, 515,
	524, 384, 373, 214, 522, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 535, 0, 203, 0, 487, 536, 576, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 568, 566,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 374, 474, 530, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 509, 304, 211, 212, 213,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 285, 539, 301, 457, 456, 323, 324, 369, 438,
	0, 194, 216, 358, 0, 443, 281, 573, 543, 538,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 293, 294, 433,
	434, 306, 307, 570, 571, 292, 527, 557, 525, 569,
	551, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	542, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 507, 508, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 1706, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 514, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 511, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 531, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 516, 439, 528, 554, 555,
	256, 395, 540, 500, 548, 572, 221, 253, 409, 493,
	534, 482, 387, 512, 513, 321, 481, 288, 198, 359,
	560, 219, 468, 361, 237, 226, 518, 537, 282, 445,
	567, 208, 495, 526, 234, 472, 0, 0, 574, 242,
	492, 210, 523, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 520, 521, 249, 575,
	223, 547, 215, 0, 546, 397, 515, 524, 384, 373,
	214, 522, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 535, 0,
	203, 0, 487, 536, 576, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 568, 566, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 374, 474,
	530, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 509, 304, 211, 212, 213, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 285, 539,
	301, 457, 456, 323, 324, 369, 438, 0, 194, 216,
	358, 0, 443, 281, 573, 543, 538, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 293, 294, 433, 434, 306, 307,
	570, 571, 292, 527, 557, 525, 569, 551, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 542, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 507, 508, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 1704,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 514, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 511, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	531, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 516, 439, 528, 554, 555, 256, 395, 540,
	500, 548, 572, 221, 253, 409, 493, 534, 482, 387,
	512, 513, 321, 481, 288, 198, 359, 560, 219, 468,
	361, 237, 226, 518, 537, 282, 445, 567, 208, 495,
	526, 234, 472, 0, 0, 574, 242, 492, 210, 523,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 520, 521, 249, 575, 223, 547, 215,
	0, 546, 397, 515, 524, 384, 373, 214, 522, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 535, 0, 203, 0, 487,
	536, 576, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 568, 566, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 374, 474, 530, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 509,
	304, 211, 212, 213, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 285, 539, 301, 457, 456,
	323, 324, 369, 438, 0, 194, 216, 358, 0, 443,
	281, 573, 543, 538, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 293, 294, 433, 434, 306, 307, 570, 571, 292,
	527, 557, 525, 569, 551, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 542, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 507,
	508, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 1702, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	514, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 511,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 531, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 516,
	439, 528, 554, 555, 256, 395, 540, 500, 548, 572,
	221, 253, 409, 493, 534, 482, 387, 512, 513, 321,
	481, 288, 198, 359, 560, 219, 468, 361, 237, 226,
	518, 537, 282, 445, 567, 208, 495, 526, 234, 472,
	0, 0, 574, 242, 492, 210, 523, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	520, 521, 249, 575, 223, 547, 215, 0, 546, 397,
	515, 524, 384, 373, 214, 522, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 535, 0, 203, 0, 487, 536, 576, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 568,
	566, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 374, 474, 530, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 509, 304, 211, 212,
	213, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 285, 539, 301, 457, 456, 323, 324, 369,
	438, 0, 194, 216, 358, 0, 443, 281, 573, 543,
	538, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 293, 294,
	433, 434, 306, 307, 570, 571, 292, 527, 557, 525,
	569, 551, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 542, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 507, 508, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 1700, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 514, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 511, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 531, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 516, 439, 528, 554,
	555, 256, 395, 540, 500, 548, 572, 221, 253, 409,
	493, 534, 482, 387, 512, 513, 321, 481, 288, 198,
	359, 560, 219, 468, 361, 237, 226, 518, 537, 282,
	445, 567, 208, 495, 526, 234, 472, 0, 0, 574,
	242, 492, 210, 523, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 520, 521, 249,
	575, 223, 547, 215, 0, 546, 397, 515, 524, 384,
	373, 214, 522, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 535,
	0, 203, 0, 487, 536, 576, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 568, 566, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 374,
	474, 530, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 509, 304, 211, 212, 213, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 285,
	539, 301, 457, 456, 323, 324, 369, 438, 0, 194,
	216, 358, 0, 443, 281, 573, 543, 538, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 293, 294, 433, 434, 306,
	307, 570, 571, 292, 527, 557, 525, 569, 551, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 542, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 507, 508, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	1698, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 514, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 511, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 531, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 516, 439, 528, 554, 555, 256, 395,
	540, 500, 548, 572, 221, 253, 409, 493, 534, 482,
	387, 512, 513, 321, 481, 288, 198, 359, 560, 219,
	468, 361, 237, 226, 518, 537, 282, 445, 567, 208,
	495, 526, 234, 472, 0, 0, 574, 242, 492, 210,
	523, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 520, 521, 249, 575, 223, 547,
	215, 0, 546, 397, 515, 524, 384, 373, 214, 522,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 535, 0, 203, 0,
	487, 536, 576, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 568, 566, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 374, 474, 530, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	509, 304, 211, 212, 213, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 285, 539, 301, 457,
	456, 323, 324, 369, 438, 0, 194, 216, 358, 0,
	443, 281, 573, 543, 538, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 293, 294, 433, 434, 306, 307, 570, 571,
	292, 527, 557, 525, 569, 551, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 542, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	507, 508, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 1694, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 514, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	511, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 531, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	516, 439, 528, 554, 555, 256, 395, 540, 500, 548,
	572, 221, 253, 409, 493, 534, 482, 387, 512, 513,
	321, 481, 288, 198, 359, 560, 219, 468, 361, 237,
	226, 518, 537, 282, 445, 567, 208, 495, 526, 234,
	472, 0, 0, 574, 242, 492, 210, 523, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 520, 521, 249, 575, 223, 547, 215, 0, 546,
	397, 515, 524, 384, 373, 214, 522, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 535, 0, 203, 0, 487, 536, 576,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	568, 566, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 374, 474, 530, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 509, 304, 211,
	212, 213, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 285, 539, 301, 457, 456, 323, 324,
	369, 438, 0, 194, 216, 358, 0, 443, 281, 573,
	543, 538, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 293,
	294, 433, 434, 306, 307, 570, 571, 292, 527, 557,
	525, 569, 551, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 542, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 507, 508, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 1692, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 514, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 511, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 531, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 516, 439, 528,
	554, 555, 256, 395, 540, 500, 548, 572, 221, 253,
	409, 493, 534, 482, 387, 512, 513, 321, 481, 288,
	198, 359, 560, 219, 468, 361, 237, 226, 518, 537,
	282, 445, 567, 208, 495, 526, 234, 472, 0, 0,
	574, 242, 492, 210, 523, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 520, 521,
	249, 575, 223, 547, 215, 0, 546, 397, 515, 524,
	384, 373, 214, 522, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	535, 0, 203, 0, 487, 536, 576, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 568, 566, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	374, 474, 530, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 509, 304, 211, 212, 213, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	285, 539, 301, 457, 456, 323, 324, 369, 438, 0,
	194, 216, 358, 0, 443, 281, 573, 543, 538, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 293, 294, 433, 434,
	306, 307, 570, 571, 292, 527, 557, 525, 569, 551,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 542,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 507, 508, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 1690, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 514, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 511, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 531, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 516, 439, 528, 554, 555, 256,
	395, 540, 500, 548, 572, 221, 253, 409, 493, 534,
	482, 387, 512, 513, 321, 481, 288, 198, 359, 560,
	219, 468, 361, 237, 226, 518, 537, 282, 445, 567,
	208, 495, 526, 234, 472, 0, 0, 574, 242, 492,
	210, 523, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 520, 521, 249, 575, 223,
	547, 215, 0, 546, 397, 515, 524, 384, 373, 214,
	522, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 535, 0, 203,
	0, 487, 536, 576, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 568, 566, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 374, 474, 530,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 509, 304, 211, 212, 213, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 285, 539, 301,
	457, 456, 323, 324, 369, 438, 0, 194, 216, 358,
	0, 443, 281, 573, 543, 538, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 293, 294, 433, 434, 306, 307, 570,
	571, 292, 527, 557, 525, 569, 551, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 542, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 507, 508, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 514, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 1665, 0, 0, 0, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 511, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 553, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 531,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 516, 439, 528, 554, 555, 256, 395, 540, 500,
	548, 572, 221, 253, 409, 493, 534, 482, 387, 512,
	513, 321, 481, 288, 198, 359, 560, 219, 468, 361,
	237, 226, 518, 537, 282, 445, 567, 208, 495, 526,
	234, 472, 0, 0, 574, 242, 492, 210, 523, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 520, 521, 249, 575, 223, 547, 215, 0,
	546, 397, 515, 524, 384, 373, 214, 522, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 535, 0, 203, 0, 487, 536,
	576, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 568, 566, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 533, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 374, 474, 530, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 509, 304,
	211, 212, 213, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 285, 539, 301, 457, 456, 323,
	324, 369, 438, 0, 194, 216, 358, 0, 443, 281,
	573, 543, 538, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	293, 294, 433, 434, 306, 307, 570, 571, 292, 527,
	557, 525, 569, 551, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 542, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 507, 508,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 1564, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 514,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 511, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 531, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 516, 439,
	528, 554, 555, 256, 395, 540, 500, 548, 572, 221,
	253, 409, 493, 534, 482, 387, 512, 513, 321, 481,
	288, 198, 359, 560, 219, 468, 361, 237, 226, 518,
	537, 282, 445, 567, 208, 495, 526, 234, 472, 0,
	0, 574, 242, 492, 210, 523, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 520,
	521, 249, 575, 223, 547, 215, 0, 546, 397, 515,
	524, 384, 373, 214, 522, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 535, 0, 203, 0, 487, 536, 576, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 568, 566,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 374, 474, 530, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 509, 304, 211, 212, 213,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 285, 539, 301, 457, 456, 323, 324, 369, 438,
	0, 194, 216, 358, 0, 443, 281, 573, 543, 538,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 293, 294, 433,
	434, 306, 307, 570, 571, 292, 527, 557, 525, 569,
	551, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	542, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 507, 508, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 514, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 93, 0, 0, 0, 823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 511, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 531, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 516, 439, 528, 554, 555,
	256, 395, 540, 500, 548, 572, 221, 253, 409, 493,
	534, 482, 387, 512, 513, 321, 481, 288, 198, 359,
	560, 219, 468, 361, 237, 226, 518, 537, 282, 445,
	567, 208, 495, 526, 234, 472, 0, 0, 574, 242,
	492, 210, 523, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 520, 521, 249, 575,
	223, 547, 215, 0, 546, 397, 515, 524, 384, 373,
	214, 522, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 535, 0,
	203, 0, 487, 536, 576, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 568, 566, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 374, 474,
	530, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 509, 304, 211, 212, 213, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 285, 539,
	301, 457, 456, 323, 324, 369, 438, 0, 194, 216,
	358, 0, 443, 281, 573, 543, 538, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 293, 294, 433, 434, 306, 307,
	570, 571, 292, 527, 557, 525, 569, 551, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 542, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 507, 508, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 514, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 511, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	531, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 516, 439, 528, 554, 555, 256, 395, 540,
	500, 548, 572, 221, 253, 409, 493, 534, 482, 387,
	512, 513, 321, 481, 288, 198, 359, 560, 219, 468,
	361, 237, 226, 518, 537, 282, 445, 567, 208, 495,
	526, 234, 472, 0, 0, 574, 242, 492, 210, 523,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 520, 521, 249, 575, 223, 547, 215,
	0, 546, 397, 515, 524, 384, 373, 214, 522, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 535, 0, 203, 0, 487,
	536, 576, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 568, 566, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 374, 474, 530, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 509,
	304, 211, 212, 213, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 285, 539, 301, 457, 456,
	323, 324, 369, 438, 0, 194, 216, 358, 0, 443,
	281, 573, 543, 538, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 293, 294, 433, 434, 306, 307, 570, 571, 1306,
	527, 557, 525, 569, 551, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 542, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 507,
	508, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	514, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 511,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 531, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 516,
	439, 528, 554, 555, 256, 395, 540, 500, 548, 572,
	221, 253, 409, 493, 534, 482, 387, 512, 513, 321,
	481, 288, 198, 359, 560, 219, 468, 361, 237, 226,
	518, 537, 282, 445, 567, 208, 495, 526, 234, 472,
	0, 0, 574, 242, 492, 210, 523, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	520, 521, 249, 575, 223, 547, 215, 0, 546, 397,
	515, 524, 384, 373, 214, 522, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 535, 0, 203, 0, 487, 536, 576, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 568,
	566, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 374, 474, 530, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 509, 304, 211, 212,
	213, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 285, 539, 301, 457, 456, 323, 324, 369,
	438, 0, 194, 216, 358, 0, 443, 281, 573, 543,
	538, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 909, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 293, 294,
	433, 434, 306, 307, 570, 571, 292, 527, 557, 525,
	569, 551, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 542, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 507, 508, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 514, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 511, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 598, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 531, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 516, 439, 528, 554,
	555, 256, 395, 540, 500, 548, 572, 221, 253, 409,
	493, 534, 482, 387, 512, 513, 321, 481, 288, 198,
	359, 560, 219, 468, 361, 237, 226, 518, 537, 282,
	445, 567, 208, 495, 526, 234, 472, 0, 0, 574,
	242, 492, 210, 523, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 520, 521, 249,
	575, 223, 547, 215, 0, 546, 397, 515, 524, 384,
	373, 214, 522, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 535,
	0, 203, 0, 487, 536, 576, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 568, 566, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 374,
	474, 530, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 509, 304, 211, 212, 213, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 285,
	539, 301, 457, 456, 323, 324, 369, 438, 0, 194,
	216, 358, 0, 443, 281, 573, 543, 538, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 293, 294, 433, 434, 306,
	307, 570, 571, 292, 527, 557, 525, 569, 551, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 542, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 507, 508, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 514, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 511, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 531, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 516, 439, 528, 554, 555, 256, 395,
	540, 500, 548, 572, 221, 253, 409, 493, 534, 482,
	387, 512, 513, 321, 481, 288, 198, 359, 560, 219,
	468, 361, 237, 226, 518, 537, 282, 445, 567, 208,
	495, 526, 234, 472, 0, 0, 574, 242, 492, 210,
	523, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 520, 521, 249, 575, 223, 547,
	215, 0, 546, 397, 515, 524, 384, 373, 214, 522,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 535, 0, 203, 0,
	487, 536, 576, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 568, 566, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 374, 474, 530, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	509, 304, 211, 212, 213, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 285, 539, 301, 457,
	456, 323, 324, 369, 438, 0, 194, 216, 358, 0,
	443, 281, 573, 543, 538, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 3505, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 293, 294, 433, 434, 306, 307, 570, 571,
	292, 527, 557, 525, 569, 551, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 542, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	507, 508, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 514, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	511, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 531, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	516, 439, 528, 554, 555, 256, 395, 540, 500, 548,
	572, 221, 253, 409, 493, 534, 482, 387, 512, 513,
	321, 481, 288, 198, 359, 560, 219, 468, 361, 237,
	226, 518, 537, 282, 445, 567, 208, 495, 526, 234,
	472, 0, 0, 574, 242, 492, 210, 523, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 520, 521, 249, 575, 223, 547, 215, 0, 546,
	397, 515, 524, 384, 373, 214, 522, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 535, 0, 203, 0, 487, 536, 576,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	568, 566, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 374, 474, 530, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 509, 304, 211,
	212, 213, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 285, 539, 301, 457, 456, 323, 324,
	369, 438, 0, 194, 216, 358, 0, 443, 281, 573,
	543, 538, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 293,
	294, 433, 434, 306, 307, 570, 571, 292, 527, 557,
	525, 569, 551, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 542, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 507, 508, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 514, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 511, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 531, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 516, 439, 528,
	554, 555, 256, 395, 540, 500, 548, 572, 221, 253,
	409, 493, 534, 482, 387, 512, 513, 321, 481, 288,
	198, 359, 560, 219, 468, 361, 237, 226, 518, 537,
	282, 445, 567, 208, 495, 526, 234, 472, 0, 0,
	574, 242, 492, 210, 523, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 520, 521,
	249, 575, 223, 547, 215, 0, 546, 397, 515, 524,
	384, 373, 214, 522, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	535, 0, 203, 0, 487, 536, 576, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 568, 566, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	374, 474, 530, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 509, 304, 211, 212, 213, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	285, 539, 301, 457, 456, 323, 324, 369, 438, 0,
	194, 216, 358, 0, 443, 281, 573, 543, 538, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 293, 294, 433, 434,
	306, 307, 570, 571, 292, 527, 557, 525, 569, 551,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 542,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 507, 508, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 514, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 511, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 531, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 516, 439, 528, 554, 555, 256,
	395, 540, 500, 548, 572, 221, 253, 409, 493, 534,
	482, 387, 512, 513, 321, 481, 288, 198, 359, 560,
	219, 468, 361, 237, 226, 518, 537, 282, 445, 567,
	208, 495, 526, 234, 472, 0, 0, 574, 242, 492,
	210, 523, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 520, 521, 249, 575, 223,
	547, 215, 0, 546, 397, 515, 524, 384, 373, 214,
	522, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 535, 0, 203,
	0, 487, 536, 576, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 568, 566, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 374, 474, 530,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 509, 304, 211, 212, 213, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 285, 539, 301,
	457, 456, 323, 324, 369, 438, 0, 194, 216, 358,
	0, 443, 281, 573, 543, 538, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 293, 294, 433, 434, 306, 307, 570,
	571, 292, 527, 557, 525, 569, 551, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 542, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 0, 0,
	366, 507, 508, 308,
}

var yyPact = [...]int{
	-1000, -1000, 4746, -1000, -461, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2372, 2399, -1000, -1000, -1000, -1000, 2557, -1000, 1012, 2055,
	-1000, 2357, 3699, -1000, 46937, 729, -1000, 44309, 724, 859,
	205, 29855, -1000, 213, -1000, 198, 45623, 206, -1000, -1000,
	-1000, -1000, -284, 18684, 2300, 84, 82, 46937, -1000, -1000,
	-1000, -1000, 2511, 2004, -1000, 387, -1000, -1000, -1000, -1000,
	-1000, -1000, 43652, -1000, 1100, -1000, -1000, 2373, 2349, 2565,
	910, 2326, -1000, 2424, 2004, -1000, 18684, 2496, 2410, 18027,
	18027, 649, -1000, -1000, 214, -1000, -1000, 25256, 46937, 32483,
	745, -1000, 2357, -1000, -1000, -1000, 149, -1000, 376, 1935,
	-1000, 1921, -1000, 967, 839, 409, 714, 696, 406, 397,
	393, 391, 390, 386, 385, 383, 536, -1000, 936, 936,
	-124, -132, 1232, 647, 616, 616, 953, 676, 2325, 2321,
	-1000, -1000, 936, 936, 936, 482, 936, 936, 936, 936,
	319, 317, 936, 936, 936, 936, 936, 936, 936, 936,
	936, 936, 936, 936, 936, 936, 936, 936, 936, 838,
	2357, 302, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 46937, 230, 46937, -1000,
	812, 46937, -332, 1058, 1058, 109, 1058, 1058, 1058, 1058,
	235, 906, 81, -1000, 224, 275, 237, 299, 1034, 803,
	-1000, -1000, 282, 1034, 1730, -1000, 914, 294, 174, -1000,
	1058, 1058, -1000, 12089, 210, 12089, 12089, -1000, 2348, -1000,
	-1000, -1000, -1000, -1000, 1226, -1000, -1000, -1000, -1000, -11,
	675, -1000, -1000, -1000, -1000, 45623, 42995, 295, -1000, -1000,
	49, -1000, -1000, 1844, 1394, 18684, 1295, -1000, 1254, 866,
	-1000, -1000, -1000, -1000, -1000, 777, -1000, 19341, 19341, 19341,
	19341, -1000, -1000, 1937, 42338, 1937, 1937, 19341, 1937, -1000,
	19341, 1937, 1937, 1937, 18684, 1937, 1937, 1937, 1937, -1000,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, -1000, -1000, -1000, -1000, 1937, 810,
	1937, 1937, 1937, 1937, 1937, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1937, 1937, 1937, 1937, 1937, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21312, 1492, 1484, 1476, -1000, 16056, 1937, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46937,
	-1000, 1937, 241, 45623, 45623, 380, 2424, 2004, -1000, 2511,
	2466, 387, -1000, 2877, 1537, 1542, 1555, 2004, 1905, 46937,
	-1000, 1952, -1000, -1000, -1000, -1000, 2195, 1487, 1725, -1000,
	-1000, -1000, -1000, 1814, 18684, -1000, -1000, 2537, -1000, 22627,
	797, 2533, 41681, -1000, 649, 649, 1915, 487, 34, -1000,
	-1000, -1000, -1000, 952, 29198, -1000, -1000, -1000, -1000, 1819,
	46937, -1000, -1000, 3758, 1241, -1000, 2051, -1000, 1794, -1000,
	1993, 18684, 2071, 720, 1241, 705, 698, 688, -1000, -33,
	-1000, -1000, -1000, -1000, -1000, -1000, 936, 936, 936, -1000,
	403, 2495, 3699, 3926, -1000, -1000, -1000, 41024, 2047, 1241,
	-1000, 2041, -1000, 1016, 734, 840, 840, 1241, -1000, -1000,
	46280, 1241, 1010, 1007, 1241, 1241, 45623, 45623, -1000, 40367,
	-1000, 39710, 39053, 1290, 45623, 38396, 37739, 37082, 36425, 35768,
	-1000, 2279, -1000, 2134, -1000, -1000, -1000, 46280, 1241, 1241,
	46280, 45623, 46280, 46937, 1241, -1000, -1000, 486, -1000, -1000,
	1289, 1275, 1273, 936, 936, 1266, 1713, 1708, 1698, 936,
	936, 1262, 1683, 31169, 1662, 281, 1242, 1239, 1221, 1441,
	1656, 200, 1650, 1359, 1336, 1218, 45623, 2040, 46937, -1000,
	258, 927, 742, 949, 2357, 2274, 1914, 671, 708, 1241,
	625, 625, 45623, -1000, 14078, -1000, 252, -1000, 1636, 18684,
	-1000, 1048, 1034, 1034, -1000, -1000, -1000, -1000, -1000, -1000,
	1058, 46937, 1048, -1000, -1000, -1000, 1034, 1058, 46937, 1058,
	1058, 1058, 1058, 1034, 1034, 1034, 1058, 46937, 46937, 46937,
	46937, 46937, 46937, 46937, 46937, 46937, 12089, 914, 1058, -333,
	-1000, 1626, -1000, -1000, 2155, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12089, 12089, -1000, -1000, -1000, -1000, -1000, 1911, -1000,
	192, 56, 197, -1000, 35111, 427, 947, -1000, 427, -1000,
	-1000, -1000, 1910, 34454, -1000, -341, -364, -374, -376, -1000,
	-1000, -1000, -381, -389, -1000, -1000, -1000, 18684, 18684, 18684,
	18684, -163, -1000, 1123, 19341, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 203, 1122, 19341, 19341, 19341, 19341, 19341, 19341,
	19341, 19341, 19341, 19341, 19341, 19341, 19341, 19341, 19341, -1000,
	-1000, 27227, 7161, 7161, 866, 866, 866, 866, -1000, -100,
	1909, 46280, -1000, -1000, -1000, 790, 18684, 18684, 866, -1000,
	1241, 16056, 19998, 18027, 18027, 18684, 975, 1394, 46280, 18684,
	-1000, 1555, -1000, -1000, -1000, 1365, -1000, 1055, 2331, 2331,
	2331, 2331, 18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684,
	18684, 18684, 2331, 45623, 45623, 907, 18684, 18684, 18684, 18684,
	18684, 18684, 14741, 18684, 18684, 19341, 18684, 18684, 18684, 1555,
	18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684,
	18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684,
	18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684,
	18684, 18684, 18684, 1555, 18684, 1169, 18684, 18684, 18027, 13415,
	18027, 18027, 18027, 18027, 18027, -1000, -1000, -1000, -1000, -1000,
	18684, 18684, 18684, 18684, 18684, 18684, 18684, 18684, 1555, 18684,
	18684, 18684, 18684, 18684, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1554, 1618, 1475, 18684, -1000, 1907,
	-1000, -133, 24599, 18684, 1619, 2531, 2085, 45623, -1000, -1000,
	-1000, 2424, -1000, 2424, 1554, 2592, 2207, 18027, -1000, -1000,
	2592, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1763,
	-1000, 46937, 1905, 2405, 45623, 2187, 1616, 485, -1000, 18684,
	18684, 1901, -1000, 1953, 46937, -1000, -163, -1000, 33797, -1000,
	-1000, 11426, 46937, 370, 46937, -1000, 23942, 33140, 259, -1000,
	34, 1870, -1000, 51, 42, 15398, 862, -1000, -1000, -1000,
	1232, 20655, 1795, 862, 124, -1000, -1000, -1000, 1993, -1000,
	1993, 1993, 1993, 1993, 485, 485, 485, 485, -1000, -1000,
	-1000, -1000, -1000, 2038, 2036, -1000, 1993, 1993, 1993, 1993,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2032, 2032, 2032,
	2028, 2028, 1998, 1998, 588, -1000, 18684, 381, 32483, 2369,
	1213, 1222, 258, 645, 2082, 1241, 1241, 1241, 645, -1000,
	1448, 1420, 1418, -1000, -449, 1889, -1000, -1000, 2478, -1000,
	-1000, 983, 1049, 1042, 1046, 45623, 238, 360, -1000, 610,
	-1000, 32483, 1241, 1005, 840, 1241, -1000, 1241, -1000, -1000,
	-1000, -1000, -1000, 1241, -1000, -1000, 1881, -1000, 1891, 1084,
	1035, 1077, 1028, 1881, -1000, -1000, -105, 1881, -1000, 1881,
	-1000, 1881, -1000, 1881, -1000, 1881, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 966, 227, -216, 45623, 238,
	661, -1000, 660, 27227, -1000, -1000, -1000, 27227, 27227, -1000,
	-1000, -1000, -1000, 1607, 1603, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -435, 46937, -1000, 257, 945, 348,
	353, 329, 46937, 268, 2422, 2420, 2419, 2418, 2412, 260,
	312, 46937, 46937, 625, 2144, 46937, 2385, 46937, -1000, -1000,
	-1000, -1000, 1578, 1576, -1000, 1394, 46937, -1000, -1000, 1058,
	1058, -1000, -1000, 46937, 1058, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1058, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46937,
	-1000, -1000, -1000, -1000, -11, 186, -1000, -1000, 45623, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -53, -1000,
	247, 27, 377, -1000, -1000, -1000, -1000, -1000, 2435, -1000,
	1394, 985, 989, -1000, 1937, -1000, -1000, 1114, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 203, 19341, 19341, 19341, 1690,
	681, 1727, 1211, 1236, 1083, 1083, 1133, 1133, 861, 861,
	861, 861, 861, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1575, -1000, 1937, 46280, 1792, 13415, 1386, 1701, 1555,
	2785, -1000, 1749, -1000, 1749, 1464, 974, -1000, 18684, 1555,
	2781, -1000, -1000, 1555, 1555, 1555, 18684, -1000, -1000, 18684,
	18684, 18684, 18684, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 18684, 1879, 1878, 2530, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1361, 1222,
	1222, 1222, 1222, 1222, 18684, 1452, -1000, -1000, -1000, 1466,
	2776, 1158, 2758, 1222, 1222, -1000, 1222, 2751, 2743, 1555,
	1844, 1555, 1876, -1000, 2691, 1222, 2669, 2651, 2632, 2107,
	2628, 2545, 2510, 1222, 1222, 1222, 2100, 2484, 2451, 2421,
	2384, 2371, 2351, 2338, 2322, 2312, 1222, 1475, 1475, 1475,
	1475, 1475, 2308, -165, 1222, 1555, -1000, -1000, -1000, -1000,
	-1000, 2299, 2070, 1555, 1872, 1937, 789, -1000, -1000, 1749,
	1555, 1555, 1749, 1749, 2291, 2280, 2275, 2251, 2243, 2202,
	1222, 1222, -1000, 1222, 2194, 2168, 2052, 1990, 1555, -1000,
	1475, 46937, -1000, -317, -1000, 5, 822, 1937, -1000, 31169,
	1555, -1000, 5731, -1000, 1127, -1000, -1000, -1000, -1000, -1000,
	28541, 1834, 2592, -1000, -1000, 1937, 1712, -1000, -1000, 485,
	100, 27884, 858, 858, 141, 1394, 1394, 18684, -1000, -1000,
	-1000, -1000, -1000, -1000, 785, 2504, 398, 1937, -1000, 1895,
	2774, -1000, -1000, -1000, 2402, 21970, -1000, -1000, 1937, 1937,
	46937, 1756, 1734, -1000, 772, -1000, 1297, 1870, 34, 15,
	-1000, -1000, -1000, -1000, 1394, -1000, 1367, 375, 310, -1000,
	634, -1000, -1000, -1000, -1000, 2293, 111, -1000, -1000, -1000,
	286, 485, -1000, -1000, -1000, -1000, -1000, -1000, 1563, 1563,
	-1000, -1000, -1000, -1000, -1000, 1212, -1000, -1000, -1000, -1000,
	1201, -1000, -1000, 1200, -1000, -1000, 2163, 1995, 381, -1000,
	-1000, 936, 1558, -1000, -1000, 2307, 936, 936, 45623, -1000,
	-1000, 1779, 2369, 257, 46937, 982, 2138, -1000, 2082, 2082,
	2082, 46937, -1000, -1000, -1000, -1000, -1000, -1000, -442, 112,
	419, -1000, -1000, -1000, 415, 45623, 1703, -1000, 244, -1000,
	1759, -1000, 45623, -1000, 1688, 2027, 1241, 1241, -1000, -1000,
	-1000, 45623, 1937, -1000, -1000, -1000, -1000, 697, 2354, 309,
	-1000, -1000, -184, -1000, -1000, 238, 244, 46280, 1241, 862,
	-1000, -1000, -1000, -1000, -1000, -438, 1679, 679, 248, 361,
	46937, 46937, 46937, 46937, 46937, 753, -1000, -1000, 62, -1000,
	-1000, 211, -1000, -1000, -1000, -1000, 211, -1000, -1000, -1000,
	-1000, 283, 654, -1000, 46937, 46937, 737, -1000, -1000, -1000,
	-1000, -1000, 1034, -1000, -1000, 1034, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2344, 46937,
	24, -408, -1000, -401, 18684, -1000, -1000, -1000, -1000, 1350,
	663, 1727, 19341, 19341, 19341, -1000, -1000, -1000, 828, 828,
	27227, -1000, 18684, 18027, -1000, -1000, 18684, 18684, 957, -1000,
	18684, 1356, -1000, 18684, -1000, -1000, -1000, 1475, 1222, 1222,
	1222, 1222, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1890, 18684, 18684, 18684, 1555, 311, -1000, -1000,
	-1000, -1000, -1000, 2529, -1000, 18684, -1000, 27227, 18684, 18684,
	18684, -1000, -1000, -1000, 18684, 18684, -1000, -1000, 18684, 18684,
	-1000, 18684, 18684, 18684, -1000, 18684, 18684, 18684, 18684, -1000,
	-1000, -1000, -1000, 18684, 18684, 18684, 18684, 18684, 18684, 18684,
	18684, 18684, 18684, -1000, -1000, -1000, -1000, -1000, -1000, 18684,
	-1000, 32483, 114, -165, 1169, 114, 1169, -1000, 18027, 12752,
	-1000, -1000, -1000, -1000, -1000, 18684, 18684, 18684, 18684, 18684,
	18684, -1000, -1000, -1000, 18684, 18684, -1000, 18684, -1000, 18684,
	-1000, -1000, -1000, -1000, -1000, 822, -1000, 840, 840, 840,
	45623, -1000, -1000, -1000, -1000, 1866, -1000, 2447, -1000, 2227,
	2225, 2522, 2504, -1000, 23942, 2592, -1000, -1000, 45623, -304,
	-1000, 2271, 2289, 858, 858, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 10763, 2424, 18684, 2130, 46280, 172, -1000, 23285,
	45623, 46280, 23942, 23942, 23942, 23942, 23942, -1000, 2170, 2162,
	-1000, 2196, 2166, 2295, 46937, -1000, 1554, 1676, -1000, 18684,
	25913, 1839, 23942, -1000, -1000, 23942, 46937, 10100, -1000, -1000,
	19, 9, -1000, -1000, -1000, -1000, 1232, -1000, -1000, 1577,
	2401, 2282, -1000, -1000, -1000, -1000, -1000, 1670, -1000, 1666,
	1864, 1649, 1647, 227, -1000, 2063, 2342, 936, 936, -1000,
	1193, -1000, 1241, 1556, 1540, -1000, -1000, -1000, 678, -1000,
	2382, 46937, 2126, 2115, 2113, -1000, -448, 1191, 2015, 2057,
	18684, 2014, 2477, 1859, 45623, -1000, -1000, 46280, -1000, 288,
	-1000, 381, 45623, -1000, -1000, -1000, 360, 46937, -1000, 6744,
	-1000, -1000, -1000, 244, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46937, 256, -1000, 2009, 1178, -1000, -1000, 1967, -1000,
	-1000, -1000, -1000, 246, 339, 1538, 219, 1518, 219, -1000,
	46937, 608, 1995, 46937, -1000, -1000, -1000, 1058, 1058, -1000,
	-1000, 2337, -1000, 1241, 1222, 19341, 19341, -1000, 866, 857,
	-145, 1993, 1993, -1000, 1993, 1998, -1000, 1993, 176, 1993,
	168, 1993, -1000, -1000, 1555, 1555, 1475, -1000, 1958, 1528,
	-1000, 1394, 18684, 2157, -1000, -1000, -1000, -1000, -1000, -43,
	2152, 2147, 1222, -1000, 1988, 1986, 18684, 1222, 1555, 1947,
	1222, 1222, 1222, 1222, -1000, 1394, 1475, 2139, 1475, 1222,
	1222, 2132, 334, 1222, 1635, 1635, 1635, 1635, 1635, 1475,
	1475, 1475, 1475, 1222, 45623, -1000, -165, -1000, -1000, -200,
	-202, -1000, 1555, -165, 1862, 1555, -1000, 1942, 1926, 2120,
	1762, 1222, 2112, 1222, 1222, 1222, 1672, -1000, 2433, 2433,
	2433, 1614, 1127, 46937, -1000, -1000, -1000, -1000, 2504, 2450,
	1860, -1000, -1000, 100, 460, -1000, 2318, 2289, -1000, 2474,
	2256, 2463, -1000, -1000, -1000, -1000, -1000, 1394, -1000, 2363,
	1835, -1000, 944, 1845, -1000, -1000, 17370, 1623, 2211, 769,
	1614, 1898, 2774, 2077, 2105, 2729, -1000, -1000, -1000, -1000,
	2158, -1000, 2117, -1000, -1000, 1952, -1000, 2089, 370, 23942,
	1823, 1823, -1000, 766, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1078, 5324, 2564, -1000, 1512, -1000, 1338, 195, 1179,
	-1000, -1000, 936, 936, -1000, 1004, 998, -1000, 46937, 1985,
	-1000, 485, 1506, 485, 1163, -1000, -1000, 1150, -1000, -1000,
	-1000, -1000, 1927, 2234, -1000, -1000, -1000, -1000, 46937, -1000,
	-1000, 46937, 46937, 46937, 1983, 2462, -1000, 18684, 1979, 940,
	2060, 45623, 45623, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 527, 936, -419, 307, 301, 936,
	936, 936, -454, -1000, -1000, 1601, 1599, -1000, -130, -1000,
	18684, -1000, -1000, -1000, 1390, 1390, 1492, 1484, 1476, -1000,
	1952, -1000, -1000, -1000, 1746, -1000, -1000, -109, 45623, 45623,
	45623, 45623, -1000, -1000, 1109, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 866, 1555, 342,
	-112, 1555, -1000, -1000, 485, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18684, -1000, 18684, -1000, 1394,
	18684, 2424, 1469, 18684, 18684, -1000, 1143, 1142, 1222, -1000,
	-1000, -1000, 18684, -1000, -1000, -1000, -1000, -1000, 18684, -1000,
	-1000, -1000, 18684, 298, 828, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1555, 365, -1000, -1000,
	-1000, -1000, 2521, -1000, 1555, 18684, -1000, -1000, 18684, -1000,
	18684, 18684, -1000, 18684, -1000, 18684, -1000, -1000, -1000, -1000,
	18684, 1937, 2313, 1937, 1937, 25913, -1000, -1000, 2450, 2499,
	2461, 2247, 2244, 2244, 2318, -1000, 2458, 2455, -1000, 1467,
	2453, 1444, 997, -1000, 46280, 18684, 172, -1000, 392, 45623,
	172, 45623, -1000, 2467, -1000, -1000, 18684, 1963, -1000, 18684,
	-1000, -1000, -1000, -1000, 7161, 2504, 1823, -1000, -1000, 876,
	-1000, 18684, -1000, -1000, -1000, 8422, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1415, 1409, -1000, -1000, 1962, 18684,
	-1000, -1000, -1000, 1735, 1728, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1952, -1000, -1000, -1000, -1000, 360, -444,
	2044, 45623, 1128, -1000, 1573, 1859, 355, 172, 1388, 936,
	936, 936, 1119, 1113, 31169, 1567, -1000, 45623, 405, -1000,
	360, -1000, -136, -137, 1222, -1000, -1000, 2398, -1000, -1000,
	12752, -1000, -1000, 1951, 2079, -1000, -1000, -1000, -1000, 2180,
	-103, -118, -1000, -1000, 1222, 1222, 1777, 1555, -1000, 1222,
	1222, 1680, 1673, -1000, 1222, 1475, 1668, -1000, 298, 1555,
	2103, -1000, -1000, 7161, -1000, -1000, 2467, 2449, 114, -1000,
	-1000, 234, 114, 1394, 1645, 1222, 1641, 1633, 1222, 1222,
	26570, -1000, 2448, 2445, 31826, 31826, 822, 2499, -172, 18684,
	18684, 2232, 1154, -1000, -1000, -1000, -1000, 1379, 1376, -1000,
	1372, -1000, 2548, -1000, 1394, -1000, 172, -1000, 760, 1845,
	-1000, 2424, 1394, 45623, 1394, 103, 2467, -1000, 1222, -1000,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
	1937, 1937, 1937, 1937, 1937, 1937, -1000, -1000, 45623, 1971,
	-1000, -1000, 2389, 1545, 110, -1000, 1642, 1859, -1000, -1000,
	146, -1000, 18684, -1000, 31169, 1370, 1305, -1000, -1000, -1000,
	-1000, -454, -1000, -1000, -1000, -1000, -1000, -1000, 387, 1857,
	-1000, 926, 45623, 46937, -1000, 2161, -1000, -1000, -1000, 18684,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18684, -1000,
	1555, 2098, -1000, -282, -1000, -421, 18684, -165, -1000, -1000,
	-165, -1000, 18684, -1000, -1000, 18684, -1000, 18684, -1000, -1000,
	1531, -1000, -1000, -1000, -1000, -1000, 1531, 1531, -1000, -172,
	-1000, 1856, -1000, 45623, 1394, 1844, -1000, 1096, -1000, -1000,
	-1000, -1000, -1000, 46280, 1845, 45623, -1000, 1526, 1555, 1937,
	2424, -1000, 1500, -1000, 387, -1000, 1945, 2057, -1000, -1000,
	-1000, 16713, -1000, -1000, -1000, -1000, -1000, 201, -108, 12752,
	9437, 1481, -1000, -107, 1222, 1475, -1000, -391, -1000, -1000,
	-1000, -1000, 280, -1000, -1000, 1844, -1000, -1000, 1606, 1586,
	1497, 30512, -1000, -1000, -1000, -1000, -172, -1000, -1000, 2387,
	-1000, -1000, 1843, -1000, -1000, 25913, 44966, -1000, -97, 325,
	-108, 18684, 1941, 1555, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6, -1000, -1000, -1000, -1000, -1000, 1967, -115,
	-1000, -1000, -1000, 202, -411, -190, -201, -1000, -1000, 19341,
	-1000, 18684, -1000, 18684, -1000, 18684, -1000, -1000, -1000, 45623,
	1937, -1000, 1461, -1000, 3531, -224, 2097, -1000, -42, -1000,
	-1000, -1000, 1076, 1303, -1000, -1000, -1000, -1000, -1000, -1000,
	1964, 45623, -1000, 417, -1000, -1000, -109, -120, 988, -1000,
	-1000, -1000, -1000, -1000, 1459, 1174, 1222, -1000, 45623, -1000,
	44966, -207, 862, 7161, -1000, 2096, 2091, 2508, -1000, -1000,
	-1000, -1000, -1000, -1000, -458, 1454, 267, -1000, -1000, 202,
	-1000, 18684, -1000, 18684, -1000, 1555, -1000, -1000, 2377, 103,
	-1000, 2543, -1000, 2539, 891, 891, -1000, 1081, -458, -1000,
	-1000, 1222, 1222, -1000, -246, -1000, -1000, -1000, -1000, -1000,
	433, 1167, -1000, -1000, -1000, -1000, -1000, 7161, -1000, -1000,
	-1000, 208, 208, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3039, 3037, 41, 6, 39, 38, 3035, 28, 100,
	211, 43, 203, 109, 3034, 187, 3033, 3032, 3031, 3030,
	3029, 3028, 2602, 2594, 2581, 3027, 3026, 3025, 3024, 3023,
	3022, 3021, 3020, 3019, 3018, 185, 177, 202, 3017, 3014,
	3012, 125, 191, 78, 81, 199, 3011, 3010, 82, 3009,
	3008, 3007, 198, 197, 194, 998, 3006, 193, 127, 49,
	3005, 3004, 3001, 3000, 2999, 2998, 2996, 2994, 2993, 2992,
	2991, 2990, 2989, 2988, 2986, 2985, 2984, 2983, 278, 2982,
	2981, 23, 2980, 93, 2979, 2978, 2977, 2976, 2975, 13,
	2973, 2972, 17, 42, 2971, 2967, 45, 2966, 2965, 2963,
	2962, 2961, 21, 2958, 24, 2957, 32, 2956, 2955, 134,
	2954, 2953, 2952, 44, 2951, 2950, 2949, 2948, 2944, 2940,
	2939, 150, 2938, 2937, 2936, 179, 205, 2935, 2934, 176,
	111, 118, 2933, 2931, 104, 200, 2930, 131, 2928, 2925,
	2921, 162, 2919, 2210, 2914, 2913, 66, 64, 2910, 86,
	2909, 2908, 12, 113, 68, 11, 9, 25, 2904, 2903,
	65, 76, 2898, 116, 2895, 2891, 110, 63, 2889, 105,
	99, 2888, 2886, 18, 10, 2883, 2, 7, 5, 70,
	2880, 2875, 123, 2874, 2872, 2871, 96, 2870, 2868, 4257,
	2867, 95, 142, 108, 77, 2865, 120, 56, 2862, 2861,
	2860, 2859, 2854, 51, 2853, 2852, 2851, 151, 163, 178,
	2850, 92, 286, 52, 140, 2849, 157, 75, 204, 181,
	2837, 2836, 146, 147, 2835, 2834, 60, 115, 139, 2827,
	107, 138, 130, 89, 102, 141, 2825, 2824, 57, 72,
	2823, 2822, 2821, 2820, 182, 2819, 2815, 71, 2813, 58,
	2812, 180, 2809, 84, 59, 2804, 119, 172, 2795, 73,
	2794, 2791, 67, 98, 69, 40, 2788, 171, 175, 135,
	170, 2787, 2786, 55, 2783, 2782, 2776, 201, 315, 2775,
	2772, 364, 184, 145, 159, 94, 2768, 362, 2765, 2764,
	101, 3380, 4669, 2763, 54, 173, 2761, 2758, 6210, 148,
	48, 29, 2756, 164, 2754, 2752, 2750, 2748, 208, 192,
	117, 174, 61, 2741, 2740, 2738, 20, 2733, 2727, 2724,
	2721, 2718, 2717, 91, 37, 36, 35, 219, 62, 15,
	103, 166, 165, 74, 2703, 2702, 2698, 132, 97, 2696,
	169, 168, 136, 154, 2685, 189, 152, 126, 2681, 88,
	34, 2680, 2678, 2676, 2675, 83, 2674, 2663, 2662, 2661,
	167, 156, 129, 79, 2653, 80, 128, 161, 155, 53,
	2650, 47, 2644, 2643, 33, 196, 30, 2642, 19, 122,
	160, 2641, 5061, 190, 2640, 22, 361, 158, 2639, 2638,
	8, 14, 16, 2634, 2630, 2628, 2627, 143, 2621, 2618,
	2615, 2607, 27, 50, 26, 3, 124, 90, 2596, 2595,
	153, 2585, 2579, 1, 0, 137, 2558, 209,
}

//line sql.y:8022
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	259, 382, 383, 383, 257, 257, 33, 73, 35, 35,
	34, 34, 37, 37, 36, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 107, 107, 23, 24,
	24, 24, 24, 415, 415, 184, 184, 182, 182, 183,
	183, 262, 262, 25, 266, 266, 268, 268, 268, 268,
	258, 258, 258, 26, 26, 267, 267, 269, 269, 269,
	272, 272, 272, 272, 311, 311, 311, 27, 27, 27,
	27, 27, 127, 127, 385, 385, 384, 378, 378, 377,
	377, 376, 381, 381, 380, 380, 379, 39, 40, 49,
	49, 49, 49, 50, 51, 386, 386, 351, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 353, 353, 339, 339, 352, 352,
	352, 352, 352, 352, 352, 338, 338, 138, 138, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 401, 401, 401, 400,
	400, 237, 237, 237, 237, 237, 237, 237, 237, 148,
	148, 160, 160, 160, 160, 160, 146, 146, 147, 145,
	145, 145, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 159, 159, 155, 155, 155, 156, 156, 156, 157,
	157, 402, 402, 402, 402, 316, 316, 316, 316, 319,
	319, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	318, 318, 318, 318, 318, 318, 318, 320, 320, 320,
	320, 320, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 322, 322,
	322, 322, 322, 322, 322, 322, 337, 337, 323, 323,
	331, 331, 332, 332, 333, 333, 333, 334, 334, 334,
	335, 335, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 330, 330, 329, 329, 329, 340, 365, 365, 364,
	364, 362, 362, 362, 362, 362, 362, 362, 362, 349,
	349, 359, 359, 359, 359, 359, 348, 348, 344, 344,
	344, 345, 345, 346, 346, 343, 343, 347, 347, 361,
	361, 360, 360, 341, 341, 342, 342, 367, 403, 403,
	403, 403, 403, 404, 404, 368, 393, 395, 395, 395,
	394, 394, 391, 392, 390, 390, 390, 390, 390, 83,
	83, 83, 285, 285, 286, 286, 357, 357, 356, 356,
	356, 358, 358, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 280, 280, 280, 389, 389, 389,
	389, 389, 389, 388, 388, 388, 354, 354, 354, 387,
	387, 58, 58, 217, 217, 406, 406, 407, 407, 407,
	46, 46, 46, 46, 46, 46, 45, 45, 45, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	47, 47, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	109, 109, 110, 110, 110, 110, 112, 112, 112, 370,
	370, 59, 59, 3, 3, 172, 174, 175, 175, 173,
	173, 173, 173, 173, 173, 61, 61, 60, 60, 177,
	176, 178, 178, 178, 1, 1, 2, 2, 4, 4,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 336, 336, 336, 369, 369, 371, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 115, 114,
	114, 113, 116, 116, 116, 116, 116, 116, 116, 116,
	373, 373, 373, 62, 62, 374, 324, 325, 326, 5,
	6, 350, 372, 123, 123, 29, 38, 38, 30, 30,
	30, 30, 31, 31, 63, 66, 66, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 279,
	279, 288, 288, 278, 278, 303, 303, 303, 281, 281,
	281, 282, 282, 399, 399, 399, 275, 275, 65, 65,
	65, 304, 304, 304, 304, 68, 68, 408, 408, 409,
	409, 410, 410, 410, 69, 70, 70, 306, 306, 307,
	307, 71, 72, 84, 84, 84, 84, 84, 84, 84,
	85, 85, 85, 85, 108, 108, 108, 15, 15, 15,
	15, 80, 80, 80, 14, 14, 17, 67, 67, 74,
	396, 396, 397, 398, 398, 398, 398, 75, 77, 32,
	32, 32, 32, 32, 32, 133, 133, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 128,
	128, 128, 122, 122, 416, 78, 79, 79, 126, 126,
	126, 119, 119, 119, 125, 125, 125, 16, 16, 18,
	261, 261, 19, 19, 130, 130, 132, 132, 132, 132,
	132, 134, 134, 134, 134, 134, 134, 134, 129, 129,
	131, 131, 131, 131, 296, 296, 296, 295, 295, 166,
	166, 168, 167, 167, 169, 169, 170, 170, 170, 170,
	215, 215, 192, 192, 254, 254, 255, 255, 253, 253,
	260, 260, 256, 256, 256, 256, 263, 263, 171, 171,
	171, 171, 179, 179, 180, 180, 181, 181, 305, 305,
	301, 301, 301, 300, 300, 185, 185, 185, 187, 186,
	186, 186, 186, 188, 188, 190, 190, 189, 189, 191,
	196, 196, 195, 195, 193, 193, 193, 193, 194, 194,
	194, 194, 197, 197, 143, 143, 143, 143, 143, 143,
	143, 158, 158, 158, 158, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 244, 244, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 152, 220, 220, 219,
	219, 86, 86, 86, 87, 87, 88, 88, 88, 88,
	88, 89, 89, 89, 89, 89, 144, 144, 91, 91,
	90, 90, 210, 210, 293, 293, 92, 93, 93, 96,
	96, 95, 94, 94, 100, 100, 97, 97, 99, 99,
	98, 101, 101, 102, 103, 103, 276, 276, 198, 198,
	206, 206, 206, 206, 199, 199, 199, 199, 199, 199,
	199, 207, 207, 207, 214, 208, 208, 204, 204, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 163, 163, 163, 163, 225, 225, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 151, 151, 164, 164, 164, 164, 165, 165,
	165, 165, 165, 165, 165, 313, 313, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 417, 417,
	327, 327, 327, 327, 205, 205, 205, 205, 205, 124,
	124, 124, 124, 124, 310, 310, 310, 314, 314, 314,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 315, 315, 223, 223, 120,
	120, 221, 221, 222, 224, 224, 216, 216, 216, 216,
	218, 218, 201, 201, 201, 226, 226, 227, 227, 104,
	105, 105, 106, 106, 228, 228, 230, 229, 229, 231,
	232, 232, 232, 233, 233, 234, 234, 234, 48, 48,
	48, 48, 48, 43, 43, 43, 43, 44, 44, 44,
	44, 135, 135, 135, 135, 137, 137, 136, 136, 81,
	81, 82, 82, 82, 141, 141, 142, 142, 142, 139,
	139, 140, 140, 251, 251, 235, 235, 235, 242, 242,
	242, 238, 238, 240, 240, 240, 241, 241, 241, 239,
	248, 248, 250, 250, 249, 249, 245, 245, 246, 246,
	247, 247, 247, 243, 243, 200, 200, 200, 200, 200,
	252, 252, 252, 252, 264, 264, 211, 211, 213, 213,
	212, 212, 162, 265, 265, 273, 270, 270, 271, 271,
	297, 297, 297, 274, 274, 287, 287, 283, 283, 284,
	284, 277, 277, 289, 289, 289, 76, 209, 209, 366,
	366, 363, 292, 292, 294, 294, 298, 298, 302, 302,
	299, 299, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 413, 414, 308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 1, 3, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 3, 3, 2, 2, 2, 1, 2,
	2, 0, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 1, 2, 0, 1, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	7, 5, 5, 5, 5, 5, 7, 7, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	3, 3, 0, 2, 2, 2, 2, 2, 2, 2,
	4, 4, 3, 0, 1, 4, 3, 4, 4, 3,
	3, 3, 2, 1, 3, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 5, 5, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 3, 2, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 4, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	1, 2, 3, 7, 0, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 7, 7, 6, 6,
	2, 2, 1, 6, 3, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 0,
	1, 1, 2, 2, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 5, 1, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	4, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	8, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 4, 6, 6, 6, 8, 6, 6, 4,
	4, 3, 4, 6, 6, 4, 4, 4, 6, 8,
	6, 4, 6, 6, 8, 10, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 4, 4, 4, 4, 4,
	6, 4, 6, 5, 9, 6, 9, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 6, 8, 10,
	12, 14, 6, 8, 8, 10, 12, 14, 6, 8,
	10, 12, 6, 8, 4, 4, 3, 4, 6, 6,
	4, 6, 4, 6, 8, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 5,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 2,
	1, 3, 0, 1, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -411, -78, -416, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -66,
	-64, -65, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	-9, -8, -13, 10, 11, -107, -34, 33, -39, -49,
	225, -50, -40, 226, -51, 228, 227, 265, 229, 377,
	258, 75, 313, 314, 316, 317, 318, 319, -108, 619,
	263, 264, 231, 37, 46, 34, 35, 38, 235, 271,
	272, 234, -10, -35, 9, -413, 12, 451, 260, 259,
	29, -12, 513, 87, -79, -412, 667, -251, -235, 23,
	34, 30, -234, -230, -126, -235, 21, 19, 8, -78,
	-78, -78, 13, 14, -78, -351, -353, 87, 159, 87,
	-78, -56, -55, -53, -52, -54, -57, 32, -46, -47,
	-375, -45, -42, 230, 227, 275, 123, 124, 265, 266,
	267, 229, 249, 264, 268, 263, 284, -41, 82, 34,
	513, 516, -358, 226, 232, 233, 228, 452, 126, 125,
	76, -355, 372, 546, 637, -57, 639, 101, 104, 638,
	45, 239, 640, 641, 642, 553, 643, 248, 644, 645,
	646, 647, 653, 594, 654, 655, 656, 127, 8, -78,
	-302, -298, 91, -291, 510, 251, 544, 545, 300, 82,
	42, 519, 369, 372, 546, 481, 637, 378, 313, 329,
	323, 486, 487, 488, 352, 344, 511, 547, 520, 303,
	252, 288, 631, 342, 135, 639, 307, 548, 266, 379,
	380, 549, 381, 101, 316, 418, 652, 306, 550, 650,
	104, 638, 321, 80, 480, 52, 634, 45, 261, 340,
	234, 336, 640, 289, 551, 522, 282, 126, 123, 659,
	37, 332, 51, 31, 649, 125, 50, 641, 150, 552,
	642, 553, 383, 359, 625, 49, 384, 267, 554, 85,
	272, 515, 310, 633, 385, 500, 333, 386, 299, 648,
	231, 555, 614, 606, 607, 387, 388, 626, 364, 360,
	365, 502, 556, 410, 485, 389, 610, 611, 666, 53,
	557, 558, 627, 124, 559, 79, 643, 81, 327, 328,
	560, 297, 250, 505, 506, 412, 356, 463, 470, 471,
	111, 112, 466, 113, 472, 114, 473, 474, 475, 464,
	115, 108, 465, 476, 477, 357, 358, 116, 478, 110,
	109, 467, 469, 117, 479, 248, 36, 390, 512, 301,
	59, 305, 276, 413, 47, 362, 663, 46, 621, 507,
	561, 624, 355, 351, 460, 54, 562, 563, 564, 565,
	482, 644, 354, 326, 350, 658, 4, 294, 483, 645,
	63, 233, 367, 366, 368, 283, 409, 347, 566, 567,
	568, 255, 83, 569, 337, 22, 570, 571, 391, 290,
	572, 57, 573, 574, 416, 264, 575, 55, 646, 40,
	576, 269, 660, 647, 577, 578, 579, 620, 580, 271,
	581, 393, 582, 608, 609, 392, 361, 363, 508, 278,
	394, 377, 236, 514, 583, 311, 331, 268, 651, 584,
	256, 496, 497, 498, 499, 632, 504, 503, 270, 275,
	263, 417, 257, 585, 586, 587, 588, 589, 304, 605,
	590, 591, 317, 653, 461, 44, 592, 593, 594, 595,
	596, 298, 293, 411, 420, 62, 84, 374, 597, 598,
	630, 325, 322, 291, 599, 314, 56, 654, 655, 656,
	285, 657, 489, 490, 491, 492, 10, 664, 665, 484,
	396, 127, 295, 296, 48, 348, 277, 600, 308, 601,
	338, 339, 353, 324, 349, 617, 315, 615, 279, 397,
	462, 265, 602, 419, 292, 370, 375, 309, 518, 501,
	284, 398, 629, 517, 493, 494, 346, 343, 286, 495,
	603, 619, 399, 240, 280, 281, 604, 616, 400, 401,
	302, 402, 403, 404, 405, 406, 408, 312, 407, 618,
	612, 613, 287, 516, 320, 341, 376, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 459, 238, -78, 238, -189,
	-298, 238, 177, -270, 380, -288, 382, 395, 390, 400,
	388, -279, 391, 393, 278, -399, 410, 238, 397, 225,
	383, 392, 401, 402, 302, 408, 403, 312, 407, 287,
	404, 405, 406, -382, 177, 642, 657, 135, 345, 387,
	385, 411, 621, 91, -304, 91, 92, 93, -291, 315,
	-306, 320, -292, -382, -291, 318, -78, -78, -308, -308,
	-128, 621, 623, -208, -143, 143, -158, -161, -149, -153,
	-202, -203, -204, -205, -159, -218, -257, 166, 167, 174,
	144, -214, -162, 27, 509, 453, 452, 177, 32, -152,
	220, 69, 70, 455, 146, 58, 12, 428, 429, -160,
	423, 430, 425, 480, 482, 483, 484, 481, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 485, 457,
	458, 118, 459, 108, 110, 109, 460, 461, 462, 342,
	507, 508, 502, 505, 506, 504, 503, 357, 358, 463,
	464, 465, 111, 112, 113, 114, 115, 116, 117, 466,
	469, 467, 468, 470, 471, 472, 477, 478, 473, 474,
	475, 476, 479, 368, 366, 367, 363, 362, 361, -88,
	-100, 535, 534, -101, -150, -151, -164, -165, -292, -298,
	243, 422, 237, 172, 451, -154, -147, -216, 107, 92,
	93, -8, -212, 421, 426, 427, 431, 424, 521, 523,
	538, 539, 541, 526, 531, 530, 533, 496, 497, 498,
	499, 500, 501, 606, 607, 608, 609, 610, 611, 612,
	613, -382, -291, 91, -156, -155, -198, 94, 99, 102,
	103, 105, -405, 261, 338, 339, 119, -413, 635, 90,
	95, 96, 97, 98, 120, 121, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 45, 396,
	396, -189, -78, -78, -78, -78, -228, -126, -230, -10,
	-8, -413, 9, -78, -8, -9, -13, -35, -37, 540,
	-36, -298, 100, -235, -251, 13, 162, 43, 51, -233,
	-234, -12, -8, -143, 20, 24, 25, -131, 168, -143,
	-298, -131, -277, 242, -78, -78, -266, -311, 315, -268,
	411, 621, 410, -258, -271, 91, -257, -270, 409, -352,
	159, -338, -342, -292, 253, -368, 249, -189, -361, -360,
	-292, -413, -127, -287, 239, 247, 246, 136, -386, 139,
	295, 422, 237, -52, -53, -54, -270, 176, 641, -109,
	270, 274, 88, 88, -342, -341, -340, -387, 274, 253,
	-367, -359, 245, 254, -348, 246, 247, -343, 239, 137,
	-387, -343, 244, 254, 249, 253, 274, 274, 127, 274,
	127, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	269, -349, 151, -349, 517, 517, -355, -387, 249, 239,
	-387, -387, 245, -289, -343, 241, 26, 241, 36, 36,
	-349, -349, -349, -270, 176, -349, -349, -349, -349, 282,
	282, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, 238, -386,
	-135, 407, 302, 82, -55, 284, -38, -189, -287, 239,
	240, -386, 271, -189, 221, -189, 624, -281, 159, 16,
	-281, -278, 396, 394, 381, 386, -281, -281, -281, -281,
	285, 379, -344, 239, 36, 250, 396, 285, 379, 285,
	286, 285, 286, 389, 399, 285, -303, 15, 162, 422,
	384, 388, 278, 238, 279, 240, 398, 286, -303, 90,
	-282, 159, 285, 396, 281, -281, -281, -309, -413, -294,
	-292, -290, 230, 24, 142, 26, 28, 145, 177, 130,
	20, 146, 38, 232, 345, 249, 176, 245, 452, 225,
	73, 521, 423, 425, 421, 428, 454, 455, 422, 382,
	32, 14, 523, 29, 259, 25, 39, 170, 227, 149,
	524, 262, 27, 260, 118, 121, 526, 23, 76, 254,
	15, 247, 41, 17, 527, 528, 18, 243, 242, 162,
	239, 71, 12, 220, 30, 158, 67, 529, 137, 530,
	531, 532, 533, 131, 69, 159, 21, 661, 426, 427,
	34, 622, 509, 273, 172, 74, 60, 623, 143, 424,
	534, 535, 119, 536, 122, 77, 628, 139, 19, 72,
	43, 537, 274, 538, 244, 662, 539, 414, 540, 160,
	228, 451, 70, 161, 635, 541, 636, 237, 395, 9,
	456, 33, 258, 246, 129, 68, 542, 238, 148, 457,
	458, 241, 132, 120, 8, 136, 35, 13, 75, 78,
	429, 430, 431, 58, 128, 513, 147, 16, 543, 415,
	141, -382, 624, -309, -309, 33, 92, -408, -409, -410,
	513, 414, 241, -292, -189, -84, 614, 229, -85, 620,
	24, 236, -133, 396, -121, 177, 642, 625, 626, 627,
	624, 393, 632, 630, 628, 285, 629, 88, 139, 141,
	142, 4, -143, 158, -199, 151, 152, 153, 154, 155,
	156, 157, 162, 143, 145, 159, -244, 140, 163, 164,
	165, 166, 167, 168, 169, 171, 170, 172, 173, 160,
	161, 176, 223, 224, -153, -153, -153, -153, -214, -220,
	-219, -413, -216, -382, -291, -298, -413, -413, -153, -276,
	-413, -413, -149, -413, -413, -413, -223, -143, -413, -413,
	-417, -413, -417, -417, -327, -413, -327, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, 221,
	-413, -413, -413, -413, -413, -327, -327, -327, -327, -327,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, 103, 99, 102, 94, -218, 105,
	90, 90, 90, 90, -8, -9, -208, -413, -308, -396,
	-397, -192, -189, -413, 302, -292, -292, 271, -233, -12,
	-8, -228, -234, -230, -8, -78, -119, -132, 64, 65,
	-134, 25, 39, 68, 66, 24, -414, 89, -414, -251,
	-414, 88, -37, -254, 87, 62, 44, 90, 90, 88,
	22, -229, -231, -143, 15, -296, 4, -295, 26, -292,
	90, 221, 15, -190, 30, -189, -277, -277, 88, 91,
	315, -267, -269, 412, 414, 151, -297, -292, 90, 32,
	89, 88, -189, -316, -319, -321, -320, -322, -317, -318,
	342, 343, 177, 346, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 359, 33, 261, 338, 339, 340, 341,
	360, 361, 362, 363, 365, 366, 367, 368, 323, 344,
	511, 324, 325, 326, 327, 328, 329, 331, 332, 335,
	333, 334, 336, 337, -383, -382, 87, 89, 88, -323,
	87, -143, -135, 238, -382, 239, 239, 239, -78, 451,
	-349, -349, -349, 269, 20, -45, -42, -375, 19, -41,
	-42, 230, 123, 124, 227, 87, -338, 87, -347, -383,
	-382, 87, 137, 244, 136, -346, -343, -346, -347, -382,
	-216, -382, 137, 137, -382, -382, -263, -292, -263, -263,
	24, -263, 24, -263, 24, 96, -292, -263, 24, -263,
	24, -263, 24, -263, 24, -263, 24, 32, 79, 80,
	81, 32, 83, 84, 85, -216, -382, -382, -216, -338,
	-216, -189, -382, -270, 96, 96, 96, -349, -349, 96,
	90, 90, 90, -349, -349, 96, 90, -300, -298, 90,
	90, -388, 255, 299, 301, 96, 96, 96, 96, 32,
	90, -389, 32, 649, 648, 650, 651, 652, 90, 96,
	32, 96, 32, 96, -292, 87, -189, -141, 289, 225,
	227, 230, 77, 90, 305, 306, 303, 308, 309, 151,
	45, 88, 241, 238, -382, -283, 243, -283, -292, -299,
	-298, -290, 241, 378, 90, -143, -345, 15, 162, -303,
	-303, -281, -189, -345, -303, -281, -189, -281, -281, -281,
	-281, -303, -303, -303, -281, -298, -298, -189, -189, -189,
	-189, -189, -189, -189, -309, -282, -281, 624, 90, -275,
	15, 77, -309, -309, 88, 321, 415, 416, -307, 318,
	-80, -292, 90, -15, -11, -23, -22, -24, 151, -15,
	88, 513, -182, -189, 624, 624, 624, 624, 624, 624,
	-143, -143, -143, -143, 536, -206, 119, 143, 120, 121,
	-161, -207, -212, -214, 106, 162, 145, 159, -244, -149,
	-153, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -149, -149, -149, -310, -292, 90, 177, -157, -156,
	105, -405, -157, 510, 88, -219, 221, -143, -143, -382,
	-143, -292, -129, -131, -129, -143, -221, -222, 147, -216,
	-143, -414, -414, 96, 105, 168, -125, 25, 39, -125,
	-125, -125, -125, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -125, -292, -292, -118, -117, 433, 434,
	435, 436, 438, 439, 440, 443, 444, 448, 449, 432,
	450, 437, 442, 445, 446, 447, 441, 341, -143, -143,
	-143, -143, -143, -143, -86, -143, 130, 131, 132, -208,
	-143, -149, -143, -143, -143, -414, -143, -143, -143, -209,
	-208, -381, -380, -379, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -208, -208, -208,
	-208, -208, -143, -414, -143, -163, -147, 96, -259, 105,
	92, -143, -143, -130, -129, -294, -299, -290, -291, -129,
	-130, -130, -129, -129, -143, -143, -143, -143, -143, -143,
	-143, -143, -414, -143, -143, -143, -143, -143, -251, -414,
	-208, 88, -398, 414, 415, 622, -301, 274, -300, 26,
	-209, 90, 15, -261, 78, -292, -233, -233, 64, 65,
	60, -129, -134, -414, -36, 26, -253, -292, 63, 90,
	-328, -270, 369, 370, 177, -143, -143, 88, -232, 28,
	29, -189, -295, 168, -299, -189, -262, 274, -189, -167,
	-169, -170, -171, -192, -215, -413, -172, -8, 532, 529,
	15, -182, -183, -191, -298, -268, -311, -267, 88, 413,
	415, 416, 77, 122, -143, -329, 176, -357, -356, -355,
	-338, -340, -341, -342, 89, -329, -334, 375, 374, -323,
	-323, -323, -323, -323, -328, -328, -328, -328, 87, 87,
	-323, -323, -323, -323, -331, 87, -331, -331, -332, -331,
	87, -332, -333, 87, -333, -368, -143, -365, -364, -362,
	-363, 248, 101, 604, 560, 513, 553, 594, 78, -360,
	-232, 96, -414, -141, -284, 243, -366, -363, -382, -382,
	-382, -284, 91, 90, 91, 90, 91, 90, -110, -59,
	-1, 661, 662, 663, 88, 20, -339, -338, -58, 299,
	-371, -372, 274, -367, -361, -347, 137, -346, -347, -347,
	-382, 88, 30, 127, 127, 127, 127, 513, 227, 33,
	-285, 552, 143, 604, 560, -338, -58, 241, 241, -310,
	-310, -310, 90, 90, -280, 657, -182, -137, 291, 151,
	280, 280, 238, 238, 293, -189, 304, 307, 305, 306,
	303, 308, 309, 24, 24, 24, 24, 24, 292, 294,
	296, 282, -189, -189, -283, 77, -184, -189, 27, -298,
	90, 90, -189, -281, -281, -189, -281, -281, -189, -410,
	322, -292, 356, 615, 616, 618, 617, -121, 414, 88,
	513, 23, -122, 23, -413, 119, 120, 121, -207, -149,
	-153, -149, 142, 262, -413, -216, -414, -294, 26, 88,
	78, -414, 88, 88, -414, -414, 88, 15, -224, -222,
	149, -143, -414, 88, -414, -414, -414, -208, -143, -143,
	-143, -143, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -208, 88, 88, 15, -314, 26, -414, -414,
	-414, -414, -414, -223, -414, 15, -414, 78, 88, 162,
	88, -414, -414, -414, 88, 88, -414, -414, 88, 88,
	-414, 88, 88, 88, -414, 88, 88, 88, 88, -414,
	-414, -414, -414, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -414, -414, -414, -414, -414, -414, 88,
	-93, 537, -414, -414, 88, -414, 88, -414, -413, 221,
	-414, -414, -414, -414, -414, 88, 88, 88, 88, 88,
	88, -414, -414, -414, 88, 88, -414, 88, -414, 88,
	-414, -397, 621, 415, -196, -195, -193, 75, 242, 76,
	-413, -300, -414, -157, -259, -260, -259, -201, -292, 96,
	105, -235, -166, -168, 15, -134, -214, 89, 88, -328,
	-239, -245, -278, -292, 90, 177, -330, 177, -330, 369,
	370, -231, 221, -197, 16, -200, 33, 58, -11, -413,
	-413, 33, 88, -185, -187, -186, -188, 67, 71, 73,
	68, 69, 70, 74, -305, 26, -8, -167, -8, -413,
	-189, -182, -415, 15, 78, -415, 88, 221, -269, -272,
	417, 414, 420, -382, 90, -109, 88, -355, -342, -236,
	-138, 41, -335, 376, -328, 520, -328, -337, 90, -337,
	96, 96, 96, 89, -48, -43, -44, 34, 82, -362,
	-349, 90, 40, -349, -349, -292, 89, -232, -137, -189,
	143, 77, -366, -366, -366, -298, -2, 660, 666, 137,
	87, 381, 19, -253, 88, 89, -217, 300, 89, -111,
	-292, 89, 87, -347, -347, -292, -413, 238, 32, 32,
	604, 560, 552, -58, -217, -216, -382, -329, 659, 658,
	89, 240, 298, -142, 428, -139, 90, 91, -189, -189,
	-189, -189, -189, 230, 227, 404, -406, 310, -406, 283,
	241, -182, -189, 88, -83, 257, 252, -303, -303, 34,
	-189, 414, 633, 631, -143, 142, 262, -161, -153, -149,
	-312, 177, 342, 261, 340, 336, 356, 347, 374, 338,
	375, 333, 332, 331, -312, -310, -208, -131, -143, -143,
	150, -143, 148, -143, -414, -414, -414, -414, -414, -228,
	-143, -143, -143, -414, 177, 342, 15, -143, -310, -143,
	-143, -143, -143, -143, -379, -143, -208, -143, -208, -143,
	-143, -143, -143, -143, -380, -380, -380, -380, -380, -208,
	-208, -208, -208, -143, -413, -292, -96, -95, -94, 587,
	242, -93, -163, -96, -163, -130, -294, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -193, -343, -343,
	-343, -263, 88, -274, 23, 15, 58, 58, -166, -197,
	-167, -134, -292, -242, 614, -248, 47, -246, -247, 48,
	-243, 49, 57, -330, -330, 168, -233, -143, -264, 77,
	-265, -273, -216, -211, -213, -212, -413, -252, -414, -292,
	-263, -265, -169, -170, -170, -169, -170, 67, 67, 67,
	72, 67, 72, 67, -186, -298, -414, -143, -301, 78,
	-167, -167, -191, -298, 168, 414, 418, 419, -355, -404,
	119, 143, 32, 77, 372, 101, -402, 176, 549, 599,
	604, 560, 553, 594, -403, 244, 136, 137, 256, 26,
	42, 89, 88, 89, 88, 89, 89, 88, -286, -285,
	-44, -43, -349, -349, 96, -382, 90, 90, 240, 27,
	-189, 77, 77, 77, -112, 664, 96, 87, -3, 82,
	-143, 87, 20, -338, -216, -373, -324, -374, -325, -326,
	-5, -6, -350, -115, 58, 101, -62, 45, 239, 644,
	645, 127, -413, 657, -365, -253, -369, -371, -189, -146,
	-413, -145, -147, -154, 166, 167, 261, 338, 339, -217,
	-189, -136, 289, 297, 87, -140, 92, -385, 78, 280,
	372, 280, 90, -407, 311, 90, -407, -189, -83, -48,
	-189, -281, -281, 34, -382, -414, -161, -153, -124, 162,
	513, -315, 519, -323, -323, -323, -333, -323, 328, -323,
	328, -323, -414, -414, -414, 88, -414, 23, -414, -143,
	88, -120, 456, 88, 88, -414, 87, 87, -143, -414,
	-414, -414, 88, -414, -414, -414, -414, -414, 88, -414,
	-414, -414, 88, -313, 605, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -92, -293, -292, -93,
	569, 569, -414, -93, -225, 88, -414, -414, 88, -414,
	88, 88, -414, 88, -414, 88, -414, -414, -414, -414,
	88, -194, 23, -194, -194, -414, -259, -189, -197, -226,
	17, -239, 52, 348, -250, -249, 56, 48, -247, 20,
	50, 20, 31, -264, 88, 151, 88, -414, -414, 88,
	58, 221, -414, -197, -180, -179, 77, 78, -181, 77,
	-179, 67, 67, -254, 88, -262, -167, -197, -197, 221,
	119, -413, -148, -160, -146, 13, 90, 90, -382, -401,
	648, 649, 32, 96, -349, -349, 137, 137, -189, 87,
	-328, 90, -328, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -189, -189, -189, -189, -370, 87, 20,
	-143, 87, 151, 89, -253, -253, 276, 162, -349, 642,
	282, 282, -349, -349, -349, -114, -113, 664, 89, -414,
	88, -336, 513, 516, -143, -155, -155, -254, 89, -378,
	513, -384, -292, -292, -292, -292, 96, 98, -414, 511,
	74, 514, -414, -328, -143, -143, -143, -233, 90, -143,
	-143, 96, 96, -414, -143, -208, -143, -414, -177, -176,
	-178, 625, 119, 32, -312, -414, -210, 274, -99, -98,
	-97, 15, -414, -143, -143, -143, -143, -143, -143, -143,
	-413, 67, 19, 17, -413, -413, -301, -226, -227, 18,
	20, -240, 54, -238, 53, -238, -249, 20, 20, 90,
	20, 90, 137, -273, -143, -213, 58, -11, -292, -211,
	-292, -228, -143, 87, -143, -157, -197, -197, -143, -203,
	480, 482, 483, 484, 481, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 485, 459, 108, 110, 109,
	460, 461, 462, 342, 507, 508, 502, 505, 506, 504,
	503, 357, 358, 463, 464, 465, 111, 112, 113, 114,
	115, 116, 117, 466, 469, 467, 470, 471, 472, 477,
	478, 473, 474, 475, 476, 479, 368, 366, 367, 363,
	362, 361, 496, 497, 498, 499, 500, 501, 606, 607,
	608, 609, 610, 611, 612, 613, 90, 90, 87, -143,
	89, 89, -254, -369, -59, 89, -255, -253, 96, 89,
	277, -212, -413, 90, -349, -349, -349, 96, 96, -300,
	-414, 88, -292, -403, -371, 517, 517, -414, 26, -377,
	-376, -294, 87, 78, 63, 512, 515, -414, -414, 88,
	-414, -414, -414, 89, 89, -414, -414, -414, 88, -414,
	-176, -178, -414, 77, -157, -228, 20, -96, 299, 301,
	-96, -414, 88, -414, -414, 88, -414, 88, -414, -414,
	-256, -414, -292, 244, 20, 20, -256, -256, -196, -227,
	-106, -105, -104, 543, -143, -208, -241, 55, 77, 122,
	90, 90, 90, 13, -211, 221, -233, -253, -174, 381,
	-228, -414, -253, 89, 26, 89, 666, 137, 89, -212,
	-123, -413, 273, -300, 90, 90, -113, -116, -11, 88,
	151, -253, -189, 63, -143, -208, -414, 77, 524, 625,
	-91, -90, -87, 636, 662, -208, -93, -93, -143, -143,
	-143, 88, -414, -414, -414, -106, 88, -103, -102, -292,
	77, 122, -265, -292, 89, -414, -413, -233, 89, -237,
	-11, 87, -3, 273, -324, -374, -325, -326, -5, -6,
	-350, -81, 513, -376, -354, -294, 90, 96, 89, 513,
	-414, -414, -89, 145, 634, 602, -144, -155, -152, 220,
	-414, 88, -414, 88, -414, 88, -292, 244, -104, 88,
	26, -301, -175, -173, -292, 566, -394, -393, 509, -404,
	-400, 119, 143, 101, -402, 604, 560, 128, 129, -81,
	-143, 87, -414, -82, 288, 621, -385, 514, -89, 635,
	580, 555, 580, 555, -143, -143, -143, -102, -413, -414,
	88, 23, -316, -61, 577, -391, -392, 77, -395, 387,
	576, 597, 119, 90, 89, -253, 249, -378, 515, 142,
	-414, 88, -414, 88, -414, -92, -173, 573, -329, -157,
	-392, 77, -391, 77, 14, 13, -4, 665, 89, 290,
	-89, -143, -143, -414, -60, 27, -174, -390, 257, 252,
	255, 33, -390, 96, -4, -414, -414, 577, 251, 32,
	119, -157, -177, -176, -176,
}

var yyDef = [...]int{
	874, -2, -2, 876, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	71, 73, 74, 874, 874, 874, 0, 874, 0, 0,
	874, -2, -2, 874, 1488, 0, 874, 0, 0, 0,
	-2, 789, 795, 0, 804, -2, 0, 0, 874, 874,
	2045, 2045, 869, 0, 0, 0, 0, 0, 874, 874,
	874, 874, 1354, 51, 874, 0, 86, 87, 824, 825,
	826, 66, 0, 2043, 875, 1, 3, 72, 76, 0,
	0, 0, 59, 1363, 0, 79, 0, 0, 878, 0,
	0, 1471, 874, 874, 0, 127, 128, 0, 0, 0,
	-2, 131, -2, 160, 161, 162, 0, 167, 600, 523,
	575, 521, 560, -2, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 399, 399,
	0, 0, -2, 509, 509, 509, 1473, 0, 0, 0,
	557, 461, 399, 399, 399, 0, 399, 399, 399, 399,
	0, 0, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 1381,
	166, 1489, 1486, 1487, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 0, 1465, 0, 713,
	977, 0, 0, 778, 778, 0, 778, 778, 778, 778,
	0, 0, 0, 727, 0, 0, 0, 0, 775, 0,
	743, 744, 0, 775, 0, 750, 781, 0, 0, 756,
	778, 778, 759, 2046, 0, 2046, 2046, 1456, 0, 772,
	770, 784, 785, 41, 788, 791, 792, 793, 794, 797,
	0, 808, 811, 1482, 1483, 0, 813, 820, 837, 838,
	0, 870, 871, 46, 1125, 0, 999, 1004, 1015, 1030,
	1031, 1032, 1033, 1034, 1036, 1037, 1038, 0, 0, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 1106, 1052,
	0, 0, 0, 0, 1327, 0, 0, 1288, 1288, 1140,
	1288, 1290, 1290, 1691, 1827, 1835, 1956, 1652, 1658, 1659,
	1660, 1949, 1950, 1951, 1952, 1991, 1992, 1996, 1751, 0,
	0, 0, 2042, 1788, 1796, 1797, 1821, 1921, 1977, 1670,
	1816, 1885, 1748, 1770, 1771, 1903, 1904, 1792, 1793, 1774,
	1786, 1789, 1777, 1778, 1780, 1782, 1787, 1794, 1800, 1779,
	1799, 1798, 0, 1775, 1776, 1781, 1791, 1795, 1783, 1784,
	1785, 1790, 1801, 1841, 1840, 1839, 1884, 1812, 1883, 0,
	0, 0, 0, 0, 1227, 1228, 1229, 1230, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 1340, 1341, 44,
	45, 1124, 1452, 1290, 1290, 1290, 1290, 1290, 1066, 1067,
	1068, 1069, 1070, 1094, 1095, 1101, 1102, 1898, 1899, 1900,
	1901, 1732, 1986, 1740, 1741, 1880, 1881, 1753, 1754, 2017,
	2018, -2, -2, -2, 232, 233, 234, 235, 236, 237,
	238, 239, 0, 1695, 1967, 1968, 228, 0, 0, 296,
	297, 293, 294, 295, 1108, 1109, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
	273, 274, 275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 285, 286, 287, 288, 289, 290, 2045, 0,
	847, 0, 0, 0, 0, 0, 1363, 0, 1355, 1354,
	64, 0, 874, -2, 0, 0, 0, 0, 48, 0,
	53, 934, 877, 78, 77, 1403, 0, 0, 0, 60,
	1364, 68, 70, 1365, 0, 879, 880, 0, 910, 914,
	0, 0, 0, 1472, 1471, 1471, 103, 0, 0, 104,
	124, 125, 126, 0, 0, 110, 111, 1458, 1459, 0,
	0, 178, 179, 0, 42, 426, 0, 174, 0, 419,
	358, 0, 1381, 0, 0, 0, 0, 0, 874, 0,
	1466, 155, 156, 163, 164, 165, 399, 399, 399, 572,
	0, 0, 166, 166, 530, 531, 532, 0, 0, -2,
	424, 0, 510, 0, 0, 413, 413, 417, 415, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	661, 0, 400, 0, 570, 571, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 1474, 1475, 0, 547, 548,
	0, 0, 0, 399, 399, 0, 0, 0, 0, 399,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	1394, 0, 0, 0, -2, 0, 705, 0, 0, 0,
	1467, 1467, 0, 712, 0, 714, 0, 717, 0, 0,
	718, 0, 775, 775, 773, 774, 720, 721, 722, 723,
	778, 0, 0, 408, 409, 410, 775, 778, 0, 778,
	778, 778, 778, 775, 775, 775, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2046, 781, 778, 0,
	751, 0, 752, 753, 754, 757, 758, 760, 2047, 2048,
	1484, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 2046, 2046, 764, 768, 1457, 790, 796, 798, 799,
	0, 0, 809, 812, 831, 50, 1739, 819, 50, 821,
	822, 823, 849, 850, 855, 0, 0, 0, 0, 861,
	862, 863, 0, 0, 866, 867, 868, 0, 0, 0,
	0, 0, 997, 0, 0, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1016,
	1017, 0, 0, 0, 1039, 1040, 1041, 1042, 1045, 0,
	1057, 0, 1059, 1336, -2, 0, 0, 0, 1050, 1051,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	1138, 0, 1139, 1141, 1142, 0, 1143, 884, 884, 884,
	884, 884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1477, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 894, 0,
	0, 894, 894, 0, 0, 221, 222, 223, 224, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 241, 242, 243, 244, 245,
	298, 246, 247, 248, 1124, 0, 0, 0, 47, 839,
	840, 0, 960, 1477, 0, 0, 890, 0, 58, 67,
	69, 1363, 62, 1363, 0, 896, 0, 0, -2, -2,
	897, 903, 904, 905, 906, 907, 55, 2044, 56, 0,
	75, 0, 49, 0, 0, 0, 0, 372, 1406, 0,
	0, 1356, 1357, 1360, 0, 911, 1833, 915, 0, 917,
	918, 0, 0, 101, 0, 976, 0, 0, 0, 112,
	0, 114, 115, 0, 0, 0, 383, 1460, 1461, 1462,
	-2, 406, 0, 383, 367, 306, 307, 308, 358, 310,
	358, 358, 358, 358, 372, 372, 372, 372, 341, 342,
	343, 344, 345, 0, 0, 327, 358, 358, 358, 358,
	348, 349, 350, 351, 352, 353, 354, 355, 311, 312,
	313, 314, 315, 316, 317, 318, 319, 360, 360, 360,
	360, 360, 364, 364, 0, 43, 0, 387, 0, 1360,
	0, 0, 1394, 1469, 1479, 0, 0, 0, 1469, 133,
	0, 0, 0, 573, 611, 524, 561, 574, 0, 527,
	528, -2, 0, 0, 509, 0, 511, 0, 407, 0,
	-2, 0, 417, 0, 413, 417, 414, 417, 405, 418,
	551, 552, 553, 0, 555, 556, 641, 946, 0, 0,
	0, 0, 0, 647, 648, 649, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 0, 0, 0, 511,
	0, 558, 0, 0, 463, 464, 465, 0, 0, 468,
	469, 470, 471, 0, 0, 474, 475, 476, 963, 964,
	477, 478, 503, 504, 505, 479, 480, 481, 482, 483,
	484, 485, 497, 498, 499, 500, 501, 502, 486, 487,
	488, 489, 490, 491, 494, 0, 148, 1385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 0, 0, 0, 893, 978,
	1490, 1491, 0, 0, 779, 780, 0, 411, 412, 778,
	778, 724, 765, 0, 778, 728, 766, 729, 731, 730,
	732, 745, 746, 778, 735, 776, 777, 736, 737, 738,
	739, 740, 741, 742, 761, 747, 748, 749, 782, 0,
	786, 787, 762, 763, 0, 0, 802, 803, 0, 810,
	834, 832, 833, 835, 827, 828, 829, 830, 0, 836,
	0, 0, 852, 97, 857, 858, 859, 860, 872, 865,
	1126, 994, 995, 996, 0, 998, 1001, 0, 1110, 1112,
	1003, 1005, 1121, 1122, 1123, 0, 0, 0, 0, 0,
	1009, 1013, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1035, 1304, 1305, 1306, 1054, 299,
	300, 0, 1055, 0, 0, 0, 0, 0, 0, 0,
	1125, 1056, 0, 908, 0, 0, 1334, 1331, 0, 0,
	0, 1289, 1291, 0, 0, 0, 0, 885, 886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1307, 0,
	0, 0, 0, 0, 1327, 0, 1061, 1062, 1063, 0,
	0, 0, 0, 0, 0, 1181, 0, 0, 0, 0,
	1478, 0, 143, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1231, 1232, 1233, 1234,
	40, 0, 0, 0, 895, 1338, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1256, 0, 0, 0, 0, 0, 0, 1450,
	0, 0, 842, 843, 845, 0, 980, 0, 961, 0,
	0, 848, 0, 889, 0, 892, 61, 63, 901, 902,
	0, 919, 898, 57, 52, 0, 0, 938, 1404, 372,
	1426, 0, 381, 381, 378, 1366, 1367, 0, 1359, 1361,
	1362, 80, 916, 912, 0, 992, 0, 0, 975, 0,
	922, 924, 925, 926, 958, 0, 929, 930, 0, 0,
	0, 0, 0, 99, 977, 105, 0, 113, 0, 0,
	118, 119, 106, 107, 108, 109, 0, 600, -2, 458,
	180, 182, 183, 184, 175, -2, 370, 368, 369, 309,
	372, 372, 335, 336, 337, 338, 339, 340, 0, 0,
	328, 329, 330, 331, 320, 0, 321, 322, 323, 362,
	0, 324, 325, 0, 326, 425, 0, 1368, 388, 389,
	391, 399, 0, 394, 395, 0, 399, 399, 0, 420,
	421, 0, 1360, 1385, 0, 0, 0, 1480, 1479, 1479,
	1479, 0, 168, 169, 170, 171, 172, 173, 636, 0,
	0, 612, 634, 635, 166, 0, 0, 176, 513, 512,
	0, 668, 0, 423, 0, 0, 417, 417, 402, 403,
	554, 0, 0, 643, 644, 645, 646, 0, 0, 0,
	540, 452, 0, 541, 542, 511, 513, 0, 0, 383,
	466, 467, 472, 473, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 587, 588, 589, 592,
	594, 515, 598, 591, 593, 595, 515, 599, 1382, 1383,
	1384, 0, 0, 706, 0, 0, 449, 95, 1468, 711,
	715, 716, 775, 734, 767, 775, 726, 733, 755, 800,
	801, 806, 814, 815, 816, 817, 818, 856, 0, 0,
	0, 0, 864, 0, 0, 1002, 1111, 1113, 1006, 0,
	1010, 1014, 0, 0, 0, 1060, 1058, 1338, 0, 0,
	0, 1107, 0, 0, 1129, 1130, 0, 0, 0, 1332,
	0, 0, 1136, 0, 1292, 1293, 1144, 0, 0, 0,
	0, 0, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1354, 0, 0, 0, 0, 0, 1165, 1166,
	1167, 1168, 1169, 0, 1171, 0, 1172, 0, 0, 0,
	0, 1179, 1180, 1182, 0, 0, 1185, 1186, 0, 0,
	1187, 0, 0, 0, 1191, 0, 0, 0, 0, 1200,
	1201, 1202, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 1215, 1216, 1217, 1218, 1219, 0,
	1221, 0, 1089, 0, 0, 1089, 0, 1127, 894, 0,
	1294, 1295, 1296, 1297, 1298, 0, 0, 0, 0, 0,
	0, 1254, 1255, 1257, 0, 0, 1260, 0, 1262, 0,
	1451, 841, 844, 846, 932, 981, 982, 0, 0, 0,
	0, 962, 1476, 887, 888, 891, 940, 0, 1342, 0,
	0, 919, 992, 920, 0, 899, 54, 935, 0, 1408,
	1407, 1420, 1433, 381, 381, 375, 376, 382, 377, 379,
	380, 1358, 0, 1363, 0, 1444, 0, 0, 1436, 0,
	0, 0, 0, 0, 0, 0, 0, 965, 0, 0,
	968, 0, 0, 0, 0, 959, 930, 0, 931, 0,
	-2, 0, 0, 93, 94, 0, 0, 0, 116, 117,
	0, 0, 123, 384, 385, 157, 166, 460, 181, 433,
	0, 0, 305, 371, 332, 333, 334, 0, 356, 0,
	0, 0, 0, 454, 129, 1372, 1371, 399, 399, 390,
	0, 393, 0, 0, 0, 1481, 359, 422, 0, 147,
	0, 0, 0, 0, 0, 153, 606, 0, 0, 613,
	0, 0, 0, 522, 0, 533, 534, 0, 640, -2,
	702, 387, 0, 401, 404, 947, 0, 0, 535, 0,
	538, 539, 453, 513, 544, 545, 559, 546, 495, 496,
	493, 0, 0, 1395, 1396, 1401, 1399, 1400, 134, 580,
	582, 581, 585, 0, 0, 0, 517, 0, 517, 578,
	0, 449, 1368, 0, 710, 450, 451, 778, 778, 851,
	98, 0, 854, 0, 0, 0, 0, 1007, 1011, 1299,
	1325, 358, 358, 1312, 358, 364, 1315, 358, 1317, 358,
	1320, 358, 1323, 1324, 0, 0, 0, 909, 0, 0,
	1135, 1335, 0, 0, 1145, 1146, 1147, 1148, 1149, 1329,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 146, 0, 0, 0, 0,
	0, 0, 1265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 1088, 0, 1090, 1091, 0,
	0, 1223, 0, 0, 1235, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 983, 988, 988,
	988, 0, 0, 0, 1463, 1464, 1343, 1344, 992, 1345,
	921, 900, 939, 1426, 0, 1419, 0, -2, 1428, 0,
	0, 0, 1434, 373, 374, 913, 81, 993, 84, 0,
	1444, 1453, 0, 1435, 1446, 1448, 0, 0, 0, 1440,
	0, 992, 923, 954, 956, 0, 951, 966, 967, 969,
	0, 971, 0, 973, 974, 934, 928, 0, 101, 0,
	992, 992, 100, 0, 979, 120, 121, 122, 459, 185,
	190, 0, 0, 0, 195, 0, 197, 0, 0, 0,
	202, 203, 399, 399, 434, 0, 302, 304, 0, 0,
	188, 372, 0, 372, 0, 363, 365, 0, 435, 455,
	1369, 1370, 0, 0, 392, 396, 397, 398, 0, 1470,
	149, 0, 0, 0, 609, 0, 637, 0, 0, 0,
	0, 0, 0, 177, 514, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 0, 399, 0, 0, 0, 399,
	399, 399, 0, 694, 386, 0, 0, 665, 662, 536,
	0, 226, 227, 229, 0, 0, 0, 0, 0, 543,
	934, 1386, 1387, 1388, 0, 1398, 1402, 137, 0, 0,
	0, 0, 590, 596, 0, 516, 597, 707, 708, 709,
	96, 719, 725, 853, 873, 1000, 1008, 1012, 0, 0,
	0, 0, 1326, 1310, 372, 1313, 1314, 1316, 1318, 1319,
	1321, 1322, 1048, 1049, 1053, 0, 1132, 0, 1134, 1333,
	0, 1363, 0, 0, 0, 1163, 0, 0, 0, 1174,
	1173, 1175, 0, 1177, 1178, 1183, 1184, 1188, 0, 1190,
	1192, 1193, 0, 0, 0, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1220, 0, 1082, 1085, 1222,
	1092, 1093, 1098, 1225, 0, 0, 1128, 1237, 0, 1242,
	0, 0, 1248, 0, 1252, 0, 1258, 1259, 1261, 1263,
	0, 0, 0, 0, 0, 960, 941, 65, 1345, 1347,
	0, 1413, 1411, 1411, 1421, 1422, 0, 0, 1429, 0,
	0, 0, 0, 85, 0, 0, 0, 1449, 0, 0,
	0, 0, 102, 1354, 948, 955, 0, 0, 949, 0,
	950, 970, 972, 927, 0, 992, 992, 91, 92, 0,
	191, 0, 193, 219, 220, 0, 196, 198, 199, 200,
	206, 207, 208, 201, 0, 0, 301, 303, 0, 0,
	346, 357, 347, 0, 0, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 934, 150, 151, 152, 601, 0, 611,
	0, 936, 0, 604, 0, 525, 0, 0, 0, 399,
	399, 399, 0, 0, 0, 0, 679, 0, 0, 642,
	0, 650, 0, 0, 0, 230, 231, 0, 1397, 579,
	0, 135, 136, 0, 0, 584, 518, 519, 1046, 0,
	0, 0, 1047, 1311, 0, 0, 0, 0, 1330, 0,
	0, 0, 0, 1170, 0, 0, 0, 1196, 0, 0,
	0, 631, 632, 0, 1266, 1087, 1354, 0, 1089, 1099,
	1100, 0, 1089, 1236, 0, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 980, 1347, 1352, 0,
	0, 1416, 0, 1409, 1412, 1410, 1423, 0, 0, 1430,
	0, 1432, 0, 1454, 1455, 1447, 0, 1439, 1442, 1438,
	1441, 1363, 952, 0, 957, 0, 1354, 90, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 205, 0, 0,
	361, 366, 0, 0, 0, 602, 0, 937, 614, 605,
	0, 692, 0, 696, 0, 0, 0, 699, 700, 701,
	678, 0, 682, 427, 666, 663, 664, 537, 0, 138,
	139, 0, 0, 0, 1300, 0, 1303, 1131, 1133, 0,
	1160, 1161, 1162, 1308, 1309, 1176, 1189, 1194, 0, 1197,
	0, 0, 1198, 0, 633, 1078, 0, 0, 1096, 1097,
	0, 1238, 0, 1243, 1244, 0, 1249, 0, 1253, 1264,
	0, 985, 942, 943, 990, 991, 0, 0, 933, 1352,
	83, 1353, 1350, 0, 1348, 1346, 1405, 0, 1414, 1415,
	1424, 1425, 1431, 0, 1437, 0, 88, 0, 0, 0,
	1363, 192, 0, 211, 0, 610, 0, 613, 603, 690,
	691, 0, 703, 695, 697, 698, 680, -2, 1389, 0,
	0, 0, 586, 1301, 0, 0, 1199, 0, 629, 630,
	1086, 1079, 0, 1064, 1065, 1083, 1224, 1226, 0, 0,
	0, 0, 984, 986, 987, 82, 0, 1349, 1104, 0,
	1417, 1418, 1445, 1443, 953, 960, 0, 89, 440, 433,
	1389, 0, 0, 0, 683, 684, 685, 686, 687, 688,
	689, 576, 1391, 140, 141, 506, 507, 508, 134, 0,
	1137, 1195, 1080, 0, 0, 0, 0, 1076, 1077, 0,
	1239, 0, 1245, 0, 1250, 0, 944, 945, 1351, 0,
	0, 615, 0, 617, 0, -2, 428, 441, 0, 186,
	212, 213, 0, 0, 216, 217, 218, 209, 210, 130,
	0, 0, 704, 0, 1392, 1393, 137, 0, 0, 1071,
	1072, 1073, 1074, 1075, 0, 0, 0, 1105, 1084, 616,
	0, 0, 383, 0, 626, 429, 430, 0, 436, 437,
	438, 439, 214, 215, 638, 0, 0, 583, 1302, 0,
	1240, 0, 1246, 0, 1251, 0, 618, 619, 627, 0,
	431, 0, 432, 0, 0, 0, 607, 0, 638, 1390,
	1081, 0, 0, 1103, 0, 628, 624, 442, 444, 445,
	0, 0, 443, 639, 608, 1241, 1247, 0, 446, 447,
	448, 620, 621, 622, 623,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 667,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:605
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:618
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:619
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:623
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:661
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:667
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:673
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:678
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:688
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:692
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:698
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:704
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:710
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:723
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:733
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:739
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:892
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:898
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:910
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:940
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:944
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:978
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:988
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:998
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1011
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1023
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1027
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1033
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1045
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1051
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1055
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1059
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1065
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1069
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1075
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1089
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1093
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = RepeatableReadStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = ReadCommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1111
		{
			yyVAL.str = SerializableStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1117
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1121
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1125
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1131
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1137
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1144
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1157
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1173
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1183
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1188
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1193
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1199
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1204
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1215
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1219
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1225
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1241
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1248
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1255
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1260
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1265
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1270
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1277
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1284
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1295
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1306
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1312
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1316
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1320
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1338
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1342
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1348
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1352
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1362
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1372
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1378
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1382
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1388
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1398
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1403
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1412
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1436
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1445
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1471
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1477
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1537
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1547
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1561
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1571
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1580
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1585
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1591
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1613
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf8Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = Utf8Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1917
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1925
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1939
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1949
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1956
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1960
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1964
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1968
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2104
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2208
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2213
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2217
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2222
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2226
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2239
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2246
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2250
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2256
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2264
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2268
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2281
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2307
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2328
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2332
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2351
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2360
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2366
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2376
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2380
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2385
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2389
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2393
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2397
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2401
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2405
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2421
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2425
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2429
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2433
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2437
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.str = yyDollar[2].str
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = "key"
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = yyDollar[1].str
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = ""
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2504
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2508
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2514
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2518
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2524
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2528
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2534
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2538
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2544
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2550
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2554
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2558
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2562
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2566
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2575
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2581
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2587
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2593
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2597
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2601
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2606
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2610
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2616
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2622
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2628
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2632
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2640
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2644
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2667
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2676
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2685
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2691
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2695
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2705
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2835
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2899
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2917
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2921
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2930
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2934
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2938
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2946
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3094
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3098
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3335
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3361
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3370
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3378
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3387
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3394
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3406
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3415
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3430
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3444
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3448
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3454
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3460
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3466
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3476
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3480
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3486
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3492
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3498
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3504
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3510
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3528
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3534
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3540
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3544
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3548
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3554
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3558
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3563
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3567
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3572
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3576
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3582
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3586
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3590
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3594
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3598
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3685
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3689
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3695
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3700
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3704
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3709
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3714
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3719
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3724
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3729
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3741
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3746
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3752
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3758
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3762
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3768
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3773
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3777
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3782
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3787
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3792
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3797
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3809
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3816
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3823
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3830
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3838
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3842
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3848
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3854
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3860
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3866
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3872
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3878
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3890
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3912
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3916
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 708:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = "extended "
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4222
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4232
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4236
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4246
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4252
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4280
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4284
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4323
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4329
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4339
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4343
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4347
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4364
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			yyVAL.empty = struct{}{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4374
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4380
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4386
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4391
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4395
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4399
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4403
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4407
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4411
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4415
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4420
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4424
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4428
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4432
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = yyDollar[1].str
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = yyDollar[1].str
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = yyDollar[1].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4452
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4456
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4460
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4464
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = ""
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4487
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4515
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4525
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4531
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4535
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4539
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4543
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4549
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4569
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4573
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4591
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4597
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4605
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4609
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4617
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4646
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4650
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4654
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4668
		{
			setAllowComments(yylex, true)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4672
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4678
		{
			yyVAL.strs = nil
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4696
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = SQLCacheStr
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4722
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4728
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4732
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4742
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4751
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4757
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4761
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4766
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4770
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4775
		{
			yyVAL.strs = nil
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4791
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = SQLCacheStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4805
		{
			yyVAL.str = DistinctStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.str = DistinctStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4813
		{
			yyVAL.str = StraightJoinHint
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4827
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4837
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4841
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4845
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4849
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4854
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4862
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4874
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4878
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4884
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4890
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4904
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4908
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4912
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4916
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4922
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4926
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4932
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4936
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4945
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4954
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4960
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4970
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4980
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4984
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4988
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4992
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4998
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5002
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5015
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5019
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5023
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5027
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5033
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5035
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5039
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5047
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5050
		{
			yyVAL.empty = struct{}{}
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.empty = struct{}{}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5055
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5063
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5076
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5080
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5084
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5090
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5096
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5100
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5104
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5108
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5114
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5118
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5142
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5148
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5157
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5163
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5167
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5173
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5177
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5181
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5185
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5190
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5194
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5198
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5202
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5313
		{
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5492
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5496
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5502
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5506
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5512
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5516
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5520
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5526
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5530
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5537
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5541
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5545
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5549
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5553
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5559
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5563
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5567
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5571
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5575
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5594
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5600
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5604
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5613
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5618
		{
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5627
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5633
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5637
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5649
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5655
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5659
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5665
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5669
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5675
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5679
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5691
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5697
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5701
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5707
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5713
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5717
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5723
		{
			yyVAL.str = ""
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5727
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5733
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5737
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5744
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5748
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5752
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5756
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5762
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5766
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5770
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5774
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5778
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5782
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5786
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5792
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5796
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5800
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5807
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5813
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5817
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5841
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5857
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5865
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5995
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6115
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6403
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6409
		{
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6411
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6415
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6419
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6423
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6427
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6431
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6435
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6439
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6443
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6447
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6451
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6457
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6461
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6465
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6469
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6473
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6477
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6481
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6485
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6489
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6544
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6548
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6552
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6556
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6560
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6566
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6570
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6574
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6584
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6588
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6594
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6598
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6602
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6606
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6610
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6616
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6620
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6624
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6628
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6632
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6636
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6640
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6644
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6648
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6652
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6658
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6662
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6676
		{
			yyVAL.str = string("")
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6680
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6686
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6690
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6696
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6711
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6715
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6719
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6723
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6748
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6762
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6777
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6783
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6787
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6796
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6805
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6811
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6817
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6821
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6827
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6832
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6836
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6840
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6849
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6855
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6859
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6863
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6872
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6876
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6880
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6884
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6891
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6895
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6899
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6903
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6909
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6913
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6917
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6921
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6926
		{
			yyVAL.str = ""
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6930
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6934
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6938
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6943
		{
			yyVAL.str = ""
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6947
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6953
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6957
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = ""
		}
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6966
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6971
		{
			yyVAL.str = "cascaded"
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6975
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6979
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6988
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6994
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7000
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7006
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7015
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7019
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7024
		{
			yyVAL.str = ""
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7028
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7034
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7038
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7044
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7048
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7052
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7057
		{
			yyVAL.str = ""
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7061
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7065
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7070
		{
			yyVAL.str = ""
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7074
		{
			yyVAL.str = " header"
		}
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7079
		{
			yyVAL.str = ""
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7083
		{
			yyVAL.str = " manifest on"
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7087
		{
			yyVAL.str = " manifest off"
		}
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7092
		{
			yyVAL.str = ""
		}
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7096
		{
			yyVAL.str = " overwrite on"
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7100
		{
			yyVAL.str = " overwrite off"
		}
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7106
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7111
		{
			yyVAL.str = ""
		}
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7115
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7121
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7125
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7131
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7135
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7140
		{
			yyVAL.str = ""
		}
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7144
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7150
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7154
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7160
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7164
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7168
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7173
		{
			yyVAL.str = ""
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7177
		{
			yyVAL.str = " optionally"
		}
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7190
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7194
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7198
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7202
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7206
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7212
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7216
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7220
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7224
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7233
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7239
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7243
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7249
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7253
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7259
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7263
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7268
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7278
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7282
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7288
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7295
		{
			yyVAL.str = "charset"
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7305
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7309
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7313
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7322
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7324
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7327
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7329
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7332
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7337
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7342
		{
			yyVAL.empty = struct{}{}
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7344
		{
			yyVAL.empty = struct{}{}
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7346
		{
			yyVAL.empty = struct{}{}
		}
	case 1476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7350
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7359
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7366
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7370
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7376
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7380
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7387
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7393
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7397
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7403
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7407
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7414
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7992
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8001
		{
			decNesting(yylex)
		}
	case 2045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8006
		{
			skipToEnd(yylex)
		}
	case 2046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8011
		{
			skipToEnd(yylex)
		}
	case 2047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8015
		{
			skipToEnd(yylex)
		}
	case 2048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8019
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
