// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const AUTOEXTEND_SIZE = 57820
const BUCKETS = 57821
const CLONE = 57822
const COMPONENT = 57823
const DEFINITION = 57824
const ENFORCED = 57825
const ENGINE_ATTRIBUTE = 57826
const EXCLUDE = 57827
const FOLLOWING = 57828
const GEOMCOLLECTION = 57829
const GET_MASTER_PUBLIC_KEY = 57830
const HISTOGRAM = 57831
const HISTORY = 57832
const INACTIVE = 57833
const INVISIBLE = 57834
const LOCKED = 57835
const MASTER_COMPRESSION_ALGORITHMS = 57836
const MASTER_PUBLIC_KEY_PATH = 57837
const MASTER_TLS_CIPHERSUITES = 57838
const MASTER_ZSTD_COMPRESSION_LEVEL = 57839
const NESTED = 57840
const NETWORK_NAMESPACE = 57841
const NOWAIT = 57842
const NULLS = 57843
const OJ = 57844
const OLD = 57845
const OPTIONAL = 57846
const ORDINALITY = 57847
const ORGANIZATION = 57848
const OTHERS = 57849
const PATH = 57850
const PERSIST = 57851
const PERSIST_ONLY = 57852
const PRECEDING = 57853
const PRIVILEGE_CHECKS_USER = 57854
const PROCESS = 57855
const RANDOM = 57856
const REFERENCE = 57857
const REQUIRE_ROW_FORMAT = 57858
const RESOURCE = 57859
const RESPECT = 57860
const RESTART = 57861
const RETAIN = 57862
const REUSE = 57863
const ROLE = 57864
const SECONDARY = 57865
const SECONDARY_ENGINE = 57866
const SECONDARY_ENGINE_ATTRIBUTE = 57867
const SECONDARY_LOAD = 57868
const SECONDARY_UNLOAD = 57869
const SKIP = 57870
const SRID = 57871
const THREAD_PRIORITY = 57872
const TIES = 57873
const UNBOUNDED = 57874
const VCPU = 57875
const VISIBLE = 57876
const RETURNING = 57877
const FORMAT = 57878
const TREE = 57879
const VITESS = 57880
const TRADITIONAL = 57881
const LOCAL = 57882
const LOW_PRIORITY = 57883
const NO_WRITE_TO_BINLOG = 57884
const LOGS = 57885
const ERROR = 57886
const GENERAL = 57887
const HOSTS = 57888
const OPTIMIZER_COSTS = 57889
const USER_RESOURCES = 57890
const SLOW = 57891
const CHANNEL = 57892
const RELAY = 57893
const EXPORT = 57894
const AVG_ROW_LENGTH = 57895
const CONNECTION = 57896
const CHECKSUM = 57897
const DELAY_KEY_WRITE = 57898
const ENCRYPTION = 57899
const ENGINE = 57900
const INSERT_METHOD = 57901
const MAX_ROWS = 57902
const MIN_ROWS = 57903
const PACK_KEYS = 57904
const PASSWORD = 57905
const FIXED = 57906
const DYNAMIC = 57907
const COMPRESSED = 57908
const REDUNDANT = 57909
const COMPACT = 57910
const ROW_FORMAT = 57911
const STATS_AUTO_RECALC = 57912
const STATS_PERSISTENT = 57913
const STATS_SAMPLE_PAGES = 57914
const STORAGE = 57915
const MEMORY = 57916
const DISK = 57917
const PARTITIONS = 57918
const LINEAR = 57919
const RANGE = 57920
const LIST = 57921
const SUBPARTITION = 57922
const SUBPARTITIONS = 57923
const HASH = 57924

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	600, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	327, 153,
	-2, 468,
	-1, 55,
	35, 683,
	231, 683,
	242, 683,
	277, 697,
	278, 697,
	-2, 685,
	-1, 60,
	233, 710,
	-2, 708,
	-1, 114,
	230, 1234,
	-2, 119,
	-1, 116,
	1, 146,
	600, 146,
	-2, 153,
	-1, 127,
	132, 366,
	236, 366,
	-2, 462,
	-1, 146,
	131, 153,
	171, 153,
	327, 153,
	-2, 477,
	-1, 684,
	215, 1255,
	-2, 1251,
	-1, 685,
	215, 1256,
	-2, 1252,
	-1, 759,
	59, 778,
	-2, 793,
	-1, 796,
	147, 1657,
	-2, 112,
	-1, 797,
	147, 1501,
	-2, 113,
	-1, 803,
	147, 1584,
	-2, 1228,
	-1, 951,
	147, 1431,
	-2, 1225,
	-1, 992,
	241, 41,
	246, 41,
	-2, 377,
	-1, 1072,
	1, 516,
	600, 516,
	-2, 153,
	-1, 1309,
	59, 779,
	-2, 798,
	-1, 1310,
	59, 780,
	-2, 799,
	-1, 1363,
	131, 153,
	171, 153,
	327, 153,
	-2, 409,
	-1, 1442,
	132, 366,
	236, 366,
	-2, 462,
	-1, 1451,
	241, 42,
	246, 42,
	-2, 378,
	-1, 1753,
	215, 1260,
	-2, 1254,
	-1, 1836,
	131, 153,
	171, 153,
	327, 153,
	-2, 410,
	-1, 1843,
	25, 174,
	-2, 176,
	-1, 2083,
	86, 39,
	-2, 835,
	-1, 2135,
	77, 94,
	86, 94,
	-2, 855,
	-1, 2202,
	575, 611,
	-2, 598,
	-1, 2335,
	49, 1196,
	-2, 1190,
	-1, 2544,
	86, 39,
	-2, 836,
	-1, 2582,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 827,
	-1, 2894,
	22, 1586,
	32, 1586,
	172, 1586,
	253, 1586,
	307, 1586,
	308, 1586,
	309, 1586,
	310, 1586,
	311, 1586,
	312, 1586,
	313, 1586,
	315, 1586,
	316, 1586,
	317, 1586,
	318, 1586,
	319, 1586,
	320, 1586,
	321, 1586,
	322, 1586,
	323, 1586,
	324, 1586,
	325, 1586,
	326, 1586,
	328, 1586,
	330, 1586,
	331, 1586,
	332, 1586,
	333, 1586,
	334, 1586,
	335, 1586,
	336, 1586,
	337, 1586,
	338, 1586,
	341, 1586,
	342, 1586,
	343, 1586,
	344, 1586,
	345, 1586,
	346, 1586,
	347, 1586,
	348, 1586,
	349, 1586,
	461, 1586,
	-2, 556,
}

const yyPrivate = 57344

const yyLast = 41747

var yyAct = [...]int{
	684, 2294, 2672, 2945, 2826, 2939, 1833, 2892, 1787, 2674,
	2649, 2895, 1366, 2475, 2896, 2876, 1767, 2673, 2388, 2395,
	1135, 2037, 2431, 2349, 2779, 774, 678, 1769, 752, 3,
	2346, 96, 1288, 2687, 2802, 2458, 2397, 693, 2071, 1903,
	2106, 677, 37, 1324, 2457, 2553, 2350, 602, 2293, 2692,
	2256, 186, 2347, 687, 186, 2547, 567, 186, 599, 1791,
	2292, 675, 582, 676, 186, 628, 2460, 1806, 2573, 2344,
	2336, 2098, 186, 1866, 2539, 2129, 600, 2167, 2199, 2239,
	1084, 1891, 1871, 954, 2168, 598, 1420, 186, 686, 2169,
	1822, 155, 801, 775, 38, 36, 2118, 1311, 2090, 1810,
	594, 1663, 1811, 1653, 1449, 1747, 1912, 2073, 754, 582,
	1890, 141, 582, 186, 582, 1723, 1873, 1611, 1945, 756,
	2161, 760, 1798, 982, 987, 2137, 1000, 1333, 1355, 798,
	606, 95, 1813, 611, 1291, 1675, 1220, 1630, 1560, 777,
	1156, 1456, 1556, 961, 958, 990, 1542, 993, 91, 1354,
	1888, 962, 1465, 988, 989, 1719, 1352, 766, 1338, 1133,
	1127, 1792, 159, 1565, 1415, 1441, 119, 1068, 788, 117,
	118, 1862, 124, 1223, 762, 761, 125, 1227, 764, 89,
	589, 76, 2946, 2835, 1760, 2192, 98, 188, 189, 190,
	2428, 97, 1905, 2190, 85, 1905, 1906, 1907, 2218, 2217,
	1943, 1157, 1527, 2632, 782, 8, 787, 571, 2247, 2248,
	120, 1722, 2857, 1618, 126, 763, 77, 539, 1617, 7,
	1113, 90, 2856, 6, 1616, 102, 188, 189, 190, 1615,
	571, 1614, 2677, 1613, 2677, 1596, 955, 1605, 1027, 768,
	2449, 1157, 1764, 1765, 2069, 2911, 590, 980, 592, 2332,
	593, 2527, 2959, 2446, 2921, 1004, 2100, 2936, 971, 755,
	2608, 2412, 1623, 2775, 2774, 795, 104, 105, 753, 108,
	802, 568, 114, 966, 1003, 183, 769, 2642, 534, 120,
	2643, 1035, 979, 978, 1026, 78, 977, 976, 1318, 1025,
	2958, 2886, 776, 1028, 1029, 1030, 1750, 2447, 748, 749,
	750, 751, 182, 1983, 759, 2949, 1167, 2852, 78, 2109,
	2857, 2934, 78, 2195, 78, 80, 2676, 555, 2676, 2453,
	2650, 1041, 2877, 1931, 2885, 2851, 121, 1189, 143, 553,
	2255, 2509, 790, 791, 2110, 1430, 2070, 2226, 1356, 164,
	1357, 2225, 2385, 2386, 1828, 1829, 1167, 120, 2784, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1198, 1197, 1199, 1200,
	2384, 2246, 87, 2705, 1980, 1827, 1103, 1981, 746, 550,
	153, 975, 745, 1077, 1078, 142, 2827, 2193, 563, 2158,
	1120, 2146, 1122, 1091, 2145, 87, 1104, 2147, 1092, 87,
	2500, 87, 571, 560, 1091, 1097, 161, 1071, 162, 1092,
	571, 1163, 1705, 572, 1155, 1080, 1130, 1090, 1766, 1089,
	2282, 1882, 1846, 1845, 1443, 1444, 152, 151, 181, 571,
	1119, 1121, 2550, 2498, 1604, 580, 572, 2450, 2477, 973,
	584, 578, 1108, 1109, 1295, 1876, 1957, 1954, 1956, 1955,
	1548, 1163, 1067, 2200, 1913, 1946, 970, 2221, 2470, 972,
	2948, 1543, 1124, 1606, 1607, 1608, 2471, 1951, 540, 1042,
	542, 556, 1112, 574, 1073, 573, 546, 1105, 544, 548,
	557, 549, 2234, 543, 2634, 554, 1098, 2479, 545, 558,
	559, 561, 564, 565, 566, 562, 1517, 552, 575, 1697,
	1686, 1687, 1688, 1689, 1699, 1690, 1691, 1692, 1704, 1700,
	1693, 1694, 1701, 1702, 1703, 1695, 1696, 1698, 1129, 2478,
	1106, 1107, 1952, 1117, 147, 1445, 154, 1118, 1442, 2633,
	148, 149, 2912, 1110, 1962, 2257, 165, 1123, 1048, 1047,
	1518, 1950, 1519, 1111, 186, 171, 186, 1948, 1011, 186,
	2762, 87, 974, 975, 1916, 967, 975, 1066, 2630, 1807,
	1116, 983, 969, 968, 1959, 984, 1960, 1009, 1961, 1002,
	984, 1981, 2283, 1020, 1019, 1018, 1298, 2932, 582, 1137,
	582, 582, 2401, 1949, 1875, 1017, 1016, 1015, 1014, 1013,
	1434, 1008, 1021, 1201, 1201, 582, 582, 2953, 572, 1162,
	1159, 1160, 1161, 1166, 1168, 1165, 572, 1164, 959, 959,
	2943, 973, 1455, 996, 1158, 959, 2259, 2238, 789, 957,
	995, 1070, 2074, 2076, 1557, 572, 1149, 1889, 2235, 1793,
	1794, 1087, 2411, 1093, 1094, 1095, 1096, 1937, 37, 1162,
	1159, 1160, 1161, 1166, 1168, 1165, 1553, 1164, 1143, 1031,
	2421, 1002, 1101, 1549, 1158, 1131, 1132, 1428, 156, 2834,
	981, 2191, 2194, 2220, 2785, 2223, 576, 1001, 1427, 2629,
	1426, 2210, 1005, 995, 1933, 1554, 2251, 1995, 2269, 2268,
	2267, 2261, 1006, 2265, 569, 2260, 1424, 2258, 538, 533,
	2233, 1012, 2263, 2232, 1204, 1205, 1206, 1207, 2823, 570,
	1834, 2262, 1007, 2589, 1212, 2569, 1215, 2142, 1138, 1037,
	1010, 2551, 2105, 1069, 2902, 2061, 1454, 1759, 2264, 2266,
	1202, 1203, 1342, 2850, 974, 1002, 1267, 974, 2900, 2241,
	1082, 2840, 1201, 116, 2240, 150, 1200, 2904, 2905, 1139,
	1140, 771, 2383, 81, 1114, 2399, 2400, 1286, 1128, 1001,
	86, 111, 2901, 1002, 1982, 2846, 186, 1208, 1023, 1547,
	582, 582, 1529, 1528, 1530, 1531, 1532, 2275, 144, 2625,
	1022, 145, 2675, 86, 2675, 2241, 186, 86, 1566, 86,
	2240, 2563, 2075, 2451, 2452, 1086, 1947, 1550, 1299, 2183,
	1125, 1358, 1002, 1153, 1302, 582, 2454, 754, 1304, 186,
	157, 1287, 1152, 1079, 582, 1301, 169, 1879, 1088, 1305,
	582, 1225, 77, 1226, 1676, 756, 1150, 1002, 1076, 1229,
	1151, 112, 2941, 1001, 798, 2942, 1172, 2940, 2701, 995,
	998, 999, 1930, 959, 1281, 1171, 1172, 992, 996, 188,
	189, 190, 1676, 1655, 2009, 1880, 1173, 177, 1100, 2398,
	2600, 1001, 2599, 1878, 1920, 1464, 1005, 995, 991, 1102,
	1303, 2401, 1932, 1287, 95, 1173, 1006, 1273, 1274, 1275,
	1276, 1277, 1463, 1453, 2928, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 1881, 1115, 1292, 1925,
	1001, 176, 178, 179, 180, 1877, 995, 998, 999, 1925,
	959, 1544, 1928, 1545, 992, 996, 1546, 1195, 1196, 1198,
	1197, 1199, 1200, 1011, 1024, 1001, 1009, 1036, 1072, 98,
	2862, 1567, 2590, 1656, 1343, 1085, 1929, 1038, 1039, 1040,
	2956, 1043, 1044, 1045, 1046, 1289, 1927, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1323, 755, 1320, 753, 1300, 1189,
	1635, 2250, 2863, 2954, 186, 802, 1173, 2816, 1416, 1348,
	1349, 1625, 1627, 1628, 1636, 1637, 1634, 1170, 1425, 1171,
	1172, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1197,
	1199, 1200, 87, 1353, 1306, 1626, 1170, 1318, 1171, 1172,
	1537, 582, 2770, 1451, 1680, 2277, 1633, 1173, 1681, 2817,
	2769, 1460, 1987, 1988, 1989, 1462, 2760, 2665, 582, 582,
	2664, 582, 1173, 582, 582, 2506, 582, 582, 582, 582,
	582, 582, 1193, 1194, 1195, 1196, 1198, 1197, 1199, 1200,
	1535, 582, 1189, 2607, 1994, 186, 1498, 2955, 2795, 1318,
	685, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1197,
	1199, 1200, 186, 1536, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1198, 1197, 1199, 1200, 582, 1524, 186, 698, 699,
	700, 188, 189, 190, 1447, 2597, 2606, 2929, 1555, 1512,
	1318, 582, 2429, 186, 2417, 2165, 1173, 1170, 2164, 1171,
	1172, 187, 793, 1534, 187, 2930, 2005, 187, 1440, 186,
	1885, 1538, 583, 1173, 187, 1459, 186, 188, 189, 190,
	1522, 2149, 187, 2026, 1495, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 582, 1457, 1457, 187, 1170, 1523,
	1171, 1172, 1521, 1423, 1461, 1520, 1510, 1504, 582, 582,
	1501, 1458, 1500, 1170, 1499, 1171, 1172, 1474, 2843, 583,
	2842, 1437, 583, 187, 583, 2820, 186, 1450, 1438, 1493,
	1494, 1467, 1436, 1468, 1327, 1470, 1472, 2819, 2004, 1476,
	1478, 1480, 1482, 1484, 1318, 1562, 2818, 2765, 1570, 188,
	189, 190, 2700, 1901, 2698, 1574, 1318, 1576, 1577, 1578,
	1579, 2474, 2661, 1496, 1583, 2604, 2596, 1429, 1142, 188,
	189, 190, 1654, 1899, 1657, 1661, 1595, 2420, 1173, 2419,
	2174, 1631, 2162, 1328, 1283, 1666, 582, 1170, 1941, 1171,
	1172, 1940, 1558, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1175, 582, 582, 1173, 1170, 120, 1171, 1172, 1790, 978,
	1660, 1660, 977, 976, 1772, 1638, 1597, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1563, 1533, 1629, 1572, 1639, 1191, 1192, 1193, 1194, 1195,
	1196, 1198, 1197, 1199, 1200, 1720, 188, 189, 190, 1173,
	1897, 2000, 1525, 1593, 1173, 1594, 1515, 1511, 1751, 1507,
	1999, 1658, 1658, 1506, 186, 1505, 2792, 1601, 1602, 582,
	188, 189, 190, 1329, 2791, 1126, 2754, 1799, 1800, 2138,
	1568, 1569, 1173, 2753, 92, 2504, 1318, 2648, 1632, 2096,
	2947, 94, 2201, 186, 1573, 93, 582, 1720, 1777, 1331,
	1778, 1580, 1581, 1582, 2917, 1318, 186, 1173, 2345, 1170,
	582, 1171, 1172, 2096, 2883, 186, 92, 186, 2562, 186,
	186, 582, 2107, 1677, 582, 2096, 2870, 93, 2179, 1173,
	1753, 2046, 1318, 1751, 1170, 582, 1171, 1172, 2096, 2866,
	1842, 798, 2139, 1843, 798, 1755, 1756, 1173, 94, 1318,
	95, 2141, 2720, 2722, 2721, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 634, 1173, 1330, 2858, 1318, 2562, 2018, 95,
	1173, 2096, 2836, 2107, 1173, 2378, 1752, 2640, 2833, 1783,
	1170, 1318, 1171, 1172, 1981, 1170, 1173, 1171, 1172, 2038,
	582, 2523, 1318, 2115, 1809, 2096, 2761, 1892, 1893, 1894,
	2640, 1318, 1896, 1898, 1900, 1753, 1318, 1852, 1853, 1854,
	1855, 100, 2831, 1170, 2564, 1171, 1172, 582, 1838, 1169,
	1771, 2096, 2638, 582, 1460, 1837, 2845, 1460, 1847, 1460,
	1848, 1849, 1850, 1851, 2096, 1924, 2115, 1820, 1170, 768,
	1171, 1172, 1925, 1318, 2562, 2584, 1858, 1859, 1860, 1861,
	1785, 1804, 1173, 1318, 1914, 2567, 1318, 2758, 1868, 1841,
	1170, 2523, 1171, 1172, 2407, 582, 1173, 1654, 1802, 2626,
	1874, 1825, 2320, 1654, 1654, 1926, 1662, 1824, 1170, 1996,
	1171, 1172, 802, 1668, 1669, 802, 1826, 1998, 1840, 1839,
	1169, 1318, 2031, 1318, 1170, 1996, 1171, 1172, 2409, 2408,
	1911, 1170, 2031, 1171, 1172, 1170, 2114, 1171, 1172, 1173,
	2015, 186, 2014, 1884, 2391, 2405, 2406, 1170, 186, 1171,
	1172, 2405, 2404, 186, 186, 2115, 1318, 186, 1919, 186,
	1869, 1922, 1925, 1923, 2525, 1754, 186, 1925, 1757, 1758,
	1887, 1883, 1004, 186, 187, 1173, 187, 1908, 1934, 187,
	1895, 2138, 1457, 1864, 1865, 1996, 1318, 1981, 2219, 2392,
	2115, 1003, 1419, 2204, 1797, 1869, 1918, 1921, 1917, 186,
	1936, 1322, 1935, 1762, 582, 1782, 1938, 1939, 583, 1189,
	583, 583, 1173, 1170, 2394, 1171, 1172, 2726, 2727, 1609,
	1173, 2521, 2197, 2198, 1552, 583, 583, 1170, 2389, 1171,
	1172, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1197,
	1199, 1200, 2096, 2095, 2139, 2399, 2400, 1419, 1418, 1972,
	1973, 1350, 2390, 1981, 1975, 1364, 1363, 2512, 1944, 986,
	758, 1631, 985, 1976, 2908, 2873, 1173, 87, 2781, 1325,
	1170, 2751, 1171, 1172, 2712, 2092, 2624, 679, 101, 629,
	683, 631, 680, 681, 2396, 627, 630, 682, 1173, 100,
	94, 99, 2621, 2925, 1991, 2166, 1993, 1965, 2602, 1173,
	94, 2432, 2511, 2515, 2514, 1421, 1170, 1867, 1171, 1172,
	1173, 2472, 2434, 1992, 632, 633, 2719, 2723, 2724, 2725,
	2728, 2729, 2730, 2738, 2740, 657, 2739, 2741, 2742, 2743,
	2746, 2747, 2748, 2749, 2744, 2745, 2750, 87, 2430, 2205,
	1431, 1432, 1433, 1170, 1173, 1171, 1172, 1996, 2055, 2398,
	1979, 1170, 1863, 1171, 1172, 1857, 2171, 1173, 1318, 1856,
	1540, 2401, 2609, 186, 1452, 1448, 101, 1417, 1632, 1173,
	2054, 186, 1990, 1173, 113, 2080, 582, 100, 1071, 99,
	2067, 2053, 582, 2923, 2084, 2476, 187, 2574, 2575, 2782,
	583, 583, 2052, 582, 1882, 1775, 1599, 1170, 2078, 1171,
	1172, 2897, 1502, 1503, 2855, 2800, 187, 2170, 1508, 1509,
	2008, 1660, 2610, 2611, 2612, 2577, 186, 1489, 2426, 1170,
	186, 1171, 1172, 2613, 2425, 583, 2051, 2424, 2345, 187,
	1170, 1173, 1171, 1172, 583, 2148, 2111, 1486, 2184, 2050,
	583, 1170, 1173, 1171, 1172, 2580, 1318, 1966, 37, 2024,
	2097, 2049, 1753, 1173, 2171, 2048, 2367, 2131, 1600, 1173,
	2365, 2368, 1658, 2579, 1173, 2366, 2393, 1490, 1491, 1492,
	2614, 2615, 2914, 2364, 2363, 1170, 2884, 1171, 1172, 1173,
	2682, 2093, 2681, 582, 1487, 1488, 1789, 1326, 1170, 186,
	1171, 1172, 1781, 2568, 2325, 1292, 186, 2068, 1752, 1173,
	1170, 2324, 1171, 1172, 1170, 2815, 1171, 1172, 2159, 2160,
	582, 2130, 2369, 2047, 2124, 2125, 2691, 582, 2196, 2555,
	2094, 1460, 1460, 2693, 2041, 2104, 582, 2554, 2152, 2558,
	2680, 2089, 2334, 1173, 1551, 2040, 772, 2136, 2216, 2337,
	2339, 2039, 744, 2215, 773, 2403, 2036, 2140, 2340, 186,
	186, 186, 186, 186, 1874, 2143, 668, 2156, 2175, 2150,
	1672, 2035, 1170, 2153, 1171, 1172, 186, 186, 2006, 1033,
	1032, 2486, 92, 1170, 1673, 1171, 1172, 92, 2163, 94,
	2170, 2034, 186, 93, 1170, 2244, 1171, 1172, 93, 2172,
	1170, 1141, 1171, 1172, 187, 1170, 2212, 1171, 1172, 2211,
	121, 1654, 2560, 2185, 2186, 2187, 2181, 1799, 1800, 2180,
	1170, 94, 1171, 1172, 2214, 2032, 2951, 2422, 581, 1969,
	1440, 2832, 2777, 2402, 2128, 2206, 2207, 1786, 780, 781,
	1170, 583, 1171, 1172, 2323, 2274, 1958, 2540, 754, 1985,
	2807, 2213, 2322, 99, 2806, 2058, 2059, 2699, 583, 583,
	2270, 583, 2697, 583, 583, 2696, 583, 583, 583, 583,
	583, 583, 582, 2689, 1170, 800, 1171, 1172, 956, 2622,
	963, 583, 2253, 2559, 1660, 187, 1660, 2557, 582, 1660,
	2252, 2435, 2314, 2236, 1660, 2307, 2308, 2309, 2310, 1909,
	2300, 1435, 187, 186, 779, 2301, 100, 582, 2254, 2297,
	1173, 101, 2688, 2548, 2271, 583, 582, 187, 2107, 1316,
	1312, 2092, 100, 582, 582, 2284, 186, 186, 186, 186,
	186, 583, 2016, 187, 1313, 1658, 2314, 1658, 186, 1773,
	1658, 2327, 2342, 186, 1344, 1658, 186, 2351, 186, 187,
	1335, 186, 186, 186, 2926, 2357, 187, 2288, 2927, 1779,
	1780, 1315, 2377, 1314, 760, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 583, 2821, 2313, 2295, 2328, 2295,
	101, 2595, 2295, 770, 1305, 2131, 2418, 2295, 583, 583,
	2315, 100, 2028, 99, 103, 186, 1173, 88, 2326, 2927,
	2926, 2329, 2242, 106, 107, 2243, 187, 1, 582, 2899,
	551, 2316, 2317, 2318, 1763, 1290, 582, 762, 761, 1526,
	1516, 186, 2651, 2379, 2456, 2358, 2380, 1721, 2361, 2359,
	2360, 186, 2362, 2370, 2778, 95, 2440, 2438, 2374, 2375,
	2319, 1170, 2381, 1171, 1172, 1562, 186, 1915, 2620, 186,
	2348, 1872, 101, 2387, 994, 2348, 146, 1835, 1836, 2487,
	2879, 110, 952, 100, 2414, 99, 583, 109, 2413, 2302,
	2303, 2304, 2305, 2306, 94, 2445, 2356, 997, 2027, 1316,
	1312, 583, 583, 1099, 2464, 1189, 2463, 1910, 1185, 2641,
	1186, 2436, 2157, 1844, 1313, 2442, 1874, 2455, 2441, 2439,
	1370, 1368, 2467, 1369, 1187, 1188, 1184, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1198, 1197, 1199, 1200, 1367, 1309,
	1310, 1315, 2520, 1314, 1372, 2482, 2481, 1170, 1371, 1171,
	1172, 582, 186, 2484, 2485, 2017, 2526, 1603, 2490, 579,
	2127, 2437, 184, 1359, 187, 2496, 2489, 1336, 1034, 583,
	541, 2410, 1942, 547, 2493, 2494, 1213, 2495, 1598, 2321,
	2497, 2144, 2499, 799, 2501, 792, 1774, 2082, 2120, 2123,
	2124, 2125, 2121, 187, 2122, 2126, 583, 2546, 2574, 2575,
	2353, 2120, 2123, 2124, 2125, 2121, 187, 2122, 2126, 186,
	583, 2552, 2333, 2335, 2099, 187, 2338, 187, 2331, 187,
	187, 583, 2541, 2542, 583, 2814, 2690, 2598, 2571, 2871,
	2154, 1332, 186, 2549, 2007, 583, 2556, 1674, 1814, 1624,
	604, 603, 601, 2085, 2108, 2581, 2561, 1176, 688, 2072,
	2587, 2588, 186, 1345, 2119, 186, 186, 186, 2117, 2116,
	2578, 1967, 1821, 2576, 2572, 582, 582, 2891, 1816, 1812,
	2091, 612, 605, 2627, 2628, 2585, 597, 2592, 2462, 2222,
	2473, 2224, 2155, 2464, 2586, 2463, 2469, 2593, 2594, 1154,
	583, 1308, 591, 965, 2603, 1671, 2605, 2783, 2838, 1984,
	2508, 1307, 1684, 1685, 2427, 2202, 1902, 582, 582, 582,
	582, 63, 41, 1712, 586, 2910, 1145, 583, 786, 32,
	31, 30, 29, 583, 28, 23, 22, 21, 20, 19,
	25, 18, 17, 16, 2448, 2920, 2950, 115, 50, 47,
	45, 123, 2647, 122, 48, 44, 1074, 42, 27, 2645,
	2646, 26, 15, 14, 800, 1317, 800, 800, 13, 12,
	11, 10, 9, 5, 2660, 583, 4, 35, 34, 33,
	1148, 1144, 1146, 24, 186, 2, 2444, 2443, 2189, 1904,
	2656, 0, 0, 0, 2657, 0, 0, 0, 0, 1660,
	2685, 1660, 0, 0, 0, 0, 0, 0, 582, 0,
	582, 0, 2669, 0, 0, 0, 0, 0, 2678, 0,
	0, 187, 2668, 669, 0, 0, 2714, 0, 187, 0,
	0, 2351, 2708, 187, 187, 2351, 2706, 187, 2695, 187,
	2710, 2694, 2686, 754, 0, 0, 187, 0, 37, 0,
	1658, 2704, 1658, 187, 0, 2702, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 582, 2715, 2716, 0, 0,
	0, 0, 0, 2759, 185, 0, 2173, 537, 186, 187,
	577, 2176, 2177, 2718, 583, 0, 0, 537, 0, 0,
	1284, 582, 2295, 0, 2295, 537, 0, 2763, 0, 0,
	2755, 0, 2757, 0, 0, 2771, 2756, 0, 0, 0,
	767, 2780, 0, 1658, 0, 2772, 2773, 0, 0, 2801,
	582, 0, 2798, 0, 582, 582, 785, 0, 785, 0,
	2797, 0, 0, 2348, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 1297, 0, 0,
	0, 0, 0, 582, 0, 1660, 0, 0, 2808, 2809,
	2811, 2825, 2813, 0, 2810, 0, 0, 0, 0, 2822,
	0, 0, 2351, 0, 0, 0, 2824, 0, 0, 0,
	0, 1340, 0, 0, 2828, 0, 0, 754, 0, 0,
	800, 0, 582, 0, 0, 0, 1360, 0, 0, 0,
	2830, 0, 0, 0, 0, 0, 1658, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 186, 0, 0, 0, 0, 0, 2837,
	2847, 0, 0, 0, 2841, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 2844, 0, 0,
	0, 187, 0, 0, 0, 0, 583, 0, 182, 37,
	0, 0, 583, 0, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 582, 582, 0, 0,
	0, 0, 2864, 0, 2869, 164, 187, 0, 2874, 582,
	187, 0, 2872, 0, 0, 0, 2780, 2880, 186, 582,
	2878, 0, 0, 0, 37, 2887, 0, 0, 0, 0,
	0, 0, 0, 0, 2890, 0, 0, 0, 2906, 0,
	2898, 2903, 0, 0, 0, 0, 0, 2913, 0, 0,
	0, 0, 0, 0, 0, 0, 2919, 0, 2924, 582,
	2922, 0, 161, 0, 162, 0, 0, 2931, 582, 0,
	0, 0, 2938, 583, 2933, 2935, 2937, 0, 0, 187,
	0, 2415, 2416, 2944, 181, 0, 187, 0, 0, 0,
	0, 0, 0, 2952, 0, 0, 0, 956, 0, 0,
	583, 2957, 2348, 0, 0, 0, 0, 583, 1660, 0,
	1284, 2960, 0, 2961, 1466, 1466, 583, 1466, 0, 1466,
	1466, 2798, 1475, 1466, 1466, 1466, 1466, 1466, 2962, 2963,
	0, 0, 0, 0, 0, 1284, 1284, 956, 0, 187,
	187, 187, 187, 187, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 187, 0, 1658,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 1559, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 164, 1658, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	800, 0, 0, 0, 0, 0, 0, 0, 0, 2151,
	0, 0, 0, 0, 800, 800, 0, 0, 0, 0,
	0, 0, 583, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 583, 537,
	0, 0, 537, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 583, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 583, 583, 0, 187, 187, 187, 187,
	187, 0, 0, 0, 156, 0, 0, 0, 187, 0,
	0, 0, 1667, 187, 0, 0, 187, 0, 187, 1284,
	0, 187, 187, 187, 0, 0, 0, 1682, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2631, 0,
	0, 0, 2635, 2636, 2637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 800, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 583, 0,
	0, 0, 0, 171, 0, 0, 583, 0, 0, 0,
	0, 187, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 1285, 0, 187,
	0, 0, 1788, 0, 0, 0, 0, 1319, 1321, 0,
	0, 0, 0, 0, 0, 0, 1340, 0, 0, 800,
	0, 0, 0, 0, 0, 0, 157, 800, 0, 0,
	800, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 956, 0, 0, 0, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 177, 0, 0, 156, 0, 0, 0,
	0, 583, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 0, 0, 0, 963, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 2766, 2767, 2768, 0, 176, 178, 179,
	180, 0, 0, 956, 0, 0, 0, 0, 0, 963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 187, 187, 187, 0, 0,
	0, 0, 0, 0, 0, 583, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 583, 583,
	583, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 121, 0, 143, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 187, 0, 0, 1285, 0, 176,
	178, 179, 180, 0, 0, 0, 153, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 583, 0,
	583, 0, 1285, 1285, 0, 0, 0, 0, 537, 0,
	0, 0, 161, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	130, 131, 152, 151, 181, 0, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 1561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 537,
	0, 583, 0, 0, 0, 0, 0, 0, 1584, 1585,
	537, 537, 537, 537, 537, 537, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 800, 0, 0, 0,
	583, 0, 0, 0, 583, 583, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 2086, 537,
	147, 128, 154, 135, 127, 0, 148, 149, 0, 2101,
	1678, 0, 165, 583, 1679, 0, 0, 0, 0, 0,
	0, 171, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 137, 132, 133,
	134, 138, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 583, 785, 0, 0, 0, 140, 0, 0,
	785, 785, 0, 0, 0, 0, 1285, 187, 0, 0,
	0, 0, 0, 1319, 1761, 0, 0, 0, 0, 0,
	0, 784, 583, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2178,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	785, 1561, 785, 785, 785, 785, 785, 0, 0, 0,
	0, 0, 0, 0, 583, 0, 1788, 0, 0, 0,
	0, 0, 0, 2203, 156, 0, 0, 1513, 0, 0,
	0, 0, 2208, 0, 0, 0, 583, 583, 0, 595,
	0, 0, 785, 0, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 0, 0, 767, 0, 187, 583,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	0, 778, 0, 0, 0, 0, 1561, 0, 537, 0,
	537, 0, 537, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1886, 583,
	0, 150, 0, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 145, 0, 0,
	0, 0, 0, 1284, 0, 1284, 0, 0, 1284, 0,
	0, 0, 0, 1284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2918, 157, 0, 800, 0,
	0, 0, 169, 0, 0, 1387, 0, 0, 0, 0,
	0, 0, 0, 0, 1466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2330, 0, 0, 0, 0, 0, 0,
	0, 0, 800, 177, 0, 0, 1284, 0, 0, 2355,
	1466, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 0, 176, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 537, 0, 0, 0, 0, 537, 537, 0, 0,
	537, 0, 1970, 0, 0, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 956, 0, 537, 1284, 0, 0,
	0, 0, 1788, 0, 0, 1375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 1997, 0,
	0, 0, 2001, 0, 2002, 2003, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 2012, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2019, 2020, 2021, 2022, 2023, 0, 2025,
	0, 0, 0, 0, 0, 2029, 1388, 2030, 0, 0,
	0, 2033, 0, 0, 0, 785, 0, 0, 0, 2042,
	2043, 2044, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 2057, 0, 0, 0, 2330, 0, 0,
	2062, 2063, 2064, 2065, 2066, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	1401, 1404, 1405, 1406, 1407, 1408, 1409, 0, 1410, 1411,
	1412, 1413, 1414, 1389, 1390, 1391, 1392, 1373, 1374, 1402,
	0, 1376, 0, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 785, 785, 1386, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1561, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 0, 0, 0,
	0, 1788, 1788, 0, 0, 0, 0, 0, 0, 537,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2652, 2653, 2654, 2655, 0, 0, 0,
	536, 0, 0, 0, 0, 0, 1221, 0, 0, 0,
	585, 0, 0, 0, 1403, 0, 0, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 1284, 2188,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 0, 1284,
	0, 0, 0, 0, 2707, 0, 2709, 0, 0, 0,
	0, 0, 537, 537, 537, 537, 537, 0, 0, 0,
	0, 0, 0, 2281, 0, 0, 0, 0, 0, 537,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2296, 0, 537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	785, 1788, 0, 0, 2311, 2312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1285, 0, 1285, 0, 0, 1285, 0, 0, 0, 0,
	1285, 0, 695, 79, 0, 0, 2804, 0, 2354, 0,
	2804, 2804, 0, 0, 785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2372, 2373, 0, 0, 0,
	0, 0, 0, 0, 0, 1387, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 0, 1285, 537,
	537, 537, 537, 537, 0, 0, 0, 0, 1788, 0,
	757, 2371, 79, 0, 0, 0, 537, 0, 0, 1513,
	0, 537, 0, 0, 537, 2382, 1561, 0, 0, 0,
	757, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 0, 0, 0, 964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 2488, 0, 0, 1284, 0,
	2865, 0, 2492, 0, 1285, 0, 1422, 0, 0, 0,
	0, 0, 0, 0, 537, 0, 2502, 2503, 2505, 2507,
	0, 0, 800, 800, 537, 1375, 2513, 0, 0, 0,
	0, 2517, 2518, 2519, 0, 2888, 0, 0, 2522, 537,
	0, 0, 537, 0, 2524, 2893, 0, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 0, 0, 2538,
	0, 0, 0, 0, 0, 2543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 2893, 0, 0, 0, 2565, 2566,
	0, 0, 2570, 0, 0, 0, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2582, 2583, 0, 0, 0, 537, 0, 0, 1564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1075, 0, 1081, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1401, 1404, 1405, 1406, 1407, 1408, 1409, 0, 1410, 1411,
	1412, 1413, 1414, 1389, 1390, 1391, 1392, 1373, 1374, 1402,
	0, 1376, 537, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 0, 0, 1386, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 2639, 0, 537, 0, 0, 0, 0,
	0, 1619, 1620, 1621, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 0, 0, 537, 537,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1664, 1665, 0, 0, 0, 0, 0, 0,
	1670, 0, 2666, 0, 0, 0, 2667, 0, 0, 0,
	0, 0, 2671, 0, 0, 1706, 1707, 1708, 1709, 1710,
	1711, 1713, 1717, 1718, 595, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 0, 0,
	0, 0, 0, 0, 1403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 1795, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2776, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	1832, 0, 0, 0, 2786, 2787, 2788, 0, 2789, 2790,
	0, 0, 0, 0, 2793, 0, 2794, 0, 2796, 2799,
	1134, 0, 1134, 1134, 0, 2803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 2829, 0, 0, 757, 1209, 1210, 1211,
	0, 1214, 0, 1216, 1217, 1218, 1219, 0, 1222, 1224,
	1224, 0, 1224, 1228, 1228, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 0, 1268, 1269, 1270, 1271, 1272, 0, 2849,
	0, 0, 1228, 1228, 1228, 1228, 1228, 0, 0, 0,
	0, 0, 0, 2854, 0, 0, 0, 0, 2859, 0,
	0, 182, 0, 0, 2860, 2861, 0, 0, 0, 0,
	1365, 0, 1439, 0, 0, 0, 0, 0, 0, 0,
	1513, 0, 2867, 0, 0, 121, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 757, 0, 0, 0,
	757, 0, 0, 0, 0, 0, 757, 0, 0, 153,
	0, 2909, 0, 0, 142, 1285, 0, 0, 0, 0,
	0, 0, 0, 2915, 0, 0, 0, 2916, 0, 0,
	0, 1497, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1443, 1444, 152, 151, 181, 0, 0,
	0, 1513, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1571, 0, 0, 0, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1221, 0, 0, 0, 0, 0,
	0, 0, 1612, 147, 1445, 154, 0, 1442, 0, 148,
	149, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 689, 696, 697, 698,
	699, 700, 690, 692, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	694, 701, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2465, 2466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 1808, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1134, 1134, 0, 0, 0, 0, 0, 0, 78, 39,
	40, 80, 0, 0, 0, 0, 0, 144, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 43, 69, 70, 0, 67, 71, 2249, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 169, 2272, 2273, 0, 0,
	0, 2276, 0, 0, 0, 0, 2278, 2279, 2280, 0,
	0, 0, 0, 0, 56, 0, 0, 0, 2285, 2286,
	2287, 0, 0, 1724, 2289, 87, 2290, 2291, 0, 0,
	0, 2298, 2299, 0, 0, 0, 177, 0, 0, 1724,
	1724, 1724, 1724, 1724, 595, 595, 595, 595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 0, 0, 0,
	176, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 2343,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 1963,
	1964, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 2376, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 1977, 0, 0, 46, 49,
	52, 51, 54, 0, 66, 0, 0, 75, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2433, 0, 0, 0, 0,
	55, 83, 82, 0, 0, 64, 65, 53, 0, 0,
	0, 87, 0, 73, 74, 0, 0, 689, 696, 697,
	698, 699, 700, 690, 692, 0, 0, 0, 691, 0,
	0, 0, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 694, 701, 702, 0, 0, 0, 0, 0, 57,
	58, 0, 59, 60, 61, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2510,
	0, 0, 0, 0, 0, 0, 2516, 2465, 2466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	2081, 0, 0, 696, 697, 0, 2135, 0, 0, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2623, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2182, 0, 0, 0, 0,
	0, 0, 0, 2644, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 0, 2658, 0, 2659, 0,
	0, 0, 0, 2662, 2663, 2227, 2228, 2229, 2230, 2231,
	0, 0, 0, 0, 0, 679, 0, 2670, 683, 0,
	680, 681, 1612, 2237, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2245, 0,
	0, 696, 697, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 2060, 2703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2711, 0, 0, 2713,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2717, 0, 0, 0, 0, 0, 757,
	0, 0, 0, 0, 2752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2112,
	2113, 0, 0, 0, 0, 0, 0, 0, 2132, 0,
	2133, 2134, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2812, 595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2853, 0, 0,
	0, 0, 2480, 0, 0, 2483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2352, 0, 79, 0, 0, 1815, 1815,
	1815, 1815, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2132, 757, 0, 0, 0,
	1815, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2616, 0,
	0, 2617, 2618, 2619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2848,
	0, 0, 2679, 0, 2683, 2684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2352, 0, 79,
	0, 2352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2839, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 934, 919, 457,
	79, 865, 937, 834, 853, 947, 856, 859, 901, 813,
	879, 376, 850, 805, 838, 808, 845, 809, 836, 867,
	249, 833, 921, 883, 936, 331, 246, 815, 839, 390,
	855, 197, 903, 432, 233, 341, 338, 464, 261, 252,
	248, 232, 287, 348, 388, 451, 382, 943, 335, 889,
	2868, 442, 361, 0, 0, 79, 869, 925, 877, 915,
	864, 902, 823, 888, 938, 851, 898, 939, 293, 231,
	196, 373, 443, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 2881, 0, 2882, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 847, 895, 933, 848, 897, 244,
	291, 251, 243, 461, 944, 924, 812, 876, 932, 0,
	0, 214, 935, 871, 0, 900, 0, 950, 807, 891,
	0, 810, 814, 946, 928, 842, 254, 0, 0, 0,
	0, 0, 0, 0, 868, 878, 912, 862, 0, 0,
	0, 0, 0, 0, 0, 840, 0, 887, 0, 0,
	0, 819, 811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 866, 0, 0, 0, 822, 0,
	841, 913, 0, 804, 274, 816, 362, 236, 0, 917,
	927, 863, 495, 931, 861, 860, 907, 820, 923, 854,
	330, 818, 299, 192, 210, 0, 852, 372, 413, 419,
	922, 837, 846, 234, 844, 417, 386, 479, 218, 263,
	410, 391, 415, 398, 266, 886, 905, 416, 336, 466,
	405, 476, 496, 497, 242, 366, 486, 455, 492, 509,
	211, 239, 380, 448, 482, 439, 359, 462, 463, 298,
	438, 272, 195, 334, 502, 209, 425, 226, 216, 202,
	450, 474, 223, 429, 0, 0, 511, 204, 472, 447,
	355, 295, 296, 203, 0, 409, 247, 270, 237, 375,
	469, 470, 235, 512, 213, 491, 206, 1136, 490, 368,
	465, 473, 356, 346, 205, 471, 354, 345, 301, 320,
	321, 259, 281, 403, 339, 404, 282, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 513, 219, 220,
	221, 832, 258, 262, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 918, 460, 477, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 508, 367, 284, 440,
	300, 337, 910, 949, 385, 418, 224, 481, 441, 827,
	831, 825, 892, 826, 881, 882, 828, 940, 941, 942,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 914,
	821, 0, 829, 830, 0, 920, 929, 930, 532, 347,
	431, 478, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 885,
	191, 207, 333, 945, 407, 267, 510, 489, 485, 806,
	824, 241, 835, 843, 0, 849, 857, 858, 870, 872,
	873, 874, 875, 893, 894, 896, 904, 906, 909, 911,
	916, 926, 948, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 394, 395, 396, 397, 399,
	401, 408, 412, 420, 421, 422, 423, 424, 427, 428,
	433, 434, 435, 436, 437, 445, 449, 467, 468, 480,
	493, 498, 426, 276, 475, 499, 0, 342, 884, 890,
	344, 260, 279, 290, 899, 488, 446, 212, 414, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	393, 273, 250, 228, 411, 225, 430, 452, 453, 454,
	456, 357, 245, 392, 880, 908, 340, 458, 459, 286,
	358, 0, 0, 934, 919, 457, 0, 865, 937, 834,
	853, 947, 856, 859, 901, 813, 879, 376, 850, 805,
	838, 808, 845, 809, 836, 867, 249, 833, 921, 883,
	936, 331, 246, 815, 839, 390, 855, 197, 903, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 943, 335, 889, 0, 442, 361, 0,
	0, 0, 869, 925, 877, 915, 864, 902, 823, 888,
	938, 851, 898, 939, 293, 231, 196, 373, 443, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	847, 895, 933, 848, 897, 244, 291, 251, 243, 461,
	944, 924, 812, 876, 932, 0, 0, 214, 935, 871,
	0, 900, 0, 950, 807, 891, 0, 810, 814, 946,
	928, 842, 254, 0, 0, 0, 0, 0, 0, 0,
	868, 878, 912, 862, 0, 0, 0, 0, 0, 2383,
	0, 840, 0, 887, 0, 0, 0, 819, 811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	866, 0, 0, 0, 822, 0, 841, 913, 0, 804,
	274, 816, 362, 236, 0, 917, 927, 863, 495, 931,
	861, 860, 907, 820, 923, 854, 330, 818, 299, 192,
	210, 0, 852, 372, 413, 419, 922, 837, 846, 234,
	844, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 886, 905, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 1136, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 320, 321, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 832, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	918, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 367, 284, 440, 300, 337, 910, 949,
	385, 418, 224, 481, 441, 827, 831, 825, 892, 826,
	881, 882, 828, 940, 941, 942, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 914, 821, 0, 829, 830,
	0, 920, 929, 930, 532, 347, 431, 478, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 885, 191, 207, 333, 945,
	407, 267, 510, 489, 485, 806, 824, 241, 835, 843,
	0, 849, 857, 858, 870, 872, 873, 874, 875, 893,
	894, 896, 904, 906, 909, 911, 916, 926, 948, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 884, 890, 344, 260, 279, 290,
	899, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	880, 908, 340, 458, 459, 286, 358, 0, 0, 934,
	919, 457, 0, 865, 937, 834, 853, 947, 856, 859,
	901, 813, 879, 376, 850, 805, 838, 808, 845, 809,
	836, 867, 249, 833, 921, 883, 936, 331, 246, 815,
	839, 390, 855, 197, 903, 432, 233, 341, 338, 464,
	261, 252, 248, 232, 287, 348, 388, 451, 382, 943,
	335, 889, 0, 442, 361, 0, 0, 0, 869, 925,
	877, 915, 864, 902, 823, 888, 938, 851, 898, 939,
	293, 231, 196, 373, 443, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 847, 895, 933, 848,
	897, 244, 291, 251, 243, 461, 944, 924, 812, 876,
	932, 0, 0, 214, 935, 871, 0, 900, 0, 950,
	807, 891, 0, 810, 814, 946, 928, 842, 254, 0,
	0, 0, 0, 0, 0, 0, 868, 878, 912, 862,
	0, 0, 0, 0, 0, 2341, 0, 840, 0, 887,
	0, 0, 0, 819, 811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 866, 0, 0, 0,
	822, 0, 841, 913, 0, 804, 274, 816, 362, 236,
	0, 917, 927, 863, 495, 931, 861, 860, 907, 820,
	923, 854, 330, 818, 299, 192, 210, 0, 852, 372,
	413, 419, 922, 837, 846, 234, 844, 417, 386, 479,
	218, 263, 410, 391, 415, 398, 266, 886, 905, 416,
	336, 466, 405, 476, 496, 497, 242, 366, 486, 455,
	492, 509, 211, 239, 380, 448, 482, 439, 359, 462,
	463, 298, 438, 272, 195, 334, 502, 209, 425, 226,
	216, 202, 450, 474, 223, 429, 0, 0, 511, 204,
	472, 447, 355, 295, 296, 203, 0, 409, 247, 270,
	237, 375, 469, 470, 235, 512, 213, 491, 206, 1136,
	490, 368, 465, 473, 356, 346, 205, 471, 354, 345,
	301, 320, 321, 259, 281, 403, 339, 404, 282, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 513,
	219, 220, 221, 832, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 918, 460, 477, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 508, 367,
	284, 440, 300, 337, 910, 949, 385, 418, 224, 481,
	441, 827, 831, 825, 892, 826, 881, 882, 828, 940,
	941, 942, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 914, 821, 0, 829, 830, 0, 920, 929, 930,
	532, 347, 431, 478, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 885, 191, 207, 333, 945, 407, 267, 510, 489,
	485, 806, 824, 241, 835, 843, 0, 849, 857, 858,
	870, 872, 873, 874, 875, 893, 894, 896, 904, 906,
	909, 911, 916, 926, 948, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 412, 420, 421, 422, 423, 424,
	427, 428, 433, 434, 435, 436, 437, 445, 449, 467,
	468, 480, 493, 498, 426, 276, 475, 499, 0, 342,
	884, 890, 344, 260, 279, 290, 899, 488, 446, 212,
	414, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 393, 273, 250, 228, 411, 225, 430, 452,
	453, 454, 456, 357, 245, 392, 880, 908, 340, 458,
	459, 286, 358, 0, 0, 934, 919, 457, 0, 865,
	937, 834, 853, 947, 856, 859, 901, 813, 879, 376,
	850, 805, 838, 808, 845, 809, 836, 867, 249, 833,
	921, 883, 936, 331, 246, 815, 839, 390, 855, 197,
	903, 432, 233, 341, 338, 464, 261, 252, 248, 232,
	287, 348, 388, 451, 382, 943, 335, 889, 0, 442,
	361, 0, 0, 0, 869, 925, 877, 915, 864, 902,
	823, 888, 938, 851, 898, 939, 293, 231, 196, 373,
	443, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 847, 895, 933, 848, 897, 244, 291, 251,
	243, 461, 944, 924, 812, 876, 932, 0, 0, 214,
	935, 871, 0, 900, 0, 950, 807, 891, 0, 810,
	814, 946, 928, 842, 254, 0, 0, 0, 0, 0,
	0, 0, 868, 878, 912, 862, 0, 0, 0, 0,
	0, 1803, 0, 840, 0, 887, 0, 0, 0, 819,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 822, 0, 841, 913,
	0, 804, 274, 816, 362, 236, 0, 917, 927, 863,
	495, 931, 861, 860, 907, 820, 923, 854, 330, 818,
	299, 192, 210, 0, 852, 372, 413, 419, 922, 837,
	846, 234, 844, 417, 386, 479, 218, 263, 410, 391,
	415, 398, 266, 886, 905, 416, 336, 466, 405, 476,
	496, 497, 242, 366, 486, 455, 492, 509, 211, 239,
	380, 448, 482, 439, 359, 462, 463, 298, 438, 272,
	195, 334, 502, 209, 425, 226, 216, 202, 450, 474,
	223, 429, 0, 0, 511, 204, 472, 447, 355, 295,
	296, 203, 0, 409, 247, 270, 237, 375, 469, 470,
	235, 512, 213, 491, 206, 1136, 490, 368, 465, 473,
	356, 346, 205, 471, 354, 345, 301, 320, 321, 259,
	281, 403, 339, 404, 282, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 513, 219, 220, 221, 832,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 918, 460, 477, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 508, 367, 284, 440, 300, 337,
	910, 949, 385, 418, 224, 481, 441, 827, 831, 825,
	892, 826, 881, 882, 828, 940, 941, 942, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 914, 821, 0,
	829, 830, 0, 920, 929, 930, 532, 347, 431, 478,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 885, 191, 207,
	333, 945, 407, 267, 510, 489, 485, 806, 824, 241,
	835, 843, 0, 849, 857, 858, 870, 872, 873, 874,
	875, 893, 894, 896, 904, 906, 909, 911, 916, 926,
	948, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 394, 395, 396, 397, 399, 401, 408,
	412, 420, 421, 422, 423, 424, 427, 428, 433, 434,
	435, 436, 437, 445, 449, 467, 468, 480, 493, 498,
	426, 276, 475, 499, 0, 342, 884, 890, 344, 260,
	279, 290, 899, 488, 446, 212, 414, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 393, 273,
	250, 228, 411, 225, 430, 452, 453, 454, 456, 357,
	245, 392, 880, 908, 340, 458, 459, 286, 358, 0,
	0, 934, 919, 457, 0, 865, 937, 834, 853, 947,
	856, 859, 901, 813, 879, 376, 850, 805, 838, 808,
	845, 809, 836, 867, 249, 833, 921, 883, 936, 331,
	246, 815, 839, 390, 855, 197, 903, 432, 233, 341,
	338, 464, 261, 252, 248, 232, 287, 348, 388, 451,
	382, 943, 335, 889, 0, 442, 361, 0, 0, 0,
	869, 925, 877, 915, 864, 902, 823, 888, 938, 851,
	898, 939, 293, 231, 196, 373, 443, 265, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 847, 895,
	933, 848, 897, 244, 291, 251, 243, 461, 944, 924,
	812, 876, 932, 0, 0, 214, 935, 871, 0, 900,
	0, 950, 807, 891, 0, 810, 814, 946, 928, 842,
	254, 0, 0, 0, 0, 0, 0, 0, 868, 878,
	912, 862, 0, 0, 0, 0, 0, 0, 0, 840,
	0, 887, 0, 0, 0, 819, 811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 866, 0,
	0, 0, 822, 0, 841, 913, 0, 804, 274, 816,
	362, 236, 0, 917, 927, 863, 495, 931, 861, 860,
	907, 820, 923, 854, 330, 818, 299, 192, 210, 0,
	852, 372, 413, 419, 922, 837, 846, 234, 844, 417,
	386, 479, 218, 263, 410, 391, 415, 398, 266, 886,
	905, 416, 336, 466, 405, 476, 496, 497, 242, 366,
	486, 455, 492, 509, 211, 239, 380, 448, 482, 439,
	359, 462, 463, 298, 438, 272, 195, 334, 502, 209,
	425, 226, 216, 202, 450, 474, 223, 429, 0, 0,
	511, 204, 472, 447, 355, 295, 296, 203, 0, 409,
	247, 270, 237, 375, 469, 470, 235, 512, 213, 491,
	206, 1136, 490, 368, 465, 473, 356, 346, 205, 471,
	354, 345, 301, 320, 321, 259, 281, 403, 339, 404,
	282, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 513, 219, 220, 221, 832, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 918, 460,
	477, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	508, 367, 284, 440, 300, 337, 910, 949, 385, 418,
	224, 481, 441, 827, 831, 825, 892, 826, 881, 882,
	828, 940, 941, 942, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 914, 821, 0, 829, 830, 0, 920,
	929, 930, 532, 347, 431, 478, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 885, 191, 207, 333, 945, 407, 267,
	510, 489, 485, 806, 824, 241, 835, 843, 0, 849,
	857, 858, 870, 872, 873, 874, 875, 893, 894, 896,
	904, 906, 909, 911, 916, 926, 948, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 394,
	395, 396, 397, 399, 401, 408, 412, 420, 421, 422,
	423, 424, 427, 428, 433, 434, 435, 436, 437, 445,
	449, 467, 468, 480, 493, 498, 426, 276, 475, 499,
	0, 342, 884, 890, 344, 260, 279, 290, 899, 488,
	446, 212, 414, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 393, 273, 250, 228, 411, 225,
	430, 452, 453, 454, 456, 357, 245, 392, 880, 908,
	340, 458, 459, 286, 358, 0, 0, 934, 919, 457,
	0, 865, 937, 834, 853, 947, 856, 859, 901, 813,
	879, 376, 850, 805, 838, 808, 845, 809, 836, 867,
	249, 833, 921, 883, 936, 331, 246, 815, 839, 390,
	855, 197, 903, 432, 233, 341, 338, 464, 261, 252,
	248, 232, 287, 348, 388, 451, 382, 943, 335, 889,
	0, 442, 361, 0, 0, 0, 869, 925, 877, 915,
	864, 902, 823, 888, 938, 851, 898, 939, 293, 231,
	196, 373, 443, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 847, 895, 933, 848, 897, 244,
	291, 251, 243, 461, 944, 924, 812, 876, 932, 0,
	0, 214, 935, 871, 0, 900, 0, 950, 807, 891,
	0, 810, 814, 946, 928, 842, 254, 0, 0, 0,
	0, 0, 0, 0, 868, 878, 912, 862, 0, 0,
	0, 0, 0, 0, 0, 840, 0, 887, 0, 0,
	0, 819, 811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 866, 0, 0, 0, 822, 0,
	841, 913, 0, 804, 274, 816, 362, 236, 0, 917,
	927, 863, 495, 931, 861, 860, 907, 820, 923, 854,
	330, 818, 299, 192, 210, 0, 852, 372, 413, 419,
	922, 837, 846, 234, 844, 417, 386, 479, 218, 263,
	410, 391, 415, 398, 266, 886, 905, 416, 336, 466,
	405, 476, 496, 497, 242, 366, 486, 455, 492, 509,
	211, 239, 380, 448, 482, 439, 359, 462, 463, 298,
	438, 272, 195, 334, 502, 209, 425, 226, 216, 202,
	450, 474, 223, 429, 0, 0, 511, 204, 472, 447,
	355, 295, 296, 203, 0, 409, 247, 270, 237, 375,
	469, 470, 235, 512, 213, 491, 206, 1136, 490, 368,
	465, 473, 356, 346, 205, 471, 354, 345, 301, 320,
	321, 259, 281, 403, 339, 404, 282, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 513, 219, 220,
	221, 832, 258, 262, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 918, 460, 477, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 508, 367, 284, 440,
	300, 337, 910, 949, 385, 418, 224, 481, 441, 827,
	831, 825, 892, 826, 881, 882, 828, 940, 941, 942,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 914,
	821, 0, 829, 830, 0, 920, 929, 930, 532, 347,
	431, 478, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 885,
	191, 207, 333, 945, 407, 267, 510, 489, 485, 806,
	824, 241, 835, 843, 0, 849, 857, 858, 870, 872,
	873, 874, 875, 893, 894, 896, 904, 906, 909, 911,
	916, 926, 948, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 394, 395, 396, 397, 399,
	401, 408, 412, 420, 421, 422, 423, 424, 427, 428,
	433, 434, 435, 436, 437, 445, 449, 467, 468, 480,
	493, 498, 426, 276, 475, 499, 0, 342, 884, 890,
	344, 260, 279, 290, 899, 488, 446, 212, 414, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	393, 273, 250, 228, 411, 225, 430, 452, 453, 454,
	456, 357, 245, 392, 880, 908, 340, 458, 459, 286,
	358, 0, 0, 934, 919, 457, 0, 865, 937, 834,
	853, 947, 856, 859, 901, 813, 879, 376, 850, 805,
	838, 808, 845, 809, 836, 867, 249, 833, 921, 883,
	936, 331, 246, 815, 839, 390, 855, 197, 903, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 943, 335, 889, 0, 442, 361, 0,
	0, 0, 869, 925, 877, 915, 864, 902, 823, 888,
	938, 851, 898, 939, 293, 231, 196, 373, 443, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	847, 895, 933, 848, 897, 244, 291, 251, 243, 461,
	944, 924, 812, 876, 932, 0, 0, 951, 935, 871,
	0, 900, 0, 950, 807, 891, 0, 810, 814, 946,
	928, 842, 254, 0, 0, 0, 0, 0, 0, 0,
	868, 878, 912, 862, 0, 0, 0, 0, 0, 0,
	0, 840, 0, 887, 0, 0, 0, 819, 811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	866, 0, 0, 0, 822, 0, 841, 913, 0, 804,
	274, 816, 362, 236, 0, 917, 927, 863, 495, 931,
	861, 860, 907, 820, 923, 854, 330, 818, 299, 192,
	210, 0, 852, 372, 413, 419, 922, 837, 846, 234,
	844, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 886, 905, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 817, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 320, 321, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 832, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	918, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 803, 797, 796, 300, 337, 910, 949,
	385, 418, 224, 481, 441, 827, 831, 825, 892, 826,
	881, 882, 828, 940, 941, 942, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 914, 821, 0, 829, 830,
	0, 920, 929, 930, 532, 347, 431, 478, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 885, 191, 207, 333, 945,
	407, 267, 510, 489, 485, 806, 824, 241, 835, 843,
	0, 849, 857, 858, 870, 872, 873, 874, 875, 893,
	894, 896, 904, 906, 909, 911, 916, 926, 948, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 884, 890, 344, 260, 279, 290,
	899, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	880, 908, 340, 458, 459, 286, 358, 0, 0, 934,
	919, 457, 0, 865, 937, 834, 853, 947, 856, 859,
	901, 813, 879, 376, 850, 805, 838, 808, 845, 809,
	836, 867, 249, 833, 921, 883, 936, 331, 246, 815,
	839, 390, 855, 197, 903, 432, 233, 341, 338, 464,
	261, 252, 248, 232, 287, 348, 388, 451, 382, 943,
	335, 889, 0, 442, 361, 0, 0, 0, 869, 925,
	877, 915, 864, 902, 823, 888, 938, 851, 898, 939,
	293, 231, 196, 373, 443, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 847, 895, 933, 848,
	897, 244, 291, 251, 243, 461, 944, 924, 812, 876,
	932, 0, 0, 951, 935, 871, 0, 900, 0, 950,
	807, 891, 0, 810, 814, 946, 928, 842, 254, 0,
	0, 0, 0, 0, 0, 0, 868, 878, 912, 862,
	0, 0, 0, 0, 0, 0, 0, 840, 0, 887,
	0, 0, 0, 819, 811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 866, 0, 0, 0,
	822, 0, 841, 913, 0, 804, 274, 816, 362, 236,
	0, 917, 927, 863, 495, 931, 861, 860, 907, 820,
	923, 854, 330, 818, 299, 192, 210, 0, 852, 372,
	413, 419, 922, 837, 846, 234, 844, 417, 386, 479,
	218, 263, 410, 391, 415, 398, 266, 886, 905, 416,
	336, 466, 405, 476, 496, 497, 242, 366, 486, 455,
	492, 509, 211, 239, 380, 448, 482, 439, 359, 462,
	463, 298, 438, 272, 195, 334, 502, 209, 425, 226,
	216, 202, 450, 1351, 223, 429, 0, 0, 511, 204,
	472, 447, 355, 295, 296, 203, 0, 409, 247, 270,
	237, 375, 469, 470, 235, 512, 213, 491, 206, 817,
	490, 368, 465, 473, 356, 346, 205, 471, 354, 345,
	301, 320, 321, 259, 281, 403, 339, 404, 282, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 513,
	219, 220, 221, 832, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 918, 460, 477, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 508, 803,
	797, 796, 300, 337, 910, 949, 385, 418, 224, 481,
	441, 827, 831, 825, 892, 826, 881, 882, 828, 940,
	941, 942, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 914, 821, 0, 829, 830, 0, 920, 929, 930,
	532, 347, 431, 478, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 885, 191, 207, 333, 945, 407, 267, 510, 489,
	485, 806, 824, 241, 835, 843, 0, 849, 857, 858,
	870, 872, 873, 874, 875, 893, 894, 896, 904, 906,
	909, 911, 916, 926, 948, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 412, 420, 421, 422, 423, 424,
	427, 428, 433, 434, 435, 436, 437, 445, 449, 467,
	468, 480, 493, 498, 426, 276, 475, 499, 0, 342,
	884, 890, 344, 260, 279, 290, 899, 488, 446, 212,
	414, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 393, 273, 250, 228, 411, 225, 430, 452,
	453, 454, 456, 357, 245, 392, 880, 908, 340, 458,
	459, 286, 358, 0, 0, 934, 919, 457, 0, 865,
	937, 834, 853, 947, 856, 859, 901, 813, 879, 376,
	850, 805, 838, 808, 845, 809, 836, 867, 249, 833,
	921, 883, 936, 331, 246, 815, 839, 390, 855, 197,
	903, 432, 233, 341, 338, 464, 261, 252, 248, 232,
	287, 348, 388, 451, 382, 943, 335, 889, 0, 442,
	361, 0, 0, 0, 869, 925, 877, 915, 864, 902,
	823, 888, 938, 851, 898, 939, 293, 231, 196, 373,
	443, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 847, 895, 933, 848, 897, 244, 291, 251,
	243, 461, 944, 924, 812, 876, 932, 0, 0, 951,
	935, 871, 0, 900, 0, 950, 807, 891, 0, 810,
	814, 946, 928, 842, 254, 0, 0, 0, 0, 0,
	0, 0, 868, 878, 912, 862, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 887, 0, 0, 0, 819,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 822, 0, 841, 913,
	0, 804, 274, 816, 362, 236, 0, 917, 927, 863,
	495, 931, 861, 860, 907, 820, 923, 854, 330, 818,
	299, 192, 210, 0, 852, 372, 413, 419, 922, 837,
	846, 234, 844, 417, 386, 479, 218, 263, 410, 391,
	415, 398, 266, 886, 905, 416, 336, 466, 405, 476,
	496, 497, 242, 366, 486, 455, 492, 509, 211, 239,
	380, 448, 482, 439, 359, 462, 463, 298, 438, 272,
	195, 334, 502, 209, 425, 226, 216, 202, 450, 794,
	223, 429, 0, 0, 511, 204, 472, 447, 355, 295,
	296, 203, 0, 409, 247, 270, 237, 375, 469, 470,
	235, 512, 213, 491, 206, 817, 490, 368, 465, 473,
	356, 346, 205, 471, 354, 345, 301, 320, 321, 259,
	281, 403, 339, 404, 282, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 513, 219, 220, 221, 832,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 918, 460, 477, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 508, 803, 797, 796, 300, 337,
	910, 949, 385, 418, 224, 481, 441, 827, 831, 825,
	892, 826, 881, 882, 828, 940, 941, 942, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 914, 821, 0,
	829, 830, 0, 920, 929, 930, 532, 347, 431, 478,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 885, 191, 207,
	333, 945, 407, 267, 510, 489, 485, 806, 824, 241,
	835, 843, 0, 849, 857, 858, 870, 872, 873, 874,
	875, 893, 894, 896, 904, 906, 909, 911, 916, 926,
	948, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 394, 395, 396, 397, 399, 401, 408,
	412, 420, 421, 422, 423, 424, 427, 428, 433, 434,
	435, 436, 437, 445, 449, 467, 468, 480, 493, 498,
	426, 276, 475, 499, 0, 342, 884, 890, 344, 260,
	279, 290, 899, 488, 446, 212, 414, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 393, 273,
	250, 228, 411, 225, 430, 452, 453, 454, 456, 357,
	245, 392, 880, 908, 340, 458, 459, 286, 358, 0,
	0, 0, 0, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 1748, 0,
	613, 0, 0, 0, 249, 618, 0, 0, 0, 331,
	246, 0, 1749, 390, 0, 197, 0, 432, 233, 341,
	338, 464, 261, 252, 248, 232, 287, 348, 388, 451,
	382, 625, 335, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 620, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 443, 265, 0, 87,
	0, 0, 188, 189, 190, 689, 696, 697, 698, 699,
	700, 690, 692, 0, 0, 222, 691, 229, 636, 638,
	637, 647, 648, 649, 650, 651, 652, 653, 634, 694,
	701, 702, 0, 244, 291, 251, 243, 461, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 596, 610, 0, 624, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 607, 608, 783, 0, 0,
	0, 673, 0, 609, 0, 0, 617, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 672, 0, 0, 495, 0, 0, 670,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 413, 419, 0, 0, 0, 234, 0, 417,
	386, 479, 218, 263, 410, 391, 415, 398, 266, 0,
	0, 416, 336, 466, 405, 476, 496, 497, 242, 366,
	486, 455, 492, 509, 211, 239, 380, 448, 482, 439,
	359, 462, 463, 298, 438, 272, 195, 334, 502, 209,
	425, 226, 216, 202, 450, 474, 223, 429, 0, 0,
	511, 204, 472, 447, 355, 295, 296, 203, 0, 409,
	247, 270, 237, 375, 469, 470, 235, 512, 213, 491,
	206, 0, 490, 368, 465, 473, 356, 346, 205, 471,
	354, 345, 301, 642, 643, 259, 281, 403, 339, 404,
	282, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 513, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 460,
	477, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	508, 367, 284, 440, 300, 337, 0, 0, 385, 418,
	224, 481, 441, 679, 671, 629, 683, 631, 680, 681,
	626, 627, 630, 682, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 674, 616, 615, 0, 622, 623, 0,
	632, 633, 635, 639, 640, 641, 644, 645, 646, 654,
	656, 657, 655, 658, 659, 660, 663, 664, 665, 666,
	661, 662, 667, 614, 191, 207, 333, 0, 407, 267,
	510, 489, 485, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 394,
	395, 396, 397, 399, 401, 408, 412, 420, 421, 422,
	423, 424, 427, 428, 433, 434, 435, 436, 437, 445,
	449, 467, 468, 480, 493, 498, 426, 276, 475, 499,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 488,
	446, 212, 414, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 393, 273, 250, 228, 411, 225,
	430, 452, 453, 454, 456, 357, 245, 392, 0, 358,
	340, 458, 459, 286, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 613, 0, 0, 0, 249, 618, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 432, 233,
	341, 338, 464, 261, 252, 248, 232, 287, 348, 388,
	451, 382, 625, 335, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 620, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 443, 265, 0,
	87, 0, 0, 188, 189, 190, 689, 696, 697, 698,
	699, 700, 690, 692, 0, 0, 222, 691, 229, 636,
	638, 637, 647, 648, 649, 650, 651, 652, 653, 634,
	694, 701, 702, 0, 244, 291, 251, 243, 461, 0,
	0, 1714, 1715, 1716, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 596, 610, 0, 624, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 608, 0, 0,
	0, 0, 673, 0, 609, 0, 0, 617, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 672, 0, 0, 495, 0, 0,
	670, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 413, 419, 0, 0, 0, 234, 0,
	417, 386, 479, 218, 263, 410, 391, 415, 398, 266,
	0, 0, 416, 336, 466, 405, 476, 496, 497, 242,
	366, 486, 455, 492, 509, 211, 239, 380, 448, 482,
	439, 359, 462, 463, 298, 438, 272, 195, 334, 502,
	209, 425, 226, 216, 202, 450, 474, 223, 429, 0,
	0, 511, 204, 472, 447, 355, 295, 296, 203, 0,
	409, 247, 270, 237, 375, 469, 470, 235, 512, 213,
	491, 206, 0, 490, 368, 465, 473, 356, 346, 205,
	471, 354, 345, 301, 642, 643, 259, 281, 403, 339,
	404, 282, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 513, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	460, 477, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 508, 367, 284, 440, 300, 337, 0, 0, 385,
	418, 224, 481, 441, 679, 671, 629, 683, 631, 680,
	681, 626, 627, 630, 682, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 674, 616, 615, 0, 622, 623,
	0, 632, 633, 635, 639, 640, 641, 644, 645, 646,
	654, 656, 657, 655, 658, 659, 660, 663, 664, 665,
	666, 661, 662, 667, 614, 191, 207, 333, 0, 407,
	267, 510, 489, 485, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 412, 420, 421,
	422, 423, 424, 427, 428, 433, 434, 435, 436, 437,
	445, 449, 467, 468, 480, 493, 498, 426, 276, 475,
	499, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	488, 446, 212, 414, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 393, 273, 250, 228, 411,
	225, 430, 452, 453, 454, 456, 357, 245, 392, 0,
	358, 340, 458, 459, 286, 457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 613, 0, 0, 0, 249, 618, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 625, 335, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 620, 621, 0, 0, 0, 0,
	0, 0, 1830, 0, 293, 231, 196, 373, 443, 265,
	0, 87, 0, 0, 188, 189, 190, 689, 696, 697,
	698, 699, 700, 690, 692, 0, 0, 222, 691, 229,
	636, 638, 637, 647, 648, 649, 650, 651, 652, 653,
	634, 694, 701, 702, 1831, 244, 291, 251, 243, 461,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 596, 610, 0, 624, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 607, 608, 0,
	0, 0, 0, 673, 0, 609, 0, 0, 617, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 672, 0, 0, 495, 0,
	0, 670, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 413, 419, 0, 0, 0, 234,
	0, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 0, 0, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 0, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 642, 643, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 367, 284, 440, 300, 337, 0, 0,
	385, 418, 224, 481, 441, 679, 671, 629, 683, 631,
	680, 681, 626, 627, 630, 682, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 674, 616, 615, 0, 622,
	623, 0, 632, 633, 635, 639, 640, 641, 644, 645,
	646, 654, 656, 657, 655, 658, 659, 660, 663, 664,
	665, 666, 661, 662, 667, 614, 191, 207, 333, 0,
	407, 267, 510, 489, 485, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	0, 0, 340, 458, 459, 286, 358, 0, 0, 0,
	78, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 613, 0,
	0, 0, 249, 618, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 432, 233, 341, 338, 464,
	261, 252, 248, 232, 287, 348, 388, 451, 382, 625,
	335, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	620, 621, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 443, 265, 0, 87, 0, 0,
	188, 189, 190, 689, 696, 697, 698, 699, 700, 690,
	692, 0, 0, 222, 691, 229, 636, 638, 637, 647,
	648, 649, 650, 651, 652, 653, 634, 694, 701, 702,
	0, 244, 291, 251, 243, 461, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 596, 610, 0, 624, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 607, 608, 0, 0, 0, 0, 673,
	0, 609, 0, 0, 617, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 672, 0, 0, 495, 0, 0, 670, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	413, 419, 0, 0, 0, 234, 0, 417, 386, 479,
	218, 263, 410, 391, 415, 398, 266, 0, 0, 416,
	336, 466, 405, 476, 496, 497, 242, 366, 486, 455,
	492, 509, 211, 239, 380, 448, 482, 439, 359, 462,
	463, 298, 438, 272, 195, 334, 502, 209, 425, 226,
	216, 202, 450, 474, 223, 429, 0, 0, 511, 204,
	472, 447, 355, 295, 296, 203, 0, 409, 247, 270,
	237, 375, 469, 470, 235, 512, 213, 491, 206, 0,
	490, 368, 465, 473, 356, 346, 205, 471, 354, 345,
	301, 642, 643, 259, 281, 403, 339, 404, 282, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 513,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 460, 477, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 508, 367,
	284, 440, 300, 337, 0, 0, 385, 418, 224, 481,
	441, 679, 671, 629, 683, 631, 680, 681, 626, 627,
	630, 682, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 674, 616, 615, 0, 622, 623, 0, 632, 633,
	635, 639, 640, 641, 644, 645, 646, 654, 656, 657,
	655, 658, 659, 660, 663, 664, 665, 666, 661, 662,
	667, 614, 191, 207, 333, 86, 407, 267, 510, 489,
	485, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 412, 420, 421, 422, 423, 424,
	427, 428, 433, 434, 435, 436, 437, 445, 449, 467,
	468, 480, 493, 498, 426, 276, 475, 499, 0, 342,
	0, 0, 344, 260, 279, 290, 0, 488, 446, 212,
	414, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 393, 273, 250, 228, 411, 225, 430, 452,
	453, 454, 456, 357, 245, 392, 0, 358, 340, 458,
	459, 286, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 613,
	0, 0, 0, 249, 618, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 432, 233, 341, 338,
	464, 261, 252, 248, 232, 287, 348, 388, 451, 382,
	625, 335, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 620, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 443, 265, 0, 87, 0,
	0, 188, 189, 190, 689, 696, 697, 698, 699, 700,
	690, 692, 0, 0, 222, 691, 229, 636, 638, 637,
	647, 648, 649, 650, 651, 652, 653, 634, 694, 701,
	702, 0, 244, 291, 251, 243, 461, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 596, 610, 0, 624, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 607, 608, 0, 0, 0, 0,
	673, 0, 609, 0, 0, 617, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	236, 0, 672, 0, 0, 495, 0, 0, 670, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 413, 419, 0, 0, 0, 234, 0, 417, 386,
	479, 218, 263, 410, 391, 415, 398, 266, 2875, 0,
	416, 336, 466, 405, 476, 496, 497, 242, 366, 486,
	455, 492, 509, 211, 239, 380, 448, 482, 439, 359,
	462, 463, 298, 438, 272, 195, 334, 502, 209, 425,
	226, 216, 202, 450, 474, 223, 429, 0, 0, 511,
	204, 472, 447, 355, 295, 296, 203, 0, 409, 247,
	270, 237, 375, 469, 470, 235, 512, 213, 491, 206,
	0, 490, 368, 465, 473, 356, 346, 205, 471, 354,
	345, 301, 642, 643, 259, 281, 403, 339, 404, 282,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	513, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 402, 400, 406, 0, 460, 477,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 508,
	367, 284, 440, 300, 337, 0, 0, 385, 418, 224,
	481, 441, 679, 671, 629, 683, 631, 680, 681, 626,
	627, 630, 682, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 674, 616, 615, 0, 622, 623, 0, 632,
	633, 635, 639, 640, 641, 644, 645, 646, 654, 656,
	657, 655, 658, 659, 660, 663, 664, 665, 666, 661,
	662, 667, 614, 191, 207, 333, 0, 407, 267, 510,
	489, 485, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 412, 420, 421, 422, 423,
	424, 427, 428, 433, 434, 435, 436, 437, 445, 449,
	467, 468, 480, 493, 498, 426, 276, 475, 499, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 488, 446,
	212, 414, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 393, 273, 250, 228, 411, 225, 430,
	452, 453, 454, 456, 357, 245, 392, 0, 358, 340,
	458, 459, 286, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	613, 0, 0, 0, 249, 618, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 432, 233, 341,
	338, 464, 261, 252, 248, 232, 287, 348, 388, 451,
	382, 625, 335, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 620, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 443, 265, 0, 87,
	0, 1318, 188, 189, 190, 689, 696, 697, 698, 699,
	700, 690, 692, 0, 0, 222, 691, 229, 636, 638,
	637, 647, 648, 649, 650, 651, 652, 653, 634, 694,
	701, 702, 0, 244, 291, 251, 243, 461, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 596, 610, 0, 624, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 607, 608, 0, 0, 0,
	0, 673, 0, 609, 0, 0, 617, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 672, 0, 0, 495, 0, 0, 670,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 413, 419, 0, 0, 0, 234, 0, 417,
	386, 479, 218, 263, 410, 391, 415, 398, 266, 0,
	0, 416, 336, 466, 405, 476, 496, 497, 242, 366,
	486, 455, 492, 509, 211, 239, 380, 448, 482, 439,
	359, 462, 463, 298, 438, 272, 195, 334, 502, 209,
	425, 226, 216, 202, 450, 474, 223, 429, 0, 0,
	511, 204, 472, 447, 355, 295, 296, 203, 0, 409,
	247, 270, 237, 375, 469, 470, 235, 512, 213, 491,
	206, 0, 490, 368, 465, 473, 356, 346, 205, 471,
	354, 345, 301, 642, 643, 259, 281, 403, 339, 404,
	282, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 513, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 460,
	477, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	508, 367, 284, 440, 300, 337, 0, 0, 385, 418,
	224, 481, 441, 679, 671, 629, 683, 631, 680, 681,
	626, 627, 630, 682, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 674, 616, 615, 0, 622, 623, 0,
	632, 633, 635, 639, 640, 641, 644, 645, 646, 654,
	656, 657, 655, 658, 659, 660, 663, 664, 665, 666,
	661, 662, 667, 614, 191, 207, 333, 0, 407, 267,
	510, 489, 485, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 394,
	395, 396, 397, 399, 401, 408, 412, 420, 421, 422,
	423, 424, 427, 428, 433, 434, 435, 436, 437, 445,
	449, 467, 468, 480, 493, 498, 426, 276, 475, 499,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 488,
	446, 212, 414, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 393, 273, 250, 228, 411, 225,
	430, 452, 453, 454, 456, 357, 245, 392, 0, 358,
	340, 458, 459, 286, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 613, 0, 0, 0, 249, 618, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 432, 233,
	341, 338, 464, 261, 252, 248, 232, 287, 348, 388,
	451, 382, 625, 335, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 620, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 443, 265, 0,
	87, 0, 0, 188, 189, 190, 689, 696, 697, 698,
	699, 700, 690, 692, 0, 0, 222, 691, 229, 636,
	638, 637, 647, 648, 649, 650, 651, 652, 653, 634,
	694, 701, 702, 0, 244, 291, 251, 243, 461, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 596, 610, 0, 624, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 608, 783, 0,
	0, 0, 673, 0, 609, 0, 0, 617, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 672, 0, 0, 495, 0, 0,
	670, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 413, 419, 0, 0, 0, 234, 0,
	417, 386, 479, 218, 263, 410, 391, 415, 398, 266,
	0, 0, 416, 336, 466, 405, 476, 496, 497, 242,
	366, 486, 455, 492, 509, 211, 239, 380, 448, 482,
	439, 359, 462, 463, 298, 438, 272, 195, 334, 502,
	209, 425, 226, 216, 202, 450, 474, 223, 429, 0,
	0, 511, 204, 472, 447, 355, 295, 296, 203, 0,
	409, 247, 270, 237, 375, 469, 470, 235, 512, 213,
	491, 206, 0, 490, 368, 465, 473, 356, 346, 205,
	471, 354, 345, 301, 642, 643, 259, 281, 403, 339,
	404, 282, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 513, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	460, 477, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 508, 367, 284, 440, 300, 337, 0, 0, 385,
	418, 224, 481, 441, 679, 671, 629, 683, 631, 680,
	681, 626, 627, 630, 682, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 674, 616, 615, 0, 622, 623,
	0, 632, 633, 635, 639, 640, 641, 644, 645, 646,
	654, 656, 657, 655, 658, 659, 660, 663, 664, 665,
	666, 661, 662, 667, 614, 191, 207, 333, 0, 407,
	267, 510, 489, 485, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 412, 420, 421,
	422, 423, 424, 427, 428, 433, 434, 435, 436, 437,
	445, 449, 467, 468, 480, 493, 498, 426, 276, 475,
	499, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	488, 446, 212, 414, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 393, 273, 250, 228, 411,
	225, 430, 452, 453, 454, 456, 357, 245, 392, 0,
	358, 340, 458, 459, 286, 457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 613, 0, 0, 0, 249, 618, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 625, 335, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 620, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 443, 265,
	0, 87, 0, 0, 188, 189, 190, 689, 696, 697,
	698, 699, 700, 690, 692, 0, 0, 222, 691, 229,
	636, 638, 637, 647, 648, 649, 650, 651, 652, 653,
	634, 694, 701, 702, 0, 244, 291, 251, 243, 461,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 596, 610, 0, 624, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 607, 608, 0,
	0, 0, 0, 673, 0, 609, 0, 0, 617, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 672, 0, 0, 495, 0,
	0, 670, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 413, 419, 0, 0, 0, 234,
	0, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 0, 0, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 0, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 642, 643, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 367, 284, 440, 300, 337, 0, 0,
	385, 418, 224, 481, 441, 679, 671, 629, 683, 631,
	680, 681, 626, 627, 630, 682, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 674, 616, 615, 0, 622,
	623, 0, 632, 633, 635, 639, 640, 641, 644, 645,
	646, 654, 656, 657, 655, 658, 659, 660, 663, 664,
	665, 666, 661, 662, 667, 614, 191, 207, 333, 0,
	407, 267, 510, 489, 485, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	0, 358, 340, 458, 459, 286, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 613, 0, 0, 0, 249, 618, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	432, 233, 341, 338, 464, 261, 252, 248, 232, 287,
	348, 388, 451, 382, 625, 335, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 620, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 443,
	265, 0, 87, 0, 0, 188, 189, 190, 689, 696,
	697, 698, 699, 700, 690, 692, 0, 0, 222, 691,
	229, 636, 638, 637, 647, 648, 649, 650, 651, 652,
	653, 634, 694, 701, 702, 0, 244, 291, 251, 243,
	461, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 0, 624,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 608,
	0, 0, 0, 0, 673, 0, 609, 0, 0, 617,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 672, 0, 0, 495,
	0, 0, 670, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 413, 419, 0, 0, 0,
	234, 0, 417, 386, 479, 218, 263, 410, 391, 415,
	398, 266, 0, 0, 416, 336, 466, 405, 476, 496,
	497, 242, 366, 486, 455, 492, 509, 211, 239, 380,
	448, 482, 439, 359, 462, 463, 298, 438, 272, 195,
	334, 502, 209, 425, 226, 216, 202, 450, 474, 223,
	429, 0, 0, 511, 204, 472, 447, 355, 295, 296,
	203, 0, 409, 247, 270, 237, 375, 469, 470, 235,
	512, 213, 491, 206, 0, 490, 368, 465, 473, 356,
	346, 205, 471, 354, 345, 301, 642, 643, 259, 281,
	403, 339, 404, 282, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 513, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 402, 400,
	406, 0, 460, 477, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 508, 367, 284, 440, 300, 337, 0,
	0, 385, 418, 224, 481, 441, 679, 671, 629, 683,
	631, 680, 681, 626, 627, 630, 682, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 674, 616, 615, 0,
	622, 623, 0, 632, 633, 635, 639, 640, 641, 644,
	645, 646, 654, 656, 657, 655, 658, 659, 660, 663,
	664, 665, 666, 661, 662, 667, 614, 191, 207, 333,
	0, 407, 267, 510, 489, 485, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 412,
	420, 421, 422, 423, 424, 427, 428, 433, 434, 435,
	436, 437, 445, 449, 467, 468, 480, 493, 498, 426,
	276, 475, 499, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 488, 446, 212, 414, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 393, 273, 250,
	228, 411, 225, 430, 452, 453, 454, 456, 357, 245,
	392, 0, 358, 340, 458, 459, 286, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 432, 233, 341, 338, 464, 261, 252, 248, 232,
	287, 348, 388, 451, 382, 0, 335, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	443, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	696, 697, 0, 0, 0, 0, 1659, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 461, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 413, 419, 0, 0,
	0, 234, 0, 417, 386, 479, 218, 263, 410, 391,
	415, 398, 266, 0, 0, 416, 336, 466, 405, 476,
	496, 497, 242, 366, 486, 455, 492, 509, 211, 239,
	380, 448, 482, 439, 359, 462, 463, 298, 438, 272,
	195, 334, 502, 209, 425, 226, 216, 202, 450, 474,
	223, 429, 0, 0, 511, 204, 472, 447, 355, 295,
	296, 203, 0, 409, 247, 270, 237, 375, 469, 470,
	235, 512, 213, 491, 206, 0, 490, 368, 465, 473,
	356, 346, 205, 471, 354, 345, 301, 320, 321, 259,
	281, 403, 339, 404, 282, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 513, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 460, 477, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 508, 367, 284, 440, 300, 337,
	0, 0, 385, 418, 224, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 347, 431, 478,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 407, 267, 510, 489, 485, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 394, 395, 396, 397, 399, 401, 408,
	412, 420, 421, 422, 423, 424, 427, 428, 433, 434,
	435, 436, 437, 445, 449, 467, 468, 480, 493, 498,
	426, 276, 475, 499, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 488, 446, 212, 414, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 393, 273,
	250, 228, 411, 225, 430, 452, 453, 454, 456, 357,
	245, 392, 0, 358, 340, 458, 459, 286, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 432, 233, 341, 338, 464, 261, 252, 248,
	232, 287, 348, 388, 451, 382, 0, 335, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 443, 265, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 0, 0, 0, 0, 0, 244, 291,
	251, 243, 461, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 1002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 0, 0,
	1001, 495, 0, 0, 0, 0, 0, 998, 999, 330,
	959, 299, 192, 210, 992, 996, 372, 413, 419, 0,
	0, 0, 234, 0, 417, 386, 479, 218, 263, 410,
	391, 415, 398, 266, 0, 0, 416, 336, 466, 405,
	476, 496, 497, 242, 366, 486, 455, 492, 509, 211,
	239, 380, 448, 482, 439, 359, 462, 463, 298, 438,
	272, 195, 334, 502, 209, 425, 226, 216, 202, 450,
	474, 223, 429, 0, 0, 511, 204, 472, 447, 355,
	295, 296, 203, 0, 409, 247, 270, 237, 375, 469,
	470, 235, 512, 213, 491, 206, 0, 490, 368, 465,
	473, 356, 346, 205, 471, 354, 345, 301, 320, 321,
	259, 281, 403, 339, 404, 282, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 513, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	402, 400, 406, 0, 460, 477, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 508, 367, 284, 440, 300,
	337, 0, 0, 385, 418, 224, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 347, 431,
	478, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 407, 267, 510, 489, 485, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 412, 420, 421, 422, 423, 424, 427, 428, 433,
	434, 435, 436, 437, 445, 449, 467, 468, 480, 493,
	498, 426, 276, 475, 499, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 488, 446, 212, 414, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 393,
	273, 250, 228, 411, 225, 430, 452, 453, 454, 456,
	357, 245, 392, 0, 0, 340, 458, 459, 286, 358,
	0, 0, 0, 78, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 432, 233,
	341, 338, 464, 261, 252, 248, 232, 287, 348, 388,
	451, 382, 0, 335, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 443, 265, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 461, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 413, 419, 0, 0, 0, 234, 0,
	417, 386, 479, 218, 263, 410, 391, 415, 398, 266,
	0, 0, 416, 336, 466, 405, 476, 496, 497, 242,
	366, 486, 455, 492, 509, 211, 239, 380, 448, 482,
	439, 359, 462, 463, 298, 438, 272, 195, 334, 502,
	209, 425, 226, 216, 202, 450, 474, 223, 429, 0,
	0, 511, 204, 472, 447, 355, 295, 296, 203, 0,
	409, 247, 270, 237, 375, 469, 470, 235, 512, 213,
	491, 206, 0, 490, 368, 465, 473, 356, 346, 205,
	471, 354, 345, 301, 320, 321, 259, 281, 403, 339,
	404, 282, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 513, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	460, 477, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 508, 367, 284, 440, 300, 337, 0, 0, 385,
	418, 224, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 347, 431, 478, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 86, 407,
	267, 510, 489, 485, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 412, 420, 421,
	422, 423, 424, 427, 428, 433, 434, 435, 436, 437,
	445, 449, 467, 468, 480, 493, 498, 426, 276, 475,
	499, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	488, 446, 212, 414, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 393, 273, 250, 228, 411,
	225, 430, 452, 453, 454, 456, 357, 245, 392, 0,
	1337, 340, 458, 459, 286, 457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 1339, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 0, 335, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 443, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 461,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 1170, 0, 1171, 1172, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 413, 419, 0, 0, 0, 234,
	0, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 0, 0, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 0, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 320, 321, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 367, 284, 440, 300, 337, 0, 0,
	385, 418, 224, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 347, 431, 478, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 0,
	407, 267, 510, 489, 485, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	0, 358, 340, 458, 459, 286, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	432, 233, 341, 338, 464, 261, 252, 248, 232, 287,
	348, 388, 451, 382, 0, 335, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 443,
	265, 0, 0, 0, 0, 188, 189, 190, 1280, 1283,
	0, 0, 0, 0, 1279, 1282, 0, 0, 222, 1278,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	461, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 413, 419, 0, 0, 0,
	234, 0, 417, 386, 479, 218, 263, 410, 391, 415,
	398, 266, 0, 0, 416, 336, 466, 405, 476, 496,
	497, 242, 366, 486, 455, 492, 509, 211, 239, 380,
	448, 482, 439, 359, 462, 463, 298, 438, 272, 195,
	334, 502, 209, 425, 226, 216, 202, 450, 474, 223,
	429, 0, 0, 511, 204, 472, 447, 355, 295, 296,
	203, 0, 409, 247, 270, 237, 375, 469, 470, 235,
	512, 213, 491, 206, 0, 490, 368, 465, 473, 356,
	346, 205, 471, 354, 345, 301, 320, 321, 259, 281,
	403, 339, 404, 282, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 513, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 402, 400,
	406, 0, 460, 477, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 508, 367, 284, 440, 300, 337, 0,
	0, 385, 418, 224, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 347, 431, 478, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 407, 267, 510, 489, 485, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 412,
	420, 421, 422, 423, 424, 427, 428, 433, 434, 435,
	436, 437, 445, 449, 467, 468, 480, 493, 498, 426,
	276, 475, 499, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 488, 446, 212, 414, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 393, 273, 250,
	228, 411, 225, 430, 452, 453, 454, 456, 357, 245,
	392, 0, 0, 340, 458, 459, 286, 358, 0, 0,
	0, 78, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 432, 233, 341, 338,
	464, 261, 252, 248, 232, 287, 348, 388, 451, 382,
	0, 335, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 443, 265, 0, 87, 0,
	1318, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 0, 0, 0,
	0, 0, 244, 291, 251, 243, 461, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	236, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 413, 419, 0, 0, 0, 234, 0, 417, 386,
	479, 218, 263, 410, 391, 415, 398, 266, 0, 0,
	416, 336, 466, 405, 476, 496, 497, 242, 366, 486,
	455, 492, 509, 211, 239, 380, 448, 482, 439, 359,
	462, 463, 298, 438, 272, 195, 334, 502, 209, 425,
	226, 216, 202, 450, 474, 223, 429, 0, 0, 511,
	204, 472, 447, 355, 295, 296, 203, 0, 409, 247,
	270, 237, 375, 469, 470, 235, 512, 213, 491, 206,
	0, 490, 368, 465, 473, 356, 346, 205, 471, 354,
	345, 301, 320, 321, 259, 281, 403, 339, 404, 282,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	513, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 402, 400, 406, 0, 460, 477,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 508,
	367, 284, 440, 300, 337, 0, 0, 385, 418, 224,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 347, 431, 478, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 86, 407, 267, 510,
	489, 485, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 412, 420, 421, 422, 423,
	424, 427, 428, 433, 434, 435, 436, 437, 445, 449,
	467, 468, 480, 493, 498, 426, 276, 475, 499, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 488, 446,
	212, 414, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 393, 273, 250, 228, 411, 225, 430,
	452, 453, 454, 456, 357, 245, 392, 0, 358, 340,
	458, 459, 286, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 432, 233, 341,
	338, 464, 261, 252, 248, 232, 287, 348, 388, 451,
	382, 0, 335, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 443, 265, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 461, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 413, 419, 0, 0, 0, 234, 0, 417,
	386, 479, 218, 263, 410, 391, 415, 398, 266, 0,
	0, 416, 336, 466, 405, 476, 496, 497, 242, 366,
	486, 455, 492, 509, 211, 239, 380, 448, 482, 439,
	359, 462, 463, 298, 438, 272, 195, 334, 502, 209,
	425, 226, 216, 202, 450, 474, 223, 429, 0, 0,
	511, 204, 472, 447, 355, 295, 296, 203, 0, 409,
	247, 270, 237, 375, 469, 470, 235, 512, 213, 491,
	206, 0, 490, 368, 465, 473, 356, 346, 205, 471,
	354, 345, 301, 320, 321, 259, 281, 403, 339, 404,
	282, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 513, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 460,
	477, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	508, 367, 284, 440, 300, 337, 0, 0, 385, 418,
	224, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 347, 431, 478, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 0, 191, 207, 333, 0, 407, 267,
	510, 489, 485, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 394,
	395, 396, 397, 399, 401, 408, 412, 420, 421, 422,
	423, 424, 427, 428, 433, 434, 435, 436, 437, 445,
	449, 467, 468, 480, 493, 498, 426, 276, 475, 499,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 488,
	446, 212, 414, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 393, 273, 250, 228, 411, 225,
	430, 452, 453, 454, 456, 357, 245, 392, 0, 358,
	340, 458, 459, 286, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	1770, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 432, 233,
	341, 338, 464, 261, 252, 248, 232, 287, 348, 388,
	451, 382, 0, 335, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 443, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 461, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 413, 419, 0, 0, 0, 234, 0,
	417, 386, 479, 218, 263, 410, 391, 415, 398, 266,
	0, 1768, 416, 336, 466, 405, 476, 496, 497, 242,
	366, 486, 455, 492, 509, 211, 239, 380, 448, 482,
	439, 359, 462, 463, 298, 438, 272, 195, 334, 502,
	209, 425, 226, 216, 202, 450, 474, 223, 429, 0,
	0, 511, 204, 472, 447, 355, 295, 296, 203, 0,
	409, 247, 270, 237, 375, 469, 470, 235, 512, 213,
	491, 206, 0, 490, 368, 465, 473, 356, 346, 205,
	471, 354, 345, 301, 320, 321, 259, 281, 403, 339,
	404, 282, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 513, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	460, 477, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 508, 367, 284, 440, 300, 337, 0, 0, 385,
	418, 224, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 347, 431, 478, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 407,
	267, 510, 489, 485, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 412, 420, 421,
	422, 423, 424, 427, 428, 433, 434, 435, 436, 437,
	445, 449, 467, 468, 480, 493, 498, 426, 276, 475,
	499, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	488, 446, 212, 414, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 393, 273, 250, 228, 411,
	225, 430, 452, 453, 454, 456, 357, 245, 392, 0,
	358, 340, 458, 459, 286, 457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 0, 335, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 443, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 461,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 330, 959, 299, 192,
	210, 957, 0, 372, 413, 419, 0, 0, 0, 234,
	0, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 0, 0, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 0, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 320, 321, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 367, 284, 440, 300, 337, 0, 0,
	385, 418, 224, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 347, 431, 478, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 0,
	407, 267, 510, 489, 485, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	0, 358, 340, 458, 459, 286, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 1770, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	432, 233, 341, 338, 464, 261, 252, 248, 232, 287,
	348, 388, 451, 382, 0, 335, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 443,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	461, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 413, 419, 0, 0, 0,
	234, 0, 417, 386, 479, 218, 263, 410, 391, 415,
	398, 266, 0, 0, 416, 336, 466, 405, 476, 496,
	497, 242, 366, 486, 455, 492, 509, 211, 239, 380,
	448, 482, 439, 359, 462, 463, 298, 438, 272, 195,
	334, 502, 209, 425, 226, 216, 202, 450, 474, 223,
	429, 0, 0, 511, 204, 472, 447, 355, 295, 296,
	203, 0, 409, 247, 270, 237, 375, 469, 470, 235,
	512, 213, 491, 206, 0, 490, 368, 465, 473, 356,
	346, 205, 471, 354, 345, 301, 320, 321, 259, 281,
	403, 339, 404, 282, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 513, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 402, 400,
	406, 0, 460, 477, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 508, 367, 284, 440, 300, 337, 0,
	0, 385, 418, 224, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 347, 431, 478, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 407, 267, 510, 489, 485, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 412,
	420, 421, 422, 423, 424, 427, 428, 433, 434, 435,
	436, 437, 445, 449, 467, 468, 480, 493, 498, 426,
	276, 475, 499, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 488, 446, 212, 414, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 393, 273, 250,
	228, 411, 225, 430, 452, 453, 454, 456, 357, 245,
	392, 0, 358, 340, 458, 459, 286, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 432, 233, 341, 338, 464, 261, 252, 248, 232,
	287, 348, 388, 451, 382, 0, 335, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	443, 265, 0, 0, 0, 1318, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 461, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	495, 0, 0, 0, 2805, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 413, 419, 0, 0,
	0, 234, 0, 417, 386, 479, 218, 263, 410, 391,
	415, 398, 266, 0, 0, 416, 336, 466, 405, 476,
	496, 497, 242, 366, 486, 455, 492, 509, 211, 239,
	380, 448, 482, 439, 359, 462, 463, 298, 438, 272,
	195, 334, 502, 209, 425, 226, 216, 202, 450, 474,
	223, 429, 0, 0, 511, 204, 472, 447, 355, 295,
	296, 203, 0, 409, 247, 270, 237, 375, 469, 470,
	235, 512, 213, 491, 206, 0, 490, 368, 465, 473,
	356, 346, 205, 471, 354, 345, 301, 320, 321, 259,
	281, 403, 339, 404, 282, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 513, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 460, 477, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 508, 367, 284, 440, 300, 337,
	0, 0, 385, 418, 224, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 347, 431, 478,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 407, 267, 510, 489, 485, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 394, 395, 396, 397, 399, 401, 408,
	412, 420, 421, 422, 423, 424, 427, 428, 433, 434,
	435, 436, 437, 445, 449, 467, 468, 480, 493, 498,
	426, 276, 475, 499, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 488, 446, 212, 414, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 393, 273,
	250, 228, 411, 225, 430, 452, 453, 454, 456, 357,
	245, 392, 0, 358, 340, 458, 459, 286, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 432, 233, 341, 338, 464, 261, 252, 248,
	232, 287, 348, 388, 451, 382, 0, 335, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 443, 265, 0, 0, 0, 0, 188, 189, 190,
	0, 2102, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 0, 0, 0, 0, 0, 244, 291,
	251, 243, 461, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 413, 419, 0,
	0, 0, 234, 0, 417, 386, 479, 218, 263, 410,
	391, 415, 398, 266, 0, 0, 416, 336, 466, 405,
	476, 496, 497, 242, 366, 486, 455, 492, 509, 211,
	239, 380, 448, 482, 439, 359, 462, 463, 298, 438,
	272, 195, 334, 502, 209, 425, 226, 216, 202, 450,
	474, 223, 429, 0, 0, 511, 204, 472, 447, 355,
	295, 296, 203, 0, 409, 247, 270, 237, 375, 469,
	470, 235, 512, 213, 491, 206, 0, 490, 368, 465,
	473, 356, 346, 205, 471, 354, 345, 301, 320, 321,
	259, 281, 403, 339, 404, 282, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 513, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	402, 400, 406, 0, 460, 477, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 508, 367, 284, 440, 300,
	337, 0, 0, 385, 418, 224, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 347, 431,
	478, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 407, 267, 510, 489, 485, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 412, 420, 421, 422, 423, 424, 427, 428, 433,
	434, 435, 436, 437, 445, 449, 467, 468, 480, 493,
	498, 426, 276, 475, 499, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 488, 446, 212, 414, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 393,
	273, 250, 228, 411, 225, 430, 452, 453, 454, 456,
	357, 245, 392, 0, 358, 340, 458, 459, 286, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 390,
	0, 197, 0, 432, 233, 341, 338, 464, 261, 252,
	248, 232, 287, 348, 388, 451, 382, 0, 335, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 373, 443, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2087, 0, 0, 0, 2088, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 461, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 236, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 192, 210, 0, 0, 372, 413, 419,
	0, 0, 0, 234, 0, 417, 386, 479, 218, 263,
	410, 391, 415, 398, 266, 0, 0, 416, 336, 466,
	405, 476, 496, 497, 242, 366, 486, 455, 492, 509,
	211, 239, 380, 448, 482, 439, 359, 462, 463, 298,
	438, 272, 195, 334, 502, 209, 425, 226, 216, 202,
	450, 474, 223, 429, 0, 0, 511, 204, 472, 447,
	355, 295, 296, 203, 0, 409, 247, 270, 237, 375,
	469, 470, 235, 512, 213, 491, 206, 0, 490, 368,
	465, 473, 356, 346, 205, 471, 354, 345, 301, 320,
	321, 259, 281, 403, 339, 404, 282, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 513, 219, 220,
	221, 0, 258, 262, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 460, 477, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 508, 367, 284, 440,
	300, 337, 0, 0, 385, 418, 224, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 347,
	431, 478, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 0,
	191, 207, 333, 0, 407, 267, 510, 489, 485, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 394, 395, 396, 397, 399,
	401, 408, 412, 420, 421, 422, 423, 424, 427, 428,
	433, 434, 435, 436, 437, 445, 449, 467, 468, 480,
	493, 498, 426, 276, 475, 499, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 488, 446, 212, 414, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	393, 273, 250, 228, 411, 225, 430, 452, 453, 454,
	456, 357, 245, 392, 0, 358, 340, 458, 459, 286,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 1362, 0, 0, 0, 331, 246, 0, 0,
	390, 0, 197, 0, 432, 233, 341, 338, 464, 261,
	252, 248, 232, 287, 348, 388, 451, 382, 0, 335,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	231, 196, 373, 443, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 1361, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 0, 0, 0, 0, 0,
	244, 291, 251, 243, 461, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 236, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 372, 413,
	419, 0, 0, 0, 234, 0, 417, 386, 479, 218,
	263, 410, 391, 415, 398, 266, 0, 0, 416, 336,
	466, 405, 476, 496, 497, 242, 366, 486, 455, 492,
	509, 211, 239, 380, 448, 482, 439, 359, 462, 463,
	298, 438, 272, 195, 334, 502, 209, 425, 226, 216,
	202, 450, 474, 223, 429, 0, 0, 511, 204, 472,
	447, 355, 295, 296, 203, 0, 409, 247, 270, 237,
	375, 469, 470, 235, 512, 213, 491, 206, 0, 490,
	368, 465, 473, 356, 346, 205, 471, 354, 345, 301,
	320, 321, 259, 281, 403, 339, 404, 282, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 513, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 402, 400, 406, 0, 460, 477, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 508, 367, 284,
	440, 300, 337, 0, 0, 385, 418, 224, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	347, 431, 478, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 407, 267, 510, 489, 485,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 412, 420, 421, 422, 423, 424, 427,
	428, 433, 434, 435, 436, 437, 445, 449, 467, 468,
	480, 493, 498, 426, 276, 475, 499, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 488, 446, 212, 414,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 393, 273, 250, 228, 411, 225, 430, 452, 453,
	454, 456, 357, 245, 392, 0, 358, 340, 458, 459,
	286, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 432, 233, 341, 338, 464,
	261, 252, 248, 232, 287, 348, 388, 451, 382, 0,
	335, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 443, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 461, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 0, 0, 0, 495, 0, 0, 0, 2889, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	413, 419, 0, 0, 0, 234, 0, 417, 386, 479,
	218, 263, 410, 391, 415, 398, 266, 0, 0, 416,
	336, 466, 405, 476, 496, 497, 242, 366, 486, 455,
	492, 509, 211, 239, 380, 448, 482, 439, 359, 462,
	463, 298, 438, 272, 195, 334, 502, 209, 425, 226,
	216, 202, 450, 474, 223, 429, 0, 0, 511, 204,
	472, 447, 355, 295, 296, 203, 0, 409, 247, 270,
	237, 375, 469, 470, 235, 512, 213, 491, 206, 0,
	490, 368, 465, 473, 356, 346, 205, 471, 354, 345,
	301, 320, 321, 259, 281, 403, 339, 404, 282, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 513,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 460, 477, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 508, 367,
	284, 440, 300, 337, 0, 0, 385, 418, 224, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 347, 431, 478, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 191, 207, 333, 0, 407, 267, 510, 489,
	485, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 412, 420, 421, 422, 423, 424,
	427, 428, 433, 434, 435, 436, 437, 445, 449, 467,
	468, 480, 493, 498, 426, 276, 475, 499, 0, 342,
	0, 0, 344, 260, 279, 290, 0, 488, 446, 212,
	414, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 393, 273, 250, 228, 411, 225, 430, 452,
	453, 454, 456, 357, 245, 392, 0, 358, 340, 458,
	459, 286, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 432, 233, 341, 338,
	464, 261, 252, 248, 232, 287, 348, 388, 451, 382,
	0, 335, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 443, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 0, 0, 0,
	0, 0, 244, 291, 251, 243, 461, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	236, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 413, 419, 0, 0, 0, 234, 0, 417, 386,
	479, 218, 263, 410, 391, 415, 398, 266, 0, 0,
	416, 336, 466, 405, 476, 496, 497, 242, 366, 486,
	455, 492, 509, 211, 239, 380, 448, 482, 439, 359,
	462, 463, 298, 438, 272, 195, 334, 502, 209, 425,
	226, 216, 202, 450, 474, 223, 429, 0, 0, 511,
	204, 472, 447, 355, 295, 296, 203, 0, 409, 247,
	270, 237, 375, 469, 470, 235, 512, 213, 491, 206,
	0, 490, 368, 465, 473, 356, 346, 205, 471, 354,
	345, 301, 320, 321, 259, 281, 403, 339, 404, 282,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	513, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 402, 400, 406, 0, 460, 477,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 508,
	367, 284, 440, 300, 337, 0, 0, 385, 418, 224,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 347, 431, 478, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 407, 267, 510,
	489, 485, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 412, 420, 421, 422, 423,
	424, 427, 428, 433, 434, 435, 436, 437, 445, 449,
	467, 468, 480, 493, 498, 426, 276, 475, 499, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 488, 446,
	212, 414, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 393, 273, 250, 228, 411, 225, 430,
	452, 453, 454, 456, 357, 245, 392, 0, 358, 340,
	458, 459, 286, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 432, 233, 341,
	338, 464, 261, 252, 248, 232, 287, 348, 388, 451,
	382, 0, 335, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 443, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 461, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 0, 0, 0, 495, 0, 0, 0,
	2805, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 413, 419, 0, 0, 0, 234, 0, 417,
	386, 479, 218, 263, 410, 391, 415, 398, 266, 0,
	0, 416, 336, 466, 405, 476, 496, 497, 242, 366,
	486, 455, 492, 509, 211, 239, 380, 448, 482, 439,
	359, 462, 463, 298, 438, 272, 195, 334, 502, 209,
	425, 226, 216, 202, 450, 474, 223, 429, 0, 0,
	511, 204, 472, 447, 355, 295, 296, 203, 0, 409,
	247, 270, 237, 375, 469, 470, 235, 512, 213, 491,
	206, 0, 490, 368, 465, 473, 356, 346, 205, 471,
	354, 345, 301, 320, 321, 259, 281, 403, 339, 404,
	282, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 513, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 460,
	477, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	508, 367, 284, 440, 300, 337, 0, 0, 385, 418,
	224, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 347, 431, 478, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 0, 191, 207, 333, 0, 407, 267,
	510, 489, 485, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 394,
	395, 396, 397, 399, 401, 408, 412, 420, 421, 422,
	423, 424, 427, 428, 433, 434, 435, 436, 437, 445,
	449, 467, 468, 480, 493, 498, 426, 276, 475, 499,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 488,
	446, 212, 414, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 393, 273, 250, 228, 411, 225,
	430, 452, 453, 454, 456, 357, 245, 392, 0, 358,
	340, 458, 459, 286, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 432, 233,
	341, 338, 464, 261, 252, 248, 232, 287, 348, 388,
	451, 382, 0, 335, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 443, 265, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 461, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 413, 419, 0, 0, 0, 234, 0,
	417, 386, 479, 218, 263, 410, 391, 415, 398, 266,
	0, 0, 416, 336, 466, 405, 476, 496, 497, 242,
	366, 486, 455, 492, 509, 211, 239, 380, 448, 482,
	439, 359, 462, 463, 298, 438, 272, 195, 334, 502,
	209, 425, 226, 216, 202, 450, 474, 223, 429, 0,
	0, 511, 204, 472, 447, 355, 295, 296, 203, 0,
	409, 247, 270, 237, 375, 469, 470, 235, 512, 213,
	491, 206, 0, 490, 368, 465, 473, 356, 346, 205,
	471, 354, 345, 301, 320, 321, 259, 281, 403, 339,
	404, 282, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 513, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	460, 477, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 508, 367, 284, 440, 300, 337, 0, 0, 385,
	418, 224, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 347, 431, 478, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 407,
	267, 510, 489, 485, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 412, 420, 421,
	422, 423, 424, 427, 428, 433, 434, 435, 436, 437,
	445, 449, 467, 468, 480, 493, 498, 426, 276, 475,
	499, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	488, 446, 212, 414, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 393, 273, 250, 228, 411,
	225, 430, 452, 453, 454, 456, 357, 245, 392, 0,
	358, 340, 458, 459, 286, 457, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 0, 335, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 443, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 461,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 413, 419, 0, 0, 0, 234,
	0, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 0, 0, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 0, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 320, 321, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 367, 284, 440, 300, 337, 0, 0,
	385, 418, 224, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 347, 431, 478, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 0,
	407, 267, 510, 489, 485, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	0, 358, 340, 458, 459, 286, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	432, 233, 341, 338, 464, 261, 252, 248, 232, 287,
	348, 388, 451, 382, 0, 335, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 443,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	461, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 413, 419, 0, 0, 0,
	234, 0, 417, 386, 479, 218, 263, 410, 391, 415,
	398, 266, 0, 0, 416, 336, 466, 405, 476, 496,
	497, 242, 366, 486, 455, 492, 509, 211, 239, 380,
	448, 482, 439, 359, 462, 463, 298, 438, 272, 195,
	334, 502, 209, 425, 226, 216, 202, 450, 474, 223,
	429, 0, 0, 511, 204, 472, 447, 355, 295, 296,
	203, 0, 409, 247, 270, 237, 375, 469, 470, 235,
	512, 213, 491, 206, 0, 490, 368, 465, 473, 356,
	346, 205, 471, 354, 345, 301, 320, 321, 259, 281,
	403, 339, 404, 282, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 513, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 402, 400,
	406, 0, 460, 477, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 508, 367, 284, 440, 300, 337, 0,
	0, 385, 418, 224, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 347, 431, 478, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 407, 267, 510, 489, 485, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 412,
	420, 421, 422, 423, 424, 427, 428, 433, 434, 435,
	436, 437, 445, 449, 467, 468, 480, 493, 498, 426,
	276, 475, 499, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 488, 446, 212, 414, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 393, 273, 250,
	228, 411, 225, 430, 452, 453, 454, 456, 357, 245,
	392, 0, 358, 340, 458, 459, 286, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 432, 233, 341, 338, 464, 261, 252, 248, 232,
	287, 348, 388, 451, 382, 0, 335, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	443, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 461, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 413, 419, 0, 0,
	0, 234, 0, 417, 386, 479, 218, 263, 410, 391,
	415, 398, 266, 0, 0, 416, 336, 466, 405, 476,
	496, 497, 242, 366, 486, 455, 492, 509, 211, 239,
	380, 448, 482, 439, 359, 462, 463, 298, 438, 272,
	195, 334, 502, 209, 425, 226, 216, 202, 450, 474,
	223, 429, 0, 0, 511, 204, 472, 447, 355, 295,
	296, 203, 0, 409, 247, 270, 237, 375, 469, 470,
	235, 512, 213, 491, 206, 0, 490, 368, 465, 473,
	356, 346, 205, 471, 354, 345, 301, 320, 321, 259,
	281, 403, 339, 404, 282, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 513, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 460, 477, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 508, 367, 284, 440, 300, 337,
	0, 0, 385, 418, 224, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 347, 431, 478,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 407, 267, 510, 489, 485, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 394, 395, 396, 397, 399, 401, 408,
	412, 420, 421, 422, 423, 424, 427, 428, 433, 434,
	435, 436, 437, 445, 449, 467, 468, 480, 493, 498,
	426, 276, 475, 499, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 488, 446, 212, 414, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 393, 273,
	250, 228, 411, 225, 430, 452, 453, 454, 456, 357,
	245, 392, 0, 358, 340, 458, 459, 286, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 432, 233, 341, 338, 464, 261, 252, 248,
	232, 287, 348, 388, 451, 382, 0, 335, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 443, 265, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 0, 0, 0, 0, 0, 244, 291,
	251, 243, 461, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 413, 419, 0,
	0, 0, 234, 0, 417, 386, 479, 218, 263, 410,
	391, 415, 398, 266, 0, 0, 416, 336, 466, 405,
	476, 496, 497, 242, 366, 486, 455, 492, 509, 211,
	239, 380, 448, 482, 439, 359, 462, 463, 298, 438,
	272, 195, 334, 502, 209, 425, 226, 216, 202, 450,
	474, 223, 429, 0, 0, 511, 204, 472, 447, 355,
	295, 296, 203, 0, 409, 247, 270, 237, 375, 469,
	470, 235, 512, 213, 491, 206, 0, 490, 368, 465,
	473, 356, 346, 205, 471, 354, 345, 301, 320, 321,
	259, 281, 403, 339, 404, 282, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 513, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	402, 400, 406, 0, 460, 477, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 508, 367, 284, 440, 300,
	337, 0, 0, 385, 418, 224, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 347, 431,
	478, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 1610, 407, 267, 510, 489, 485, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 412, 420, 421, 422, 423, 424, 427, 428, 433,
	434, 435, 436, 437, 445, 449, 467, 468, 480, 493,
	498, 426, 276, 475, 499, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 488, 446, 212, 414, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 393,
	273, 250, 228, 411, 225, 430, 452, 453, 454, 456,
	357, 245, 392, 0, 358, 340, 458, 459, 286, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 1485, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 390,
	0, 197, 0, 432, 233, 341, 338, 464, 261, 252,
	248, 232, 287, 348, 388, 451, 382, 0, 335, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 373, 443, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 461, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 236, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 192, 210, 0, 0, 372, 413, 419,
	0, 0, 0, 234, 0, 417, 386, 479, 218, 263,
	410, 391, 415, 398, 266, 0, 0, 416, 336, 466,
	405, 476, 496, 497, 242, 366, 486, 455, 492, 509,
	211, 239, 380, 448, 482, 439, 359, 462, 463, 298,
	438, 272, 195, 334, 502, 209, 425, 226, 216, 202,
	450, 474, 223, 429, 0, 0, 511, 204, 472, 447,
	355, 295, 296, 203, 0, 409, 247, 270, 237, 375,
	469, 470, 235, 512, 213, 491, 206, 0, 490, 368,
	465, 473, 356, 346, 205, 471, 354, 345, 301, 320,
	321, 259, 281, 403, 339, 404, 282, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 513, 219, 220,
	221, 0, 258, 262, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 460, 477, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 508, 367, 284, 440,
	300, 337, 0, 0, 385, 418, 224, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 347,
	431, 478, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 0,
	191, 207, 333, 0, 407, 267, 510, 489, 485, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 394, 395, 396, 397, 399,
	401, 408, 412, 420, 421, 422, 423, 424, 427, 428,
	433, 434, 435, 436, 437, 445, 449, 467, 468, 480,
	493, 498, 426, 276, 475, 499, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 488, 446, 212, 414, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	393, 273, 250, 228, 411, 225, 430, 452, 453, 454,
	456, 357, 245, 392, 0, 358, 340, 458, 459, 286,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 1483, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 331, 246, 0, 0,
	390, 0, 197, 0, 432, 233, 341, 338, 464, 261,
	252, 248, 232, 287, 348, 388, 451, 382, 0, 335,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	231, 196, 373, 443, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 0, 0, 0, 0, 0,
	244, 291, 251, 243, 461, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 236, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 372, 413,
	419, 0, 0, 0, 234, 0, 417, 386, 479, 218,
	263, 410, 391, 415, 398, 266, 0, 0, 416, 336,
	466, 405, 476, 496, 497, 242, 366, 486, 455, 492,
	509, 211, 239, 380, 448, 482, 439, 359, 462, 463,
	298, 438, 272, 195, 334, 502, 209, 425, 226, 216,
	202, 450, 474, 223, 429, 0, 0, 511, 204, 472,
	447, 355, 295, 296, 203, 0, 409, 247, 270, 237,
	375, 469, 470, 235, 512, 213, 491, 206, 0, 490,
	368, 465, 473, 356, 346, 205, 471, 354, 345, 301,
	320, 321, 259, 281, 403, 339, 404, 282, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 513, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 402, 400, 406, 0, 460, 477, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 508, 367, 284,
	440, 300, 337, 0, 0, 385, 418, 224, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	347, 431, 478, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 407, 267, 510, 489, 485,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 412, 420, 421, 422, 423, 424, 427,
	428, 433, 434, 435, 436, 437, 445, 449, 467, 468,
	480, 493, 498, 426, 276, 475, 499, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 488, 446, 212, 414,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 393, 273, 250, 228, 411, 225, 430, 452, 453,
	454, 456, 357, 245, 392, 0, 358, 340, 458, 459,
	286, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 1481, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 432, 233, 341, 338, 464,
	261, 252, 248, 232, 287, 348, 388, 451, 382, 0,
	335, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 443, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 461, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	413, 419, 0, 0, 0, 234, 0, 417, 386, 479,
	218, 263, 410, 391, 415, 398, 266, 0, 0, 416,
	336, 466, 405, 476, 496, 497, 242, 366, 486, 455,
	492, 509, 211, 239, 380, 448, 482, 439, 359, 462,
	463, 298, 438, 272, 195, 334, 502, 209, 425, 226,
	216, 202, 450, 474, 223, 429, 0, 0, 511, 204,
	472, 447, 355, 295, 296, 203, 0, 409, 247, 270,
	237, 375, 469, 470, 235, 512, 213, 491, 206, 0,
	490, 368, 465, 473, 356, 346, 205, 471, 354, 345,
	301, 320, 321, 259, 281, 403, 339, 404, 282, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 513,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 460, 477, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 508, 367,
	284, 440, 300, 337, 0, 0, 385, 418, 224, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 347, 431, 478, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 191, 207, 333, 0, 407, 267, 510, 489,
	485, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 412, 420, 421, 422, 423, 424,
	427, 428, 433, 434, 435, 436, 437, 445, 449, 467,
	468, 480, 493, 498, 426, 276, 475, 499, 0, 342,
	0, 0, 344, 260, 279, 290, 0, 488, 446, 212,
	414, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 393, 273, 250, 228, 411, 225, 430, 452,
	453, 454, 456, 357, 245, 392, 0, 358, 340, 458,
	459, 286, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 1479, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 432, 233, 341, 338,
	464, 261, 252, 248, 232, 287, 348, 388, 451, 382,
	0, 335, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 443, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 0, 0, 0,
	0, 0, 244, 291, 251, 243, 461, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	236, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 413, 419, 0, 0, 0, 234, 0, 417, 386,
	479, 218, 263, 410, 391, 415, 398, 266, 0, 0,
	416, 336, 466, 405, 476, 496, 497, 242, 366, 486,
	455, 492, 509, 211, 239, 380, 448, 482, 439, 359,
	462, 463, 298, 438, 272, 195, 334, 502, 209, 425,
	226, 216, 202, 450, 474, 223, 429, 0, 0, 511,
	204, 472, 447, 355, 295, 296, 203, 0, 409, 247,
	270, 237, 375, 469, 470, 235, 512, 213, 491, 206,
	0, 490, 368, 465, 473, 356, 346, 205, 471, 354,
	345, 301, 320, 321, 259, 281, 403, 339, 404, 282,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	513, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 402, 400, 406, 0, 460, 477,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 508,
	367, 284, 440, 300, 337, 0, 0, 385, 418, 224,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 347, 431, 478, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 407, 267, 510,
	489, 485, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 412, 420, 421, 422, 423,
	424, 427, 428, 433, 434, 435, 436, 437, 445, 449,
	467, 468, 480, 493, 498, 426, 276, 475, 499, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 488, 446,
	212, 414, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 393, 273, 250, 228, 411, 225, 430,
	452, 453, 454, 456, 357, 245, 392, 0, 358, 340,
	458, 459, 286, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 1477, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 432, 233, 341,
	338, 464, 261, 252, 248, 232, 287, 348, 388, 451,
	382, 0, 335, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 443, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 461, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 413, 419, 0, 0, 0, 234, 0, 417,
	386, 479, 218, 263, 410, 391, 415, 398, 266, 0,
	0, 416, 336, 466, 405, 476, 496, 497, 242, 366,
	486, 455, 492, 509, 211, 239, 380, 448, 482, 439,
	359, 462, 463, 298, 438, 272, 195, 334, 502, 209,
	425, 226, 216, 202, 450, 474, 223, 429, 0, 0,
	511, 204, 472, 447, 355, 295, 296, 203, 0, 409,
	247, 270, 237, 375, 469, 470, 235, 512, 213, 491,
	206, 0, 490, 368, 465, 473, 356, 346, 205, 471,
	354, 345, 301, 320, 321, 259, 281, 403, 339, 404,
	282, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 513, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 460,
	477, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	508, 367, 284, 440, 300, 337, 0, 0, 385, 418,
	224, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 347, 431, 478, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 0, 191, 207, 333, 0, 407, 267,
	510, 489, 485, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 394,
	395, 396, 397, 399, 401, 408, 412, 420, 421, 422,
	423, 424, 427, 428, 433, 434, 435, 436, 437, 445,
	449, 467, 468, 480, 493, 498, 426, 276, 475, 499,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 488,
	446, 212, 414, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 393, 273, 250, 228, 411, 225,
	430, 452, 453, 454, 456, 357, 245, 392, 0, 358,
	340, 458, 459, 286, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 1473, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 432, 233,
	341, 338, 464, 261, 252, 248, 232, 287, 348, 388,
	451, 382, 0, 335, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 443, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 461, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 413, 419, 0, 0, 0, 234, 0,
	417, 386, 479, 218, 263, 410, 391, 415, 398, 266,
	0, 0, 416, 336, 466, 405, 476, 496, 497, 242,
	366, 486, 455, 492, 509, 211, 239, 380, 448, 482,
	439, 359, 462, 463, 298, 438, 272, 195, 334, 502,
	209, 425, 226, 216, 202, 450, 474, 223, 429, 0,
	0, 511, 204, 472, 447, 355, 295, 296, 203, 0,
	409, 247, 270, 237, 375, 469, 470, 235, 512, 213,
	491, 206, 0, 490, 368, 465, 473, 356, 346, 205,
	471, 354, 345, 301, 320, 321, 259, 281, 403, 339,
	404, 282, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 513, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	460, 477, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 508, 367, 284, 440, 300, 337, 0, 0, 385,
	418, 224, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 347, 431, 478, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 407,
	267, 510, 489, 485, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 412, 420, 421,
	422, 423, 424, 427, 428, 433, 434, 435, 436, 437,
	445, 449, 467, 468, 480, 493, 498, 426, 276, 475,
	499, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	488, 446, 212, 414, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 393, 273, 250, 228, 411,
	225, 430, 452, 453, 454, 456, 357, 245, 392, 0,
	358, 340, 458, 459, 286, 457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 1471,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 0, 335, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 443, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 461,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 413, 419, 0, 0, 0, 234,
	0, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 0, 0, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 0, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 320, 321, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 367, 284, 440, 300, 337, 0, 0,
	385, 418, 224, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 347, 431, 478, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 0,
	407, 267, 510, 489, 485, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	0, 358, 340, 458, 459, 286, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	1469, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	432, 233, 341, 338, 464, 261, 252, 248, 232, 287,
	348, 388, 451, 382, 0, 335, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 443,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	461, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 413, 419, 0, 0, 0,
	234, 0, 417, 386, 479, 218, 263, 410, 391, 415,
	398, 266, 0, 0, 416, 336, 466, 405, 476, 496,
	497, 242, 366, 486, 455, 492, 509, 211, 239, 380,
	448, 482, 439, 359, 462, 463, 298, 438, 272, 195,
	334, 502, 209, 425, 226, 216, 202, 450, 474, 223,
	429, 0, 0, 511, 204, 472, 447, 355, 295, 296,
	203, 0, 409, 247, 270, 237, 375, 469, 470, 235,
	512, 213, 491, 206, 0, 490, 368, 465, 473, 356,
	346, 205, 471, 354, 345, 301, 320, 321, 259, 281,
	403, 339, 404, 282, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 513, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 402, 400,
	406, 0, 460, 477, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 508, 367, 284, 440, 300, 337, 0,
	0, 385, 418, 224, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 347, 431, 478, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 407, 267, 510, 489, 485, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 412,
	420, 421, 422, 423, 424, 427, 428, 433, 434, 435,
	436, 437, 445, 449, 467, 468, 480, 493, 498, 426,
	276, 475, 499, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 488, 446, 212, 414, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 393, 273, 250,
	228, 411, 225, 430, 452, 453, 454, 456, 357, 245,
	392, 0, 358, 340, 458, 459, 286, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 432, 233, 341, 338, 464, 261, 252, 248, 232,
	287, 348, 388, 451, 382, 0, 335, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	443, 265, 0, 1446, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 461, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 413, 419, 0, 0,
	0, 234, 0, 417, 386, 479, 218, 263, 410, 391,
	415, 398, 266, 0, 0, 416, 336, 466, 405, 476,
	496, 497, 242, 366, 486, 455, 492, 509, 211, 239,
	380, 448, 482, 439, 359, 462, 463, 298, 438, 272,
	195, 334, 502, 209, 425, 226, 216, 202, 450, 474,
	223, 429, 0, 0, 511, 204, 472, 447, 355, 295,
	296, 203, 0, 409, 247, 270, 237, 375, 469, 470,
	235, 512, 213, 491, 206, 0, 490, 368, 465, 473,
	356, 346, 205, 471, 354, 345, 301, 320, 321, 259,
	281, 403, 339, 404, 282, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 513, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 460, 477, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 508, 367, 284, 440, 300, 337,
	0, 0, 385, 418, 224, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 347, 431, 478,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 407, 267, 510, 489, 485, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 394, 395, 396, 397, 399, 401, 408,
	412, 420, 421, 422, 423, 424, 427, 428, 433, 434,
	435, 436, 437, 445, 449, 467, 468, 480, 493, 498,
	426, 276, 475, 499, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 488, 446, 212, 414, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 393, 273,
	250, 228, 411, 225, 430, 452, 453, 454, 456, 357,
	245, 392, 0, 358, 340, 458, 459, 286, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 1346, 249,
	0, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 432, 233, 341, 338, 464, 261, 252, 248,
	232, 287, 348, 388, 451, 382, 0, 335, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 443, 265, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 0, 0, 0, 0, 0, 244, 291,
	251, 243, 461, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 413, 419, 0,
	0, 0, 234, 0, 417, 386, 479, 218, 263, 410,
	391, 415, 398, 266, 0, 0, 416, 336, 466, 405,
	476, 496, 497, 242, 366, 486, 455, 492, 509, 211,
	239, 380, 448, 482, 439, 359, 462, 463, 298, 438,
	272, 195, 334, 502, 209, 425, 226, 216, 202, 450,
	474, 223, 429, 0, 0, 511, 204, 472, 447, 355,
	295, 296, 203, 0, 409, 247, 270, 237, 375, 469,
	470, 235, 512, 213, 491, 206, 0, 490, 368, 465,
	473, 356, 346, 205, 471, 354, 345, 301, 320, 321,
	259, 281, 403, 339, 404, 282, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 513, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	402, 400, 406, 0, 460, 477, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 508, 367, 284, 440, 300,
	337, 0, 0, 385, 418, 224, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 347, 431,
	478, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 407, 267, 510, 489, 485, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 412, 420, 421, 422, 423, 424, 427, 428, 433,
	434, 435, 436, 437, 445, 449, 467, 468, 480, 493,
	498, 426, 276, 475, 499, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 488, 446, 212, 414, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 393,
	273, 250, 228, 411, 225, 430, 452, 453, 454, 456,
	357, 245, 392, 0, 358, 340, 458, 459, 286, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 390,
	0, 197, 0, 432, 233, 341, 338, 464, 261, 252,
	248, 232, 287, 348, 388, 451, 382, 0, 335, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 373, 443, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 1147, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 461, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 236, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 192, 210, 0, 0, 372, 413, 419,
	0, 0, 0, 234, 0, 417, 386, 479, 218, 263,
	410, 391, 415, 398, 266, 0, 0, 416, 336, 466,
	405, 476, 496, 497, 242, 366, 486, 455, 492, 509,
	211, 239, 380, 448, 482, 439, 359, 462, 463, 298,
	438, 272, 195, 334, 502, 209, 425, 226, 216, 202,
	450, 474, 223, 429, 0, 0, 511, 204, 472, 447,
	355, 295, 296, 203, 0, 409, 247, 270, 237, 375,
	469, 470, 235, 512, 213, 491, 206, 0, 490, 368,
	465, 473, 356, 346, 205, 471, 354, 345, 301, 320,
	321, 259, 281, 403, 339, 404, 282, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 513, 219, 220,
	221, 0, 258, 262, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 460, 477, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 508, 367, 284, 440,
	300, 337, 0, 0, 385, 418, 224, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 347,
	431, 478, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 0,
	191, 207, 333, 0, 407, 267, 510, 489, 485, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 394, 395, 396, 397, 399,
	401, 408, 412, 420, 421, 422, 423, 424, 427, 428,
	433, 434, 435, 436, 437, 445, 449, 467, 468, 480,
	493, 498, 426, 276, 475, 499, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 488, 446, 212, 414, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	393, 273, 250, 228, 411, 225, 430, 452, 453, 454,
	456, 357, 245, 392, 0, 358, 340, 458, 459, 286,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 331, 246, 0, 0,
	390, 0, 197, 0, 432, 233, 341, 338, 464, 261,
	252, 248, 232, 287, 348, 388, 451, 382, 0, 335,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	231, 196, 373, 443, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 0, 0, 0, 0, 0,
	244, 291, 251, 243, 461, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 236, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 372, 413,
	419, 0, 0, 0, 234, 0, 417, 386, 479, 218,
	263, 410, 391, 415, 398, 266, 0, 0, 416, 336,
	466, 405, 476, 496, 497, 242, 366, 486, 455, 492,
	509, 211, 239, 380, 448, 482, 439, 359, 462, 463,
	298, 438, 272, 195, 334, 502, 209, 425, 226, 216,
	202, 450, 474, 223, 429, 0, 0, 511, 204, 472,
	447, 355, 295, 296, 203, 0, 409, 247, 270, 237,
	375, 469, 470, 235, 512, 213, 491, 206, 0, 490,
	368, 465, 473, 356, 346, 205, 471, 354, 345, 301,
	320, 321, 259, 281, 403, 339, 404, 282, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 513, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 402, 400, 406, 0, 460, 477, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 508, 367, 284,
	440, 300, 337, 0, 0, 385, 418, 224, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	347, 431, 478, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 407, 267, 510, 489, 485,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	765, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 412, 420, 421, 422, 423, 424, 427,
	428, 433, 434, 435, 436, 437, 445, 449, 467, 468,
	480, 493, 498, 426, 276, 475, 499, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 488, 446, 212, 414,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 393, 273, 250, 228, 411, 225, 430, 452, 453,
	454, 456, 357, 245, 392, 0, 358, 340, 458, 459,
	286, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 432, 233, 341, 338, 464,
	261, 252, 248, 232, 287, 348, 388, 451, 382, 0,
	335, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 443, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 461, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 274, 0, 362, 236,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	413, 419, 0, 0, 0, 234, 0, 417, 386, 479,
	218, 263, 410, 391, 415, 398, 266, 0, 0, 416,
	336, 466, 405, 476, 496, 497, 242, 366, 486, 455,
	492, 509, 211, 239, 380, 448, 482, 439, 359, 462,
	463, 298, 438, 272, 195, 334, 502, 209, 425, 226,
	216, 202, 450, 474, 223, 429, 0, 0, 511, 204,
	472, 447, 355, 295, 296, 203, 0, 409, 247, 270,
	237, 375, 469, 470, 235, 512, 213, 491, 206, 0,
	490, 368, 465, 473, 356, 346, 205, 471, 354, 345,
	301, 320, 321, 259, 281, 403, 339, 404, 282, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 513,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 460, 477, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 508, 367,
	284, 440, 300, 337, 0, 0, 385, 418, 224, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 347, 431, 478, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 191, 207, 333, 0, 407, 267, 510, 489,
	485, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 412, 420, 421, 422, 423, 424,
	427, 428, 433, 434, 435, 436, 437, 445, 449, 467,
	468, 480, 493, 498, 426, 587, 475, 499, 0, 342,
	0, 0, 344, 260, 279, 290, 0, 488, 446, 212,
	414, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 393, 273, 250, 228, 411, 225, 430, 452,
	453, 454, 456, 357, 245, 392, 0, 358, 340, 458,
	459, 286, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 432, 233, 341, 338,
	464, 261, 252, 248, 232, 287, 348, 388, 451, 382,
	0, 335, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 443, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 0, 0, 0,
	0, 0, 244, 291, 251, 243, 461, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	236, 0, 0, 535, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 413, 419, 0, 0, 0, 234, 0, 417, 386,
	479, 218, 263, 410, 391, 415, 398, 266, 0, 0,
	416, 336, 466, 405, 476, 496, 497, 242, 366, 486,
	455, 492, 509, 211, 239, 380, 448, 482, 439, 359,
	462, 463, 298, 438, 272, 195, 334, 502, 209, 425,
	226, 216, 202, 450, 474, 223, 429, 0, 0, 511,
	204, 472, 447, 355, 295, 296, 203, 0, 409, 247,
	270, 237, 375, 469, 470, 235, 512, 213, 491, 206,
	0, 490, 368, 465, 473, 356, 346, 205, 471, 354,
	345, 301, 320, 321, 259, 281, 403, 339, 404, 282,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	513, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 402, 400, 406, 0, 460, 477,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 508,
	367, 284, 440, 300, 337, 0, 0, 385, 418, 224,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 347, 431, 478, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 407, 267, 510,
	489, 485, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 412, 420, 421, 422, 423,
	424, 427, 428, 433, 434, 435, 436, 437, 445, 449,
	467, 468, 480, 493, 498, 426, 276, 475, 499, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 488, 446,
	212, 414, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 393, 273, 250, 228, 411, 225, 430,
	452, 453, 454, 456, 357, 245, 392, 0, 358, 340,
	458, 459, 286, 457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 432, 233, 341,
	338, 464, 261, 252, 248, 232, 287, 348, 388, 451,
	382, 0, 335, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 443, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 461, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 413, 419, 0, 0, 0, 234, 0, 417,
	386, 479, 218, 263, 410, 391, 415, 398, 266, 0,
	0, 416, 336, 466, 405, 476, 496, 497, 242, 366,
	486, 455, 492, 509, 211, 239, 380, 448, 482, 439,
	359, 462, 463, 298, 438, 272, 195, 334, 502, 209,
	425, 226, 216, 202, 450, 474, 223, 429, 0, 0,
	511, 204, 472, 447, 355, 295, 296, 203, 0, 409,
	247, 270, 237, 375, 469, 470, 235, 512, 213, 491,
	206, 0, 490, 368, 465, 473, 356, 346, 205, 471,
	354, 345, 301, 320, 321, 259, 281, 403, 339, 404,
	282, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 513, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 460,
	477, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	508, 367, 284, 440, 300, 337, 0, 0, 385, 418,
	224, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 347, 431, 478, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 0, 191, 207, 333, 0, 407, 267,
	510, 489, 485, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 2894,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 394,
	395, 396, 397, 399, 401, 408, 412, 420, 421, 422,
	423, 424, 427, 428, 433, 434, 435, 436, 437, 445,
	449, 467, 468, 480, 493, 498, 426, 276, 475, 499,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 488,
	446, 212, 414, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 393, 273, 250, 228, 411, 225,
	430, 452, 453, 454, 456, 357, 245, 392, 0, 358,
	340, 458, 459, 286, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 432, 233,
	341, 338, 464, 261, 252, 248, 232, 287, 348, 388,
	451, 382, 0, 335, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 443, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 461, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 413, 419, 0, 0, 0, 234, 0,
	417, 386, 479, 218, 263, 410, 391, 415, 398, 266,
	0, 0, 416, 336, 466, 405, 476, 496, 497, 242,
	366, 486, 455, 492, 509, 211, 239, 380, 448, 482,
	439, 359, 462, 463, 298, 438, 272, 195, 334, 502,
	209, 425, 226, 216, 202, 450, 474, 223, 429, 0,
	0, 511, 204, 472, 447, 355, 295, 296, 203, 0,
	409, 247, 270, 237, 375, 469, 470, 235, 512, 213,
	491, 206, 0, 490, 368, 465, 473, 356, 346, 205,
	471, 354, 345, 301, 320, 321, 259, 281, 403, 339,
	404, 282, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 513, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	460, 477, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 508, 367, 284, 440, 300, 337, 0, 0, 385,
	418, 224, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 347, 431, 478, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 407,
	267, 510, 489, 485, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 412, 420, 421,
	422, 423, 424, 427, 428, 433, 434, 435, 436, 437,
	445, 449, 467, 468, 480, 493, 498, 426, 276, 475,
	499, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	488, 446, 212, 414, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 393, 273, 250, 228, 411,
	225, 430, 452, 453, 454, 456, 357, 245, 392, 0,
	358, 340, 458, 459, 286, 457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 432,
	233, 341, 338, 464, 261, 252, 248, 232, 287, 348,
	388, 451, 382, 0, 335, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 443, 265,
	0, 0, 0, 0, 188, 2544, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 461,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 413, 419, 0, 0, 0, 234,
	0, 417, 386, 479, 218, 263, 410, 391, 415, 398,
	266, 0, 0, 416, 336, 466, 405, 476, 496, 497,
	242, 366, 486, 455, 492, 509, 211, 239, 380, 448,
	482, 439, 359, 462, 463, 298, 438, 272, 195, 334,
	502, 209, 425, 226, 216, 202, 450, 474, 223, 429,
	0, 0, 511, 204, 472, 447, 355, 295, 296, 203,
	0, 409, 247, 270, 237, 375, 469, 470, 235, 512,
	213, 491, 206, 0, 490, 368, 465, 473, 356, 346,
	205, 471, 354, 345, 301, 320, 321, 259, 281, 403,
	339, 404, 282, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 513, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 460, 477, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 508, 367, 284, 440, 300, 337, 0, 0,
	385, 418, 224, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 347, 431, 478, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 0,
	407, 267, 510, 489, 485, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 412, 420,
	421, 422, 423, 424, 427, 428, 433, 434, 435, 436,
	437, 445, 449, 467, 468, 480, 493, 498, 426, 276,
	475, 499, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 488, 446, 212, 414, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 393, 273, 250, 228,
	411, 225, 430, 452, 453, 454, 456, 357, 245, 392,
	0, 358, 340, 458, 459, 286, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	432, 233, 341, 338, 464, 261, 252, 248, 232, 287,
	348, 388, 451, 382, 0, 335, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 443,
	265, 0, 0, 0, 0, 188, 2083, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	461, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 413, 419, 0, 0, 0,
	234, 0, 417, 386, 479, 218, 263, 410, 391, 415,
	398, 266, 0, 0, 416, 336, 466, 405, 476, 496,
	497, 242, 366, 486, 455, 492, 509, 211, 239, 380,
	448, 482, 439, 359, 462, 463, 298, 438, 272, 195,
	334, 502, 209, 425, 226, 216, 202, 450, 474, 223,
	429, 0, 0, 511, 204, 472, 447, 355, 295, 296,
	203, 0, 409, 247, 270, 237, 375, 469, 470, 235,
	512, 213, 491, 206, 0, 490, 368, 465, 473, 356,
	346, 205, 471, 354, 345, 301, 320, 321, 259, 281,
	403, 339, 404, 282, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 513, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 402, 400,
	406, 0, 460, 477, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 508, 367, 284, 440, 300, 337, 0,
	0, 385, 418, 224, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 347, 431, 478, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 407, 267, 510, 489, 485, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 412,
	420, 421, 422, 423, 424, 427, 428, 433, 434, 435,
	436, 437, 445, 449, 467, 468, 480, 493, 498, 426,
	276, 475, 499, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 488, 446, 212, 414, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 393, 273, 250,
	228, 411, 225, 430, 452, 453, 454, 456, 357, 245,
	392, 0, 0, 340, 458, 459, 286,
}

var yyPact = [...]int{
	5770, -1000, -421, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1950, 2235, -1000, -1000,
	-1000, -1000, 2181, -1000, 656, 1689, -1000, 1969, 3521, -1000,
	39965, 449, -1000, 38783, 448, 99, 39965, -1000, 130, -1000,
	119, 39965, 126, 38192, -1000, -1000, -309, 16906, 1898, -3,
	-7, 39965, -1000, -1000, -1000, -1000, 2094, 1652, -1000, 300,
	-1000, -1000, -1000, -1000, -1000, -1000, 37601, -1000, -1000, -1000,
	1982, 1955, 2161, 574, 1894, -1000, 2023, 1652, -1000, 16906,
	2075, 2005, 16315, -1000, 16315, 374, -1000, -1000, 12168, -1000,
	-1000, 22826, 39965, 28145, 314, -1000, 1969, -1000, -1000, -1000,
	76, -1000, 289, 1576, -1000, 1573, -1000, 582, 426, 315,
	434, 415, 313, 312, 311, 310, 309, 299, 298, 297,
	321, -1000, 601, 601, -178, -183, 2811, 373, 373, 373,
	406, 1935, 1934, -1000, 674, -1000, 601, 601, 601, 288,
	601, 601, 601, 601, 255, 254, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 317, 1969, 188, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 39965, 142, 39965, -1000, 505, 39965, 760,
	760, 34, 760, 760, 760, 760, 118, 607, -9, -1000,
	109, 233, 155, 185, 720, 150, -1000, -1000, 174, 720,
	1213, 583, 133, -1000, 760, 760, -1000, 9784, 138, 9784,
	9784, -1000, 1959, -1000, -1000, -1000, -1000, 1109, -1000, 405,
	-1000, -1000, -1000, -1000, 39965, 37010, 304, 636, -1000, -1000,
	-1000, 29, -1000, -1000, 1363, 832, 16906, 1076, -1000, 2139,
	551, -1000, -1000, -1000, -1000, -1000, 494, 17497, 17497, 17497,
	17497, -1000, -1000, 1582, 1582, 1582, 1582, 17497, 1582, 17497,
	1582, 1582, 1582, 1582, 16906, 1582, 1582, 1582, -1000, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 501,
	1582, 1582, 1582, 1582, 1582, -1000, -1000, -1000, -1000, 1582,
	1582, 1582, 1582, 1582, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 20457, -1000, 14542, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 39965, -1000, 1582, 140, 39965,
	39965, 303, 2023, 1652, -1000, 2094, 2163, 300, -1000, 2246,
	1671, 1292, 1087, 1652, 1515, 39965, -1000, 1584, -1000, -1000,
	-1000, 1826, 1121, 1211, -1000, -1000, -1000, -1000, 1308, 16906,
	-1000, -1000, 2126, -1000, 19866, 497, 814, 2120, 36419, -1000,
	374, 374, 1565, 11572, -52, -1000, -1000, -1000, 634, 25781,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1959, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1569, 39965, -1000, -1000, 4633, 1212, -1000, 1682,
	-1000, 1561, -1000, 1620, 16906, 1698, 446, 1212, 429, 427,
	416, -1000, -94, -1000, -1000, -1000, -1000, -1000, -1000, 601,
	601, 601, -1000, 319, 2072, 3521, 5324, -1000, -1000, -1000,
	35828, 1680, 1212, -1000, 1679, -1000, 730, 470, 508, 508,
	1212, -1000, -1000, 39965, 1212, 729, 712, 39965, 39965, -1000,
	35237, -1000, 34646, 34055, 1053, 39965, 33464, 32873, 32282, 31691,
	31100, -1000, 1806, -1000, 1786, -1000, -1000, -1000, 39965, 39965,
	39965, 261, -1000, -1000, 39965, 1212, -1000, -1000, 1050, 1048,
	1046, 601, 601, 1043, 1203, 1201, 1197, 601, 601, 1042,
	1195, 26963, 1194, 239, 1041, 1038, 1016, 1035, 1190, 171,
	1169, 999, 959, 1007, 39965, 1675, 39965, -1000, 170, 673,
	348, 630, 1969, 1890, 1538, 403, 435, 1212, 379, 379,
	39965, -1000, 10380, -1000, -1000, 1168, 16906, -1000, 754, 720,
	720, -1000, -1000, -1000, -1000, -1000, -1000, 760, 39965, 754,
	-1000, -1000, -1000, 720, 760, 39965, 760, 760, 760, 760,
	720, 720, 720, 760, 39965, 39965, 39965, 39965, 39965, 39965,
	39965, 39965, 39965, 9784, 583, 760, -325, -1000, 1154, -1000,
	1782, -1000, -1000, -1000, -1000, -1000, -1000, 9784, 9784, -1000,
	-1000, -1000, -1000, 120, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -101, 1533, 30509, -1000, -327, -329, -331,
	-336, -1000, -1000, -1000, -342, -347, -1000, -1000, -1000, 16906,
	16906, 16906, 16906, -223, -1000, 846, 17497, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 897, 809, 17497, 17497, 17497, 17497,
	17497, 17497, 17497, 17497, 17497, 17497, 17497, 17497, 17497, 17497,
	17497, 741, 6279, 6279, 551, 551, 551, 551, -1000, 16315,
	16906, 16906, 551, -1000, 1212, 29918, 16315, 16315, 16906, 1936,
	661, 832, 39965, -1000, 1087, -1000, -1000, -1000, 900, -1000,
	39965, 39965, 79, 16906, 16906, 16906, 16906, 16906, 16906, 13355,
	16906, 16906, 16906, 16906, 16906, 16906, 16906, 16906, 16906, 16906,
	16906, 16906, 16906, 16906, 16906, 16906, 16906, 16906, 16906, 16906,
	16906, 16906, 16906, 16906, 16906, 16906, 12764, 10380, 16315, 16315,
	16315, 16315, 16315, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 492, 1759, 1324, 1434, -1000,
	1517, -1000, -150, 22235, 16906, 1152, 2115, 1718, 39965, -1000,
	-1000, -1000, 2023, -1000, 2023, 1759, 2086, 1833, 16315, -1000,
	-1000, 2086, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1349, -1000, 39965, 1515, 2002, 39965, 1824, 1146, 269, -1000,
	16906, 16906, 1508, -1000, 1280, 39965, -1000, -223, -1000, 29327,
	-1000, -1000, 9188, -1000, 39965, 283, 39965, -1000, 21644, 28736,
	10976, -52, -1000, 10976, 1430, -1000, -26, -49, 13946, 519,
	-1000, -1000, -1000, 2811, 18679, 1283, 519, 57, -1000, -1000,
	-1000, 1620, -1000, 1620, 1620, 1620, 1620, 269, 269, 269,
	269, -1000, -1000, -1000, -1000, -1000, 1674, 1670, -1000, 1620,
	1620, 1620, 1620, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1667, 1667, 1667, 1622, 1622, 358, -1000, 16906, 334, 28145,
	1980, 1006, 1396, 170, 382, 1717, 1212, 1212, 1212, 382,
	-1000, 1188, 1111, 1091, -1000, -399, 1491, -1000, -1000, 2070,
	-1000, -1000, 649, 783, 780, 610, 39965, 153, 278, -1000,
	357, -1000, 28145, 1212, 711, 508, 1212, -1000, 1212, -1000,
	-1000, -1000, -1000, -1000, 1212, 1481, -1000, 1476, 803, 769,
	793, 699, 1481, -1000, -1000, -140, 1481, -1000, 1481, -1000,
	1481, -1000, 1481, -1000, 1481, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 632, 39965, 153, 741, -1000, 394, -1000,
	-1000, -1000, 741, 741, -1000, -1000, -1000, -1000, 1129, 1126,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -390,
	39965, -1000, 162, 629, 265, 301, 227, 39965, 141, 2013,
	270, 250, 39965, 39965, 379, 1771, 39965, 1993, 39965, -1000,
	-1000, -1000, -1000, -1000, 832, 39965, -1000, -1000, 760, 760,
	-1000, -1000, 39965, 760, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 760, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39965, -1000,
	-1000, -1000, -1000, 39965, -1000, -1000, -1000, -1000, -1000, 69,
	-28, 281, -1000, -1000, -1000, -1000, -1000, 2017, -1000, 832,
	688, 678, -1000, 1582, -1000, -1000, 887, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 897, 17497, 17497, 17497, 896, 413,
	1473, 883, 1106, 861, 861, 734, 734, 558, 558, 558,
	558, 558, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1122, -1000, 1499, -1000, 1492, 1204, 1087, -1000, 1499, 1499,
	1082, 16315, -1000, -1000, 689, -1000, 16906, 1087, -1000, -1000,
	1087, 1087, 1456, 1454, 2108, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1373, 1396, 1396, 1396,
	1396, 1396, 16906, 1099, -1000, -1000, -1000, 2182, 2096, 1087,
	1363, 1087, 1446, -1000, 1929, 1396, 1895, 1875, 1860, 1333,
	1855, 1849, 1838, 1396, 1396, 1396, 1275, 1827, 1769, 1765,
	1753, 1740, 1706, 1695, 1684, 1662, 1396, 1087, 16315, 16315,
	1439, 1582, 490, -1000, 1499, 1087, 1087, 1499, 1499, 10380,
	1087, -1000, 39965, -1000, -313, -1000, -57, 538, 1582, -1000,
	26963, 1087, -1000, 6111, -1000, 41147, -1000, -1000, -1000, -1000,
	-1000, 25190, 1661, 2086, -1000, -1000, 1582, 1556, -1000, -1000,
	269, 23, 24599, -1000, -1000, 832, 832, 16906, -1000, -1000,
	-1000, -1000, -1000, -1000, 487, 2093, 277, 1582, -1000, 1504,
	2305, -1000, -1000, -1000, 1999, 19275, -1000, 1582, 1582, 39965,
	1567, 1295, -1000, 482, -1000, 1430, -52, -11, -1000, -1000,
	-1000, -1000, 832, -1000, 1019, 294, 3003, -1000, 364, -1000,
	-1000, -1000, -1000, 1917, 22, -1000, -1000, -1000, 269, 269,
	-1000, -1000, -1000, -1000, -1000, -1000, 1120, 1120, -1000, -1000,
	-1000, -1000, -1000, 994, -1000, -1000, -1000, 991, -1000, -1000,
	1608, 1774, 334, -1000, -1000, 601, 1118, -1000, -1000, 1919,
	601, 601, 39965, -1000, -1000, 1271, 1980, 162, 39965, 640,
	1762, -1000, 1717, 1717, 1717, 39965, -1000, -1000, -1000, -1000,
	-1000, -1000, -400, 52, 292, -1000, -1000, -1000, 295, 39965,
	1536, -1000, 151, -1000, 1235, -1000, 39965, -1000, 1506, 1654,
	1212, 1212, -1000, -1000, -1000, 39965, 1582, -1000, -1000, -1000,
	-1000, 431, 1968, 1965, 153, 151, 519, 1212, -1000, -1000,
	-1000, -1000, -1000, -393, 1501, 421, 157, 249, 39965, 39965,
	39965, 39965, 39965, 460, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 197, 385, -1000, 39965, 39965, 521, -1000, -1000,
	-1000, 720, -1000, -1000, 720, -1000, -1000, -1000, -1000, -1000,
	1952, 39965, -31, -361, -1000, -358, 16906, -1000, -1000, -1000,
	-1000, 813, 412, 1473, 17497, 17497, 16315, -130, 353, 353,
	741, -1000, -1000, -1000, 16906, 16906, 1423, 611, -1000, 16906,
	851, -1000, -1000, -1000, 16906, 16906, 16906, 1087, 238, -1000,
	-1000, -1000, -1000, -1000, 2101, -1000, 16906, 16906, 16906, -1000,
	-1000, 16906, 16906, -1000, 16906, 16906, 18088, 1087, 18088, 16906,
	16906, 18088, -1000, -1000, -1000, -1000, 18088, 16906, 16906, 16906,
	16906, 16906, 16906, 16906, 16906, 16906, -1000, -1000, 1499, 1499,
	16315, 10380, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 538, -1000, 508, 508, 508, 39965, -1000, -1000,
	-1000, -1000, -1000, -1000, 1416, 2020, -1000, 1844, 1837, 2097,
	2093, -1000, 21644, 2086, -1000, -1000, 39965, -304, -1000, 1886,
	1892, -1000, -1000, -1000, -1000, 8592, 2023, 16906, 1752, 39965,
	1582, -1000, 21053, 39965, 39965, 21644, 21644, 21644, 21644, 21644,
	-1000, 1808, 1807, -1000, 1794, 1790, 1846, 39965, -1000, 1469,
	1087, 2163, 19275, 300, 16906, 23417, 1328, 21644, -1000, -1000,
	21644, 39965, 7996, -1000, -1000, -32, -54, -1000, -1000, -1000,
	-1000, 2811, -1000, -1000, 1513, 1998, 1904, -1000, -1000, -1000,
	-1000, 1465, -1000, 1459, 1408, 1442, 122, -1000, 1676, 1947,
	601, 601, -1000, 990, -1000, 1212, 1117, 1115, -1000, -1000,
	-1000, 408, -1000, 1991, 39965, 1751, 1748, 1742, -1000, -407,
	988, 1653, 1621, 16906, 1627, 2062, 1378, 39965, -1000, -1000,
	39965, -1000, 196, -1000, 334, 39965, -1000, -1000, -1000, 278,
	39965, -1000, 5505, 151, -1000, -1000, -1000, -1000, -1000, -1000,
	39965, 167, -1000, 1626, 1102, -1000, -1000, 1708, -1000, -1000,
	-1000, -1000, 156, 205, -1000, 39965, 475, 1774, 39965, -1000,
	-1000, -1000, 760, 760, -1000, -1000, 1938, -1000, 1212, 1396,
	17497, 17497, -1000, 551, -1000, 1582, 1087, 1620, 1620, -1000,
	1620, 1622, -1000, 1620, 111, 1620, 78, 1620, -1000, -1000,
	1087, 1087, 1229, 993, -104, -1000, 832, 16906, 1616, 1571,
	1396, -1000, 1619, 1618, 16906, 1396, 1396, 1396, -1000, 832,
	1333, 1535, 1335, -1000, -1000, -1000, -1000, 1405, 1396, 1478,
	-301, 1087, 1436, 1436, 1436, 1436, 1436, 1434, 1434, 1434,
	1434, -1000, -1000, 1087, -1000, -1000, 2015, 2015, 2015, 1386,
	40556, 39965, -1000, -1000, -1000, -1000, 2093, 2087, 1380, -1000,
	-1000, 23, 371, -1000, 1872, 1892, -1000, 2058, 1880, 2054,
	-1000, -1000, -1000, 832, -1000, 1972, 1262, -1000, 624, 1358,
	-1000, -1000, 15724, 1399, 1836, 480, 1386, 1388, 2305, 1711,
	1739, 2292, -1000, -1000, -1000, -1000, 1797, -1000, 1779, -1000,
	-1000, 1584, -1000, -1000, 1324, 1087, 1389, 283, 21644, 1337,
	1337, -1000, 478, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	797, 5946, 2159, -1000, 1104, -1000, 983, -1000, 709, 707,
	-1000, 39965, 1613, -1000, 269, 1103, 269, 982, -1000, 939,
	-1000, -1000, -240, -1000, -1000, 1731, 1792, -1000, -1000, -1000,
	-1000, 39965, -1000, -1000, 39965, 39965, 39965, 1607, 2050, -1000,
	16906, 1591, 612, 1412, 39965, 39965, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 391, 601, -372, 245,
	200, 601, 601, 601, -1000, -1000, 1365, 1344, -1000, -186,
	-1000, 16906, -1000, -1000, -1000, 974, 974, -1000, 1584, -1000,
	-1000, -1000, 1230, -1000, -1000, -143, 39965, 39965, 39965, 39965,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	551, 17497, -1000, -1000, 269, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 16906, -1000, 16906, -1000, 2023, 1100,
	832, 16906, 16906, -1000, 916, 913, 1396, -1000, -1000, -1000,
	1087, 18088, -1000, 18088, -1000, 16906, 201, 353, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1582,
	1864, 1582, 1582, 23417, -1000, -1000, 2087, 2085, 2044, 1863,
	1871, 1871, 1872, -1000, 2036, 2033, -1000, 1092, 2028, 1090,
	685, -1000, 39965, 16906, 1582, -1000, 306, 39965, 1582, 39965,
	-1000, 2078, -1000, -1000, 16906, 1589, -1000, 16906, -1000, -1000,
	-1000, -1000, -1000, -1000, 6279, 2093, 1337, -1000, -1000, 569,
	-1000, 16906, -1000, -1000, -1000, 1278, -1000, -1000, -1000, -1000,
	-1000, 1586, 16906, -1000, -1000, -1000, 1226, 1219, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1584, -1000, -1000, -1000,
	-1000, 278, -402, 1400, 39965, 912, -1000, 1339, 1378, 271,
	1582, 1085, 601, 601, 601, 906, 898, 26963, 324, -1000,
	278, -1000, -203, -204, 1396, -1000, -1000, 1997, -1000, -1000,
	10380, -1000, -1000, 1583, 1712, -1000, 191, -1000, 1396, 1396,
	1087, -1000, 1396, 1396, 1217, 1209, -1000, -1000, 1335, -1000,
	952, -1000, 201, 1087, 1729, -1000, -1000, 6279, -1000, 24008,
	-1000, 2025, 2021, 27554, 27554, 538, 2085, -1000, 16906, 16906,
	1851, 881, -1000, -1000, -1000, -1000, 1084, 1075, -1000, 1063,
	-1000, 2153, -1000, 832, -1000, 1582, -1000, 473, 1358, -1000,
	2023, 832, 39965, 832, 16, 2078, -1000, 1396, -1000, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 39965, 1355, -1000, -1000, 1996, 1321, 50, -1000, 1315,
	-1000, -1000, 456, -1000, 16906, -1000, 26963, 1058, 1056, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 300, 1370, -1000,
	598, 39965, 39965, 1087, 252, -157, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 16906, -1000, 1087, 1728, -1000,
	-251, -1000, 1309, -1000, -1000, -1000, -1000, -1000, 1309, 1309,
	-1000, -1000, 832, 1363, -1000, 834, -1000, -1000, -1000, -1000,
	-1000, 39965, 1358, 39965, -1000, 1282, 1087, 1582, 2023, -1000,
	1269, -1000, 300, -1000, 1580, 1621, -1000, -1000, -1000, 15133,
	-1000, -1000, -1000, -1000, -141, 10380, 7400, 1257, -1000, -1000,
	1814, -138, -174, 1333, -1000, -349, -1000, -1000, 26372, -1000,
	-1000, -1000, -1000, -1000, 1311, -1000, -1000, 23417, 39374, -1000,
	1725, 603, -141, 16906, 1579, 1087, -1000, -35, -1000, -1000,
	-1000, -1000, -1000, 1708, -1000, 1810, -1000, 1087, -1000, -1000,
	-1000, 1248, -1000, 3993, -271, 1707, 1617, 2177, -1000, -1000,
	-1000, 749, 985, -1000, -1000, -1000, -1000, 1008, 39965, -1000,
	326, -1000, -1000, -143, -152, -1000, -1000, 39374, -265, 519,
	6279, -1000, -1000, 2136, -1000, 2131, 568, 568, -1000, -1000,
	-416, 1233, 168, -1000, -159, -1000, -1000, 1990, 16, -1000,
	-1000, -1000, 344, 922, -1000, -1000, 826, -416, -1000, -175,
	-273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6279,
	203, 203, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2549, 2548, 22, 3, 2547, 2546, 2545, 41, 95,
	181, 29, 194, 94, 2543, 2540, 2539, 2538, 2537, 2536,
	2533, 223, 219, 205, 2532, 2531, 2530, 2529, 2528, 2523,
	2522, 2521, 2518, 2517, 215, 157, 178, 2516, 2515, 2514,
	111, 165, 84, 89, 176, 2513, 2511, 77, 2510, 2509,
	2508, 170, 169, 166, 723, 2507, 162, 106, 39, 2506,
	2505, 2504, 2503, 2502, 2501, 2500, 2499, 2498, 2497, 2496,
	2495, 2494, 2492, 2491, 2490, 2489, 225, 2488, 2486, 15,
	2485, 79, 2484, 2483, 2482, 2481, 123, 2476, 2475, 2474,
	2473, 2472, 2471, 2470, 140, 2469, 2468, 2467, 2465, 191,
	2463, 2462, 296, 105, 101, 2461, 2459, 97, 167, 2456,
	118, 2452, 2451, 2450, 146, 2449, 3821, 2448, 66, 63,
	2447, 58, 76, 61, 53, 88, 1, 2446, 2442, 65,
	85, 2441, 98, 75, 2440, 99, 102, 2439, 2438, 7,
	4, 2437, 17, 2, 9, 68, 2434, 2433, 117, 2432,
	2431, 2429, 96, 2428, 2424, 4386, 2423, 90, 132, 107,
	74, 2419, 38, 40, 2418, 2417, 2414, 2413, 2412, 47,
	2411, 2410, 2409, 137, 32, 155, 23, 26, 46, 133,
	2408, 130, 78, 2407, 135, 136, 2404, 55, 33, 28,
	2401, 31, 127, 122, 25, 93, 148, 2400, 2399, 49,
	71, 2396, 2395, 2388, 2386, 2384, 2383, 70, 2382, 45,
	2381, 184, 2370, 8, 2357, 43, 34, 2356, 67, 152,
	69, 30, 2355, 161, 2353, 52, 156, 128, 149, 2351,
	2349, 2348, 2346, 168, 256, 2343, 2342, 80, 160, 142,
	150, 2341, 273, 2340, 2338, 92, 1040, 1956, 20, 158,
	2337, 2333, 2583, 138, 27, 16, 2332, 220, 2330, 2329,
	2327, 180, 159, 103, 983, 50, 2326, 2325, 12, 2318,
	2314, 2308, 2293, 2291, 2290, 86, 2289, 2288, 2285, 177,
	59, 6, 171, 73, 2283, 2282, 2279, 120, 83, 2277,
	154, 153, 124, 126, 2273, 163, 141, 104, 2267, 760,
	2265, 2257, 2252, 2251, 2250, 91, 2248, 2247, 2246, 2244,
	151, 143, 116, 81, 2241, 82, 110, 147, 144, 44,
	2238, 35, 2237, 2227, 2226, 172, 24, 2224, 10, 48,
	60, 21, 115, 211, 2217, 0, 2212, 13, 164, 258,
	145, 2210, 2209, 5, 11, 14, 2205, 134, 2204, 2200,
	2199, 19, 36, 18, 37, 2197, 2187, 4632, 2525, 125,
	2184, 173,
}

//line sql.y:6813
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 355, 356, 356, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 335, 335,
	335, 338, 338, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	359, 359, 150, 150, 148, 148, 149, 149, 218, 218,
	24, 25, 25, 228, 228, 227, 227, 227, 229, 229,
	229, 229, 264, 264, 26, 26, 26, 26, 26, 100,
	100, 337, 337, 336, 328, 328, 327, 327, 326, 334,
	334, 333, 333, 332, 38, 39, 48, 48, 48, 48,
	49, 50, 339, 339, 301, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 303, 303, 289, 289, 302, 302, 302, 302, 302,
	302, 302, 288, 288, 111, 111, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 350, 350, 198,
	198, 198, 198, 198, 198, 120, 120, 129, 129, 129,
	129, 129, 118, 118, 119, 117, 117, 117, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 128, 128, 124, 124, 124, 125, 125, 125, 126,
	126, 351, 351, 351, 351, 268, 268, 268, 268, 271,
	271, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	270, 270, 270, 270, 270, 272, 272, 272, 272, 272,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 274, 274, 274, 274, 274,
	274, 274, 274, 287, 287, 275, 275, 282, 282, 283,
	283, 283, 284, 284, 284, 285, 285, 280, 280, 280,
	280, 280, 280, 281, 281, 281, 290, 315, 315, 314,
	314, 312, 312, 312, 312, 312, 312, 312, 312, 299,
	299, 309, 309, 309, 309, 309, 298, 298, 294, 294,
	294, 295, 295, 296, 296, 293, 293, 297, 297, 311,
	311, 310, 310, 291, 291, 292, 292, 317, 352, 352,
	352, 352, 352, 353, 353, 318, 344, 345, 343, 343,
	343, 343, 343, 81, 81, 81, 241, 241, 241, 307,
	307, 306, 306, 306, 308, 308, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 236, 236, 236,
	342, 342, 342, 342, 342, 342, 341, 341, 341, 304,
	304, 304, 340, 340, 57, 57, 182, 182, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	46, 46, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 86, 86, 87, 87, 87, 87, 89, 89, 89,
	320, 320, 58, 58, 3, 3, 138, 140, 141, 141,
	139, 139, 139, 139, 139, 139, 60, 60, 59, 59,
	143, 142, 144, 144, 144, 1, 1, 2, 2, 4,
	4, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 286, 286, 286, 319, 319, 321, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 323, 323,
	323, 61, 61, 324, 276, 277, 278, 5, 6, 300,
	322, 96, 96, 28, 37, 37, 29, 29, 29, 29,
	30, 30, 62, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 235, 235, 243, 243, 234, 234, 257,
	257, 257, 237, 237, 237, 238, 238, 349, 349, 349,
	231, 231, 64, 64, 64, 66, 66, 67, 68, 68,
	259, 259, 260, 260, 69, 70, 82, 82, 82, 82,
	82, 82, 85, 85, 85, 15, 15, 15, 15, 78,
	78, 78, 14, 14, 65, 65, 72, 346, 346, 347,
	348, 348, 348, 348, 73, 75, 31, 31, 31, 31,
	31, 31, 106, 106, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 101, 101, 101, 95,
	95, 360, 76, 77, 77, 99, 99, 99, 92, 92,
	92, 98, 98, 98, 16, 16, 17, 217, 217, 18,
	18, 103, 103, 105, 105, 105, 105, 105, 107, 107,
	107, 107, 107, 107, 107, 102, 102, 104, 104, 104,
	104, 250, 250, 250, 249, 249, 132, 132, 134, 133,
	133, 135, 135, 136, 136, 136, 136, 180, 180, 158,
	158, 215, 215, 213, 213, 214, 214, 216, 216, 216,
	216, 219, 219, 137, 137, 137, 137, 145, 145, 146,
	146, 147, 147, 258, 258, 255, 255, 255, 254, 254,
	151, 151, 151, 153, 152, 152, 152, 152, 154, 154,
	156, 156, 155, 155, 157, 162, 162, 161, 161, 159,
	159, 159, 159, 160, 160, 160, 160, 163, 163, 116,
	116, 116, 116, 116, 116, 116, 127, 127, 127, 127,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 83, 83, 83,
	232, 232, 164, 164, 172, 172, 172, 172, 165, 165,
	165, 165, 165, 165, 165, 173, 173, 173, 179, 174,
	174, 170, 170, 170, 170, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 266, 266, 331, 331, 330, 330, 329,
	329, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 361, 361, 279, 279, 279, 279, 171, 171,
	171, 171, 171, 97, 97, 97, 97, 97, 263, 263,
	263, 267, 267, 267, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 185,
	185, 93, 93, 183, 183, 184, 186, 186, 181, 181,
	181, 167, 167, 167, 187, 187, 188, 188, 189, 189,
	191, 190, 190, 192, 193, 193, 193, 194, 194, 195,
	195, 195, 47, 47, 47, 47, 47, 42, 42, 42,
	42, 43, 43, 43, 108, 108, 108, 108, 110, 110,
	109, 109, 79, 79, 80, 80, 80, 114, 114, 115,
	115, 115, 112, 112, 113, 113, 211, 211, 196, 196,
	196, 203, 203, 203, 199, 199, 201, 201, 201, 202,
	202, 202, 200, 208, 208, 210, 210, 209, 209, 205,
	205, 206, 206, 207, 207, 207, 204, 204, 166, 166,
	166, 166, 166, 212, 212, 212, 212, 220, 220, 176,
	176, 178, 178, 177, 131, 221, 221, 225, 222, 222,
	226, 226, 226, 226, 226, 223, 223, 224, 224, 251,
	251, 251, 230, 230, 242, 242, 239, 239, 240, 240,
	233, 233, 244, 244, 244, 74, 175, 175, 316, 316,
	313, 247, 247, 248, 248, 252, 252, 256, 256, 253,
	253, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	357, 358, 261, 262, 262, 262,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 1, 1, 0,
	2, 2, 3, 3, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 2, 2,
	2, 1, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 4, 4, 2, 11, 3, 6, 8, 6,
	6, 6, 13, 8, 6, 10, 5, 5, 5, 5,
	5, 0, 6, 5, 6, 4, 5, 0, 8, 9,
	0, 3, 0, 1, 0, 3, 8, 4, 1, 3,
	3, 6, 7, 7, 8, 4, 0, 1, 0, 1,
	3, 3, 1, 1, 2, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	2, 4, 4, 4, 4, 4, 3, 3, 3, 5,
	2, 3, 3, 2, 3, 4, 4, 4, 3, 4,
	4, 5, 3, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 3, 4, 3,
	7, 0, 3, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 6, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 9, 6,
	6, 6, 2, 2, 3, 3, 3, 1, 1, 1,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 5, 5, 6, 4, 4, 8, 6, 8,
	6, 8, 5, 4, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 6, 6, 6, 4, 4, 4, 7, 8, 6,
	5, 6, 8, 11, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 0, 2, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 2, 2, 0, 3, 0, 2, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -355, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -85, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -357,
	11, 429, 252, 251, 28, -12, 463, 85, -356, 600,
	-211, -196, 22, 33, 29, -195, -191, -99, -196, 20,
	18, 7, -76, -360, -76, -76, 12, 13, -76, -301,
	-303, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -325, -44, -41, 223, 220, 267,
	119, 120, 257, 258, 259, 222, 241, 256, 260, 255,
	276, -40, 80, 33, 463, 466, -308, 219, 225, 226,
	430, 122, 121, 75, 221, -305, 353, 495, 570, -56,
	572, 101, 103, 571, 44, 231, 573, 574, 575, 501,
	576, 240, 577, 578, 579, 580, 586, 542, 587, 588,
	589, 123, 7, -76, -256, -252, -335, -246, 88, 89,
	90, 460, 243, 493, 494, 292, 80, 41, 350, 353,
	495, 570, 299, 313, 307, 334, 326, 461, 496, 295,
	244, 280, 567, 324, 131, 572, 298, 497, 258, 358,
	359, 360, 101, 302, 396, 585, 297, 498, 583, 103,
	571, 79, 51, 44, 253, 322, 227, 318, 573, 281,
	499, 471, 274, 122, 119, 592, 36, 316, 50, 30,
	582, 121, 49, 574, 146, 500, 575, 501, 362, 341,
	561, 48, 363, 259, 502, 83, 264, 465, 569, 364,
	317, 365, 291, 581, 224, 503, 553, 366, 367, 562,
	504, 342, 346, 505, 388, 368, 599, 52, 506, 507,
	563, 120, 508, 78, 576, 311, 312, 509, 289, 242,
	390, 338, 442, 449, 450, 107, 108, 445, 109, 451,
	110, 452, 453, 454, 443, 111, 104, 444, 455, 456,
	339, 340, 112, 457, 106, 105, 446, 448, 113, 458,
	240, 35, 369, 462, 293, 58, 268, 391, 46, 344,
	596, 45, 557, 510, 560, 337, 333, 439, 53, 511,
	512, 513, 514, 577, 336, 310, 332, 591, 4, 286,
	578, 62, 226, 348, 347, 349, 275, 387, 329, 515,
	516, 517, 247, 81, 518, 319, 21, 519, 520, 370,
	282, 521, 56, 522, 523, 394, 256, 524, 54, 579,
	39, 261, 593, 580, 525, 526, 527, 528, 263, 529,
	372, 530, 371, 343, 345, 270, 373, 464, 531, 315,
	260, 584, 532, 248, 568, 262, 267, 255, 395, 249,
	533, 534, 535, 536, 537, 296, 552, 538, 539, 303,
	586, 440, 43, 540, 541, 542, 543, 544, 290, 285,
	389, 398, 61, 82, 355, 545, 566, 309, 283, 546,
	300, 55, 587, 588, 589, 277, 590, 9, 597, 598,
	375, 123, 287, 288, 47, 330, 269, 547, 548, 320,
	321, 335, 308, 331, 301, 554, 271, 376, 441, 257,
	549, 397, 284, 351, 356, 468, 276, 377, 565, 467,
	328, 325, 278, 550, 378, 232, 272, 273, 551, 555,
	379, 380, 294, 381, 382, 383, 384, 385, 386, 279,
	466, 306, 323, 357, 410, 411, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 438, 230, -76, 230, -155, -252, 230, -223,
	359, -243, 361, 374, 369, 379, 367, -235, 370, 372,
	270, -349, 388, 230, 376, 218, 362, 371, 380, 381,
	294, 382, 386, 279, 383, 384, 385, -335, 172, 575,
	590, 131, 327, 366, 364, 389, 557, -252, 301, -259,
	306, -247, -335, -246, 304, -155, -82, 553, 222, -261,
	-261, -101, 557, 559, -174, -116, 139, -127, -130, -121,
	-122, -168, -169, -170, -171, -128, -181, 161, 162, 169,
	140, -179, -131, 26, 459, 431, 430, 172, 31, 214,
	68, 69, 433, 434, 142, 57, 406, 407, -129, 401,
	408, 403, 436, 437, 114, 438, 104, 106, 105, 439,
	440, 441, 339, 340, 442, 443, 444, 107, 108, 109,
	110, 111, 112, 113, 445, 448, 446, 447, 449, 450,
	451, 456, 457, 452, 453, 454, 455, 458, -247, -252,
	235, 400, 229, 167, 429, -123, -119, -8, -177, 399,
	404, 405, 409, 402, -335, -246, -125, -124, -164, 91,
	97, 102, 98, -354, 115, -357, 92, 93, 94, 95,
	96, 116, 117, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 44, 375, 375, -155, -76, -76,
	-76, -76, -189, -99, -191, -10, -8, -357, 8, -76,
	-8, -9, -13, -34, -36, 489, -35, -252, -196, -211,
	12, 157, 42, 50, -194, -195, -12, -8, -116, 19,
	23, 24, -104, 163, -116, -252, -77, -104, -233, 234,
	-76, -76, -222, -264, 301, -226, 389, 388, -248, -224,
	-247, -245, -223, 387, 223, 23, 469, 138, 25, 27,
	141, 172, 126, 19, 142, 37, 225, 327, 241, 171,
	237, 430, 218, 72, 470, 401, 403, 399, 406, 432,
	433, 400, 361, 31, 13, 472, 28, 251, 24, 38,
	165, 220, 145, 473, 254, 26, 252, 114, 117, 475,
	22, 75, 246, 14, 239, 40, 16, 476, 477, 17,
	235, 234, 157, 231, 70, 11, 214, 29, 154, 66,
	478, 133, 479, 480, 481, 482, 127, 68, 155, 20,
	594, 404, 405, 33, 558, 459, 265, 167, 73, 59,
	559, 139, 402, 483, 484, 115, 485, 118, 76, 564,
	135, 18, 71, 42, 486, 266, 487, 236, 595, 488,
	392, 489, 156, 221, 429, 69, 490, 229, 374, 8,
	435, 32, 250, 238, 125, 67, 491, 230, 144, 436,
	437, 233, 128, 116, 7, 132, 34, 12, 74, 77,
	407, 408, 409, 57, 124, 463, 143, 15, 492, 393,
	137, 131, -302, 155, -288, -292, -247, 245, -318, 241,
	-155, -311, -310, -247, -357, -100, -242, 231, 239, 238,
	132, -339, 135, 287, 400, 229, -51, -52, -53, -223,
	171, 574, -86, 262, 266, 86, 86, -292, -291, -290,
	-340, 266, 245, -317, -309, 237, 246, -298, 238, 239,
	-293, 231, 133, -340, -293, 236, 246, 266, 266, 123,
	266, 123, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 261, -299, 147, -299, 467, 467, -305, -340, -340,
	-340, 233, 35, 35, -244, -293, 233, 25, -299, -299,
	-299, -223, 171, -299, -299, -299, -299, 274, 274, -299,
	-299, -299, -299, -299, -299, -299, -299, -299, -299, -299,
	-299, -299, -299, -299, -299, -299, 230, -339, -108, 386,
	294, 80, -54, 276, -37, -155, -242, 231, 232, -339,
	263, -155, 215, -155, -237, 155, 15, -237, -234, 375,
	373, 360, 365, -237, -237, -237, -237, 277, 358, -294,
	231, 35, 242, 375, 277, 358, 277, 278, 277, 278,
	368, 378, 277, -257, 14, 157, 400, 363, 367, 270,
	230, 271, 232, 377, 278, -257, 92, -238, 155, 375,
	273, -237, -237, -262, -357, -248, 327, -335, 560, -262,
	-262, 32, 89, 233, -247, -78, -247, 92, -15, -11,
	-22, -21, -23, 147, -106, 375, -94, 172, 575, 561,
	562, 563, 560, 372, 568, 566, 564, 277, 565, 86,
	135, 137, 138, 4, -116, 154, -165, 147, 148, 149,
	150, 151, 152, 153, 157, 139, 141, 155, 156, 136,
	158, 159, 160, 161, 162, 163, 164, 166, 165, 167,
	168, 171, 216, 217, -122, -122, -122, -122, -179, -357,
	-357, -357, -122, -232, -357, -122, -357, -357, -357, -357,
	-185, -116, -357, -361, -357, -361, -361, -279, -357, -279,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, 215, -357, -357,
	-357, -357, -357, -279, -279, -279, -279, -279, 102, 97,
	91, -181, 98, 92, -247, -252, -8, -9, -174, -261,
	-346, -347, -158, -155, -357, 294, -247, -247, 263, -194,
	-12, -8, -189, -195, -191, -8, -76, -92, -105, 63,
	64, -107, 24, 38, 67, 65, 23, -358, 87, -358,
	-211, -358, 86, -36, -215, 85, 61, 43, 92, 92,
	86, 21, -190, -192, -116, 14, -250, 4, -249, 25,
	-247, 92, 215, 100, 14, -156, 29, -155, -233, -233,
	86, 301, -226, -264, -228, -227, 390, 392, 147, -251,
	-247, 92, 31, 87, 86, -155, -268, -271, -273, -272,
	-274, -269, -270, 324, 325, 172, 328, 330, 331, 332,
	333, 334, 335, 336, 337, 338, 341, 32, 253, 320,
	321, 322, 323, 342, 343, 344, 345, 346, 347, 348,
	349, 307, 326, 461, 308, 309, 310, 311, 312, 313,
	315, 316, 317, 318, 319, -338, -335, 85, 87, 86,
	-275, 85, -116, -108, 230, -335, 231, 231, 231, -76,
	429, -299, -299, -299, 261, 19, -44, -41, -325, 18,
	-40, -41, 223, 119, 120, 220, 85, -288, 85, -297,
	-338, -335, 85, 133, 236, 132, -296, -293, -296, -297,
	-335, -181, -335, 133, 133, -219, -247, -219, -219, 23,
	-219, 23, -219, 23, 94, -247, -219, 23, -219, 23,
	-219, 23, -219, 23, -219, 23, 31, 78, 79, 31,
	81, 82, 83, -181, -181, -288, -223, -155, -335, 94,
	94, 94, -299, -299, 94, 92, 92, 92, -299, -299,
	94, 92, -254, -252, 92, 92, -341, 247, 291, 293,
	94, 94, 94, 94, 31, 92, -342, 31, 582, 581,
	583, 584, 585, 92, 94, 31, 94, 31, 94, -247,
	85, -155, -114, 281, 218, 220, 223, 76, 92, 295,
	147, 44, 86, 233, 230, -335, -239, 235, -239, -247,
	-253, -252, -245, 92, -116, -295, 14, 157, -257, -257,
	-237, -155, -295, -257, -237, -155, -237, -237, -237, -237,
	-257, -257, -257, -237, -252, -252, -155, -155, -155, -155,
	-155, -155, -155, -262, -238, -237, 560, 92, -231, 14,
	76, -262, -262, -260, 304, 338, 554, 555, 556, 86,
	463, -148, -155, 560, 560, 560, 560, 560, 560, -116,
	-116, -116, -116, 485, -172, 115, 139, 116, 117, -130,
	-173, -177, -179, 99, 157, 141, 155, 156, -121, -122,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -263, -335, 92, 172, -126, -125, 98,
	-354, -126, -102, -104, -116, -116, -335, -247, -102, -102,
	-116, -98, 24, 38, -183, -184, 143, -181, -358, -358,
	94, 98, -247, -247, -91, -90, 411, 412, 413, 414,
	416, 417, 418, 421, 422, 426, 427, 410, 428, 415,
	420, 423, 424, 425, 419, 323, -116, -116, -116, -116,
	-116, -116, -83, -116, 126, 127, 128, -116, -116, -175,
	-174, -334, -333, -332, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -103, 24, 38,
	-102, -248, -253, -245, -102, -103, -103, -102, -102, 215,
	-211, -358, 86, -348, 392, 393, 558, -255, 266, -254,
	25, -175, 92, 14, -217, 77, -247, -194, -194, 63,
	64, 59, -102, -107, -358, -35, 25, -213, -247, 62,
	92, -280, -223, 350, 351, -116, -116, 86, -193, 27,
	28, -155, -249, 163, -253, -155, -218, 266, -155, -133,
	-135, -136, -137, -158, -180, -357, -138, 481, 478, 14,
	-148, -149, -157, -252, -226, -228, 86, 391, 393, 394,
	76, 118, -116, -281, 171, -307, -306, -305, -288, -290,
	-291, -292, 87, -281, -284, 356, 355, -275, -275, -275,
	-275, -275, -280, -280, -280, -280, 85, 85, -275, -275,
	-275, -275, -282, 85, -282, -282, -283, 85, -283, -318,
	-116, -315, -314, -312, -313, 240, 101, 551, 509, 463,
	501, 542, 77, -310, -193, 94, -358, -114, -240, 235,
	-316, -313, -335, -335, -335, -240, -335, 92, -335, 92,
	-335, 92, -87, -58, -1, 594, 595, 596, 86, 19,
	-289, -288, -57, 291, -321, -322, 266, -317, -311, -297,
	133, -296, -297, -297, -335, 86, 29, 123, 123, 123,
	123, 463, 220, 32, -288, -57, -263, 233, -263, -263,
	92, 92, -236, 590, -148, -110, 283, 147, 272, 272,
	230, 230, 285, -155, 296, 298, 297, 295, 23, 284,
	286, 288, 274, -155, -155, -239, 76, -150, -155, 26,
	-252, -155, -237, -237, -155, -237, -237, -155, -247, -94,
	392, 86, 463, 22, -95, 22, -357, 115, 116, 117,
	-173, -121, -122, -121, 138, 254, 86, -358, 25, 86,
	77, -358, -358, -358, 86, 14, -102, -186, -184, 145,
	-116, -358, -358, -358, 86, 86, 14, -267, 25, -358,
	-358, -358, -358, -358, -185, -358, 14, 86, 86, -358,
	-358, 86, 86, -358, 86, 86, 86, -331, 86, 86,
	86, 86, -358, -358, -358, -358, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, -358, -358, -102, -102,
	-357, 215, -358, -358, -358, -358, -358, -248, -347, 557,
	393, -162, -161, -159, 74, 234, 75, -357, -254, -358,
	-126, 89, -214, 89, -213, -167, -247, 94, 98, -196,
	-132, -134, 14, -107, -179, 87, 86, -280, -200, -205,
	-234, -247, 92, 172, -192, 215, -163, 15, -166, 32,
	57, -11, -357, -357, 32, 86, -151, -153, -152, -154,
	66, 70, 72, 67, 68, 69, 73, -258, 25, -133,
	-9, -8, -357, -357, -357, -155, -148, -359, 14, 77,
	-359, 86, 215, -227, -229, 395, 392, 398, -335, 92,
	-86, 86, -305, -292, -197, -111, 40, -285, 357, -280,
	-280, -287, 92, -287, 94, 94, 87, -47, -42, -43,
	33, 80, -312, -299, 92, 39, -299, -299, -247, 87,
	-193, -110, -155, 139, 76, -316, -316, -316, -252, -2,
	593, 599, 133, 85, 360, 18, -213, 86, 87, -182,
	292, 87, -88, -247, 87, 85, -297, -297, -247, -357,
	230, 31, 31, -57, -182, -281, -335, 592, 591, 87,
	232, 290, -115, 406, -112, 92, 88, -155, -155, -155,
	-155, -155, 223, 220, 275, 233, -148, -155, 86, -81,
	249, 244, -257, -257, 33, -155, 392, 569, 567, -116,
	138, 254, -130, -122, -104, 460, -265, 172, 324, 253,
	322, 318, 338, 329, 355, 320, 356, 317, 316, 315,
	-265, -263, -116, -116, -189, 146, -116, 144, -116, -116,
	-116, -358, 172, 324, 14, -116, -116, -116, -332, -116,
	-116, -116, -330, -329, -126, -181, -358, -330, -116, -116,
	-329, -329, -333, -333, -333, -333, -333, -174, -174, -174,
	-174, -358, -358, -103, -248, -159, -293, -293, -293, -219,
	86, -230, 22, 14, 57, 57, -132, -163, -133, -107,
	-247, -203, 553, -208, 46, -206, -207, 47, -204, 48,
	56, 163, -194, -116, -220, 76, -221, -225, -181, -176,
	-178, -177, -357, -212, -358, -247, -219, -221, -135, -136,
	-136, -135, -136, 66, 66, 66, 71, 66, 71, 66,
	-152, -252, -358, -358, -9, -9, -116, -255, 77, -133,
	-133, -157, -252, 163, 392, 396, 397, -305, -353, 115,
	139, 31, 76, 353, 101, -351, 171, -352, 236, 132,
	133, 248, 25, 41, 87, 86, 87, 86, 87, 86,
	-241, 500, 139, -43, -42, -299, -299, 94, -335, 92,
	92, 232, 26, -155, 76, 76, 76, -89, 597, 94,
	85, -3, 80, -116, 85, 19, -288, -181, -323, -276,
	-324, -277, -278, -5, -6, -300, 57, 101, -61, 44,
	231, 577, 578, 123, 590, -315, -213, -319, -321, -155,
	-118, -357, -117, -119, -123, 161, 162, -182, -155, -109,
	281, 289, 85, -113, 89, -337, 77, 272, 353, 272,
	-155, -81, -47, -155, -237, -237, 33, -335, -358, -130,
	-122, -357, -358, -275, -275, -275, -283, -275, 312, -275,
	312, -275, -358, -358, 86, -358, 22, -358, -93, 435,
	-116, 86, 86, -358, 85, 85, -116, -358, -358, -358,
	-331, 86, -358, 86, -358, 86, -266, 552, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -160,
	22, -160, -160, -358, 89, -155, -163, -187, 16, -200,
	51, 330, -210, -209, 55, 47, -207, 19, 49, 19,
	30, -220, 86, 147, 86, -358, -358, 86, 57, 215,
	-358, -163, -146, -145, 76, 77, -147, 76, -145, 66,
	66, -215, -358, -358, 86, -218, -133, -163, -163, 215,
	115, -357, -120, -129, -118, 12, 92, 92, -335, 133,
	133, -155, 85, -280, 92, -280, 94, 94, 500, 31,
	81, 82, 83, 31, 78, 79, -155, -155, -155, -155,
	-320, 85, 19, -116, 85, 147, 87, -213, -213, 268,
	157, -299, 575, 274, 274, -299, -299, -299, 87, -358,
	86, -286, 463, 466, -116, -124, -124, -215, 87, -328,
	463, -336, -247, -247, -247, -247, -121, -280, -116, -116,
	-194, 92, -116, -116, 94, 94, -358, -358, -330, -329,
	-116, -358, -143, -142, -144, 561, 115, 31, -265, -357,
	66, 18, 16, -357, -357, -255, -187, -188, 17, 19,
	-201, 53, -199, 52, -199, -209, 19, 19, 92, 19,
	92, 133, -225, -116, -178, 57, -11, -247, -176, -247,
	-189, -116, 85, -116, -126, -163, -163, -116, -169, 438,
	104, 106, 105, 439, 440, 441, 339, 340, 442, 443,
	444, 107, 108, 109, 110, 111, 112, 113, 445, 448,
	446, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, 85, -116, 87, 87, -215, -319, -58, 87, -213,
	94, 87, 269, -177, -357, 92, -299, -299, -299, 94,
	94, -254, -352, -321, 467, 467, -358, 25, -327, -326,
	-248, 85, 77, -97, 157, 463, -358, -358, -358, -358,
	-358, 87, 87, -358, -358, 86, -358, -142, -144, -358,
	76, -126, -216, -358, -247, 236, 19, 19, -216, -216,
	-162, -188, -116, -174, -202, 54, 76, 118, 92, 92,
	92, 12, -176, 215, -194, -213, -140, 360, -189, -358,
	-213, 87, 25, 87, 599, 133, 87, -177, -96, -357,
	265, -254, 92, 92, -11, 86, 147, -213, -155, -358,
	461, 73, 464, -116, -358, 76, 473, 561, 86, -358,
	-358, -358, 76, 118, -221, -247, 87, -358, -357, -194,
	87, -198, -11, 85, -3, 265, -79, 463, -326, -304,
	-248, 92, 94, 87, 62, 462, 465, -331, -247, 236,
	-255, -141, -139, -247, 515, -344, -345, 76, -353, -350,
	115, 139, 101, -351, 124, 125, -79, -116, 85, -358,
	-80, 280, 557, -337, 62, -358, -358, 86, 22, -268,
	-60, 525, -345, 76, -344, 76, 13, 12, 115, 92,
	87, -213, 241, -328, 463, -139, 522, -281, -126, -343,
	249, 244, 247, 32, -343, -4, 598, 87, 282, 464,
	-59, 26, -140, 243, 31, 115, 94, -4, 465, 525,
	-126, -143, -142, -142,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 771,
	771, 771, 0, 771, 0, 0, 771, -2, -2, 771,
	1257, 0, 771, 0, 0, -2, 703, 705, 0, 707,
	-2, 0, 0, 716, 1752, 1752, 766, 0, 0, 0,
	0, 0, 771, 771, 771, 771, 1118, 48, 771, 0,
	83, 84, 722, 723, 724, 63, 0, 1750, 1, 3,
	69, 73, 0, 0, 0, 56, 1127, 0, 76, 0,
	0, 775, 0, 773, 0, 1240, 771, 771, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 531, 471, 514, 469, 500, -2, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 359, 359, 0, 0, -2, 462, 462, 462,
	0, 0, 0, 497, 1242, 414, 359, 359, 359, 0,
	359, 359, 359, 359, 0, 0, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 1144, 153, 1258, 1255, 1256, 38, 39,
	40, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 0, 1234, 0, 631, 872, 0, 692,
	692, 0, 692, 692, 692, 692, 0, 0, 0, 643,
	0, 0, 0, 0, 689, 0, 659, 660, 0, 689,
	0, 695, 0, 670, 692, 692, 673, 1753, 0, 1753,
	1753, 1225, 0, 686, 684, 698, 699, 702, 706, 0,
	711, 714, 1251, 1252, 0, 729, 47, 1493, 721, 734,
	735, 0, 767, 768, 43, 969, 0, 894, 899, 910,
	923, 924, 925, 926, 927, 929, 930, 0, 0, 0,
	0, 935, 936, 0, 0, 0, 0, 0, 950, 0,
	0, 0, 0, 0, 1099, 0, 1062, 1062, 986, 1062,
	1064, 1064, 0, 0, 0, 1749, 1533, 1541, 1542, 1564,
	1648, 1695, 1537, 1538, 1519, 1531, 1534, 1522, 1523, 1525,
	1527, 1532, 1539, 1545, 1524, 1544, 1543, 0, 1520, 1521,
	1526, 1536, 1540, 1528, 1529, 1530, 1535, 1546, 1108, 0,
	0, 0, 0, 0, 0, 261, 262, 968, 1214, 1064,
	1064, 1064, 1064, 1064, -2, -2, 208, 209, 210, 211,
	212, 213, 214, 0, 204, 0, 266, 267, 263, 264,
	265, 952, 953, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 1752, 0, 744, 0, 0, 0,
	0, 0, 1127, 0, 1119, 1118, 61, 0, 771, -2,
	0, 0, 0, 0, 45, 0, 50, 831, 75, 74,
	1166, 0, 0, 0, 57, 1128, 65, 67, 1129, 0,
	776, 777, 0, 807, 811, 0, 772, 0, 0, 1241,
	1240, 1240, 100, 0, 1691, 1218, -2, -2, 0, 0,
	1253, 1254, 1227, -2, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, -2, 0, 0, 165, 166, 0, 41, 386, 0,
	161, 0, 379, 325, 0, 1144, 0, 0, 0, 0,
	0, 771, 0, 1235, 142, 143, 150, 151, 152, 359,
	359, 359, 511, 0, 0, 153, 153, 478, 479, 480,
	0, 0, -2, 384, 0, 463, 0, 0, 373, 373,
	377, 375, 376, 0, 0, 0, 0, 0, 0, 491,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 0, 360, 0, 509, 510, 415, 0, 0,
	0, 0, 489, 490, 0, 0, 1243, 1244, 0, 0,
	0, 359, 359, 0, 0, 0, 0, 359, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1157, 0,
	0, 0, -2, 0, 623, 0, 0, 0, 1236, 1236,
	0, 630, 0, 632, 633, 0, 0, 634, 0, 689,
	689, 687, 688, 636, 637, 638, 639, 692, 0, 0,
	368, 369, 370, 689, 692, 0, 692, 692, 692, 692,
	689, 689, 689, 692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 695, 692, 0, 666, 0, 667,
	668, 671, 672, 674, 1754, 1755, 1274, 1753, 1753, 678,
	682, 1226, 704, 712, 715, 732, 730, 731, 733, 725,
	726, 727, 728, 0, 746, 747, 752, 0, 0, 0,
	0, 758, 759, 760, 0, 0, 763, 764, 765, 0,
	0, 0, 0, 0, 892, 0, 0, 958, 959, 960,
	961, 962, 963, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 931, 932, 933, 934, 937, 0,
	0, 0, 942, 943, 0, 0, 0, 0, 0, 781,
	0, 1100, 0, 984, 0, 985, 987, 988, 0, 989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1246, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 791, 0, 0, 791,
	791, 0, 0, 197, 198, 199, 200, 201, 215, 216,
	217, 218, 219, 268, 1108, 0, 968, 0, 0, 44,
	736, 737, 0, 855, 1246, 0, 0, 787, 0, 55,
	64, 66, 1127, 59, 1127, 0, 793, 0, 0, -2,
	-2, 794, 800, 801, 802, 803, 804, 52, 1751, 53,
	0, 72, 0, 46, 0, 0, 0, 0, 337, 1169,
	0, 0, 1120, 1121, 1124, 0, 808, 1575, 812, 0,
	814, 815, 0, 774, 0, 98, 0, 871, 0, 0,
	0, 1691, 1224, 0, 102, 103, 0, 0, 0, 343,
	1229, 1230, 1231, -2, 366, 0, 343, 332, 276, 277,
	278, 325, 280, 325, 325, 325, 325, 337, 337, 337,
	337, 308, 309, 310, 311, 312, 0, 0, 295, 325,
	325, 325, 325, 315, 316, 317, 318, 319, 320, 321,
	322, 281, 282, 283, 284, 285, 286, 287, 288, 289,
	327, 327, 327, 329, 329, 0, 42, 0, 347, 0,
	1124, 0, 0, 1157, 1238, 1248, 0, 0, 0, 1238,
	120, 0, 0, 0, 512, 542, 472, 501, 513, 0,
	475, 476, -2, 0, 0, 462, 0, 464, 0, 367,
	0, -2, 0, 377, 0, 373, 377, 374, 377, 365,
	378, 493, 494, 495, 0, 572, 841, 0, 0, 0,
	0, 0, 578, 579, 580, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 464, 0, 498, 0, 416,
	417, 418, 0, 0, 421, 422, 423, 424, 0, 0,
	427, 428, 429, 858, 859, 430, 431, 456, 457, 458,
	432, 433, 434, 435, 436, 437, 438, 450, 451, 452,
	453, 454, 455, 439, 440, 441, 442, 443, 444, 447,
	0, 135, 1148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 0, 0, 0, 790,
	873, 1259, 1260, 693, 694, 0, 371, 372, 692, 692,
	640, 679, 0, 692, 644, 680, 645, 647, 646, 648,
	661, 662, 692, 651, 690, 691, 652, 653, 654, 655,
	656, 657, 658, 675, 663, 664, 665, 696, 0, 700,
	701, 676, 677, 0, 713, 717, 718, 719, 720, 0,
	0, 749, 94, 754, 755, 756, 757, 769, 762, 970,
	889, 890, 891, 0, 893, 896, 0, 954, 956, 898,
	900, 965, 966, 967, 0, 0, 0, 0, 0, 904,
	908, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 928, 1078, 1079, 1080, 945, 269, 270,
	0, 946, 0, 805, 0, 0, 0, 944, 0, 0,
	0, 0, 782, 783, 1106, 1103, 0, 0, 1063, 1065,
	0, 0, 0, 0, 0, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1081, 0, 0, 0,
	0, 0, 1099, 0, 947, 948, 949, 0, 0, 0,
	1247, 0, 130, 131, 0, 0, 0, 0, 0, 1035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 1109, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 739, 740, 742, 0, 875, 0, 856,
	0, 0, 745, 0, 786, 0, 789, 58, 60, 798,
	799, 0, 816, 795, 54, 49, 0, 0, 833, 1167,
	337, 1189, 0, 341, 342, 1130, 1131, 0, 1123, 1125,
	1126, 77, 813, 809, 0, 887, 0, 0, 870, 0,
	819, 821, 822, 823, 853, 0, 826, 0, 0, 0,
	0, 0, 96, 872, 1219, 101, 0, 0, 106, 107,
	1220, 1221, 1222, 1223, 0, 531, -2, 411, 167, 169,
	170, 171, 162, -2, 335, 333, 334, 279, 337, 337,
	302, 303, 304, 305, 306, 307, 0, 0, 296, 297,
	298, 299, 290, 0, 291, 292, 293, 0, 294, 385,
	0, 1132, 348, 349, 351, 359, 0, 354, 355, 0,
	359, 359, 0, 380, 381, 0, 1124, 1148, 0, 0,
	0, 1249, 1248, 1248, 1248, 0, 155, 156, 157, 158,
	159, 160, 567, 0, 0, 543, 565, 566, 153, 0,
	0, 163, 466, 465, 0, 599, 0, 383, 0, 0,
	377, 377, 362, 363, 496, 0, 0, 574, 575, 576,
	577, 0, 0, 0, 464, 466, 343, 0, 419, 420,
	425, 426, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 1145,
	1146, 1147, 0, 0, 624, 0, 0, 403, 92, 1237,
	629, 689, 650, 681, 689, 642, 649, 669, 709, 753,
	0, 0, 0, 0, 761, 0, 0, 897, 955, 957,
	901, 0, 905, 909, 0, 0, 0, 0, 0, 0,
	0, 951, 975, 976, 0, 0, 1118, 0, 1104, 0,
	0, 983, 1066, 1067, 0, 0, 0, 0, 0, 994,
	995, 996, 997, 998, 0, 1000, 0, 0, 0, 1004,
	1005, 0, 0, 1006, 0, 0, 0, 0, 0, 0,
	0, 0, 1018, 1019, 1020, 1021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1032, 971, 0, 0,
	791, 0, 1068, 1069, 1070, 1071, 1072, 1109, 738, 741,
	743, 829, 876, 877, 0, 0, 0, 0, 857, 1245,
	784, 785, 788, -2, 0, 0, 1111, 0, 0, 816,
	887, 817, 0, 796, 51, 832, 0, 1171, 1170, 1183,
	1196, 338, 339, 340, 1122, 0, 1127, 0, 1207, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	860, 0, 0, 863, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 90, 91,
	0, 0, 0, 104, 105, 0, 0, 111, 344, 345,
	144, 153, 413, 168, 393, 0, 0, 275, 336, 300,
	301, 0, 323, 0, 0, 0, 406, 116, 1136, 1135,
	359, 359, 350, 0, 353, 0, 0, 0, 1250, 326,
	382, 0, 134, 0, 0, 0, 0, 0, 140, 537,
	0, 0, 544, 0, 0, 0, 470, 0, 481, 482,
	0, 571, -2, 620, 347, 0, 361, 364, 842, 0,
	0, 483, 0, 466, 487, 488, 499, 448, 449, 446,
	0, 0, 1158, 1159, 1164, 1162, 1163, 121, 519, 521,
	520, 524, 0, 0, 517, 0, 403, 1132, 0, 628,
	404, 405, 692, 692, 748, 95, 0, 751, 0, 0,
	0, 0, 902, 906, 806, 0, 0, 325, 325, 1086,
	325, 329, 1089, 325, 1091, 325, 1094, 325, 1097, 1098,
	0, 0, 0, 0, 1101, 982, 1107, 0, 0, 0,
	0, 993, 0, 0, 0, 0, 0, 0, 132, 133,
	1035, 0, 0, 1037, 1039, 1040, 1010, 1036, 0, 0,
	1033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 972, 973, 0, 1110, 878, 883, 883, 883, 0,
	0, 0, 1232, 1233, 1112, 1113, 887, 1114, 818, 797,
	834, 1189, 0, 1182, 0, -2, 1191, 0, 0, 0,
	1197, 810, 78, 888, 81, 0, 1207, 1215, 0, 1198,
	1209, 1211, 0, 0, 0, 1203, 0, 887, 820, 849,
	851, 0, 846, 861, 862, 864, 0, 866, 0, 868,
	869, 831, 825, 827, 0, 0, 0, 98, 0, 887,
	887, 97, 0, 874, 108, 109, 110, 412, 172, 177,
	0, 0, 0, 182, 0, 184, 0, 394, 0, 272,
	274, 0, 0, 175, 337, 0, 337, 0, 330, 0,
	395, 407, 0, 1133, 1134, 0, 0, 352, 356, 357,
	358, 0, 1239, 136, 0, 0, 0, 540, 0, 568,
	0, 0, 0, 0, 0, 0, 164, 467, 600, 601,
	602, 603, 604, 605, 606, 607, 0, 359, 0, 0,
	0, 359, 359, 359, 612, 346, 0, 0, 596, 593,
	484, 0, 202, 203, 205, 0, 0, 486, 831, 1149,
	1150, 1151, 0, 1161, 1165, 124, 0, 0, 0, 0,
	625, 626, 627, 93, 635, 641, 750, 770, 895, 903,
	907, 0, 939, 1084, 337, 1087, 1088, 1090, 1092, 1093,
	1095, 1096, 940, 941, 0, 978, 0, 980, 1127, 0,
	1105, 0, 0, 992, 0, 0, 0, 1001, 1002, 1003,
	0, 0, 1009, 0, 1011, 0, 0, 0, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 974, 0,
	0, 0, 0, 855, -2, 62, 1114, 1116, 0, 1176,
	1174, 1174, 1184, 1185, 0, 0, 1192, 0, 0, 0,
	0, 82, 0, 0, 0, 1212, 0, 0, 0, 0,
	99, 1118, 843, 850, 0, 0, 844, 0, 845, 865,
	867, 824, -2, 828, 0, 887, 887, 88, 89, 0,
	178, 0, 180, 195, 196, 0, 183, 185, 186, 271,
	273, 0, 0, 313, 324, 314, 0, 0, 408, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 831, 137, 138, 139,
	532, 0, 542, 0, 0, 0, 535, 0, 473, 0,
	0, 0, 359, 359, 359, 0, 0, 0, 0, 573,
	0, 581, 0, 0, 0, 206, 207, 0, 1160, 518,
	0, 122, 123, 0, 0, 523, 1073, 1085, 0, 0,
	0, 1102, 0, 0, 0, 0, 999, 1007, 0, 1038,
	0, 1014, 0, 0, 0, 562, 563, 0, 1034, 0,
	884, 0, 0, 0, 0, 875, 1116, 80, 0, 0,
	1179, 0, 1172, 1175, 1173, 1186, 0, 0, 1193, 0,
	1195, 0, 1216, 1217, 1210, 0, 1202, 1205, 1201, 1204,
	1127, 847, 0, 852, 0, 1118, 87, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 331, 0, 0, 0, 533, 0,
	545, 536, 0, 610, 0, 614, 0, 0, 0, 617,
	618, 619, 387, 597, 594, 595, 485, 0, 125, 126,
	0, 0, 0, 0, 0, 0, 977, 979, 981, 990,
	991, 1082, 1083, 1008, 1012, 0, 1015, 0, 0, 1016,
	0, 564, 0, 880, 837, 838, 885, 886, 0, 0,
	830, 79, 1117, 1115, 1168, 0, 1177, 1178, 1187, 1188,
	1194, 0, 1200, 0, 85, 0, 0, 0, 1127, 179,
	0, 189, 0, 541, 0, 544, 534, 608, 609, 0,
	621, 613, 615, 616, 1152, 0, 0, 0, 525, 938,
	0, 0, 0, 1035, 1017, 0, 560, 561, 0, 879,
	881, 882, 1180, 1181, 1208, 1206, 848, 855, 0, 86,
	388, 393, 1152, 0, 0, 0, 515, 1154, 127, 128,
	459, 460, 461, 121, 1074, 0, 1077, 0, 839, 840,
	546, 0, 548, 0, -2, 389, 390, 0, 173, 190,
	191, 0, 0, 194, 187, 188, 117, 0, 0, 622,
	0, 1155, 1156, 124, 1075, 1013, 547, 0, 0, 343,
	0, 557, 391, 0, 392, 0, 0, 0, 192, 193,
	569, 0, 0, 522, 0, 549, 550, 558, 0, 396,
	398, 399, 0, 0, 397, 538, 0, 569, 1153, 0,
	0, 559, 555, 400, 401, 402, 570, 539, 1076, 0,
	551, 552, 553, 554,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 600,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:527
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:592
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:598
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:604
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:608
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:627
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:633
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:707
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:812
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:836
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:840
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:874
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:878
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:884
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:894
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:907
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:929
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:939
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:947
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:953
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:971
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:975
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1033
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1038
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1043
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1049
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1075
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1091
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1098
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1105
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1110
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1120
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1127
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1134
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1145
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1156
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1162
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1166
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1170
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1198
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1208
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1212
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1218
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1222
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1228
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1232
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1238
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1248
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1253
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1262
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1286
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1295
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1304
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1348
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1353
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1358
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1374
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1378
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1423
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1431
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1457
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1461
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1475
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1496
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1500
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1504
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1508
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1512
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Armscii8Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = ASCIIStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Big5Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = UBinaryStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Cp1250Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Cp1251Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Cp1256Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Cp1257Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = Cp850Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = Cp852Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Cp866Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Cp932Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Dec8Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = EucjpmsStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = EuckrStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Gb18030Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Gb2312Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = GbkStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Geostd8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = GreekStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = HebrewStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Hp8Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Keybcs2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Koi8rStr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Koi8uStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Latin1Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Latin2Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Latin5Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Latin7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = MacceStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = MacromanStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = SjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Swe7Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Tis620Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Ucs2Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = UjisStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = Utf16Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Utf16leStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Utf32Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Utf8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Utf8mb4Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1728
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1732
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1736
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1740
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1971
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1976
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1980
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1988
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1992
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1998
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2019
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2023
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2028
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2055
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2070
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2079
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2085
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2095
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2099
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2104
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2108
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2112
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2116
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2120
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2124
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2140
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2144
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2148
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2152
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2156
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.str = yyDollar[2].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = "key"
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = yyDollar[1].str
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2224
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2234
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2238
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2244
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2248
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2254
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2258
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2264
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2270
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2274
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2278
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2282
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2286
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2295
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2301
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2307
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2313
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2319
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2323
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2327
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2331
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2335
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2361
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2370
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2376
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2390
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2440
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2444
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2448
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2452
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2456
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2460
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2464
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2468
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2472
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2476
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2480
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2484
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2488
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2492
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2496
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2500
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2504
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2508
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2512
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2516
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2520
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2571
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2575
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2584
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2593
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2597
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2601
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2605
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 473:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2609
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2615
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2637
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2641
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2645
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2681
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2685
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2689
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2693
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2697
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2701
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2705
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2709
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2713
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2723
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2733
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2737
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2741
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2745
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2749
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2753
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2757
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2761
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2765
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2778
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2815
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2822
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2834
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2875
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2879
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2890
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2897
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2904
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2911
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2918
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2929
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2938
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2946
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2955
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2962
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2974
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2983
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2998
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3003
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3007
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3012
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3016
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3022
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3028
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3034
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3038
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3044
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3048
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3054
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3060
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3066
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3072
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3078
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3096
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3102
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3108
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3112
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3116
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3122
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3126
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3131
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3135
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3140
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3144
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3150
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3154
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3158
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3162
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3166
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3170
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3174
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3178
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3182
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3186
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3190
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3194
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3198
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3202
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3206
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3210
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3214
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3218
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3222
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3226
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3230
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3234
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3247
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3254
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3264
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3269
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3273
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3278
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3283
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3288
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3293
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3298
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3304
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3310
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3317
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3324
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3331
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3339
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3343
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3349
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3355
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3361
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3367
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3373
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3379
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3391
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = ""
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3407
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3413
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3417
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3436
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3440
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3461
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3465
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3469
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3473
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3485
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3489
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3493
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3497
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3501
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3505
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3509
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3513
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3517
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3521
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3525
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3529
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3533
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3537
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3541
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3545
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3549
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3553
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3593
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3617
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3636
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3640
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3644
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3648
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3652
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3656
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3660
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3666
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = "extended "
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3696
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3714
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3718
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3728
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3734
		{
			yyVAL.empty = struct{}{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3738
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3742
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3772
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3776
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3782
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3797
		{
			yyVAL.empty = struct{}{}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.empty = struct{}{}
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3802
		{
			yyVAL.empty = struct{}{}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.empty = struct{}{}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3820
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3824
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3828
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3832
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3836
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3840
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = yyDollar[1].str
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = yyDollar[1].str
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = yyDollar[1].str
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3877
		{
			yyVAL.str = ""
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3917
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3927
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3933
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3937
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3941
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3945
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4048
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4052
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			setAllowComments(yylex, true)
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4074
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4080
		{
			yyVAL.strs = nil
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4084
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4094
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4098
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4103
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = SQLCacheStr
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4124
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4134
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4155
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4174
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4179
		{
			yyVAL.strs = nil
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4187
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4195
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = SQLCacheStr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = DistinctStr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = DistinctStr
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = StraightJoinHint
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4231
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4235
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4241
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4245
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4249
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4253
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4278
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4282
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4288
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4294
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4308
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4312
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4316
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4320
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4326
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4330
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4336
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4340
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4349
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4355
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4359
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4365
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4375
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4379
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4393
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4410
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4414
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4418
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4422
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4428
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4430
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4434
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4440
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4442
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4445
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4450
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4458
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4471
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4475
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4479
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4485
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4491
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4495
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4499
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4503
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4509
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4513
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4523
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4543
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4552
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4558
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4562
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4568
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4572
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4576
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4580
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4585
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4589
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4593
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4597
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4614
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4618
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4622
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4626
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4630
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4634
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4638
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4691
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4703
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4717
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4721
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4725
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4729
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4737
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4783
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4803
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4811
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4815
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4819
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4823
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4843
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4865
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4869
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4873
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = ""
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4883
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4889
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4893
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4900
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4904
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4908
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4912
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4918
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4922
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4926
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4930
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4934
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4938
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4942
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4948
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4952
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4956
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4963
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4969
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5041
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5155
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5252
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5261
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5267
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5271
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5287
		{
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5289
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5293
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5297
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5301
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5305
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5309
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5313
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5317
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5321
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5325
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5329
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5335
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5339
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5343
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5347
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5351
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5355
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5359
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5363
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5367
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5422
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5426
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5430
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5434
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5438
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5444
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5452
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5462
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5466
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5472
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5476
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5480
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5484
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5488
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5494
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5498
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5502
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5506
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5510
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5514
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5518
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5522
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5526
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5530
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5545
		{
			yyVAL.str = string("")
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5549
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5555
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5559
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5565
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5580
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5584
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5588
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5607
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5617
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5631
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5635
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5641
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5647
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5651
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5657
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5662
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5666
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5670
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5679
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5685
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5689
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5693
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5702
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5706
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5710
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5714
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5721
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5725
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5729
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5733
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5739
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5743
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5747
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5752
		{
			yyVAL.str = ""
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5756
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5760
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5764
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = ""
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5779
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5783
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5788
		{
			yyVAL.str = ""
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5792
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5797
		{
			yyVAL.str = "cascaded"
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5801
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5814
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5820
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5826
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5832
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5850
		{
			yyVAL.str = ""
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5854
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5860
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5864
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5870
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5874
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5878
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5883
		{
			yyVAL.str = ""
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5887
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5891
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5896
		{
			yyVAL.str = ""
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5900
		{
			yyVAL.str = " header"
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5905
		{
			yyVAL.str = ""
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = " manifest on"
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5913
		{
			yyVAL.str = " manifest off"
		}
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5918
		{
			yyVAL.str = ""
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5922
		{
			yyVAL.str = " overwrite on"
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5926
		{
			yyVAL.str = " overwrite off"
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5932
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5937
		{
			yyVAL.str = ""
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5941
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5947
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5951
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5957
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5961
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5966
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5970
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5980
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5986
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5990
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5999
		{
			yyVAL.str = ""
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6003
		{
			yyVAL.str = " optionally"
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6016
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6020
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6024
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6028
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6032
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6038
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6042
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6046
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6050
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6059
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6065
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6069
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6075
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6079
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6085
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6100
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6104
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6110
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6116
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6120
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6126
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6130
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6134
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6138
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6142
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = "charset"
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6187
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6189
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6194
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6197
		{
			yyVAL.empty = struct{}{}
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6199
		{
			yyVAL.empty = struct{}{}
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6201
		{
			yyVAL.empty = struct{}{}
		}
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6205
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6214
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6221
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6225
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6231
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6235
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6242
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6248
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6252
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6258
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6269
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6783
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6792
		{
			decNesting(yylex)
		}
	case 1752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6797
		{
			skipToEnd(yylex)
		}
	case 1753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6802
		{
			skipToEnd(yylex)
		}
	case 1754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6806
		{
			skipToEnd(yylex)
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6810
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
