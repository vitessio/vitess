// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const UNDERSCORE_UTF8MB3 = 57541
const INTERVAL = 57542
const JSON_EXTRACT_OP = 57543
const JSON_UNQUOTE_EXTRACT_OP = 57544
const CREATE = 57545
const ALTER = 57546
const DROP = 57547
const RENAME = 57548
const ANALYZE = 57549
const ADD = 57550
const FLUSH = 57551
const CHANGE = 57552
const MODIFY = 57553
const DEALLOCATE = 57554
const REVERT = 57555
const SCHEMA = 57556
const TABLE = 57557
const INDEX = 57558
const VIEW = 57559
const TO = 57560
const IGNORE = 57561
const IF = 57562
const PRIMARY = 57563
const COLUMN = 57564
const SPATIAL = 57565
const FULLTEXT = 57566
const KEY_BLOCK_SIZE = 57567
const CHECK = 57568
const INDEXES = 57569
const ACTION = 57570
const CASCADE = 57571
const CONSTRAINT = 57572
const FOREIGN = 57573
const NO = 57574
const REFERENCES = 57575
const RESTRICT = 57576
const SHOW = 57577
const DESCRIBE = 57578
const EXPLAIN = 57579
const DATE = 57580
const ESCAPE = 57581
const REPAIR = 57582
const OPTIMIZE = 57583
const TRUNCATE = 57584
const COALESCE = 57585
const EXCHANGE = 57586
const REBUILD = 57587
const PARTITIONING = 57588
const REMOVE = 57589
const PREPARE = 57590
const EXECUTE = 57591
const MAXVALUE = 57592
const PARTITION = 57593
const REORGANIZE = 57594
const LESS = 57595
const THAN = 57596
const PROCEDURE = 57597
const TRIGGER = 57598
const VINDEX = 57599
const VINDEXES = 57600
const DIRECTORY = 57601
const NAME = 57602
const UPGRADE = 57603
const STATUS = 57604
const VARIABLES = 57605
const WARNINGS = 57606
const CASCADED = 57607
const DEFINER = 57608
const OPTION = 57609
const SQL = 57610
const UNDEFINED = 57611
const SEQUENCE = 57612
const MERGE = 57613
const TEMPORARY = 57614
const TEMPTABLE = 57615
const INVOKER = 57616
const SECURITY = 57617
const FIRST = 57618
const AFTER = 57619
const LAST = 57620
const VITESS_MIGRATION = 57621
const CANCEL = 57622
const RETRY = 57623
const COMPLETE = 57624
const CLEANUP = 57625
const THROTTLE = 57626
const UNTHROTTLE = 57627
const EXPIRE = 57628
const RATIO = 57629
const BEGIN = 57630
const START = 57631
const TRANSACTION = 57632
const COMMIT = 57633
const ROLLBACK = 57634
const SAVEPOINT = 57635
const RELEASE = 57636
const WORK = 57637
const BIT = 57638
const TINYINT = 57639
const SMALLINT = 57640
const MEDIUMINT = 57641
const INT = 57642
const INTEGER = 57643
const BIGINT = 57644
const INTNUM = 57645
const REAL = 57646
const DOUBLE = 57647
const FLOAT_TYPE = 57648
const DECIMAL_TYPE = 57649
const NUMERIC = 57650
const TIME = 57651
const TIMESTAMP = 57652
const DATETIME = 57653
const YEAR = 57654
const CHAR = 57655
const VARCHAR = 57656
const BOOL = 57657
const CHARACTER = 57658
const VARBINARY = 57659
const NCHAR = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const BLOB = 57665
const TINYBLOB = 57666
const MEDIUMBLOB = 57667
const LONGBLOB = 57668
const JSON = 57669
const JSON_SCHEMA_VALID = 57670
const JSON_SCHEMA_VALIDATION_REPORT = 57671
const ENUM = 57672
const GEOMETRY = 57673
const POINT = 57674
const LINESTRING = 57675
const POLYGON = 57676
const GEOMETRYCOLLECTION = 57677
const MULTIPOINT = 57678
const MULTILINESTRING = 57679
const MULTIPOLYGON = 57680
const ASCII = 57681
const UNICODE = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const CODE = 57689
const COLLATION = 57690
const COLUMNS = 57691
const DATABASES = 57692
const ENGINES = 57693
const EVENT = 57694
const EXTENDED = 57695
const FIELDS = 57696
const FULL = 57697
const FUNCTION = 57698
const GTID_EXECUTED = 57699
const KEYSPACES = 57700
const OPEN = 57701
const PLUGINS = 57702
const PRIVILEGES = 57703
const PROCESSLIST = 57704
const SCHEMAS = 57705
const TABLES = 57706
const TRIGGERS = 57707
const USER = 57708
const VGTID_EXECUTED = 57709
const VITESS_KEYSPACES = 57710
const VITESS_METADATA = 57711
const VITESS_MIGRATIONS = 57712
const VITESS_REPLICATION_STATUS = 57713
const VITESS_SHARDS = 57714
const VITESS_TABLETS = 57715
const VITESS_TARGET = 57716
const VSCHEMA = 57717
const VITESS_THROTTLED_APPS = 57718
const NAMES = 57719
const GLOBAL = 57720
const SESSION = 57721
const ISOLATION = 57722
const LEVEL = 57723
const READ = 57724
const WRITE = 57725
const ONLY = 57726
const REPEATABLE = 57727
const COMMITTED = 57728
const UNCOMMITTED = 57729
const SERIALIZABLE = 57730
const CURRENT_TIMESTAMP = 57731
const DATABASE = 57732
const CURRENT_DATE = 57733
const NOW = 57734
const CURRENT_TIME = 57735
const LOCALTIME = 57736
const LOCALTIMESTAMP = 57737
const CURRENT_USER = 57738
const UTC_DATE = 57739
const UTC_TIME = 57740
const UTC_TIMESTAMP = 57741
const DAY = 57742
const DAY_HOUR = 57743
const DAY_MICROSECOND = 57744
const DAY_MINUTE = 57745
const DAY_SECOND = 57746
const HOUR = 57747
const HOUR_MICROSECOND = 57748
const HOUR_MINUTE = 57749
const HOUR_SECOND = 57750
const MICROSECOND = 57751
const MINUTE = 57752
const MINUTE_MICROSECOND = 57753
const MINUTE_SECOND = 57754
const MONTH = 57755
const QUARTER = 57756
const SECOND = 57757
const SECOND_MICROSECOND = 57758
const YEAR_MONTH = 57759
const WEEK = 57760
const REPLACE = 57761
const CONVERT = 57762
const CAST = 57763
const SUBSTR = 57764
const SUBSTRING = 57765
const GROUP_CONCAT = 57766
const SEPARATOR = 57767
const TIMESTAMPADD = 57768
const TIMESTAMPDIFF = 57769
const WEIGHT_STRING = 57770
const LTRIM = 57771
const RTRIM = 57772
const TRIM = 57773
const JSON_ARRAY = 57774
const JSON_OBJECT = 57775
const JSON_QUOTE = 57776
const JSON_DEPTH = 57777
const JSON_TYPE = 57778
const JSON_LENGTH = 57779
const JSON_VALID = 57780
const JSON_ARRAY_APPEND = 57781
const JSON_ARRAY_INSERT = 57782
const JSON_INSERT = 57783
const JSON_MERGE = 57784
const JSON_MERGE_PATCH = 57785
const JSON_MERGE_PRESERVE = 57786
const JSON_REMOVE = 57787
const JSON_REPLACE = 57788
const JSON_SET = 57789
const JSON_UNQUOTE = 57790
const MATCH = 57791
const AGAINST = 57792
const BOOLEAN = 57793
const LANGUAGE = 57794
const WITH = 57795
const QUERY = 57796
const EXPANSION = 57797
const WITHOUT = 57798
const VALIDATION = 57799
const UNUSED = 57800
const ARRAY = 57801
const CUME_DIST = 57802
const DESCRIPTION = 57803
const DENSE_RANK = 57804
const EMPTY = 57805
const EXCEPT = 57806
const FIRST_VALUE = 57807
const GROUPING = 57808
const GROUPS = 57809
const JSON_TABLE = 57810
const LAG = 57811
const LAST_VALUE = 57812
const LATERAL = 57813
const LEAD = 57814
const NTH_VALUE = 57815
const NTILE = 57816
const OF = 57817
const OVER = 57818
const PERCENT_RANK = 57819
const RANK = 57820
const RECURSIVE = 57821
const ROW_NUMBER = 57822
const SYSTEM = 57823
const WINDOW = 57824
const ACTIVE = 57825
const ADMIN = 57826
const AUTOEXTEND_SIZE = 57827
const BUCKETS = 57828
const CLONE = 57829
const COLUMN_FORMAT = 57830
const COMPONENT = 57831
const DEFINITION = 57832
const ENFORCED = 57833
const ENGINE_ATTRIBUTE = 57834
const EXCLUDE = 57835
const FOLLOWING = 57836
const GEOMCOLLECTION = 57837
const GET_MASTER_PUBLIC_KEY = 57838
const HISTOGRAM = 57839
const HISTORY = 57840
const INACTIVE = 57841
const INVISIBLE = 57842
const LOCKED = 57843
const MASTER_COMPRESSION_ALGORITHMS = 57844
const MASTER_PUBLIC_KEY_PATH = 57845
const MASTER_TLS_CIPHERSUITES = 57846
const MASTER_ZSTD_COMPRESSION_LEVEL = 57847
const NESTED = 57848
const NETWORK_NAMESPACE = 57849
const NOWAIT = 57850
const NULLS = 57851
const OJ = 57852
const OLD = 57853
const OPTIONAL = 57854
const ORDINALITY = 57855
const ORGANIZATION = 57856
const OTHERS = 57857
const PARTIAL = 57858
const PATH = 57859
const PERSIST = 57860
const PERSIST_ONLY = 57861
const PRECEDING = 57862
const PRIVILEGE_CHECKS_USER = 57863
const PROCESS = 57864
const RANDOM = 57865
const REFERENCE = 57866
const REQUIRE_ROW_FORMAT = 57867
const RESOURCE = 57868
const RESPECT = 57869
const RESTART = 57870
const RETAIN = 57871
const REUSE = 57872
const ROLE = 57873
const SECONDARY = 57874
const SECONDARY_ENGINE = 57875
const SECONDARY_ENGINE_ATTRIBUTE = 57876
const SECONDARY_LOAD = 57877
const SECONDARY_UNLOAD = 57878
const SIMPLE = 57879
const SKIP = 57880
const SRID = 57881
const THREAD_PRIORITY = 57882
const TIES = 57883
const UNBOUNDED = 57884
const VCPU = 57885
const VISIBLE = 57886
const RETURNING = 57887
const FORMAT = 57888
const TREE = 57889
const VITESS = 57890
const TRADITIONAL = 57891
const LOCAL = 57892
const LOW_PRIORITY = 57893
const NO_WRITE_TO_BINLOG = 57894
const LOGS = 57895
const ERROR = 57896
const GENERAL = 57897
const HOSTS = 57898
const OPTIMIZER_COSTS = 57899
const USER_RESOURCES = 57900
const SLOW = 57901
const CHANNEL = 57902
const RELAY = 57903
const EXPORT = 57904
const AVG_ROW_LENGTH = 57905
const CONNECTION = 57906
const CHECKSUM = 57907
const DELAY_KEY_WRITE = 57908
const ENCRYPTION = 57909
const ENGINE = 57910
const INSERT_METHOD = 57911
const MAX_ROWS = 57912
const MIN_ROWS = 57913
const PACK_KEYS = 57914
const PASSWORD = 57915
const FIXED = 57916
const DYNAMIC = 57917
const COMPRESSED = 57918
const REDUNDANT = 57919
const COMPACT = 57920
const ROW_FORMAT = 57921
const STATS_AUTO_RECALC = 57922
const STATS_PERSISTENT = 57923
const STATS_SAMPLE_PAGES = 57924
const STORAGE = 57925
const MEMORY = 57926
const DISK = 57927
const PARTITIONS = 57928
const LINEAR = 57929
const RANGE = 57930
const LIST = 57931
const SUBPARTITION = 57932
const SUBPARTITIONS = 57933
const HASH = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	610, 145,
	-2, 153,
	-1, 48,
	132, 153,
	172, 153,
	333, 153,
	-2, 492,
	-1, 55,
	35, 731,
	233, 731,
	244, 731,
	279, 745,
	280, 745,
	-2, 733,
	-1, 60,
	235, 758,
	-2, 756,
	-1, 114,
	232, 1283,
	-2, 119,
	-1, 116,
	1, 146,
	610, 146,
	-2, 153,
	-1, 127,
	133, 378,
	238, 378,
	-2, 481,
	-1, 146,
	132, 153,
	172, 153,
	333, 153,
	-2, 501,
	-1, 694,
	217, 1304,
	-2, 1300,
	-1, 695,
	217, 1305,
	-2, 1301,
	-1, 770,
	59, 826,
	-2, 841,
	-1, 807,
	148, 1711,
	-2, 112,
	-1, 808,
	148, 1552,
	-2, 113,
	-1, 814,
	148, 1636,
	-2, 1277,
	-1, 962,
	148, 1480,
	-2, 1274,
	-1, 1003,
	243, 41,
	248, 41,
	-2, 389,
	-1, 1086,
	1, 546,
	610, 546,
	-2, 153,
	-1, 1323,
	59, 827,
	-2, 846,
	-1, 1324,
	59, 828,
	-2, 847,
	-1, 1377,
	132, 153,
	172, 153,
	333, 153,
	-2, 428,
	-1, 1456,
	133, 378,
	238, 378,
	-2, 481,
	-1, 1465,
	243, 42,
	248, 42,
	-2, 390,
	-1, 1773,
	217, 1309,
	-2, 1303,
	-1, 1856,
	132, 153,
	172, 153,
	333, 153,
	-2, 429,
	-1, 1863,
	25, 174,
	-2, 176,
	-1, 2110,
	87, 39,
	-2, 883,
	-1, 2162,
	77, 94,
	87, 94,
	-2, 903,
	-1, 2229,
	585, 658,
	-2, 632,
	-1, 2368,
	49, 1245,
	-2, 1239,
	-1, 2588,
	87, 39,
	-2, 884,
	-1, 2626,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 875,
	-1, 2906,
	585, 658,
	-2, 646,
	-1, 2964,
	22, 1638,
	32, 1638,
	173, 1638,
	255, 1638,
	313, 1638,
	314, 1638,
	315, 1638,
	316, 1638,
	317, 1638,
	318, 1638,
	319, 1638,
	321, 1638,
	322, 1638,
	323, 1638,
	324, 1638,
	325, 1638,
	326, 1638,
	327, 1638,
	328, 1638,
	329, 1638,
	330, 1638,
	331, 1638,
	332, 1638,
	334, 1638,
	336, 1638,
	337, 1638,
	338, 1638,
	339, 1638,
	340, 1638,
	341, 1638,
	342, 1638,
	343, 1638,
	344, 1638,
	347, 1638,
	348, 1638,
	349, 1638,
	350, 1638,
	351, 1638,
	352, 1638,
	353, 1638,
	354, 1638,
	355, 1638,
	468, 1638,
	-2, 590,
}

const yyPrivate = 57344

const yyLast = 44185

var yyAct = [...]int{
	694, 2729, 2730, 703, 2728, 3018, 3026, 2887, 2994, 2327,
	2995, 1853, 2703, 1380, 2515, 2946, 2962, 2421, 2428, 1807,
	1149, 2478, 2064, 1787, 696, 2840, 2483, 785, 2469, 2480,
	3, 2479, 2379, 2477, 2482, 2690, 2481, 2382, 616, 1789,
	2743, 687, 37, 2498, 1923, 2383, 2863, 2098, 763, 2436,
	688, 186, 1338, 2497, 186, 2380, 577, 186, 612, 2597,
	2591, 2748, 592, 1811, 186, 2289, 697, 1826, 2326, 96,
	685, 686, 186, 2325, 638, 2500, 2369, 2133, 2377, 609,
	1886, 2617, 2583, 2272, 2226, 2194, 1434, 186, 608, 2156,
	2520, 1911, 1891, 2195, 2125, 2196, 610, 786, 1954, 1842,
	155, 965, 36, 1831, 2145, 812, 38, 1325, 2100, 592,
	1302, 1011, 592, 186, 592, 2117, 1035, 1767, 1830, 767,
	1743, 771, 1673, 1631, 1683, 1932, 2264, 141, 1818, 809,
	1968, 1098, 1481, 1910, 1893, 95, 2188, 998, 1369, 788,
	2164, 1742, 993, 621, 1347, 1463, 765, 1580, 1833, 1234,
	91, 1305, 1695, 1650, 1170, 972, 1470, 1576, 969, 1908,
	1004, 1560, 973, 1882, 999, 1000, 1368, 1141, 777, 1352,
	1429, 1001, 1366, 1739, 1147, 799, 775, 76, 604, 1455,
	124, 1585, 772, 125, 1082, 159, 773, 119, 98, 117,
	118, 97, 1812, 599, 1237, 2896, 1241, 2219, 89, 3019,
	1925, 1926, 1927, 2217, 2691, 1127, 2466, 1925, 2248, 2247,
	85, 1966, 8, 1780, 581, 774, 77, 2683, 1545, 2280,
	7, 1171, 6, 2646, 2281, 2733, 2919, 793, 126, 798,
	2920, 1784, 1785, 120, 1638, 1637, 1636, 188, 189, 190,
	1015, 779, 1635, 1634, 1633, 1171, 1616, 1040, 548, 966,
	90, 602, 2733, 603, 991, 766, 1625, 2983, 2096, 600,
	1037, 2365, 2571, 2239, 1770, 3035, 1049, 2998, 764, 2127,
	2488, 2993, 3009, 1052, 1053, 1054, 2242, 1057, 1058, 1059,
	1060, 806, 102, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1014, 813, 120, 982, 989, 780, 988, 987, 787, 1332,
	2732, 977, 1956, 990, 1643, 2836, 2835, 2920, 2488, 1041,
	1043, 1044, 2696, 104, 105, 2697, 108, 1181, 2486, 114,
	1039, 2485, 183, 1038, 3034, 543, 78, 2732, 182, 80,
	2956, 78, 2010, 3022, 2915, 78, 3007, 2704, 2947, 1951,
	2492, 1181, 1055, 2955, 2288, 759, 760, 761, 762, 78,
	87, 770, 121, 2914, 143, 2967, 2553, 1444, 1085, 2136,
	120, 2097, 2972, 2256, 2220, 164, 2486, 2255, 2173, 2418,
	2419, 2172, 1848, 1849, 2174, 1370, 2970, 1371, 981, 801,
	802, 983, 2417, 2279, 2137, 2976, 2977, 2007, 2492, 1847,
	1786, 1117, 757, 2438, 2439, 756, 153, 2008, 2761, 1144,
	2971, 2888, 142, 1105, 87, 582, 1122, 1123, 1106, 87,
	1118, 1111, 986, 87, 1091, 1092, 1177, 2185, 2999, 1169,
	581, 1105, 2517, 161, 1725, 162, 1106, 87, 1866, 1865,
	1203, 2544, 2594, 2542, 1104, 590, 1103, 588, 2315, 3000,
	1177, 130, 131, 152, 151, 181, 1094, 581, 2521, 2489,
	1902, 2845, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212,
	1211, 1213, 1214, 1624, 594, 581, 1626, 1627, 1628, 2265,
	984, 1309, 2227, 1566, 1969, 1896, 986, 1081, 978, 1933,
	2251, 1974, 3021, 1561, 1138, 980, 979, 1056, 1980, 1977,
	1979, 1978, 1981, 1982, 1126, 1119, 1112, 2489, 2437, 1087,
	1986, 1124, 1987, 2267, 1988, 1143, 1535, 2518, 986, 1080,
	2440, 1125, 1717, 1706, 1707, 1708, 1709, 1719, 1710, 1711,
	1712, 1724, 1720, 1713, 1714, 1721, 1722, 1723, 1715, 1716,
	1718, 2510, 2984, 186, 984, 186, 1975, 2519, 186, 2511,
	1120, 1121, 147, 128, 154, 135, 127, 2685, 148, 149,
	1536, 1134, 1537, 1136, 165, 2684, 1973, 1989, 1062, 1061,
	1971, 2820, 87, 171, 136, 1024, 2681, 1022, 592, 1151,
	592, 592, 994, 1084, 1936, 1827, 995, 995, 139, 137,
	132, 133, 134, 138, 1033, 592, 592, 1312, 985, 2440,
	129, 1133, 1135, 1032, 1031, 2316, 1030, 1029, 1972, 140,
	1028, 1448, 1027, 1026, 1021, 1034, 182, 1215, 1176, 1173,
	1174, 1175, 1180, 1182, 1179, 1895, 1178, 1163, 3005, 3030,
	2008, 582, 1013, 1172, 3036, 970, 1215, 970, 37, 968,
	121, 1115, 1176, 1173, 1174, 1175, 1180, 1182, 1179, 1006,
	1178, 970, 1577, 164, 2221, 1469, 1007, 1172, 582, 2271,
	1006, 1909, 985, 800, 1042, 2268, 992, 2101, 2103, 1960,
	2895, 1573, 2218, 1157, 1045, 2459, 582, 2250, 2237, 1083,
	1955, 1101, 1442, 1107, 1108, 1109, 1110, 1567, 2680, 1013,
	156, 1568, 1569, 1051, 985, 1441, 2178, 2253, 1131, 1813,
	1814, 2284, 1132, 1440, 1574, 1438, 1145, 1146, 547, 542,
	1565, 161, 1137, 162, 1218, 1219, 1220, 1221, 1152, 1025,
	2022, 1023, 2263, 2884, 1226, 2262, 1229, 2595, 1216, 1217,
	2633, 1012, 2613, 181, 1953, 2169, 1130, 1006, 1009, 1010,
	2132, 970, 1295, 2088, 1779, 1003, 1007, 1300, 1356, 2241,
	1281, 1096, 116, 2901, 1153, 1154, 1854, 186, 2913, 1013,
	1468, 592, 592, 1215, 81, 2731, 1002, 1222, 150, 1214,
	782, 1013, 2416, 2846, 1139, 111, 1142, 186, 1547, 1546,
	1548, 1549, 1550, 2644, 2645, 1696, 2909, 2975, 1012, 2274,
	2009, 1313, 2731, 2240, 2273, 1128, 592, 1100, 86, 1586,
	186, 144, 1013, 86, 145, 592, 1315, 86, 1301, 1166,
	1319, 592, 77, 2490, 2491, 1316, 767, 1164, 2274, 1165,
	1102, 86, 1187, 2273, 1036, 809, 2494, 1013, 2676, 2102,
	2607, 2974, 1239, 157, 1240, 1970, 765, 1318, 1243, 1114,
	169, 2308, 165, 3028, 1570, 112, 3029, 1093, 3027, 1372,
	1116, 171, 1167, 1899, 1562, 1090, 1563, 2210, 1012, 1564,
	1186, 2490, 2491, 1016, 1006, 1317, 1187, 2757, 1018, 95,
	1012, 1301, 1019, 1017, 2494, 2651, 1006, 1009, 1010, 1696,
	970, 2036, 177, 1187, 1003, 1007, 1287, 1288, 1289, 1290,
	1291, 2650, 1900, 1020, 1209, 1210, 1212, 1211, 1213, 1214,
	1898, 1012, 1950, 1050, 1940, 1306, 1185, 1186, 1478, 1477,
	1467, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 98, 1948, 1952, 1945, 1012, 176, 178, 179,
	180, 1016, 1006, 1024, 1901, 1945, 1018, 1086, 1099, 1129,
	1019, 1017, 2925, 1587, 1897, 1655, 1645, 1647, 1648, 1303,
	3003, 3001, 766, 1337, 1184, 1022, 1185, 1186, 764, 1656,
	1657, 1654, 1949, 2310, 1357, 186, 2856, 1332, 156, 1430,
	1646, 2634, 1947, 3032, 2514, 1314, 2828, 1362, 1363, 1439,
	3037, 2710, 1187, 2711, 1367, 2926, 1334, 1205, 1206, 1207,
	1208, 1209, 1210, 1212, 1211, 1213, 1214, 813, 1184, 2827,
	1185, 1186, 592, 1555, 1465, 1819, 1820, 1187, 2877, 2014,
	2015, 2016, 1474, 1187, 87, 1184, 1476, 1185, 1186, 1479,
	1480, 592, 592, 2032, 592, 2550, 592, 592, 1653, 592,
	592, 592, 592, 592, 592, 1207, 1208, 1209, 1210, 1212,
	1211, 1213, 1214, 1511, 3002, 592, 1203, 2818, 2283, 186,
	1516, 2878, 1320, 1475, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1212, 1211, 1213, 1214, 3038, 186, 1554, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1212, 1211, 1213, 1214, 592,
	1510, 186, 1512, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1189, 1332, 1575, 804, 2721, 592, 2031, 186, 1156, 1187,
	708, 709, 710, 1461, 1553, 1530, 2720, 1445, 1446, 1447,
	2658, 157, 1332, 186, 1184, 2657, 1185, 1186, 169, 1700,
	186, 1471, 1471, 1701, 1542, 1454, 1187, 2647, 2467, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 592, 1184,
	2455, 1185, 1186, 2192, 2191, 1184, 1513, 1185, 1186, 1905,
	1556, 1540, 592, 592, 1483, 1539, 1484, 1473, 1486, 1488,
	177, 1437, 1492, 1494, 1496, 1498, 1500, 1472, 1552, 1187,
	186, 1538, 1520, 1521, 1464, 1528, 1451, 1452, 1526, 1527,
	1450, 1522, 2548, 1332, 1519, 1518, 1517, 1187, 1541, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	1490, 1187, 1582, 2904, 1345, 176, 178, 179, 180, 2073,
	1332, 2903, 2881, 1187, 2880, 1332, 592, 1187, 1341, 2879,
	1680, 1680, 2045, 2053, 2823, 2808, 1677, 1681, 2807, 1686,
	592, 1184, 2756, 1185, 1186, 188, 189, 190, 1514, 2641,
	2754, 1678, 1678, 1590, 2717, 592, 592, 2655, 2640, 1651,
	1594, 1578, 1596, 1597, 1598, 1599, 2522, 2458, 1184, 1603,
	1185, 1186, 188, 189, 190, 1443, 2176, 2457, 1342, 2201,
	1344, 1615, 120, 2189, 989, 1697, 988, 987, 1297, 1649,
	1658, 1964, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1592, 1963, 1332, 1659, 1810,
	2065, 1184, 1771, 1185, 1186, 1187, 1614, 1792, 186, 1588,
	1589, 1617, 1613, 592, 188, 189, 190, 1583, 695, 1184,
	1551, 1185, 1186, 1593, 1543, 1533, 1621, 1622, 1529, 1525,
	1600, 1601, 1602, 1184, 1524, 1185, 1186, 186, 1523, 1343,
	592, 1140, 1652, 2853, 1797, 1184, 1798, 1185, 1186, 1184,
	186, 1185, 1186, 2852, 592, 2606, 188, 189, 190, 186,
	1921, 186, 92, 186, 186, 592, 2812, 1740, 592, 187,
	101, 2811, 187, 93, 2702, 187, 1187, 1771, 2228, 592,
	593, 100, 187, 99, 1203, 809, 2021, 1773, 809, 2892,
	187, 94, 1863, 188, 189, 190, 2206, 1919, 95, 1187,
	1862, 1775, 1776, 2608, 1187, 187, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1212, 1211, 1213, 1214, 95, 2980, 1740,
	188, 189, 190, 1946, 1917, 2025, 2165, 593, 1332, 1772,
	593, 187, 593, 1803, 592, 1187, 1183, 1184, 2908, 1185,
	1186, 1912, 1913, 1914, 2123, 3020, 1916, 1918, 1920, 2027,
	1332, 1332, 1829, 2989, 1332, 1872, 1873, 1874, 1875, 2026,
	2123, 592, 1773, 1187, 2123, 2953, 100, 592, 1474, 2119,
	1187, 1474, 1867, 1474, 1868, 1869, 1870, 1871, 1857, 1944,
	1858, 1945, 1791, 1332, 94, 779, 2134, 1840, 1682, 2166,
	1878, 1879, 1880, 1881, 2142, 1688, 1689, 2411, 2290, 2168,
	1187, 2123, 2933, 2378, 1824, 1805, 1934, 2008, 1184, 1888,
	1185, 1186, 2567, 592, 2606, 592, 1861, 2123, 2929, 2816,
	2446, 592, 592, 1822, 1894, 2921, 1332, 1187, 2123, 2897,
	2353, 1184, 1845, 1185, 1186, 2023, 1184, 1844, 1185, 1186,
	1846, 92, 2023, 1860, 1859, 1187, 2628, 1774, 94, 2134,
	1777, 1778, 93, 2936, 2677, 2694, 2894, 813, 2142, 186,
	813, 2023, 1931, 1904, 2567, 1332, 186, 1184, 2058, 1185,
	1186, 1015, 2141, 186, 186, 2831, 1332, 186, 2042, 186,
	2292, 1471, 2041, 2569, 2123, 2819, 186, 1802, 1889, 1884,
	1885, 1945, 1187, 186, 1928, 1184, 1903, 1185, 1186, 1907,
	2694, 1332, 1184, 1915, 1185, 1186, 87, 1332, 2123, 2692,
	2565, 1945, 1332, 1939, 1957, 2165, 1942, 1817, 1943, 186,
	1187, 2606, 1938, 1889, 592, 1937, 1941, 2142, 2556, 2611,
	1332, 1014, 1184, 1336, 1185, 1186, 1187, 1959, 1782, 1958,
	1187, 101, 1629, 1961, 1962, 1187, 2302, 2301, 2300, 2294,
	1572, 2298, 100, 2293, 99, 2291, 1183, 1332, 1187, 1184,
	2296, 1185, 1186, 94, 2058, 1332, 2448, 2447, 1364, 2295,
	1203, 2444, 2445, 1199, 997, 1200, 2193, 1184, 2166, 1185,
	1186, 996, 1967, 2842, 1203, 1339, 2297, 2299, 2008, 1201,
	1202, 1198, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212,
	1211, 1213, 1214, 2555, 769, 1651, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1212, 1211, 1213, 1214, 2809, 1187, 2082,
	1999, 2000, 1332, 2081, 1184, 2002, 1185, 1186, 2080, 2444,
	2443, 2768, 1992, 2675, 2003, 2018, 2659, 2020, 1187, 2142,
	1332, 2079, 2023, 1332, 1187, 2008, 2249, 1433, 2231, 1187,
	2224, 2225, 1184, 2019, 1185, 1186, 1187, 2123, 2122, 1506,
	1187, 1433, 1432, 1378, 1377, 2672, 2653, 2559, 1184, 2558,
	1185, 1186, 1184, 1187, 1185, 1186, 1435, 1184, 1887, 1185,
	1186, 2512, 87, 186, 2006, 2472, 1187, 2660, 2661, 2662,
	1184, 186, 1185, 1186, 2468, 2232, 592, 1680, 1652, 1883,
	2094, 2078, 592, 2107, 1877, 1876, 1558, 1466, 2017, 1462,
	1507, 1508, 1509, 592, 2197, 2111, 1431, 113, 1678, 2470,
	2198, 2077, 1085, 2618, 2619, 2516, 2843, 2076, 1902, 3015,
	2105, 1795, 2075, 3013, 1187, 1619, 186, 2996, 2918, 2074,
	186, 2861, 2621, 2068, 2464, 1187, 2463, 2035, 2462, 2378,
	1184, 2211, 1185, 1186, 1993, 2175, 2067, 2138, 2624, 2400,
	2623, 187, 2198, 187, 2401, 1187, 187, 2397, 37, 2066,
	1184, 1187, 1185, 1186, 2124, 2663, 1184, 2158, 1185, 1186,
	2396, 1184, 2051, 1185, 1186, 1773, 2986, 1187, 1184, 2954,
	1185, 1186, 1184, 1809, 1185, 1186, 593, 1620, 593, 593,
	1340, 2398, 2738, 592, 2737, 1184, 2399, 1185, 1186, 186,
	1801, 2120, 2612, 593, 593, 2358, 186, 2063, 1184, 1187,
	1185, 1186, 2664, 2665, 2666, 2357, 2876, 1772, 2062, 2747,
	592, 1306, 2186, 2187, 2095, 2370, 2372, 592, 2157, 1502,
	2602, 1474, 1474, 2599, 2373, 2749, 592, 783, 2061, 2223,
	2121, 2598, 2736, 2116, 2059, 784, 2033, 2179, 2367, 2442,
	1571, 2246, 2131, 2163, 755, 2183, 1184, 2202, 1185, 1186,
	2055, 2245, 186, 186, 186, 186, 186, 1184, 1047, 1185,
	1186, 1692, 2167, 1046, 1894, 2170, 1503, 1504, 1505, 2402,
	92, 2151, 2152, 186, 186, 1693, 2180, 1184, 2177, 1185,
	1186, 93, 2054, 1184, 92, 1185, 1186, 2530, 2197, 186,
	2277, 94, 2200, 1155, 2190, 93, 2238, 2203, 2204, 1184,
	121, 1185, 1186, 2604, 1819, 1820, 2893, 2199, 592, 94,
	3024, 2460, 1996, 2085, 2086, 2207, 2838, 2441, 2208, 2155,
	1806, 791, 792, 2244, 2356, 1985, 2212, 2213, 2214, 1984,
	1983, 1184, 2355, 1185, 1186, 2584, 1454, 2147, 2150, 2151,
	2152, 2148, 2012, 2149, 2153, 101, 99, 1680, 2868, 1680,
	2867, 2755, 1680, 2753, 2752, 187, 100, 1680, 99, 593,
	593, 2745, 2307, 2243, 2673, 2603, 2233, 2234, 1678, 592,
	1678, 2601, 2303, 1678, 2473, 187, 1929, 1449, 1678, 790,
	100, 2744, 2328, 765, 2328, 592, 101, 2328, 2592, 2347,
	2285, 2266, 2328, 2134, 593, 2119, 2269, 100, 187, 2286,
	186, 3017, 3016, 593, 592, 2317, 2043, 1793, 1358, 593,
	1349, 106, 107, 592, 3016, 3017, 2882, 2333, 2639, 2330,
	592, 592, 2334, 186, 186, 186, 186, 186, 2287, 781,
	2304, 101, 103, 2347, 88, 186, 1330, 1326, 1, 2643,
	186, 2375, 100, 186, 99, 186, 2969, 560, 186, 186,
	186, 1327, 1783, 94, 2390, 2381, 1304, 2997, 2965, 2321,
	2381, 771, 2966, 1544, 1534, 2705, 2410, 1741, 2384, 2839,
	2340, 2341, 2342, 2343, 2476, 2360, 1799, 1800, 1329, 1935,
	1328, 1319, 2158, 2456, 2275, 2346, 2671, 2276, 2348, 2361,
	1892, 1005, 186, 2349, 2350, 2351, 2335, 2336, 2337, 2338,
	2339, 146, 1855, 1856, 2949, 592, 110, 963, 2362, 109,
	1008, 1113, 2359, 592, 1930, 2695, 2184, 2352, 186, 1864,
	1384, 1382, 772, 1383, 1330, 1326, 773, 2392, 2393, 1381,
	2395, 186, 2496, 1386, 2412, 1385, 95, 2413, 2403, 1327,
	2044, 2391, 2407, 2408, 2394, 2570, 2475, 1623, 2414, 186,
	589, 2154, 186, 2389, 184, 1582, 1373, 1350, 1048, 2420,
	550, 2449, 2531, 187, 1323, 1324, 1329, 1965, 1328, 556,
	2452, 2451, 2450, 2147, 2150, 2151, 2152, 2148, 1227, 2149,
	2153, 1618, 2354, 2618, 2619, 2171, 810, 803, 1794, 2109,
	2504, 2503, 2386, 2596, 2453, 2454, 2366, 2368, 2126, 2371,
	593, 2364, 2875, 1894, 2495, 2746, 2474, 2934, 2507, 2181,
	1346, 2034, 1694, 1834, 1644, 614, 613, 611, 2112, 593,
	593, 2135, 593, 1190, 593, 593, 2564, 593, 593, 593,
	593, 593, 593, 2525, 592, 186, 2526, 2523, 698, 2099,
	1359, 2146, 2144, 593, 2143, 1994, 1841, 187, 2620, 2616,
	2961, 1836, 2533, 1832, 2118, 2540, 622, 2537, 2538, 615,
	2539, 2534, 607, 2541, 187, 2543, 2636, 2545, 2502, 2252,
	2513, 2254, 2182, 2509, 1168, 1322, 601, 593, 976, 187,
	1691, 2844, 2899, 2011, 2552, 1321, 1704, 2528, 2529, 1705,
	2906, 2484, 186, 593, 2689, 187, 2465, 2229, 1922, 63,
	41, 1732, 596, 2982, 1159, 797, 32, 31, 30, 29,
	2642, 187, 28, 2585, 2586, 23, 22, 2590, 187, 21,
	20, 186, 19, 25, 18, 2600, 17, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 593, 2625, 2605, 2593,
	186, 16, 2487, 186, 186, 186, 2992, 1331, 2615, 3023,
	593, 593, 115, 592, 592, 678, 2622, 50, 2629, 47,
	45, 123, 122, 48, 44, 1088, 42, 27, 187, 26,
	2631, 2632, 2678, 2679, 15, 2504, 2503, 14, 13, 2637,
	2638, 2630, 12, 11, 10, 9, 5, 2654, 4, 2656,
	35, 34, 33, 1162, 24, 2, 2216, 592, 592, 592,
	592, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 2648, 2649, 0, 0, 0, 0, 0, 0, 0,
	0, 2701, 0, 593, 593, 0, 0, 0, 0, 1680,
	0, 1680, 2699, 2700, 0, 0, 0, 0, 0, 0,
	2716, 0, 0, 0, 811, 0, 0, 967, 186, 974,
	1678, 0, 1678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2713, 2682, 2328, 0, 2328, 2686, 2687, 2688,
	0, 2741, 592, 0, 592, 2712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 593, 1680, 0, 0, 0, 2725, 2734, 2770, 2724,
	0, 2762, 0, 0, 0, 2381, 0, 0, 0, 0,
	2764, 2742, 37, 1678, 2760, 187, 2751, 2750, 593, 2384,
	0, 0, 2758, 2384, 2766, 0, 0, 0, 187, 0,
	0, 0, 593, 0, 0, 0, 592, 187, 0, 187,
	0, 187, 187, 593, 0, 765, 593, 0, 0, 186,
	0, 0, 592, 0, 0, 2817, 0, 593, 2774, 0,
	0, 0, 0, 0, 0, 592, 0, 2771, 2772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2815, 0,
	2813, 0, 0, 0, 0, 2841, 2814, 0, 2829, 0,
	2858, 2859, 2821, 0, 0, 0, 592, 1680, 2834, 0,
	592, 592, 2833, 2862, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 0, 0, 0, 1678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	0, 182, 0, 2872, 0, 593, 2869, 2870, 2886, 2871,
	0, 0, 0, 0, 2885, 0, 0, 0, 0, 2883,
	2824, 2825, 2826, 0, 0, 121, 0, 0, 0, 0,
	592, 0, 2384, 0, 0, 0, 0, 0, 164, 0,
	2889, 0, 0, 0, 0, 186, 0, 0, 0, 2891,
	0, 593, 0, 593, 0, 0, 0, 0, 0, 593,
	593, 765, 0, 592, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2874, 0, 0, 0,
	0, 0, 2910, 0, 2902, 0, 0, 2905, 0, 2907,
	0, 2898, 0, 0, 0, 0, 161, 187, 162, 0,
	37, 0, 0, 0, 187, 592, 0, 0, 0, 0,
	0, 187, 187, 0, 0, 187, 0, 187, 181, 0,
	0, 0, 0, 0, 187, 188, 189, 190, 0, 592,
	592, 187, 0, 0, 0, 2927, 0, 2932, 0, 0,
	0, 2381, 592, 0, 2935, 2937, 0, 0, 2940, 2841,
	2950, 186, 592, 2945, 2948, 37, 2942, 187, 2941, 2957,
	2939, 2944, 593, 2943, 0, 0, 0, 0, 581, 0,
	0, 2978, 2968, 2973, 2960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2985, 0,
	0, 0, 0, 0, 0, 0, 0, 2991, 0, 0,
	0, 592, 0, 0, 0, 0, 0, 0, 0, 578,
	592, 0, 0, 0, 0, 0, 1680, 0, 3006, 0,
	3004, 0, 3011, 3010, 3014, 3012, 3008, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 1678, 0, 3025,
	0, 0, 0, 0, 3031, 0, 3033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 2424, 0, 1680,
	0, 3041, 3042, 2859, 3040, 3039, 0, 0, 562, 0,
	0, 0, 0, 811, 0, 811, 811, 0, 0, 0,
	1678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2425, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 2427, 187,
	0, 0, 569, 0, 593, 0, 0, 0, 0, 0,
	593, 0, 2422, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 156, 0, 0, 0, 0, 0, 2438,
	2439, 0, 0, 0, 0, 0, 2423, 0, 0, 582,
	0, 0, 0, 0, 187, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2429, 1298,
	0, 549, 0, 551, 565, 0, 584, 0, 583, 555,
	0, 553, 557, 566, 558, 0, 552, 0, 563, 0,
	0, 554, 567, 568, 571, 574, 575, 576, 572, 570,
	0, 561, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 187, 0, 1310, 1311, 0, 0,
	1333, 1335, 0, 0, 2437, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 0, 593, 2440, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 0, 0, 0,
	0, 1354, 0, 0, 0, 0, 157, 0, 0, 0,
	811, 0, 0, 169, 0, 0, 1374, 0, 0, 0,
	187, 187, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 0,
	0, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 2426, 0, 0, 0, 0,
	176, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 0, 593, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 0, 593, 593,
	0, 187, 187, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 967, 187, 0,
	0, 187, 0, 187, 0, 0, 187, 187, 187, 0,
	1298, 0, 0, 0, 0, 0, 1482, 1482, 0, 1482,
	0, 1482, 1482, 0, 1491, 1482, 1482, 1482, 1482, 1482,
	0, 2430, 0, 0, 0, 2434, 0, 1298, 0, 1298,
	967, 0, 0, 2433, 0, 0, 0, 0, 0, 182,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2222, 0, 0, 593, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 121, 1557, 143, 187, 2435, 0, 0,
	0, 0, 2431, 0, 0, 0, 164, 2432, 0, 187,
	1579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 162, 811, 811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1457, 1458, 152, 151, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1687, 1698, 0, 0, 0,
	1699, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	1702, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 1459, 154, 0, 1456, 0, 148,
	149, 0, 0, 0, 0, 165, 0, 811, 0, 187,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 1333,
	1781, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 187, 187, 187, 0, 0, 0, 0, 1796, 0,
	0, 593, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 811, 0, 0, 593, 593, 593, 593, 0,
	811, 0, 0, 811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1453, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 1906, 0, 187, 0, 0, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 0, 593, 153, 0, 0, 967, 0, 0, 142,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	161, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1457, 1458,
	152, 151, 181, 0, 0, 0, 0, 0, 967, 0,
	1674, 0, 144, 0, 593, 145, 1674, 1674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 157, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 0, 593, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 147,
	1459, 154, 0, 1456, 0, 148, 149, 593, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 2005,
	171, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 2028, 0, 2029, 2030, 0, 0,
	0, 593, 187, 0, 0, 2038, 0, 2990, 2039, 2040,
	0, 0, 0, 0, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 2047, 2048, 2049, 2050,
	0, 2052, 0, 593, 0, 0, 0, 2056, 0, 2057,
	679, 0, 0, 2060, 0, 0, 0, 156, 0, 0,
	0, 2069, 2070, 2071, 2072, 0, 0, 593, 593, 0,
	0, 0, 0, 0, 2083, 2084, 0, 0, 0, 0,
	593, 0, 2089, 2090, 2091, 2092, 2093, 0, 1804, 187,
	593, 0, 0, 0, 0, 811, 0, 0, 0, 2106,
	0, 185, 0, 0, 546, 0, 0, 587, 0, 0,
	0, 1808, 0, 0, 546, 0, 0, 2113, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 0, 2128, 0,
	0, 0, 0, 0, 0, 150, 0, 778, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 0, 0, 796, 0, 796, 0, 0, 1389, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 144, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2205, 2776,
	2778, 2777, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 644,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	1402, 0, 0, 595, 0, 1808, 0, 0, 0, 177,
	0, 758, 2230, 0, 0, 0, 0, 0, 0, 0,
	0, 2235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 971, 0, 176, 178, 179, 180, 1415, 1418,
	1419, 1420, 1421, 1422, 1423, 0, 1424, 1425, 1426, 1427,
	1428, 1403, 1404, 1405, 1406, 1387, 1388, 1416, 0, 1390,
	0, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1389, 0, 1400, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	0, 0, 2314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2329, 0, 0, 0, 0, 0, 0, 1298,
	0, 1298, 0, 0, 1298, 0, 0, 0, 0, 1298,
	0, 0, 0, 2344, 2345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 811, 0, 0, 0, 0, 0,
	0, 0, 1402, 0, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2363,
	0, 0, 0, 0, 0, 0, 0, 2387, 811, 0,
	0, 0, 1298, 1417, 0, 2388, 1482, 1298, 0, 2782,
	2783, 0, 0, 0, 2405, 2406, 0, 0, 0, 0,
	1415, 1418, 1419, 1420, 1421, 1422, 1423, 0, 1424, 1425,
	1426, 1427, 1428, 1403, 1404, 1405, 1406, 1387, 1388, 1416,
	0, 1390, 0, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 0, 0, 1400, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 0, 0, 0, 0, 0, 0, 0,
	689, 0, 639, 693, 641, 690, 691, 0, 637, 640,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 0, 0, 1298, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 643, 2775,
	2779, 2780, 2781, 2784, 2785, 2786, 2794, 2796, 667, 2795,
	2797, 2798, 2799, 2802, 2803, 2804, 2805, 2800, 2801, 2806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2532, 0, 0, 546, 0, 546, 0, 2536, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2546, 2547, 2549, 2551, 0, 0, 0, 0, 0,
	0, 2557, 0, 0, 0, 1417, 2561, 2562, 2563, 0,
	0, 0, 0, 2566, 0, 0, 0, 0, 0, 2568,
	0, 0, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 0, 0, 2582, 0, 0, 0, 0, 0,
	2587, 0, 0, 0, 0, 0, 0, 0, 0, 2363,
	0, 0, 0, 0, 0, 78, 39, 40, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2609, 2610, 84, 0, 2614, 0, 43,
	69, 70, 0, 67, 71, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 2626, 2627, 0, 0, 0,
	0, 0, 1089, 0, 1095, 0, 0, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 1808,
	0, 0, 0, 0, 0, 0, 705, 79, 0, 0,
	0, 0, 0, 0, 0, 2693, 0, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 0, 2706, 2707, 2708, 2709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2722, 0,
	0, 0, 2723, 0, 768, 0, 79, 0, 2727, 0,
	0, 1298, 0, 1298, 0, 0, 0, 46, 49, 52,
	51, 54, 0, 66, 768, 0, 75, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	83, 82, 1298, 0, 64, 65, 53, 2763, 0, 2765,
	0, 0, 73, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 58, 0, 59, 60, 61, 62, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 2830, 0, 0,
	0, 0, 0, 0, 0, 0, 2837, 2832, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	811, 0, 2847, 2848, 2849, 0, 2850, 2851, 0, 0,
	0, 0, 2854, 0, 2855, 0, 2857, 2860, 0, 0,
	0, 0, 0, 2864, 0, 0, 0, 0, 0, 0,
	0, 2865, 0, 0, 0, 2865, 2865, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2890, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 1299, 0, 0, 0, 0, 546,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 0, 0, 0, 1379, 0, 0, 1581, 0, 0,
	0, 0, 2912, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 546, 0, 0, 2917, 0, 0, 0,
	546, 2922, 0, 0, 0, 0, 0, 2923, 2924, 1604,
	1605, 546, 546, 546, 546, 546, 546, 546, 0, 0,
	0, 0, 0, 0, 0, 2930, 0, 0, 1298, 0,
	2928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 811, 811, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 2958, 0, 0,
	0, 0, 0, 0, 0, 0, 2981, 2963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1559, 0, 0, 0, 0, 2987, 0, 0, 0, 2988,
	0, 0, 0, 0, 796, 0, 0, 0, 0, 0,
	0, 796, 796, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 1591, 0, 0, 0, 1808, 0, 0, 1595,
	0, 0, 0, 0, 0, 2963, 0, 0, 0, 0,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 796, 1581, 796, 796, 796, 796, 796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 796, 1148, 0, 1148, 1148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 0, 0, 1581, 0, 546,
	0, 546, 0, 546, 1843, 0, 0, 0, 0, 0,
	768, 1223, 1224, 1225, 0, 1228, 0, 1230, 1231, 1232,
	1233, 0, 1236, 1238, 1238, 0, 1238, 1242, 1242, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 0, 1282, 1283, 1284,
	1285, 1286, 0, 0, 0, 0, 1242, 1242, 1242, 1242,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	1828, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 768, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 699, 706,
	707, 708, 709, 710, 700, 702, 0, 0, 0, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 704, 711, 712, 0, 546, 0, 0, 0,
	0, 0, 0, 546, 546, 0, 0, 546, 0, 1997,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2505, 2506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 795, 1632, 0,
	0, 0, 796, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 1990, 1991, 0, 0, 1995, 0, 2108, 0,
	0, 706, 707, 0, 0, 1998, 0, 1679, 0, 0,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 796,
	796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1581, 0, 0, 546, 0, 0, 0, 789, 0, 0,
	0, 1531, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 0, 0, 546, 87, 0, 0,
	546, 0, 0, 699, 706, 707, 708, 709, 710, 700,
	702, 0, 689, 0, 701, 693, 0, 690, 691, 0,
	0, 0, 692, 0, 0, 0, 0, 704, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1148, 1148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 2505, 2506, 0, 2215, 0, 0, 0,
	0, 0, 0, 0, 0, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 0, 0, 2162,
	0, 0, 546, 546, 546, 546, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 0, 1299, 0, 0, 1299,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2257, 2258, 2259, 2260, 2261, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 1632, 2270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 2278, 0,
	0, 0, 1299, 546, 546, 546, 546, 546, 0, 0,
	0, 0, 0, 0, 0, 2404, 0, 0, 0, 0,
	546, 0, 0, 1531, 0, 546, 0, 0, 546, 2415,
	1581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 0, 0, 605, 0, 0, 0, 0, 2524, 0,
	0, 2527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 546, 546, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 2589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 707, 0,
	0, 0, 0, 1679, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 1299, 0,
	2652, 0, 0, 2139, 2140, 0, 0, 0, 0, 0,
	0, 0, 2159, 0, 2160, 2161, 0, 0, 1531, 2667,
	0, 0, 2668, 2669, 2670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 0, 0, 2236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 1639, 1640, 1641, 1642, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 2385, 0, 79, 0, 0, 1835,
	1835, 1835, 1835, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2159, 768, 0, 0,
	0, 1835, 1684, 1685, 1835, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 1726, 1727, 1728, 1729, 1730,
	1731, 1733, 1737, 1738, 605, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 2911, 0, 0, 2493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1816, 0, 2535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2735, 0, 2739, 2740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2385, 0, 79, 0, 2385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 2822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 2385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2900, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2931, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2305,
	2306, 0, 0, 0, 2309, 0, 0, 0, 0, 2311,
	2312, 2313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2318, 2319, 2320, 0, 0, 1744, 2322, 0, 2323,
	2324, 0, 0, 0, 2331, 2332, 0, 0, 0, 0,
	0, 0, 1744, 1744, 1744, 1744, 1744, 605, 605, 605,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2554, 0,
	0, 0, 0, 0, 0, 2560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2714, 0, 2715, 0,
	0, 0, 0, 2718, 2719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2767, 0, 0, 2769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2873, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 945, 930, 463, 0, 876, 948,
	845, 864, 958, 867, 870, 912, 824, 890, 379, 861,
	816, 849, 819, 856, 820, 847, 878, 250, 844, 932,
	894, 947, 334, 247, 826, 850, 393, 866, 197, 914,
	437, 234, 344, 341, 470, 262, 253, 249, 233, 289,
	351, 391, 457, 385, 954, 338, 900, 0, 447, 364,
	605, 0, 0, 880, 936, 888, 926, 875, 913, 834,
	899, 949, 862, 909, 950, 295, 232, 297, 196, 376,
	448, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	2951, 0, 2952, 0, 2916, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 858, 906, 944, 859, 908, 245, 293, 252,
	244, 467, 955, 935, 823, 887, 943, 0, 0, 214,
	946, 882, 0, 911, 0, 961, 818, 902, 605, 821,
	825, 957, 939, 853, 255, 0, 0, 0, 0, 0,
	0, 0, 879, 889, 923, 873, 0, 0, 0, 0,
	0, 0, 0, 851, 0, 898, 0, 0, 0, 830,
	822, 0, 0, 0, 2979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 877, 0, 0, 0, 833, 0, 852,
	924, 0, 815, 276, 827, 365, 237, 0, 928, 938,
	874, 503, 942, 872, 871, 918, 831, 934, 865, 333,
	829, 302, 192, 210, 0, 863, 375, 418, 424, 933,
	848, 857, 235, 855, 422, 389, 486, 218, 264, 415,
	395, 420, 402, 267, 897, 916, 421, 339, 472, 409,
	483, 504, 505, 243, 369, 494, 461, 500, 518, 211,
	240, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	274, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	269, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 248,
	272, 238, 378, 476, 477, 236, 521, 213, 499, 206,
	1150, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 260, 283, 407, 342, 408, 284,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 843, 259, 263, 271, 273, 279,
	280, 287, 335, 382, 406, 404, 410, 929, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 286, 445, 303, 340, 921, 960, 388, 423,
	225, 488, 446, 838, 842, 836, 903, 837, 892, 893,
	839, 951, 952, 953, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 925, 832, 0, 840, 841, 0, 931,
	940, 941, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 896, 191, 207, 336, 956, 411, 268,
	519, 497, 493, 817, 835, 242, 846, 854, 0, 860,
	868, 869, 881, 883, 884, 885, 886, 904, 905, 907,
	915, 917, 920, 922, 927, 937, 959, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	278, 482, 507, 0, 345, 895, 901, 347, 261, 281,
	292, 910, 496, 452, 212, 419, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 435, 458, 459, 460, 462, 360, 246,
	396, 891, 919, 343, 464, 465, 288, 361, 0, 0,
	945, 930, 463, 0, 876, 948, 845, 864, 958, 867,
	870, 912, 824, 890, 379, 861, 816, 849, 819, 856,
	820, 847, 878, 250, 844, 932, 894, 947, 334, 247,
	826, 850, 393, 866, 197, 914, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	954, 338, 900, 0, 447, 364, 0, 0, 0, 880,
	936, 888, 926, 875, 913, 834, 899, 949, 862, 909,
	950, 295, 232, 297, 196, 376, 448, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 858, 906,
	944, 859, 908, 245, 293, 252, 244, 467, 955, 935,
	823, 887, 943, 0, 0, 214, 946, 882, 0, 911,
	0, 961, 818, 902, 0, 821, 825, 957, 939, 853,
	255, 0, 0, 0, 0, 0, 0, 0, 879, 889,
	923, 873, 0, 0, 0, 0, 0, 2416, 0, 851,
	0, 898, 0, 0, 0, 830, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 0, 0, 833, 0, 852, 924, 0, 815, 276,
	827, 365, 237, 0, 928, 938, 874, 503, 942, 872,
	871, 918, 831, 934, 865, 333, 829, 302, 192, 210,
	0, 863, 375, 418, 424, 933, 848, 857, 235, 855,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	897, 916, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 1150, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	843, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 929, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 286, 445,
	303, 340, 921, 960, 388, 423, 225, 488, 446, 838,
	842, 836, 903, 837, 892, 893, 839, 951, 952, 953,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 925,
	832, 0, 840, 841, 0, 931, 940, 941, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 896,
	191, 207, 336, 956, 411, 268, 519, 497, 493, 817,
	835, 242, 846, 854, 0, 860, 868, 869, 881, 883,
	884, 885, 886, 904, 905, 907, 915, 917, 920, 922,
	927, 937, 959, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 895, 901, 347, 261, 281, 292, 910, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 891, 919, 343,
	464, 465, 288, 361, 0, 0, 945, 930, 463, 0,
	876, 948, 845, 864, 958, 867, 870, 912, 824, 890,
	379, 861, 816, 849, 819, 856, 820, 847, 878, 250,
	844, 932, 894, 947, 334, 247, 826, 850, 393, 866,
	197, 914, 437, 234, 344, 341, 470, 262, 253, 249,
	233, 289, 351, 391, 457, 385, 954, 338, 900, 0,
	447, 364, 0, 0, 0, 880, 936, 888, 926, 875,
	913, 834, 899, 949, 862, 909, 950, 295, 232, 297,
	196, 376, 448, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 858, 906, 944, 859, 908, 245,
	293, 252, 244, 467, 955, 935, 823, 887, 943, 0,
	0, 214, 946, 882, 0, 911, 0, 961, 818, 902,
	0, 821, 825, 957, 939, 853, 255, 0, 0, 0,
	0, 0, 0, 0, 879, 889, 923, 873, 0, 0,
	0, 0, 0, 2374, 0, 851, 0, 898, 0, 0,
	0, 830, 822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 877, 0, 0, 0, 833,
	0, 852, 924, 0, 815, 276, 827, 365, 237, 0,
	928, 938, 874, 503, 942, 872, 871, 918, 831, 934,
	865, 333, 829, 302, 192, 210, 0, 863, 375, 418,
	424, 933, 848, 857, 235, 855, 422, 389, 486, 218,
	264, 415, 395, 420, 402, 267, 897, 916, 421, 339,
	472, 409, 483, 504, 505, 243, 369, 494, 461, 500,
	518, 211, 240, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 274, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 269, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 248, 272, 238, 378, 476, 477, 236, 521, 213,
	499, 206, 1150, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 260, 283, 407, 342,
	408, 284, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 843, 259, 263, 271,
	273, 279, 280, 287, 335, 382, 406, 404, 410, 929,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 286, 445, 303, 340, 921, 960,
	388, 423, 225, 488, 446, 838, 842, 836, 903, 837,
	892, 893, 839, 951, 952, 953, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 925, 832, 0, 840, 841,
	0, 931, 940, 941, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 896, 191, 207, 336, 956,
	411, 268, 519, 497, 493, 817, 835, 242, 846, 854,
	0, 860, 868, 869, 881, 883, 884, 885, 886, 904,
	905, 907, 915, 917, 920, 922, 927, 937, 959, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 278, 482, 507, 0, 345, 895, 901, 347,
	261, 281, 292, 910, 496, 452, 212, 419, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 246, 396, 891, 919, 343, 464, 465, 288, 361,
	0, 0, 945, 930, 463, 0, 876, 948, 845, 864,
	958, 867, 870, 912, 824, 890, 379, 861, 816, 849,
	819, 856, 820, 847, 878, 250, 844, 932, 894, 947,
	334, 247, 826, 850, 393, 866, 197, 914, 437, 234,
	344, 341, 470, 262, 253, 249, 233, 289, 351, 391,
	457, 385, 954, 338, 900, 0, 447, 364, 0, 0,
	0, 880, 936, 888, 926, 875, 913, 834, 899, 949,
	862, 909, 950, 295, 232, 297, 196, 376, 448, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	858, 906, 944, 859, 908, 245, 293, 252, 244, 467,
	955, 935, 823, 887, 943, 0, 0, 214, 946, 882,
	0, 911, 0, 961, 818, 902, 0, 821, 825, 957,
	939, 853, 255, 0, 0, 0, 0, 0, 0, 0,
	879, 889, 923, 873, 0, 0, 0, 0, 0, 1823,
	0, 851, 0, 898, 0, 0, 0, 830, 822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 877, 0, 0, 0, 833, 0, 852, 924, 0,
	815, 276, 827, 365, 237, 0, 928, 938, 874, 503,
	942, 872, 871, 918, 831, 934, 865, 333, 829, 302,
	192, 210, 0, 863, 375, 418, 424, 933, 848, 857,
	235, 855, 422, 389, 486, 218, 264, 415, 395, 420,
	402, 267, 897, 916, 421, 339, 472, 409, 483, 504,
	505, 243, 369, 494, 461, 500, 518, 211, 240, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 274, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 269, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 476, 477, 236, 521, 213, 499, 206, 1150, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 843, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 929, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	286, 445, 303, 340, 921, 960, 388, 423, 225, 488,
	446, 838, 842, 836, 903, 837, 892, 893, 839, 951,
	952, 953, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 925, 832, 0, 840, 841, 0, 931, 940, 941,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 896, 191, 207, 336, 956, 411, 268, 519, 497,
	493, 817, 835, 242, 846, 854, 0, 860, 868, 869,
	881, 883, 884, 885, 886, 904, 905, 907, 915, 917,
	920, 922, 927, 937, 959, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 278, 482,
	507, 0, 345, 895, 901, 347, 261, 281, 292, 910,
	496, 452, 212, 419, 270, 201, 231, 215, 239, 254,
	257, 296, 356, 363, 392, 397, 275, 251, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 246, 396, 891,
	919, 343, 464, 465, 288, 361, 0, 0, 945, 930,
	463, 0, 876, 948, 845, 864, 958, 867, 870, 912,
	824, 890, 379, 861, 816, 849, 819, 856, 820, 847,
	878, 250, 844, 932, 894, 947, 334, 247, 826, 850,
	393, 866, 197, 914, 437, 234, 344, 341, 470, 262,
	253, 249, 233, 289, 351, 391, 457, 385, 954, 338,
	900, 0, 447, 364, 0, 0, 0, 880, 936, 888,
	926, 875, 913, 834, 899, 949, 862, 909, 950, 295,
	232, 297, 196, 376, 448, 266, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 858, 906, 944, 859,
	908, 245, 293, 252, 244, 467, 955, 935, 823, 887,
	943, 0, 0, 214, 946, 882, 0, 911, 0, 961,
	818, 902, 0, 821, 825, 957, 939, 853, 255, 0,
	0, 0, 0, 0, 0, 0, 879, 889, 923, 873,
	0, 0, 0, 0, 0, 0, 0, 851, 0, 898,
	0, 0, 0, 830, 822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 877, 0, 0,
	0, 833, 0, 852, 924, 0, 815, 276, 827, 365,
	237, 0, 928, 938, 874, 503, 942, 872, 871, 918,
	831, 934, 865, 333, 829, 302, 192, 210, 0, 863,
	375, 418, 424, 933, 848, 857, 235, 855, 422, 389,
	486, 218, 264, 415, 395, 420, 402, 267, 897, 916,
	421, 339, 472, 409, 483, 504, 505, 243, 369, 494,
	461, 500, 518, 211, 240, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 274, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 269, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 248, 272, 238, 378, 476, 477, 236,
	521, 213, 499, 206, 1150, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 260, 283,
	407, 342, 408, 284, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 843, 259,
	263, 271, 273, 279, 280, 287, 335, 382, 406, 404,
	410, 929, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 286, 445, 303, 340,
	921, 960, 388, 423, 225, 488, 446, 838, 842, 836,
	903, 837, 892, 893, 839, 951, 952, 953, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 925, 832, 0,
	840, 841, 0, 931, 940, 941, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 896, 191, 207,
	336, 956, 411, 268, 519, 497, 493, 817, 835, 242,
	846, 854, 0, 860, 868, 869, 881, 883, 884, 885,
	886, 904, 905, 907, 915, 917, 920, 922, 927, 937,
	959, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 278, 482, 507, 0, 345, 895,
	901, 347, 261, 281, 292, 910, 496, 452, 212, 419,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 246, 396, 891, 919, 343, 464, 465,
	288, 361, 0, 0, 945, 930, 463, 0, 876, 948,
	845, 864, 958, 867, 870, 912, 824, 890, 379, 861,
	816, 849, 819, 856, 820, 847, 878, 250, 844, 932,
	894, 947, 334, 247, 826, 850, 393, 866, 197, 914,
	437, 234, 344, 341, 470, 262, 253, 249, 233, 289,
	351, 391, 457, 385, 954, 338, 900, 0, 447, 364,
	0, 0, 0, 880, 936, 888, 926, 875, 913, 834,
	899, 949, 862, 909, 950, 295, 232, 297, 196, 376,
	448, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 858, 906, 944, 859, 908, 245, 293, 252,
	244, 467, 955, 935, 823, 887, 943, 0, 0, 214,
	946, 882, 0, 911, 0, 961, 818, 902, 0, 821,
	825, 957, 939, 853, 255, 0, 0, 0, 0, 0,
	0, 0, 879, 889, 923, 873, 0, 0, 0, 0,
	0, 0, 0, 851, 0, 898, 0, 0, 0, 830,
	822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 877, 0, 0, 0, 833, 0, 852,
	924, 0, 815, 276, 827, 365, 237, 0, 928, 938,
	874, 503, 942, 872, 871, 918, 831, 934, 865, 333,
	829, 302, 192, 210, 0, 863, 375, 418, 424, 933,
	848, 857, 235, 855, 422, 389, 486, 218, 264, 415,
	395, 420, 402, 267, 897, 916, 421, 339, 472, 409,
	483, 504, 505, 243, 369, 494, 461, 500, 518, 211,
	240, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	274, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	269, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 248,
	272, 238, 378, 476, 477, 236, 521, 213, 499, 206,
	1150, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 260, 283, 407, 342, 408, 284,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 843, 259, 263, 271, 273, 279,
	280, 287, 335, 382, 406, 404, 410, 929, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 286, 445, 303, 340, 921, 960, 388, 423,
	225, 488, 446, 838, 842, 836, 903, 837, 892, 893,
	839, 951, 952, 953, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 925, 832, 0, 840, 841, 0, 931,
	940, 941, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 896, 191, 207, 336, 956, 411, 268,
	519, 497, 493, 817, 835, 242, 846, 854, 0, 860,
	868, 869, 881, 883, 884, 885, 886, 904, 905, 907,
	915, 917, 920, 922, 927, 937, 959, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	278, 482, 507, 0, 345, 895, 901, 347, 261, 281,
	292, 910, 496, 452, 212, 419, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 435, 458, 459, 460, 462, 360, 246,
	396, 891, 919, 343, 464, 465, 288, 361, 0, 0,
	945, 930, 463, 0, 876, 948, 845, 864, 958, 867,
	870, 912, 824, 890, 379, 861, 816, 849, 819, 856,
	820, 847, 878, 250, 844, 932, 894, 947, 334, 247,
	826, 850, 393, 866, 197, 914, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	954, 338, 900, 0, 447, 364, 0, 0, 0, 880,
	936, 888, 926, 875, 913, 834, 899, 949, 862, 909,
	950, 295, 232, 297, 196, 376, 448, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 858, 906,
	944, 859, 908, 245, 293, 252, 244, 467, 955, 935,
	823, 887, 943, 0, 0, 962, 946, 882, 0, 911,
	0, 961, 818, 902, 0, 821, 825, 957, 939, 853,
	255, 0, 0, 0, 0, 0, 0, 0, 879, 889,
	923, 873, 0, 0, 0, 0, 0, 0, 0, 851,
	0, 898, 0, 0, 0, 830, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 0, 0, 833, 0, 852, 924, 0, 815, 276,
	827, 365, 237, 0, 928, 938, 874, 503, 942, 872,
	871, 918, 831, 934, 865, 333, 829, 302, 192, 210,
	0, 863, 375, 418, 424, 933, 848, 857, 235, 855,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	897, 916, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 828, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	843, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 929, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 814, 808, 807,
	303, 340, 921, 960, 388, 423, 225, 488, 446, 838,
	842, 836, 903, 837, 892, 893, 839, 951, 952, 953,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 925,
	832, 0, 840, 841, 0, 931, 940, 941, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 896,
	191, 207, 336, 956, 411, 268, 519, 497, 493, 817,
	835, 242, 846, 854, 0, 860, 868, 869, 881, 883,
	884, 885, 886, 904, 905, 907, 915, 917, 920, 922,
	927, 937, 959, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 895, 901, 347, 261, 281, 292, 910, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 891, 919, 343,
	464, 465, 288, 361, 0, 0, 945, 930, 463, 0,
	876, 948, 845, 864, 958, 867, 870, 912, 824, 890,
	379, 861, 816, 849, 819, 856, 820, 847, 878, 250,
	844, 932, 894, 947, 334, 247, 826, 850, 393, 866,
	197, 914, 437, 234, 344, 341, 470, 262, 253, 249,
	233, 289, 351, 391, 457, 385, 954, 338, 900, 0,
	447, 364, 0, 0, 0, 880, 936, 888, 926, 875,
	913, 834, 899, 949, 862, 909, 950, 295, 232, 297,
	196, 376, 448, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 858, 906, 944, 859, 908, 245,
	293, 252, 244, 467, 955, 935, 823, 887, 943, 0,
	0, 962, 946, 882, 0, 911, 0, 961, 818, 902,
	0, 821, 825, 957, 939, 853, 255, 0, 0, 0,
	0, 0, 0, 0, 879, 889, 923, 873, 0, 0,
	0, 0, 0, 0, 0, 851, 0, 898, 0, 0,
	0, 830, 822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 877, 0, 0, 0, 833,
	0, 852, 924, 0, 815, 276, 827, 365, 237, 0,
	928, 938, 874, 503, 942, 872, 871, 918, 831, 934,
	865, 333, 829, 302, 192, 210, 0, 863, 375, 418,
	424, 933, 848, 857, 235, 855, 422, 389, 486, 218,
	264, 415, 395, 420, 402, 267, 897, 916, 421, 339,
	472, 409, 483, 504, 505, 243, 369, 494, 461, 500,
	518, 211, 240, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 274, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 269, 413, 202, 456, 1365, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 248, 272, 238, 378, 476, 477, 236, 521, 213,
	499, 206, 828, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 260, 283, 407, 342,
	408, 284, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 843, 259, 263, 271,
	273, 279, 280, 287, 335, 382, 406, 404, 410, 929,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 814, 808, 807, 303, 340, 921, 960,
	388, 423, 225, 488, 446, 838, 842, 836, 903, 837,
	892, 893, 839, 951, 952, 953, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 925, 832, 0, 840, 841,
	0, 931, 940, 941, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 896, 191, 207, 336, 956,
	411, 268, 519, 497, 493, 817, 835, 242, 846, 854,
	0, 860, 868, 869, 881, 883, 884, 885, 886, 904,
	905, 907, 915, 917, 920, 922, 927, 937, 959, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 278, 482, 507, 0, 345, 895, 901, 347,
	261, 281, 292, 910, 496, 452, 212, 419, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 246, 396, 891, 919, 343, 464, 465, 288, 361,
	0, 0, 945, 930, 463, 0, 876, 948, 845, 864,
	958, 867, 870, 912, 824, 890, 379, 861, 816, 849,
	819, 856, 820, 847, 878, 250, 844, 932, 894, 947,
	334, 247, 826, 850, 393, 866, 197, 914, 437, 234,
	344, 341, 470, 262, 253, 249, 233, 289, 351, 391,
	457, 385, 954, 338, 900, 0, 447, 364, 0, 0,
	0, 880, 936, 888, 926, 875, 913, 834, 899, 949,
	862, 909, 950, 295, 232, 297, 196, 376, 448, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	858, 906, 944, 859, 908, 245, 293, 252, 244, 467,
	955, 935, 823, 887, 943, 0, 0, 962, 946, 882,
	0, 911, 0, 961, 818, 902, 0, 821, 825, 957,
	939, 853, 255, 0, 0, 0, 0, 0, 0, 0,
	879, 889, 923, 873, 0, 0, 0, 0, 0, 0,
	0, 851, 0, 898, 0, 0, 0, 830, 822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 877, 0, 0, 0, 833, 0, 852, 924, 0,
	815, 276, 827, 365, 237, 0, 928, 938, 874, 503,
	942, 872, 871, 918, 831, 934, 865, 333, 829, 302,
	192, 210, 0, 863, 375, 418, 424, 933, 848, 857,
	235, 855, 422, 389, 486, 218, 264, 415, 395, 420,
	402, 267, 897, 916, 421, 339, 472, 409, 483, 504,
	505, 243, 369, 494, 461, 500, 518, 211, 240, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 274, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 269, 413,
	202, 456, 805, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 476, 477, 236, 521, 213, 499, 206, 828, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 843, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 929, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 814,
	808, 807, 303, 340, 921, 960, 388, 423, 225, 488,
	446, 838, 842, 836, 903, 837, 892, 893, 839, 951,
	952, 953, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 925, 832, 0, 840, 841, 0, 931, 940, 941,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 896, 191, 207, 336, 956, 411, 268, 519, 497,
	493, 817, 835, 242, 846, 854, 0, 860, 868, 869,
	881, 883, 884, 885, 886, 904, 905, 907, 915, 917,
	920, 922, 927, 937, 959, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 278, 482,
	507, 0, 345, 895, 901, 347, 261, 281, 292, 910,
	496, 452, 212, 419, 270, 201, 231, 215, 239, 254,
	257, 296, 356, 363, 392, 397, 275, 251, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 246, 396, 891,
	919, 343, 464, 465, 288, 361, 0, 0, 0, 0,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 1768, 0, 623, 0, 0,
	0, 250, 628, 0, 0, 0, 334, 247, 0, 1769,
	393, 0, 197, 0, 437, 234, 344, 341, 470, 262,
	253, 249, 233, 289, 351, 391, 457, 385, 635, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 376, 448, 266, 0, 87, 0, 0,
	188, 189, 190, 699, 706, 707, 708, 709, 710, 700,
	702, 0, 0, 223, 701, 230, 646, 648, 647, 657,
	658, 659, 660, 661, 662, 663, 644, 704, 711, 712,
	0, 245, 293, 252, 244, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 606, 620, 0, 634, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 617, 618, 794, 0, 0, 0, 683,
	0, 619, 0, 0, 627, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 365,
	237, 0, 682, 0, 0, 503, 0, 0, 680, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 235, 0, 422, 389,
	486, 218, 264, 415, 395, 420, 402, 267, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 243, 369, 494,
	461, 500, 518, 211, 240, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 274, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 269, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 248, 272, 238, 378, 476, 477, 236,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 652, 653, 260, 283,
	407, 342, 408, 284, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 286, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 689, 681, 639,
	693, 641, 690, 691, 636, 637, 640, 692, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 684, 626, 625,
	0, 632, 633, 0, 642, 643, 645, 649, 650, 651,
	654, 655, 656, 664, 666, 667, 665, 668, 669, 670,
	673, 674, 675, 676, 671, 672, 677, 624, 191, 207,
	336, 0, 411, 268, 519, 497, 493, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 278, 482, 507, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 496, 452, 212, 419,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 246, 396, 0, 361, 343, 464, 465,
	288, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 623, 0,
	0, 0, 250, 628, 0, 0, 0, 334, 247, 0,
	0, 393, 0, 197, 0, 437, 234, 344, 341, 470,
	262, 253, 249, 233, 289, 351, 391, 457, 385, 635,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 297, 196, 376, 448, 266, 0, 87, 0,
	0, 188, 189, 190, 699, 706, 707, 708, 709, 710,
	700, 702, 0, 0, 223, 701, 230, 646, 648, 647,
	657, 658, 659, 660, 661, 662, 663, 644, 704, 711,
	712, 0, 245, 293, 252, 244, 467, 0, 0, 1734,
	1735, 1736, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 606, 620, 0, 634, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 617, 618, 0, 0, 0, 0,
	683, 0, 619, 0, 0, 627, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	365, 237, 0, 682, 0, 0, 503, 0, 0, 680,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 235, 0, 422,
	389, 486, 218, 264, 415, 395, 420, 402, 267, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 243, 369,
	494, 461, 500, 518, 211, 240, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 274, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 269, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 476, 477,
	236, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 652, 653, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 286, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 689, 681,
	639, 693, 641, 690, 691, 636, 637, 640, 692, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 684, 626,
	625, 0, 632, 633, 0, 642, 643, 645, 649, 650,
	651, 654, 655, 656, 664, 666, 667, 665, 668, 669,
	670, 673, 674, 675, 676, 671, 672, 677, 624, 191,
	207, 336, 0, 411, 268, 519, 497, 493, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 278, 482, 507, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 496, 452, 212,
	419, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 246, 396, 0, 361, 343, 464,
	465, 288, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 623,
	0, 0, 0, 250, 628, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	635, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 630, 631, 0, 0, 0, 0, 0, 0, 1850,
	0, 295, 232, 297, 196, 376, 448, 266, 0, 87,
	0, 0, 188, 189, 190, 699, 706, 707, 708, 709,
	710, 700, 702, 0, 0, 223, 701, 230, 646, 648,
	647, 657, 658, 659, 660, 661, 662, 663, 644, 704,
	711, 712, 1851, 245, 293, 252, 244, 467, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 606, 620, 0, 634, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 617, 618, 0, 0, 0,
	0, 683, 0, 619, 0, 0, 627, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 682, 0, 0, 503, 0, 0,
	680, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 235, 0,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 652, 653,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 286, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 689,
	681, 639, 693, 641, 690, 691, 636, 637, 640, 692,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 684,
	626, 625, 0, 632, 633, 0, 642, 643, 645, 649,
	650, 651, 654, 655, 656, 664, 666, 667, 665, 668,
	669, 670, 673, 674, 675, 676, 671, 672, 677, 624,
	191, 207, 336, 0, 411, 268, 519, 497, 493, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 0, 0, 343,
	464, 465, 288, 361, 0, 0, 0, 78, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 623, 0, 0, 0, 250,
	628, 0, 0, 0, 334, 247, 0, 0, 393, 0,
	197, 0, 437, 234, 344, 341, 470, 262, 253, 249,
	233, 289, 351, 391, 457, 385, 635, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 376, 448, 266, 0, 87, 0, 0, 188, 189,
	190, 699, 706, 707, 708, 709, 710, 700, 702, 0,
	0, 223, 701, 230, 646, 648, 647, 657, 658, 659,
	660, 661, 662, 663, 644, 704, 711, 712, 0, 245,
	293, 252, 244, 467, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 606,
	620, 0, 634, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 617, 618, 0, 0, 0, 0, 683, 0, 619,
	0, 0, 627, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 365, 237, 0,
	682, 0, 0, 503, 0, 0, 680, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 235, 0, 422, 389, 486, 218,
	264, 415, 395, 420, 402, 267, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 243, 369, 494, 461, 500,
	518, 211, 240, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 274, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 269, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 248, 272, 238, 378, 476, 477, 236, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 652, 653, 260, 283, 407, 342,
	408, 284, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 286, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 689, 681, 639, 693, 641,
	690, 691, 636, 637, 640, 692, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 684, 626, 625, 0, 632,
	633, 0, 642, 643, 645, 649, 650, 651, 654, 655,
	656, 664, 666, 667, 665, 668, 669, 670, 673, 674,
	675, 676, 671, 672, 677, 624, 191, 207, 336, 86,
	411, 268, 519, 497, 493, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 278, 482, 507, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 496, 452, 212, 419, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 246, 396, 0, 361, 343, 464, 465, 288, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 623, 0, 0, 0,
	250, 628, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 437, 234, 344, 341, 470, 262, 253,
	249, 233, 289, 351, 391, 457, 385, 635, 338, 0,
	0, 447, 364, 0, 0, 0, 0, 0, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 448, 266, 0, 87, 0, 0, 188,
	189, 190, 699, 706, 707, 708, 709, 710, 700, 702,
	0, 0, 223, 701, 230, 646, 648, 647, 657, 658,
	659, 660, 661, 662, 663, 644, 704, 711, 712, 0,
	245, 293, 252, 244, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	606, 620, 0, 634, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 617, 618, 0, 0, 0, 0, 683, 0,
	619, 0, 0, 627, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 682, 0, 0, 503, 0, 0, 680, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 424, 0, 0, 0, 235, 0, 422, 389, 486,
	218, 264, 415, 395, 420, 402, 267, 2938, 0, 421,
	339, 472, 409, 483, 504, 505, 243, 369, 494, 461,
	500, 518, 211, 240, 383, 454, 489, 444, 362, 468,
	469, 301, 443, 274, 195, 337, 510, 209, 430, 227,
	216, 474, 492, 269, 413, 202, 456, 481, 224, 434,
	0, 0, 520, 204, 479, 453, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 476, 477, 236, 521,
	213, 499, 206, 0, 498, 371, 471, 480, 359, 349,
	205, 478, 357, 348, 304, 652, 653, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 490, 0, 199,
	0, 449, 491, 522, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 466, 484, 495, 502, 508, 509, 511, 512, 513,
	514, 515, 517, 516, 370, 286, 445, 303, 340, 0,
	0, 388, 423, 225, 488, 446, 689, 681, 639, 693,
	641, 690, 691, 636, 637, 640, 692, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 0, 684, 626, 625, 0,
	632, 633, 0, 642, 643, 645, 649, 650, 651, 654,
	655, 656, 664, 666, 667, 665, 668, 669, 670, 673,
	674, 675, 676, 671, 672, 677, 624, 191, 207, 336,
	0, 411, 268, 519, 497, 493, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 425, 426, 427, 428, 429, 432, 433, 438,
	439, 440, 441, 442, 450, 451, 455, 473, 475, 487,
	501, 506, 431, 278, 482, 507, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 496, 452, 212, 419, 270,
	201, 231, 215, 239, 254, 257, 296, 356, 363, 392,
	397, 275, 251, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 246, 396, 0, 361, 343, 464, 465, 288,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 623, 0, 0,
	0, 250, 628, 0, 0, 0, 334, 247, 0, 0,
	393, 0, 197, 0, 437, 234, 344, 341, 470, 262,
	253, 249, 233, 289, 351, 391, 457, 385, 635, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 376, 448, 266, 0, 87, 0, 1332,
	188, 189, 190, 699, 706, 707, 708, 709, 710, 700,
	702, 0, 0, 223, 701, 230, 646, 648, 647, 657,
	658, 659, 660, 661, 662, 663, 644, 704, 711, 712,
	0, 245, 293, 252, 244, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 606, 620, 0, 634, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 617, 618, 0, 0, 0, 0, 683,
	0, 619, 0, 0, 627, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 365,
	237, 0, 682, 0, 0, 503, 0, 0, 680, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 235, 0, 422, 389,
	486, 218, 264, 415, 395, 420, 402, 267, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 243, 369, 494,
	461, 500, 518, 211, 240, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 274, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 269, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 248, 272, 238, 378, 476, 477, 236,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 652, 653, 260, 283,
	407, 342, 408, 284, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 286, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 689, 681, 639,
	693, 641, 690, 691, 636, 637, 640, 692, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 684, 626, 625,
	0, 632, 633, 0, 642, 643, 645, 649, 650, 651,
	654, 655, 656, 664, 666, 667, 665, 668, 669, 670,
	673, 674, 675, 676, 671, 672, 677, 624, 191, 207,
	336, 0, 411, 268, 519, 497, 493, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 278, 482, 507, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 496, 452, 212, 419,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 246, 396, 0, 361, 343, 464, 465,
	288, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 623, 0,
	0, 0, 250, 628, 0, 0, 0, 334, 247, 0,
	0, 393, 0, 197, 0, 437, 234, 344, 341, 470,
	262, 253, 249, 233, 289, 351, 391, 457, 385, 635,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 297, 196, 376, 448, 266, 0, 87, 0,
	0, 188, 189, 190, 699, 706, 707, 708, 709, 710,
	700, 702, 0, 0, 223, 701, 230, 646, 648, 647,
	657, 658, 659, 660, 661, 662, 663, 644, 704, 711,
	712, 0, 245, 293, 252, 244, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 606, 620, 0, 634, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 617, 618, 794, 0, 0, 0,
	683, 0, 619, 0, 0, 627, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	365, 237, 0, 682, 0, 0, 503, 0, 0, 680,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 235, 0, 422,
	389, 486, 218, 264, 415, 395, 420, 402, 267, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 243, 369,
	494, 461, 500, 518, 211, 240, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 274, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 269, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 476, 477,
	236, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 652, 653, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 286, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 689, 681,
	639, 693, 641, 690, 691, 636, 637, 640, 692, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 684, 626,
	625, 0, 632, 633, 0, 642, 643, 645, 649, 650,
	651, 654, 655, 656, 664, 666, 667, 665, 668, 669,
	670, 673, 674, 675, 676, 671, 672, 677, 624, 191,
	207, 336, 0, 411, 268, 519, 497, 493, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 278, 482, 507, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 496, 452, 212,
	419, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 246, 396, 0, 361, 343, 464,
	465, 288, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 623,
	0, 0, 0, 250, 628, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	635, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 448, 266, 0, 87,
	0, 0, 188, 189, 190, 699, 706, 707, 708, 709,
	710, 700, 702, 0, 0, 223, 701, 230, 646, 648,
	647, 657, 658, 659, 660, 661, 662, 663, 644, 704,
	711, 712, 0, 245, 293, 252, 244, 467, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 606, 620, 0, 634, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 617, 618, 0, 0, 0,
	0, 683, 0, 619, 0, 0, 627, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 682, 0, 0, 503, 0, 0,
	680, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 235, 0,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 652, 653,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 286, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 689,
	681, 639, 693, 641, 690, 691, 636, 637, 640, 692,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 684,
	626, 625, 0, 632, 633, 0, 642, 643, 645, 649,
	650, 651, 654, 655, 656, 664, 666, 667, 665, 668,
	669, 670, 673, 674, 675, 676, 671, 672, 677, 624,
	191, 207, 336, 0, 411, 268, 519, 497, 493, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 0, 361, 343,
	464, 465, 288, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 0,
	623, 0, 0, 0, 250, 628, 0, 0, 0, 334,
	247, 0, 0, 393, 0, 197, 0, 437, 234, 344,
	341, 470, 262, 253, 249, 233, 289, 351, 391, 457,
	385, 635, 338, 0, 0, 447, 364, 0, 0, 0,
	0, 0, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 297, 196, 376, 448, 266, 0,
	87, 0, 0, 188, 189, 190, 699, 706, 707, 708,
	709, 710, 700, 702, 0, 0, 223, 701, 230, 646,
	648, 647, 657, 658, 659, 660, 661, 662, 663, 644,
	704, 711, 712, 0, 245, 293, 252, 244, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 620, 0, 634, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 617, 618, 0, 0,
	0, 0, 683, 0, 619, 0, 0, 627, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 365, 237, 0, 682, 0, 0, 503, 0,
	0, 680, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 424, 0, 0, 0, 235,
	0, 422, 389, 486, 218, 264, 415, 395, 420, 402,
	267, 0, 0, 421, 339, 472, 409, 483, 504, 505,
	243, 369, 494, 461, 500, 518, 211, 240, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 274, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 269, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 248, 272, 238, 378,
	476, 477, 236, 521, 213, 499, 206, 0, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 652,
	653, 260, 283, 407, 342, 408, 284, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	382, 406, 404, 410, 0, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 286,
	445, 303, 340, 0, 0, 388, 423, 225, 488, 446,
	689, 681, 639, 693, 641, 690, 691, 636, 637, 640,
	692, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	684, 626, 625, 0, 632, 633, 0, 642, 643, 645,
	649, 650, 651, 654, 655, 656, 664, 666, 667, 665,
	668, 669, 670, 673, 674, 675, 676, 671, 672, 677,
	624, 191, 207, 336, 0, 411, 268, 519, 497, 493,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 278, 482, 507,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 496,
	452, 212, 419, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 246, 396, 0, 361,
	343, 464, 465, 288, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 437, 234,
	344, 341, 470, 262, 253, 249, 233, 289, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 448, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 706, 707,
	0, 0, 0, 0, 1679, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 467,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	235, 0, 422, 389, 486, 218, 264, 415, 395, 420,
	402, 267, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 243, 369, 494, 461, 500, 518, 211, 240, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 274, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 269, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 476, 477, 236, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	286, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 268, 519, 497,
	493, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 278, 482,
	507, 0, 345, 0, 0, 347, 261, 281, 292, 0,
	496, 452, 212, 419, 270, 201, 231, 215, 239, 254,
	257, 296, 356, 363, 392, 397, 275, 251, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 246, 396, 0,
	361, 343, 464, 465, 288, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 334, 247, 0, 0, 393, 0, 197, 0, 437,
	234, 344, 341, 470, 262, 253, 249, 233, 289, 351,
	391, 457, 385, 0, 338, 0, 0, 447, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 297, 196, 376, 448,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	1013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 365, 237, 0, 0, 0, 1012,
	503, 0, 0, 0, 0, 0, 1009, 1010, 333, 970,
	302, 192, 210, 1003, 1007, 375, 418, 424, 0, 0,
	0, 235, 0, 422, 389, 486, 218, 264, 415, 395,
	420, 402, 267, 0, 0, 421, 339, 472, 409, 483,
	504, 505, 243, 369, 494, 461, 500, 518, 211, 240,
	383, 454, 489, 444, 362, 468, 469, 301, 443, 274,
	195, 337, 510, 209, 430, 227, 216, 474, 492, 269,
	413, 202, 456, 481, 224, 434, 0, 0, 520, 204,
	479, 453, 358, 298, 299, 203, 0, 414, 248, 272,
	238, 378, 476, 477, 236, 521, 213, 499, 206, 0,
	498, 371, 471, 480, 359, 349, 205, 478, 357, 348,
	304, 323, 324, 260, 283, 407, 342, 408, 284, 367,
	366, 368, 198, 490, 0, 199, 0, 449, 491, 522,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 382, 406, 404, 410, 0, 466, 484, 495,
	502, 508, 509, 511, 512, 513, 514, 515, 517, 516,
	370, 286, 445, 303, 340, 0, 0, 388, 423, 225,
	488, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 350, 436, 485, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 411, 268, 519,
	497, 493, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 438, 439, 440, 441, 442,
	450, 451, 455, 473, 475, 487, 501, 506, 431, 278,
	482, 507, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 496, 452, 212, 419, 270, 201, 231, 215, 239,
	254, 257, 296, 356, 363, 392, 397, 275, 251, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 246, 396,
	0, 0, 343, 464, 465, 288, 361, 0, 0, 0,
	78, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 334, 247, 0,
	0, 393, 0, 197, 0, 437, 234, 344, 341, 470,
	262, 253, 249, 233, 289, 351, 391, 457, 385, 0,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 297, 196, 376, 448, 266, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	365, 237, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 235, 0, 422,
	389, 486, 218, 264, 415, 395, 420, 402, 267, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 243, 369,
	494, 461, 500, 518, 211, 240, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 274, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 269, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 476, 477,
	236, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 286, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 86, 411, 268, 519, 497, 493, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 278, 482, 507, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 496, 452, 212,
	419, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 246, 396, 0, 1351, 343, 464,
	465, 288, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 1353, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 448, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 467, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 1184,
	0, 1185, 1186, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 235, 0,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 286, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 268, 519, 497, 493, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 0, 361, 343,
	464, 465, 288, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 334,
	247, 0, 0, 393, 0, 197, 0, 437, 234, 344,
	341, 470, 262, 253, 249, 233, 289, 351, 391, 457,
	385, 0, 338, 0, 0, 447, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 297, 196, 376, 448, 266, 0,
	0, 0, 0, 188, 189, 190, 1294, 1297, 0, 0,
	0, 0, 1293, 1296, 0, 0, 223, 1292, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 365, 237, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 424, 0, 0, 0, 235,
	0, 422, 389, 486, 218, 264, 415, 395, 420, 402,
	267, 0, 0, 421, 339, 472, 409, 483, 504, 505,
	243, 369, 494, 461, 500, 518, 211, 240, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 274, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 269, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 248, 272, 238, 378,
	476, 477, 236, 521, 213, 499, 206, 0, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 323,
	324, 260, 283, 407, 342, 408, 284, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	382, 406, 404, 410, 0, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 286,
	445, 303, 340, 0, 0, 388, 423, 225, 488, 446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	350, 436, 485, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 411, 268, 519, 497, 493,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 278, 482, 507,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 496,
	452, 212, 419, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 246, 396, 0, 0,
	343, 464, 465, 288, 361, 0, 0, 0, 78, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 437, 234, 344, 341, 470, 262, 253,
	249, 233, 289, 351, 391, 457, 385, 0, 338, 0,
	0, 447, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 448, 266, 0, 87, 0, 1332, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 424, 0, 0, 0, 235, 0, 422, 389, 486,
	218, 264, 415, 395, 420, 402, 267, 0, 0, 421,
	339, 472, 409, 483, 504, 505, 243, 369, 494, 461,
	500, 518, 211, 240, 383, 454, 489, 444, 362, 468,
	469, 301, 443, 274, 195, 337, 510, 209, 430, 227,
	216, 474, 492, 269, 413, 202, 456, 481, 224, 434,
	0, 0, 520, 204, 479, 453, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 476, 477, 236, 521,
	213, 499, 206, 0, 498, 371, 471, 480, 359, 349,
	205, 478, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 490, 0, 199,
	0, 449, 491, 522, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 466, 484, 495, 502, 508, 509, 511, 512, 513,
	514, 515, 517, 516, 370, 286, 445, 303, 340, 0,
	0, 388, 423, 225, 488, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 350, 436, 485, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	86, 411, 268, 519, 497, 493, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 425, 426, 427, 428, 429, 432, 433, 438,
	439, 440, 441, 442, 450, 451, 455, 473, 475, 487,
	501, 506, 431, 278, 482, 507, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 496, 452, 212, 419, 270,
	201, 231, 215, 239, 254, 257, 296, 356, 363, 392,
	397, 275, 251, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 246, 396, 0, 361, 343, 464, 465, 288,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	393, 0, 197, 0, 437, 234, 344, 341, 470, 262,
	253, 249, 233, 289, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 376, 448, 266, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 365,
	237, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 235, 0, 422, 389,
	486, 218, 264, 415, 395, 420, 402, 267, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 243, 369, 494,
	461, 500, 518, 211, 240, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 274, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 269, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 248, 272, 238, 378, 476, 477, 236,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 260, 283,
	407, 342, 408, 284, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 286, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 268, 519, 497, 493, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 278, 482, 507, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 496, 452, 212, 419,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 246, 396, 0, 361, 343, 464, 465,
	288, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 1790, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 334, 247, 0,
	0, 393, 0, 197, 0, 437, 234, 344, 341, 470,
	262, 253, 249, 233, 289, 351, 391, 457, 385, 0,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 297, 196, 376, 448, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	365, 237, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 235, 0, 422,
	389, 486, 218, 264, 415, 395, 420, 402, 267, 0,
	1788, 421, 339, 472, 409, 483, 504, 505, 243, 369,
	494, 461, 500, 518, 211, 240, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 274, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 269, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 476, 477,
	236, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 286, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 411, 268, 519, 497, 493, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 278, 482, 507, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 496, 452, 212,
	419, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 246, 396, 0, 361, 343, 464,
	465, 288, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 448, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 467, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 970, 302, 192, 210,
	968, 0, 375, 418, 424, 0, 0, 0, 235, 0,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 286, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 268, 519, 497, 493, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 0, 361, 343,
	464, 465, 288, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 1790,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 334,
	247, 0, 0, 393, 0, 197, 0, 437, 234, 344,
	341, 470, 262, 253, 249, 233, 289, 351, 391, 457,
	385, 0, 338, 0, 0, 447, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 297, 196, 376, 448, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 1532, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 365, 237, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 424, 0, 0, 0, 235,
	0, 422, 389, 486, 218, 264, 415, 395, 420, 402,
	267, 0, 0, 421, 339, 472, 409, 483, 504, 505,
	243, 369, 494, 461, 500, 518, 211, 240, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 274, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 269, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 248, 272, 238, 378,
	476, 477, 236, 521, 213, 499, 206, 0, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 323,
	324, 260, 283, 407, 342, 408, 284, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	382, 406, 404, 410, 0, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 286,
	445, 303, 340, 0, 0, 388, 423, 225, 488, 446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	350, 436, 485, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 411, 268, 519, 497, 493,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 278, 482, 507,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 496,
	452, 212, 419, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 246, 396, 0, 361,
	343, 464, 465, 288, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 437, 234,
	344, 341, 470, 262, 253, 249, 233, 289, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 448, 266,
	0, 0, 0, 1332, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 467,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 503,
	0, 0, 0, 2866, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	235, 0, 422, 389, 486, 218, 264, 415, 395, 420,
	402, 267, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 243, 369, 494, 461, 500, 518, 211, 240, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 274, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 269, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 476, 477, 236, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	286, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 268, 519, 497,
	493, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 278, 482,
	507, 0, 345, 0, 0, 347, 261, 281, 292, 0,
	496, 452, 212, 419, 270, 201, 231, 215, 239, 254,
	257, 296, 356, 363, 392, 397, 275, 251, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 246, 396, 0,
	361, 343, 464, 465, 288, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 334, 247, 0, 0, 393, 0, 197, 0, 437,
	234, 344, 341, 470, 262, 253, 249, 233, 289, 351,
	391, 457, 385, 0, 338, 0, 0, 447, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 297, 196, 376, 448,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 365, 237, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 375, 418, 424, 0, 0,
	0, 235, 0, 422, 389, 486, 218, 264, 415, 395,
	420, 402, 267, 0, 0, 421, 339, 472, 409, 483,
	504, 505, 243, 369, 494, 461, 500, 518, 211, 240,
	383, 454, 489, 444, 362, 468, 469, 301, 443, 274,
	195, 337, 510, 209, 430, 227, 216, 474, 492, 269,
	413, 202, 456, 481, 224, 434, 0, 0, 520, 204,
	479, 453, 358, 298, 299, 203, 0, 414, 248, 272,
	238, 378, 476, 477, 236, 521, 213, 499, 206, 0,
	498, 371, 471, 480, 359, 349, 205, 478, 357, 348,
	304, 323, 324, 260, 283, 407, 342, 408, 284, 367,
	366, 368, 198, 490, 0, 199, 0, 449, 491, 522,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 382, 406, 404, 410, 0, 466, 484, 495,
	502, 508, 509, 511, 512, 513, 514, 515, 517, 516,
	370, 286, 445, 303, 340, 0, 0, 388, 423, 225,
	488, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 350, 436, 485, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 411, 268, 519,
	497, 493, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 438, 439, 440, 441, 442,
	450, 451, 455, 473, 475, 487, 501, 506, 431, 278,
	482, 507, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 496, 452, 212, 419, 270, 201, 231, 215, 239,
	254, 257, 296, 356, 363, 392, 397, 275, 251, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 246, 396,
	0, 361, 343, 464, 465, 288, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 393, 0, 197, 0,
	437, 234, 344, 341, 470, 262, 253, 249, 233, 289,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 376,
	448, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	2129, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 467, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 365, 237, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 235, 0, 422, 389, 486, 218, 264, 415,
	395, 420, 402, 267, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 243, 369, 494, 461, 500, 518, 211,
	240, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	274, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	269, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 248,
	272, 238, 378, 476, 477, 236, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 260, 283, 407, 342, 408, 284,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 286, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 268,
	519, 497, 493, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	278, 482, 507, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 496, 452, 212, 419, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 435, 458, 459, 460, 462, 360, 246,
	396, 0, 361, 343, 464, 465, 288, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 334, 247, 0, 0, 393, 0, 197,
	0, 437, 234, 344, 341, 470, 262, 253, 249, 233,
	289, 351, 391, 457, 385, 0, 338, 0, 0, 447,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 297, 196,
	376, 448, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 2114, 0, 0, 0, 2115, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 365, 237, 0, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 424,
	0, 0, 0, 235, 0, 422, 389, 486, 218, 264,
	415, 395, 420, 402, 267, 0, 0, 421, 339, 472,
	409, 483, 504, 505, 243, 369, 494, 461, 500, 518,
	211, 240, 383, 454, 489, 444, 362, 468, 469, 301,
	443, 274, 195, 337, 510, 209, 430, 227, 216, 474,
	492, 269, 413, 202, 456, 481, 224, 434, 0, 0,
	520, 204, 479, 453, 358, 298, 299, 203, 0, 414,
	248, 272, 238, 378, 476, 477, 236, 521, 213, 499,
	206, 0, 498, 371, 471, 480, 359, 349, 205, 478,
	357, 348, 304, 323, 324, 260, 283, 407, 342, 408,
	284, 367, 366, 368, 198, 490, 0, 199, 0, 449,
	491, 522, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 382, 406, 404, 410, 0, 466,
	484, 495, 502, 508, 509, 511, 512, 513, 514, 515,
	517, 516, 370, 286, 445, 303, 340, 0, 0, 388,
	423, 225, 488, 446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 350, 436, 485, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 411,
	268, 519, 497, 493, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	425, 426, 427, 428, 429, 432, 433, 438, 439, 440,
	441, 442, 450, 451, 455, 473, 475, 487, 501, 506,
	431, 278, 482, 507, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 496, 452, 212, 419, 270, 201, 231,
	215, 239, 254, 257, 296, 356, 363, 392, 397, 275,
	251, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	246, 396, 0, 361, 343, 464, 465, 288, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	1376, 0, 0, 0, 334, 247, 0, 0, 393, 0,
	197, 0, 437, 234, 344, 341, 470, 262, 253, 249,
	233, 289, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 376, 448, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1375, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 467, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 365, 237, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 235, 0, 422, 389, 486, 218,
	264, 415, 395, 420, 402, 267, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 243, 369, 494, 461, 500,
	518, 211, 240, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 274, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 269, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 248, 272, 238, 378, 476, 477, 236, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 260, 283, 407, 342,
	408, 284, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 286, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 268, 519, 497, 493, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 278, 482, 507, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 496, 452, 212, 419, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 246, 396, 0, 361, 343, 464, 465, 288, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 437, 234, 344, 341, 470, 262, 253,
	249, 233, 289, 351, 391, 457, 385, 0, 338, 0,
	0, 447, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 448, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 503, 0, 0, 0, 2959, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 424, 0, 0, 0, 235, 0, 422, 389, 486,
	218, 264, 415, 395, 420, 402, 267, 0, 0, 421,
	339, 472, 409, 483, 504, 505, 243, 369, 494, 461,
	500, 518, 211, 240, 383, 454, 489, 444, 362, 468,
	469, 301, 443, 274, 195, 337, 510, 209, 430, 227,
	216, 474, 492, 269, 413, 202, 456, 481, 224, 434,
	0, 0, 520, 204, 479, 453, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 476, 477, 236, 521,
	213, 499, 206, 0, 498, 371, 471, 480, 359, 349,
	205, 478, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 490, 0, 199,
	0, 449, 491, 522, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 466, 484, 495, 502, 508, 509, 511, 512, 513,
	514, 515, 517, 516, 370, 286, 445, 303, 340, 0,
	0, 388, 423, 225, 488, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 350, 436, 485, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 411, 268, 519, 497, 493, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 425, 426, 427, 428, 429, 432, 433, 438,
	439, 440, 441, 442, 450, 451, 455, 473, 475, 487,
	501, 506, 431, 278, 482, 507, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 496, 452, 212, 419, 270,
	201, 231, 215, 239, 254, 257, 296, 356, 363, 392,
	397, 275, 251, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 246, 396, 0, 361, 343, 464, 465, 288,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	393, 0, 197, 0, 437, 234, 344, 341, 470, 262,
	253, 249, 233, 289, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 376, 448, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 365,
	237, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 235, 0, 422, 389,
	486, 218, 264, 415, 395, 420, 402, 267, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 243, 369, 494,
	461, 500, 518, 211, 240, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 274, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 269, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 248, 272, 238, 378, 476, 477, 236,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 260, 283,
	407, 342, 408, 284, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 286, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 268, 519, 497, 493, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 278, 482, 507, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 496, 452, 212, 419,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 246, 396, 0, 361, 343, 464, 465,
	288, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 334, 247, 0,
	0, 393, 0, 197, 0, 437, 234, 344, 341, 470,
	262, 253, 249, 233, 289, 351, 391, 457, 385, 0,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 297, 196, 376, 448, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	365, 237, 0, 0, 0, 0, 503, 0, 0, 0,
	2866, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 235, 0, 422,
	389, 486, 218, 264, 415, 395, 420, 402, 267, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 243, 369,
	494, 461, 500, 518, 211, 240, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 274, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 269, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 476, 477,
	236, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 286, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 411, 268, 519, 497, 493, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 278, 482, 507, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 496, 452, 212,
	419, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 246, 396, 0, 361, 343, 464,
	465, 288, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 448, 266, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 467, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 235, 0,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 286, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 268, 519, 497, 493, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 0, 361, 343,
	464, 465, 288, 463, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 334,
	247, 0, 0, 393, 0, 197, 0, 437, 234, 344,
	341, 470, 262, 253, 249, 233, 289, 351, 391, 457,
	385, 0, 338, 0, 0, 447, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 297, 196, 376, 448, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 365, 237, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 424, 0, 0, 0, 235,
	0, 422, 389, 486, 218, 264, 415, 395, 420, 402,
	267, 0, 0, 421, 339, 472, 409, 483, 504, 505,
	243, 369, 494, 461, 500, 518, 211, 240, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 274, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 269, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 248, 272, 238, 378,
	476, 477, 236, 521, 213, 499, 206, 0, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 323,
	324, 260, 283, 407, 342, 408, 284, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	382, 406, 404, 410, 0, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 286,
	445, 303, 340, 0, 0, 388, 423, 225, 488, 446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	350, 436, 485, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 411, 268, 519, 497, 493,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 278, 482, 507,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 496,
	452, 212, 419, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 246, 396, 0, 361,
	343, 464, 465, 288, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 437, 234,
	344, 341, 470, 262, 253, 249, 233, 289, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 448, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 467,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	235, 0, 422, 389, 486, 218, 264, 415, 395, 420,
	402, 267, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 243, 369, 494, 461, 500, 518, 211, 240, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 274, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 269, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 476, 477, 236, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	286, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 268, 519, 497,
	493, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 278, 482,
	507, 0, 345, 0, 0, 347, 261, 281, 292, 0,
	496, 452, 212, 419, 270, 201, 231, 215, 239, 254,
	257, 296, 356, 363, 392, 397, 275, 251, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 246, 396, 0,
	361, 343, 464, 465, 288, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 334, 247, 0, 0, 393, 0, 197, 0, 437,
	234, 344, 341, 470, 262, 253, 249, 233, 289, 351,
	391, 457, 385, 0, 338, 0, 0, 447, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 297, 196, 376, 448,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 365, 237, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 375, 418, 424, 0, 0,
	0, 235, 0, 422, 389, 486, 218, 264, 415, 395,
	420, 402, 267, 0, 0, 421, 339, 472, 409, 483,
	504, 505, 243, 369, 494, 461, 500, 518, 211, 240,
	383, 454, 489, 444, 362, 468, 469, 301, 443, 274,
	195, 337, 510, 209, 430, 227, 216, 474, 492, 269,
	413, 202, 456, 481, 224, 434, 0, 0, 520, 204,
	479, 453, 358, 298, 299, 203, 0, 414, 248, 272,
	238, 378, 476, 477, 236, 521, 213, 499, 206, 0,
	498, 371, 471, 480, 359, 349, 205, 478, 357, 348,
	304, 323, 324, 260, 283, 407, 342, 408, 284, 367,
	366, 368, 198, 490, 0, 199, 0, 449, 491, 522,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 382, 406, 404, 410, 0, 466, 484, 495,
	502, 508, 509, 511, 512, 513, 514, 515, 517, 516,
	370, 286, 445, 303, 340, 0, 0, 388, 423, 225,
	488, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 350, 436, 485, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 411, 268, 519,
	497, 493, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 438, 439, 440, 441, 442,
	450, 451, 455, 473, 475, 487, 501, 506, 431, 278,
	482, 507, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 496, 452, 212, 419, 270, 201, 231, 215, 239,
	254, 257, 296, 356, 363, 392, 397, 275, 251, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 246, 396,
	0, 361, 343, 464, 465, 288, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 393, 0, 197, 0,
	437, 234, 344, 341, 470, 262, 253, 249, 233, 289,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 376,
	448, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 467, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 365, 237, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 235, 0, 422, 389, 486, 218, 264, 415,
	395, 420, 402, 267, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 243, 369, 494, 461, 500, 518, 211,
	240, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	274, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	269, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 248,
	272, 238, 378, 476, 477, 236, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 260, 283, 407, 342, 408, 284,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 286, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 1630, 411, 268,
	519, 497, 493, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	278, 482, 507, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 496, 452, 212, 419, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 435, 458, 459, 460, 462, 360, 246,
	396, 0, 361, 343, 464, 465, 288, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 1501, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 334, 247, 0, 0, 393, 0, 197,
	0, 437, 234, 344, 341, 470, 262, 253, 249, 233,
	289, 351, 391, 457, 385, 0, 338, 0, 0, 447,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 297, 196,
	376, 448, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 365, 237, 0, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 424,
	0, 0, 0, 235, 0, 422, 389, 486, 218, 264,
	415, 395, 420, 402, 267, 0, 0, 421, 339, 472,
	409, 483, 504, 505, 243, 369, 494, 461, 500, 518,
	211, 240, 383, 454, 489, 444, 362, 468, 469, 301,
	443, 274, 195, 337, 510, 209, 430, 227, 216, 474,
	492, 269, 413, 202, 456, 481, 224, 434, 0, 0,
	520, 204, 479, 453, 358, 298, 299, 203, 0, 414,
	248, 272, 238, 378, 476, 477, 236, 521, 213, 499,
	206, 0, 498, 371, 471, 480, 359, 349, 205, 478,
	357, 348, 304, 323, 324, 260, 283, 407, 342, 408,
	284, 367, 366, 368, 198, 490, 0, 199, 0, 449,
	491, 522, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 382, 406, 404, 410, 0, 466,
	484, 495, 502, 508, 509, 511, 512, 513, 514, 515,
	517, 516, 370, 286, 445, 303, 340, 0, 0, 388,
	423, 225, 488, 446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 350, 436, 485, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 411,
	268, 519, 497, 493, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	425, 426, 427, 428, 429, 432, 433, 438, 439, 440,
	441, 442, 450, 451, 455, 473, 475, 487, 501, 506,
	431, 278, 482, 507, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 496, 452, 212, 419, 270, 201, 231,
	215, 239, 254, 257, 296, 356, 363, 392, 397, 275,
	251, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	246, 396, 0, 361, 343, 464, 465, 288, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 1499, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 393, 0,
	197, 0, 437, 234, 344, 341, 470, 262, 253, 249,
	233, 289, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 376, 448, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 467, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 365, 237, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 235, 0, 422, 389, 486, 218,
	264, 415, 395, 420, 402, 267, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 243, 369, 494, 461, 500,
	518, 211, 240, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 274, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 269, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 248, 272, 238, 378, 476, 477, 236, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 260, 283, 407, 342,
	408, 284, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 286, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 268, 519, 497, 493, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 278, 482, 507, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 496, 452, 212, 419, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 246, 396, 0, 361, 343, 464, 465, 288, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 1497, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 437, 234, 344, 341, 470, 262, 253,
	249, 233, 289, 351, 391, 457, 385, 0, 338, 0,
	0, 447, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 448, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 424, 0, 0, 0, 235, 0, 422, 389, 486,
	218, 264, 415, 395, 420, 402, 267, 0, 0, 421,
	339, 472, 409, 483, 504, 505, 243, 369, 494, 461,
	500, 518, 211, 240, 383, 454, 489, 444, 362, 468,
	469, 301, 443, 274, 195, 337, 510, 209, 430, 227,
	216, 474, 492, 269, 413, 202, 456, 481, 224, 434,
	0, 0, 520, 204, 479, 453, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 476, 477, 236, 521,
	213, 499, 206, 0, 498, 371, 471, 480, 359, 349,
	205, 478, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 490, 0, 199,
	0, 449, 491, 522, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 466, 484, 495, 502, 508, 509, 511, 512, 513,
	514, 515, 517, 516, 370, 286, 445, 303, 340, 0,
	0, 388, 423, 225, 488, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 350, 436, 485, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 411, 268, 519, 497, 493, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 425, 426, 427, 428, 429, 432, 433, 438,
	439, 440, 441, 442, 450, 451, 455, 473, 475, 487,
	501, 506, 431, 278, 482, 507, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 496, 452, 212, 419, 270,
	201, 231, 215, 239, 254, 257, 296, 356, 363, 392,
	397, 275, 251, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 246, 396, 0, 361, 343, 464, 465, 288,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 1495, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	393, 0, 197, 0, 437, 234, 344, 341, 470, 262,
	253, 249, 233, 289, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 376, 448, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 365,
	237, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 235, 0, 422, 389,
	486, 218, 264, 415, 395, 420, 402, 267, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 243, 369, 494,
	461, 500, 518, 211, 240, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 274, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 269, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 248, 272, 238, 378, 476, 477, 236,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 260, 283,
	407, 342, 408, 284, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 286, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 268, 519, 497, 493, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 278, 482, 507, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 496, 452, 212, 419,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 246, 396, 0, 361, 343, 464, 465,
	288, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 1493, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 334, 247, 0,
	0, 393, 0, 197, 0, 437, 234, 344, 341, 470,
	262, 253, 249, 233, 289, 351, 391, 457, 385, 0,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 297, 196, 376, 448, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	365, 237, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 235, 0, 422,
	389, 486, 218, 264, 415, 395, 420, 402, 267, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 243, 369,
	494, 461, 500, 518, 211, 240, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 274, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 269, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 476, 477,
	236, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 286, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 411, 268, 519, 497, 493, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 278, 482, 507, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 496, 452, 212,
	419, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 246, 396, 0, 361, 343, 464,
	465, 288, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 1489, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 448, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 467, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 235, 0,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 286, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 268, 519, 497, 493, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 0, 361, 343,
	464, 465, 288, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 1487, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 334,
	247, 0, 0, 393, 0, 197, 0, 437, 234, 344,
	341, 470, 262, 253, 249, 233, 289, 351, 391, 457,
	385, 0, 338, 0, 0, 447, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 297, 196, 376, 448, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 365, 237, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 424, 0, 0, 0, 235,
	0, 422, 389, 486, 218, 264, 415, 395, 420, 402,
	267, 0, 0, 421, 339, 472, 409, 483, 504, 505,
	243, 369, 494, 461, 500, 518, 211, 240, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 274, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 269, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 248, 272, 238, 378,
	476, 477, 236, 521, 213, 499, 206, 0, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 323,
	324, 260, 283, 407, 342, 408, 284, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	382, 406, 404, 410, 0, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 286,
	445, 303, 340, 0, 0, 388, 423, 225, 488, 446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	350, 436, 485, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 411, 268, 519, 497, 493,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 278, 482, 507,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 496,
	452, 212, 419, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 246, 396, 0, 361,
	343, 464, 465, 288, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1485, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 437, 234,
	344, 341, 470, 262, 253, 249, 233, 289, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 448, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 467,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	235, 0, 422, 389, 486, 218, 264, 415, 395, 420,
	402, 267, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 243, 369, 494, 461, 500, 518, 211, 240, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 274, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 269, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 476, 477, 236, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	286, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 268, 519, 497,
	493, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 278, 482,
	507, 0, 345, 0, 0, 347, 261, 281, 292, 0,
	496, 452, 212, 419, 270, 201, 231, 215, 239, 254,
	257, 296, 356, 363, 392, 397, 275, 251, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 246, 396, 0,
	361, 343, 464, 465, 288, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 334, 247, 0, 0, 393, 0, 197, 0, 437,
	234, 344, 341, 470, 262, 253, 249, 233, 289, 351,
	391, 457, 385, 0, 338, 0, 0, 447, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 297, 196, 376, 448,
	266, 0, 1460, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 365, 237, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 375, 418, 424, 0, 0,
	0, 235, 0, 422, 389, 486, 218, 264, 415, 395,
	420, 402, 267, 0, 0, 421, 339, 472, 409, 483,
	504, 505, 243, 369, 494, 461, 500, 518, 211, 240,
	383, 454, 489, 444, 362, 468, 469, 301, 443, 274,
	195, 337, 510, 209, 430, 227, 216, 474, 492, 269,
	413, 202, 456, 481, 224, 434, 0, 0, 520, 204,
	479, 453, 358, 298, 299, 203, 0, 414, 248, 272,
	238, 378, 476, 477, 236, 521, 213, 499, 206, 0,
	498, 371, 471, 480, 359, 349, 205, 478, 357, 348,
	304, 323, 324, 260, 283, 407, 342, 408, 284, 367,
	366, 368, 198, 490, 0, 199, 0, 449, 491, 522,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 382, 406, 404, 410, 0, 466, 484, 495,
	502, 508, 509, 511, 512, 513, 514, 515, 517, 516,
	370, 286, 445, 303, 340, 0, 0, 388, 423, 225,
	488, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 350, 436, 485, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 411, 268, 519,
	497, 493, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 438, 439, 440, 441, 442,
	450, 451, 455, 473, 475, 487, 501, 506, 431, 278,
	482, 507, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 496, 452, 212, 419, 270, 201, 231, 215, 239,
	254, 257, 296, 356, 363, 392, 397, 275, 251, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 246, 396,
	0, 361, 343, 464, 465, 288, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 1360, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 393, 0, 197, 0,
	437, 234, 344, 341, 470, 262, 253, 249, 233, 289,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 376,
	448, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 467, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 365, 237, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 235, 0, 422, 389, 486, 218, 264, 415,
	395, 420, 402, 267, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 243, 369, 494, 461, 500, 518, 211,
	240, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	274, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	269, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 248,
	272, 238, 378, 476, 477, 236, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 260, 283, 407, 342, 408, 284,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 286, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 268,
	519, 497, 493, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	278, 482, 507, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 496, 452, 212, 419, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 435, 458, 459, 460, 462, 360, 246,
	396, 0, 361, 343, 464, 465, 288, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 334, 247, 0, 0, 393, 0, 197,
	0, 437, 234, 344, 341, 470, 262, 253, 249, 233,
	289, 351, 391, 457, 385, 0, 338, 0, 0, 447,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 297, 196,
	376, 448, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 1161, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 365, 237, 0, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 424,
	0, 0, 0, 235, 0, 422, 389, 486, 218, 264,
	415, 395, 420, 402, 267, 0, 0, 421, 339, 472,
	409, 483, 504, 505, 243, 369, 494, 461, 500, 518,
	211, 240, 383, 454, 489, 444, 362, 468, 469, 301,
	443, 274, 195, 337, 510, 209, 430, 227, 216, 474,
	492, 269, 413, 202, 456, 481, 224, 434, 0, 0,
	520, 204, 479, 453, 358, 298, 299, 203, 0, 414,
	248, 272, 238, 378, 476, 477, 236, 521, 213, 499,
	206, 0, 498, 371, 471, 480, 359, 349, 205, 478,
	357, 348, 304, 323, 324, 260, 283, 407, 342, 408,
	284, 367, 366, 368, 198, 490, 0, 199, 0, 449,
	491, 522, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 382, 406, 404, 410, 0, 466,
	484, 495, 502, 508, 509, 511, 512, 513, 514, 515,
	517, 516, 370, 286, 445, 303, 340, 0, 0, 388,
	423, 225, 488, 446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 350, 436, 485, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 411,
	268, 519, 497, 493, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	425, 426, 427, 428, 429, 432, 433, 438, 439, 440,
	441, 442, 450, 451, 455, 473, 475, 487, 501, 506,
	431, 278, 482, 507, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 496, 452, 212, 419, 270, 201, 231,
	215, 239, 254, 257, 296, 356, 363, 392, 397, 275,
	251, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	246, 396, 0, 361, 343, 464, 465, 288, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 393, 0,
	197, 0, 437, 234, 344, 341, 470, 262, 253, 249,
	233, 289, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 376, 448, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 467, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 365, 237, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 235, 0, 422, 389, 486, 218,
	264, 415, 395, 420, 402, 267, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 243, 369, 494, 461, 500,
	518, 211, 240, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 274, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 269, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 248, 272, 238, 378, 476, 477, 236, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 260, 283, 407, 342,
	408, 284, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 286, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 268, 519, 497, 493, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 278, 482, 507, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 496, 452, 212, 419, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 246, 396, 0, 361, 343, 464, 465, 288, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 437, 234, 344, 341, 470, 262, 253,
	249, 233, 289, 351, 391, 457, 385, 0, 338, 0,
	0, 447, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 448, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 424, 0, 0, 0, 235, 0, 422, 389, 486,
	218, 264, 415, 395, 420, 402, 267, 0, 0, 421,
	339, 472, 409, 483, 504, 505, 243, 369, 494, 461,
	500, 518, 211, 240, 383, 454, 489, 444, 362, 468,
	469, 301, 443, 274, 195, 337, 510, 209, 430, 227,
	216, 474, 492, 269, 413, 202, 456, 481, 224, 434,
	0, 0, 520, 204, 479, 453, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 476, 477, 236, 521,
	213, 499, 206, 0, 498, 371, 471, 480, 359, 349,
	205, 478, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 490, 0, 199,
	0, 449, 491, 522, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 466, 484, 495, 502, 508, 509, 511, 512, 513,
	514, 515, 517, 516, 370, 286, 445, 303, 340, 0,
	0, 388, 423, 225, 488, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 350, 436, 485, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 411, 268, 519, 497, 493, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 425, 426, 427, 428, 429, 432, 433, 438,
	439, 440, 441, 442, 450, 451, 455, 473, 475, 487,
	501, 506, 431, 597, 482, 507, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 496, 452, 212, 419, 270,
	201, 231, 215, 239, 254, 257, 296, 356, 363, 392,
	397, 275, 251, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 246, 396, 0, 361, 343, 464, 465, 288,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	393, 0, 197, 0, 437, 234, 344, 341, 470, 262,
	253, 249, 233, 289, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 376, 448, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 365,
	237, 0, 0, 544, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 235, 0, 422, 389,
	486, 218, 264, 415, 395, 420, 402, 267, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 243, 369, 494,
	461, 500, 518, 211, 240, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 274, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 269, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 248, 272, 238, 378, 476, 477, 236,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 260, 283,
	407, 342, 408, 284, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 286, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 268, 519, 497, 493, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 278, 482, 507, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 496, 452, 212, 419,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 246, 396, 0, 361, 343, 464, 465,
	288, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 334, 247, 0,
	0, 393, 0, 197, 0, 437, 234, 344, 341, 470,
	262, 253, 249, 233, 289, 351, 391, 457, 385, 0,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 297, 196, 376, 448, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	365, 237, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 235, 0, 422,
	389, 486, 218, 264, 415, 395, 420, 402, 267, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 243, 369,
	494, 461, 500, 518, 211, 240, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 274, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 269, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 476, 477,
	236, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 286, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 411, 268, 519, 497, 493, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 2964, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 278, 482, 507, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 496, 452, 212,
	419, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 246, 396, 0, 361, 343, 464,
	465, 288, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 437, 234, 344, 341,
	470, 262, 253, 249, 233, 289, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 448, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 467, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 235, 0,
	422, 389, 486, 218, 264, 415, 395, 420, 402, 267,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 243,
	369, 494, 461, 500, 518, 211, 240, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 274, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 269, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 476,
	477, 236, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 286, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 268, 519, 497, 493, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 278, 482, 507, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 496, 452,
	212, 419, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 246, 396, 0, 361, 343,
	464, 465, 288, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 334,
	247, 0, 0, 393, 0, 197, 0, 437, 234, 344,
	341, 470, 262, 253, 249, 233, 289, 351, 391, 457,
	385, 0, 338, 0, 0, 447, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 297, 196, 376, 448, 266, 0,
	0, 0, 0, 188, 2588, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 365, 237, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 424, 0, 0, 0, 235,
	0, 422, 389, 486, 218, 264, 415, 395, 420, 402,
	267, 0, 0, 421, 339, 472, 409, 483, 504, 505,
	243, 369, 494, 461, 500, 518, 211, 240, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 274, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 269, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 248, 272, 238, 378,
	476, 477, 236, 521, 213, 499, 206, 0, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 323,
	324, 260, 283, 407, 342, 408, 284, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	382, 406, 404, 410, 0, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 286,
	445, 303, 340, 0, 0, 388, 423, 225, 488, 446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	350, 436, 485, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 411, 268, 519, 497, 493,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 278, 482, 507,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 496,
	452, 212, 419, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 246, 396, 0, 361,
	343, 464, 465, 288, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 437, 234,
	344, 341, 470, 262, 253, 249, 233, 289, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 448, 266,
	0, 0, 0, 0, 188, 2110, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 467,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	235, 0, 422, 389, 486, 218, 264, 415, 395, 420,
	402, 267, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 243, 369, 494, 461, 500, 518, 211, 240, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 274, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 269, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 476, 477, 236, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	286, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 268, 519, 497,
	493, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 278, 482,
	507, 0, 345, 0, 0, 347, 261, 281, 292, 0,
	496, 452, 212, 419, 270, 201, 231, 215, 239, 254,
	257, 296, 356, 363, 392, 397, 275, 251, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 246, 396, 0,
	0, 343, 464, 465, 288,
}

var yyPact = [...]int{
	4827, -1000, -412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1982, 2144, -1000, -1000,
	-1000, -1000, 2119, -1000, 689, 1731, -1000, 1989, 331, -1000,
	42373, 477, -1000, 41171, 476, 2816, 42373, -1000, 140, -1000,
	133, 42373, 164, 40570, -1000, -1000, -316, 18323, 1920, 24,
	21, 42373, -1000, -1000, -1000, -1000, 2099, 1696, -1000, 333,
	-1000, -1000, -1000, -1000, -1000, -1000, 39969, -1000, -1000, -1000,
	2000, 1968, 2137, 612, 1905, -1000, 2046, 1696, -1000, 18323,
	2080, 2018, 17722, -1000, 17722, 427, -1000, -1000, 13505, -1000,
	-1000, 24343, 42373, 30353, 255, -1000, 1989, -1000, -1000, -1000,
	82, -1000, 318, 1594, -1000, 1587, -1000, 498, 625, 346,
	453, 451, 345, 344, 342, 339, 338, 336, 335, 326,
	352, -1000, 676, 676, -141, -144, 2774, 421, 410, 410,
	439, 1948, 1943, -1000, 668, -1000, 676, 676, 676, 325,
	676, 676, 676, 676, 293, 292, 676, 676, 676, 676,
	676, 676, 676, 676, 676, 676, 676, 676, 676, 676,
	676, 676, 676, 287, 1989, 231, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 42373, 191, 42373, -1000, 534, 42373, 782, 782,
	65, 782, 782, 782, 782, 142, 606, 20, -1000, 141,
	271, 137, 225, 781, 329, -1000, -1000, 214, 781, 1248,
	-1000, 620, 134, -1000, 782, 782, -1000, 11081, 148, 11081,
	11081, -1000, 1981, -1000, -1000, -1000, -1000, 1008, -1000, 438,
	-1000, -1000, -1000, -1000, 42373, 39368, 328, 704, -1000, -1000,
	-1000, 48, -1000, -1000, 1349, 1165, 18323, 935, -1000, 1533,
	591, -1000, -1000, -1000, -1000, -1000, 510, 18924, 18924, 18924,
	18924, -1000, -1000, 1520, 1520, 1520, 1520, 18924, 1520, 18924,
	1520, 1520, 1520, 1520, 18323, 1520, 1520, 1520, -1000, 1520,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 533,
	1520, 1520, 1520, 1520, 1520, -1000, -1000, -1000, -1000, 1520,
	1520, 1520, 1520, 1520, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21934, -1000, 15919, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42373, -1000, 1520, 185,
	42373, 42373, 332, 2046, 1696, -1000, 2099, 2058, 333, -1000,
	2221, 1634, 1519, 1127, 1696, 1546, 42373, -1000, 1599, -1000,
	-1000, -1000, 1839, 1175, 1246, -1000, -1000, -1000, -1000, 1183,
	18323, -1000, -1000, 2116, -1000, 21333, 531, 863, 2114, 38767,
	-1000, 427, 427, 1581, 12899, -12, -1000, -1000, -1000, 701,
	27949, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1981, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1676, 42373, -1000, -1000, 4317, 1225, -1000,
	1730, -1000, 1674, -1000, 1690, 18323, 1741, 473, 1225, 470,
	462, 449, -1000, -69, -1000, -1000, -1000, -1000, -1000, -1000,
	676, 676, 676, -1000, 348, 2078, 331, 3858, -1000, -1000,
	-1000, 38166, 1723, 1225, -1000, 1721, -1000, 776, 522, 555,
	555, 1225, -1000, -1000, 42373, 1225, 775, 774, 1225, 1225,
	42373, 42373, -1000, 37565, -1000, 36964, 36363, 1105, 42373, 35762,
	35161, 34560, 33959, 33358, -1000, 1908, -1000, 1728, -1000, -1000,
	-1000, 42373, 1225, 42373, 42373, 298, -1000, -1000, 42373, 1225,
	-1000, -1000, 1091, 1090, 1089, 676, 676, 1086, 1245, 1241,
	1236, 676, 676, 1080, 1235, 29151, 1232, 267, 1076, 1060,
	1056, 1093, 1231, 187, 1227, 1073, 972, 1055, 42373, 1720,
	42373, -1000, 210, 634, 390, 696, 1989, 1916, 1563, 436,
	472, 1225, 415, 415, 42373, -1000, 11687, -1000, -1000, 1224,
	18323, -1000, 785, 781, 781, -1000, -1000, -1000, -1000, -1000,
	-1000, 782, 42373, 785, -1000, -1000, -1000, 781, 782, 42373,
	782, 782, 782, 782, 781, 781, 781, 782, 42373, 42373,
	42373, 42373, 42373, 42373, 42373, 42373, 42373, 11081, 620, 782,
	-324, -1000, 1218, -1000, 1821, -1000, -1000, -1000, -1000, -1000,
	-1000, 11081, 11081, -1000, -1000, -1000, -1000, 163, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -88, 1555, 32757,
	-1000, -326, -327, -328, -334, -1000, -1000, -1000, -335, -336,
	-1000, -1000, -1000, 18323, 18323, 18323, 18323, -178, -1000, 830,
	18924, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 928, 803,
	18924, 18924, 18924, 18924, 18924, 18924, 18924, 18924, 18924, 18924,
	18924, 18924, 18924, 18924, 18924, 26146, 6644, 6644, 591, 591,
	591, 591, -1000, 17722, 18323, 18323, 591, -1000, 1225, 32156,
	17722, 17722, 18323, 1957, 641, 1165, 42373, -1000, 1127, -1000,
	-1000, -1000, 1024, -1000, 42373, 42373, 105, 18323, 18323, 18323,
	18323, 18323, 18323, 14712, 18323, 18323, 18323, 18323, 18323, 18323,
	18323, 18323, 18323, 18323, 18323, 18323, 18323, 18323, 18323, 18323,
	18323, 18323, 18323, 18323, 18323, 18323, 18323, 18323, 18323, 18323,
	14111, 11687, 17722, 17722, 17722, 17722, 17722, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 527,
	1363, 1340, 1569, -1000, 1551, -1000, -168, 23742, 18323, 1214,
	2113, 1754, 42373, -1000, -1000, -1000, 2046, -1000, 2046, 1363,
	2133, 1851, 17722, -1000, -1000, 2133, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1362, -1000, 42373, 1546, 2015, 42373,
	1831, 1206, 343, -1000, 18323, 18323, 1530, -1000, 978, 42373,
	-1000, -178, -1000, 31555, -1000, -1000, 10475, -1000, 42373, 317,
	42373, -1000, 23141, 30954, 12293, -12, -1000, 12293, 1453, -1000,
	1, -18, 15313, 584, -1000, -1000, -1000, 2774, 20126, 1312,
	584, 77, -1000, -1000, -1000, 1690, -1000, 1690, 1690, 1690,
	1690, 343, 343, 343, 343, -1000, -1000, -1000, -1000, -1000,
	1719, 1718, -1000, 1690, 1690, 1690, 1690, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1713, 1713, 1713, 1692, 1692, 394,
	-1000, 18323, 383, 30353, 1997, 1054, 1395, 210, 424, 1751,
	1225, 1225, 1225, 424, -1000, 1331, 1304, 1267, -1000, -404,
	1507, -1000, -1000, 2077, -1000, -1000, 637, 831, 809, 693,
	42373, 196, 316, -1000, 408, -1000, 30353, 1225, 770, 555,
	1225, -1000, 1225, -1000, -1000, -1000, -1000, -1000, 1225, -1000,
	-1000, 1504, -1000, 1394, 848, 799, 838, 778, 1504, -1000,
	-1000, -121, 1504, -1000, 1504, -1000, 1504, -1000, 1504, -1000,
	1504, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	702, 172, 42373, 196, 26146, -1000, 434, -1000, -1000, -1000,
	26146, 26146, -1000, -1000, -1000, -1000, 1203, 1188, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -389, 42373, -1000,
	199, 687, 296, 334, 259, 42373, 201, 2027, 2026, 2022,
	224, 291, 42373, 42373, 415, 1778, 42373, 2006, 42373, -1000,
	-1000, -1000, -1000, -1000, 1165, 42373, -1000, -1000, 782, 782,
	-1000, -1000, 42373, 782, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 782, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 42373, -1000,
	-1000, -1000, -1000, 42373, -1000, -1000, -1000, -1000, -1000, 72,
	-2, 320, -1000, -1000, -1000, -1000, -1000, 2040, -1000, 1165,
	768, 721, -1000, 1520, -1000, -1000, 893, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 928, 18924, 18924, 18924, 1247, 464,
	1547, 895, 827, 873, 873, 730, 730, 600, 600, 600,
	600, 600, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1185, -1000, 1655, -1000, 1400, 1372, 1127, -1000, 1655, 1655,
	1009, 17722, -1000, -1000, 735, -1000, 18323, 1127, -1000, -1000,
	1127, 1127, 1495, 1491, 2112, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1197, 1395, 1395, 1395,
	1395, 1395, 18323, 1209, -1000, -1000, -1000, 1915, 1883, 1127,
	1349, 1127, 1481, -1000, 1867, 1395, 1861, 1841, 1830, 1213,
	1782, 1769, 1756, 1395, 1395, 1395, 1122, 1752, 1745, 1740,
	1734, 1714, 1654, 1641, 1636, 1632, 1395, 1127, 17722, 17722,
	1474, 1520, 526, -1000, 1655, 1127, 1127, 1655, 1655, 11687,
	1127, -1000, 42373, -1000, -309, -1000, -29, 593, 1520, -1000,
	29151, 1127, -1000, 5828, -1000, 43575, -1000, -1000, -1000, -1000,
	-1000, 27348, 1455, 2133, -1000, -1000, 1520, 1670, -1000, -1000,
	343, 47, 26747, -1000, -1000, 1165, 1165, 18323, -1000, -1000,
	-1000, -1000, -1000, -1000, 523, 2098, 337, 1520, -1000, 1540,
	1991, -1000, -1000, -1000, 2014, 20732, -1000, 1520, 1520, 42373,
	1601, 1412, -1000, 518, -1000, 1453, -12, -21, -1000, -1000,
	-1000, -1000, 1165, -1000, 1173, 319, 609, -1000, 392, -1000,
	-1000, -1000, -1000, 1925, 64, -1000, -1000, -1000, 343, 343,
	-1000, -1000, -1000, -1000, -1000, -1000, 1180, 1180, -1000, -1000,
	-1000, -1000, -1000, 1049, -1000, -1000, -1000, 1048, -1000, -1000,
	1588, 1781, 383, -1000, -1000, 676, 1176, -1000, -1000, 1928,
	676, 676, 42373, -1000, -1000, 1308, 1997, 199, 42373, 717,
	1775, -1000, 1751, 1751, 1751, 42373, -1000, -1000, -1000, -1000,
	-1000, -1000, -400, 63, 288, -1000, -1000, -1000, 3522, 42373,
	1663, -1000, 188, -1000, 1290, -1000, 42373, -1000, 1660, 1709,
	1225, 1225, -1000, -1000, -1000, 42373, 1520, -1000, -1000, -1000,
	-1000, 446, 1985, 232, -1000, -1000, -232, 196, 188, 584,
	1225, -1000, -1000, -1000, -1000, -1000, -393, 1658, 443, 198,
	284, 42373, 42373, 42373, 42373, 42373, 500, -1000, -1000, -1000,
	-1000, 176, -1000, -1000, 176, -1000, -1000, -1000, -1000, 236,
	430, -1000, 42373, 42373, 572, -1000, -1000, -1000, 781, -1000,
	-1000, 781, -1000, -1000, -1000, -1000, -1000, 1977, 42373, -6,
	-360, -1000, -353, 18323, -1000, -1000, -1000, -1000, 909, 445,
	1547, 18924, 18924, 17722, -113, 1325, 1325, 26146, -1000, -1000,
	-1000, 18323, 18323, 1448, 694, -1000, 18323, 818, -1000, -1000,
	-1000, 18323, 18323, 18323, 1127, 275, -1000, -1000, -1000, -1000,
	-1000, 2111, -1000, 18323, 18323, 18323, -1000, -1000, 18323, 18323,
	-1000, 18323, 18323, 19525, 1127, 19525, 18323, 18323, 19525, -1000,
	-1000, -1000, -1000, 19525, 18323, 18323, 18323, 18323, 18323, 18323,
	18323, 18323, 18323, -1000, -1000, 1655, 1655, 17722, 11687, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 593,
	-1000, 555, 555, 555, 42373, -1000, -1000, -1000, -1000, -1000,
	-1000, 1443, 2030, -1000, 1868, 1858, 2101, 2098, -1000, 23141,
	2133, -1000, -1000, 42373, -302, -1000, 1912, 1888, -1000, -1000,
	-1000, -1000, 9869, 2046, 18323, 1773, 42373, 1520, -1000, 22540,
	42373, 42373, 23141, 23141, 23141, 23141, 23141, -1000, 1814, 1801,
	-1000, 1835, 1793, 1923, 42373, -1000, 1652, 1127, 2058, 20732,
	333, 18323, 24944, 1420, 23141, -1000, -1000, 23141, 42373, 9263,
	-1000, -1000, -7, -24, -1000, -1000, -1000, -1000, 2774, -1000,
	-1000, 3006, 2012, 1918, -1000, -1000, -1000, -1000, 1642, -1000,
	1584, 1433, 1579, 172, -1000, 1739, 1975, 676, 676, -1000,
	1045, -1000, 1225, 1174, 1164, -1000, -1000, -1000, 441, -1000,
	2005, 42373, 1772, 1770, 1768, -1000, -401, 1033, 1708, 1738,
	18323, 1699, 2075, 1373, 42373, -1000, -1000, 42373, -1000, 274,
	-1000, 383, 42373, -1000, -1000, -1000, 316, 42373, -1000, 5961,
	-1000, -1000, -1000, 188, -1000, -1000, -1000, -1000, -1000, -1000,
	42373, 258, -1000, 1695, 884, -1000, -1000, 1748, -1000, -1000,
	-1000, -1000, 158, 273, 154, 1163, 154, -1000, 42373, 543,
	1781, 42373, -1000, -1000, -1000, 782, 782, -1000, -1000, 1974,
	-1000, 1225, 1395, 18924, 18924, -1000, 591, -1000, 1520, 1127,
	1690, 1690, -1000, 1690, 1692, -1000, 1690, 125, 1690, 123,
	1690, -1000, -1000, 1127, 1127, 1095, 1003, -76, -1000, 1165,
	18323, 1616, 1541, 1395, -1000, 1683, 1681, 18323, 1395, 1395,
	1395, -1000, 1165, 1213, 1523, 1477, -1000, -1000, -1000, -1000,
	1425, 1395, 1496, -300, 1127, 1577, 1577, 1577, 1577, 1577,
	1569, 1569, 1569, 1569, -1000, -1000, 1127, -1000, -1000, 2033,
	2033, 2033, 1524, 42974, 42373, -1000, -1000, -1000, -1000, 2098,
	2092, 1407, -1000, -1000, 47, 391, -1000, 1896, 1888, -1000,
	2072, 1891, 2066, -1000, -1000, -1000, 1165, -1000, 1993, 1427,
	-1000, 682, 1316, -1000, -1000, 17121, 1542, 1855, 515, 1524,
	1534, 1991, 1747, 1766, 2227, -1000, -1000, -1000, -1000, 1794,
	-1000, 1792, -1000, -1000, 1599, -1000, -1000, 1340, 1127, 1459,
	317, 23141, 1471, 1471, -1000, 513, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 855, 5656, 2126, -1000, 1155, -1000, 1146,
	192, 1032, -1000, -1000, 676, 676, -1000, 757, 741, -1000,
	42373, 1680, -1000, 343, 1154, 343, 1020, -1000, 1015, -1000,
	-1000, -1000, -1000, 1705, 1844, -1000, -1000, -1000, -1000, 42373,
	-1000, -1000, 42373, 42373, 42373, 1679, 2065, -1000, 18323, 1647,
	680, 1466, 42373, 42373, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 418, 676, -368, 289, 281,
	676, 676, 676, -403, -1000, -1000, 1521, 1513, -1000, -148,
	-1000, 18323, -1000, -1000, -1000, 1005, 1005, -1000, 1599, -1000,
	-1000, -1000, 1286, -1000, -1000, -123, 42373, 42373, 42373, 42373,
	-1000, 886, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 591, 18924, -1000, -1000, 343, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18323, -1000,
	18323, -1000, 2046, 1151, 1165, 18323, 18323, -1000, 1011, 999,
	1395, -1000, -1000, -1000, 1127, 19525, -1000, 19525, -1000, 18323,
	221, 1325, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1520, 1886, 1520, 1520, 24944, -1000, -1000,
	2092, 2084, 2062, 1876, 1893, 1893, 1896, -1000, 2055, 2054,
	-1000, 1147, 2052, 1139, 733, -1000, 42373, 18323, 1520, -1000,
	351, 42373, 1520, 42373, -1000, 2082, -1000, -1000, 18323, 1645,
	-1000, 18323, -1000, -1000, -1000, -1000, -1000, -1000, 6644, 2098,
	1471, -1000, -1000, 608, -1000, 18323, -1000, -1000, -1000, 4274,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1135, 1132,
	-1000, -1000, 1631, 18323, -1000, -1000, -1000, 1283, 1278, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1599, -1000, -1000,
	-1000, -1000, 316, -397, 1431, 42373, 952, -1000, 1497, 1373,
	300, 1520, 1131, 676, 676, 676, 904, 881, 29151, 1488,
	-1000, 42373, 349, -1000, 316, -1000, -158, -159, 1395, -1000,
	-1000, 2011, -1000, -1000, 11687, -1000, -1000, 1597, 1749, -1000,
	-1000, -1000, 303, -1000, 1395, 1395, 1127, -1000, 1395, 1395,
	1265, 1255, -1000, -1000, 1477, -1000, 879, -1000, 221, 1127,
	1765, -1000, -1000, 6644, -1000, 25545, -1000, 2051, 2049, 29752,
	29752, 593, 2084, -1000, 18323, 18323, 1872, 932, -1000, -1000,
	-1000, -1000, 1126, 1121, -1000, 1119, -1000, 2124, -1000, 1165,
	-1000, 1520, -1000, 506, 1316, -1000, 2046, 1165, 42373, 1165,
	45, 2082, -1000, 1395, -1000, 1520, 1520, 1520, 1520, 1520,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, -1000, -1000, 42373,
	1301, -1000, -1000, 2001, 1468, 61, -1000, 1441, -1000, -1000,
	486, -1000, 18323, -1000, 29151, 1118, 1110, -1000, -1000, -1000,
	-1000, -403, -1000, -1000, -1000, -1000, -1000, -1000, 333, 1351,
	-1000, 638, 42373, 42373, 1127, 290, -127, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18323, -1000, 1127, 1762,
	-1000, -254, -1000, 1438, -1000, -1000, -1000, -1000, -1000, 1438,
	1438, -1000, -1000, 1165, 1349, -1000, 866, -1000, -1000, -1000,
	-1000, -1000, 42373, 1316, 42373, -1000, 1430, 1127, 1520, 2046,
	-1000, 1414, -1000, 333, -1000, 1467, 1738, -1000, -1000, -1000,
	16520, -1000, -1000, -1000, -1000, -1000, 226, -122, 11687, 8657,
	1377, -1000, -1000, 1827, -116, -132, 1213, -1000, -341, -1000,
	-1000, 28550, -1000, -1000, -1000, -1000, -1000, 1268, -1000, -1000,
	24944, 41772, -1000, -101, 270, -122, 18323, 1332, 1127, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -25, -1000, -1000,
	-1000, -1000, -1000, 1748, -1000, 1824, -1000, 1127, -1000, -1000,
	-1000, 1366, -1000, 4145, -263, 1761, -1000, -105, -1000, -1000,
	-1000, 835, 951, -1000, -1000, -1000, -1000, -1000, -1000, 862,
	42373, -1000, 385, -1000, -1000, -123, -124, -1000, -1000, 41772,
	-258, 584, 6644, -1000, 1757, 1753, 2109, -1000, -1000, -1000,
	-1000, -1000, -1000, -409, 1357, 208, -1000, -128, -1000, -1000,
	2004, 45, -1000, 2123, -1000, 2121, 597, 597, -1000, 878,
	-409, -1000, -138, -269, -1000, -1000, -1000, -1000, -1000, 389,
	949, -1000, -1000, -1000, -1000, 6644, -1000, -1000, -1000, 194,
	194, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2521, 2516, 28, 5, 36, 34, 2515, 41, 102,
	177, 30, 210, 106, 2514, 2513, 2512, 2511, 2510, 2508,
	2506, 222, 220, 212, 2505, 2504, 2503, 2502, 2498, 2497,
	2494, 2489, 2487, 2486, 215, 168, 176, 2485, 2484, 2483,
	127, 179, 93, 95, 183, 2482, 2481, 85, 2480, 2479,
	2477, 190, 189, 187, 752, 2472, 185, 125, 44, 2469,
	2466, 2462, 2461, 2446, 2444, 2443, 2442, 2440, 2439, 2436,
	2435, 2432, 2429, 2428, 2427, 2426, 282, 2425, 2424, 15,
	2423, 83, 2422, 2421, 2420, 2419, 142, 2418, 2417, 2416,
	35, 2414, 2411, 2410, 2409, 2406, 2405, 2404, 154, 2403,
	2402, 2401, 2400, 191, 2398, 2396, 264, 117, 124, 2395,
	2394, 107, 184, 2393, 130, 2392, 2391, 2390, 161, 2389,
	5897, 2388, 75, 71, 2386, 79, 96, 70, 66, 24,
	9, 2382, 2379, 74, 88, 2376, 115, 89, 2374, 118,
	103, 2373, 2371, 16, 7, 2370, 1, 4, 2, 81,
	2369, 2368, 123, 2366, 2365, 2364, 104, 2362, 2361, 4339,
	2360, 99, 148, 108, 82, 2359, 47, 77, 2358, 2343,
	2341, 2338, 2337, 58, 2336, 2335, 2334, 153, 110, 173,
	37, 50, 45, 143, 2333, 38, 84, 2332, 152, 149,
	2331, 60, 40, 48, 2330, 69, 144, 128, 27, 97,
	150, 2329, 2327, 61, 94, 2325, 2322, 2321, 2319, 2318,
	2317, 76, 2316, 59, 2313, 213, 2312, 19, 2309, 52,
	46, 2308, 67, 132, 78, 32, 2307, 192, 2306, 55,
	172, 138, 166, 2305, 2302, 2301, 2298, 175, 269, 2289,
	2287, 131, 167, 157, 159, 98, 2281, 311, 2280, 2278,
	105, 1318, 2475, 20, 169, 2277, 2276, 4210, 147, 39,
	23, 2274, 205, 2271, 2270, 2267, 193, 174, 122, 984,
	65, 2265, 2260, 13, 2255, 2253, 2249, 2243, 2241, 2240,
	86, 33, 31, 29, 196, 63, 11, 163, 80, 2239,
	2236, 2235, 136, 101, 2234, 165, 164, 137, 111, 2231,
	181, 156, 145, 2230, 116, 26, 2229, 2227, 2226, 2224,
	100, 2223, 2222, 2221, 2211, 162, 155, 134, 91, 2210,
	92, 133, 160, 158, 53, 2206, 43, 2199, 2194, 21,
	180, 25, 2189, 12, 68, 73, 22, 120, 141, 2187,
	0, 2185, 14, 170, 303, 171, 2184, 2183, 6, 8,
	10, 2182, 2178, 2177, 2176, 151, 2172, 2167, 2166, 2159,
	18, 49, 17, 3, 126, 90, 2158, 2154, 4956, 2467,
	140, 2152, 194,
}

//line sql.y:7082
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 366, 367, 367, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 340, 340,
	340, 343, 343, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	370, 370, 154, 154, 152, 152, 153, 153, 222, 222,
	24, 25, 25, 232, 232, 231, 231, 231, 233, 233,
	233, 233, 269, 269, 26, 26, 26, 26, 26, 104,
	104, 342, 342, 341, 333, 333, 332, 332, 331, 339,
	339, 338, 338, 337, 38, 39, 48, 48, 48, 48,
	49, 50, 344, 344, 306, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 308, 308, 294, 294, 307, 307, 307, 307, 307,
	307, 307, 293, 293, 115, 115, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 359, 359, 359, 358, 358, 202, 202,
	202, 202, 202, 202, 202, 202, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 360, 360, 360, 360, 273, 273, 273,
	273, 276, 276, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 275, 275, 275, 275, 275, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 279, 279, 279,
	279, 279, 279, 279, 279, 292, 292, 280, 280, 287,
	287, 288, 288, 288, 289, 289, 289, 290, 290, 285,
	285, 285, 285, 285, 285, 286, 286, 286, 295, 320,
	320, 319, 319, 317, 317, 317, 317, 317, 317, 317,
	317, 304, 304, 314, 314, 314, 314, 314, 303, 303,
	299, 299, 299, 300, 300, 301, 301, 298, 298, 302,
	302, 316, 316, 315, 315, 296, 296, 297, 297, 322,
	361, 361, 361, 361, 361, 362, 362, 323, 351, 353,
	353, 353, 352, 352, 349, 350, 348, 348, 348, 348,
	348, 81, 81, 81, 245, 245, 246, 246, 312, 312,
	311, 311, 311, 313, 313, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 240, 240, 240, 347,
	347, 347, 347, 347, 347, 346, 346, 346, 309, 309,
	309, 345, 345, 57, 57, 186, 186, 364, 364, 365,
	365, 365, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 46,
	46, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 86, 86, 87, 87, 87,
	87, 89, 89, 89, 325, 325, 58, 58, 3, 3,
	142, 144, 145, 145, 143, 143, 143, 143, 143, 143,
	60, 60, 59, 59, 147, 146, 148, 148, 148, 1,
	1, 2, 2, 4, 4, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 291, 291, 291,
	324, 324, 326, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 92, 91, 91, 90, 93, 93, 93,
	93, 93, 93, 93, 93, 328, 328, 328, 61, 61,
	329, 281, 282, 283, 5, 6, 305, 327, 100, 100,
	28, 37, 37, 29, 29, 29, 29, 30, 30, 62,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 239, 239, 248, 248, 238, 238, 262, 262, 262,
	241, 241, 241, 242, 242, 357, 357, 357, 235, 235,
	64, 64, 64, 66, 66, 67, 68, 68, 264, 264,
	265, 265, 69, 70, 82, 82, 82, 82, 82, 82,
	85, 85, 85, 15, 15, 15, 15, 78, 78, 78,
	14, 14, 65, 65, 72, 354, 354, 355, 356, 356,
	356, 356, 73, 75, 31, 31, 31, 31, 31, 31,
	110, 110, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 105, 105, 105, 99, 99, 371,
	76, 77, 77, 103, 103, 103, 96, 96, 96, 102,
	102, 102, 16, 16, 17, 221, 221, 18, 18, 107,
	107, 109, 109, 109, 109, 109, 111, 111, 111, 111,
	111, 111, 111, 106, 106, 108, 108, 108, 108, 255,
	255, 255, 254, 254, 136, 136, 138, 137, 137, 139,
	139, 140, 140, 140, 140, 184, 184, 162, 162, 219,
	219, 217, 217, 218, 218, 220, 220, 220, 220, 223,
	223, 141, 141, 141, 141, 149, 149, 150, 150, 151,
	151, 263, 263, 260, 260, 260, 259, 259, 155, 155,
	155, 157, 156, 156, 156, 156, 158, 158, 160, 160,
	159, 159, 161, 166, 166, 165, 165, 163, 163, 163,
	163, 164, 164, 164, 164, 167, 167, 120, 120, 120,
	120, 120, 120, 120, 131, 131, 131, 131, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 83, 83, 83, 236, 236,
	168, 168, 176, 176, 176, 176, 169, 169, 169, 169,
	169, 169, 169, 177, 177, 177, 183, 178, 178, 174,
	174, 174, 174, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 271, 271, 336, 336, 335, 335, 334, 334, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	372, 372, 284, 284, 284, 284, 175, 175, 175, 175,
	175, 101, 101, 101, 101, 101, 268, 268, 268, 272,
	272, 272, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 189, 189, 97,
	97, 187, 187, 188, 190, 190, 185, 185, 185, 171,
	171, 171, 191, 191, 192, 192, 193, 193, 195, 194,
	194, 196, 197, 197, 197, 198, 198, 199, 199, 199,
	47, 47, 47, 47, 47, 42, 42, 42, 42, 43,
	43, 43, 43, 112, 112, 112, 112, 114, 114, 113,
	113, 79, 79, 80, 80, 80, 118, 118, 119, 119,
	119, 116, 116, 117, 117, 215, 215, 200, 200, 200,
	207, 207, 207, 203, 203, 205, 205, 205, 206, 206,
	206, 204, 212, 212, 214, 214, 213, 213, 209, 209,
	210, 210, 211, 211, 211, 208, 208, 170, 170, 170,
	170, 170, 216, 216, 216, 216, 224, 224, 180, 180,
	182, 182, 181, 135, 225, 225, 229, 226, 226, 230,
	230, 230, 230, 230, 227, 227, 228, 228, 256, 256,
	256, 234, 234, 247, 247, 243, 243, 244, 244, 237,
	237, 249, 249, 249, 74, 179, 179, 321, 321, 318,
	252, 252, 253, 253, 257, 257, 261, 261, 258, 258,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 368, 369,
	266, 267, 267, 267,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 3, 3, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 4, 4, 2, 11, 3, 6, 8, 6,
	6, 6, 13, 8, 6, 10, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	8, 4, 1, 3, 3, 6, 7, 7, 8, 4,
	0, 1, 0, 1, 3, 3, 1, 1, 2, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 3, 3, 0, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 3, 4, 3, 7, 0,
	3, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 6, 6, 6,
	2, 2, 3, 3, 3, 1, 1, 1, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 6,
	6, 6, 4, 4, 4, 7, 8, 6, 5, 6,
	8, 11, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 0, 2, 0, 2, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -366, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 220, -49, -39, 221,
	-50, 223, 222, 259, 224, 252, 74, 305, 306, 308,
	309, 310, 311, -85, 257, 258, 226, 36, 45, 33,
	34, 37, 230, 265, 266, 229, -10, -34, 8, -368,
	11, 436, 254, 253, 28, -12, 470, 86, -367, 610,
	-215, -200, 22, 33, 29, -199, -195, -103, -200, 20,
	18, 7, -76, -371, -76, -76, 12, 13, -76, -306,
	-308, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -330, -44, -41, 225, 222, 269,
	120, 121, 259, 260, 261, 224, 243, 258, 262, 257,
	278, -40, 81, 33, 470, 473, -313, 221, 227, 228,
	437, 123, 122, 75, 223, -310, 359, 502, 580, -56,
	582, 102, 104, 581, 44, 233, 583, 584, 585, 509,
	586, 242, 587, 588, 589, 590, 596, 551, 597, 598,
	599, 124, 7, -76, -261, -257, -340, -251, 89, 90,
	91, 467, 245, 500, 501, 294, 81, 41, 356, 359,
	502, 580, 305, 319, 313, 340, 332, 468, 503, 297,
	246, 282, 577, 330, 132, 582, 300, 504, 260, 364,
	365, 505, 366, 102, 308, 403, 595, 299, 506, 593,
	104, 581, 79, 51, 44, 255, 328, 229, 324, 583,
	283, 507, 478, 276, 123, 120, 602, 36, 322, 50,
	30, 592, 122, 49, 584, 147, 508, 585, 509, 368,
	347, 571, 48, 369, 261, 510, 84, 266, 472, 303,
	579, 370, 323, 371, 293, 591, 226, 511, 563, 372,
	373, 572, 512, 348, 352, 513, 395, 374, 609, 52,
	514, 515, 573, 121, 516, 78, 586, 80, 317, 318,
	517, 291, 244, 397, 344, 449, 456, 457, 108, 109,
	452, 110, 458, 111, 459, 460, 461, 450, 112, 105,
	451, 462, 463, 345, 346, 113, 464, 107, 106, 453,
	455, 114, 465, 242, 35, 375, 469, 295, 58, 270,
	398, 46, 350, 606, 45, 567, 518, 570, 343, 339,
	446, 53, 519, 520, 521, 522, 587, 342, 316, 338,
	601, 4, 288, 588, 62, 228, 354, 353, 355, 277,
	394, 335, 523, 524, 525, 249, 82, 526, 325, 21,
	527, 528, 376, 284, 529, 56, 530, 531, 401, 258,
	532, 54, 589, 39, 533, 263, 603, 590, 534, 535,
	536, 537, 265, 538, 378, 539, 377, 349, 351, 272,
	379, 471, 540, 304, 321, 262, 594, 541, 250, 578,
	264, 269, 257, 402, 251, 542, 543, 544, 545, 546,
	298, 562, 547, 548, 309, 596, 447, 43, 549, 550,
	551, 552, 553, 292, 287, 396, 405, 61, 83, 361,
	554, 555, 576, 315, 285, 556, 306, 55, 597, 598,
	599, 279, 600, 9, 607, 608, 381, 124, 289, 290,
	47, 336, 271, 557, 301, 558, 326, 327, 341, 314,
	337, 307, 564, 273, 382, 448, 259, 559, 404, 286,
	357, 362, 302, 475, 278, 383, 575, 474, 334, 331,
	280, 560, 384, 234, 274, 275, 561, 565, 385, 386,
	296, 387, 388, 389, 390, 391, 393, 392, 281, 473,
	312, 329, 363, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 445, 232, -76, 232, -159, -257, 232, -227, 365,
	-248, 367, 380, 375, 385, 373, -239, 376, 378, 272,
	-357, 395, 232, 382, 220, 368, 377, 386, 387, 296,
	393, 388, 392, 281, 389, 390, 391, -340, 173, 585,
	600, 132, 333, 372, 370, 396, 567, -257, 307, -264,
	312, -252, -340, -251, 310, -159, -82, 563, 224, -266,
	-266, -105, 567, 569, -178, -120, 140, -131, -134, -125,
	-126, -172, -173, -174, -175, -132, -185, 162, 163, 170,
	141, -183, -135, 26, 466, 438, 437, 173, 31, 216,
	68, 69, 440, 441, 143, 57, 413, 414, -133, 408,
	415, 410, 443, 444, 115, 445, 105, 107, 106, 446,
	447, 448, 345, 346, 449, 450, 451, 108, 109, 110,
	111, 112, 113, 114, 452, 455, 453, 454, 456, 457,
	458, 463, 464, 459, 460, 461, 462, 465, -252, -257,
	237, 407, 231, 168, 436, -127, -123, -8, -181, 406,
	411, 412, 416, 409, -340, -251, -129, -128, -168, 92,
	98, 103, 99, -363, 116, -368, 93, 94, 95, 96,
	97, 117, 118, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 44, 381, 381, -159, -76,
	-76, -76, -76, -193, -103, -195, -10, -8, -368, 8,
	-76, -8, -9, -13, -34, -36, 496, -35, -257, -200,
	-215, 12, 158, 42, 50, -198, -199, -12, -8, -120,
	19, 23, 24, -108, 164, -120, -257, -77, -108, -237,
	236, -76, -76, -226, -269, 307, -230, 396, 395, -253,
	-228, -252, -250, -227, 394, 225, 23, 476, 139, 25,
	27, 142, 173, 127, 19, 143, 37, 227, 333, 243,
	172, 239, 437, 220, 72, 477, 408, 410, 406, 413,
	439, 440, 407, 367, 31, 13, 479, 28, 253, 24,
	38, 166, 222, 146, 480, 256, 26, 254, 115, 118,
	482, 22, 75, 248, 14, 241, 40, 16, 483, 484,
	17, 237, 236, 158, 233, 70, 11, 216, 29, 155,
	66, 485, 134, 486, 487, 488, 489, 128, 68, 156,
	20, 604, 411, 412, 33, 568, 466, 267, 168, 73,
	59, 569, 140, 409, 490, 491, 116, 492, 119, 76,
	574, 136, 18, 71, 42, 493, 268, 494, 238, 605,
	495, 399, 496, 157, 223, 436, 69, 497, 231, 380,
	8, 442, 32, 252, 240, 126, 67, 498, 232, 145,
	443, 444, 235, 129, 117, 7, 133, 34, 12, 74,
	77, 414, 415, 416, 57, 125, 470, 144, 15, 499,
	400, 138, 132, -307, 156, -293, -297, -252, 247, -323,
	243, -159, -316, -315, -252, -368, -104, -247, 233, 241,
	240, 133, -344, 136, 289, 407, 231, -51, -52, -53,
	-227, 172, 584, -86, 264, 268, 87, 87, -297, -296,
	-295, -345, 268, 247, -322, -314, 239, 248, -303, 240,
	241, -298, 233, 134, -345, -298, 238, 248, 243, 247,
	268, 268, 124, 268, 124, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 263, -304, 148, -304, 474, 474,
	-310, -345, 243, -345, -345, 235, 35, 35, -249, -298,
	235, 25, -304, -304, -304, -227, 172, -304, -304, -304,
	-304, 276, 276, -304, -304, -304, -304, -304, -304, -304,
	-304, -304, -304, -304, -304, -304, -304, -304, -304, -304,
	232, -344, -112, 392, 296, 81, -54, 278, -37, -159,
	-247, 233, 234, -344, 265, -159, 217, -159, -241, 156,
	15, -241, -238, 381, 379, 366, 371, -241, -241, -241,
	-241, 279, 364, -299, 233, 35, 244, 381, 279, 364,
	279, 280, 279, 280, 374, 384, 279, -262, 14, 158,
	407, 369, 373, 272, 232, 273, 234, 383, 280, -262,
	93, -242, 156, 381, 275, -241, -241, -267, -368, -253,
	333, -340, 570, -267, -267, 32, 90, 235, -252, -78,
	-252, 93, -15, -11, -22, -21, -23, 148, -110, 381,
	-98, 173, 585, 571, 572, 573, 570, 378, 578, 576,
	574, 279, 575, 87, 136, 138, 139, 4, -120, 155,
	-169, 148, 149, 150, 151, 152, 153, 154, 158, 140,
	142, 156, 157, 137, 159, 160, 161, 162, 163, 164,
	165, 167, 166, 168, 169, 172, 218, 219, -126, -126,
	-126, -126, -183, -368, -368, -368, -126, -236, -368, -126,
	-368, -368, -368, -368, -189, -120, -368, -372, -368, -372,
	-372, -284, -368, -284, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, 217, -368, -368, -368, -368, -368, -284, -284, -284,
	-284, -284, 103, 98, 92, -185, 99, 93, -252, -257,
	-8, -9, -178, -266, -354, -355, -162, -159, -368, 296,
	-252, -252, 265, -198, -12, -8, -193, -199, -195, -8,
	-76, -96, -109, 63, 64, -111, 24, 38, 67, 65,
	23, -369, 88, -369, -215, -369, 87, -36, -219, 86,
	61, 43, 93, 93, 87, 21, -194, -196, -120, 14,
	-255, 4, -254, 25, -252, 93, 217, 101, 14, -160,
	29, -159, -237, -237, 87, 307, -230, -269, -232, -231,
	397, 399, 148, -256, -252, 93, 31, 88, 87, -159,
	-273, -276, -278, -277, -279, -274, -275, 330, 331, 173,
	334, 336, 337, 338, 339, 340, 341, 342, 343, 344,
	347, 32, 255, 326, 327, 328, 329, 348, 349, 350,
	351, 352, 353, 354, 355, 313, 332, 468, 314, 315,
	316, 317, 318, 319, 321, 322, 323, 324, 325, -343,
	-340, 86, 88, 87, -280, 86, -120, -112, 232, -340,
	233, 233, 233, -76, 436, -304, -304, -304, 263, 19,
	-44, -41, -330, 18, -40, -41, 225, 120, 121, 222,
	86, -293, 86, -302, -343, -340, 86, 134, 238, 133,
	-301, -298, -301, -302, -340, -185, -340, 134, 134, -340,
	-340, -223, -252, -223, -223, 23, -223, 23, -223, 23,
	95, -252, -223, 23, -223, 23, -223, 23, -223, 23,
	-223, 23, 31, 78, 79, 80, 31, 82, 83, 84,
	-185, -340, -185, -293, -227, -159, -340, 95, 95, 95,
	-304, -304, 95, 93, 93, 93, -304, -304, 95, 93,
	-259, -257, 93, 93, -346, 249, 293, 295, 95, 95,
	95, 95, 31, 93, -347, 31, 592, 591, 593, 594,
	595, 93, 95, 31, 95, 31, 95, -252, 86, -159,
	-118, 283, 220, 222, 225, 76, 93, 297, 301, 302,
	148, 44, 87, 235, 232, -340, -243, 237, -243, -252,
	-258, -257, -250, 93, -120, -300, 14, 158, -262, -262,
	-241, -159, -300, -262, -241, -159, -241, -241, -241, -241,
	-262, -262, -262, -241, -257, -257, -159, -159, -159, -159,
	-159, -159, -159, -267, -242, -241, 570, 93, -235, 14,
	76, -267, -267, -265, 310, 344, 564, 565, 566, 87,
	470, -152, -159, 570, 570, 570, 570, 570, 570, -120,
	-120, -120, -120, 492, -176, 116, 140, 117, 118, -134,
	-177, -181, -183, 100, 158, 142, 156, 157, -125, -126,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -125, -268, -252, 93, 173, -130, -129, 99,
	-363, -130, -106, -108, -120, -120, -340, -252, -106, -106,
	-120, -102, 24, 38, -187, -188, 144, -185, -369, -369,
	95, 99, -252, -252, -95, -94, 418, 419, 420, 421,
	423, 424, 425, 428, 429, 433, 434, 417, 435, 422,
	427, 430, 431, 432, 426, 329, -120, -120, -120, -120,
	-120, -120, -83, -120, 127, 128, 129, -120, -120, -179,
	-178, -339, -338, -337, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -107, 24, 38,
	-106, -253, -258, -250, -106, -107, -107, -106, -106, 217,
	-215, -369, 87, -356, 399, 400, 568, -260, 268, -259,
	25, -179, 93, 14, -221, 77, -252, -198, -198, 63,
	64, 59, -106, -111, -369, -35, 25, -217, -252, 62,
	93, -285, -227, 356, 357, -120, -120, 87, -197, 27,
	28, -159, -254, 164, -258, -159, -222, 268, -159, -137,
	-139, -140, -141, -162, -184, -368, -142, 488, 485, 14,
	-152, -153, -161, -257, -230, -232, 87, 398, 400, 401,
	76, 119, -120, -286, 172, -312, -311, -310, -293, -295,
	-296, -297, 88, -286, -289, 362, 361, -280, -280, -280,
	-280, -280, -285, -285, -285, -285, 86, 86, -280, -280,
	-280, -280, -287, 86, -287, -287, -288, 86, -288, -323,
	-120, -320, -319, -317, -318, 242, 102, 561, 517, 470,
	509, 551, 77, -315, -197, 95, -369, -118, -244, 237,
	-321, -318, -340, -340, -340, -244, -340, 93, -340, 93,
	-340, 93, -87, -58, -1, 604, 605, 606, 87, 19,
	-294, -293, -57, 293, -326, -327, 268, -322, -316, -302,
	134, -301, -302, -302, -340, 87, 29, 124, 124, 124,
	124, 470, 222, 32, -245, 508, 140, -293, -57, -268,
	235, -268, -268, 93, 93, -240, 600, -152, -114, 285,
	148, 274, 274, 232, 232, 287, -159, 298, 300, 299,
	297, 301, 302, 23, 23, 23, 286, 288, 290, 276,
	-159, -159, -243, 76, -154, -159, 26, -257, -159, -241,
	-241, -159, -241, -241, -159, -252, -98, 399, 87, 470,
	22, -99, 22, -368, 116, 117, 118, -177, -125, -126,
	-125, 139, 256, 87, -369, 25, 87, 77, -369, -369,
	-369, 87, 14, -106, -190, -188, 146, -120, -369, -369,
	-369, 87, 87, 14, -272, 25, -369, -369, -369, -369,
	-369, -189, -369, 14, 87, 87, -369, -369, 87, 87,
	-369, 87, 87, 87, -336, 87, 87, 87, 87, -369,
	-369, -369, -369, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, -369, -369, -106, -106, -368, 217, -369,
	-369, -369, -369, -369, -253, -355, 567, 400, -166, -165,
	-163, 74, 236, 75, -368, -259, -369, -130, 90, -218,
	90, -217, -171, -252, 95, 99, -200, -136, -138, 14,
	-111, -183, 88, 87, -285, -204, -209, -238, -252, 93,
	173, -196, 217, -167, 15, -170, 32, 57, -11, -368,
	-368, 32, 87, -155, -157, -156, -158, 66, 70, 72,
	67, 68, 69, 73, -263, 25, -137, -9, -8, -368,
	-368, -368, -159, -152, -370, 14, 77, -370, 87, 217,
	-231, -233, 402, 399, 405, -340, 93, -86, 87, -310,
	-297, -201, -115, 40, -290, 363, -285, -285, -292, 93,
	-292, 95, 95, 88, -47, -42, -43, 33, 81, -317,
	-304, 93, 39, -304, -304, -252, 88, -197, -114, -159,
	140, 76, -321, -321, -321, -257, -2, 603, 609, 134,
	86, 366, 18, -217, 87, 88, -186, 294, 88, -88,
	-252, 88, 86, -302, -302, -252, -368, 232, 31, 31,
	561, 517, 508, -57, -186, -286, -340, 602, 601, 88,
	234, 292, -119, 413, -116, 93, 89, -159, -159, -159,
	-159, -159, 225, 222, -364, 303, -364, 277, 235, -152,
	-159, 87, -81, 251, 246, -262, -262, 33, -159, 399,
	579, 577, -120, 139, 256, -134, -126, -108, 467, -270,
	173, 330, 255, 328, 324, 344, 335, 361, 326, 362,
	323, 322, 321, -270, -268, -120, -120, -193, 147, -120,
	145, -120, -120, -120, -369, 173, 330, 14, -120, -120,
	-120, -337, -120, -120, -120, -335, -334, -130, -185, -369,
	-335, -120, -120, -334, -334, -338, -338, -338, -338, -338,
	-178, -178, -178, -178, -369, -369, -107, -253, -163, -298,
	-298, -298, -223, 87, -234, 22, 14, 57, 57, -136,
	-167, -137, -111, -252, -207, 563, -212, 46, -210, -211,
	47, -208, 48, 56, 164, -198, -120, -224, 76, -225,
	-229, -185, -180, -182, -181, -368, -216, -369, -252, -223,
	-225, -139, -140, -140, -139, -140, 66, 66, 66, 71,
	66, 71, 66, -156, -257, -369, -369, -9, -9, -120,
	-260, 77, -137, -137, -161, -257, 164, 399, 403, 404,
	-310, -362, 116, 140, 31, 76, 359, 102, -360, 172,
	505, 556, 561, 517, 509, 551, -361, 238, 133, 134,
	250, 25, 41, 88, 87, 88, 87, 88, 87, -246,
	-245, -43, -42, -304, -304, 95, -340, 93, 93, 234,
	26, -159, 76, 76, 76, -89, 607, 95, 86, -3,
	81, -120, 86, 19, -293, -185, -328, -281, -329, -282,
	-283, -5, -6, -305, -92, 57, 102, -61, 44, 233,
	587, 588, 124, -368, 600, -320, -217, -324, -326, -159,
	-122, -368, -121, -123, -127, 162, 163, -186, -159, -113,
	283, 291, 86, -117, 90, -342, 77, 274, 359, 274,
	-365, 304, 93, -365, -159, -81, -47, -159, -241, -241,
	33, -340, -369, -134, -126, -368, -369, -280, -280, -280,
	-288, -280, 318, -280, 318, -280, -369, -369, 87, -369,
	22, -369, -97, 442, -120, 87, 87, -369, 86, 86,
	-120, -369, -369, -369, -336, 87, -369, 87, -369, 87,
	-271, 562, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -369, -164, 22, -164, -164, -369, 90, -159,
	-167, -191, 16, -204, 51, 336, -214, -213, 55, 47,
	-211, 19, 49, 19, 30, -224, 87, 148, 87, -369,
	-369, 87, 57, 217, -369, -167, -150, -149, 76, 77,
	-151, 76, -149, 66, 66, -219, -369, -369, 87, -222,
	-137, -167, -167, 217, 116, -368, -124, -133, -122, 12,
	93, 93, -340, -359, 591, 592, 31, 95, -304, -304,
	134, 134, -159, 86, -285, 93, -285, 95, 95, 31,
	82, 83, 84, 31, 78, 79, 80, -159, -159, -159,
	-159, -325, 86, 19, -120, 86, 148, 88, -217, -217,
	270, 158, -304, 585, 276, 276, -304, -304, -304, -91,
	-90, 607, 88, -369, 87, -291, 470, 473, -120, -128,
	-128, -219, 88, -333, 470, -341, -252, -252, -252, -252,
	95, 97, -125, -285, -120, -120, -198, 93, -120, -120,
	95, 95, -369, -369, -335, -334, -120, -369, -147, -146,
	-148, 571, 116, 31, -270, -368, 66, 18, 16, -368,
	-368, -260, -191, -192, 17, 19, -205, 53, -203, 52,
	-203, -213, 19, 19, 93, 19, 93, 134, -229, -120,
	-182, 57, -11, -252, -180, -252, -193, -120, 86, -120,
	-130, -167, -167, -120, -173, 445, 105, 107, 106, 446,
	447, 448, 345, 346, 449, 450, 451, 108, 109, 110,
	111, 112, 113, 114, 452, 455, 453, 456, 457, 458,
	463, 464, 459, 460, 461, 462, 465, 93, 93, 86,
	-120, 88, 88, -219, -324, -58, 88, -217, 95, 88,
	271, -181, -368, 93, -304, -304, -304, 95, 95, -259,
	-369, 87, -252, -361, -326, 474, 474, -369, 25, -332,
	-331, -253, 86, 77, -101, 158, 470, -369, -369, -369,
	-369, -369, 88, 88, -369, -369, 87, -369, -146, -148,
	-369, 76, -130, -220, -369, -252, 238, 19, 19, -220,
	-220, -166, -192, -120, -178, -206, 54, 76, 119, 93,
	93, 93, 12, -180, 217, -198, -217, -144, 366, -193,
	-369, -217, 88, 25, 88, 609, 134, 88, -181, -100,
	-368, 267, -259, 93, 93, -90, -93, -11, 87, 148,
	-217, -159, -369, 468, 73, 471, -120, -369, 76, 480,
	571, 87, -369, -369, -369, 76, 119, -225, -252, 88,
	-369, -368, -198, 88, -202, -11, 86, -3, 267, -281,
	-329, -282, -283, -5, -6, -305, -79, 470, -331, -309,
	-253, 93, 95, 88, 62, 469, 472, -336, -252, 238,
	-260, -145, -143, -252, 523, -352, -351, 466, -362, -358,
	116, 140, 102, -360, 561, 517, 125, 126, -79, -120,
	86, -369, -80, 282, 567, -342, 62, -369, -369, 87,
	22, -273, -60, 534, -349, -350, 76, -353, 372, 533,
	554, 116, 93, 88, -217, 243, -333, 470, -143, 530,
	-286, -130, -350, 76, -349, 76, 13, 12, -4, 608,
	88, 284, 471, -59, 26, -144, -348, 251, 246, 249,
	32, -348, 95, -4, 472, 534, 245, 31, 116, -130,
	-147, -146, -146,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 819,
	819, 819, 0, 819, 0, 0, 819, -2, -2, 819,
	1306, 0, 819, 0, 0, -2, 751, 753, 0, 755,
	-2, 0, 0, 764, 1810, 1810, 814, 0, 0, 0,
	0, 0, 819, 819, 819, 819, 1166, 48, 819, 0,
	83, 84, 770, 771, 772, 63, 0, 1808, 1, 3,
	69, 73, 0, 0, 0, 56, 1175, 0, 76, 0,
	0, 823, 0, 821, 0, 1289, 819, 819, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 565, 495, 544, 493, 529, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 526, 1291, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1193, 153, 1307, 1304, 1305, 38, 39,
	40, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 0, 1283, 0, 678, 920, 0, 740, 740,
	0, 740, 740, 740, 740, 0, 0, 0, 690, 0,
	0, 0, 0, 737, 0, 706, 707, 0, 737, 0,
	713, 743, 0, 718, 740, 740, 721, 1811, 0, 1811,
	1811, 1274, 0, 734, 732, 746, 747, 750, 754, 0,
	759, 762, 1300, 1301, 0, 777, 47, 1544, 769, 782,
	783, 0, 815, 816, 43, 1017, 0, 942, 947, 958,
	971, 972, 973, 974, 975, 977, 978, 0, 0, 0,
	0, 983, 984, 0, 0, 0, 0, 0, 998, 0,
	0, 0, 0, 0, 1147, 0, 1110, 1110, 1034, 1110,
	1112, 1112, 0, 0, 0, 1807, 1585, 1593, 1594, 1616,
	1702, 1751, 1589, 1590, 1571, 1583, 1586, 1574, 1575, 1577,
	1579, 1584, 1591, 1597, 1576, 1596, 1595, 0, 1572, 1573,
	1578, 1588, 1592, 1580, 1581, 1582, 1587, 1598, 1156, 0,
	0, 0, 0, 0, 0, 273, 274, 1016, 1263, 1112,
	1112, 1112, 1112, 1112, -2, -2, 219, 220, 221, 222,
	223, 224, 225, 0, 215, 0, 278, 279, 275, 276,
	277, 1000, 1001, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 1810, 0, 792, 0, 0,
	0, 0, 0, 1175, 0, 1167, 1166, 61, 0, 819,
	-2, 0, 0, 0, 0, 45, 0, 50, 879, 75,
	74, 1215, 0, 0, 0, 57, 1176, 65, 67, 1177,
	0, 824, 825, 0, 855, 859, 0, 820, 0, 0,
	1290, 1289, 1289, 100, 0, 1747, 1267, -2, -2, 0,
	0, 1302, 1303, 1276, -2, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, -2, 0, 0, 165, 166, 0, 41, 398,
	0, 161, 0, 391, 337, 0, 1193, 0, 0, 0,
	0, 0, 819, 0, 1284, 142, 143, 150, 151, 152,
	371, 371, 371, 541, 0, 0, 153, 153, 502, 503,
	504, 0, 0, -2, 396, 0, 482, 0, 0, 385,
	385, 389, 387, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 518, 0, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 626, 0, 372, 0, 539, 540,
	434, 0, 0, 0, 0, 0, 516, 517, 0, 0,
	1292, 1293, 0, 0, 0, 371, 371, 0, 0, 0,
	0, 371, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 1206, 0, 0, 0, -2, 0, 670, 0,
	0, 0, 1285, 1285, 0, 677, 0, 679, 680, 0,
	0, 681, 0, 737, 737, 735, 736, 683, 684, 685,
	686, 740, 0, 0, 380, 381, 382, 737, 740, 0,
	740, 740, 740, 740, 737, 737, 737, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 743, 740,
	0, 714, 0, 715, 716, 719, 720, 722, 1812, 1813,
	1323, 1811, 1811, 726, 730, 1275, 752, 760, 763, 780,
	778, 779, 781, 773, 774, 775, 776, 0, 794, 795,
	800, 0, 0, 0, 0, 806, 807, 808, 0, 0,
	811, 812, 813, 0, 0, 0, 0, 0, 940, 0,
	0, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 979, 980,
	981, 982, 985, 0, 0, 0, 990, 991, 0, 0,
	0, 0, 0, 829, 0, 1148, 0, 1032, 0, 1033,
	1035, 1036, 0, 1037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	839, 0, 0, 839, 839, 0, 0, 208, 209, 210,
	211, 212, 226, 227, 228, 229, 230, 280, 1156, 0,
	1016, 0, 0, 44, 784, 785, 0, 903, 1295, 0,
	0, 835, 0, 55, 64, 66, 1175, 59, 1175, 0,
	841, 0, 0, -2, -2, 842, 848, 849, 850, 851,
	852, 52, 1809, 53, 0, 72, 0, 46, 0, 0,
	0, 0, 349, 1218, 0, 0, 1168, 1169, 1172, 0,
	856, 1627, 860, 0, 862, 863, 0, 822, 0, 98,
	0, 919, 0, 0, 0, 1747, 1273, 0, 102, 103,
	0, 0, 0, 355, 1278, 1279, 1280, -2, 378, 0,
	355, 344, 288, 289, 290, 337, 292, 337, 337, 337,
	337, 349, 349, 349, 349, 320, 321, 322, 323, 324,
	0, 0, 307, 337, 337, 337, 337, 327, 328, 329,
	330, 331, 332, 333, 334, 293, 294, 295, 296, 297,
	298, 299, 300, 301, 339, 339, 339, 341, 341, 0,
	42, 0, 359, 0, 1172, 0, 0, 1206, 1287, 1297,
	0, 0, 0, 1287, 120, 0, 0, 0, 542, 576,
	496, 530, 543, 0, 499, 500, -2, 0, 0, 481,
	0, 483, 0, 379, 0, -2, 0, 389, 0, 385,
	389, 386, 389, 377, 390, 520, 521, 522, 0, 524,
	525, 606, 889, 0, 0, 0, 0, 0, 612, 613,
	614, 0, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 531, 532, 533, 534, 535, 536, 537, 538,
	0, 0, 0, 483, 0, 527, 0, 435, 436, 437,
	0, 0, 440, 441, 442, 443, 0, 0, 446, 447,
	448, 906, 907, 449, 450, 475, 476, 477, 451, 452,
	453, 454, 455, 456, 457, 469, 470, 471, 472, 473,
	474, 458, 459, 460, 461, 462, 463, 466, 0, 135,
	1197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 0, 0, 0, 0, 838,
	921, 1308, 1309, 741, 742, 0, 383, 384, 740, 740,
	687, 727, 0, 740, 691, 728, 692, 694, 693, 695,
	708, 709, 740, 698, 738, 739, 699, 700, 701, 702,
	703, 704, 705, 723, 710, 711, 712, 744, 0, 748,
	749, 724, 725, 0, 761, 765, 766, 767, 768, 0,
	0, 797, 94, 802, 803, 804, 805, 817, 810, 1018,
	937, 938, 939, 0, 941, 944, 0, 1002, 1004, 946,
	948, 1013, 1014, 1015, 0, 0, 0, 0, 0, 952,
	956, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 976, 1126, 1127, 1128, 993, 281, 282,
	0, 994, 0, 853, 0, 0, 0, 992, 0, 0,
	0, 0, 830, 831, 1154, 1151, 0, 0, 1111, 1113,
	0, 0, 0, 0, 0, 1089, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1129, 0, 0, 0,
	0, 0, 1147, 0, 995, 996, 997, 0, 0, 0,
	1296, 0, 130, 131, 0, 0, 0, 0, 0, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	840, 1157, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 787, 788, 790, 0, 923, 0, 904,
	0, 0, 793, 0, 834, 0, 837, 58, 60, 846,
	847, 0, 864, 843, 54, 49, 0, 0, 881, 1216,
	349, 1238, 0, 353, 354, 1178, 1179, 0, 1171, 1173,
	1174, 77, 861, 857, 0, 935, 0, 0, 918, 0,
	867, 869, 870, 871, 901, 0, 874, 0, 0, 0,
	0, 0, 96, 920, 1268, 101, 0, 0, 106, 107,
	1269, 1270, 1271, 1272, 0, 565, -2, 430, 167, 169,
	170, 171, 162, -2, 347, 345, 346, 291, 349, 349,
	314, 315, 316, 317, 318, 319, 0, 0, 308, 309,
	310, 311, 302, 0, 303, 304, 305, 0, 306, 397,
	0, 1180, 360, 361, 363, 371, 0, 366, 367, 0,
	371, 371, 0, 392, 393, 0, 1172, 1197, 0, 0,
	0, 1298, 1297, 1297, 1297, 0, 155, 156, 157, 158,
	159, 160, 601, 0, 0, 577, 599, 600, 153, 0,
	0, 163, 485, 484, 0, 633, 0, 395, 0, 0,
	389, 389, 374, 375, 523, 0, 0, 608, 609, 610,
	611, 0, 0, 0, 512, 424, 0, 483, 485, 355,
	0, 438, 439, 444, 445, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 557, 558,
	559, 487, 563, 560, 487, 564, 1194, 1195, 1196, 0,
	0, 671, 0, 0, 421, 92, 1286, 676, 737, 697,
	729, 737, 689, 696, 717, 757, 801, 0, 0, 0,
	0, 809, 0, 0, 945, 1003, 1005, 949, 0, 953,
	957, 0, 0, 0, 0, 0, 0, 0, 999, 1023,
	1024, 0, 0, 1166, 0, 1152, 0, 0, 1031, 1114,
	1115, 0, 0, 0, 0, 0, 1042, 1043, 1044, 1045,
	1046, 0, 1048, 0, 0, 0, 1052, 1053, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 1066,
	1067, 1068, 1069, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1080, 1019, 0, 0, 839, 0, 1116,
	1117, 1118, 1119, 1120, 1157, 786, 789, 791, 877, 924,
	925, 0, 0, 0, 0, 905, 1294, 832, 833, 836,
	-2, 0, 0, 1159, 0, 0, 864, 935, 865, 0,
	844, 51, 880, 0, 1220, 1219, 1232, 1245, 350, 351,
	352, 1170, 0, 1175, 0, 1256, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 908, 0, 0,
	911, 0, 0, 0, 0, 902, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 90, 91, 0, 0, 0,
	104, 105, 0, 0, 111, 356, 357, 144, 153, 432,
	168, 405, 0, 0, 287, 348, 312, 313, 0, 335,
	0, 0, 0, 426, 116, 1184, 1183, 371, 371, 362,
	0, 365, 0, 0, 0, 1299, 338, 394, 0, 134,
	0, 0, 0, 0, 0, 140, 571, 0, 0, 578,
	0, 0, 0, 494, 0, 505, 506, 0, 605, -2,
	667, 359, 0, 373, 376, 890, 0, 0, 507, 0,
	510, 511, 425, 485, 514, 515, 528, 467, 468, 465,
	0, 0, 1207, 1208, 1213, 1211, 1212, 121, 549, 551,
	550, 554, 0, 0, 489, 0, 489, 547, 0, 421,
	1180, 0, 675, 422, 423, 740, 740, 796, 95, 0,
	799, 0, 0, 0, 0, 950, 954, 854, 0, 0,
	337, 337, 1134, 337, 341, 1137, 337, 1139, 337, 1142,
	337, 1145, 1146, 0, 0, 0, 0, 1149, 1030, 1155,
	0, 0, 0, 0, 1041, 0, 0, 0, 0, 0,
	0, 132, 133, 1083, 0, 0, 1085, 1087, 1088, 1058,
	1084, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1020, 1021, 0, 1158, 926, 931,
	931, 931, 0, 0, 0, 1281, 1282, 1160, 1161, 935,
	1162, 866, 845, 882, 1238, 0, 1231, 0, -2, 1240,
	0, 0, 0, 1246, 858, 78, 936, 81, 0, 1256,
	1264, 0, 1247, 1258, 1260, 0, 0, 0, 1252, 0,
	935, 868, 897, 899, 0, 894, 909, 910, 912, 0,
	914, 0, 916, 917, 879, 873, 875, 0, 0, 0,
	98, 0, 935, 935, 97, 0, 922, 108, 109, 110,
	431, 172, 177, 0, 0, 0, 182, 0, 184, 0,
	0, 0, 189, 190, 371, 371, 406, 0, 284, 286,
	0, 0, 175, 349, 0, 349, 0, 342, 0, 407,
	427, 1181, 1182, 0, 0, 364, 368, 369, 370, 0,
	1288, 136, 0, 0, 0, 574, 0, 602, 0, 0,
	0, 0, 0, 0, 164, 486, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 0, 371, 0, 0, 0,
	371, 371, 371, 0, 659, 358, 0, 0, 630, 627,
	508, 0, 213, 214, 216, 0, 0, 513, 879, 1198,
	1199, 1200, 0, 1210, 1214, 124, 0, 0, 0, 0,
	561, 0, 488, 562, 672, 673, 674, 93, 682, 688,
	798, 818, 943, 951, 955, 0, 987, 1132, 349, 1135,
	1136, 1138, 1140, 1141, 1143, 1144, 988, 989, 0, 1026,
	0, 1028, 1175, 0, 1153, 0, 0, 1040, 0, 0,
	0, 1049, 1050, 1051, 0, 0, 1057, 0, 1059, 0,
	0, 0, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1022, 0, 0, 0, 0, 903, -2, 62,
	1162, 1164, 0, 1225, 1223, 1223, 1233, 1234, 0, 0,
	1241, 0, 0, 0, 0, 82, 0, 0, 0, 1261,
	0, 0, 0, 0, 99, 1166, 891, 898, 0, 0,
	892, 0, 893, 913, 915, 872, -2, 876, 0, 935,
	935, 88, 89, 0, 178, 0, 180, 206, 207, 0,
	183, 185, 186, 187, 193, 194, 195, 188, 0, 0,
	283, 285, 0, 0, 325, 336, 326, 0, 0, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 879, 137, 138,
	139, 566, 0, 576, 0, 0, 0, 569, 0, 497,
	0, 0, 0, 371, 371, 371, 0, 0, 0, 0,
	644, 0, 0, 607, 0, 615, 0, 0, 0, 217,
	218, 0, 1209, 548, 0, 122, 123, 0, 0, 553,
	490, 491, 1121, 1133, 0, 0, 0, 1150, 0, 0,
	0, 0, 1047, 1055, 0, 1086, 0, 1062, 0, 0,
	0, 596, 597, 0, 1082, 0, 932, 0, 0, 0,
	0, 923, 1164, 80, 0, 0, 1228, 0, 1221, 1224,
	1222, 1235, 0, 0, 1242, 0, 1244, 0, 1265, 1266,
	1259, 0, 1251, 1254, 1250, 1253, 1175, 895, 0, 900,
	0, 1166, 87, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 0,
	0, 340, 343, 0, 0, 0, 567, 0, 579, 570,
	0, 657, 0, 661, 0, 0, 0, 664, 665, 666,
	643, 0, 647, 399, 631, 628, 629, 509, 0, 125,
	126, 0, 0, 0, 0, 0, 0, 1025, 1027, 1029,
	1038, 1039, 1130, 1131, 1056, 1060, 0, 1063, 0, 0,
	1064, 0, 598, 0, 928, 885, 886, 933, 934, 0,
	0, 878, 79, 1165, 1163, 1217, 0, 1226, 1227, 1236,
	1237, 1243, 0, 1249, 0, 85, 0, 0, 0, 1175,
	179, 0, 198, 0, 575, 0, 578, 568, 655, 656,
	0, 668, 660, 662, 663, 645, -2, 1201, 0, 0,
	0, 555, 986, 0, 0, 0, 1083, 1065, 0, 594,
	595, 0, 927, 929, 930, 1229, 1230, 1257, 1255, 896,
	903, 0, 86, 412, 405, 1201, 0, 0, 0, 648,
	649, 650, 651, 652, 653, 654, 545, 1203, 127, 128,
	478, 479, 480, 121, 1122, 0, 1125, 0, 887, 888,
	580, 0, 582, 0, -2, 400, 413, 0, 173, 199,
	200, 0, 0, 203, 204, 205, 196, 197, 117, 0,
	0, 669, 0, 1204, 1205, 124, 1123, 1061, 581, 0,
	0, 355, 0, 591, 401, 402, 0, 408, 409, 410,
	411, 201, 202, 603, 0, 0, 552, 0, 583, 584,
	592, 0, 403, 0, 404, 0, 0, 0, 572, 0,
	603, 1202, 0, 0, 593, 589, 414, 416, 417, 0,
	0, 415, 604, 573, 1124, 0, 418, 419, 420, 585,
	586, 587, 588,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	86, 88, 164, 162, 87, 163, 217, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 610,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:529
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:534
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:539
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:575
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:594
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:604
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:610
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:616
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:620
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:629
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:635
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:639
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:645
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:712
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:719
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:804
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:836
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:848
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:852
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:886
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:896
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:906
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:919
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:941
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:951
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:955
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:959
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:969
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:973
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:977
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:983
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:987
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:993
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:999
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1006
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1015
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1035
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1045
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1050
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1055
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1061
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1081
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1087
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1097
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1103
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1110
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1132
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1139
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1146
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1157
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1168
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1174
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1178
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1182
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1220
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1224
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1230
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1240
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1244
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1250
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1260
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1265
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1298
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1307
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1339
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1379
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1405
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1415
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1419
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1423
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1429
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1433
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1438
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1447
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1453
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1490
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1494
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1517
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1524
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1760
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1774
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1778
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1782
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1788
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1799
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1803
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1807
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1811
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2042
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2047
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2051
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2059
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2069
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2077
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2081
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2085
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2090
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2141
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2150
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2156
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2166
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2170
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2175
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2179
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2183
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2187
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2191
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2195
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2211
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2215
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2219
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2223
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2227
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2257
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2295
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2305
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2309
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2315
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2319
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2325
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2329
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2335
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2341
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2345
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2349
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2353
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2357
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2366
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2372
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2378
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2384
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2388
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2392
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2397
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2401
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2407
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2413
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2419
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2423
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2427
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2431
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2435
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2463
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2467
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2476
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2482
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2496
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2506
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2510
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2514
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2518
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2522
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2526
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2530
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2534
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2538
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2542
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2546
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2550
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2554
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2558
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2562
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2566
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2570
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2574
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2578
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2622
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2626
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2631
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2639
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2690
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2695
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2708
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2712
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2721
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2725
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2729
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 497:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2737
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2743
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2747
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2751
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2757
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2761
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2765
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2769
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2773
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2777
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2781
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2785
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2789
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2793
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2798
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2803
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2807
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2811
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2815
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2819
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2823
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2827
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2831
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2835
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2839
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2873
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2887
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2899
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2925
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2932
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2939
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2946
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2952
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2962
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2969
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2976
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2998
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3002
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3006
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3029
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3033
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3058
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3065
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3102
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3113
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3122
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3130
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3139
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3146
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3158
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3167
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3182
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3187
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3191
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3196
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3200
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3206
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3212
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3218
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3228
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3232
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3238
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3244
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3250
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3256
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3262
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3266
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3274
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3280
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3286
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3292
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3296
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3300
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3306
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3310
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3315
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3319
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3324
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3328
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3334
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3338
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3342
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3346
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3350
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3354
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3358
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3362
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3366
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3370
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3374
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3378
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3382
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3386
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3390
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3394
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3398
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3402
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3406
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3410
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3414
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3418
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3423
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3427
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3438
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3448
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3453
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3457
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3462
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3467
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3472
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3477
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3482
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3488
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3494
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3499
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3505
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3511
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3521
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3526
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3530
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3535
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3540
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3545
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3550
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3556
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3562
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3569
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3576
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3583
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3591
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3595
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3601
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3607
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3613
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3619
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3625
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3631
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3643
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3649
		{
			yyVAL.str = ""
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3653
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3665
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3669
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 673:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3688
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3692
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3713
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3725
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3729
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3733
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = ""
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = "extended "
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3932
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3952
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3956
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3960
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3970
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3974
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3984
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3990
		{
			yyVAL.empty = struct{}{}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.empty = struct{}{}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.empty = struct{}{}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4053
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.empty = struct{}{}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4058
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4076
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4080
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4084
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4088
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4092
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4096
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.str = yyDollar[1].str
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.str = yyDollar[1].str
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
			yyVAL.str = yyDollar[1].str
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4133
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4173
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4183
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4189
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4193
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4197
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4201
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4239
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4249
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4304
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4312
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = ""
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4326
		{
			setAllowComments(yylex, true)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4330
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4336
		{
			yyVAL.strs = nil
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4340
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4350
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = ""
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.str = SQLCacheStr
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4372
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4376
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4386
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4390
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4402
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4411
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4417
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4421
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4430
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4435
		{
			yyVAL.strs = nil
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4443
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4451
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = SQLCacheStr
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = DistinctStr
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = DistinctStr
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.str = StraightJoinHint
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4487
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4497
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4501
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4505
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4509
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4522
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4534
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4538
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4544
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4550
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4554
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4564
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4568
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4572
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4576
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4582
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4586
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4592
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4596
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4605
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4611
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4621
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4631
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4635
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4643
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4649
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4653
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4666
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4670
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4674
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4678
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4684
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4686
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4690
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4696
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4698
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4701
		{
			yyVAL.empty = struct{}{}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.empty = struct{}{}
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4706
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4727
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4731
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4735
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4741
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4747
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4751
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4755
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4759
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4765
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4769
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4779
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4808
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4814
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4818
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4824
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4828
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4832
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4836
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4841
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4845
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4849
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4853
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4870
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4874
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4878
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4882
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4886
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4890
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4927
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5035
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5039
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5043
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5047
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5051
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5055
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5121
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5125
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5129
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5135
		{
			yyVAL.str = ""
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5139
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5145
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5149
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5156
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5160
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5164
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5168
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5174
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5178
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5182
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5186
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5190
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5194
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5198
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5204
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5208
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5212
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5219
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5225
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5229
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5467
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5508
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5517
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5523
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5527
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5533
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5543
		{
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5545
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5549
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5553
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5557
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5561
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5565
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5569
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5573
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5577
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5581
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5585
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5591
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5595
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5599
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5603
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5607
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5611
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5615
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5619
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5623
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5656
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5660
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5664
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5678
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5682
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5686
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5690
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5694
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5700
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5704
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5708
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5718
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5722
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5728
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5732
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5736
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5740
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5744
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5750
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5754
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5758
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5762
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5766
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5770
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5774
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5778
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5782
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5786
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5801
		{
			yyVAL.str = string("")
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5805
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5811
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5815
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5821
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5836
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5840
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5844
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5873
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5891
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5897
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5903
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5907
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5913
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5918
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5922
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5926
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5935
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5941
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5945
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5949
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5958
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5962
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5966
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5970
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5977
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5981
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5985
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5989
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5995
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5999
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6003
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6007
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6012
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6016
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6020
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6024
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6029
		{
			yyVAL.str = ""
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6033
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6039
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6043
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6048
		{
			yyVAL.str = ""
		}
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6052
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6057
		{
			yyVAL.str = "cascaded"
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6074
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6080
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6086
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6092
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6101
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6110
		{
			yyVAL.str = ""
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6114
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6120
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6124
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6130
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6134
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6138
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6143
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = ""
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6160
		{
			yyVAL.str = " header"
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6165
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6169
		{
			yyVAL.str = " manifest on"
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6173
		{
			yyVAL.str = " manifest off"
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6178
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6182
		{
			yyVAL.str = " overwrite on"
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6186
		{
			yyVAL.str = " overwrite off"
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6192
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6197
		{
			yyVAL.str = ""
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6201
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6211
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6217
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6221
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6226
		{
			yyVAL.str = ""
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6236
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6240
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6246
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6250
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6254
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6259
		{
			yyVAL.str = ""
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6263
		{
			yyVAL.str = " optionally"
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6276
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6280
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6284
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6288
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6292
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6298
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6302
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6306
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6310
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6319
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6325
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6329
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6335
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6339
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6345
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6360
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6364
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6370
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6376
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6386
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6390
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6394
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6398
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6402
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6410
		{
			yyVAL.str = "charset"
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6437
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6442
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6444
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6447
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6449
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6452
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6457
		{
			yyVAL.empty = struct{}{}
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6459
		{
			yyVAL.empty = struct{}{}
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6461
		{
			yyVAL.empty = struct{}{}
		}
	case 1294:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6465
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6474
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6481
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6485
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6491
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6495
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6502
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6508
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6512
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6518
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6522
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6529
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7052
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7061
		{
			decNesting(yylex)
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7066
		{
			skipToEnd(yylex)
		}
	case 1811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7071
		{
			skipToEnd(yylex)
		}
	case 1812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7075
		{
			skipToEnd(yylex)
		}
	case 1813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7079
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
