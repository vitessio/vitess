// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const EMPTY_FROM_CLAUSE = 57485
const LOWER_THAN_CHARSET = 57486
const CHARSET = 57487
const UNIQUE = 57488
const KEY = 57489
const EXPRESSION_PREC_SETTER = 57490
const OR = 57491
const XOR = 57492
const AND = 57493
const NOT = 57494
const BETWEEN = 57495
const CASE = 57496
const WHEN = 57497
const THEN = 57498
const ELSE = 57499
const END = 57500
const LE = 57501
const GE = 57502
const NE = 57503
const NULL_SAFE_EQUAL = 57504
const IS = 57505
const LIKE = 57506
const REGEXP = 57507
const RLIKE = 57508
const IN = 57509
const ASSIGNMENT_OPT = 57510
const SHIFT_LEFT = 57511
const SHIFT_RIGHT = 57512
const DIV = 57513
const MOD = 57514
const UNARY = 57515
const COLLATE = 57516
const BINARY = 57517
const UNDERSCORE_ARMSCII8 = 57518
const UNDERSCORE_ASCII = 57519
const UNDERSCORE_BIG5 = 57520
const UNDERSCORE_BINARY = 57521
const UNDERSCORE_CP1250 = 57522
const UNDERSCORE_CP1251 = 57523
const UNDERSCORE_CP1256 = 57524
const UNDERSCORE_CP1257 = 57525
const UNDERSCORE_CP850 = 57526
const UNDERSCORE_CP852 = 57527
const UNDERSCORE_CP866 = 57528
const UNDERSCORE_CP932 = 57529
const UNDERSCORE_DEC8 = 57530
const UNDERSCORE_EUCJPMS = 57531
const UNDERSCORE_EUCKR = 57532
const UNDERSCORE_GB18030 = 57533
const UNDERSCORE_GB2312 = 57534
const UNDERSCORE_GBK = 57535
const UNDERSCORE_GEOSTD8 = 57536
const UNDERSCORE_GREEK = 57537
const UNDERSCORE_HEBREW = 57538
const UNDERSCORE_HP8 = 57539
const UNDERSCORE_KEYBCS2 = 57540
const UNDERSCORE_KOI8R = 57541
const UNDERSCORE_KOI8U = 57542
const UNDERSCORE_LATIN1 = 57543
const UNDERSCORE_LATIN2 = 57544
const UNDERSCORE_LATIN5 = 57545
const UNDERSCORE_LATIN7 = 57546
const UNDERSCORE_MACCE = 57547
const UNDERSCORE_MACROMAN = 57548
const UNDERSCORE_SJIS = 57549
const UNDERSCORE_SWE7 = 57550
const UNDERSCORE_TIS620 = 57551
const UNDERSCORE_UCS2 = 57552
const UNDERSCORE_UJIS = 57553
const UNDERSCORE_UTF16 = 57554
const UNDERSCORE_UTF16LE = 57555
const UNDERSCORE_UTF32 = 57556
const UNDERSCORE_UTF8 = 57557
const UNDERSCORE_UTF8MB4 = 57558
const UNDERSCORE_UTF8MB3 = 57559
const INTERVAL = 57560
const WINDOW_EXPR = 57561
const JSON_EXTRACT_OP = 57562
const JSON_UNQUOTE_EXTRACT_OP = 57563
const CREATE = 57564
const ALTER = 57565
const DROP = 57566
const RENAME = 57567
const ANALYZE = 57568
const ADD = 57569
const FLUSH = 57570
const CHANGE = 57571
const MODIFY = 57572
const DEALLOCATE = 57573
const REVERT = 57574
const QUERIES = 57575
const SCHEMA = 57576
const TABLE = 57577
const INDEX = 57578
const VIEW = 57579
const TO = 57580
const IGNORE = 57581
const IF = 57582
const PRIMARY = 57583
const COLUMN = 57584
const SPATIAL = 57585
const FULLTEXT = 57586
const KEY_BLOCK_SIZE = 57587
const CHECK = 57588
const INDEXES = 57589
const ACTION = 57590
const CASCADE = 57591
const CONSTRAINT = 57592
const FOREIGN = 57593
const NO = 57594
const REFERENCES = 57595
const RESTRICT = 57596
const SHOW = 57597
const DESCRIBE = 57598
const EXPLAIN = 57599
const DATE = 57600
const ESCAPE = 57601
const REPAIR = 57602
const OPTIMIZE = 57603
const TRUNCATE = 57604
const COALESCE = 57605
const EXCHANGE = 57606
const REBUILD = 57607
const PARTITIONING = 57608
const REMOVE = 57609
const PREPARE = 57610
const EXECUTE = 57611
const MAXVALUE = 57612
const PARTITION = 57613
const REORGANIZE = 57614
const LESS = 57615
const THAN = 57616
const PROCEDURE = 57617
const TRIGGER = 57618
const VINDEX = 57619
const VINDEXES = 57620
const DIRECTORY = 57621
const NAME = 57622
const UPGRADE = 57623
const STATUS = 57624
const VARIABLES = 57625
const WARNINGS = 57626
const CASCADED = 57627
const DEFINER = 57628
const OPTION = 57629
const SQL = 57630
const UNDEFINED = 57631
const SEQUENCE = 57632
const MERGE = 57633
const TEMPORARY = 57634
const TEMPTABLE = 57635
const INVOKER = 57636
const SECURITY = 57637
const FIRST = 57638
const AFTER = 57639
const LAST = 57640
const VITESS_MIGRATION = 57641
const CANCEL = 57642
const RETRY = 57643
const LAUNCH = 57644
const COMPLETE = 57645
const CLEANUP = 57646
const THROTTLE = 57647
const UNTHROTTLE = 57648
const FORCE_CUTOVER = 57649
const EXPIRE = 57650
const RATIO = 57651
const VITESS_THROTTLER = 57652
const BEGIN = 57653
const START = 57654
const TRANSACTION = 57655
const COMMIT = 57656
const ROLLBACK = 57657
const SAVEPOINT = 57658
const RELEASE = 57659
const WORK = 57660
const CONSISTENT = 57661
const SNAPSHOT = 57662
const BIT = 57663
const TINYINT = 57664
const SMALLINT = 57665
const MEDIUMINT = 57666
const INT = 57667
const INTEGER = 57668
const BIGINT = 57669
const INTNUM = 57670
const REAL = 57671
const DOUBLE = 57672
const FLOAT_TYPE = 57673
const FLOAT4_TYPE = 57674
const FLOAT8_TYPE = 57675
const DECIMAL_TYPE = 57676
const NUMERIC = 57677
const TIME = 57678
const TIMESTAMP = 57679
const DATETIME = 57680
const YEAR = 57681
const CHAR = 57682
const VARCHAR = 57683
const BOOL = 57684
const CHARACTER = 57685
const VARBINARY = 57686
const NCHAR = 57687
const TEXT = 57688
const TINYTEXT = 57689
const MEDIUMTEXT = 57690
const LONGTEXT = 57691
const BLOB = 57692
const TINYBLOB = 57693
const MEDIUMBLOB = 57694
const LONGBLOB = 57695
const JSON = 57696
const JSON_SCHEMA_VALID = 57697
const JSON_SCHEMA_VALIDATION_REPORT = 57698
const ENUM = 57699
const GEOMETRY = 57700
const POINT = 57701
const LINESTRING = 57702
const POLYGON = 57703
const GEOMCOLLECTION = 57704
const GEOMETRYCOLLECTION = 57705
const MULTIPOINT = 57706
const MULTILINESTRING = 57707
const MULTIPOLYGON = 57708
const ASCII = 57709
const UNICODE = 57710
const VECTOR = 57711
const NULLX = 57712
const AUTO_INCREMENT = 57713
const APPROXNUM = 57714
const SIGNED = 57715
const UNSIGNED = 57716
const ZEROFILL = 57717
const PURGE = 57718
const BEFORE = 57719
const CODE = 57720
const COLLATION = 57721
const COLUMNS = 57722
const DATABASES = 57723
const ENGINES = 57724
const EVENT = 57725
const EXTENDED = 57726
const FIELDS = 57727
const FULL = 57728
const FUNCTION = 57729
const GTID_EXECUTED = 57730
const KEYSPACES = 57731
const OPEN = 57732
const PLUGINS = 57733
const PRIVILEGES = 57734
const PROCESSLIST = 57735
const SCHEMAS = 57736
const TABLES = 57737
const TRIGGERS = 57738
const USER = 57739
const VGTID_EXECUTED = 57740
const VITESS_KEYSPACES = 57741
const VITESS_METADATA = 57742
const VITESS_MIGRATIONS = 57743
const VITESS_REPLICATION_STATUS = 57744
const VITESS_SHARDS = 57745
const VITESS_TABLETS = 57746
const VITESS_TARGET = 57747
const VSCHEMA = 57748
const VITESS_THROTTLED_APPS = 57749
const NAMES = 57750
const GLOBAL = 57751
const SESSION = 57752
const ISOLATION = 57753
const LEVEL = 57754
const READ = 57755
const WRITE = 57756
const ONLY = 57757
const REPEATABLE = 57758
const COMMITTED = 57759
const UNCOMMITTED = 57760
const SERIALIZABLE = 57761
const ADDDATE = 57762
const CURRENT_TIMESTAMP = 57763
const DATABASE = 57764
const CURRENT_DATE = 57765
const CURDATE = 57766
const DATE_ADD = 57767
const DATE_SUB = 57768
const NOW = 57769
const SUBDATE = 57770
const CURTIME = 57771
const CURRENT_TIME = 57772
const LOCALTIME = 57773
const LOCALTIMESTAMP = 57774
const CURRENT_USER = 57775
const UTC_DATE = 57776
const UTC_TIME = 57777
const UTC_TIMESTAMP = 57778
const SYSDATE = 57779
const DAY = 57780
const DAY_HOUR = 57781
const DAY_MICROSECOND = 57782
const DAY_MINUTE = 57783
const DAY_SECOND = 57784
const HOUR = 57785
const HOUR_MICROSECOND = 57786
const HOUR_MINUTE = 57787
const HOUR_SECOND = 57788
const MICROSECOND = 57789
const MINUTE = 57790
const MINUTE_MICROSECOND = 57791
const MINUTE_SECOND = 57792
const MONTH = 57793
const QUARTER = 57794
const SECOND = 57795
const SECOND_MICROSECOND = 57796
const YEAR_MONTH = 57797
const WEEK = 57798
const SQL_TSI_DAY = 57799
const SQL_TSI_WEEK = 57800
const SQL_TSI_HOUR = 57801
const SQL_TSI_MINUTE = 57802
const SQL_TSI_MONTH = 57803
const SQL_TSI_QUARTER = 57804
const SQL_TSI_SECOND = 57805
const SQL_TSI_MICROSECOND = 57806
const SQL_TSI_YEAR = 57807
const REPLACE = 57808
const CONVERT = 57809
const CAST = 57810
const SUBSTR = 57811
const SUBSTRING = 57812
const MID = 57813
const SEPARATOR = 57814
const TIMESTAMPADD = 57815
const TIMESTAMPDIFF = 57816
const WEIGHT_STRING = 57817
const LTRIM = 57818
const RTRIM = 57819
const TRIM = 57820
const JSON_ARRAY = 57821
const JSON_OBJECT = 57822
const JSON_QUOTE = 57823
const JSON_DEPTH = 57824
const JSON_TYPE = 57825
const JSON_LENGTH = 57826
const JSON_VALID = 57827
const JSON_ARRAY_APPEND = 57828
const JSON_ARRAY_INSERT = 57829
const JSON_INSERT = 57830
const JSON_MERGE = 57831
const JSON_MERGE_PATCH = 57832
const JSON_MERGE_PRESERVE = 57833
const JSON_REMOVE = 57834
const JSON_REPLACE = 57835
const JSON_SET = 57836
const JSON_UNQUOTE = 57837
const COUNT = 57838
const AVG = 57839
const MAX = 57840
const MIN = 57841
const SUM = 57842
const GROUP_CONCAT = 57843
const BIT_AND = 57844
const BIT_OR = 57845
const BIT_XOR = 57846
const STD = 57847
const STDDEV = 57848
const STDDEV_POP = 57849
const STDDEV_SAMP = 57850
const VAR_POP = 57851
const VAR_SAMP = 57852
const VARIANCE = 57853
const ANY_VALUE = 57854
const REGEXP_INSTR = 57855
const REGEXP_LIKE = 57856
const REGEXP_REPLACE = 57857
const REGEXP_SUBSTR = 57858
const ExtractValue = 57859
const UpdateXML = 57860
const GET_LOCK = 57861
const RELEASE_LOCK = 57862
const RELEASE_ALL_LOCKS = 57863
const IS_FREE_LOCK = 57864
const IS_USED_LOCK = 57865
const LOCATE = 57866
const POSITION = 57867
const ST_GeometryCollectionFromText = 57868
const ST_GeometryFromText = 57869
const ST_LineStringFromText = 57870
const ST_MultiLineStringFromText = 57871
const ST_MultiPointFromText = 57872
const ST_MultiPolygonFromText = 57873
const ST_PointFromText = 57874
const ST_PolygonFromText = 57875
const ST_GeometryCollectionFromWKB = 57876
const ST_GeometryFromWKB = 57877
const ST_LineStringFromWKB = 57878
const ST_MultiLineStringFromWKB = 57879
const ST_MultiPointFromWKB = 57880
const ST_MultiPolygonFromWKB = 57881
const ST_PointFromWKB = 57882
const ST_PolygonFromWKB = 57883
const ST_AsBinary = 57884
const ST_AsText = 57885
const ST_Dimension = 57886
const ST_Envelope = 57887
const ST_IsSimple = 57888
const ST_IsEmpty = 57889
const ST_GeometryType = 57890
const ST_X = 57891
const ST_Y = 57892
const ST_Latitude = 57893
const ST_Longitude = 57894
const ST_EndPoint = 57895
const ST_IsClosed = 57896
const ST_Length = 57897
const ST_NumPoints = 57898
const ST_StartPoint = 57899
const ST_PointN = 57900
const ST_Area = 57901
const ST_Centroid = 57902
const ST_ExteriorRing = 57903
const ST_InteriorRingN = 57904
const ST_NumInteriorRings = 57905
const ST_NumGeometries = 57906
const ST_GeometryN = 57907
const ST_LongFromGeoHash = 57908
const ST_PointFromGeoHash = 57909
const ST_LatFromGeoHash = 57910
const ST_GeoHash = 57911
const ST_AsGeoJSON = 57912
const ST_GeomFromGeoJSON = 57913
const MATCH = 57914
const AGAINST = 57915
const BOOLEAN = 57916
const LANGUAGE = 57917
const WITH = 57918
const QUERY = 57919
const EXPANSION = 57920
const WITHOUT = 57921
const VALIDATION = 57922
const ROLLUP = 57923
const UNUSED = 57924
const ARRAY = 57925
const BYTE = 57926
const CUME_DIST = 57927
const DESCRIPTION = 57928
const DENSE_RANK = 57929
const EMPTY = 57930
const EXCEPT = 57931
const FIRST_VALUE = 57932
const GROUPING = 57933
const GROUPS = 57934
const JSON_TABLE = 57935
const LAG = 57936
const LAST_VALUE = 57937
const LATERAL = 57938
const LEAD = 57939
const NTH_VALUE = 57940
const NTILE = 57941
const OF = 57942
const OVER = 57943
const PERCENT_RANK = 57944
const RANK = 57945
const RECURSIVE = 57946
const ROW_NUMBER = 57947
const SYSTEM = 57948
const WINDOW = 57949
const ACTIVE = 57950
const ADMIN = 57951
const AUTOEXTEND_SIZE = 57952
const BUCKETS = 57953
const CLONE = 57954
const COLUMN_FORMAT = 57955
const COMPONENT = 57956
const DEFINITION = 57957
const ENFORCED = 57958
const ENGINE_ATTRIBUTE = 57959
const EXCLUDE = 57960
const FOLLOWING = 57961
const GET_MASTER_PUBLIC_KEY = 57962
const HISTOGRAM = 57963
const HISTORY = 57964
const INACTIVE = 57965
const INVISIBLE = 57966
const LOCKED = 57967
const MASTER_COMPRESSION_ALGORITHMS = 57968
const MASTER_PUBLIC_KEY_PATH = 57969
const MASTER_TLS_CIPHERSUITES = 57970
const MASTER_ZSTD_COMPRESSION_LEVEL = 57971
const NESTED = 57972
const NETWORK_NAMESPACE = 57973
const NOWAIT = 57974
const NULLS = 57975
const OJ = 57976
const OLD = 57977
const OPTIONAL = 57978
const ORDINALITY = 57979
const ORGANIZATION = 57980
const OTHERS = 57981
const PARTIAL = 57982
const PATH = 57983
const PERSIST = 57984
const PERSIST_ONLY = 57985
const PRECEDING = 57986
const PRIVILEGE_CHECKS_USER = 57987
const PROCESS = 57988
const RANDOM = 57989
const REFERENCE = 57990
const REQUIRE_ROW_FORMAT = 57991
const RESOURCE = 57992
const RESPECT = 57993
const RESTART = 57994
const RETAIN = 57995
const REUSE = 57996
const ROLE = 57997
const SECONDARY = 57998
const SECONDARY_ENGINE = 57999
const SECONDARY_ENGINE_ATTRIBUTE = 58000
const SECONDARY_LOAD = 58001
const SECONDARY_UNLOAD = 58002
const SIMPLE = 58003
const SKIP = 58004
const SRID = 58005
const THREAD_PRIORITY = 58006
const TIES = 58007
const UNBOUNDED = 58008
const VCPU = 58009
const VISIBLE = 58010
const RETURNING = 58011
const FORMAT_BYTES = 58012
const FORMAT_PICO_TIME = 58013
const PS_CURRENT_THREAD_ID = 58014
const PS_THREAD_ID = 58015
const GTID_SUBSET = 58016
const GTID_SUBTRACT = 58017
const WAIT_FOR_EXECUTED_GTID_SET = 58018
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58019
const FORMAT = 58020
const TREE = 58021
const VITESS = 58022
const TRADITIONAL = 58023
const VTEXPLAIN = 58024
const VEXPLAIN = 58025
const PLAN = 58026
const LOCAL = 58027
const LOW_PRIORITY = 58028
const NO_WRITE_TO_BINLOG = 58029
const LOGS = 58030
const ERROR = 58031
const GENERAL = 58032
const HOSTS = 58033
const OPTIMIZER_COSTS = 58034
const USER_RESOURCES = 58035
const SLOW = 58036
const CHANNEL = 58037
const RELAY = 58038
const EXPORT = 58039
const CURRENT = 58040
const ROW = 58041
const ROWS = 58042
const AVG_ROW_LENGTH = 58043
const CONNECTION = 58044
const CHECKSUM = 58045
const DELAY_KEY_WRITE = 58046
const ENCRYPTION = 58047
const ENGINE = 58048
const INSERT_METHOD = 58049
const MAX_ROWS = 58050
const MIN_ROWS = 58051
const PACK_KEYS = 58052
const PASSWORD = 58053
const FIXED = 58054
const DYNAMIC = 58055
const COMPRESSED = 58056
const REDUNDANT = 58057
const COMPACT = 58058
const ROW_FORMAT = 58059
const STATS_AUTO_RECALC = 58060
const STATS_PERSISTENT = 58061
const STATS_SAMPLE_PAGES = 58062
const STORAGE = 58063
const MEMORY = 58064
const DISK = 58065
const PARTITIONS = 58066
const LINEAR = 58067
const RANGE = 58068
const LIST = 58069
const SUBPARTITION = 58070
const SUBPARTITIONS = 58071
const HASH = 58072

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 157,
	748, 157,
	-2, 165,
	-1, 53,
	148, 165,
	190, 165,
	360, 165,
	-2, 524,
	-1, 61,
	38, 781,
	253, 781,
	264, 781,
	299, 795,
	300, 795,
	-2, 783,
	-1, 66,
	255, 819,
	-2, 817,
	-1, 122,
	252, 1616,
	-2, 131,
	-1, 124,
	1, 158,
	748, 158,
	-2, 165,
	-1, 135,
	149, 409,
	258, 409,
	-2, 513,
	-1, 154,
	148, 165,
	190, 165,
	360, 165,
	-2, 533,
	-1, 744,
	176, 41,
	-2, 43,
	-1, 953,
	95, 1633,
	-2, 1477,
	-1, 954,
	95, 1634,
	235, 1638,
	-2, 1478,
	-1, 955,
	235, 1637,
	-2, 42,
	-1, 1039,
	65, 891,
	-2, 904,
	-1, 1127,
	263, 1104,
	268, 1104,
	-2, 420,
	-1, 1212,
	1, 581,
	748, 581,
	-2, 165,
	-1, 1520,
	235, 1638,
	-2, 1478,
	-1, 1733,
	65, 892,
	-2, 908,
	-1, 1734,
	65, 893,
	-2, 909,
	-1, 1794,
	148, 165,
	190, 165,
	360, 165,
	-2, 459,
	-1, 1876,
	149, 409,
	258, 409,
	-2, 513,
	-1, 1885,
	263, 1105,
	268, 1105,
	-2, 421,
	-1, 2332,
	235, 1642,
	-2, 1636,
	-1, 2333,
	235, 1638,
	-2, 1634,
	-1, 2436,
	148, 165,
	190, 165,
	360, 165,
	-2, 460,
	-1, 2443,
	28, 186,
	-2, 188,
	-1, 2904,
	86, 96,
	96, 96,
	-2, 971,
	-1, 2973,
	723, 701,
	-2, 675,
	-1, 3197,
	55, 1581,
	-2, 1575,
	-1, 4035,
	723, 701,
	-2, 689,
	-1, 4127,
	98, 633,
	104, 633,
	114, 633,
	192, 633,
	193, 633,
	194, 633,
	195, 633,
	196, 633,
	197, 633,
	198, 633,
	199, 633,
	200, 633,
	201, 633,
	202, 633,
	203, 633,
	204, 633,
	205, 633,
	206, 633,
	207, 633,
	208, 633,
	209, 633,
	210, 633,
	211, 633,
	212, 633,
	213, 633,
	214, 633,
	215, 633,
	216, 633,
	217, 633,
	218, 633,
	219, 633,
	220, 633,
	221, 633,
	222, 633,
	223, 633,
	224, 633,
	225, 633,
	226, 633,
	227, 633,
	228, 633,
	229, 633,
	230, 633,
	231, 633,
	232, 633,
	233, 633,
	-2, 2013,
}

const yyPrivate = 57344

const yyLast = 55598

var yyAct = [...]int{
	969, 3686, 3687, 87, 3685, 4202, 957, 4106, 4016, 4125,
	3485, 2137, 3998, 4215, 3349, 4094, 4169, 1280, 964, 3249,
	956, 2125, 3256, 4170, 3298, 1278, 3996, 3921, 2361, 3210,
	2433, 3307, 3312, 3063, 3309, 3308, 3306, 3311, 3310, 3327,
	1797, 2005, 2363, 3264, 3622, 3635, 748, 2508, 3214, 3148,
	3326, 3525, 2063, 3211, 3531, 5, 3728, 3037, 3062, 742,
	2388, 3208, 3515, 3198, 918, 2471, 2938, 743, 3356, 2864,
	1854, 776, 917, 3019, 2496, 2476, 4067, 1753, 1089, 2970,
	3329, 2940, 2939, 2421, 163, 1057, 1037, 2539, 87, 2889,
	2409, 1064, 43, 2408, 2870, 1034, 2856, 1135, 2840, 2407,
	2159, 922, 3011, 2404, 42, 2285, 2121, 1037, 2071, 41,
	1883, 2317, 1901, 2517, 3553, 149, 2495, 2396, 2556, 2478,
	1122, 2931, 1099, 1786, 1117, 2906, 2411, 1714, 104, 1766,
	100, 2165, 1533, 2096, 2284, 2085, 1458, 1159, 105, 1443,
	2001, 1890, 1093, 1096, 2493, 1097, 758, 1128, 1982, 3213,
	2467, 2468, 1123, 1124, 1785, 753, 1771, 1074, 1076, 1046,
	1736, 2389, 2192, 1516, 1492, 2877, 3723, 2173, 745, 1043,
	2062, 2838, 85, 107, 1125, 99, 1268, 2013, 3486, 3715,
	1042, 1056, 1875, 132, 133, 167, 1208, 1036, 106, 1040,
	1044, 84, 93, 735, 1032, 752, 1537, 1041, 98, 4203,
	1069, 3623, 746, 3295, 1068, 4051, 1276, 919, 1059, 127,
	3542, 125, 126, 2510, 2511, 2512, 2510, 2993, 2992, 2554,
	1254, 2961, 3615, 679, 4152, 1542, 1031, 3578, 3027, 3028,
	1049, 4052, 4047, 2078, 1139, 2077, 134, 3690, 128, 1164,
	1090, 2358, 2359, 4046, 2076, 2075, 2074, 2073, 2044, 3690,
	1224, 676, 2836, 677, 2605, 4146, 1172, 3194, 4208, 4173,
	4156, 1106, 1757, 1755, 1454, 1101, 736, 1967, 4225, 4168,
	3152, 4154, 1083, 1033, 1475, 4193, 1050, 1035, 1084, 3489,
	3488, 2385, 2384, 4207, 2986, 4155, 3999, 2801, 2866, 1161,
	1114, 95, 1758, 1756, 2, 2541, 4153, 2083, 3375, 1058,
	1747, 4121, 1178, 1179, 1180, 720, 1183, 1184, 1185, 1186,
	128, 1138, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1181,
	1165, 1168, 1169, 3689, 1113, 1225, 1112, 1111, 2382, 111,
	112, 113, 4025, 116, 4047, 3689, 122, 3317, 3917, 191,
	923, 1030, 671, 720, 2543, 3916, 3628, 2963, 714, 3629,
	3314, 2983, 1163, 95, 733, 734, 95, 1162, 4183, 3927,
	3317, 2612, 4150, 190, 1025, 1026, 1027, 1028, 128, 3647,
	3636, 1039, 4095, 972, 973, 974, 2099, 4103, 1445, 2536,
	3926, 2130, 95, 4130, 3401, 1864, 129, 3000, 2542, 3001,
	1115, 714, 3246, 3247, 1787, 1105, 1788, 3315, 1107, 1071,
	1072, 1471, 172, 2837, 972, 973, 974, 3245, 1110, 3026,
	1217, 1218, 1472, 86, 1473, 1474, 2428, 2429, 2055, 2056,
	3315, 1082, 1086, 921, 2915, 2609, 3321, 2914, 2427, 3010,
	2916, 2610, 1249, 1250, 710, 1273, 2880, 1244, 86, 86,
	1023, 1022, 1220, 1207, 4017, 1232, 1232, 4135, 2920, 3321,
	1233, 1233, 2927, 1459, 3646, 1245, 3383, 4107, 1231, 2009,
	1230, 1238, 169, 1455, 2881, 170, 1108, 4133, 714, 714,
	2446, 2445, 3353, 1459, 3351, 2873, 2874, 4139, 4140, 3381,
	714, 714, 695, 2603, 2054, 728, 3266, 3267, 2058, 3742,
	726, 189, 2487, 4134, 714, 693, 95, 1110, 732, 1102,
	3357, 3012, 4111, 4174, 2360, 1718, 1104, 1103, 1783, 2201,
	3084, 2392, 3969, 4205, 3970, 2971, 2481, 2557, 1957, 2518,
	1983, 95, 95, 1182, 4175, 2570, 2566, 2568, 2569, 2567,
	2571, 2572, 2573, 4111, 3344, 690, 86, 2392, 1251, 88,
	3318, 1444, 3345, 1438, 705, 4030, 1272, 2996, 1252, 2563,
	1265, 1246, 1271, 1247, 1248, 1108, 1270, 1239, 1493, 700,
	715, 1469, 1958, 3318, 1959, 1213, 3354, 3014, 3352, 2606,
	703, 2607, 2580, 713, 2581, 1253, 2582, 3617, 2559, 3616,
	3372, 1469, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502,
	1501, 1503, 1504, 1137, 2583, 3265, 1109, 1188, 2010, 1187,
	3901, 1148, 2521, 715, 2564, 173, 1146, 3268, 2193, 2157,
	3694, 1118, 3613, 2195, 179, 1119, 2405, 2200, 2196, 95,
	4180, 2197, 2198, 2199, 2964, 1721, 2194, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 1119, 1157, 1156, 680,
	2561, 682, 696, 1155, 717, 4147, 716, 686, 1154, 684,
	688, 697, 689, 1153, 683, 1152, 694, 1151, 1150, 685,
	698, 699, 702, 706, 707, 708, 704, 701, 2480, 692,
	718, 1465, 3151, 1145, 1457, 1868, 3085, 1158, 3528, 3268,
	715, 715, 2560, 1094, 4226, 1109, 1094, 1094, 1131, 1130,
	1092, 1465, 715, 715, 1070, 2562, 1136, 2002, 2494, 3015,
	1277, 2547, 1277, 1277, 2390, 2391, 715, 2546, 2149, 2138,
	2139, 2140, 2141, 2151, 2142, 2143, 2144, 2156, 2152, 2145,
	2146, 2153, 2154, 2155, 2147, 2148, 2150, 3612, 1998, 1446,
	2390, 2391, 1175, 3288, 2995, 1167, 1862, 3179, 1784, 2998,
	164, 1130, 1861, 1860, 2981, 1166, 1085, 1079, 1077, 1999,
	1149, 1037, 1517, 1522, 1523, 1147, 1526, 1528, 1529, 1530,
	1531, 1532, 2540, 1535, 1536, 1538, 1538, 1858, 1538, 1538,
	1543, 1543, 1543, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1514, 4070, 3688,
	1435, 1670, 970, 1672, 1673, 1674, 1675, 1676, 1436, 1437,
	1266, 3688, 3576, 3577, 1453, 1543, 1543, 1543, 1543, 1543,
	1543, 2929, 1116, 1219, 4219, 1527, 2965, 1216, 2611, 4024,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 2962, 719, 3473, 1510, 1511, 1512,
	1513, 4109, 1969, 1968, 1970, 1971, 1972, 1524, 2985, 1518,
	1229, 1711, 1539, 3645, 1540, 1541, 711, 1464, 1461, 1462,
	1463, 1468, 1470, 1467, 970, 1466, 1507, 970, 4138, 165,
	1137, 712, 4109, 4108, 3529, 1460, 177, 1464, 1461, 1462,
	1463, 1468, 1470, 1467, 94, 1466, 1544, 1545, 3373, 2484,
	1889, 1223, 2984, 2610, 1507, 1460, 1228, 89, 1234, 1235,
	1236, 1237, 3319, 3320, 4108, 1717, 1082, 1086, 921, 94,
	94, 1211, 4137, 1078, 1037, 3323, 670, 185, 1037, 1746,
	2841, 2843, 1274, 1275, 1037, 3319, 3320, 4148, 3018, 1242,
	2485, 4012, 3009, 1137, 1261, 3008, 1263, 2483, 3323, 1508,
	1509, 3567, 3549, 2911, 911, 2876, 1987, 2813, 2538, 1137,
	2133, 1708, 3031, 1775, 714, 3160, 1988, 1671, 1222, 1709,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 2486, 1137, 1136, 1260, 1262, 184, 186, 187, 188,
	2627, 2482, 3159, 124, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1502, 1501, 1503, 1504, 2871, 1174, 3244, 2434, 1888,
	193, 678, 1727, 674, 1507, 1504, 104, 94, 3038, 2638,
	1487, 1053, 1728, 1269, 3177, 1725, 105, 4038, 1227, 1729,
	1160, 3608, 3058, 674, 1747, 1036, 3541, 1709, 2558, 1715,
	1677, 1678, 1679, 1680, 1681, 1682, 1136, 2067, 1995, 1047,
	1702, 1789, 119, 2166, 1255, 4217, 2954, 2174, 4218, 4184,
	4216, 107, 1136, 2166, 2014, 2647, 1067, 1067, 1130, 1133,
	1134, 1474, 1094, 3021, 2175, 674, 1127, 1131, 3020, 1473,
	1474, 3737, 1110, 1206, 1475, 1136, 3583, 4221, 3582, 2525,
	1140, 1130, 1258, 1898, 1881, 1142, 1259, 1126, 1897, 1143,
	1141, 1887, 3040, 2842, 1723, 1712, 1264, 1749, 3021, 2535,
	1984, 1137, 1985, 3020, 1033, 1986, 1724, 2638, 2533, 1148,
	1726, 1891, 1891, 1146, 1952, 1035, 1752, 1874, 1137, 120,
	2007, 1257, 4176, 3568, 4227, 1137, 1893, 1048, 1934, 3642,
	2530, 3643, 1865, 1866, 1867, 3909, 1075, 1210, 1903, 3573,
	1904, 720, 1906, 1908, 1241, 1277, 1912, 1914, 1916, 1918,
	1920, 1849, 1780, 1781, 2537, 1243, 1892, 972, 973, 974,
	1475, 3908, 3899, 3050, 3049, 3048, 715, 1857, 3042, 2530,
	3046, 1226, 3041, 2534, 3039, 1991, 1212, 1989, 1990, 3044,
	1992, 1993, 1994, 1871, 1872, 1870, 1884, 3659, 3043, 1495,
	1496, 1497, 1498, 1499, 1500, 1502, 1501, 1503, 1504, 1942,
	1943, 1256, 2172, 3252, 1136, 1948, 1949, 3045, 3047, 1140,
	1130, 2015, 2532, 1730, 1142, 4071, 4004, 1938, 1143, 1141,
	4228, 1136, 1472, 1173, 1473, 1474, 1895, 1170, 1136, 1747,
	1977, 1085, 1079, 1077, 1130, 1133, 1134, 2171, 1094, 1144,
	2003, 3658, 1127, 1131, 1209, 1497, 1498, 1499, 1500, 1502,
	1501, 1503, 1504, 1930, 3253, 3590, 1933, 3589, 1935, 2322,
	1109, 3348, 3579, 1493, 4072, 4005, 1489, 3296, 1490, 1499,
	1500, 1502, 1501, 1503, 1504, 1975, 1964, 3284, 128, 3255,
	2936, 1863, 1491, 1505, 1506, 1488, 2935, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1502, 1501, 1503, 1504, 2020, 3250,
	1475, 1976, 1113, 2934, 1112, 1111, 2490, 1978, 1472, 1962,
	1473, 1474, 2101, 1961, 1960, 1277, 1277, 3060, 3266, 3267,
	1950, 1944, 2042, 1440, 1475, 3251, 2102, 1505, 1506, 2100,
	87, 2016, 2017, 87, 190, 1941, 1493, 1475, 3030, 1940,
	720, 1939, 1475, 1910, 1722, 2021, 1974, 1963, 2674, 1783,
	1493, 2041, 2028, 2029, 2030, 4177, 2684, 129, 4033, 3257,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1501, 1503,
	1504, 1493, 2688, 172, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1502, 1501, 1503, 1504, 1475, 4032, 2918, 1493, 720,
	2626, 4008, 4189, 1747, 1747, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1502, 1501, 1503, 1504, 4007, 2128, 2128, 2126,
	2126, 2129, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502,
	1501, 1503, 1504, 2506, 1760, 2505, 2091, 3265, 4006, 4187,
	1747, 42, 1475, 169, 42, 1747, 170, 3904, 1475, 3268,
	1481, 1482, 1483, 1484, 1485, 1486, 1480, 1477, 1472, 3888,
	1473, 1474, 2862, 4204, 2018, 2322, 2504, 2212, 2503, 2319,
	3887, 2022, 189, 2024, 2025, 2026, 2027, 2502, 2321, 2501,
	2031, 1475, 1472, 1761, 1473, 1474, 3736, 4117, 1747, 1475,
	4164, 1747, 2043, 3734, 968, 1472, 1475, 1473, 1474, 3655,
	1472, 1475, 1473, 1474, 2089, 2090, 2087, 2088, 1475, 85,
	2862, 1747, 85, 2068, 2089, 2090, 2617, 2618, 1078, 1475,
	1708, 2161, 1707, 3390, 1706, 2098, 2686, 1705, 1709, 1475,
	2086, 2049, 2050, 3587, 4115, 1747, 1471, 1747, 101, 3572,
	4113, 1747, 1475, 1472, 2103, 1473, 1474, 3358, 102, 2104,
	1475, 2106, 2107, 2108, 2109, 2110, 2111, 2113, 2115, 2116,
	2117, 2118, 2119, 2120, 1471, 1747, 4026, 3254, 3355, 1475,
	3287, 2132, 3286, 3982, 1747, 1475, 2236, 2862, 4102, 2332,
	1475, 3980, 1747, 3936, 2105, 2945, 173, 2330, 3977, 1747,
	1472, 2932, 1473, 1474, 1747, 179, 1472, 1475, 1473, 1474,
	3959, 1747, 3935, 2331, 1475, 2176, 2177, 2178, 2179, 1747,
	3892, 3514, 1747, 2320, 1704, 1518, 1697, 2211, 2318, 2190,
	2601, 3507, 1747, 2397, 2398, 674, 2593, 674, 2592, 1472,
	2552, 1473, 1474, 2167, 3504, 1747, 2228, 1472, 2551, 1473,
	1474, 1475, 3502, 1747, 1472, 1475, 1473, 1474, 2387, 1472,
	2366, 1473, 1474, 2862, 4081, 3891, 1472, 1475, 1473, 1474,
	2045, 2329, 1747, 3634, 2335, 2336, 2011, 1472, 4178, 1473,
	1474, 2413, 3465, 1747, 2972, 1475, 1973, 1472, 103, 1473,
	1474, 2160, 1965, 2332, 104, 1475, 2862, 4077, 674, 1955,
	1472, 2330, 1473, 1474, 105, 1475, 3463, 1747, 1472, 2634,
	1473, 1474, 1951, 101, 1947, 104, 1946, 2402, 2365, 103,
	1475, 3989, 1747, 102, 2377, 105, 1521, 1472, 2443, 1473,
	1474, 164, 1475, 1472, 1945, 1473, 1474, 1762, 1472, 2097,
	1473, 1474, 2859, 3459, 1747, 3626, 4023, 3456, 1747, 3912,
	1747, 2862, 3900, 1747, 1099, 1472, 103, 1473, 1474, 3454,
	1747, 2950, 1472, 1267, 1473, 1474, 738, 2442, 1475, 2452,
	2453, 2454, 2455, 2447, 2438, 2448, 2449, 2450, 2451, 2437,
	1049, 3239, 2415, 3544, 1747, 2353, 1475, 1099, 4021, 2457,
	2419, 2610, 2459, 2460, 2461, 2462, 2378, 3452, 1747, 1472,
	3540, 1473, 1474, 1472, 2878, 1473, 1474, 1471, 2371, 2878,
	2372, 2380, 3450, 1747, 2473, 1472, 2441, 1473, 1474, 3258,
	2857, 1475, 2519, 3262, 3448, 1747, 4065, 2479, 1475, 2400,
	3261, 3626, 1747, 1472, 4037, 1473, 1474, 2907, 1083, 2425,
	2424, 2423, 2862, 1472, 1084, 1473, 1474, 2531, 2440, 2439,
	1475, 3543, 110, 1472, 1475, 1473, 1474, 2886, 1475, 2516,
	3446, 1747, 3493, 109, 3263, 108, 1475, 109, 1472, 3259,
	1473, 1474, 2489, 1475, 3260, 2862, 3624, 1139, 3444, 1747,
	1472, 2886, 1473, 1474, 2530, 1747, 3540, 1891, 3274, 110,
	3547, 1747, 2474, 1475, 2463, 2465, 2466, 2470, 2524, 2488,
	109, 2527, 108, 2528, 1475, 2908, 2492, 3182, 2500, 2426,
	103, 2530, 2544, 3442, 1747, 2910, 1472, 3209, 1473, 1474,
	3440, 1747, 2768, 1747, 3277, 3276, 2768, 2474, 3540, 1521,
	2523, 2526, 2522, 2671, 1472, 2670, 1473, 1474, 1747, 3274,
	3275, 1471, 3438, 1747, 1475, 2548, 3436, 1747, 2545, 2549,
	2550, 3896, 3272, 3273, 1138, 3272, 3271, 1475, 3434, 1747,
	2886, 1747, 2610, 2994, 1475, 3432, 1747, 1853, 2975, 1472,
	165, 1473, 1474, 2968, 2969, 1747, 1472, 177, 1473, 1474,
	2530, 1748, 1750, 2513, 2615, 3430, 1747, 674, 2395, 2555,
	2862, 2861, 1751, 1037, 1037, 1037, 3428, 1747, 1472, 2885,
	1473, 1474, 1472, 2356, 1473, 1474, 1472, 1475, 1473, 1474,
	1047, 2131, 1475, 1528, 1472, 1528, 1473, 1474, 185, 2131,
	1747, 1472, 2069, 1473, 1474, 1475, 2643, 1853, 1852, 1475,
	2053, 2630, 1795, 1794, 674, 1997, 3426, 1747, 1782, 1121,
	2586, 1472, 1038, 1473, 1474, 2907, 2636, 1120, 3299, 3412,
	1747, 2332, 1472, 674, 1473, 1474, 2635, 1493, 1475, 2633,
	2886, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 95, 4143, 4084, 2331, 3923, 184, 186, 187,
	188, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1501,
	1503, 1504, 1472, 2602, 1473, 1474, 1754, 1475, 3350, 3388,
	1747, 3889, 3749, 1521, 2642, 1472, 2608, 1473, 1474, 3591,
	3607, 1475, 1472, 2908, 1473, 1474, 2942, 2833, 1747, 3604,
	1475, 3931, 2616, 2610, 1475, 95, 3585, 3406, 3405, 1855,
	1521, 2472, 1764, 1521, 2622, 1521, 674, 3346, 3301, 2619,
	2620, 2621, 1475, 3297, 2976, 2469, 2464, 2098, 1475, 3924,
	2831, 1747, 2458, 1475, 2456, 1472, 1953, 1473, 1474, 1980,
	1472, 1886, 1473, 1474, 1882, 1851, 3592, 3593, 3594, 121,
	2623, 674, 2625, 1472, 1211, 1473, 1474, 1472, 2941, 1473,
	1474, 2628, 2487, 2629, 1475, 3554, 3555, 2006, 674, 2806,
	1747, 1475, 2369, 4199, 4197, 4171, 2646, 2047, 4045, 3964,
	3557, 3560, 1475, 1763, 674, 2624, 1472, 3293, 1473, 1474,
	3292, 674, 2783, 1747, 3291, 3209, 2775, 1747, 2955, 2587,
	2032, 2033, 674, 674, 674, 674, 674, 674, 674, 3559,
	1475, 2812, 2942, 3231, 2766, 1747, 3228, 1475, 3232, 2631,
	2764, 1747, 3227, 4041, 1475, 1472, 3609, 1473, 1474, 2800,
	3925, 1475, 2595, 2596, 2682, 3595, 3714, 2598, 3713, 1472,
	2157, 1473, 1474, 2844, 2048, 2386, 2599, 1759, 1472, 1051,
	1473, 1474, 1472, 675, 1473, 1474, 2751, 1747, 2375, 3548,
	3229, 3187, 1037, 2749, 1747, 3230, 2128, 3186, 2126, 2847,
	1472, 4003, 1473, 1474, 2747, 1747, 1472, 1475, 1473, 1474,
	3727, 1472, 3729, 1473, 1474, 2883, 2884, 2845, 3596, 3597,
	3598, 3712, 3536, 1475, 2413, 3196, 1996, 1037, 2903, 1475,
	1052, 1021, 2745, 1747, 1475, 3533, 3270, 2848, 2925, 2850,
	2937, 2946, 1472, 3532, 1473, 1474, 2743, 1747, 1475, 1472,
	2579, 1473, 1474, 2741, 1747, 1475, 1054, 737, 2863, 2578,
	1472, 2097, 1473, 1474, 1055, 2577, 1177, 2882, 2576, 2149,
	2138, 2139, 2140, 2141, 2151, 2142, 2143, 2144, 2156, 2152,
	2145, 2146, 2153, 2154, 2155, 2147, 2148, 2150, 1472, 1063,
	1473, 1474, 1176, 1715, 2835, 1472, 2872, 1473, 1474, 2739,
	1747, 2174, 1472, 1062, 1473, 1474, 1926, 2575, 1475, 1472,
	2574, 1473, 1474, 3366, 2941, 3562, 42, 2855, 2175, 2928,
	2930, 2737, 1747, 2901, 1475, 2900, 2735, 1747, 2902, 101,
	1475, 2921, 674, 1709, 3024, 2875, 1439, 2905, 2860, 102,
	2733, 1747, 2980, 3233, 1475, 2895, 2896, 2731, 1747, 1475,
	2982, 129, 3199, 3201, 3538, 1472, 2909, 1473, 1474, 1922,
	2912, 3202, 2479, 1927, 1928, 1929, 2397, 2398, 1475, 2922,
	2919, 1472, 1475, 1473, 1474, 103, 4213, 1472, 3289, 1473,
	1474, 101, 1472, 2590, 1473, 1474, 4120, 103, 2169, 2991,
	2933, 102, 1521, 2170, 1475, 4022, 1472, 3919, 1473, 1474,
	2729, 1747, 3269, 1472, 2899, 1473, 1474, 2943, 2381, 3516,
	1521, 2614, 1923, 1924, 1925, 1475, 2727, 1747, 2052, 2951,
	108, 2952, 2725, 1747, 2956, 2957, 2958, 110, 2944, 3988,
	3987, 2232, 1475, 2947, 2948, 2988, 2723, 1747, 109, 1874,
	108, 2721, 1747, 3967, 3185, 1475, 2977, 2978, 103, 109,
	3034, 3035, 3184, 2094, 2092, 2093, 1472, 3735, 1473, 1474,
	2719, 1747, 3733, 1475, 2717, 1747, 110, 3732, 2987, 3725,
	1475, 3605, 1472, 3537, 1473, 1474, 3535, 109, 1472, 108,
	1473, 1474, 1475, 3302, 2514, 1869, 2712, 1747, 1061, 3724,
	3013, 110, 1472, 3526, 1473, 1474, 2878, 1472, 4200, 1473,
	1474, 3698, 109, 3051, 3032, 3016, 2859, 2708, 1747, 1475,
	3088, 2315, 4201, 4200, 4201, 2672, 1472, 2367, 1473, 1474,
	1472, 1776, 1473, 1474, 2706, 1747, 1768, 3069, 3070, 3071,
	3072, 3073, 3074, 3075, 3076, 3077, 3078, 2699, 1747, 1475,
	4009, 2347, 1472, 3571, 1473, 1474, 2006, 3086, 114, 115,
	3, 97, 1, 3052, 1475, 2697, 1747, 1029, 2066, 1748,
	2354, 10, 3509, 1472, 2989, 1473, 1474, 2064, 1442, 2065,
	9, 1710, 8, 1441, 3505, 3575, 4132, 691, 2357, 1713,
	1472, 4172, 1473, 1474, 4128, 4129, 1475, 1966, 1956, 3637,
	1475, 1953, 2283, 1472, 1475, 1473, 1474, 3920, 3305, 2379,
	2520, 3471, 3603, 3090, 1475, 2477, 1129, 1067, 154, 3036,
	2435, 1472, 3146, 1473, 1474, 1475, 2436, 3053, 1472, 4097,
	1473, 1474, 118, 1087, 117, 3022, 1047, 1475, 3023, 1132,
	1472, 3467, 1473, 1474, 1240, 2891, 2894, 2895, 2896, 2892,
	3033, 2893, 2897, 674, 2515, 3627, 3403, 3153, 2926, 3164,
	2006, 674, 2444, 674, 1801, 674, 2422, 1472, 1799, 1473,
	1474, 1475, 1800, 2967, 1798, 3155, 1803, 1802, 4069, 3374,
	2413, 2673, 1475, 3079, 2320, 3472, 2320, 2057, 3402, 2318,
	727, 2318, 3394, 2898, 3126, 721, 3392, 1472, 1475, 1473,
	1474, 192, 3216, 1475, 87, 1790, 2829, 2413, 2413, 2413,
	2413, 2413, 1472, 1769, 1473, 1474, 2491, 2828, 2051, 1171,
	681, 3278, 3164, 2553, 687, 1525, 2046, 2413, 3183, 2824,
	2413, 2913, 1081, 3163, 1073, 3221, 3154, 2368, 3156, 3136,
	3137, 3138, 3139, 3140, 1472, 1475, 1473, 1474, 1472, 2007,
	1473, 1474, 1472, 3238, 1473, 1474, 2849, 1080, 3175, 3176,
	3178, 3180, 1472, 2823, 1473, 1474, 1475, 3897, 3217, 3190,
	3530, 1475, 3188, 1472, 2822, 1473, 1474, 3181, 3195, 3191,
	3197, 2415, 3203, 3204, 2865, 1472, 3200, 1473, 1474, 3193,
	2821, 4002, 3726, 4082, 3322, 2820, 1042, 2923, 3223, 3224,
	3222, 3226, 1475, 3225, 3330, 1040, 104, 3234, 2415, 2415,
	2415, 2415, 2415, 1041, 3242, 1475, 105, 3220, 1765, 1472,
	1475, 1473, 1474, 3492, 2645, 3248, 3240, 2164, 2415, 3241,
	1472, 2415, 1473, 1474, 1515, 1475, 2412, 2819, 3693, 2084,
	750, 3280, 3189, 3281, 749, 3279, 1472, 747, 1473, 1474,
	2851, 1472, 2879, 1473, 1474, 1479, 1475, 1478, 2810, 958,
	2839, 1777, 1475, 2809, 2890, 674, 2888, 3303, 3334, 2887,
	2479, 3324, 674, 2588, 2420, 3331, 3335, 3556, 3552, 3206,
	4124, 2414, 674, 674, 2410, 1475, 674, 3341, 2591, 2858,
	909, 908, 759, 1472, 2808, 1473, 1474, 751, 674, 3282,
	3283, 741, 3359, 971, 3362, 674, 907, 2807, 3212, 906,
	3361, 3332, 2804, 3212, 1472, 3333, 1473, 1474, 3369, 1472,
	2997, 1473, 1474, 3347, 2999, 2924, 3343, 2799, 3379, 3376,
	3377, 674, 3378, 1456, 1732, 3380, 1735, 3382, 2376, 3384,
	1100, 3371, 4028, 3395, 3396, 3397, 3398, 3399, 2792, 2613,
	1472, 3400, 1473, 1474, 2791, 1731, 4035, 3313, 3621, 3294,
	2973, 2507, 69, 1472, 46, 1473, 1474, 3997, 1472, 4066,
	1473, 1474, 901, 898, 3695, 3696, 3697, 2790, 1528, 3149,
	3150, 4048, 1528, 1472, 4049, 1473, 1474, 897, 4050, 2221,
	1452, 1449, 2632, 4145, 2059, 96, 2637, 36, 3517, 3304,
	3519, 35, 3487, 34, 1472, 33, 1473, 1474, 32, 3491,
	1472, 26, 1473, 1474, 25, 24, 1521, 23, 2006, 2640,
	22, 2641, 29, 19, 21, 20, 18, 2649, 3316, 4167,
	4212, 2651, 2652, 1472, 123, 1473, 1474, 55, 52, 50,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	131, 2669, 3215, 130, 3370, 53, 49, 1214, 47, 31,
	2413, 3518, 3522, 3520, 30, 17, 16, 15, 14, 13,
	12, 11, 7, 3569, 2675, 2676, 2677, 2678, 6, 2680,
	2681, 3534, 2683, 3527, 39, 38, 2685, 37, 1475, 28,
	2690, 2691, 3539, 2692, 1475, 27, 2695, 2696, 2698, 2700,
	2701, 2702, 2703, 2704, 2705, 2707, 2709, 2710, 2711, 2713,
	739, 2715, 2716, 2718, 2720, 2722, 2724, 2726, 2728, 2730,
	2732, 2734, 2736, 2738, 2740, 2742, 2744, 2746, 2748, 2750,
	2752, 2753, 2754, 3561, 2756, 3325, 2758, 3334, 2760, 2761,
	1710, 2763, 2765, 2767, 3331, 3335, 3494, 2770, 3496, 3497,
	3498, 2774, 3586, 3570, 3588, 2779, 2780, 2781, 2782, 3564,
	3558, 2415, 3563, 3631, 3632, 1475, 40, 4, 2793, 2794,
	2795, 2796, 2797, 2798, 3524, 2960, 2802, 2803, 3364, 3365,
	2789, 2509, 0, 1475, 2805, 0, 2788, 2226, 0, 2811,
	0, 0, 0, 0, 2814, 2815, 2816, 2817, 2818, 1475,
	0, 0, 0, 0, 1475, 2825, 2826, 3551, 2827, 1475,
	0, 2830, 2832, 2379, 0, 2834, 0, 1737, 0, 1060,
	3580, 3581, 1066, 1066, 0, 2846, 3565, 3566, 0, 1475,
	0, 1745, 0, 1475, 1738, 0, 1472, 0, 1473, 1474,
	3633, 674, 1472, 1475, 1473, 1474, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 2787, 3649, 2373,
	2374, 1744, 1742, 1743, 1739, 0, 1740, 2309, 2310, 2311,
	2312, 2313, 0, 3614, 1475, 2786, 0, 3618, 3619, 3620,
	0, 0, 1475, 0, 2334, 0, 3660, 2337, 2338, 1741,
	0, 2785, 0, 0, 0, 0, 2784, 0, 674, 0,
	0, 2778, 0, 674, 0, 1475, 0, 0, 0, 0,
	0, 0, 0, 1472, 0, 1473, 1474, 0, 0, 1475,
	0, 2777, 0, 2355, 0, 2776, 3701, 0, 3702, 3703,
	3704, 1472, 0, 1473, 1474, 2773, 3711, 0, 0, 3718,
	0, 3720, 0, 1475, 0, 0, 0, 1472, 1475, 1473,
	1474, 3691, 1472, 0, 1473, 1474, 0, 1472, 0, 1473,
	1474, 0, 0, 0, 3216, 0, 2772, 87, 0, 3216,
	3721, 0, 1475, 0, 2771, 0, 0, 1472, 674, 1473,
	1474, 1472, 0, 1473, 1474, 2959, 1475, 0, 0, 0,
	0, 1472, 1475, 1473, 1474, 0, 3722, 2769, 0, 0,
	0, 2128, 3654, 2126, 3751, 3731, 3730, 3741, 1475, 0,
	0, 2762, 3740, 0, 3738, 0, 0, 0, 0, 3743,
	0, 0, 1472, 0, 1473, 1474, 0, 0, 0, 0,
	1472, 1521, 1473, 1474, 3903, 2759, 0, 0, 3755, 0,
	2757, 0, 0, 0, 674, 674, 674, 674, 674, 674,
	0, 0, 0, 1472, 0, 1473, 1474, 0, 0, 0,
	3610, 3611, 0, 0, 2755, 0, 0, 1472, 42, 1473,
	1474, 674, 674, 3895, 0, 3894, 0, 0, 2714, 0,
	0, 0, 3922, 3910, 2694, 0, 3915, 0, 3914, 0,
	0, 1472, 0, 1473, 1474, 674, 1472, 3893, 1473, 1474,
	2693, 0, 0, 0, 0, 0, 0, 3961, 3962, 0,
	0, 0, 0, 3064, 3065, 3066, 3067, 3068, 3745, 3719,
	1472, 0, 1473, 1474, 0, 0, 0, 0, 0, 2128,
	0, 2126, 3965, 3083, 1472, 0, 1473, 1474, 0, 0,
	1472, 0, 1473, 1474, 0, 0, 0, 0, 0, 3752,
	3753, 0, 0, 0, 0, 0, 1472, 0, 1473, 1474,
	0, 0, 4010, 3216, 0, 3968, 3747, 0, 3212, 3971,
	0, 0, 0, 3905, 3906, 3907, 0, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1666, 1667, 1668, 1669, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 3966, 3995,
	0, 3985, 4011, 3994, 3215, 0, 0, 1475, 3991, 3215,
	3993, 1475, 4029, 0, 0, 1475, 2891, 2894, 2895, 2896,
	2892, 0, 2893, 2897, 0, 0, 3554, 3555, 0, 0,
	87, 0, 1067, 3218, 674, 0, 0, 0, 0, 4014,
	0, 0, 0, 0, 1475, 0, 0, 0, 0, 0,
	0, 3236, 0, 0, 0, 1521, 3898, 4018, 4031, 0,
	1521, 674, 674, 674, 674, 674, 4013, 4034, 0, 0,
	0, 0, 1475, 3235, 3902, 2653, 1737, 0, 0, 1953,
	0, 674, 4036, 0, 674, 3243, 2006, 0, 0, 0,
	1745, 0, 2668, 1738, 0, 0, 0, 0, 0, 2689,
	0, 0, 0, 2687, 0, 0, 0, 2679, 0, 0,
	0, 0, 4054, 0, 0, 4055, 0, 0, 1733, 1734,
	1744, 1742, 1743, 1739, 0, 1740, 0, 0, 4079, 0,
	674, 42, 4064, 87, 0, 0, 2650, 0, 0, 0,
	0, 1476, 0, 0, 0, 0, 1521, 0, 1741, 4073,
	0, 0, 0, 0, 0, 1472, 674, 1473, 1474, 1472,
	4085, 1473, 1474, 1472, 2644, 1473, 1474, 4110, 0, 0,
	674, 0, 1534, 3922, 4099, 4096, 0, 4088, 4093, 3368,
	4090, 4089, 4087, 4092, 4091, 4083, 0, 0, 4118, 0,
	674, 0, 1472, 674, 1473, 1474, 0, 0, 4015, 0,
	0, 3385, 3386, 3215, 3387, 3389, 3391, 0, 0, 4141,
	0, 0, 4131, 0, 0, 4136, 0, 4123, 0, 0,
	1472, 0, 1473, 1474, 4110, 4151, 0, 4149, 0, 0,
	0, 4162, 3404, 0, 42, 0, 1475, 3407, 0, 3409,
	3410, 3411, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420,
	3421, 3422, 3423, 3424, 3425, 3427, 3429, 3431, 3433, 3435,
	3437, 3439, 3441, 3443, 3445, 3447, 3449, 3451, 3453, 3455,
	3457, 3458, 3460, 3461, 3462, 3464, 2007, 4166, 3466, 4185,
	3468, 3469, 3470, 4191, 4192, 3474, 3475, 3476, 3477, 3478,
	3479, 3480, 3481, 3482, 3483, 3484, 2128, 4198, 2126, 4195,
	4181, 4110, 4206, 4196, 3490, 4182, 4161, 4194, 3495, 0,
	4080, 0, 3499, 3500, 4214, 3501, 3503, 0, 3506, 3508,
	4222, 3510, 3511, 3512, 3513, 4220, 0, 3212, 2639, 0,
	0, 3521, 4075, 0, 0, 0, 0, 0, 4020, 0,
	0, 4231, 4232, 3962, 4230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2128, 0, 2126, 4229, 674, 0,
	0, 0, 4027, 0, 0, 0, 3545, 3546, 0, 0,
	3550, 0, 4039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 1473, 1474, 0, 0,
	4157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4165, 674, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4074,
	0, 0, 1767, 674, 0, 0, 674, 674, 674, 0,
	0, 0, 0, 0, 0, 0, 3625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3644, 0, 0, 3648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3684, 0, 0, 0, 0, 0, 2012, 0,
	0, 0, 0, 0, 0, 3692, 0, 0, 0, 0,
	0, 0, 3699, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3128, 0, 3130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3141, 3142, 3143, 3144, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 1833, 1836, 1837, 1838, 1839,
	1840, 1841, 0, 1842, 1843, 1845, 1846, 1844, 1847, 1848,
	1821, 1822, 1823, 1824, 1804, 1805, 1834, 0, 1807, 0,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 0,
	0, 1817, 1825, 1826, 1827, 1828, 0, 1829, 1830, 1831,
	1832, 3911, 0, 1818, 0, 0, 0, 0, 0, 0,
	3918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	3928, 3929, 3930, 0, 3932, 0, 3933, 3934, 0, 0,
	0, 0, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944,
	3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954,
	3955, 3956, 3957, 3958, 0, 3960, 3963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3972, 3973, 3974, 3975, 3976, 3978, 3979, 3981, 3983,
	3984, 3986, 0, 0, 0, 3990, 0, 0, 0, 3992,
	0, 0, 2079, 2080, 2081, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2134, 2135, 0, 0, 0, 0, 2158,
	0, 0, 2162, 2163, 0, 0, 0, 2168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 0, 2191, 0, 0, 0, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2222, 0, 2227, 1835, 2229,
	2230, 2231, 0, 2233, 2234, 2235, 0, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 0, 0, 0, 0,
	0, 2314, 0, 2316, 0, 2323, 2324, 2325, 2326, 2327,
	2328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 0, 2348, 2349, 2350, 2351, 2352, 0, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4044, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 4059, 0, 0, 0, 0,
	0, 4062, 0, 4063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2393, 2394, 4078, 0, 0, 0,
	954, 0, 86, 44, 45, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	2432, 92, 4104, 4105, 0, 48, 76, 77, 0, 74,
	78, 0, 0, 0, 0, 0, 4112, 4114, 4116, 0,
	0, 75, 0, 4098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4122, 0, 195, 0, 0, 195,
	0, 0, 0, 725, 0, 0, 4144, 0, 731, 0,
	0, 0, 0, 62, 0, 0, 0, 0, 0, 195,
	0, 0, 2475, 1953, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 4163, 3776, 3778, 3777, 3843, 3844,
	3845, 3846, 3847, 3848, 3849, 3779, 3780, 801, 0, 0,
	731, 195, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 83, 0, 0, 4186, 4188,
	4190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4223,
	4224, 0, 0, 0, 0, 0, 0, 0, 0, 3682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	54, 57, 56, 59, 0, 73, 0, 0, 82, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 91, 90, 0, 0, 71, 72, 58,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 64,
	0, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3792, 3793, 0, 0, 3868, 3867, 3866, 0, 0, 3864,
	3865, 3863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2654, 2655, 2656,
	2657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3869, 924, 0, 777, 778,
	3870, 3871, 928, 3872, 780, 781, 925, 926, 0, 775,
	779, 927, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 4001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 3773, 3774,
	3775, 3781, 3782, 3783, 3794, 3841, 3842, 3850, 3852, 880,
	3851, 3853, 3854, 3855, 3858, 3859, 3860, 3861, 3856, 3857,
	3862, 3756, 3760, 3757, 3758, 3759, 3771, 3761, 3762, 3763,
	3764, 3765, 3766, 3767, 3768, 3769, 3770, 3772, 3873, 3874,
	3875, 3876, 3877, 3878, 3787, 3791, 3790, 3788, 3789, 3785,
	3786, 3813, 3812, 3814, 3815, 3816, 3817, 3818, 3819, 3821,
	3820, 3822, 3823, 3824, 3825, 3826, 3827, 3795, 3796, 3799,
	3800, 3798, 3797, 3801, 3810, 3811, 3802, 3803, 3804, 3805,
	3806, 3807, 3809, 3808, 3828, 3829, 3830, 3831, 3832, 3834,
	3833, 3837, 3838, 3836, 3835, 3840, 3839, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	930, 0, 931, 0, 0, 935, 0, 0, 0, 937,
	936, 0, 938, 900, 899, 0, 0, 932, 933, 0,
	934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 195, 0, 3879, 3880, 3881, 3882, 3883,
	3884, 3885, 3886, 0, 0, 0, 0, 0, 0, 1019,
	70, 4043, 2322, 0, 0, 1020, 0, 0, 0, 4053,
	0, 0, 0, 0, 0, 2127, 0, 0, 0, 0,
	731, 0, 731, 731, 0, 0, 0, 0, 0, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 195, 0, 0, 0, 0, 1024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1710, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3055, 3056, 3057, 0, 0, 3059, 0,
	0, 3061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3080, 3081, 3082, 0, 0, 0, 0, 0, 0,
	3087, 0, 0, 0, 0, 3089, 0, 0, 3091, 3092,
	3093, 0, 0, 0, 3094, 3095, 0, 0, 3096, 0,
	3097, 0, 0, 0, 0, 0, 0, 3098, 0, 3099,
	0, 0, 0, 3100, 0, 3101, 0, 0, 3102, 0,
	3103, 0, 3104, 0, 3105, 0, 3106, 0, 3107, 0,
	3108, 0, 3109, 0, 3110, 1520, 3111, 0, 3112, 0,
	3113, 0, 3114, 0, 3115, 0, 3116, 0, 3117, 0,
	3118, 0, 3119, 0, 0, 0, 3120, 0, 3121, 0,
	3122, 0, 0, 3123, 0, 3124, 0, 3125, 0, 2286,
	3127, 0, 0, 3129, 0, 0, 3131, 3132, 3133, 3134,
	0, 0, 0, 0, 3135, 2286, 2286, 2286, 2286, 2286,
	0, 0, 0, 195, 0, 0, 0, 731, 731, 0,
	3145, 0, 0, 0, 0, 0, 0, 0, 3158, 0,
	0, 3162, 0, 0, 0, 0, 195, 0, 0, 0,
	3165, 3166, 3167, 3168, 3169, 3170, 0, 0, 0, 3171,
	3172, 0, 3173, 0, 3174, 0, 0, 731, 0, 0,
	195, 0, 0, 0, 910, 0, 0, 0, 0, 0,
	0, 0, 731, 0, 0, 0, 0, 0, 1066, 195,
	0, 0, 0, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 0, 0, 0, 0, 3207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 731, 0,
	0, 0, 0, 0, 3237, 0, 731, 0, 0, 1520,
	731, 0, 729, 731, 731, 731, 731, 0, 731, 0,
	731, 731, 0, 731, 731, 731, 731, 731, 731, 0,
	0, 0, 0, 0, 0, 0, 1520, 731, 731, 1520,
	731, 1520, 195, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 1091, 3300, 1098, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 731, 0, 195, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 190, 0, 0, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 731, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3393, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3408,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 1215, 150, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 709,
	0, 0, 0, 0, 0, 730, 0, 138, 139, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 730, 0, 730,
	0, 0, 0, 0, 0, 731, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 136, 158, 143, 135, 0, 156, 157,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 144, 1820, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 147,
	145, 140, 141, 142, 146, 0, 0, 0, 3606, 0,
	0, 137, 0, 0, 0, 0, 1520, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3630, 0, 0, 0, 0, 0, 0, 0, 1833,
	1836, 1837, 1838, 1839, 1840, 1841, 0, 1842, 1843, 1845,
	1846, 1844, 1847, 1848, 1821, 1822, 1823, 1824, 1804, 1805,
	1834, 0, 1807, 0, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 0, 0, 1817, 1825, 1826, 1827, 1828,
	0, 1829, 1830, 1831, 1832, 0, 0, 1818, 0, 3650,
	0, 3651, 0, 3652, 0, 3653, 0, 0, 0, 0,
	164, 0, 0, 3656, 3657, 0, 0, 0, 0, 0,
	0, 0, 0, 3662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3663, 0, 3664,
	0, 3665, 0, 3666, 0, 3667, 0, 3668, 0, 3669,
	0, 3670, 2333, 3671, 0, 3672, 0, 3673, 0, 3674,
	0, 3675, 0, 3676, 0, 3677, 0, 3678, 0, 0,
	3679, 0, 0, 0, 3680, 0, 3681, 0, 0, 0,
	0, 0, 3683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 731, 0, 3700, 0, 159, 0, 0, 0,
	1779, 0, 0, 3705, 0, 3706, 3707, 0, 3708, 0,
	3709, 0, 0, 0, 0, 3710, 0, 0, 0, 1796,
	0, 0, 195, 0, 0, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 3739, 731, 0, 0, 2333, 195, 0, 195,
	0, 195, 195, 0, 1279, 3748, 1279, 1279, 3750, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 0,
	3754, 0, 0, 0, 0, 0, 0, 1447, 0, 0,
	0, 0, 0, 0, 0, 0, 3890, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 0, 152, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 731, 731, 731, 0, 0, 0, 1981, 0, 165,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 731, 0, 0, 2008, 0, 0, 731, 731, 0,
	0, 731, 0, 731, 0, 0, 0, 0, 0, 731,
	2019, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 731,
	0, 0, 0, 731, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4000, 0, 0, 0, 0,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 0, 0, 0, 0, 0, 184, 186, 187, 188,
	0, 195, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 195,
	0, 0, 195, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 730, 1434, 730,
	730, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 2966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 1720, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 2333, 0, 0, 0, 0, 0,
	162, 1773, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 4042, 0, 0, 0, 169, 1850, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 1878, 161, 160, 189, 0, 0, 0, 0,
	1091, 0, 1885, 0, 0, 0, 0, 0, 4056, 0,
	1894, 4057, 0, 4058, 1896, 0, 0, 1899, 1900, 1902,
	1902, 0, 1902, 0, 1902, 1902, 0, 1911, 1902, 1902,
	1902, 1902, 1902, 0, 0, 0, 0, 0, 0, 0,
	0, 1931, 1932, 0, 1091, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 2004, 155, 1879, 158, 0,
	1876, 0, 156, 157, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 4142, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 730, 0, 0, 0, 1279,
	0, 0, 0, 0, 4158, 0, 4159, 0, 4160, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 0, 0, 195, 0, 0, 0, 4209, 195,
	4210, 0, 0, 0, 0, 0, 0, 0, 0, 2399,
	0, 0, 0, 730, 0, 730, 0, 2403, 0, 2406,
	0, 0, 2072, 730, 164, 0, 1519, 730, 0, 0,
	730, 730, 730, 730, 0, 730, 0, 730, 730, 0,
	730, 730, 730, 730, 730, 730, 0, 0, 0, 0,
	0, 0, 0, 1519, 730, 730, 1519, 730, 1519, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 1279,
	1279, 0, 730, 0, 0, 731, 0, 0, 0, 190,
	0, 0, 731, 2060, 0, 730, 731, 731, 730, 0,
	1873, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 129, 0, 151, 0, 0, 1520, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	195, 195, 195, 195, 195, 195, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2122, 0, 0, 0, 0, 195, 195, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 0, 0,
	0, 2072, 0, 1877, 1878, 161, 160, 189, 2565, 152,
	0, 0, 153, 0, 0, 0, 0, 0, 2584, 2585,
	0, 0, 2589, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2594, 0, 0, 0, 0, 0,
	0, 2597, 0, 165, 0, 0, 0, 731, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 730, 0, 0, 1279, 0, 155, 1879,
	158, 0, 1876, 0, 156, 157, 730, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 0, 0, 0, 0,
	184, 186, 187, 188, 0, 0, 2370, 0, 0, 0,
	0, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 2383,
	0, 0, 0, 0, 2136, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 731, 0, 1773, 0, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 731, 0, 0, 0, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 0, 731, 0, 0,
	0, 1520, 0, 0, 731, 731, 1520, 195, 195, 195,
	195, 195, 0, 0, 0, 0, 164, 0, 0, 195,
	0, 0, 0, 0, 0, 195, 0, 195, 0, 0,
	195, 195, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1098, 0,
	0, 0, 0, 0, 0, 2497, 2498, 2499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 195, 0, 0, 0,
	0, 1098, 1894, 0, 0, 1894, 0, 1894, 0, 731,
	0, 0, 1520, 2529, 0, 0, 0, 731, 0, 730,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 2122, 0, 0, 195, 2122, 2122, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2904,
	730, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 730, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2604, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 731, 0, 0,
	0, 0, 0, 0, 2953, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 730, 730,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 195, 0, 0, 0, 730, 0,
	0, 0, 0, 0, 730, 730, 0, 0, 730, 0,
	730, 0, 0, 0, 0, 0, 730, 0, 1279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3002, 3003, 3004, 3005, 3006, 3007, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 0, 0, 0,
	195, 730, 184, 186, 187, 188, 730, 2072, 3017, 0,
	730, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 3025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 195, 195, 195, 0, 95, 0, 0, 1019,
	0, 0, 731, 731, 959, 1020, 972, 973, 974, 960,
	0, 0, 961, 962, 0, 963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 968, 0, 975, 976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 731, 731, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3336, 3337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 0, 0, 0, 0, 1519,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	2852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	731, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 0, 195, 0, 0, 731, 0,
	731, 0, 0, 0, 3339, 3340, 0, 0, 0, 0,
	0, 0, 2949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2383,
	0, 0, 0, 0, 0, 0, 2974, 0, 0, 0,
	1894, 1894, 0, 0, 0, 2979, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 3290, 0, 0, 0,
	0, 195, 2990, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 0, 924,
	0, 0, 3328, 0, 0, 928, 0, 0, 0, 925,
	926, 0, 0, 0, 927, 929, 3342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3360, 0, 0, 3363,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 731, 0, 0, 0, 0, 0, 0, 731,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2917, 0, 0, 0, 0, 0, 0, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 730, 730, 0, 0, 0, 730, 0,
	0, 0, 0, 0, 3523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1279, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1902,
	0, 0, 0, 0, 731, 195, 0, 0, 0, 3584,
	0, 0, 0, 0, 0, 0, 0, 3192, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 3599,
	0, 1279, 3600, 3601, 3602, 0, 0, 0, 3219, 1902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	731, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 731, 0, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 2333,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	0, 2383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	731, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 195,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 731, 0, 0, 0, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 1519, 0,
	0, 730, 730, 1519, 1019, 0, 0, 0, 0, 0,
	1020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 0, 1519,
	0, 0, 0, 0, 730, 0, 0, 0, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	0, 0, 0, 0, 0, 0, 3367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2383, 2383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3638, 3639, 3640, 3641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4040, 0, 0, 0, 0,
	0, 0, 3716, 0, 3716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3744, 0, 3746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 730,
	730, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3716, 0, 0, 0,
	0, 0, 0, 3716, 0, 3716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2383, 730, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 730, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 730, 0, 730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 4060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2383, 0, 4076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4068, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 1850, 0, 4126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 730, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	730, 0, 730, 1417, 1401, 528, 0, 1343, 1420, 1311,
	1330, 1430, 1333, 1336, 1380, 1289, 1358, 416, 1327, 1315,
	1284, 1322, 1285, 1313, 1345, 270, 1310, 1403, 1362, 1419,
	366, 267, 1291, 1282, 204, 505, 1316, 430, 1332, 203,
	1382, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 1426, 370, 1368, 0, 497,
	401, 0, 0, 0, 1407, 1406, 1337, 1347, 1409, 1356,
	1394, 1342, 1381, 1299, 1367, 1421, 1328, 1377, 1422, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	4100, 507, 955, 0, 0, 0, 0, 4101, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 1324, 1374, 607, 1416, 1325, 1376, 265, 321, 272,
	264, 580, 1427, 1408, 1288, 1355, 1415, 1350, 0, 0,
	229, 1418, 1349, 0, 1379, 0, 1433, 1283, 1370, 0,
	1286, 1290, 1429, 1413, 1319, 275, 0, 0, 0, 0,
	0, 0, 0, 1346, 1357, 1391, 1395, 1340, 0, 0,
	0, 0, 0, 0, 0, 0, 1317, 0, 1366, 0,
	0, 0, 1295, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 1298, 0, 1318, 1392, 0, 1281, 297, 1292, 402,
	257, 0, 453, 1399, 1412, 1341, 626, 1414, 1339, 1338,
	1386, 1296, 1405, 1331, 365, 1294, 330, 197, 225, 0,
	1329, 412, 461, 473, 1404, 1314, 1323, 253, 1321, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 1365,
	1384, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 1293, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	1309, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 1400, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 1389, 1432, 425, 472, 240, 604, 496, 199,
	1303, 1308, 1301, 0, 254, 255, 1371, 575, 1304, 1302,
	1360, 1361, 1305, 1423, 1424, 1425, 1410, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 1393, 1297, 0, 1306, 1307,
	398, 1402, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 1364, 196, 221, 368, 1428, 454, 288, 647, 615,
	484, 610, 206, 223, 1300, 262, 1312, 1320, 0, 1326,
	1334, 1335, 1348, 1351, 1352, 1353, 1354, 1372, 1373, 1375,
	1383, 1385, 1388, 1390, 1397, 1411, 1431, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 1363, 1369, 381, 281, 305,
	320, 1378, 614, 502, 227, 466, 290, 251, 1396, 1398,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 1359, 1387, 376, 576, 577, 316,
	396, 0, 0, 0, 0, 0, 0, 1417, 1401, 528,
	0, 1343, 1420, 1311, 1330, 1430, 1333, 1336, 1380, 1289,
	1358, 416, 1327, 1315, 1284, 1322, 1285, 1313, 1345, 270,
	1310, 1403, 1362, 1419, 366, 267, 1291, 1282, 204, 505,
	1316, 430, 1332, 203, 1382, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 1426,
	370, 1368, 0, 497, 401, 0, 0, 0, 1407, 1406,
	1337, 1347, 1409, 1356, 1394, 1342, 1381, 1299, 1367, 1421,
	1328, 1377, 1422, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 1324, 1374, 607, 1416, 1325,
	1376, 265, 321, 272, 264, 580, 1427, 1408, 1288, 1355,
	1415, 1350, 0, 0, 229, 1418, 1349, 0, 1379, 0,
	1433, 1283, 1370, 0, 1286, 1290, 1429, 1413, 1319, 275,
	0, 0, 0, 0, 0, 0, 0, 1346, 1357, 1391,
	1395, 1340, 0, 0, 0, 0, 0, 0, 3244, 0,
	1317, 0, 1366, 0, 0, 0, 1295, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 1298, 0, 1318, 1392, 0,
	1281, 297, 1292, 402, 257, 0, 453, 1399, 1412, 1341,
	626, 1414, 1339, 1338, 1386, 1296, 1405, 1331, 365, 1294,
	330, 197, 225, 0, 1329, 412, 461, 473, 1404, 1314,
	1323, 253, 1321, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 1365, 1384, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 1293, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 1309, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 1400, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 1389, 1432, 425, 472,
	240, 604, 496, 199, 1303, 1308, 1301, 0, 254, 255,
	1371, 575, 1304, 1302, 1360, 1361, 1305, 1423, 1424, 1425,
	1410, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 1393,
	1297, 0, 1306, 1307, 398, 1402, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 1364, 196, 221, 368, 1428,
	454, 288, 647, 615, 484, 610, 206, 223, 1300, 262,
	1312, 1320, 0, 1326, 1334, 1335, 1348, 1351, 1352, 1353,
	1354, 1372, 1373, 1375, 1383, 1385, 1388, 1390, 1397, 1411,
	1431, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 1363,
	1369, 381, 281, 305, 320, 1378, 614, 502, 227, 466,
	290, 251, 1396, 1398, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 1359, 1387,
	376, 576, 577, 316, 396, 0, 0, 0, 0, 0,
	0, 1417, 1401, 528, 0, 1343, 1420, 1311, 1330, 1430,
	1333, 1336, 1380, 1289, 1358, 416, 1327, 1315, 1284, 1322,
	1285, 1313, 1345, 270, 1310, 1403, 1362, 1419, 366, 267,
	1291, 1282, 204, 505, 1316, 430, 1332, 203, 1382, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 1426, 370, 1368, 0, 497, 401, 0,
	0, 0, 1407, 1406, 1337, 1347, 1409, 1356, 1394, 1342,
	1381, 1299, 1367, 1421, 1328, 1377, 1422, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 1324,
	1374, 607, 1416, 1325, 1376, 265, 321, 272, 264, 580,
	1427, 1408, 1288, 1355, 1415, 1350, 0, 0, 229, 1418,
	1349, 0, 1379, 0, 1433, 1283, 1370, 0, 1286, 1290,
	1429, 1413, 1319, 275, 0, 0, 0, 0, 0, 0,
	0, 1346, 1357, 1391, 1395, 1340, 0, 0, 0, 0,
	0, 0, 3205, 0, 1317, 0, 1366, 0, 0, 0,
	1295, 1287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 1298,
	0, 1318, 1392, 0, 1281, 297, 1292, 402, 257, 0,
	453, 1399, 1412, 1341, 626, 1414, 1339, 1338, 1386, 1296,
	1405, 1331, 365, 1294, 330, 197, 225, 0, 1329, 412,
	461, 473, 1404, 1314, 1323, 253, 1321, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 1365, 1384, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	1293, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 1309, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 1400, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	1389, 1432, 425, 472, 240, 604, 496, 199, 1303, 1308,
	1301, 0, 254, 255, 1371, 575, 1304, 1302, 1360, 1361,
	1305, 1423, 1424, 1425, 1410, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 1393, 1297, 0, 1306, 1307, 398, 1402,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 1364,
	196, 221, 368, 1428, 454, 288, 647, 615, 484, 610,
	206, 223, 1300, 262, 1312, 1320, 0, 1326, 1334, 1335,
	1348, 1351, 1352, 1353, 1354, 1372, 1373, 1375, 1383, 1385,
	1388, 1390, 1397, 1411, 1431, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 1363, 1369, 381, 281, 305, 320, 1378,
	614, 502, 227, 466, 290, 251, 1396, 1398, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 1359, 1387, 376, 576, 577, 316, 396, 0,
	0, 0, 0, 0, 0, 1417, 1401, 528, 0, 1343,
	1420, 1311, 1330, 1430, 1333, 1336, 1380, 1289, 1358, 416,
	1327, 1315, 1284, 1322, 1285, 1313, 1345, 270, 1310, 1403,
	1362, 1419, 366, 267, 1291, 1282, 204, 505, 1316, 430,
	1332, 203, 1382, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 1426, 370, 1368,
	0, 497, 401, 0, 0, 0, 1407, 1406, 1337, 1347,
	1409, 1356, 1394, 1342, 1381, 1299, 1367, 1421, 1328, 1377,
	1422, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 1324, 1374, 607, 1416, 1325, 1376, 265,
	321, 272, 264, 580, 1427, 1408, 1288, 1355, 1415, 1350,
	0, 0, 229, 1418, 1349, 0, 1379, 0, 1433, 1283,
	1370, 0, 1286, 1290, 1429, 1413, 1319, 275, 0, 0,
	0, 0, 0, 0, 0, 1346, 1357, 1391, 1395, 1340,
	0, 0, 0, 0, 0, 0, 2401, 0, 1317, 0,
	1366, 0, 0, 0, 1295, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 1298, 0, 1318, 1392, 0, 1281, 297,
	1292, 402, 257, 0, 453, 1399, 1412, 1341, 626, 1414,
	1339, 1338, 1386, 1296, 1405, 1331, 365, 1294, 330, 197,
	225, 0, 1329, 412, 461, 473, 1404, 1314, 1323, 253,
	1321, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 1365, 1384, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 1293, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 1309, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 1400, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 1389, 1432, 425, 472, 240, 604,
	496, 199, 1303, 1308, 1301, 0, 254, 255, 1371, 575,
	1304, 1302, 1360, 1361, 1305, 1423, 1424, 1425, 1410, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 1393, 1297, 0,
	1306, 1307, 398, 1402, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 1364, 196, 221, 368, 1428, 454, 288,
	647, 615, 484, 610, 206, 223, 1300, 262, 1312, 1320,
	0, 1326, 1334, 1335, 1348, 1351, 1352, 1353, 1354, 1372,
	1373, 1375, 1383, 1385, 1388, 1390, 1397, 1411, 1431, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 1363, 1369, 381,
	281, 305, 320, 1378, 614, 502, 227, 466, 290, 251,
	1396, 1398, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 1359, 1387, 376, 576,
	577, 316, 396, 0, 0, 0, 0, 0, 0, 1417,
	1401, 528, 0, 1343, 1420, 1311, 1330, 1430, 1333, 1336,
	1380, 1289, 1358, 416, 1327, 1315, 1284, 1322, 1285, 1313,
	1345, 270, 1310, 1403, 1362, 1419, 366, 267, 1291, 1282,
	204, 505, 1316, 430, 1332, 203, 1382, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 1426, 370, 1368, 0, 497, 401, 0, 0, 0,
	1407, 1406, 1337, 1347, 1409, 1356, 1394, 1342, 1381, 1299,
	1367, 1421, 1328, 1377, 1422, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 0, 507, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 1324, 1374, 607,
	1416, 1325, 1376, 265, 321, 272, 264, 580, 1427, 1408,
	1288, 1355, 1415, 1350, 0, 0, 229, 1418, 1349, 0,
	1379, 0, 1433, 1283, 1370, 0, 1286, 1290, 1429, 1413,
	1319, 275, 0, 0, 0, 0, 0, 0, 0, 1346,
	1357, 1391, 1395, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 1317, 0, 1366, 0, 0, 0, 1295, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 1298, 0, 1318,
	1392, 0, 1281, 297, 1292, 402, 257, 0, 453, 1399,
	1412, 1341, 626, 1414, 1339, 1338, 1386, 1296, 1405, 1331,
	365, 1294, 330, 197, 225, 0, 1329, 412, 461, 473,
	1404, 1314, 1323, 253, 1321, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 1365, 1384, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 1293, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 1309, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 1400,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 1389, 1432,
	425, 472, 240, 604, 496, 199, 1303, 1308, 1301, 0,
	254, 255, 1371, 575, 1304, 1302, 1360, 1361, 1305, 1423,
	1424, 1425, 1410, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 1393, 1297, 0, 1306, 1307, 398, 1402, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 1364, 196, 221,
	368, 1428, 454, 288, 647, 615, 484, 610, 206, 223,
	1300, 262, 1312, 1320, 0, 1326, 1334, 1335, 1348, 1351,
	1352, 1353, 1354, 1372, 1373, 1375, 1383, 1385, 1388, 1390,
	1397, 1411, 1431, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 1363, 1369, 381, 281, 305, 320, 1378, 614, 502,
	227, 466, 290, 251, 1396, 1398, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	1359, 1387, 376, 576, 577, 316, 396, 0, 0, 0,
	0, 0, 0, 1417, 1401, 528, 0, 1343, 1420, 1311,
	1330, 1430, 1333, 1336, 1380, 1289, 1358, 416, 1327, 1315,
	1284, 1322, 1285, 1313, 1345, 270, 1310, 1403, 1362, 1419,
	366, 267, 1291, 1282, 204, 505, 1316, 430, 1332, 203,
	1382, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 1426, 370, 1368, 0, 497,
	401, 0, 0, 0, 1407, 1406, 1337, 1347, 1409, 1356,
	1394, 1342, 1381, 1299, 1367, 1421, 1328, 1377, 1422, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 1324, 1374, 607, 1416, 1325, 1376, 265, 321, 272,
	264, 580, 1427, 1408, 1288, 1355, 1415, 1350, 0, 0,
	229, 1418, 1349, 0, 1379, 0, 1433, 1283, 1370, 0,
	1286, 1290, 1429, 1413, 1319, 275, 0, 0, 0, 0,
	0, 0, 0, 1346, 1357, 1391, 1395, 1340, 0, 0,
	0, 0, 0, 0, 0, 0, 1317, 0, 1366, 0,
	0, 0, 1295, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 1298, 0, 1318, 1392, 0, 1281, 297, 1292, 402,
	257, 0, 453, 1399, 1412, 1341, 626, 1414, 1339, 1338,
	1386, 1296, 1405, 1331, 365, 1294, 330, 197, 225, 0,
	1329, 412, 461, 473, 1404, 1314, 1323, 253, 1321, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 1365,
	1384, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 1293, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	1309, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 1400, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 1389, 1432, 425, 472, 240, 604, 496, 199,
	1303, 1308, 1301, 0, 254, 255, 1371, 575, 1304, 1302,
	1360, 1361, 1305, 1423, 1424, 1425, 1410, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 1393, 1297, 0, 1306, 1307,
	398, 1402, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 1364, 196, 221, 368, 1428, 454, 288, 647, 615,
	484, 610, 206, 223, 1300, 262, 1312, 1320, 0, 1326,
	1334, 1335, 1348, 1351, 1352, 1353, 1354, 1372, 1373, 1375,
	1383, 1385, 1388, 1390, 1397, 1411, 1431, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 1363, 1369, 381, 281, 305,
	320, 1378, 614, 502, 227, 466, 290, 251, 1396, 1398,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 1359, 1387, 376, 576, 577, 316,
	396, 0, 0, 0, 0, 0, 0, 1417, 1401, 528,
	0, 1343, 1420, 1311, 1330, 1430, 1333, 1336, 1380, 1289,
	1358, 416, 1327, 1315, 1284, 1322, 1285, 1313, 1345, 270,
	1310, 1403, 1362, 1419, 366, 267, 1291, 1282, 204, 505,
	1316, 430, 1332, 203, 1382, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 1426,
	370, 1368, 0, 497, 401, 0, 0, 0, 1407, 1406,
	1337, 1347, 1409, 1356, 1394, 1342, 1381, 1299, 1367, 1421,
	1328, 1377, 1422, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 1324, 1374, 607, 1416, 1325,
	1376, 265, 321, 272, 264, 580, 1427, 1408, 1288, 1355,
	1415, 1350, 0, 0, 229, 1418, 1349, 0, 1379, 0,
	1433, 1283, 1370, 0, 1286, 1290, 1429, 1413, 1319, 275,
	0, 0, 0, 0, 0, 0, 0, 1346, 1357, 1391,
	1395, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	1317, 0, 1366, 0, 0, 0, 1295, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 1298, 0, 1318, 1392, 0,
	1281, 297, 1292, 402, 257, 0, 453, 1399, 1412, 1341,
	626, 1414, 1339, 1338, 1386, 1296, 1405, 1331, 365, 1294,
	330, 197, 225, 0, 1329, 412, 461, 473, 1404, 1314,
	1323, 253, 1321, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 1365, 1384, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 1293, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 1309, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 1400, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 1389, 1432, 425, 472,
	240, 604, 496, 199, 1303, 1308, 1301, 0, 254, 255,
	1371, 575, 1304, 1302, 1360, 1361, 1305, 1423, 1424, 1425,
	1410, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 1393,
	1297, 0, 1306, 1307, 398, 1402, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 1364, 196, 221, 368, 1428,
	454, 288, 647, 615, 484, 610, 206, 223, 1300, 262,
	1312, 1320, 0, 1326, 1334, 1335, 1348, 1351, 1352, 1353,
	1354, 1372, 1373, 1375, 1383, 1385, 1388, 1390, 1397, 1411,
	1431, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 1363,
	1369, 381, 281, 305, 320, 1378, 614, 502, 227, 466,
	290, 251, 1396, 1398, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 1359, 1387,
	376, 576, 577, 316, 396, 0, 0, 0, 0, 0,
	0, 1417, 1401, 528, 0, 1343, 1420, 1311, 1330, 1430,
	1333, 1336, 1380, 1289, 1358, 416, 1327, 1315, 1284, 1322,
	1285, 1313, 1345, 270, 1310, 1403, 1362, 1419, 366, 267,
	1291, 1282, 204, 505, 1316, 430, 1332, 203, 1382, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 1426, 370, 1368, 0, 497, 401, 0,
	0, 0, 1407, 1406, 1337, 1347, 1409, 1356, 1394, 1342,
	1381, 1299, 1367, 1421, 1328, 1377, 1422, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 1324,
	1374, 607, 1416, 1325, 1376, 265, 321, 272, 264, 580,
	1427, 1408, 1288, 1355, 1415, 1350, 0, 0, 229, 1418,
	1349, 0, 1379, 0, 1433, 1283, 1370, 0, 1286, 1290,
	1429, 1413, 1319, 275, 0, 0, 0, 0, 0, 0,
	0, 1346, 1357, 1391, 1395, 1340, 0, 0, 0, 0,
	0, 0, 0, 0, 1317, 0, 1366, 0, 0, 0,
	1295, 1287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 1298,
	0, 1318, 1392, 0, 1281, 297, 1292, 402, 257, 0,
	453, 1399, 1412, 1341, 626, 1414, 1339, 1338, 1386, 1296,
	1405, 1331, 365, 1294, 330, 197, 225, 0, 1329, 412,
	461, 473, 1404, 1314, 1323, 253, 1321, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 1365, 1384, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	1293, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 1309, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 1400, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	1389, 1432, 425, 472, 240, 604, 496, 199, 1303, 1308,
	1301, 0, 254, 255, 1371, 575, 1304, 1302, 1360, 1361,
	1305, 1423, 1424, 1425, 1410, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 1393, 1297, 0, 1306, 1307, 398, 1402,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 1364,
	196, 221, 368, 1428, 454, 288, 647, 615, 484, 610,
	206, 223, 1300, 262, 1312, 1320, 0, 1326, 1334, 1335,
	1348, 1351, 1352, 1353, 1354, 1372, 1373, 1375, 1383, 1385,
	1388, 1390, 1397, 1411, 1431, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 1363, 1369, 381, 281, 305, 320, 1378,
	614, 502, 227, 466, 290, 251, 1396, 1398, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 1359, 1387, 376, 576, 577, 316, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 760, 0, 0, 0, 270, 765, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 772, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 1019, 507, 955, 744, 921, 959, 1020, 972,
	973, 974, 960, 0, 238, 961, 962, 245, 963, 0,
	920, 803, 805, 804, 870, 871, 872, 873, 874, 875,
	876, 806, 807, 801, 968, 607, 975, 976, 0, 265,
	321, 272, 264, 580, 0, 0, 2223, 2224, 2225, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	740, 757, 0, 771, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 755, 0, 0, 0, 0,
	915, 0, 756, 0, 0, 764, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 914, 0, 0, 626, 0,
	0, 912, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 965,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 966, 967, 256,
	649, 811, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 819, 820, 280, 307,
	896, 895, 894, 306, 308, 892, 893, 891, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 902, 924, 913, 777, 778, 903, 904, 928, 905,
	780, 781, 925, 926, 774, 775, 779, 927, 929, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 916, 763, 762,
	0, 769, 770, 0, 799, 800, 802, 808, 809, 810,
	821, 868, 869, 877, 879, 880, 878, 881, 882, 883,
	886, 887, 888, 889, 884, 885, 890, 782, 786, 783,
	784, 785, 797, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 798, 939, 940, 941, 942, 943, 944,
	814, 818, 817, 815, 816, 812, 813, 840, 839, 841,
	842, 843, 844, 845, 846, 848, 847, 849, 850, 851,
	852, 853, 854, 822, 823, 826, 827, 825, 824, 828,
	837, 838, 829, 830, 831, 832, 833, 834, 836, 835,
	855, 856, 857, 858, 859, 861, 860, 864, 865, 863,
	862, 867, 866, 761, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 930, 262, 931, 0,
	0, 935, 0, 0, 0, 937, 936, 0, 938, 900,
	899, 0, 0, 932, 933, 0, 934, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 945, 946, 947, 948, 949, 950, 951, 952, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	970, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 760, 0, 0, 0, 270, 765, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 772, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	768, 0, 0, 0, 0, 0, 0, 2430, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	1019, 507, 955, 744, 921, 959, 1020, 972, 973, 974,
	960, 0, 238, 961, 962, 245, 963, 0, 920, 803,
	805, 804, 870, 871, 872, 873, 874, 875, 876, 806,
	807, 801, 968, 607, 975, 976, 2431, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 740, 757,
	0, 771, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 755, 0, 0, 0, 0, 915, 0,
	756, 0, 0, 764, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 914, 0, 0, 626, 0, 0, 912,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 965, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 966, 967, 256, 649, 811,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 819, 820, 280, 307, 896, 895,
	894, 306, 308, 892, 893, 891, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 902,
	924, 913, 777, 778, 903, 904, 928, 905, 780, 781,
	925, 926, 774, 775, 779, 927, 929, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 916, 763, 762, 0, 769,
	770, 0, 799, 800, 802, 808, 809, 810, 821, 868,
	869, 877, 879, 880, 878, 881, 882, 883, 886, 887,
	888, 889, 884, 885, 890, 782, 786, 783, 784, 785,
	797, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 798, 939, 940, 941, 942, 943, 944, 814, 818,
	817, 815, 816, 812, 813, 840, 839, 841, 842, 843,
	844, 845, 846, 848, 847, 849, 850, 851, 852, 853,
	854, 822, 823, 826, 827, 825, 824, 828, 837, 838,
	829, 830, 831, 832, 833, 834, 836, 835, 855, 856,
	857, 858, 859, 861, 860, 864, 865, 863, 862, 867,
	866, 761, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 930, 262, 931, 0, 0, 935,
	0, 0, 0, 937, 936, 0, 938, 900, 899, 0,
	0, 932, 933, 0, 934, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 945,
	946, 947, 948, 949, 950, 951, 952, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 970, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 86, 528, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 760,
	0, 0, 0, 270, 765, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 772, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1019, 507,
	955, 744, 921, 959, 1020, 972, 973, 974, 960, 0,
	238, 961, 962, 245, 963, 0, 920, 803, 805, 804,
	870, 871, 872, 873, 874, 875, 876, 806, 807, 801,
	968, 607, 975, 976, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 740, 757, 0, 771,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 755, 0, 0, 0, 0, 915, 0, 756, 0,
	0, 764, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 914, 0, 0, 626, 0, 0, 912, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 965, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 966, 967, 256, 649, 811, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 819, 820, 280, 307, 896, 895, 894, 306,
	308, 892, 893, 891, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 902, 924, 913,
	777, 778, 903, 904, 928, 905, 780, 781, 925, 926,
	774, 775, 779, 927, 929, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 916, 763, 762, 0, 769, 770, 0,
	799, 800, 802, 808, 809, 810, 821, 868, 869, 877,
	879, 880, 878, 881, 882, 883, 886, 887, 888, 889,
	884, 885, 890, 782, 786, 783, 784, 785, 797, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 798,
	939, 940, 941, 942, 943, 944, 814, 818, 817, 815,
	816, 812, 813, 840, 839, 841, 842, 843, 844, 845,
	846, 848, 847, 849, 850, 851, 852, 853, 854, 822,
	823, 826, 827, 825, 824, 828, 837, 838, 829, 830,
	831, 832, 833, 834, 836, 835, 855, 856, 857, 858,
	859, 861, 860, 864, 865, 863, 862, 867, 866, 761,
	196, 221, 368, 94, 454, 288, 647, 615, 484, 610,
	206, 223, 930, 262, 931, 0, 0, 935, 0, 0,
	0, 937, 936, 0, 938, 900, 899, 0, 0, 932,
	933, 0, 934, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 945, 946, 947,
	948, 949, 950, 951, 952, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 970, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 760, 0, 0,
	0, 270, 765, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 772, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 1019, 507, 955, 744,
	921, 959, 1020, 972, 973, 974, 960, 0, 238, 961,
	962, 245, 963, 0, 920, 803, 805, 804, 870, 871,
	872, 873, 874, 875, 876, 806, 807, 801, 968, 607,
	975, 976, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 740, 757, 0, 771, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 754, 755,
	0, 0, 0, 0, 915, 0, 756, 0, 0, 764,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 914,
	0, 0, 626, 0, 0, 912, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 965, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 4086, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 966, 967, 256, 649, 811, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	819, 820, 280, 307, 896, 895, 894, 306, 308, 892,
	893, 891, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 902, 924, 913, 777, 778,
	903, 904, 928, 905, 780, 781, 925, 926, 774, 775,
	779, 927, 929, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 916, 763, 762, 0, 769, 770, 0, 799, 800,
	802, 808, 809, 810, 821, 868, 869, 877, 879, 880,
	878, 881, 882, 883, 886, 887, 888, 889, 884, 885,
	890, 782, 786, 783, 784, 785, 797, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 798, 939, 940,
	941, 942, 943, 944, 814, 818, 817, 815, 816, 812,
	813, 840, 839, 841, 842, 843, 844, 845, 846, 848,
	847, 849, 850, 851, 852, 853, 854, 822, 823, 826,
	827, 825, 824, 828, 837, 838, 829, 830, 831, 832,
	833, 834, 836, 835, 855, 856, 857, 858, 859, 861,
	860, 864, 865, 863, 862, 867, 866, 761, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	930, 262, 931, 0, 0, 935, 0, 0, 0, 937,
	936, 0, 938, 900, 899, 0, 0, 932, 933, 0,
	934, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 945, 946, 947, 948, 949,
	950, 951, 952, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 970, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 760, 0, 0, 0, 270,
	765, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 772,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 1747, 1019, 507, 955, 744, 921, 959,
	1020, 972, 973, 974, 960, 0, 238, 961, 962, 245,
	963, 0, 920, 803, 805, 804, 870, 871, 872, 873,
	874, 875, 876, 806, 807, 801, 968, 607, 975, 976,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 740, 757, 0, 771, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 754, 755, 0, 0,
	0, 0, 915, 0, 756, 0, 0, 764, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 914, 0, 0,
	626, 0, 0, 912, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 965, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 966,
	967, 256, 649, 811, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 819, 820,
	280, 307, 896, 895, 894, 306, 308, 892, 893, 891,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 902, 924, 913, 777, 778, 903, 904,
	928, 905, 780, 781, 925, 926, 774, 775, 779, 927,
	929, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 916,
	763, 762, 0, 769, 770, 0, 799, 800, 802, 808,
	809, 810, 821, 868, 869, 877, 879, 880, 878, 881,
	882, 883, 886, 887, 888, 889, 884, 885, 890, 782,
	786, 783, 784, 785, 797, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 798, 939, 940, 941, 942,
	943, 944, 814, 818, 817, 815, 816, 812, 813, 840,
	839, 841, 842, 843, 844, 845, 846, 848, 847, 849,
	850, 851, 852, 853, 854, 822, 823, 826, 827, 825,
	824, 828, 837, 838, 829, 830, 831, 832, 833, 834,
	836, 835, 855, 856, 857, 858, 859, 861, 860, 864,
	865, 863, 862, 867, 866, 761, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 930, 262,
	931, 0, 0, 935, 0, 0, 0, 937, 936, 0,
	938, 900, 899, 0, 0, 932, 933, 0, 934, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 945, 946, 947, 948, 949, 950, 951,
	952, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 970, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 760, 0, 0, 0, 270, 765, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 772, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 1019, 507, 955, 744, 921, 959, 1020, 972,
	973, 974, 960, 0, 238, 961, 962, 245, 963, 0,
	920, 803, 805, 804, 870, 871, 872, 873, 874, 875,
	876, 806, 807, 801, 968, 607, 975, 976, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	740, 757, 0, 771, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 755, 1065, 0, 0, 0,
	915, 0, 756, 0, 0, 764, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 914, 0, 0, 626, 0,
	0, 912, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 965,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 966, 967, 256,
	649, 811, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 819, 820, 280, 307,
	896, 895, 894, 306, 308, 892, 893, 891, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 902, 924, 913, 777, 778, 903, 904, 928, 905,
	780, 781, 925, 926, 774, 775, 779, 927, 929, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 916, 763, 762,
	0, 769, 770, 0, 799, 800, 802, 808, 809, 810,
	821, 868, 869, 877, 879, 880, 878, 881, 882, 883,
	886, 887, 888, 889, 884, 885, 890, 782, 786, 783,
	784, 785, 797, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 798, 939, 940, 941, 942, 943, 944,
	814, 818, 817, 815, 816, 812, 813, 840, 839, 841,
	842, 843, 844, 845, 846, 848, 847, 849, 850, 851,
	852, 853, 854, 822, 823, 826, 827, 825, 824, 828,
	837, 838, 829, 830, 831, 832, 833, 834, 836, 835,
	855, 856, 857, 858, 859, 861, 860, 864, 865, 863,
	862, 867, 866, 761, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 930, 262, 931, 0,
	0, 935, 0, 0, 0, 937, 936, 0, 938, 900,
	899, 0, 0, 932, 933, 0, 934, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 945, 946, 947, 948, 949, 950, 951, 952, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	970, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 760, 0, 0, 0, 270, 765, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 772, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	768, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	1019, 507, 955, 744, 921, 959, 1020, 972, 973, 974,
	960, 0, 238, 961, 962, 245, 963, 0, 920, 803,
	805, 804, 870, 871, 872, 873, 874, 875, 876, 806,
	807, 801, 968, 607, 975, 976, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 740, 757,
	0, 771, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 755, 0, 0, 0, 0, 915, 0,
	756, 0, 0, 764, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 914, 0, 0, 626, 0, 0, 912,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 965, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 966, 967, 256, 649, 811,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 819, 820, 280, 307, 896, 895,
	894, 306, 308, 892, 893, 891, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 902,
	924, 913, 777, 778, 903, 904, 928, 905, 780, 781,
	925, 926, 774, 775, 779, 927, 929, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 916, 763, 762, 0, 769,
	770, 0, 799, 800, 802, 808, 809, 810, 821, 868,
	869, 877, 879, 880, 878, 881, 882, 883, 886, 887,
	888, 889, 884, 885, 890, 782, 786, 783, 784, 785,
	797, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 798, 939, 940, 941, 942, 943, 944, 814, 818,
	817, 815, 816, 812, 813, 840, 839, 841, 842, 843,
	844, 845, 846, 848, 847, 849, 850, 851, 852, 853,
	854, 822, 823, 826, 827, 825, 824, 828, 837, 838,
	829, 830, 831, 832, 833, 834, 836, 835, 855, 856,
	857, 858, 859, 861, 860, 864, 865, 863, 862, 867,
	866, 761, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 930, 262, 931, 0, 0, 935,
	0, 0, 0, 937, 936, 0, 938, 900, 899, 0,
	0, 932, 933, 0, 934, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 945,
	946, 947, 948, 949, 950, 951, 952, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 970, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 760,
	0, 0, 0, 270, 765, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 772, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1019, 507,
	955, 744, 921, 959, 1020, 972, 973, 974, 960, 0,
	238, 961, 962, 245, 963, 0, 920, 803, 805, 804,
	870, 871, 872, 873, 874, 875, 876, 806, 807, 801,
	968, 607, 975, 976, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 740, 757, 0, 771,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 755, 0, 0, 0, 0, 915, 0, 756, 0,
	0, 764, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 3161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 914, 0, 0, 626, 0, 0, 912, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 965, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 966, 967, 256, 649, 811, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 819, 820, 280, 307, 896, 895, 894, 306,
	308, 892, 893, 891, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 902, 924, 913,
	777, 778, 903, 904, 928, 905, 780, 781, 925, 926,
	774, 775, 779, 927, 929, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 916, 763, 762, 0, 769, 770, 0,
	799, 800, 802, 808, 809, 810, 821, 868, 869, 877,
	879, 880, 878, 881, 882, 883, 886, 887, 888, 889,
	884, 885, 890, 782, 786, 783, 784, 785, 797, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 798,
	939, 940, 941, 942, 943, 944, 814, 818, 817, 815,
	816, 812, 813, 840, 839, 841, 842, 843, 844, 845,
	846, 848, 847, 849, 850, 851, 852, 853, 854, 822,
	823, 826, 827, 825, 824, 828, 837, 838, 829, 830,
	831, 832, 833, 834, 836, 835, 855, 856, 857, 858,
	859, 861, 860, 864, 865, 863, 862, 867, 866, 761,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 930, 262, 931, 0, 0, 935, 0, 0,
	0, 937, 936, 0, 938, 900, 899, 0, 0, 932,
	933, 0, 934, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 945, 946, 947,
	948, 949, 950, 951, 952, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 970, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 760, 0, 0,
	0, 270, 765, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 772, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 1019, 507, 955, 744,
	921, 959, 1020, 972, 973, 974, 960, 0, 238, 961,
	962, 245, 963, 0, 920, 803, 805, 804, 870, 871,
	872, 873, 874, 875, 876, 806, 807, 801, 968, 607,
	975, 976, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 740, 757, 0, 771, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 754, 755,
	0, 0, 0, 0, 915, 0, 756, 0, 0, 764,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 3157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 914,
	0, 0, 626, 0, 0, 912, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 965, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 966, 967, 256, 649, 811, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	819, 820, 280, 307, 896, 895, 894, 306, 308, 892,
	893, 891, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 902, 924, 913, 777, 778,
	903, 904, 928, 905, 780, 781, 925, 926, 774, 775,
	779, 927, 929, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 916, 763, 762, 0, 769, 770, 0, 799, 800,
	802, 808, 809, 810, 821, 868, 869, 877, 879, 880,
	878, 881, 882, 883, 886, 887, 888, 889, 884, 885,
	890, 782, 786, 783, 784, 785, 797, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 798, 939, 940,
	941, 942, 943, 944, 814, 818, 817, 815, 816, 812,
	813, 840, 839, 841, 842, 843, 844, 845, 846, 848,
	847, 849, 850, 851, 852, 853, 854, 822, 823, 826,
	827, 825, 824, 828, 837, 838, 829, 830, 831, 832,
	833, 834, 836, 835, 855, 856, 857, 858, 859, 861,
	860, 864, 865, 863, 862, 867, 866, 761, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	930, 262, 931, 0, 0, 935, 0, 0, 0, 937,
	936, 0, 938, 900, 899, 0, 0, 932, 933, 0,
	934, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 945, 946, 947, 948, 949,
	950, 951, 952, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 970, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 760, 0, 0, 0, 270,
	765, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 772,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 1019, 507, 955, 1086, 921, 959,
	1020, 972, 973, 974, 960, 0, 238, 961, 962, 245,
	963, 0, 920, 803, 805, 804, 870, 871, 872, 873,
	874, 875, 876, 806, 807, 801, 968, 607, 975, 976,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 757, 0, 771, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 754, 755, 0, 0,
	0, 0, 915, 0, 756, 0, 0, 764, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 914, 0, 0,
	626, 0, 0, 912, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 965, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 966,
	967, 256, 649, 811, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 819, 820,
	280, 307, 896, 895, 894, 306, 308, 892, 893, 891,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 902, 924, 913, 777, 778, 903, 904,
	928, 905, 780, 781, 925, 926, 774, 775, 779, 927,
	929, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 916,
	763, 762, 0, 769, 770, 0, 799, 800, 802, 808,
	809, 810, 821, 868, 869, 877, 879, 880, 878, 881,
	882, 883, 886, 887, 888, 889, 884, 885, 890, 782,
	786, 783, 784, 785, 797, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 798, 939, 940, 941, 942,
	943, 944, 814, 818, 817, 815, 816, 812, 813, 840,
	839, 841, 842, 843, 844, 845, 846, 848, 847, 849,
	850, 851, 852, 853, 854, 822, 823, 826, 827, 825,
	824, 828, 837, 838, 829, 830, 831, 832, 833, 834,
	836, 835, 855, 856, 857, 858, 859, 861, 860, 864,
	865, 863, 862, 867, 866, 761, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 930, 262,
	931, 0, 0, 935, 0, 0, 0, 937, 936, 0,
	938, 900, 899, 0, 0, 932, 933, 0, 934, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 945, 946, 947, 948, 949, 950, 951,
	952, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 970, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 760, 0, 0, 0, 270, 765, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 772, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 1019, 507, 955, 1086, 921, 959, 1020, 972,
	973, 974, 960, 0, 238, 961, 962, 245, 963, 0,
	920, 803, 805, 804, 870, 871, 872, 873, 874, 875,
	876, 806, 807, 801, 968, 607, 975, 976, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 771, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 755, 0, 0, 0, 0,
	915, 0, 756, 0, 0, 764, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 2114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 914, 0, 0, 626, 0,
	0, 912, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 965,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 966, 967, 256,
	649, 811, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 819, 820, 280, 307,
	896, 895, 894, 306, 308, 892, 893, 891, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 902, 924, 913, 777, 778, 903, 904, 928, 905,
	780, 781, 925, 926, 774, 775, 779, 927, 929, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 916, 763, 762,
	0, 769, 770, 0, 799, 800, 802, 808, 809, 810,
	821, 868, 869, 877, 879, 880, 878, 881, 882, 883,
	886, 887, 888, 889, 884, 885, 890, 782, 786, 783,
	784, 785, 797, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 798, 939, 940, 941, 942, 943, 944,
	814, 818, 817, 815, 816, 812, 813, 840, 839, 841,
	842, 843, 844, 845, 846, 848, 847, 849, 850, 851,
	852, 853, 854, 822, 823, 826, 827, 825, 824, 828,
	837, 838, 829, 830, 831, 832, 833, 834, 836, 835,
	855, 856, 857, 858, 859, 861, 860, 864, 865, 863,
	862, 867, 866, 761, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 930, 262, 931, 0,
	0, 935, 0, 0, 0, 937, 936, 0, 938, 900,
	899, 0, 0, 932, 933, 0, 934, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 945, 946, 947, 948, 949, 950, 951, 952, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	970, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 760, 0, 0, 0, 270, 765, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 772, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	768, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	1019, 507, 955, 1086, 921, 959, 1020, 972, 973, 974,
	960, 0, 238, 961, 962, 245, 963, 0, 920, 803,
	805, 804, 870, 871, 872, 873, 874, 875, 876, 806,
	807, 801, 968, 607, 975, 976, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 757,
	0, 771, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 755, 0, 0, 0, 0, 915, 0,
	756, 0, 0, 764, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 2112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 914, 0, 0, 626, 0, 0, 912,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 965, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 966, 967, 256, 649, 811,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 819, 820, 280, 307, 896, 895,
	894, 306, 308, 892, 893, 891, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 902,
	924, 913, 777, 778, 903, 904, 928, 905, 780, 781,
	925, 926, 774, 775, 779, 927, 929, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 916, 763, 762, 0, 769,
	770, 0, 799, 800, 802, 808, 809, 810, 821, 868,
	869, 877, 879, 880, 878, 881, 882, 883, 886, 887,
	888, 889, 884, 885, 890, 782, 786, 783, 784, 785,
	797, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 798, 939, 940, 941, 942, 943, 944, 814, 818,
	817, 815, 816, 812, 813, 840, 839, 841, 842, 843,
	844, 845, 846, 848, 847, 849, 850, 851, 852, 853,
	854, 822, 823, 826, 827, 825, 824, 828, 837, 838,
	829, 830, 831, 832, 833, 834, 836, 835, 855, 856,
	857, 858, 859, 861, 860, 864, 865, 863, 862, 867,
	866, 761, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 930, 262, 931, 0, 0, 935,
	0, 0, 0, 937, 936, 0, 938, 900, 899, 0,
	0, 932, 933, 0, 934, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 945,
	946, 947, 948, 949, 950, 951, 952, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 970, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	1137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 1136, 626, 0, 0, 0, 0, 0,
	1133, 1134, 365, 1094, 330, 197, 225, 1127, 1131, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 1704, 507, 955, 0,
	0, 1701, 0, 0, 0, 0, 1699, 0, 238, 1700,
	1698, 245, 1703, 0, 920, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 86, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 0, 507, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 94,
	454, 288, 647, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 2417, 0, 0, 2416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 1770, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 1772, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 1774, 507, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 1472, 0, 1473, 1474,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 86, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 1747,
	0, 507, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 94, 454, 288, 647, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	2417, 0, 0, 2416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 2364, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 1954, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 2362, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 365, 1094,
	330, 197, 225, 1092, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 2364, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 1954, 507, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 1747,
	0, 507, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 626, 0, 0, 0,
	3717, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 2123, 507,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 2868, 507, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 720, 0, 0, 0,
	0, 2853, 0, 0, 0, 0, 238, 0, 0, 245,
	2854, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 1793, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 1792, 507, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 722, 723, 724, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 626, 0, 0, 0, 4061, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 1954, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	626, 0, 0, 0, 3717, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 0, 507, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	2418, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1774, 507,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 2070, 454, 288, 647, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 2061, 507, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 1921, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 1919, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1917, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 1915,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 1913, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 1909, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 1907, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1905, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 1880, 0, 0, 0, 507, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 1778, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 0, 507, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1451, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 1450, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	672, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 627, 628, 263, 406, 612, 522, 620, 645,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 633, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 640, 213, 517, 597, 239,
	483, 0, 0, 648, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 649, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 623, 0, 208, 0, 499, 608,
	650, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 625, 631, 632, 634, 635, 636, 637,
	638, 641, 639, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 646, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	669, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 647, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 629, 480, 301, 302, 444, 445, 314,
	315, 643, 644, 300, 598, 630, 596, 642, 624, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	627, 628, 263, 406, 612, 522, 620, 645, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 633, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 640, 213, 517, 597, 239, 483, 0,
	0, 648, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 649, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 623, 0, 208, 0, 499, 608, 650, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 625, 631, 632, 634, 635, 636, 637, 638, 641,
	639, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 646,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 669, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 647, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 4127, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 629, 480, 301, 302, 444, 445, 314, 315, 643,
	644, 300, 598, 630, 596, 642, 624, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 627, 628,
	263, 406, 612, 522, 620, 645, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	633, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 640, 213, 517, 597, 239, 483, 0, 0, 648,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	649, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	623, 0, 208, 0, 499, 608, 650, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 625,
	631, 632, 634, 635, 636, 637, 638, 641, 639, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 646, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 669, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	647, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 629,
	480, 301, 302, 444, 445, 314, 315, 643, 644, 300,
	598, 630, 596, 642, 624, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 627, 628, 263, 406,
	612, 522, 620, 645, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 633, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 640,
	213, 517, 597, 239, 483, 0, 0, 648, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 649, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 623, 0,
	208, 0, 499, 608, 650, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 625, 631, 632,
	634, 635, 636, 637, 638, 641, 639, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 646, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 669, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 647, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 629, 480, 301,
	302, 444, 445, 314, 315, 643, 644, 300, 598, 630,
	596, 642, 624, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 627, 628, 263, 406, 612, 522,
	620, 645, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 633, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 640, 213, 517,
	597, 239, 483, 0, 0, 648, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 649, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 623, 0, 208, 0,
	499, 608, 650, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 625, 631, 632, 634, 635,
	636, 637, 638, 641, 639, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 646, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 669, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 647, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 629, 480, 301, 302, 444,
	445, 314, 315, 643, 644, 300, 598, 630, 596, 642,
	624, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 0, 0, 376, 576, 577, 316,
}

var yyPact = [...]int{
	-1000, -1000, 5050, -1000, -550, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2545, 2606, -1000, -1000, -1000, -1000, 2722, -1000, 1067,
	2174, -1000, 2507, 6302, -1000, 54850, 784, -1000, 51898, -451,
	930, 253, 35662, -1000, 170, -1000, 160, 53374, 175, -1000,
	-1000, -1000, -1000, -451, 20902, 2371, 39, 38, 54850, -1000,
	-1000, -1000, -1000, -368, 2670, 2130, -1000, 437, -1000, -1000,
	-1000, -1000, -1000, -1000, 51160, -1000, 1138, -1000, -1000, 2533,
	2493, 2353, 956, 2398, -1000, 2586, 2130, -1000, 20902, 2655,
	2452, 20164, 20164, 448, -1000, -1000, 926, -1000, -1000, 30496,
	54850, 38614, 256, -1000, 2507, -1000, -1000, -1000, 210, -1000,
	337, 2051, -1000, 2043, -1000, 919, 1071, 395, 477, 472,
	380, 379, 377, 375, 370, 365, 360, 359, 404, -1000,
	976, 976, -230, -235, 1443, 492, 440, 440, 1088, 487,
	2444, 2418, -1000, -1000, 976, 976, 976, 343, 976, 976,
	976, 976, 313, 311, 976, 976, 976, 976, 976, 976,
	976, 976, 976, 976, 976, 976, 976, 976, 976, 976,
	976, 941, 2507, 277, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54850, 167, 54850, -1000, 843, 759, -1000, -1000, -455, 1119,
	1119, 58, 1119, 1119, 1119, 1119, 172, 1011, 35, -1000,
	166, 264, 143, 286, 1146, 802, -1000, -1000, 260, 1146,
	1765, -1000, 961, 267, 150, -1000, 1119, 1119, -1000, 13498,
	205, 13498, 13498, 254, -1000, 2491, -1000, -1000, -1000, -1000,
	-1000, 1342, -1000, -1000, -1000, -1000, -42, 484, -1000, -1000,
	-1000, -1000, 53374, 50422, 223, -1000, -1000, 272, 1811, 1190,
	20902, 1396, 954, -1000, -1000, 1230, 934, -1000, -1000, -1000,
	-1000, -1000, 822, -1000, 23116, 23116, 23116, 23116, -1000, -1000,
	2077, 49684, 2077, 2077, 23116, 2077, 23116, 2077, 2077, 2077,
	2077, 20902, 2077, 2077, 2077, 2077, -1000, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, -1000, -1000, -1000, -1000,
	2077, 842, 2077, 2077, 2077, 2077, 2077, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2077, 2077, 2077, 2077, 2077, 2077,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, -1000, -1000, -1000, 1628, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 26068, 1539, 1536, 1534, -1000, 17950,
	2077, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54850, -1000, 2077, 199, 53374, 53374, 350, 1359,
	-1000, -1000, 2586, 2130, -1000, 2670, 2645, 437, -1000, 3939,
	1978, 1787, 1417, 2130, 1996, 54850, -1000, 2101, -1000, -1000,
	-1000, -386, -387, 2300, 1495, 1739, -1000, -1000, -1000, -1000,
	2207, 20902, -1000, -1000, 2698, -1000, 27544, 838, 2693, 48946,
	-1000, 448, 448, 2042, 418, -24, -1000, -1000, -1000, -1000,
	997, 34924, -1000, -1000, -1000, -1000, -1000, 2036, 54850, -1000,
	-1000, 6291, 53374, -1000, 2170, -1000, 2031, -1000, 2134, 20902,
	2184, 525, 53374, 500, 499, 493, -1000, -88, -1000, -1000,
	-1000, -1000, -1000, -1000, 976, 976, 976, -1000, 402, 2652,
	6302, 7568, -1000, -1000, -1000, 48208, 2169, 53374, -1000, 2166,
	-1000, 1061, 861, 903, 903, 53374, -1000, -1000, 54112, 53374,
	1058, 1053, 53374, 53374, 53374, 53374, -1000, 47470, -1000, 46732,
	45994, 1358, 53374, 45256, 44518, 43780, 43042, 42304, -1000, 2515,
	-1000, 2462, -1000, -1000, -1000, 54112, 53374, 53374, 54112, 53374,
	54112, 54850, 53374, -1000, -1000, 342, -1000, -1000, 1356, 1354,
	1350, 976, 976, 1336, 1736, 1718, 1716, 976, 976, 1335,
	1714, 37138, 1701, 259, 1329, 1328, 1324, 1362, 1694, 233,
	1688, 1361, 1316, 1322, 53374, 2164, 54850, -1000, 227, 981,
	978, 994, 2507, 2366, 2039, 483, 507, 53374, 450, 450,
	53374, -1000, 14242, 54850, 214, -1000, 1678, 20902, -1000, 1156,
	1146, 1146, -1000, -1000, -1000, -1000, -1000, -1000, 1119, 54850,
	1156, -1000, -1000, -1000, 1146, 1119, 54850, 1119, 1119, 1119,
	1119, 1146, 1146, 1146, 1119, 54850, 54850, 54850, 54850, 54850,
	54850, 54850, 54850, 54850, 13498, 961, 1119, -457, -1000, 1672,
	-1000, -1000, -1000, 2279, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 13498, 13498, -1000, -1000, 2582, -1000,
	-1000, -1000, 2034, -1000, 158, -3, 165, -1000, 41566, 534,
	993, -1000, 534, -1000, -1000, -1000, 2026, 40828, -1000, -458,
	-459, -460, -461, -1000, -1000, -1000, -470, -472, -1000, -1000,
	-1000, 20902, 20902, 20902, 20902, -320, -1000, 1484, 23116, 2602,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 20902, 271, 1274,
	23116, 23116, 23116, 23116, 23116, 23116, 23116, 24592, 23854, 23116,
	23116, 23116, 23116, 23116, 23116, -1000, -1000, 32710, 9156, 9156,
	934, 934, 934, 934, -1000, -199, 2015, 54112, -1000, -1000,
	-1000, 835, 20902, 20902, 934, -1000, 1360, 2004, 17950, 20902,
	20902, 20902, 20902, 1003, 1190, 54112, 20902, -1000, 1417, -1000,
	-1000, -1000, -1000, 1252, -1000, -1000, 1140, 2464, 2464, 2464,
	2464, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 2464, 20902, 163, 163, 263, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, 20902, 16474, 20902, 20902, 23116, 20902, 20902,
	20902, 1417, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 1417, 20902, 1474, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 15730, 20902, 20902, 20902, 20902, 20902, -1000, -1000, -1000,
	-1000, -1000, -1000, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 1417, 20902, 20902, 20902, 20902, 20902, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1941, 1622,
	1578, 20902, -1000, 2007, -1000, -189, 29758, 20902, 1662, 2689,
	2206, 53374, -1000, -1000, -1000, -1000, 2586, -1000, 2586, 1941,
	3370, 2313, 20164, -1000, -1000, 3370, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1756,
	-1000, 54850, 1996, 2570, 53374, -1000, -360, -1000, -361, 2297,
	1660, 356, -1000, 20902, 20902, 1992, -1000, 1703, 54850, -1000,
	-320, -1000, 40090, -1000, -1000, 12754, 54850, 338, 54850, -1000,
	29020, 39352, 331, -1000, -24, 1913, -1000, 9, -5, 17212,
	928, -1000, -1000, -1000, 1443, 25330, 1770, 928, 90, -1000,
	-1000, -1000, 2134, -1000, 2134, 2134, 2134, 2134, 356, 356,
	356, 356, -1000, -1000, -1000, -1000, -1000, 2159, 2134, 2157,
	-1000, 2134, 2134, 2134, 2134, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2151, 2151, 2151, 2150, 2150, 2136, 2136, 434,
	-1000, 20902, 416, 38614, 2526, 1321, 1675, 227, 451, 2196,
	53374, 53374, 53374, 451, -1000, 1489, 1478, 1445, -1000, -529,
	1987, -1000, -1000, 2651, -1000, -1000, 1095, 1094, 1090, 942,
	53374, 216, 324, -1000, 430, -1000, 38614, 53374, 1049, 903,
	53374, -1000, 53374, -1000, -1000, -1000, -1000, -1000, 53374, -1000,
	-1000, 1984, -1000, 1915, 1193, 1089, 1154, 1080, 1984, -1000,
	-1000, -204, 1984, -1000, 1984, -1000, 1984, -1000, 1984, -1000,
	1984, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1033, 139, -287, 53374, 216, 462, -1000, 456, 32710, -1000,
	-1000, -1000, 32710, 32710, -1000, -1000, -1000, -1000, 1650, 1642,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -519,
	54850, -1000, 222, 984, 294, 398, 307, 54850, 218, 2459,
	2456, 2417, 2414, 2408, 2399, 276, 308, 54850, 54850, 450,
	2234, 54850, 2544, 54850, -1000, -1000, -1000, -1000, -1000, 1640,
	1638, -1000, 1190, 54850, -1000, -1000, 1119, 1119, -1000, -1000,
	54850, 1119, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1119, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 54850, -1000, -1000, -1000,
	-1000, 1632, -1000, -42, 156, -1000, -1000, 53374, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -117, -1000, 292,
	5, 345, -1000, -1000, -1000, -1000, -1000, 2575, -1000, 1190,
	1035, 1026, -1000, 2077, -1000, -1000, 1494, -1000, -1000, -1000,
	-1000, -1000, 2077, 2077, 2077, -1000, -1000, -1000, -1000, -1000,
	271, 23116, 23116, 23116, 1355, 824, 1338, 927, 1131, 1185,
	1185, 1207, 23116, 1207, 23116, 938, 938, 938, 938, 938,
	-1000, -1000, -1000, -1000, -1000, -1000, 1628, -1000, 1626, -1000,
	2077, 54112, 2023, 15730, 1781, 2060, 1417, 949, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4122, 1417,
	1811, 1417, 2108, 3958, 1013, -1000, 20902, 1417, 3930, -1000,
	-1000, 1417, 1417, 20902, -1000, -1000, 20902, 20902, 20902, 20902,
	1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675,
	20902, 1675, 1939, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1937, 2687, 1440, 1675, 1675, 1675, 1675, 3901, 1675,
	1675, 20902, 1458, -1000, -1000, -1000, 1550, 3897, 1317, 3893,
	1675, 1675, -1000, 1675, 3584, 3568, 1417, 2649, 2631, 1675,
	1675, 1675, 1675, 1675, 2618, 2601, 1675, 1675, 2580, 1675,
	3562, 1675, 2558, 2554, 2535, 2530, 2516, 2510, 2494, 2441,
	2434, 2420, 2415, 2393, 2347, 2340, 2326, 2298, 2287, 2280,
	1675, 1675, 1675, 3548, 1675, 3524, 1675, 3519, 1675, 1675,
	3495, 2244, 2238, 1417, 1930, -1000, 3481, 1675, 3458, 3450,
	3419, 2220, 3409, 3405, 3385, 1675, 1675, 1675, 2216, 3380,
	3375, 3359, 3341, 3270, 3264, 3061, 3038, 3032, 1675, 1578,
	1578, 1578, 1578, 1578, 3011, -331, 1675, 1417, -1000, -1000,
	-1000, -1000, -1000, 2996, 2193, 2991, 2978, 2947, 2942, 1417,
	2077, 832, -1000, -1000, 1578, 1417, 1417, 1578, 1578, 2921,
	2879, 2874, 2858, 2847, 2813, 1675, 1675, -1000, 1675, 2801,
	2790, 2154, 2121, 1417, -1000, 1578, 54850, -1000, -450, -1000,
	-18, 957, 2077, -1000, 37138, 1417, -1000, 5651, -1000, 1278,
	-1000, -1000, -1000, -1000, -1000, 34186, 1824, -1000, -1000, -1000,
	-1000, 2077, 1994, -1000, -1000, -1000, -1000, 356, 59, 33448,
	924, 924, 101, 1190, 1190, 20902, -1000, -1000, -1000, -1000,
	-1000, -1000, 830, 2667, 411, 2077, -1000, 2064, 2750, -1000,
	-1000, -1000, 2566, 26806, -1000, -1000, 2077, 2077, 54850, 2127,
	1919, -1000, 828, -1000, 1369, 1913, -24, 4, -1000, -1000,
	-1000, -1000, 1190, -1000, 1409, 358, 362, -1000, 433, -1000,
	-1000, -1000, -1000, 2382, 70, -1000, -1000, -1000, 330, 356,
	-1000, -1000, -1000, -1000, -1000, -1000, 1603, -1000, 1603, -1000,
	-1000, -1000, -1000, -1000, 1318, -1000, -1000, -1000, -1000, 1301,
	-1000, -1000, 1295, -1000, -1000, 2333, 2242, 416, -1000, -1000,
	976, 1597, -1000, -1000, 2386, 976, 976, 53374, -1000, -1000,
	1764, 2526, 222, 54850, 1010, 2233, -1000, 2196, 2196, 2196,
	54850, -1000, -1000, -1000, -1000, -1000, -1000, -520, 207, 539,
	-1000, -1000, -1000, 7116, 53374, 1977, -1000, 211, -1000, 1687,
	-1000, 53374, -1000, 1971, 2149, 53374, 53374, -1000, -1000, -1000,
	53374, 2077, -1000, -1000, -1000, -1000, 502, 2506, 327, -1000,
	-1000, -349, -1000, -1000, 216, 211, 54112, 53374, 928, -1000,
	-1000, -1000, -1000, -1000, -522, 1966, 490, 245, 299, 54850,
	54850, 54850, 54850, 54850, 54850, 811, -1000, -1000, 19, -1000,
	-1000, 186, -1000, -1000, -1000, -1000, -1000, 186, -1000, -1000,
	-1000, -1000, -1000, 280, 454, -1000, 54850, 54850, 952, -1000,
	-1000, -1000, -1000, -1000, 1146, -1000, -1000, 1146, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2488,
	54850, -11, -486, -1000, -483, 20902, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1303, 796, 1338, 23116, 23116, 2004, 2004,
	23116, -1000, -1000, -1000, 937, 937, 32710, -1000, 23116, 20902,
	-1000, -1000, 20902, 20902, 20902, 979, -1000, 20902, 1276, -1000,
	20902, -1000, -331, 1578, 1675, 1675, 1675, 1675, -331, -331,
	-331, -331, -331, -331, -331, -331, -331, -331, 1945, -1000,
	20902, 20902, 20902, 1417, 329, -1000, -1000, -1000, -331, 20902,
	-1000, -1000, 2682, -1000, 20902, -1000, 32710, 20902, 20902, 20902,
	-1000, -1000, -1000, 20902, 20902, -1000, -1000, 20902, -1000, 20902,
	-1000, -1000, -1000, -1000, -1000, -1000, 20902, -1000, 20902, -1000,
	-1000, -1000, 20902, -1000, 20902, -1000, -1000, 20902, -1000, 20902,
	-1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902,
	-1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902,
	-1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902,
	-1000, 20902, -1000, -1000, -1000, 20902, -1000, 20902, -1000, 20902,
	-1000, -1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902, 20902,
	-1000, 20902, 20902, 20902, -1000, 20902, 20902, 20902, 20902, -1000,
	-1000, -1000, -1000, 20902, 20902, 20902, 20902, 20902, 20902, 20902,
	20902, 20902, 20902, -1000, -1000, -1000, -1000, -1000, -1000, 20902,
	-1000, 38614, 14, -331, 1474, 14, 1474, 22378, 868, 841,
	21640, -1000, 20902, 14986, -1000, -1000, -1000, -1000, -1000, 20902,
	20902, 20902, 20902, 20902, 20902, -1000, -1000, -1000, 20902, 20902,
	-1000, 20902, -1000, 20902, -1000, -1000, -1000, -1000, -1000, 957,
	-1000, 840, 453, 903, 53374, -1000, -1000, -1000, -1000, 1911,
	-1000, 2616, -1000, 2324, 2318, 2678, 2667, 20164, -1000, 29020,
	-1000, -1000, 53374, -438, -1000, 2363, 2489, 924, 924, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 12010, 2586, 20902, 2230,
	54112, 196, -1000, 28282, 53374, 54112, 29020, 29020, 29020, 29020,
	29020, -1000, 2267, 2261, -1000, 2305, 2258, 2458, 54850, -1000,
	1941, 1964, -1000, 20902, 31234, 1795, 29020, -1000, -1000, 29020,
	54850, 11266, -1000, -1000, -13, -32, -1000, -1000, -1000, -1000,
	1443, -1000, -1000, 1289, 2564, 2379, -1000, -1000, -1000, -1000,
	-1000, 1959, -1000, 1956, 1892, 1943, 1928, 139, -1000, 2126,
	2468, 976, 976, -1000, 1292, -1000, 1360, 1584, 1582, -1000,
	-1000, -1000, 489, -1000, 2539, 54850, 2229, 2225, 2222, -1000,
	-542, 1282, 2148, 2058, 20902, 2143, 2650, 1846, 53374, -1000,
	-1000, 54112, -1000, 297, -1000, 416, 53374, -1000, -1000, -1000,
	324, 54850, -1000, 8261, -1000, -1000, -1000, 211, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 54850, 241, -1000, 2142, 1280,
	-1000, -1000, 2112, -1000, -1000, -1000, -1000, -1000, 190, 188,
	1580, 184, 1559, 184, -1000, 54850, 917, 2242, 54850, -1000,
	-1000, -1000, 1119, 1119, -1000, -1000, 2467, -1000, 1360, 1675,
	23116, 23116, -1000, 934, -1000, -1000, 415, -302, 2134, 2134,
	-1000, 2134, 2136, -1000, 2134, 146, 2134, 123, 2134, -1000,
	-1000, 1417, 1417, -1000, 1578, 2103, 1607, 2780, -1000, 1190,
	20902, 2776, -1000, -1000, -331, -331, -331, -331, -331, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -95,
	2772, 2740, 1675, -1000, 2133, 2132, -1000, 1675, 20902, 1675,
	1417, 2053, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675,
	1675, 1675, 1675, 1675, 2040, 2000, 1989, 1969, 1962, 1950,
	1946, 1924, 1917, 1882, 1864, 1828, 1816, 1801, 1763, 1751,
	1675, 1675, 1747, 1675, 1710, 1686, -1000, 1190, 1578, 2725,
	1578, 1675, 1675, 2695, 270, 1675, 1926, 1926, 1926, 1926,
	1926, 1578, 1578, 1578, 1578, 1675, 53374, -1000, -331, -1000,
	-1000, -370, -371, -1000, 1417, -331, 1866, 23116, 1675, 23116,
	23116, 23116, 1675, 1417, -1000, 1656, 1648, 2668, 1635, 1675,
	2656, 1675, 1675, 1675, 1625, -1000, 2573, 2077, 2573, 2077,
	2573, 1888, 1278, 54850, -1000, -1000, -1000, -1000, 2667, 2663,
	-1000, 1861, -1000, 59, 631, -1000, 2372, 2489, -1000, 2643,
	2357, 2640, -1000, -1000, -1000, -1000, -1000, 1190, -1000, 2511,
	1932, -1000, 982, 1855, -1000, -1000, 19426, 1894, 2316, 827,
	1888, 1890, 2750, 2200, 2215, 3831, -1000, -1000, -1000, -1000,
	2254, -1000, 2226, -1000, -1000, 2101, -1000, 2409, 338, 29020,
	1885, 1885, -1000, 826, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1113, 8261, 2717, -1000, 1551, -1000, 1161, 193, 1277,
	-1000, -1000, 976, 976, -1000, 1048, 1046, -1000, 54850, 2131,
	-1000, 356, 1545, 356, 1272, -1000, -1000, 1270, -1000, -1000,
	-1000, -1000, 2175, 2321, -1000, -1000, -1000, -1000, 54850, -1000,
	-1000, 54850, 54850, 54850, 2124, 2638, -1000, 20902, 2115, 977,
	2249, 53374, 53374, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 447, 976, -501, 293, 291, 976,
	976, 976, -544, -1000, -1000, 1879, 1835, -1000, -237, -1000,
	20902, -1000, -1000, -1000, -1000, -1000, 1172, 1172, 1539, 1536,
	1534, -1000, 2101, -1000, -1000, -1000, 1676, -1000, -1000, -213,
	53374, 53374, 53374, 53374, -1000, -1000, -1000, 1144, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	934, 1417, 382, -215, 1417, -1000, -1000, 356, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20902, -1000,
	20902, -1000, 20902, 1190, 20902, -1000, -1000, -1000, -1000, -1000,
	2586, 1511, 20902, 20902, -1000, 1256, 1202, -331, 1675, -1000,
	-1000, -1000, 20902, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20902, -1000, 20902, -1000,
	20902, -1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902, -1000,
	20902, -1000, 20902, -1000, 20902, -1000, 20902, -1000, 20902, -1000,
	20902, -1000, 20902, -1000, 20902, -1000, 20902, -1000, -1000, 20902,
	-1000, -1000, -1000, 20902, -1000, 20902, -1000, 20902, -1000, -1000,
	-1000, 20902, 203, 937, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1417, 332, -1000, -1000, -1000,
	2673, -1000, 1417, 20902, 2004, -1000, 2004, 2004, 2004, -1000,
	-1000, -1000, 20902, -1000, 20902, 20902, -1000, 20902, -1000, 20902,
	-1000, -1000, -1000, -1000, 20902, 2077, 2336, 37876, 2077, 37876,
	2077, 31234, -1000, -1000, 2663, 2658, 2636, 2341, 2344, 2344,
	2372, -1000, 2634, 2629, -1000, 1505, 2624, 1498, 1041, -1000,
	54112, 20902, -1000, 196, 37138, -1000, 436, 53374, 196, 53374,
	-1000, 2617, -1000, -1000, 20902, 2107, -1000, 20902, -1000, -1000,
	-1000, -1000, 9156, 2667, 1885, -1000, -1000, 935, -1000, 20902,
	-1000, 5048, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1482, 1471, -1000, -1000, 2106, 20902, -1000, -1000, -1000, 1668,
	1623, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2101,
	-1000, -1000, -1000, -1000, 324, -526, 1954, 53374, 1177, -1000,
	1755, 1846, 319, 196, 1459, 976, 976, 976, 1176, 1150,
	37138, 1753, -1000, 53374, 419, -1000, 324, -1000, -242, -249,
	1675, -1000, -1000, 2559, -1000, -1000, 14986, -1000, -1000, 2081,
	2163, -1000, -1000, -1000, -1000, 2282, -202, -226, -1000, -1000,
	1675, 1675, 1675, 2125, 1417, -1000, 1675, 1675, 1615, 1596,
	-1000, -1000, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675,
	1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675,
	1675, 1675, 1578, 1614, -1000, 203, 1417, 2214, -1000, -1000,
	9156, -1000, -1000, 2617, 2610, 14, -1000, -1000, 209, 14,
	1190, 1047, 1417, 1417, 1047, 1602, 1675, 1595, 1587, 1675,
	1675, 31972, -1000, 2597, 2596, 1725, -1000, -1000, 37876, 1725,
	37876, 957, 2658, -338, 20902, 20902, 2331, 1251, -1000, -1000,
	-1000, -1000, 1450, 1428, -1000, 1413, -1000, 2714, -1000, 1190,
	-1000, 2077, 196, -1000, 816, 1855, -1000, 2586, 1190, 53374,
	1190, 57, 2617, -1000, 1675, -1000, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 2077,
	2077, 2077, 2077, 2077, 2077, 2077, 2077, -1000, -1000, 53374,
	1791, -1000, -1000, 2557, 1749, 192, -1000, 1579, 1846, -1000,
	-1000, 268, -1000, 20902, -1000, 37138, 1408, 1380, -1000, -1000,
	-1000, -1000, -544, -1000, -1000, -1000, -1000, -1000, -1000, 437,
	1838, -1000, 973, 53374, 54850, -1000, 2275, -1000, -1000, -1000,
	-1000, 20902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20902,
	-1000, 1417, 2213, -1000, -362, -1000, -512, 20902, -331, -1000,
	-1000, -331, -1000, -1000, -1000, -1000, -1000, 20902, -1000, -1000,
	20902, -1000, 20902, -1000, -1000, 1725, -1000, -1000, -1000, 36400,
	-1000, 1725, -1000, 1725, -1000, -338, -1000, 1830, -1000, 53374,
	1190, 315, -1000, 1250, -1000, -1000, -1000, -1000, -1000, 54112,
	53374, 1855, 53374, -1000, -1000, 1700, 1417, 2077, 2586, -1000,
	1667, -1000, 437, -1000, 2079, 2058, -1000, -1000, -1000, 18688,
	-1000, -1000, -1000, -1000, -1000, 320, -211, 14986, 10522, 1591,
	-1000, -206, 1675, 1578, -1000, -474, -1000, -1000, -1000, -1000,
	309, -1000, -1000, 1811, -1000, -1000, 1554, 1548, 1501, -1000,
	-1000, -1000, -1000, -1000, -1000, -338, -1000, -1000, 2548, -1000,
	-297, -1000, -1000, 1804, 1524, -1000, -1000, -1000, 31234, 52636,
	-1000, -196, 347, -211, 20902, 2078, 1417, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -47, -1000, -1000, 812, -1000,
	-1000, -1000, 2112, -222, -1000, -1000, -1000, 278, -492, -365,
	-376, 23116, -1000, 20902, -1000, 20902, -1000, 20902, -1000, 53374,
	2077, -1000, -1000, -1000, 1504, -1000, 4277, -389, 2210, -1000,
	-144, -1000, -1000, -1000, 1112, 1377, -1000, -1000, -1000, -1000,
	-1000, -1000, 1681, 53374, -1000, 367, -1000, -1000, 14242, -213,
	-227, 1014, -1000, -1000, -1000, -1000, -1000, 2004, 1453, 1416,
	1675, -1000, 53374, -1000, 52636, -379, 928, 9156, -1000, 2209,
	2208, 2686, -1000, -1000, -1000, -1000, -1000, -1000, -547, 1476,
	219, -1000, -1000, -1000, 278, -378, -1000, 20902, -1000, 20902,
	-1000, 1417, -1000, -1000, 2537, 57, -1000, 2688, -1000, 2671,
	899, 899, -1000, 1092, -547, -1000, -1000, -1000, -1000, 1675,
	1675, -1000, -390, -1000, -1000, -1000, -1000, -1000, 429, 1210,
	-1000, -1000, -1000, -1000, -1000, 9156, -1000, -1000, -1000, 215,
	215, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3361, 3355, 24, 5, 38, 37, 3347, 3346, 3275,
	170, 3269, 3267, 3265, 3264, 3258, 3252, 2759, 2757, 2748,
	3251, 3250, 3249, 3248, 3247, 3246, 3245, 3244, 3239, 52,
	92, 101, 109, 191, 192, 3238, 169, 159, 190, 3237,
	3236, 3235, 115, 182, 82, 81, 184, 3233, 3230, 66,
	3219, 3218, 3217, 212, 211, 209, 1103, 3214, 185, 113,
	47, 3210, 3209, 3208, 3206, 3205, 3204, 3203, 3202, 3200,
	3197, 3195, 3194, 3191, 3188, 3185, 3183, 3181, 3177, 294,
	3175, 3174, 15, 3173, 73, 3171, 3170, 3169, 3168, 3167,
	7, 3164, 3161, 10, 33, 58, 3160, 3159, 49, 3156,
	3155, 3154, 3153, 3152, 76, 3149, 12, 3147, 26, 3144,
	3142, 124, 3141, 3140, 3139, 44, 3138, 3137, 3136, 11,
	162, 3135, 3131, 136, 3129, 3122, 3121, 167, 188, 3120,
	2373, 3118, 91, 3116, 3114, 3113, 160, 186, 3106, 118,
	3105, 3104, 3103, 148, 3100, 3290, 3095, 3091, 64, 80,
	168, 3089, 3086, 202, 72, 6, 3083, 20, 21, 3081,
	3077, 71, 67, 3072, 111, 3071, 3070, 96, 99, 3069,
	93, 90, 3064, 3061, 9, 8, 3060, 1, 4, 2,
	114, 3058, 3057, 108, 3054, 3053, 3049, 89, 3046, 3044,
	5720, 3041, 83, 126, 98, 62, 3040, 171, 165, 3039,
	3037, 3035, 3032, 3030, 3027, 46, 3024, 3020, 3019, 133,
	1791, 100, 3018, 149, 350, 48, 146, 3016, 207, 79,
	195, 163, 3014, 3007, 131, 132, 3004, 3003, 51, 166,
	194, 2998, 95, 129, 117, 181, 85, 130, 2977, 2973,
	56, 69, 2972, 2971, 2969, 2966, 164, 2964, 2960, 63,
	2958, 54, 2950, 175, 2948, 338, 77, 2947, 179, 155,
	2937, 59, 2936, 2917, 103, 112, 61, 29, 2914, 154,
	158, 123, 161, 2912, 2911, 53, 2908, 2906, 2905, 200,
	288, 2904, 2903, 335, 176, 140, 144, 87, 2901, 265,
	2900, 2899, 2898, 17, 5060, 6134, 178, 25, 156, 2893,
	2885, 1064, 41, 42, 28, 2881, 220, 2875, 210, 2873,
	2870, 2867, 193, 206, 106, 157, 57, 2865, 2861, 2859,
	2858, 40, 2857, 2856, 2854, 2852, 2848, 2844, 36, 35,
	34, 70, 225, 60, 30, 94, 151, 150, 65, 2842,
	2838, 2835, 121, 78, 2834, 153, 152, 120, 97, 2824,
	177, 141, 110, 2819, 137, 32, 2814, 2813, 2812, 2809,
	84, 2806, 2800, 2798, 2796, 145, 143, 119, 74, 2795,
	75, 116, 147, 142, 50, 2792, 39, 2790, 2788, 31,
	183, 27, 2787, 45, 105, 134, 2782, 6367, 2779, 14,
	261, 174, 2778, 2777, 13, 16, 23, 2775, 2774, 2771,
	2769, 127, 2768, 2767, 2766, 2765, 22, 43, 19, 18,
	102, 135, 68, 2763, 2758, 139, 2747, 2742, 2741, 0,
	1039, 125, 2740, 196,
}

//line sql.y:8733
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 417, 418, 418, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 261, 387, 259, 259, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 421, 421, 185, 185, 183, 183, 184, 184,
	264, 264, 20, 268, 268, 270, 270, 270, 270, 260,
	260, 260, 21, 21, 269, 269, 271, 271, 271, 274,
	274, 274, 274, 315, 315, 315, 22, 22, 22, 22,
	22, 129, 129, 389, 389, 388, 383, 383, 382, 382,
	381, 386, 386, 385, 385, 384, 40, 41, 50, 50,
	50, 50, 51, 52, 390, 390, 356, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 358, 358, 344, 344, 357, 357, 357,
	357, 357, 357, 357, 343, 343, 140, 140, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 405, 405, 405, 404, 404,
	239, 239, 239, 239, 239, 239, 239, 239, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 406, 406, 406, 406, 321, 321, 321,
	321, 324, 324, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 323, 323, 323, 323, 323, 323, 323, 325,
	325, 325, 325, 325, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 327, 327, 327, 327, 327, 327, 327, 327, 342,
	342, 331, 331, 336, 336, 337, 337, 338, 338, 338,
	339, 339, 339, 340, 340, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 335, 335, 334, 334, 334, 345,
	370, 370, 369, 369, 367, 367, 367, 367, 367, 367,
	367, 367, 354, 354, 364, 364, 364, 364, 364, 353,
	353, 349, 349, 349, 350, 350, 351, 351, 348, 348,
	352, 352, 366, 366, 365, 365, 346, 346, 347, 347,
	372, 407, 407, 407, 407, 407, 408, 408, 373, 397,
	399, 399, 399, 398, 398, 395, 396, 394, 394, 394,
	394, 394, 84, 84, 84, 287, 287, 288, 288, 362,
	362, 361, 361, 361, 363, 363, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 282, 282, 282,
	393, 393, 393, 393, 393, 393, 392, 392, 392, 359,
	359, 359, 359, 391, 391, 59, 59, 219, 219, 410,
	410, 412, 412, 412, 47, 47, 47, 47, 47, 47,
	46, 46, 46, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 48, 48, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 111, 111,
	112, 112, 112, 112, 114, 114, 114, 375, 375, 60,
	60, 3, 3, 173, 175, 176, 176, 174, 174, 174,
	174, 174, 174, 62, 62, 61, 61, 178, 177, 179,
	179, 179, 1, 1, 2, 2, 4, 4, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	341, 341, 341, 374, 374, 376, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 117, 116, 116, 115,
	118, 118, 118, 118, 118, 118, 118, 118, 378, 378,
	378, 63, 63, 379, 328, 329, 330, 5, 6, 355,
	377, 125, 125, 24, 39, 39, 25, 25, 25, 25,
	26, 26, 64, 67, 67, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 292,
	292, 281, 281, 290, 290, 280, 280, 306, 306, 306,
	283, 283, 283, 284, 284, 403, 403, 403, 277, 277,
	66, 66, 66, 307, 307, 307, 307, 69, 69, 413,
	413, 414, 414, 415, 415, 415, 70, 71, 71, 310,
	310, 311, 311, 72, 73, 85, 85, 85, 85, 85,
	86, 86, 86, 86, 110, 110, 110, 10, 10, 10,
	10, 81, 81, 81, 9, 9, 11, 68, 68, 75,
	400, 400, 401, 402, 402, 402, 402, 76, 78, 27,
	27, 27, 27, 27, 27, 135, 135, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 130,
	130, 130, 124, 124, 422, 79, 80, 80, 128, 128,
	128, 121, 121, 121, 127, 127, 127, 12, 12, 13,
	263, 263, 14, 14, 134, 134, 133, 133, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 131,
	131, 132, 132, 132, 132, 299, 299, 299, 298, 298,
	167, 167, 169, 168, 168, 170, 170, 171, 171, 171,
	171, 217, 217, 193, 193, 256, 256, 257, 257, 255,
	255, 262, 262, 258, 258, 258, 258, 265, 265, 172,
	172, 172, 172, 180, 180, 181, 181, 182, 182, 309,
	309, 304, 304, 304, 303, 303, 186, 186, 186, 188,
	187, 187, 187, 187, 189, 189, 191, 191, 190, 190,
	192, 197, 197, 196, 196, 194, 194, 194, 194, 194,
	194, 195, 195, 195, 195, 198, 198, 145, 145, 145,
	145, 145, 145, 145, 145, 411, 411, 159, 159, 159,
	159, 159, 159, 159, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 246, 246, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 222, 222, 221,
	221, 87, 87, 87, 88, 88, 89, 89, 89, 89,
	89, 90, 90, 90, 90, 90, 90, 90, 92, 92,
	91, 91, 212, 212, 296, 296, 93, 94, 94, 95,
	95, 98, 98, 97, 96, 96, 102, 102, 99, 99,
	101, 101, 100, 103, 103, 104, 105, 105, 278, 278,
	199, 199, 208, 208, 208, 208, 200, 200, 201, 201,
	201, 201, 201, 201, 209, 209, 209, 216, 210, 210,
	206, 206, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 164, 164, 164, 164,
	227, 227, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 152, 152, 165,
	165, 165, 165, 166, 166, 166, 166, 166, 166, 166,
	317, 317, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	423, 423, 332, 332, 332, 207, 207, 207, 207, 207,
	126, 126, 126, 126, 126, 314, 314, 314, 318, 318,
	318, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 319, 319, 225, 225,
	122, 122, 223, 223, 224, 226, 226, 218, 218, 218,
	218, 220, 220, 203, 203, 203, 228, 228, 320, 320,
	229, 229, 106, 107, 107, 108, 108, 230, 230, 232,
	231, 231, 233, 234, 234, 234, 235, 235, 236, 236,
	236, 49, 49, 49, 49, 49, 44, 44, 44, 44,
	45, 45, 45, 45, 137, 137, 137, 137, 139, 139,
	138, 138, 82, 82, 83, 83, 83, 143, 143, 144,
	144, 144, 141, 141, 142, 142, 253, 253, 253, 253,
	253, 253, 253, 237, 237, 237, 244, 244, 244, 240,
	240, 242, 242, 242, 243, 243, 243, 241, 250, 250,
	252, 252, 251, 251, 247, 247, 248, 248, 249, 249,
	249, 245, 245, 202, 202, 202, 202, 202, 254, 254,
	254, 254, 308, 308, 308, 266, 266, 213, 213, 215,
	215, 214, 214, 163, 267, 267, 275, 272, 272, 273,
	273, 300, 300, 300, 276, 276, 289, 289, 285, 285,
	286, 286, 279, 279, 291, 291, 291, 77, 211, 211,
	371, 371, 368, 295, 295, 297, 297, 301, 301, 305,
	305, 302, 302, 8, 416, 416, 416, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 419, 420, 312, 313, 313, 313,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 2,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	6, 10, 7, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 4, 5, 5, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 2, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 5, 0,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 4, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 1, 2, 3, 7, 0, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 5,
	5, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 6, 1, 1, 3, 4, 3,
	4, 4, 4, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 5, 5, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 7, 7, 6,
	6, 2, 2, 5, 6, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 4, 2, 4, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 1,
	0, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 2, 2,
	5, 6, 6, 6, 6, 6, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 8, 4, 8, 8,
	6, 5, 4, 4, 4, 5, 7, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 6, 4, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 4, 4,
	4, 6, 4, 6, 4, 4, 6, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 4, 4,
	6, 4, 6, 4, 8, 6, 4, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 5, 9, 6, 9, 8, 6, 8, 8,
	8, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 4, 0, 2,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 3, 4, 2,
	3, 4, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 3, 1, 6, 5, 4, 1, 3,
	3, 5, 0, 2, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -417, -79, -422, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -109, -35, 35, -40,
	-50, 239, -51, -41, 240, -52, 242, 241, 279, 243,
	393, 272, 83, 328, 329, 331, 332, 333, 334, -110,
	700, 277, 278, 245, 39, 51, 36, 37, 40, 249,
	285, 286, 248, 145, -33, -36, 12, -419, 15, 483,
	274, 273, 31, -34, 593, 95, -80, -418, 748, -253,
	-237, 26, 36, 32, -236, -232, -128, -237, 24, 22,
	11, -79, -79, -79, 16, 17, -79, -356, -358, 95,
	172, 95, -79, -57, -56, -54, -53, -55, -58, 34,
	-47, -48, -380, -46, -43, 244, 241, 289, 135, 136,
	279, 280, 281, 243, 263, 278, 282, 277, 298, -42,
	90, 36, 593, 596, -363, 240, 246, 247, 242, 484,
	138, 137, 84, -360, 388, 627, 718, -58, 720, 110,
	113, 719, 50, 253, 721, 722, 723, 634, 724, 262,
	725, 726, 727, 728, 734, 675, 735, 736, 737, 139,
	11, -79, -305, -301, 100, -294, 590, 265, 625, 437,
	626, 314, 90, 47, 42, 529, 600, 384, 388, 627,
	514, 718, 394, 328, 344, 338, 519, 520, 521, 367,
	359, 591, 628, 601, 317, 266, 302, 712, 357, 148,
	720, 321, 629, 280, 395, 396, 630, 397, 110, 331,
	434, 733, 320, 631, 731, 113, 719, 336, 88, 513,
	57, 715, 50, 275, 442, 443, 355, 248, 351, 721,
	303, 632, 603, 296, 138, 135, 740, 39, 347, 56,
	33, 730, 137, 55, 722, 163, 633, 723, 634, 399,
	374, 706, 54, 400, 281, 635, 93, 286, 595, 325,
	714, 401, 534, 348, 402, 313, 729, 245, 636, 324,
	695, 687, 688, 403, 404, 707, 379, 375, 380, 536,
	637, 426, 518, 405, 691, 692, 747, 58, 638, 639,
	708, 136, 640, 87, 724, 89, 342, 343, 641, 311,
	264, 539, 540, 428, 371, 496, 127, 503, 504, 120,
	121, 499, 122, 505, 123, 128, 506, 507, 508, 497,
	124, 117, 498, 509, 510, 372, 373, 125, 511, 119,
	118, 500, 502, 126, 512, 262, 38, 406, 592, 315,
	64, 319, 290, 429, 52, 377, 744, 51, 702, 541,
	642, 705, 370, 366, 493, 59, 643, 644, 645, 646,
	515, 725, 369, 341, 365, 739, 4, 308, 488, 516,
	726, 68, 247, 382, 381, 383, 297, 425, 362, 647,
	648, 649, 269, 91, 650, 352, 25, 651, 652, 407,
	304, 653, 62, 654, 655, 432, 278, 656, 60, 727,
	45, 657, 283, 741, 728, 658, 659, 660, 701, 661,
	285, 662, 409, 663, 689, 690, 408, 376, 378, 542,
	292, 410, 393, 250, 594, 664, 326, 346, 282, 732,
	665, 270, 530, 531, 532, 533, 713, 538, 537, 284,
	289, 277, 433, 271, 666, 667, 668, 669, 670, 318,
	686, 671, 672, 332, 598, 734, 494, 49, 673, 674,
	675, 676, 677, 312, 307, 427, 436, 67, 92, 390,
	678, 679, 711, 340, 337, 43, 305, 99, 474, 476,
	477, 478, 479, 480, 475, 482, 680, 329, 61, 735,
	736, 737, 299, 738, 522, 523, 524, 525, 13, 576,
	559, 587, 560, 577, 561, 570, 562, 578, 586, 588,
	543, 551, 544, 552, 582, 565, 579, 571, 564, 563,
	585, 568, 572, 545, 553, 583, 569, 546, 554, 547,
	555, 548, 556, 581, 580, 573, 584, 549, 557, 575,
	550, 558, 574, 566, 567, 445, 745, 746, 517, 412,
	139, 309, 310, 53, 363, 291, 681, 322, 682, 353,
	354, 490, 491, 368, 339, 364, 698, 330, 696, 293,
	413, 495, 279, 683, 435, 306, 385, 131, 391, 323,
	599, 535, 298, 414, 710, 597, 526, 527, 361, 358,
	300, 528, 684, 386, 700, 415, 254, 294, 295, 685,
	697, 416, 417, 316, 418, 419, 420, 421, 422, 424,
	327, 423, 699, 693, 694, 301, 473, 596, 335, 356,
	392, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 492,
	252, -79, 252, -190, -301, -130, 702, 704, 191, -272,
	396, -290, 398, 411, 406, 416, 404, -281, 407, 409,
	292, -403, 426, 252, 413, 239, 399, 408, 417, 418,
	316, 424, 419, 327, 423, 301, 420, 421, 422, -387,
	191, 723, 738, 330, 148, 360, 403, 401, 427, 702,
	100, -307, 100, 101, 102, -294, 330, -310, 335, -295,
	-387, -294, 333, -79, -79, -312, -312, -130, -210, -145,
	156, -159, -261, -162, 101, -150, -153, -204, -205, -206,
	-207, -160, -220, -259, 180, 181, 188, 157, -216, -163,
	29, 589, 485, 484, 191, 34, 234, 77, 78, 487,
	488, 159, 63, 15, 450, 451, -161, 440, 441, 452,
	446, 447, 513, 515, 516, 517, 514, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 518, 529, 490,
	491, 129, 492, 117, 119, 118, 127, 128, 493, 494,
	495, 357, 541, 542, 536, 539, 540, 538, 537, 372,
	373, 496, 559, 560, 564, 563, 561, 562, 565, 568,
	569, 570, 571, 572, 573, 575, 574, 566, 567, 544,
	543, 545, 546, 547, 548, 549, 550, 552, 551, 553,
	554, 555, 556, 557, 558, 576, 577, 578, 579, 580,
	582, 581, 586, 585, 583, 584, 588, 587, 497, 498,
	120, 121, 122, 123, 124, 125, 126, 499, 502, 500,
	501, 503, 504, 505, 510, 511, 506, 507, 508, 509,
	512, 383, 381, 382, 378, 377, 376, -89, -102, 616,
	615, -103, 437, 442, 443, 445, -151, -152, -165, -166,
	-295, -301, 257, 439, 251, 186, 483, -154, -148, -218,
	116, 102, -31, -214, 438, 448, 449, 453, 444, 454,
	602, 604, 619, 620, 622, 607, 612, 611, 614, 530,
	531, 532, 533, 534, 535, 687, 688, 689, 690, 691,
	692, 693, 694, -387, -294, 100, -157, -155, -199, 103,
	108, 111, 112, 114, -409, 275, 353, 354, 130, -419,
	716, -156, 105, 106, 107, 132, 133, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 98,
	104, 50, 412, 412, -190, -79, -79, -79, -79, -416,
	719, 594, -230, -128, -232, -33, -31, -419, 12, -79,
	-31, -32, -30, -36, -38, 621, -37, -301, 109, -237,
	-253, 16, 67, 175, 48, 56, -235, -236, -34, -31,
	-145, 23, 41, 27, -132, 182, -145, -301, -132, -279,
	256, -79, -79, -268, -315, 330, -270, 427, 702, 426,
	-260, -273, 100, -259, -272, 425, 101, -357, 172, -343,
	-347, -295, 267, -373, 263, -190, -366, -365, -295, -419,
	-129, -289, 253, 261, 260, 149, -390, 152, 309, 439,
	251, -53, -54, -55, -272, 190, 722, -111, 284, 288,
	96, 96, -347, -346, -345, -391, 288, 267, -372, -364,
	259, 268, -353, 260, 261, -348, 253, 150, -391, -348,
	258, 268, 263, 267, 288, 288, 139, 288, 139, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 283, -354,
	164, -354, 597, 597, -360, -391, 263, 253, -391, -391,
	259, -291, -348, 255, 28, 255, 38, 38, -354, -354,
	-354, -272, 190, -354, -354, -354, -354, 296, 296, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, 252, -390, -137, 423,
	316, 90, -56, 298, -39, -190, -289, 253, 254, -390,
	285, -190, 235, 252, 705, -283, 172, 19, -283, -280,
	412, 410, 397, 402, -283, -283, -283, -283, 299, 395,
	-349, 253, 38, 264, 412, 299, 395, 299, 300, 299,
	300, 405, 415, 299, -306, 18, 175, 439, 400, 404,
	292, 252, 293, 254, 414, 300, -306, 98, -284, 172,
	299, 412, 406, 295, -283, -283, -313, -419, -297, -295,
	-293, 244, 41, 155, 28, 30, 158, 191, 142, 23,
	159, 40, 246, 360, 263, 190, 259, 484, 239, 81,
	602, 440, 447, 438, 446, 450, 486, 487, 439, 398,
	34, 17, 604, 31, 273, 27, 44, 184, 241, 162,
	605, 276, 29, 274, 129, 133, 607, 26, 84, 268,
	18, 261, 46, 20, 608, 609, 21, 74, 257, 256,
	175, 253, 79, 15, 234, 32, 171, 75, 610, 150,
	145, 611, 612, 613, 614, 143, 77, 172, 24, 742,
	448, 449, 36, 703, 589, 287, 186, 82, 65, 704,
	156, 444, 615, 616, 130, 617, 134, 85, 709, 152,
	22, 80, 48, 618, 288, 619, 258, 743, 620, 430,
	621, 173, 242, 483, 78, 174, 716, 622, 717, 251,
	411, 12, 489, 35, 272, 260, 73, 72, 141, 76,
	454, 623, 252, 161, 255, 144, 132, 11, 149, 37,
	16, 83, 86, 451, 452, 453, 63, 140, 593, 160,
	19, 624, 431, 154, -387, 705, -313, -313, 299, 35,
	101, -413, -414, -415, 593, 430, 255, -295, -190, -85,
	695, 243, -86, 701, 41, 250, -135, 412, -123, 191,
	723, 706, 707, 708, 705, 409, 713, 711, 709, 299,
	710, 96, 152, 154, 155, 4, -145, 171, -200, -201,
	170, 164, 165, 166, 167, 168, 169, 176, 175, 156,
	158, 172, -246, 153, 177, 178, 179, 180, 181, 182,
	183, 185, 184, 186, 187, 173, 174, 190, 237, 238,
	-153, -153, -153, -153, -216, -222, -221, -419, -218, -387,
	-294, -301, -419, -419, -153, -278, -419, -150, -419, -419,
	-419, -419, -419, -225, -145, -419, -419, -423, -419, -423,
	-423, -423, -332, -419, -332, -332, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, 235, -419, -419, -419, -419, -419, -332, -332, -332,
	-332, -332, -332, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, 98, 112, 108,
	111, 103, -220, 114, 98, 98, 98, 98, -31, -32,
	-210, -419, -312, -400, -401, -193, -190, -419, 316, -295,
	-295, 285, 105, -235, -34, -31, -230, -236, -232, -31,
	-79, -121, -134, 69, 70, -133, -136, 27, 44, 74,
	76, 99, 72, 73, 71, 41, -420, 97, -420, -253,
	-420, 96, -38, -256, 95, 649, 679, 649, 679, 67,
	49, 98, 98, 96, 25, -231, -233, -145, 18, -299,
	4, -298, 28, -295, 98, 235, 18, -191, 32, -190,
	-279, -279, 96, 100, 330, -269, -271, 428, 430, 164,
	-300, -295, 98, 34, 97, 96, -190, -321, -324, -326,
	-325, -327, -322, -323, 357, 358, 191, 361, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 374, 386, 35,
	275, 353, 354, 355, 356, 375, 376, 377, 378, 380,
	381, 382, 383, 338, 359, 591, 339, 340, 341, 342,
	343, 344, 346, 347, 350, 348, 349, 351, 352, -296,
	-295, 95, 97, 96, -331, 95, -145, -137, 252, -295,
	253, 253, 253, -79, 483, -354, -354, -354, 283, 23,
	-46, -43, -380, 22, -42, -43, 244, 135, 136, 241,
	95, -343, 95, -352, -296, -295, 95, 150, 258, 149,
	-351, -348, -351, -352, -295, -218, -295, 150, 150, -295,
	-295, -265, -295, -265, -265, 41, -265, 41, -265, 41,
	105, -295, -265, 41, -265, 41, -265, 41, -265, 41,
	-265, 41, 34, 87, 88, 89, 34, 91, 92, 93,
	-218, -295, -295, -218, -343, -218, -190, -295, -272, 105,
	105, 105, -354, -354, 105, 98, 98, 98, -354, -354,
	105, 98, -303, -301, 98, 98, -392, 269, 313, 315,
	105, 105, 105, 105, 34, 98, -393, 34, 730, 729,
	731, 732, 733, 98, 105, 34, 105, 34, 105, -295,
	95, -190, -143, 303, 239, 241, 244, 85, 98, 319,
	320, 317, 322, 323, 324, 164, 50, 96, 255, 252,
	-295, -285, 257, -285, -295, -302, -301, -293, -190, 255,
	394, 98, -145, -350, 18, 175, -306, -306, -283, -190,
	-350, -306, -283, -190, -283, -283, -283, -283, -306, -306,
	-306, -283, -301, -301, -190, -190, -190, -190, -190, -190,
	-190, -313, -284, -283, 705, 98, -277, 18, 85, -313,
	-313, -292, 26, 96, 336, 431, 432, -311, 333, -81,
	-295, 98, -10, -29, -18, -17, -19, 164, -10, 96,
	593, -183, -190, 705, 705, 705, 705, 705, 705, -145,
	-145, -145, -145, 617, -208, -411, 156, 132, 133, 130,
	131, -162, 42, 43, 41, -145, -209, -214, -216, 115,
	175, 158, 172, -246, -150, -153, -150, -150, -150, -150,
	-150, -150, 234, -150, 234, -150, -150, -150, -150, -150,
	-150, -314, -295, 98, 191, -158, -157, 114, -409, -158,
	590, 96, -221, 235, -145, -145, -387, -119, 456, 457,
	458, 459, 461, 462, 463, 466, 467, 471, 472, 455,
	473, 460, 465, 468, 469, 470, 464, 356, -145, -211,
	-210, -211, -145, -145, -223, -224, 160, -218, -145, -420,
	-420, 105, 182, -127, 27, 44, -127, -127, -127, -127,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-127, -145, -120, 455, 473, 460, 465, 468, 469, 470,
	464, 356, 474, 475, 476, 477, 478, 479, 480, 481,
	482, -120, -119, -145, -145, -145, -145, -145, -145, -145,
	-145, -87, -145, 142, 143, 144, -210, -145, -150, -145,
	-145, -145, -420, -145, -145, -145, -211, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -386, -385, -384, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -210,
	-210, -210, -210, -210, -145, -420, -145, -164, -148, 105,
	-261, 114, 101, -145, -145, -145, -145, -145, -145, -211,
	-297, -302, -293, -294, -210, -211, -211, -210, -210, -145,
	-145, -145, -145, -145, -145, -145, -145, -420, -145, -145,
	-145, -145, -145, -253, -420, -210, 96, -402, 430, 431,
	703, -304, 288, -303, 28, -211, 98, 18, -263, 86,
	-295, -235, -235, 69, 70, 65, -131, -132, -136, -420,
	-37, 28, -255, -295, 642, 642, 68, 98, -333, -272,
	384, 385, 191, -145, -145, 96, -234, 30, 31, -190,
	-298, 182, -302, -190, -264, 288, -190, -168, -170, -171,
	-172, -193, -217, -419, -173, -31, 613, 610, 18, -183,
	-184, -192, -301, -270, -315, -269, 96, 429, 431, 432,
	85, 134, -145, -334, 190, -362, -361, -360, -343, -345,
	-346, -347, 97, -334, -339, 391, 390, -331, -331, -331,
	-331, -331, -333, -333, -333, -333, 95, -331, 95, -331,
	-331, -331, -331, -336, 95, -336, -336, -337, -336, 95,
	-337, -338, 95, -338, -373, -145, -370, -369, -367, -368,
	262, 110, 685, 641, 593, 634, 675, 86, -365, -234,
	105, -420, -143, -286, 257, -371, -368, -295, -295, -295,
	-286, 100, 98, 100, 98, 100, 98, -112, -60, -1,
	742, 743, 744, 96, 23, -344, -343, -59, 313, -376,
	-377, 288, -372, -366, -352, 150, -351, -352, -352, -295,
	96, 32, 139, 139, 139, 139, 593, 241, 35, -287,
	633, 156, 685, 641, -343, -59, 255, 255, -314, -314,
	-314, 98, 98, -282, 738, -183, -139, 305, 164, 294,
	294, 252, 307, 252, 307, -190, 318, 321, 319, 320,
	317, 322, 323, 324, 41, 41, 41, 41, 41, 41,
	306, 308, 310, 296, -190, -190, -285, 85, -185, -190,
	29, -301, 98, 98, -190, -283, -283, -190, -283, -283,
	-190, 98, -415, 337, -295, 371, 696, 698, -123, 430,
	96, 593, 26, -124, 26, -419, -411, 132, 133, -216,
	-216, -216, -209, -150, -153, -150, 155, 276, -150, -150,
	-419, -218, -420, -297, 28, 96, 86, -420, 180, 96,
	-420, -420, 96, 18, 96, -226, -224, 162, -145, -420,
	96, -420, -420, -210, -145, -145, -145, -145, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -210, -420,
	96, 96, 18, -318, 28, -420, -420, -420, -420, 96,
	-420, -420, -225, -420, 18, -420, 86, 96, 175, 96,
	-420, -420, -420, 96, 96, -420, -420, 96, -420, 96,
	-420, -420, -420, -420, -420, -420, 96, -420, 96, -420,
	-420, -420, 96, -420, 96, -420, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, -420, -420, 96, -420, 96, -420, 96,
	-420, -420, 96, -420, 96, -420, 96, -420, 96, 96,
	-420, 96, 96, 96, -420, 96, 96, 96, 96, -420,
	-420, -420, -420, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, -420, -420, -420, -420, -420, -420, 96,
	-94, 618, -420, -420, 96, -420, 96, 96, 96, 96,
	96, -420, -419, 235, -420, -420, -420, -420, -420, 96,
	96, 96, 96, 96, 96, -420, -420, -420, 96, 96,
	-420, 96, -420, 96, -420, -401, 702, 431, -197, -196,
	-194, 83, 256, 84, -419, -303, -420, -158, -261, -262,
	-261, -203, -295, 105, 114, -237, -167, 96, -169, 18,
	-216, 97, 96, -333, -241, -247, -280, -295, 98, 191,
	-335, 191, -335, 384, 385, -233, 235, -198, 19, -202,
	35, 63, -29, -419, -419, 35, 96, -186, -188, -187,
	-189, 75, 79, 81, 76, 77, 78, 82, -309, 28,
	-31, -168, -31, -419, -190, -183, -421, 18, 86, -421,
	96, 235, -271, -274, 433, 430, 436, -387, 98, -111,
	96, -360, -347, -238, -140, 46, -340, 392, -333, 601,
	-333, -342, 98, -342, 105, 105, 105, 97, -49, -44,
	-45, 36, 90, -367, -354, 98, 45, -354, -354, -295,
	97, -234, -139, -190, 156, 85, -371, -371, -371, -301,
	-2, 741, 747, 150, 95, 397, 22, -255, 96, 97,
	-219, 314, 97, -113, -295, 97, 95, -352, -352, -295,
	-419, 252, 34, 34, 685, 641, 633, -59, -219, -218,
	-295, -334, 740, 739, 97, 254, 312, -144, 450, -141,
	98, 100, -190, -190, -190, -190, -190, -190, 244, 241,
	420, -410, 325, -410, 297, 255, -183, -190, 96, -84,
	271, 266, -306, -306, 36, -190, 430, 714, 712, -145,
	155, 276, -162, -153, -119, -119, -150, -316, 191, 357,
	275, 355, 351, 371, 362, 390, 353, 391, 348, 347,
	346, -316, -314, -150, -210, -145, -145, -145, 163, -145,
	161, -145, -95, -94, -420, -420, -420, -420, -420, -95,
	-95, -95, -95, -95, -95, -95, -95, -95, -95, -230,
	-145, -145, -145, -420, 191, 357, -95, -145, 18, -145,
	-314, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -384, -145, -210, -145,
	-210, -145, -145, -145, -145, -145, -385, -385, -385, -385,
	-385, -210, -210, -210, -210, -145, -419, -295, -98, -97,
	-96, 668, 256, -94, -164, -98, -164, 234, -145, 234,
	234, 234, -145, -211, -297, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -194, -348, 294, -348, 294,
	-348, -265, 96, -276, 26, 18, 63, 63, -167, -198,
	-132, -168, -295, -244, 695, -250, 52, -248, -249, 53,
	-245, 54, 62, -335, -335, 182, -235, -145, -266, 85,
	-267, -275, -218, -213, -215, -214, -419, -254, -420, -295,
	-265, -267, -170, -171, -171, -170, -171, 75, 75, 75,
	80, 75, 80, 75, -187, -301, -420, -145, -304, 86,
	-168, -168, -192, -301, 182, 430, 434, 435, -360, -408,
	130, 156, 34, 85, 388, 110, -406, 190, 630, 680,
	685, 641, 634, 675, -407, 258, 149, 150, 270, 28,
	47, 97, 96, 97, 96, 97, 97, 96, -288, -287,
	-45, -44, -354, -354, 105, -387, 98, 98, 254, 29,
	-190, 85, 85, 85, -114, 745, 105, 95, -3, 90,
	-145, 95, 23, -343, -218, -378, -328, -379, -329, -330,
	-5, -6, -355, -117, 63, 110, -63, 50, 253, 725,
	726, 139, -419, 738, -370, -255, -374, -376, -190, -149,
	-419, -161, -147, -146, -148, -154, 180, 181, 275, 353,
	354, -219, -190, -138, 303, 311, 95, -142, 101, -389,
	86, 294, 388, 294, 388, 98, -412, 326, 98, -412,
	-190, -84, -49, -190, -283, -283, 36, -387, -420, -162,
	-153, -126, 175, 593, -319, 600, -331, -331, -331, -338,
	-331, 343, -331, 343, -331, -420, -420, -420, 96, -420,
	26, -420, 96, -145, 96, -95, -95, -95, -95, -95,
	-122, 489, 96, 96, -420, 95, 95, -420, -145, -420,
	-420, -420, 96, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, 96, -420, 96, -420,
	96, -420, 96, -420, 96, -420, 96, -420, 96, -420,
	96, -420, 96, -420, 96, -420, 96, -420, 96, -420,
	96, -420, 96, -420, 96, -420, 96, -420, -420, 96,
	-420, -420, -420, 96, -420, 96, -420, 96, -420, -420,
	-420, 96, -317, 686, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -93, -296, -94, 650, 650,
	-420, -94, -227, 96, -150, -420, -150, -150, -150, -420,
	-420, -420, 96, -420, 96, 96, -420, 96, -420, 96,
	-420, -420, -420, -420, 96, -195, 26, -419, -195, -419,
	-195, -420, -261, -190, -198, -228, 20, -241, 57, 363,
	-252, -251, 61, 53, -249, 23, 55, 23, 33, -266,
	96, 164, -308, 96, 28, -420, -420, 96, 63, 235,
	-420, -198, -181, -180, 85, 86, -182, 85, -180, 75,
	75, -256, 96, -264, -168, -198, -198, 235, 130, -419,
	-149, 16, 98, 98, -387, -405, 729, 730, 34, 105,
	-354, -354, 150, 150, -190, 95, -333, 98, -333, 105,
	105, 34, 91, 92, 93, 34, 87, 88, 89, -190,
	-190, -190, -190, -375, 95, 23, -145, 95, 164, 97,
	-255, -255, 290, 175, -354, 723, 296, 296, -354, -354,
	-354, -116, -115, 745, 97, -420, 96, -341, 593, 596,
	-145, -155, -155, -256, 97, -383, 593, -388, -295, -295,
	-295, -295, 105, 107, -420, 591, 82, 594, -420, -333,
	-145, -145, -145, -145, -235, 98, -145, -145, 105, 105,
	-95, -420, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -210, -145, -420, -178, -177, -179, 706, 130,
	34, -316, -420, -212, 288, -101, -100, -99, 18, -420,
	-145, -119, -119, -119, -119, -145, -145, -145, -145, -145,
	-145, -419, 75, 22, 20, -258, -295, 258, -419, -258,
	-419, -304, -228, -229, 21, 23, -242, 59, -240, 58,
	-240, -251, 23, 23, 98, 23, 98, 150, -275, -145,
	-215, -303, 63, -29, -295, -213, -295, -230, -145, 95,
	-145, -158, -198, -198, -145, -205, 513, 515, 516, 517,
	514, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 518, 529, 490, 491, 492, 117, 119, 118, 127,
	128, 493, 494, 495, 357, 541, 542, 536, 539, 540,
	538, 537, 372, 373, 496, 559, 560, 564, 563, 561,
	562, 565, 568, 569, 570, 571, 572, 573, 575, 574,
	566, 567, 544, 543, 545, 546, 547, 548, 549, 550,
	552, 551, 553, 554, 555, 556, 557, 558, 576, 577,
	578, 579, 580, 582, 581, 586, 585, 583, 584, 588,
	587, 497, 498, 120, 121, 122, 123, 124, 125, 126,
	499, 502, 500, 503, 504, 505, 510, 511, 506, 507,
	508, 509, 512, 383, 381, 382, 378, 377, 376, 437,
	442, 443, 445, 530, 531, 532, 533, 534, 535, 687,
	688, 689, 690, 691, 692, 693, 694, 98, 98, 95,
	-145, 97, 97, -256, -374, -60, 97, -257, -255, 105,
	97, 291, -214, -419, 98, -354, -354, -354, 105, 105,
	-303, -420, 96, -295, -407, -376, 597, 597, -420, 28,
	-382, -381, -297, 95, 86, 68, 592, 595, -420, -420,
	-420, 96, -420, -420, -420, 97, 97, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, 96,
	-420, -177, -179, -420, 85, -158, -230, 23, -98, 313,
	315, -98, -420, -420, -420, -420, -420, 96, -420, -420,
	96, -420, 96, -420, -420, -258, -420, 23, 23, 96,
	-420, -258, -420, -258, -197, -229, -108, -107, -106, 624,
	-145, -210, -243, 60, 85, 134, 98, 98, 98, 16,
	-419, -213, 235, -308, -235, -255, -175, 397, -230, -420,
	-255, 97, 28, 97, 747, 150, 97, -214, -125, -419,
	287, -303, 98, 98, -115, -118, -29, 96, 164, -255,
	-190, 68, -145, -210, -420, 85, 605, 706, -92, -91,
	-88, 717, 743, -210, -94, -94, -145, -145, -145, -420,
	-295, 258, -420, -420, -108, 96, -105, -104, -295, -320,
	593, 85, 134, -267, -255, -308, -295, 97, -420, -419,
	-235, 97, -239, -29, 95, -3, 287, -328, -379, -329,
	-330, -5, -6, -355, -82, 593, -381, -359, -301, -297,
	98, 105, 97, 593, -420, -420, -90, 158, 715, 683,
	-155, 234, -420, 96, -420, 96, -420, 96, -106, 96,
	28, 598, -420, -304, -176, -174, -295, 647, -398, -397,
	589, -408, -404, 130, 156, 110, -406, 685, 641, 140,
	141, -82, -145, 95, -420, -83, 302, 702, 235, -389,
	594, -90, 716, 661, 636, 661, 636, -150, -145, -145,
	-145, -104, -419, -420, 96, 26, -321, -62, 658, -395,
	-396, 85, -399, 403, 657, 678, 130, 98, 97, -255,
	263, -302, -383, 595, 155, -119, -420, 96, -420, 96,
	-420, -93, -174, 654, -334, -158, -396, 85, -395, 85,
	17, 16, -4, 746, 97, 304, -90, 661, 636, -145,
	-145, -420, -61, 29, -175, -394, 271, 266, 269, 35,
	-394, 105, -4, -420, -420, 658, 265, 34, 130, -158,
	-178, -177, -177,
}

var yyDef = [...]int{
	884, -2, -2, 886, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 884, 884, 884, 0, 884, 0,
	0, 884, -2, -2, 884, 1639, 0, 884, 0, 879,
	0, -2, 801, 807, 0, 816, -2, 0, 0, 884,
	884, 2276, 2276, 879, 0, 0, 0, 0, 0, 884,
	884, 884, 884, 1644, 1497, 50, 884, 0, 85, 86,
	834, 835, 836, 65, 0, 2274, 885, 1, 3, 71,
	75, 0, 0, 0, 58, 1506, 0, 78, 0, 0,
	888, 0, 0, 1622, 884, 884, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	608, 527, 579, 525, 564, -2, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	402, 402, 0, 0, -2, 513, 513, 513, 1624, 0,
	0, 0, 561, 464, 402, 402, 402, 0, 402, 402,
	402, 402, 0, 0, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 1524, 165, 1640, 1637, 1638, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	0, 1616, 0, 721, 988, 0, 880, 881, 0, 790,
	790, 0, 790, 790, 790, 790, 0, 0, 0, 735,
	0, 0, 0, 0, 787, 0, 751, 752, 0, 787,
	0, 758, 793, 0, 0, 765, 790, 790, 768, 2277,
	0, 2277, 2277, 0, 1607, 0, 784, 782, 796, 797,
	42, 800, 803, 804, 805, 806, 809, 0, 820, 823,
	1633, 1634, 0, 825, 830, 847, 848, 0, 45, 1148,
	0, 1012, 0, 1023, -2, 1034, 1051, 1052, 1053, 1054,
	1055, 1057, 1058, 1059, 0, 0, 0, 0, 1064, 1065,
	0, 0, 0, 0, 0, 1128, 0, 0, 0, 0,
	2002, 1468, 0, 0, 1430, 1430, 1164, 1430, 1430, 1432,
	1432, 1432, 1853, 1994, 2003, 2182, 1814, 1820, 1821, 1822,
	2128, 2129, 2130, 2131, 2220, 2221, 2225, 1916, 1809, 2195,
	2196, 0, 2273, 1955, 1963, 1964, 1940, 1949, 1988, 2090,
	2205, 1832, 1983, 2053, 1913, 1935, 1936, 2071, 2072, 1959,
	1960, 1939, 2134, 2136, 2152, 2153, 2138, 2140, 2149, 2155,
	2160, 2139, 2151, 2156, 2169, 2173, 2176, 2177, 2178, 2146,
	2144, 2157, 2161, 2163, 2165, 2171, 2174, 2147, 2145, 2158,
	2162, 2164, 2166, 2172, 2175, 2133, 2137, 2141, 2150, 2168,
	2148, 2167, 2142, 2154, 2159, 2170, 2143, 2135, 1953, 1956,
	1943, 1944, 1946, 1948, 1954, 1961, 1967, 1945, 1966, 1965,
	0, 1941, 1942, 1947, 1958, 1962, 1950, 1951, 1952, 1957,
	1968, 2009, 2008, 2007, 2052, 1979, 2051, 0, 0, 0,
	0, 0, 1803, 1858, 1859, 2179, 1352, 1353, 1354, 1355,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 1481,
	1482, 44, 1147, 1603, 1432, 1432, 1432, 1432, 1432, 1432,
	1086, 1087, 1088, 1089, 1090, 1116, 1117, 1123, 1124, 2066,
	2067, 2068, 2069, 1896, 2215, 1905, 1906, 2048, 2049, 1918,
	1919, 2247, 2248, -2, -2, -2, 232, 233, 234, 235,
	236, 237, 238, 239, 0, 1857, 2193, 2194, 228, 0,
	0, 296, 293, 294, 295, 1130, 1131, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 286, 287, 288, 289, 290, 298,
	299, 2276, 0, 857, 0, 0, 0, 0, 0, 0,
	1645, 1646, 1506, 0, 1498, 1497, 63, 0, 884, -2,
	0, 0, 0, 0, 47, 0, 52, 945, 887, 77,
	76, 1546, 1549, 0, 0, 0, 59, 1507, 67, 69,
	1508, 0, 889, 890, 0, 921, 925, 0, 0, 0,
	1623, 1622, 1622, 102, 0, 0, 103, 123, 124, 125,
	0, 0, 109, 110, 1609, 1610, 43, 0, 0, 177,
	178, 0, 1104, 429, 0, 173, 0, 422, 361, 0,
	1524, 0, 0, 0, 0, 0, 884, 0, 1617, 154,
	155, 162, 163, 164, 402, 402, 402, 576, 0, 0,
	165, 165, 534, 535, 536, 0, 0, -2, 427, 0,
	514, 0, 0, 416, 416, 420, 418, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 0, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	403, 0, 574, 575, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 1626, 0, 551, 552, 0, 0,
	0, 402, 402, 0, 0, 0, 0, 402, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 1537, 0,
	0, 0, -2, 0, 713, 0, 0, 0, 1618, 1618,
	0, 720, 0, 0, 0, 725, 0, 0, 726, 0,
	787, 787, 785, 786, 728, 729, 730, 731, 790, 0,
	0, 411, 412, 413, 787, 790, 0, 790, 790, 790,
	790, 787, 787, 787, 790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2277, 793, 790, 0, 759, 0,
	760, 761, 762, 763, 766, 767, 769, 2278, 2279, 1635,
	1636, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 2277, 2277, 773, 777, 779, 1608,
	802, 808, 810, 811, 0, 0, 821, 824, 841, 49,
	1904, 829, 49, 831, 832, 833, 859, 860, 865, 0,
	0, 0, 0, 871, 872, 873, 0, 0, 876, 877,
	878, 0, 0, 0, 0, 0, 1010, 0, 0, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1035, 1036, 0, 0, 0,
	1060, 1061, 1062, 1063, 1066, 0, 1077, 0, 1079, 1477,
	-2, 0, 0, 0, 1071, 1072, 0, 0, 0, 1628,
	1628, 0, 0, 0, 1469, 0, 0, 1162, 0, 1163,
	1165, 1166, 1167, 0, 1168, 1169, 894, 894, 894, 894,
	894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 1628, 1628, 0, 0, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 240, 241,
	242, 243, 244, 245, 300, 246, 247, 248, 1147, 0,
	0, 0, 46, 849, 850, 0, 971, 1628, 0, 0,
	900, 0, 1643, 57, 66, 68, 1506, 61, 1506, 0,
	904, 0, 0, -2, -2, 905, 906, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 54, 2275, 55, 0,
	74, 0, 48, 0, 0, 1547, 0, 1550, 0, 0,
	0, 375, 1554, 0, 0, 1499, 1500, 1503, 0, 922,
	2000, 926, 0, 928, 929, 0, 0, 100, 0, 987,
	0, 0, 0, 111, 0, 113, 114, 0, 0, 0,
	386, 1611, 1612, 1613, -2, 409, 0, 386, 370, 308,
	309, 310, 361, 312, 361, 361, 361, 361, 375, 375,
	375, 375, 343, 344, 345, 346, 347, 0, 361, 0,
	329, 361, 361, 361, 361, 351, 352, 353, 354, 355,
	356, 357, 358, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 363, 363, 363, 363, 363, 367, 367, 0,
	1105, 0, 390, 0, 1503, 0, 0, 1537, 1620, 1630,
	0, 0, 0, 1620, 132, 0, 0, 0, 577, 619,
	528, 565, 578, 0, 531, 532, -2, 0, 0, 513,
	0, 515, 0, 410, 0, -2, 0, 420, 0, 416,
	420, 417, 420, 408, 421, 555, 556, 557, 0, 559,
	560, 649, 957, 0, 0, 0, 0, 0, 655, 656,
	657, 0, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 0, 0, 0, 515, 0, 562, 0, 0, 466,
	467, 468, 0, 0, 471, 472, 473, 474, 0, 0,
	477, 478, 479, 974, 975, 480, 481, 506, 507, 508,
	482, 483, 484, 485, 486, 487, 488, 500, 501, 502,
	503, 504, 505, 489, 490, 491, 492, 493, 494, 497,
	0, 147, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 0, 0, 903, 989, 1641, 1642, 722, 0,
	0, 791, 792, 0, 414, 415, 790, 790, 732, 774,
	0, 790, 736, 775, 737, 739, 738, 740, 753, 754,
	790, 743, 788, 789, 744, 745, 746, 747, 748, 749,
	750, 770, 755, 756, 757, 794, 0, 798, 799, 771,
	772, 0, 780, 0, 0, 814, 815, 0, 822, 844,
	842, 843, 845, 837, 838, 839, 840, 0, 846, 0,
	0, 862, 96, 867, 868, 869, 870, 882, 875, 1149,
	1007, 1008, 1009, 0, 1011, 1017, 0, 1132, 1134, 1015,
	1016, 1019, 0, 0, 0, 1013, 1024, 1144, 1145, 1146,
	0, 0, 0, 0, 0, 1028, 1032, 1037, 1038, 1039,
	1040, 1041, 0, 1042, 0, 1045, 1046, 1047, 1048, 1049,
	1050, 1056, 1445, 1446, 1447, 1075, 301, 302, 0, 1076,
	0, 0, 0, 0, 0, 0, 0, 0, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1148, 0,
	1629, 0, 0, 0, 1475, 1472, 0, 0, 0, 1431,
	1433, 0, 0, 0, 895, 896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 0, 0, 1448, 0, 0, 0, 0, 0, 0,
	0, 1468, 0, 1081, 1082, 1083, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 1357,
	1358, 1359, 41, 0, 0, 0, 0, 0, 0, 0,
	1479, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1381, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 852, 853, 855,
	0, 991, 0, 972, 0, 0, 858, 0, 899, 0,
	902, 60, 62, 908, 909, 0, 930, 919, 907, 56,
	51, 0, 0, 949, 1548, 1551, 1552, 375, 1574, 0,
	384, 384, 381, 1509, 1510, 0, 1502, 1504, 1505, 79,
	927, 923, 0, 1005, 0, 0, 986, 0, 933, 935,
	936, 937, 969, 0, 940, 941, 0, 0, 0, 0,
	0, 98, 988, 104, 0, 112, 0, 0, 117, 118,
	105, 106, 107, 108, 0, 608, -2, 461, 179, 181,
	182, 183, 174, -2, 373, 371, 372, 311, 375, 375,
	337, 338, 339, 340, 341, 342, 0, 349, 0, 330,
	331, 332, 333, 322, 0, 323, 324, 325, 365, 0,
	326, 327, 0, 328, 428, 0, 1511, 391, 392, 394,
	402, 0, 397, 398, 0, 402, 402, 0, 423, 424,
	0, 1503, 1528, 0, 0, 0, 1631, 1630, 1630, 1630,
	0, 167, 168, 169, 170, 171, 172, 644, 0, 0,
	620, 642, 643, 165, 0, 0, 175, 517, 516, 0,
	676, 0, 426, 0, 0, 420, 420, 405, 406, 558,
	0, 0, 651, 652, 653, 654, 0, 0, 0, 544,
	455, 0, 545, 546, 515, 517, 0, 0, 386, 469,
	470, 475, 476, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 598,
	600, 519, 604, 606, 597, 599, 601, 519, 605, 607,
	1525, 1526, 1527, 0, 0, 714, 0, 0, 452, 94,
	1619, 719, 723, 724, 787, 742, 776, 787, 734, 741,
	764, 778, 812, 813, 818, 826, 827, 828, 866, 0,
	0, 0, 0, 874, 0, 0, 1018, 1133, 1135, 1020,
	1021, 1022, 1025, 0, 1029, 1033, 0, 0, 0, 0,
	0, 1080, 1078, 1479, 0, 0, 0, 1129, 0, 0,
	1152, 1153, 0, 0, 0, 0, 1473, 0, 0, 1160,
	0, 1434, 1110, 0, 0, 0, 0, 0, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1497, 1187,
	0, 0, 0, 0, 0, 1192, 1193, 1194, 1110, 0,
	1197, 1198, 0, 1200, 0, 1201, 0, 0, 0, 0,
	1208, 1209, 1211, 0, 0, 1214, 1215, 0, 1217, 0,
	1219, 1220, 1221, 1222, 1223, 1224, 0, 1226, 0, 1228,
	1229, 1230, 0, 1232, 0, 1234, 1235, 0, 1237, 0,
	1239, 0, 1242, 0, 1245, 0, 1248, 0, 1251, 0,
	1254, 0, 1257, 0, 1260, 0, 1263, 0, 1266, 0,
	1269, 0, 1272, 0, 1275, 0, 1278, 0, 1281, 0,
	1284, 0, 1287, 1288, 1289, 0, 1291, 0, 1293, 0,
	1296, 1297, 0, 1299, 0, 1302, 0, 1305, 0, 0,
	1306, 0, 0, 0, 1310, 0, 0, 0, 0, 1319,
	1320, 1321, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 1334, 1335, 1336, 1337, 1338, 0,
	1340, 0, 1111, 0, 0, 1111, 0, 0, 0, 0,
	0, 1150, 1628, 0, 1435, 1436, 1437, 1438, 1439, 0,
	0, 0, 0, 0, 0, 1379, 1380, 1382, 0, 0,
	1385, 0, 1387, 0, 1602, 851, 854, 856, 943, 992,
	993, 0, 0, 0, 0, 973, 1627, 897, 898, 901,
	951, 0, 1483, 0, 0, 930, 1005, 0, 931, 0,
	53, 946, 0, 1556, 1555, 1568, 1581, 384, 384, 378,
	379, 385, 380, 382, 383, 1501, 0, 1506, 0, 1595,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 976, 0, 0, 979, 0, 0, 0, 0, 970,
	941, 0, 942, 0, -2, 0, 0, 92, 93, 0,
	0, 0, 115, 116, 0, 0, 122, 387, 388, 156,
	165, 463, 180, 436, 0, 0, 307, 374, 334, 335,
	336, 0, 359, 0, 0, 0, 0, 457, 128, 1515,
	1514, 402, 402, 393, 0, 396, 0, 0, 0, 1632,
	362, 425, 0, 146, 0, 0, 0, 0, 0, 152,
	614, 0, 0, 621, 0, 0, 0, 526, 0, 537,
	538, 0, 648, -2, 710, 390, 0, 404, 407, 958,
	0, 0, 539, 0, 542, 543, 456, 517, 548, 549,
	563, 550, 498, 499, 496, 0, 0, 1538, 1539, 1544,
	1542, 1543, 133, 584, 586, 590, 585, 589, 0, 0,
	0, 521, 0, 521, 582, 0, 452, 1511, 0, 718,
	453, 454, 790, 790, 861, 97, 0, 864, 0, 0,
	0, 0, 1026, 1030, 1043, 1044, 1440, 1466, 361, 361,
	1453, 361, 367, 1456, 361, 1458, 361, 1461, 361, 1464,
	1465, 0, 0, 1073, 0, 0, 0, 0, 1159, 1476,
	0, 0, 1170, 1109, 1110, 1110, 1110, 1110, 1110, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1470,
	0, 0, 0, 1191, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 145, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 1108, 0, 1112,
	1113, 0, 0, 1342, 0, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 994, 1001, 0, 1001, 0,
	1001, 0, 0, 0, 1614, 1615, 1484, 1485, 1005, 1486,
	920, 932, 950, 1574, 0, 1567, 0, -2, 1576, 0,
	0, 0, 1582, 376, 377, 924, 80, 1006, 83, 0,
	1595, 1604, 0, 1592, 1597, 1599, 0, 0, 0, 1588,
	0, 1005, 934, 965, 967, 0, 962, 977, 978, 980,
	0, 982, 0, 984, 985, 945, 939, 0, 100, 0,
	1005, 1005, 99, 0, 990, 119, 120, 121, 462, 184,
	189, 0, 0, 0, 194, 0, 196, 0, 0, 0,
	201, 202, 402, 402, 437, 0, 304, 306, 0, 0,
	187, 375, 0, 375, 0, 366, 368, 0, 438, 458,
	1512, 1513, 0, 0, 395, 399, 400, 401, 0, 1621,
	148, 0, 0, 0, 617, 0, 645, 0, 0, 0,
	0, 0, 0, 176, 518, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 0, 402, 0, 0, 0, 402,
	402, 402, 0, 702, 389, 0, 0, 673, 670, 540,
	0, 218, 219, 226, 227, 229, 0, 0, 0, 0,
	0, 547, 945, 1529, 1530, 1531, 0, 1541, 1545, 136,
	0, 0, 0, 0, 592, 596, 602, 0, 520, 603,
	715, 716, 717, 95, 727, 733, 863, 883, 1014, 1027,
	1031, 0, 0, 0, 0, 1467, 1451, 375, 1454, 1455,
	1457, 1459, 1460, 1462, 1463, 1069, 1070, 1074, 0, 1156,
	0, 1158, 0, 1474, 0, 1171, 1172, 1173, 1174, 1175,
	1506, 0, 0, 0, 1190, 0, 0, 1110, 0, 1203,
	1202, 1204, 0, 1206, 1207, 1212, 1213, 1216, 1218, 1225,
	1227, 1231, 1233, 1236, 1238, 1240, 0, 1243, 0, 1246,
	0, 1249, 0, 1252, 0, 1255, 0, 1258, 0, 1261,
	0, 1264, 0, 1267, 0, 1270, 0, 1273, 0, 1276,
	0, 1279, 0, 1282, 0, 1285, 0, 1290, 1292, 0,
	1295, 1298, 1300, 0, 1303, 0, 1307, 0, 1309, 1311,
	1312, 0, 0, 0, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1339, 0, 1102, 1341, 1114, 1115,
	1120, 1344, 0, 0, 0, 1347, 0, 0, 0, 1351,
	1151, 1362, 0, 1367, 0, 0, 1373, 0, 1377, 0,
	1383, 1384, 1386, 1388, 0, 0, 0, 0, 0, 0,
	0, 971, 952, 64, 1486, 1490, 0, 1561, 1559, 1559,
	1569, 1570, 0, 0, 1577, 0, 0, 0, 0, 84,
	0, 0, 1583, 0, 0, 1600, 0, 0, 0, 0,
	101, 1497, 959, 966, 0, 0, 960, 0, 961, 981,
	983, 938, 0, 1005, 1005, 90, 91, 0, 190, 0,
	192, 0, 195, 197, 198, 199, 205, 206, 207, 200,
	0, 0, 303, 305, 0, 0, 348, 360, 350, 0,
	0, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 945,
	149, 150, 151, 609, 0, 619, 0, 947, 0, 612,
	0, 529, 0, 0, 0, 402, 402, 402, 0, 0,
	0, 0, 687, 0, 0, 650, 0, 658, 0, 0,
	0, 230, 231, 0, 1540, 583, 0, 134, 135, 0,
	0, 588, 522, 523, 1067, 0, 0, 0, 1068, 1452,
	0, 0, 0, 0, 0, 1471, 0, 0, 0, 0,
	1196, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 0, 639, 640,
	0, 1391, 1107, 1497, 0, 1111, 1121, 1122, 0, 1111,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 953, 954, 0, 0,
	0, 991, 1490, 1495, 0, 0, 1564, 0, 1557, 1560,
	1558, 1571, 0, 0, 1578, 0, 1580, 0, 1605, 1606,
	1598, 1593, 0, 1587, 1590, 1592, 1589, 1506, 963, 0,
	968, 0, 1497, 89, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 204, 0,
	0, 364, 369, 0, 0, 0, 610, 0, 948, 622,
	613, 0, 700, 0, 704, 0, 0, 0, 707, 708,
	709, 686, 0, 690, 430, 674, 671, 672, 541, 0,
	137, 138, 0, 0, 0, 1441, 0, 1444, 1154, 1157,
	1155, 0, 1186, 1188, 1189, 1449, 1450, 1205, 1241, 1244,
	1247, 1250, 1253, 1256, 1259, 1262, 1265, 1268, 1271, 1274,
	1277, 1280, 1283, 1286, 1294, 1301, 1304, 1308, 1313, 0,
	1316, 0, 0, 1317, 0, 641, 1098, 0, 0, 1118,
	1119, 0, 1346, 1348, 1349, 1350, 1363, 0, 1368, 1369,
	0, 1374, 0, 1378, 1389, 0, 996, 1003, 1004, 0,
	999, 0, 1000, 0, 944, 1495, 82, 1496, 1493, 0,
	1491, 1488, 1553, 0, 1562, 1563, 1572, 1573, 1579, 0,
	0, 1592, 0, 1586, 87, 0, 0, 0, 1506, 191,
	0, 210, 0, 618, 0, 621, 611, 698, 699, 0,
	711, 703, 705, 706, 688, -2, 1532, 0, 0, 0,
	591, 1442, 0, 0, 1318, 0, 637, 638, 1106, 1099,
	0, 1084, 1085, 1103, 1343, 1345, 0, 0, 0, 995,
	955, 956, 997, 998, 81, 0, 1492, 1126, 0, 1487,
	0, 1565, 1566, 1596, 0, 1585, 1591, 964, 971, 0,
	88, 443, 436, 1532, 0, 0, 0, 691, 692, 693,
	694, 695, 696, 697, 580, 1534, 139, 140, 0, 510,
	511, 512, 133, 0, 1161, 1314, 1100, 0, 0, 0,
	0, 0, 1364, 0, 1370, 0, 1375, 0, 1494, 0,
	0, 1489, 1594, 623, 0, 625, 0, -2, 431, 444,
	0, 185, 211, 212, 0, 0, 215, 216, 217, 208,
	209, 129, 0, 0, 712, 0, 1535, 1536, 0, 136,
	0, 0, 1091, 1092, 1093, 1094, 1096, 0, 0, 0,
	0, 1127, 1104, 624, 0, 0, 386, 0, 634, 432,
	433, 0, 439, 440, 441, 442, 213, 214, 646, 0,
	0, 509, 587, 1443, 0, 0, 1365, 0, 1371, 0,
	1376, 0, 626, 627, 635, 0, 434, 0, 435, 0,
	0, 0, 615, 0, 646, 1533, 1101, 1095, 1097, 0,
	0, 1125, 0, 636, 632, 445, 447, 448, 0, 0,
	446, 647, 616, 1366, 1372, 0, 449, 450, 451, 628,
	629, 630, 631,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 3, 3, 3, 185, 177, 3,
	95, 97, 182, 180, 96, 181, 235, 183, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 748,
	165, 164, 166, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 187, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 188,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 154, 155,
	156, 158, 159, 160, 161, 162, 163, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 178, 179, 184,
	186, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:643
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:648
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:687
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:693
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:705
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:709
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:715
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:721
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:727
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:731
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:740
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:750
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:756
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:923
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:927
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:957
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:961
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:995
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1005
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1015
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1028
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1040
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1058
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1062
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1068
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1072
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1076
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1082
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1086
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1092
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1106
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1110
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1134
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1138
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1142
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1154
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1170
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1174
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1181
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1190
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1200
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1205
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1210
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1216
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1236
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1242
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1258
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1265
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1272
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1277
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1282
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1287
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1294
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1301
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1312
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1323
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1333
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1337
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1359
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1369
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1379
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1385
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1389
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1395
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1399
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1405
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1415
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1420
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1429
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1434
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1453
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1462
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1542
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1547
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1552
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1557
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1567
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1571
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1575
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1581
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1585
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1590
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1599
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1604
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1614
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1619
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1624
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1746
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1750
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1944
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1958
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1962
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1968
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1972
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1978
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1982
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1986
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1990
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2243
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2282
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2307
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2377
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2386
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2392
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2419
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2423
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2427
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2431
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2451
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2455
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2459
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2463
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = ""
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2530
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2534
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2540
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2544
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2550
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2554
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2560
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2564
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2570
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2584
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2601
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2607
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2619
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2623
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2627
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2632
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2658
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2662
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2666
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2670
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2675
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2702
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2711
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2717
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2731
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2735
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2853
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2857
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2916
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2920
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2929
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2947
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2951
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2960
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2964
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2968
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2976
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2982
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2990
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3122
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3126
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3156
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3160
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3164
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3168
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3188
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3311
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3359
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3374
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3382
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3413
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3422
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3430
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3439
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3446
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3458
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3467
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3478
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3482
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3496
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3500
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3506
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3512
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3518
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3528
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3532
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3538
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3544
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3550
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3556
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3562
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3574
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3580
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3586
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3592
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3596
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3600
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3606
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3610
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3615
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3619
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3624
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3628
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3690
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3694
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3698
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3702
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3706
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3710
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3714
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3718
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3737
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3752
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3756
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3766
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3771
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3776
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3781
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3786
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3791
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3796
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3802
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3808
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3818
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3823
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3827
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3832
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3837
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3842
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3847
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3852
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3857
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3864
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3871
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3878
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3896
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3902
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3908
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3914
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3920
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3926
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3938
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3960
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3964
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4222
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4239
		{
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = "extended "
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4255
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4259
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4283
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4293
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4297
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4307
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4313
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4337
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4341
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4345
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4364
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4371
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4375
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4384
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4390
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4394
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4400
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4404
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4408
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4421
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4425
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4430
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4435
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4447
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4452
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4456
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4460
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4464
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4468
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4473
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4477
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4481
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4485
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = yyDollar[1].str
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = yyDollar[1].str
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = yyDollar[1].str
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4522
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4536
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4540
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4546
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4552
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4556
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4568
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4572
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4578
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4584
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4588
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4592
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4596
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4618
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4622
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4626
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4630
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4640
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4644
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4654
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4658
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4699
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4703
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4707
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4721
		{
			setAllowComments(yylex, true)
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4725
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4731
		{
			yyVAL.strs = nil
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4735
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4741
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4745
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4749
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4754
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4762
		{
			yyVAL.str = SQLCacheStr
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4767
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4771
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4775
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4781
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4785
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4795
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4804
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4810
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4814
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4819
		{
			yyVAL.strs = nil
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4833
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.str = SQLCacheStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.str = DistinctStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = DistinctStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.str = HighPriorityStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4859
		{
			yyVAL.str = StraightJoinHint
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = SQLBigResultStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4885
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4895
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4899
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4903
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4907
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4912
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4920
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4927
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4932
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4936
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4942
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4948
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4952
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4962
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4966
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4970
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4974
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4980
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4984
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4990
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4994
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5003
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5012
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5018
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5022
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5028
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5032
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5038
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5042
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5050
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5056
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5060
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5073
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5077
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5081
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5085
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5091
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5093
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5097
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5103
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5105
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5108
		{
			yyVAL.empty = struct{}{}
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.empty = struct{}{}
		}
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5113
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5117
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5121
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5134
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5138
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5142
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5148
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5154
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5158
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5162
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5166
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5172
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5176
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5186
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5190
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5196
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5200
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5206
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5215
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5221
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5231
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5235
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5239
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5243
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5247
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5251
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5256
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5260
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5264
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5268
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5538
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5580
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5584
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5590
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5594
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5600
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5604
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5608
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5614
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5618
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5625
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5629
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5633
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5637
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5641
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5647
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5651
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5655
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5659
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5663
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5667
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5671
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5680
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5686
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5690
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5699
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5704
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5708
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5714
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5720
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5724
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5730
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5746
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5752
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5756
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5762
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5766
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5772
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5776
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5788
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5794
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5798
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5804
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5810
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5814
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5820
		{
			yyVAL.str = ""
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5824
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5830
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5834
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5841
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5845
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5849
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5853
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5859
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5863
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5869
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5873
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5877
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5881
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5885
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5889
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5895
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5899
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5903
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5910
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5916
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5920
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5995
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6115
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6809
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6813
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6817
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6834
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6838
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6842
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6846
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6853
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6857
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6881
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6885
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6897
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6901
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6905
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6910
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6914
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6920
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6924
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6928
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6932
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6936
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6940
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6944
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6948
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6952
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6956
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6960
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6964
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6968
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6972
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6976
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6980
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6984
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6988
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6992
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6996
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7002
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7006
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7010
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7014
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7018
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7022
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7026
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7030
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7034
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7038
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7042
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7046
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7050
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7054
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7058
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7062
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7066
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7070
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7080
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7084
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7088
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7098
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7102
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7106
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7110
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7114
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7120
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7124
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7128
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7132
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7136
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7142
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7146
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7150
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7160
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7164
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7170
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7174
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7178
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7182
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7186
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7192
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7196
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7200
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7204
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7208
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7212
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7216
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7220
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7224
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7228
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7247
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7252
		{
			yyVAL.str = string("")
		}
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7256
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7262
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7266
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7272
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7281
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7287
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7291
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7295
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7299
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7305
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7309
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7315
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7324
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7328
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7337
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7356
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7362
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7368
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7372
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7381
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7390
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7396
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7402
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7406
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7412
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7417
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7421
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7425
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7430
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7434
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7440
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7444
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7448
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7453
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7457
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7461
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7465
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7469
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7476
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7480
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7484
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7488
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7494
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7498
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7502
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7506
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7511
		{
			yyVAL.str = ""
		}
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7515
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7519
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7528
		{
			yyVAL.str = ""
		}
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7532
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7538
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7542
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7547
		{
			yyVAL.str = ""
		}
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7551
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7556
		{
			yyVAL.str = "cascaded"
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7560
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7564
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7573
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7579
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7585
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7591
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7600
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7604
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7609
		{
			yyVAL.str = ""
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7613
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7619
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7623
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7627
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7631
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7635
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7639
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7643
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7649
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7653
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7657
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7662
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7666
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7670
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7675
		{
			yyVAL.str = ""
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7679
		{
			yyVAL.str = " header"
		}
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7684
		{
			yyVAL.str = ""
		}
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7688
		{
			yyVAL.str = " manifest on"
		}
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7692
		{
			yyVAL.str = " manifest off"
		}
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7697
		{
			yyVAL.str = ""
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7701
		{
			yyVAL.str = " overwrite on"
		}
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7705
		{
			yyVAL.str = " overwrite off"
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7711
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7716
		{
			yyVAL.str = ""
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7720
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7726
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7730
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7736
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7740
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7745
		{
			yyVAL.str = ""
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7749
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7755
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7759
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7765
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7769
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7773
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7778
		{
			yyVAL.str = ""
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7782
		{
			yyVAL.str = " optionally"
		}
	case 1583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7795
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7799
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7803
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7807
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7811
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7817
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7821
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7825
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7829
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7838
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7842
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7847
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7851
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7857
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7861
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7867
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7871
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7877
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7881
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7886
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7896
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7900
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7906
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7913
		{
			yyVAL.str = "charset"
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7923
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7927
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7931
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7940
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7942
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7945
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7947
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7950
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7952
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7955
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7957
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7960
		{
			yyVAL.empty = struct{}{}
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7962
		{
			yyVAL.empty = struct{}{}
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7964
		{
			yyVAL.empty = struct{}{}
		}
	case 1627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7968
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7977
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7984
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7988
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7994
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7998
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8005
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8011
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8015
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8021
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8025
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8032
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8038
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8044
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8048
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8052
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8708
		{
		}
	case 2275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8713
		{
		}
	case 2276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8717
		{
			skipToEnd(yylex)
		}
	case 2277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8722
		{
			skipToEnd(yylex)
		}
	case 2278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8726
		{
			skipToEnd(yylex)
		}
	case 2279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8730
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
