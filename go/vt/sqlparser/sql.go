// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const UNDERSCORE_UTF8MB3 = 57541
const INTERVAL = 57542
const JSON_EXTRACT_OP = 57543
const JSON_UNQUOTE_EXTRACT_OP = 57544
const CREATE = 57545
const ALTER = 57546
const DROP = 57547
const RENAME = 57548
const ANALYZE = 57549
const ADD = 57550
const FLUSH = 57551
const CHANGE = 57552
const MODIFY = 57553
const DEALLOCATE = 57554
const REVERT = 57555
const SCHEMA = 57556
const TABLE = 57557
const INDEX = 57558
const VIEW = 57559
const TO = 57560
const IGNORE = 57561
const IF = 57562
const PRIMARY = 57563
const COLUMN = 57564
const SPATIAL = 57565
const FULLTEXT = 57566
const KEY_BLOCK_SIZE = 57567
const CHECK = 57568
const INDEXES = 57569
const ACTION = 57570
const CASCADE = 57571
const CONSTRAINT = 57572
const FOREIGN = 57573
const NO = 57574
const REFERENCES = 57575
const RESTRICT = 57576
const SHOW = 57577
const DESCRIBE = 57578
const EXPLAIN = 57579
const DATE = 57580
const ESCAPE = 57581
const REPAIR = 57582
const OPTIMIZE = 57583
const TRUNCATE = 57584
const COALESCE = 57585
const EXCHANGE = 57586
const REBUILD = 57587
const PARTITIONING = 57588
const REMOVE = 57589
const PREPARE = 57590
const EXECUTE = 57591
const MAXVALUE = 57592
const PARTITION = 57593
const REORGANIZE = 57594
const LESS = 57595
const THAN = 57596
const PROCEDURE = 57597
const TRIGGER = 57598
const VINDEX = 57599
const VINDEXES = 57600
const DIRECTORY = 57601
const NAME = 57602
const UPGRADE = 57603
const STATUS = 57604
const VARIABLES = 57605
const WARNINGS = 57606
const CASCADED = 57607
const DEFINER = 57608
const OPTION = 57609
const SQL = 57610
const UNDEFINED = 57611
const SEQUENCE = 57612
const MERGE = 57613
const TEMPORARY = 57614
const TEMPTABLE = 57615
const INVOKER = 57616
const SECURITY = 57617
const FIRST = 57618
const AFTER = 57619
const LAST = 57620
const VITESS_MIGRATION = 57621
const CANCEL = 57622
const RETRY = 57623
const COMPLETE = 57624
const CLEANUP = 57625
const THROTTLE = 57626
const UNTHROTTLE = 57627
const EXPIRE = 57628
const RATIO = 57629
const BEGIN = 57630
const START = 57631
const TRANSACTION = 57632
const COMMIT = 57633
const ROLLBACK = 57634
const SAVEPOINT = 57635
const RELEASE = 57636
const WORK = 57637
const BIT = 57638
const TINYINT = 57639
const SMALLINT = 57640
const MEDIUMINT = 57641
const INT = 57642
const INTEGER = 57643
const BIGINT = 57644
const INTNUM = 57645
const REAL = 57646
const DOUBLE = 57647
const FLOAT_TYPE = 57648
const DECIMAL_TYPE = 57649
const NUMERIC = 57650
const TIME = 57651
const TIMESTAMP = 57652
const DATETIME = 57653
const YEAR = 57654
const CHAR = 57655
const VARCHAR = 57656
const BOOL = 57657
const CHARACTER = 57658
const VARBINARY = 57659
const NCHAR = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const BLOB = 57665
const TINYBLOB = 57666
const MEDIUMBLOB = 57667
const LONGBLOB = 57668
const JSON = 57669
const JSON_SCHEMA_VALID = 57670
const JSON_SCHEMA_VALIDATION_REPORT = 57671
const ENUM = 57672
const GEOMETRY = 57673
const POINT = 57674
const LINESTRING = 57675
const POLYGON = 57676
const GEOMETRYCOLLECTION = 57677
const MULTIPOINT = 57678
const MULTILINESTRING = 57679
const MULTIPOLYGON = 57680
const ASCII = 57681
const UNICODE = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const CODE = 57689
const COLLATION = 57690
const COLUMNS = 57691
const DATABASES = 57692
const ENGINES = 57693
const EVENT = 57694
const EXTENDED = 57695
const FIELDS = 57696
const FULL = 57697
const FUNCTION = 57698
const GTID_EXECUTED = 57699
const KEYSPACES = 57700
const OPEN = 57701
const PLUGINS = 57702
const PRIVILEGES = 57703
const PROCESSLIST = 57704
const SCHEMAS = 57705
const TABLES = 57706
const TRIGGERS = 57707
const USER = 57708
const VGTID_EXECUTED = 57709
const VITESS_KEYSPACES = 57710
const VITESS_METADATA = 57711
const VITESS_MIGRATIONS = 57712
const VITESS_REPLICATION_STATUS = 57713
const VITESS_SHARDS = 57714
const VITESS_TABLETS = 57715
const VITESS_TARGET = 57716
const VSCHEMA = 57717
const VITESS_THROTTLED_APPS = 57718
const NAMES = 57719
const GLOBAL = 57720
const SESSION = 57721
const ISOLATION = 57722
const LEVEL = 57723
const READ = 57724
const WRITE = 57725
const ONLY = 57726
const REPEATABLE = 57727
const COMMITTED = 57728
const UNCOMMITTED = 57729
const SERIALIZABLE = 57730
const CURRENT_TIMESTAMP = 57731
const DATABASE = 57732
const CURRENT_DATE = 57733
const NOW = 57734
const CURRENT_TIME = 57735
const LOCALTIME = 57736
const LOCALTIMESTAMP = 57737
const CURRENT_USER = 57738
const UTC_DATE = 57739
const UTC_TIME = 57740
const UTC_TIMESTAMP = 57741
const DAY = 57742
const DAY_HOUR = 57743
const DAY_MICROSECOND = 57744
const DAY_MINUTE = 57745
const DAY_SECOND = 57746
const HOUR = 57747
const HOUR_MICROSECOND = 57748
const HOUR_MINUTE = 57749
const HOUR_SECOND = 57750
const MICROSECOND = 57751
const MINUTE = 57752
const MINUTE_MICROSECOND = 57753
const MINUTE_SECOND = 57754
const MONTH = 57755
const QUARTER = 57756
const SECOND = 57757
const SECOND_MICROSECOND = 57758
const YEAR_MONTH = 57759
const WEEK = 57760
const REPLACE = 57761
const CONVERT = 57762
const CAST = 57763
const SUBSTR = 57764
const SUBSTRING = 57765
const GROUP_CONCAT = 57766
const SEPARATOR = 57767
const TIMESTAMPADD = 57768
const TIMESTAMPDIFF = 57769
const WEIGHT_STRING = 57770
const LTRIM = 57771
const RTRIM = 57772
const TRIM = 57773
const JSON_ARRAY = 57774
const JSON_OBJECT = 57775
const JSON_QUOTE = 57776
const JSON_DEPTH = 57777
const JSON_TYPE = 57778
const JSON_LENGTH = 57779
const JSON_VALID = 57780
const JSON_ARRAY_APPEND = 57781
const JSON_ARRAY_INSERT = 57782
const JSON_INSERT = 57783
const JSON_MERGE = 57784
const JSON_MERGE_PATCH = 57785
const JSON_MERGE_PRESERVE = 57786
const JSON_REMOVE = 57787
const JSON_REPLACE = 57788
const JSON_SET = 57789
const JSON_UNQUOTE = 57790
const MATCH = 57791
const AGAINST = 57792
const BOOLEAN = 57793
const LANGUAGE = 57794
const WITH = 57795
const QUERY = 57796
const EXPANSION = 57797
const WITHOUT = 57798
const VALIDATION = 57799
const UNUSED = 57800
const ARRAY = 57801
const BYTE = 57802
const CUME_DIST = 57803
const DESCRIPTION = 57804
const DENSE_RANK = 57805
const EMPTY = 57806
const EXCEPT = 57807
const FIRST_VALUE = 57808
const GROUPING = 57809
const GROUPS = 57810
const JSON_TABLE = 57811
const LAG = 57812
const LAST_VALUE = 57813
const LATERAL = 57814
const LEAD = 57815
const NTH_VALUE = 57816
const NTILE = 57817
const OF = 57818
const OVER = 57819
const PERCENT_RANK = 57820
const RANK = 57821
const RECURSIVE = 57822
const ROW_NUMBER = 57823
const SYSTEM = 57824
const WINDOW = 57825
const ACTIVE = 57826
const ADMIN = 57827
const AUTOEXTEND_SIZE = 57828
const BUCKETS = 57829
const CLONE = 57830
const COLUMN_FORMAT = 57831
const COMPONENT = 57832
const DEFINITION = 57833
const ENFORCED = 57834
const ENGINE_ATTRIBUTE = 57835
const EXCLUDE = 57836
const FOLLOWING = 57837
const GEOMCOLLECTION = 57838
const GET_MASTER_PUBLIC_KEY = 57839
const HISTOGRAM = 57840
const HISTORY = 57841
const INACTIVE = 57842
const INVISIBLE = 57843
const LOCKED = 57844
const MASTER_COMPRESSION_ALGORITHMS = 57845
const MASTER_PUBLIC_KEY_PATH = 57846
const MASTER_TLS_CIPHERSUITES = 57847
const MASTER_ZSTD_COMPRESSION_LEVEL = 57848
const NESTED = 57849
const NETWORK_NAMESPACE = 57850
const NOWAIT = 57851
const NULLS = 57852
const OJ = 57853
const OLD = 57854
const OPTIONAL = 57855
const ORDINALITY = 57856
const ORGANIZATION = 57857
const OTHERS = 57858
const PARTIAL = 57859
const PATH = 57860
const PERSIST = 57861
const PERSIST_ONLY = 57862
const PRECEDING = 57863
const PRIVILEGE_CHECKS_USER = 57864
const PROCESS = 57865
const RANDOM = 57866
const REFERENCE = 57867
const REQUIRE_ROW_FORMAT = 57868
const RESOURCE = 57869
const RESPECT = 57870
const RESTART = 57871
const RETAIN = 57872
const REUSE = 57873
const ROLE = 57874
const SECONDARY = 57875
const SECONDARY_ENGINE = 57876
const SECONDARY_ENGINE_ATTRIBUTE = 57877
const SECONDARY_LOAD = 57878
const SECONDARY_UNLOAD = 57879
const SIMPLE = 57880
const SKIP = 57881
const SRID = 57882
const THREAD_PRIORITY = 57883
const TIES = 57884
const UNBOUNDED = 57885
const VCPU = 57886
const VISIBLE = 57887
const RETURNING = 57888
const FORMAT = 57889
const TREE = 57890
const VITESS = 57891
const TRADITIONAL = 57892
const LOCAL = 57893
const LOW_PRIORITY = 57894
const NO_WRITE_TO_BINLOG = 57895
const LOGS = 57896
const ERROR = 57897
const GENERAL = 57898
const HOSTS = 57899
const OPTIMIZER_COSTS = 57900
const USER_RESOURCES = 57901
const SLOW = 57902
const CHANNEL = 57903
const RELAY = 57904
const EXPORT = 57905
const AVG_ROW_LENGTH = 57906
const CONNECTION = 57907
const CHECKSUM = 57908
const DELAY_KEY_WRITE = 57909
const ENCRYPTION = 57910
const ENGINE = 57911
const INSERT_METHOD = 57912
const MAX_ROWS = 57913
const MIN_ROWS = 57914
const PACK_KEYS = 57915
const PASSWORD = 57916
const FIXED = 57917
const DYNAMIC = 57918
const COMPRESSED = 57919
const REDUNDANT = 57920
const COMPACT = 57921
const ROW_FORMAT = 57922
const STATS_AUTO_RECALC = 57923
const STATS_PERSISTENT = 57924
const STATS_SAMPLE_PAGES = 57925
const STORAGE = 57926
const MEMORY = 57927
const DISK = 57928
const PARTITIONS = 57929
const LINEAR = 57930
const RANGE = 57931
const LIST = 57932
const SUBPARTITION = 57933
const SUBPARTITIONS = 57934
const HASH = 57935

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	611, 145,
	-2, 153,
	-1, 48,
	132, 153,
	172, 153,
	333, 153,
	-2, 498,
	-1, 55,
	35, 739,
	233, 739,
	244, 739,
	279, 753,
	280, 753,
	-2, 741,
	-1, 60,
	235, 766,
	-2, 764,
	-1, 114,
	232, 1293,
	-2, 119,
	-1, 116,
	1, 146,
	611, 146,
	-2, 153,
	-1, 127,
	133, 384,
	238, 384,
	-2, 487,
	-1, 146,
	132, 153,
	172, 153,
	333, 153,
	-2, 507,
	-1, 696,
	217, 1314,
	-2, 1310,
	-1, 697,
	217, 1315,
	-2, 1311,
	-1, 772,
	59, 834,
	-2, 849,
	-1, 809,
	148, 1722,
	-2, 112,
	-1, 810,
	148, 1563,
	-2, 113,
	-1, 816,
	148, 1647,
	-2, 1287,
	-1, 963,
	148, 1491,
	-2, 1284,
	-1, 1004,
	243, 41,
	248, 41,
	-2, 395,
	-1, 1088,
	1, 554,
	611, 554,
	-2, 153,
	-1, 1325,
	59, 835,
	-2, 854,
	-1, 1326,
	59, 836,
	-2, 855,
	-1, 1379,
	132, 153,
	172, 153,
	333, 153,
	-2, 434,
	-1, 1458,
	133, 384,
	238, 384,
	-2, 487,
	-1, 1467,
	243, 42,
	248, 42,
	-2, 396,
	-1, 1776,
	217, 1319,
	-2, 1313,
	-1, 1860,
	132, 153,
	172, 153,
	333, 153,
	-2, 435,
	-1, 1867,
	25, 174,
	-2, 176,
	-1, 2116,
	87, 39,
	-2, 891,
	-1, 2173,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2241,
	586, 666,
	-2, 640,
	-1, 2380,
	49, 1255,
	-2, 1249,
	-1, 2603,
	87, 39,
	-2, 892,
	-1, 2641,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 2923,
	586, 666,
	-2, 654,
	-1, 2981,
	22, 1649,
	32, 1649,
	173, 1649,
	255, 1649,
	313, 1649,
	314, 1649,
	315, 1649,
	316, 1649,
	317, 1649,
	318, 1649,
	319, 1649,
	321, 1649,
	322, 1649,
	323, 1649,
	324, 1649,
	325, 1649,
	326, 1649,
	327, 1649,
	328, 1649,
	329, 1649,
	330, 1649,
	331, 1649,
	332, 1649,
	334, 1649,
	336, 1649,
	337, 1649,
	338, 1649,
	339, 1649,
	340, 1649,
	341, 1649,
	342, 1649,
	343, 1649,
	344, 1649,
	347, 1649,
	348, 1649,
	349, 1649,
	350, 1649,
	351, 1649,
	352, 1649,
	353, 1649,
	354, 1649,
	355, 1649,
	468, 1649,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 43313

var yyAct = [...]int{
	696, 705, 2746, 2747, 3043, 2339, 3035, 2745, 2904, 3011,
	698, 3012, 2979, 2718, 1810, 1382, 2529, 1857, 2963, 1790,
	2435, 2442, 2070, 2492, 2857, 1151, 2483, 3, 2705, 2497,
	2494, 2493, 2393, 1792, 96, 2491, 2760, 2496, 2495, 2396,
	2880, 2512, 618, 765, 2104, 1927, 2450, 2511, 1304, 689,
	37, 186, 2397, 1340, 186, 614, 579, 186, 2394, 2612,
	2301, 2765, 594, 2606, 186, 690, 640, 2338, 787, 699,
	2144, 2514, 186, 687, 2337, 1830, 2632, 2167, 2381, 2391,
	688, 2131, 2598, 2550, 1100, 610, 2206, 186, 1814, 1890,
	612, 2534, 2284, 2238, 1915, 1895, 2207, 966, 2208, 155,
	1846, 1436, 1958, 36, 2156, 2137, 38, 814, 788, 594,
	1835, 767, 594, 186, 594, 2123, 606, 2106, 611, 1834,
	1686, 1746, 1634, 1745, 1327, 1483, 1676, 769, 1770, 773,
	141, 1914, 2276, 1129, 811, 1936, 1822, 2200, 1897, 1974,
	999, 994, 1371, 2175, 1837, 1583, 95, 790, 1349, 91,
	1307, 1236, 1773, 1698, 623, 1465, 1653, 1172, 1579, 1472,
	973, 1002, 1012, 1912, 1563, 970, 1005, 974, 1000, 1001,
	1886, 1815, 1370, 779, 1354, 1368, 1742, 1143, 159, 1588,
	119, 117, 118, 774, 1431, 1457, 775, 98, 124, 125,
	801, 1084, 777, 1783, 601, 102, 97, 76, 2913, 2231,
	89, 1243, 85, 3036, 188, 189, 190, 2706, 2480, 2502,
	1929, 1930, 1931, 1929, 2260, 2259, 1972, 1149, 2229, 776,
	77, 1173, 2499, 795, 1239, 800, 120, 550, 2502, 1548,
	90, 8, 7, 2698, 126, 2661, 104, 105, 583, 108,
	781, 6, 114, 2292, 2293, 183, 1041, 583, 545, 2936,
	2937, 87, 967, 1173, 2750, 188, 189, 190, 1787, 1788,
	602, 1641, 1640, 1639, 2750, 1638, 1637, 2500, 761, 762,
	763, 764, 1636, 766, 772, 768, 1619, 604, 992, 605,
	815, 3000, 2989, 2102, 808, 782, 2500, 2377, 580, 2506,
	1015, 1016, 991, 1628, 2586, 120, 2987, 990, 989, 988,
	789, 1962, 803, 804, 3052, 2993, 2994, 3010, 2506, 1042,
	1045, 1046, 3026, 2452, 2453, 3015, 2133, 1051, 1960, 2254,
	2988, 1334, 978, 1646, 583, 983, 2551, 1183, 2853, 2852,
	2711, 1057, 1040, 2712, 2251, 566, 1039, 3051, 2973, 2749,
	2937, 3039, 2932, 3024, 78, 1961, 78, 564, 1906, 2749,
	2719, 2964, 1955, 1205, 2972, 78, 2931, 78, 80, 1183,
	2300, 2984, 2016, 120, 2568, 1818, 1446, 1372, 2147, 1373,
	1087, 2432, 2433, 1900, 2862, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1214, 1213, 1215, 1216, 987, 561, 1093, 1094,
	2268, 1852, 1853, 2148, 2267, 2778, 575, 2184, 2503, 2431,
	2183, 2103, 2291, 2185, 2013, 1851, 1146, 1119, 1107, 759,
	758, 571, 2232, 1108, 1136, 2905, 1138, 2503, 2451, 2196,
	1096, 1106, 87, 1105, 87, 2559, 1179, 2014, 1789, 1171,
	2454, 583, 1107, 87, 2531, 87, 2609, 1108, 1728, 584,
	1870, 1869, 583, 583, 985, 2140, 2141, 2327, 584, 592,
	2557, 1627, 596, 590, 1135, 1137, 982, 2535, 1179, 984,
	2277, 2263, 2239, 1311, 1124, 1125, 1937, 1120, 1113, 1569,
	1564, 1058, 1992, 2524, 1993, 3038, 1994, 3016, 1538, 1975,
	551, 2525, 553, 567, 1818, 586, 1140, 585, 557, 1128,
	555, 559, 568, 560, 2279, 554, 1089, 565, 3017, 2533,
	556, 569, 570, 573, 576, 577, 578, 574, 572, 1083,
	563, 587, 1145, 1899, 1629, 1630, 1631, 1122, 1123, 2532,
	987, 1082, 1539, 1980, 1540, 584, 1720, 1709, 1710, 1711,
	1712, 1722, 1713, 1714, 1715, 1727, 1723, 1716, 1717, 1724,
	1725, 1726, 1718, 1719, 1721, 186, 2700, 186, 1816, 1817,
	186, 1133, 1121, 1114, 987, 1134, 979, 2699, 1995, 1126,
	1064, 1063, 986, 981, 980, 1139, 1979, 3001, 1977, 1127,
	1986, 1983, 1985, 1984, 1987, 1988, 2837, 2696, 1981, 87,
	594, 1153, 594, 594, 1025, 1086, 1940, 1831, 995, 1132,
	1023, 2014, 996, 996, 1314, 1034, 1033, 594, 594, 1032,
	1031, 1030, 2454, 1029, 2328, 1028, 1450, 1027, 1978, 1022,
	1217, 1035, 985, 1217, 3053, 3022, 971, 1007, 1014, 1178,
	1175, 1176, 1177, 1182, 1184, 1181, 1165, 1180, 1471, 971,
	971, 1580, 584, 969, 1174, 1008, 1103, 1117, 1109, 1110,
	1111, 1112, 1913, 584, 584, 802, 2280, 1966, 37, 1576,
	2283, 1178, 1175, 1176, 1177, 1182, 1184, 1181, 1159, 1180,
	1047, 1147, 1148, 2107, 2109, 2473, 1174, 1816, 1817, 2198,
	1014, 2262, 1444, 1570, 2912, 2230, 1443, 1571, 1572, 1442,
	1036, 1085, 2249, 588, 1577, 3047, 2863, 1959, 1440, 2695,
	549, 993, 2233, 544, 2296, 2901, 986, 2028, 2992, 2275,
	2648, 581, 2274, 2628, 1141, 1218, 1219, 2180, 1957, 1044,
	1220, 1221, 1222, 1223, 2265, 1007, 582, 1013, 2143, 1043,
	1228, 2610, 1231, 1007, 1010, 1011, 2094, 971, 1026, 1782,
	986, 1004, 1008, 1470, 1024, 1358, 1283, 1154, 1098, 2138,
	116, 1903, 2991, 1858, 1217, 1216, 2430, 1130, 1297, 784,
	2286, 2930, 1003, 2504, 2505, 2285, 1589, 1302, 111, 186,
	2918, 1144, 1568, 594, 594, 2926, 2508, 1037, 1102, 1013,
	2691, 2622, 2504, 2505, 1976, 1053, 1014, 1573, 1374, 186,
	1224, 1904, 1169, 81, 2320, 2508, 2222, 1699, 2302, 1902,
	1550, 1549, 1551, 1552, 1553, 2748, 2659, 2660, 594, 1155,
	1156, 1188, 186, 767, 1320, 2748, 86, 594, 86, 2286,
	2015, 1303, 1318, 594, 2285, 1014, 1317, 86, 77, 86,
	1321, 2253, 1189, 1905, 1038, 2108, 769, 1699, 112, 2042,
	1168, 1166, 811, 1901, 1315, 1116, 2774, 1054, 1055, 1056,
	1167, 1059, 1060, 1061, 1062, 1245, 1118, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1241, 2252, 1242, 1189, 1092, 1104,
	2304, 1095, 1658, 2666, 1303, 1013, 1954, 1189, 1319, 2665,
	1017, 1007, 95, 1014, 1014, 1019, 1659, 1660, 1657, 1020,
	1018, 1131, 1944, 1289, 1290, 1291, 1292, 1293, 1956, 3045,
	1590, 1480, 3046, 1308, 3044, 1479, 1565, 1469, 1566, 1101,
	1021, 1567, 1187, 1188, 1013, 1952, 1648, 1650, 1651, 1025,
	1007, 1010, 1011, 98, 971, 1088, 1023, 1949, 1004, 1008,
	1211, 1212, 1214, 1213, 1215, 1216, 2314, 2313, 2312, 2306,
	1649, 2310, 3018, 2305, 1949, 2303, 2649, 2942, 2894, 1359,
	2308, 3020, 1305, 2725, 1186, 2726, 1187, 1188, 1189, 2307,
	2873, 1334, 1558, 2322, 1953, 766, 186, 1322, 1336, 1316,
	1432, 1339, 3054, 3049, 768, 2845, 2309, 2311, 815, 2051,
	1441, 1951, 1013, 1013, 1189, 1052, 1369, 1017, 1007, 1189,
	2943, 2895, 1019, 1189, 1364, 1365, 1020, 1018, 2844, 1186,
	2835, 1187, 1188, 594, 87, 1467, 3019, 1823, 1824, 1186,
	2031, 1187, 1188, 1476, 2020, 2021, 2022, 1478, 1656, 2738,
	1481, 1482, 594, 594, 2737, 594, 1557, 594, 594, 2673,
	594, 594, 594, 594, 594, 594, 1209, 1210, 1211, 1212,
	1214, 1213, 1215, 1216, 1513, 1514, 1189, 594, 1205, 2921,
	2295, 186, 1519, 710, 711, 712, 2059, 3055, 1477, 1189,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1191, 186, 2672,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1213, 1215,
	1216, 594, 1205, 186, 2027, 1512, 2662, 1556, 1515, 2481,
	1186, 2469, 1187, 1188, 1578, 806, 2204, 594, 2203, 186,
	1463, 1533, 1189, 1909, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1214, 1213, 1215, 1216, 186, 1186, 1189, 1187, 1188,
	1559, 1186, 186, 1187, 1188, 1186, 1545, 1187, 1188, 1456,
	1334, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	594, 1543, 2563, 1334, 1516, 1189, 1542, 1541, 1485, 1531,
	1486, 1555, 1488, 1490, 594, 594, 1494, 1496, 1498, 1500,
	1502, 1525, 1347, 188, 189, 190, 1522, 2656, 1475, 1439,
	1521, 1474, 186, 1473, 1473, 2033, 1520, 1334, 1186, 1445,
	1187, 1188, 1189, 1453, 1703, 2032, 1454, 1452, 1704, 1466,
	1544, 1186, 2038, 1187, 1188, 188, 189, 190, 1593, 2187,
	2079, 1334, 1492, 2920, 2898, 1597, 1585, 1599, 1600, 1601,
	1602, 188, 189, 190, 1606, 1925, 2528, 2897, 594, 1517,
	1683, 1683, 1343, 2896, 1680, 1684, 1618, 2840, 1346, 1681,
	1681, 1689, 594, 2825, 1186, 2824, 1187, 1188, 2773, 1591,
	1592, 188, 189, 190, 2771, 1923, 2734, 594, 594, 1186,
	2670, 1187, 1188, 1596, 1581, 188, 189, 190, 2655, 1921,
	1603, 1604, 1605, 2536, 1189, 2037, 1654, 120, 2472, 990,
	989, 988, 1344, 188, 189, 190, 2471, 1186, 1652, 1187,
	1188, 1700, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214,
	1213, 1215, 1216, 2213, 1662, 1595, 697, 1207, 1208, 1209,
	1210, 1211, 1212, 1214, 1213, 1215, 1216, 1743, 2201, 1774,
	186, 1299, 1970, 1969, 1186, 594, 1187, 1188, 1617, 1189,
	1813, 1661, 1795, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1620, 2565, 1586, 186,
	1554, 1546, 594, 1536, 1532, 1528, 1527, 187, 2909, 1526,
	187, 1345, 186, 187, 1142, 1655, 594, 1616, 595, 1743,
	187, 186, 92, 186, 1189, 186, 186, 594, 187, 94,
	594, 1624, 1625, 93, 1158, 2129, 3037, 101, 1685, 1189,
	1334, 594, 2870, 187, 1774, 1691, 1692, 1800, 100, 1801,
	99, 1776, 811, 2869, 1205, 811, 1186, 2829, 1187, 1188,
	1867, 92, 2828, 1334, 2717, 595, 3006, 1334, 595, 187,
	595, 95, 93, 1189, 1778, 1779, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1214, 1213, 1215, 1216, 2240, 1334, 1775,
	95, 1189, 2129, 2970, 2129, 2950, 594, 1777, 2129, 2946,
	1780, 1781, 1833, 1916, 1917, 1918, 94, 2071, 1920, 1922,
	1924, 1186, 1806, 1187, 1188, 2938, 1334, 2392, 1334, 1189,
	2129, 2914, 2643, 594, 2709, 2911, 1776, 1334, 2621, 594,
	1476, 2582, 1334, 1476, 2145, 1476, 1189, 1805, 1862, 1861,
	2425, 1948, 1876, 1877, 1878, 1879, 781, 1794, 1844, 1871,
	2014, 1872, 1873, 1874, 1875, 2218, 1186, 1334, 1187, 1188,
	2848, 1334, 2129, 2836, 1828, 1334, 1938, 1882, 1883, 1884,
	1885, 1186, 1808, 1187, 1188, 2833, 594, 1950, 594, 1866,
	1892, 1865, 2709, 1334, 594, 594, 2129, 2707, 2621, 1898,
	1826, 1949, 1334, 2626, 1334, 2145, 1189, 2623, 815, 1185,
	1849, 815, 1848, 2692, 2925, 1186, 2153, 1187, 1188, 1864,
	1863, 1185, 1334, 1189, 2064, 1334, 2129, 1189, 2153, 2584,
	1935, 101, 186, 1186, 1189, 1187, 1188, 2462, 2461, 186,
	1189, 2582, 100, 1908, 99, 1949, 186, 186, 2458, 2459,
	186, 2460, 186, 94, 2458, 2457, 1189, 2153, 1334, 186,
	2365, 1186, 1189, 1187, 1188, 1850, 186, 1893, 1888, 1889,
	1189, 2029, 1334, 1907, 1911, 2014, 2261, 2621, 1186, 1919,
	1187, 1188, 2029, 1963, 1189, 1435, 2243, 2236, 2237, 2580,
	1189, 2064, 186, 1015, 1016, 1943, 1189, 594, 1946, 1942,
	1947, 1945, 1893, 1941, 1473, 1205, 2571, 2048, 1201, 1189,
	1202, 2205, 1334, 2176, 1965, 100, 1189, 2570, 2129, 2128,
	1967, 1968, 1964, 2088, 1203, 1204, 1200, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1214, 1213, 1215, 1216, 1186, 2087,
	1187, 1188, 1447, 1448, 1449, 2086, 2005, 2006, 2176, 2047,
	2125, 2008, 2152, 2085, 1973, 1186, 1189, 1187, 1188, 1186,
	2009, 1187, 1188, 1435, 1434, 94, 1186, 2084, 1187, 1188,
	1189, 1949, 1186, 2083, 1187, 1188, 2177, 1380, 1379, 2082,
	1932, 2674, 1821, 1338, 2029, 1785, 2179, 1632, 1186, 1575,
	1187, 1188, 2081, 1654, 1186, 1366, 1187, 1188, 1189, 2080,
	998, 771, 1186, 997, 1187, 1188, 1998, 2153, 1523, 1524,
	1189, 2177, 2997, 2953, 1529, 1530, 1186, 87, 1187, 1188,
	2025, 2014, 1186, 2029, 1187, 1188, 2859, 1341, 1186, 2826,
	1187, 1188, 2675, 2676, 2677, 1189, 2484, 2785, 2210, 2074,
	2690, 1186, 2687, 1187, 1188, 2668, 2574, 2024, 1186, 2026,
	1187, 1188, 2678, 2073, 1189, 1508, 186, 2573, 1437, 1891,
	2012, 2526, 2486, 2482, 186, 2244, 1887, 1881, 1683, 594,
	1880, 1561, 2113, 680, 1468, 594, 1464, 1681, 2100, 87,
	2530, 2072, 1655, 2117, 2023, 1433, 594, 113, 1186, 1087,
	1187, 1188, 1189, 2069, 2860, 2209, 1906, 2111, 3032, 2679,
	2680, 2681, 1186, 1798, 1187, 1188, 1509, 1510, 1511, 1189,
	186, 187, 1622, 187, 186, 3030, 187, 2039, 2068, 2633,
	2634, 2041, 1189, 3013, 2935, 2878, 1804, 2636, 2149, 2186,
	1186, 1504, 1187, 1188, 2478, 593, 2477, 2067, 2639, 2476,
	2392, 2223, 1186, 2210, 1187, 1188, 595, 1999, 595, 595,
	37, 2414, 2416, 2412, 2162, 2163, 2415, 2057, 2413, 2169,
	1776, 2638, 2411, 595, 595, 2410, 3003, 1186, 2971, 1187,
	1188, 2755, 2130, 2754, 1623, 2065, 1812, 594, 1505, 1506,
	1507, 1342, 813, 186, 2627, 968, 1186, 975, 1187, 1188,
	186, 2370, 2061, 2139, 2091, 2092, 2369, 2893, 1775, 2614,
	1308, 2126, 2764, 2766, 594, 2060, 2101, 2613, 2382, 2384,
	2379, 594, 2617, 2168, 785, 1476, 1476, 2385, 2235, 1574,
	594, 2753, 786, 757, 1186, 2122, 1187, 1188, 2456, 2194,
	2190, 2197, 2199, 2214, 2127, 1049, 2174, 2258, 1048, 2544,
	2142, 1186, 2209, 1187, 1188, 2289, 1695, 92, 186, 186,
	186, 186, 186, 2257, 1186, 1157, 1187, 1188, 93, 2178,
	1696, 1898, 2250, 2181, 121, 2619, 1332, 1328, 94, 186,
	186, 2188, 3041, 2191, 1823, 1824, 2158, 2161, 2162, 2163,
	2159, 1329, 2160, 2164, 2474, 186, 2633, 2634, 2002, 2202,
	2158, 2161, 2162, 2163, 2159, 2910, 2160, 2164, 1332, 1328,
	99, 101, 2855, 2455, 594, 2211, 1802, 1803, 1331, 2166,
	1330, 1809, 100, 1329, 99, 92, 2368, 2219, 2224, 2225,
	2226, 2220, 94, 94, 2367, 187, 93, 1991, 2256, 595,
	595, 793, 794, 1456, 1990, 1989, 2599, 2018, 1325, 1326,
	1331, 1683, 1330, 1683, 767, 187, 1683, 2885, 101, 2884,
	1681, 1683, 1681, 2319, 2772, 1681, 2770, 2769, 2762, 100,
	1681, 99, 2688, 2315, 595, 594, 2618, 2616, 187, 2255,
	2245, 2246, 2487, 595, 1933, 1451, 792, 101, 100, 595,
	2761, 594, 2340, 2297, 2340, 2607, 2145, 2340, 100, 2298,
	2359, 2281, 2340, 2278, 3034, 3033, 186, 2125, 2329, 2049,
	594, 1796, 1360, 1351, 2352, 2353, 2354, 2355, 2287, 106,
	107, 2288, 2345, 3033, 594, 3034, 2342, 2346, 2899, 2654,
	2299, 594, 594, 783, 186, 186, 186, 186, 186, 103,
	2316, 88, 1, 2658, 2986, 562, 186, 1786, 1306, 2359,
	3014, 186, 2982, 2983, 186, 1547, 186, 1537, 2720, 186,
	186, 186, 1744, 2856, 2490, 2404, 2333, 1939, 2686, 1896,
	2395, 1006, 146, 2424, 2372, 2395, 1859, 1860, 2966, 110,
	773, 964, 109, 2373, 2347, 2348, 2349, 2350, 2351, 1009,
	1115, 1934, 2710, 2389, 2398, 2470, 2195, 1868, 1386, 1384,
	1321, 2169, 2358, 2360, 186, 1385, 1383, 1388, 1387, 2050,
	2585, 1626, 591, 2165, 184, 1375, 2364, 594, 2371, 1352,
	2386, 2387, 1050, 552, 2463, 594, 1971, 558, 1229, 1621,
	186, 2374, 2366, 2426, 774, 2182, 2427, 775, 812, 2510,
	805, 1797, 187, 186, 2115, 2406, 2407, 2400, 2409, 2417,
	2361, 2362, 2363, 2405, 2421, 2422, 2408, 2403, 95, 2611,
	2428, 186, 2489, 2378, 186, 2380, 2132, 2383, 1585, 2434,
	2376, 2892, 2763, 2951, 2545, 2192, 1348, 2040, 1697, 595,
	1838, 1647, 616, 615, 613, 2466, 2465, 2118, 2464, 2146,
	1192, 700, 2105, 1361, 2157, 2155, 2154, 2000, 595, 595,
	1845, 595, 2635, 595, 595, 2518, 595, 595, 595, 595,
	595, 595, 2517, 2631, 2488, 2978, 1840, 1836, 1898, 2509,
	2124, 624, 617, 595, 609, 2651, 2516, 187, 2264, 2521,
	2527, 2266, 2193, 2523, 1170, 1324, 603, 977, 2579, 1694,
	2861, 2916, 2017, 2567, 187, 1323, 594, 186, 1707, 2540,
	2537, 1708, 2542, 2543, 2539, 2923, 2498, 595, 2704, 187,
	2479, 2547, 2241, 813, 1926, 813, 813, 2548, 63, 41,
	1735, 598, 2999, 595, 1161, 187, 2555, 799, 32, 2561,
	1160, 1162, 31, 30, 2552, 2553, 29, 2554, 28, 23,
	2556, 187, 2558, 22, 2560, 1333, 21, 20, 187, 19,
	25, 18, 17, 16, 2501, 3009, 186, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 595, 3040, 115, 50,
	47, 45, 2605, 123, 2657, 2600, 2601, 122, 48, 44,
	595, 595, 1090, 42, 27, 186, 26, 15, 2608, 2615,
	14, 13, 12, 11, 10, 9, 5, 4, 187, 35,
	34, 33, 2640, 2620, 186, 2630, 1164, 186, 186, 186,
	24, 2, 2228, 1928, 0, 2637, 0, 594, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 2646, 2647, 0,
	2644, 2693, 2694, 2645, 0, 2652, 0, 0, 0, 1300,
	2653, 0, 2518, 0, 595, 0, 0, 0, 0, 2517,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 0,
	0, 594, 594, 594, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 595, 0, 2669, 0, 2671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 2716, 0, 0, 0,
	2212, 0, 1683, 0, 1683, 2215, 2216, 0, 0, 2714,
	2715, 1681, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 186, 0, 0, 187, 0, 0, 0,
	813, 595, 0, 0, 0, 0, 1376, 0, 0, 0,
	0, 0, 2758, 2340, 0, 2340, 0, 594, 0, 594,
	0, 0, 0, 0, 0, 187, 2733, 0, 595, 0,
	0, 0, 2729, 0, 0, 1683, 0, 2751, 187, 2787,
	2742, 0, 595, 2779, 1681, 2741, 0, 187, 0, 187,
	0, 187, 187, 595, 2395, 767, 595, 2781, 2727, 2759,
	0, 2768, 2767, 0, 2783, 37, 2777, 595, 0, 0,
	2775, 0, 0, 0, 0, 0, 0, 0, 0, 2398,
	0, 594, 0, 2398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 2834, 0, 594, 0, 1309,
	2791, 0, 0, 0, 0, 2788, 2789, 0, 0, 0,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 0, 2832, 2831, 2830, 2846, 0, 0,
	0, 0, 0, 0, 0, 2858, 0, 0, 2875, 2876,
	0, 2851, 1683, 594, 2850, 0, 2879, 594, 594, 595,
	0, 1681, 2838, 547, 0, 595, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2889, 2886, 2887, 0,
	2903, 0, 0, 2888, 0, 0, 968, 0, 0, 0,
	0, 2891, 595, 0, 595, 0, 0, 0, 2900, 1300,
	595, 595, 972, 767, 0, 1484, 1484, 594, 1484, 0,
	1484, 1484, 2906, 1493, 1484, 1484, 1484, 1484, 1484, 0,
	0, 2908, 186, 0, 2398, 0, 1300, 0, 0, 1300,
	968, 0, 2902, 0, 0, 0, 0, 0, 187, 0,
	594, 186, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 187, 187, 2927, 2919, 187, 2922, 187, 0,
	0, 0, 0, 2924, 1560, 187, 0, 0, 0, 0,
	2467, 2468, 187, 0, 0, 0, 0, 0, 0, 0,
	1582, 0, 594, 2915, 0, 37, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 595, 0, 0, 594, 594, 0, 0,
	0, 0, 2944, 0, 0, 0, 0, 0, 2952, 594,
	2954, 0, 2395, 813, 0, 0, 0, 2957, 186, 594,
	2965, 2858, 2967, 2962, 2959, 2958, 2974, 813, 813, 2956,
	37, 2961, 2960, 0, 0, 0, 0, 2977, 0, 0,
	0, 2995, 2985, 2990, 0, 2949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3002, 0, 0,
	0, 0, 0, 0, 0, 0, 3008, 0, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 594, 2438, 0,
	0, 1683, 3021, 0, 0, 3028, 3023, 0, 0, 3025,
	1681, 1677, 3031, 3029, 0, 0, 3027, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 3042, 0, 3048,
	0, 0, 1300, 0, 3050, 0, 0, 182, 0, 0,
	1705, 1706, 0, 2439, 1683, 0, 0, 0, 3056, 3058,
	3059, 2876, 0, 1681, 3057, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 0, 2441,
	0, 0, 187, 0, 164, 0, 0, 813, 0, 0,
	187, 0, 0, 2436, 0, 595, 0, 0, 0, 0,
	0, 595, 0, 0, 0, 0, 0, 0, 0, 0,
	2452, 2453, 595, 0, 0, 0, 0, 2437, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 2189, 0, 2663,
	2664, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	187, 0, 161, 0, 162, 1811, 0, 0, 0, 2443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 813, 0, 181, 0, 0, 0, 0, 0,
	813, 0, 0, 813, 0, 0, 0, 0, 0, 0,
	0, 2697, 0, 0, 968, 2701, 2702, 2703, 0, 0,
	1335, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 2451, 187, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 2454, 0, 0,
	595, 0, 0, 0, 0, 0, 0, 595, 0, 975,
	0, 0, 0, 0, 121, 0, 595, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 1097, 164, 0, 1099,
	0, 0, 0, 0, 0, 0, 968, 0, 0, 0,
	0, 0, 975, 165, 187, 187, 187, 187, 187, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 161, 0, 162, 0, 968,
	0, 1677, 0, 0, 0, 0, 0, 1677, 1677, 0,
	595, 0, 0, 0, 0, 0, 2440, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2841,
	2842, 2843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 595, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 0, 0, 0, 0, 0, 165, 595, 595, 0,
	187, 187, 187, 187, 187, 171, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 187, 0, 0,
	187, 0, 187, 0, 0, 187, 187, 187, 0, 0,
	0, 0, 0, 2444, 0, 0, 0, 2448, 0, 0,
	0, 0, 0, 0, 0, 2447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1363, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 2449,
	0, 0, 0, 595, 2445, 0, 0, 0, 0, 2446,
	0, 595, 0, 157, 0, 0, 187, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 187, 0, 0,
	187, 0, 0, 0, 0, 0, 813, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2134,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 0, 176, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	1702, 0, 595, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 1381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 164, 0, 0, 0, 0, 157, 0, 0, 1335,
	1784, 0, 187, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 153, 0, 2242, 0, 0, 0, 142, 0,
	0, 187, 1807, 2247, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 177, 0, 0, 0, 161,
	187, 162, 0, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 595, 595, 0, 0, 1459, 1460, 152,
	151, 181, 1562, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 0, 0, 0,
	176, 178, 179, 180, 0, 681, 0, 0, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 595, 595, 595,
	595, 1598, 0, 0, 0, 0, 0, 1677, 0, 0,
	0, 0, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 0,
	0, 0, 0, 0, 1910, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 548,
	0, 0, 589, 1300, 0, 1300, 0, 0, 1300, 548,
	0, 1635, 0, 1300, 0, 0, 0, 548, 147, 1461,
	154, 0, 1458, 0, 148, 149, 0, 0, 813, 187,
	165, 0, 780, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 1484, 0, 0, 0, 798, 0,
	798, 0, 0, 595, 0, 595, 0, 0, 548, 0,
	0, 0, 0, 2375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 813, 0, 0,
	0, 1300, 0, 0, 2402, 1484, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 1300, 0, 0, 0, 0, 1811, 595,
	0, 0, 0, 595, 595, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 1832, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 150, 2034, 0, 2035, 2036, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 2045,
	2046, 0, 0, 595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 187, 0,
	145, 0, 0, 0, 0, 0, 2052, 2053, 2054, 2055,
	2056, 0, 2058, 0, 0, 0, 595, 187, 2062, 0,
	2063, 0, 0, 0, 2066, 0, 0, 0, 0, 2375,
	157, 0, 2075, 2076, 2077, 2078, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 2089, 2090, 0, 0, 0,
	0, 0, 0, 2095, 2096, 2097, 2098, 2099, 595, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2112, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 595, 595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 595, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 1996, 1997, 0, 0, 2001,
	1811, 1811, 0, 0, 595, 0, 0, 0, 2004, 0,
	0, 0, 0, 595, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 0, 0, 2721, 2722, 2723, 2724, 0, 0,
	3007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 0, 548, 0, 0, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 0, 0, 0, 0,
	2780, 0, 2782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2341, 0, 0, 0,
	0, 1391, 0, 0, 1811, 0, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2356, 2357, 0,
	2849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 0, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2173, 0, 0, 2882, 0, 0, 0,
	2882, 2882, 0, 0, 607, 0, 2401, 0, 0, 0,
	0, 0, 0, 1404, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 2419, 2420, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 780, 0, 791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 2221, 0, 0, 0, 0, 0, 0, 0,
	1811, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 0, 1426,
	1427, 1428, 1429, 1430, 1405, 1406, 1407, 1408, 1389, 1390,
	1418, 0, 1392, 0, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1811, 0, 1402, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2269, 2270, 2271,
	2272, 2273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 0, 2945, 0, 0, 1635, 2282,
	2546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2290, 0, 0, 0, 0, 813,
	813, 0, 2562, 2564, 2566, 0, 0, 0, 0, 0,
	0, 2572, 2975, 0, 0, 0, 2576, 2577, 2578, 0,
	0, 0, 2980, 2581, 0, 0, 0, 0, 0, 2583,
	0, 0, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594,
	2595, 2596, 0, 0, 2597, 0, 0, 0, 0, 0,
	2602, 548, 0, 0, 0, 0, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	2980, 0, 0, 0, 0, 2624, 2625, 0, 0, 2629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 0, 0, 0, 0, 0, 2641, 2642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 1455,
	0, 1301, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 0, 121, 0, 143, 0, 0, 0, 0, 0,
	707, 79, 0, 1534, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 0, 153, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 2708, 0, 0,
	548, 0, 1403, 2475, 0, 0, 0, 548, 0, 0,
	0, 0, 0, 161, 0, 162, 1607, 1608, 548, 548,
	548, 548, 548, 548, 548, 0, 0, 0, 770, 2513,
	79, 1459, 1460, 152, 151, 181, 2728, 0, 0, 0,
	0, 0, 2522, 0, 0, 0, 0, 2730, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 0, 0,
	2538, 2739, 0, 2541, 976, 2740, 0, 0, 0, 0,
	0, 2744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 798, 0, 0, 0, 0, 0, 0, 798, 798,
	0, 0, 0, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 147, 1461, 154, 0, 1458, 0, 148, 149,
	0, 0, 0, 1391, 165, 0, 2604, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 798, 1584,
	798, 798, 798, 798, 798, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2847, 0, 0, 0, 0, 1534, 0, 0, 0, 2854,
	0, 0, 0, 1237, 0, 0, 0, 0, 0, 0,
	798, 0, 0, 0, 0, 0, 0, 2864, 2865, 2866,
	0, 2867, 2868, 0, 780, 1404, 0, 2871, 0, 2872,
	0, 2874, 2877, 0, 2667, 0, 0, 548, 2881, 0,
	0, 0, 0, 0, 1584, 0, 548, 0, 548, 0,
	548, 1847, 0, 2682, 0, 0, 2683, 2684, 2685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 607, 0, 2907, 0, 0, 0,
	0, 0, 0, 1417, 1420, 1421, 1422, 1423, 1424, 1425,
	0, 1426, 1427, 1428, 1429, 1430, 1405, 1406, 1407, 1408,
	1389, 1390, 1418, 0, 1392, 0, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 0, 0, 1402, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2929, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 2934, 0, 0, 0, 0, 2939, 0, 0, 0,
	0, 0, 2940, 2941, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 145, 0, 0, 0, 0, 0,
	2947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1419, 0,
	0, 2998, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 0,
	3004, 548, 548, 177, 3005, 548, 0, 2003, 0, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 548, 176, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1150, 0, 1150, 1150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1438, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 770, 1225, 1226, 1227,
	798, 1230, 0, 1232, 1233, 1234, 1235, 0, 1238, 1240,
	1240, 0, 1240, 1244, 1244, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 0, 1284, 1285, 1286, 1287, 1288, 0, 0,
	2928, 0, 1244, 1244, 1244, 1244, 1244, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 798, 798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 1587,
	0, 548, 0, 0, 0, 0, 0, 0, 121, 1534,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 770, 153, 0, 0, 548, 0, 770, 142, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 162, 1642, 1643, 1644, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 131, 152,
	151, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1687, 1688, 0, 0, 0, 548, 0,
	0, 1693, 0, 0, 0, 2227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 1730, 1731, 1732,
	1733, 1734, 1736, 1740, 1741, 607, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 548, 548, 548, 548, 548, 147, 128,
	154, 135, 127, 0, 148, 149, 0, 607, 0, 0,
	165, 0, 0, 0, 548, 548, 0, 0, 0, 171,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 139, 137, 132, 133, 134, 138,
	0, 0, 0, 1819, 1820, 798, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1301, 0, 1301, 0, 0,
	1301, 0, 0, 0, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1894, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1301, 0, 0, 0, 0, 1301, 548,
	548, 548, 548, 548, 0, 0, 0, 0, 0, 0,
	0, 2418, 0, 0, 0, 0, 548, 0, 0, 1534,
	0, 548, 0, 0, 548, 2429, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	1150, 2793, 2795, 2794, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 646, 0, 0, 1150, 1150, 0, 0, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	145, 0, 0, 0, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	157, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 0, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 1237, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 0, 0, 0, 0,
	0, 2799, 2800, 0, 0, 0, 0, 87, 0, 0,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	0, 0, 548, 548, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 1350, 0,
	0, 0, 691, 0, 641, 695, 643, 692, 693, 0,
	639, 642, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 644,
	645, 2792, 2796, 2797, 2798, 2801, 2802, 2803, 2811, 2813,
	669, 2812, 2814, 2815, 2816, 2819, 2820, 2821, 2822, 2817,
	2818, 2823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1301, 0, 1301, 0,
	0, 46, 49, 52, 51, 54, 0, 66, 0, 0,
	75, 72, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 83, 82, 0, 1301, 64, 65,
	53, 0, 0, 0, 0, 0, 73, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 59,
	60, 61, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2294, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 2019, 0, 0,
	0, 0, 0, 0, 2317, 2318, 0, 0, 0, 2321,
	0, 0, 0, 0, 2323, 2324, 2325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2330, 2331, 2332, 0,
	0, 1747, 2334, 0, 2335, 2336, 0, 0, 0, 2343,
	2344, 0, 0, 0, 0, 0, 0, 1747, 1747, 1747,
	1747, 1747, 607, 607, 607, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2390, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 2093, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2423,
	0, 0, 2110, 0, 0, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2150, 2151, 0, 0, 1301, 0, 0, 0, 0,
	2170, 0, 2171, 2172, 0, 0, 0, 0, 0, 2485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 1534, 0, 701, 708, 709, 710, 711,
	712, 702, 704, 0, 0, 0, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2114, 0, 0, 708, 709, 0, 2569,
	0, 0, 1682, 0, 0, 0, 2575, 0, 0, 0,
	0, 2248, 0, 0, 0, 2519, 2520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 0,
	0, 0, 0, 0, 0, 0, 607, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2689,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 2713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2399,
	0, 79, 0, 0, 1839, 1839, 1839, 1839, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2170, 770, 0, 0, 0, 1839, 0, 0, 1839,
	2731, 0, 2732, 0, 0, 0, 0, 2735, 2736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 691,
	0, 2743, 695, 0, 692, 693, 0, 0, 0, 694,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	701, 708, 709, 710, 711, 712, 702, 704, 0, 0,
	0, 703, 0, 0, 0, 0, 0, 0, 0, 2776,
	0, 0, 2507, 0, 706, 713, 714, 0, 0, 0,
	2784, 0, 2515, 2786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2827, 0, 0, 0, 0,
	2519, 2520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2549, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2890, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	708, 709, 0, 0, 0, 0, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2933, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 0, 607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2752,
	0, 2756, 2757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2399, 0, 79, 0, 2399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 946, 931, 465, 79, 877, 949, 846,
	865, 959, 868, 871, 913, 825, 891, 381, 862, 818,
	850, 820, 857, 821, 848, 879, 252, 845, 933, 895,
	948, 336, 249, 827, 851, 395, 867, 197, 915, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 955, 340, 901, 2948, 449, 366, 0,
	0, 79, 881, 937, 889, 927, 876, 914, 835, 900,
	950, 863, 910, 951, 297, 234, 299, 196, 378, 450,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 2968,
	0, 2969, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 859, 907, 945, 860, 909, 247, 295, 254, 246,
	469, 956, 936, 824, 888, 944, 0, 0, 216, 947,
	883, 0, 912, 0, 962, 819, 903, 0, 822, 826,
	958, 940, 854, 257, 0, 0, 0, 0, 0, 0,
	0, 880, 890, 924, 874, 0, 0, 0, 0, 0,
	0, 0, 852, 0, 899, 0, 0, 0, 831, 823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 834, 0, 853, 925,
	0, 817, 278, 828, 367, 239, 0, 929, 939, 875,
	505, 943, 873, 872, 919, 832, 935, 866, 335, 830,
	304, 192, 212, 0, 864, 377, 420, 426, 934, 849,
	858, 237, 856, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 898, 917, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 1152,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 844, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 930, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 922, 961, 390, 425, 227,
	490, 448, 839, 843, 837, 904, 838, 893, 894, 840,
	952, 953, 954, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 926, 833, 0, 841, 842, 0, 932, 941,
	942, 543, 352, 438, 487, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 897, 191, 208, 338, 957, 413, 270, 521,
	499, 495, 198, 210, 836, 244, 847, 855, 0, 861,
	869, 870, 882, 884, 885, 886, 887, 905, 906, 908,
	916, 918, 921, 923, 928, 938, 960, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 896, 902, 349, 263, 283,
	294, 911, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 892, 920, 345, 466, 467, 290, 363, 0, 0,
	946, 931, 465, 0, 877, 949, 846, 865, 959, 868,
	871, 913, 825, 891, 381, 862, 818, 850, 820, 857,
	821, 848, 879, 252, 845, 933, 895, 948, 336, 249,
	827, 851, 395, 867, 197, 915, 439, 236, 346, 343,
	472, 264, 255, 251, 235, 291, 353, 393, 459, 387,
	955, 340, 901, 0, 449, 366, 0, 0, 0, 881,
	937, 889, 927, 876, 914, 835, 900, 950, 863, 910,
	951, 297, 234, 299, 196, 378, 450, 268, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 321, 330,
	329, 310, 311, 313, 315, 320, 327, 333, 859, 907,
	945, 860, 909, 247, 295, 254, 246, 469, 956, 936,
	824, 888, 944, 0, 0, 216, 947, 883, 0, 912,
	0, 962, 819, 903, 0, 822, 826, 958, 940, 854,
	257, 0, 0, 0, 0, 0, 0, 0, 880, 890,
	924, 874, 0, 0, 0, 0, 0, 2430, 0, 852,
	0, 899, 0, 0, 0, 831, 823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 878,
	0, 0, 0, 834, 0, 853, 925, 0, 817, 278,
	828, 367, 239, 0, 929, 939, 875, 505, 943, 873,
	872, 919, 832, 935, 866, 335, 830, 304, 192, 212,
	0, 864, 377, 420, 426, 934, 849, 858, 237, 856,
	424, 391, 488, 220, 266, 417, 397, 422, 404, 269,
	898, 917, 423, 341, 474, 411, 485, 506, 507, 245,
	371, 496, 463, 502, 520, 213, 242, 385, 456, 491,
	446, 364, 470, 471, 303, 445, 276, 195, 339, 512,
	211, 432, 229, 218, 476, 494, 271, 415, 203, 458,
	483, 226, 436, 0, 0, 522, 205, 481, 455, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 478,
	479, 238, 523, 215, 501, 207, 1152, 500, 373, 473,
	482, 361, 351, 206, 480, 359, 350, 306, 325, 326,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	492, 0, 200, 0, 451, 493, 524, 221, 222, 224,
	844, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 930, 468, 486, 497, 504, 510, 511,
	513, 514, 515, 516, 517, 519, 518, 372, 288, 447,
	305, 342, 922, 961, 390, 425, 227, 490, 448, 839,
	843, 837, 904, 838, 893, 894, 840, 952, 953, 954,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 0, 926,
	833, 0, 841, 842, 0, 932, 941, 942, 543, 352,
	438, 487, 307, 319, 322, 312, 331, 0, 332, 308,
	309, 314, 316, 317, 318, 323, 324, 328, 334, 897,
	191, 208, 338, 957, 413, 270, 521, 499, 495, 198,
	210, 836, 244, 847, 855, 0, 861, 869, 870, 882,
	884, 885, 886, 887, 905, 906, 908, 916, 918, 921,
	923, 928, 938, 960, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 427, 428, 429, 430,
	431, 434, 435, 440, 441, 442, 443, 444, 452, 453,
	457, 475, 477, 489, 503, 508, 433, 280, 484, 509,
	0, 347, 896, 902, 349, 263, 283, 294, 911, 498,
	454, 214, 421, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	437, 460, 461, 462, 464, 362, 248, 398, 892, 920,
	345, 466, 467, 290, 363, 0, 0, 946, 931, 465,
	0, 877, 949, 846, 865, 959, 868, 871, 913, 825,
	891, 381, 862, 818, 850, 820, 857, 821, 848, 879,
	252, 845, 933, 895, 948, 336, 249, 827, 851, 395,
	867, 197, 915, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 955, 340, 901,
	0, 449, 366, 0, 0, 0, 881, 937, 889, 927,
	876, 914, 835, 900, 950, 863, 910, 951, 297, 234,
	299, 196, 378, 450, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 859, 907, 945, 860, 909,
	247, 295, 254, 246, 469, 956, 936, 824, 888, 944,
	0, 0, 216, 947, 883, 0, 912, 0, 962, 819,
	903, 0, 822, 826, 958, 940, 854, 257, 0, 0,
	0, 0, 0, 0, 0, 880, 890, 924, 874, 0,
	0, 0, 0, 0, 2388, 0, 852, 0, 899, 0,
	0, 0, 831, 823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	834, 0, 853, 925, 0, 817, 278, 828, 367, 239,
	0, 929, 939, 875, 505, 943, 873, 872, 919, 832,
	935, 866, 335, 830, 304, 192, 212, 0, 864, 377,
	420, 426, 934, 849, 858, 237, 856, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 898, 917, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 1152, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 844, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	930, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 922,
	961, 390, 425, 227, 490, 448, 839, 843, 837, 904,
	838, 893, 894, 840, 952, 953, 954, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 926, 833, 0, 841,
	842, 0, 932, 941, 942, 543, 352, 438, 487, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 897, 191, 208, 338,
	957, 413, 270, 521, 499, 495, 198, 210, 836, 244,
	847, 855, 0, 861, 869, 870, 882, 884, 885, 886,
	887, 905, 906, 908, 916, 918, 921, 923, 928, 938,
	960, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 896,
	902, 349, 263, 283, 294, 911, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 892, 920, 345, 466, 467,
	290, 363, 0, 0, 946, 931, 465, 0, 877, 949,
	846, 865, 959, 868, 871, 913, 825, 891, 381, 862,
	818, 850, 820, 857, 821, 848, 879, 252, 845, 933,
	895, 948, 336, 249, 827, 851, 395, 867, 197, 915,
	439, 236, 346, 343, 472, 264, 255, 251, 235, 291,
	353, 393, 459, 387, 955, 340, 901, 0, 449, 366,
	0, 0, 0, 881, 937, 889, 927, 876, 914, 835,
	900, 950, 863, 910, 951, 297, 234, 299, 196, 378,
	450, 268, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 321, 330, 329, 310, 311, 313, 315, 320,
	327, 333, 859, 907, 945, 860, 909, 247, 295, 254,
	246, 469, 956, 936, 824, 888, 944, 0, 0, 216,
	947, 883, 0, 912, 0, 962, 819, 903, 0, 822,
	826, 958, 940, 854, 257, 0, 0, 0, 0, 0,
	0, 0, 880, 890, 924, 874, 0, 0, 0, 0,
	0, 1827, 0, 852, 0, 899, 0, 0, 0, 831,
	823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 878, 0, 0, 0, 834, 0, 853,
	925, 0, 817, 278, 828, 367, 239, 0, 929, 939,
	875, 505, 943, 873, 872, 919, 832, 935, 866, 335,
	830, 304, 192, 212, 0, 864, 377, 420, 426, 934,
	849, 858, 237, 856, 424, 391, 488, 220, 266, 417,
	397, 422, 404, 269, 898, 917, 423, 341, 474, 411,
	485, 506, 507, 245, 371, 496, 463, 502, 520, 213,
	242, 385, 456, 491, 446, 364, 470, 471, 303, 445,
	276, 195, 339, 512, 211, 432, 229, 218, 476, 494,
	271, 415, 203, 458, 483, 226, 436, 0, 0, 522,
	205, 481, 455, 360, 300, 301, 204, 0, 416, 250,
	274, 240, 380, 478, 479, 238, 523, 215, 501, 207,
	1152, 500, 373, 473, 482, 361, 351, 206, 480, 359,
	350, 306, 325, 326, 262, 285, 409, 344, 410, 286,
	369, 368, 370, 199, 492, 0, 200, 0, 451, 493,
	524, 221, 222, 224, 844, 261, 265, 273, 275, 281,
	282, 289, 337, 384, 408, 406, 412, 930, 468, 486,
	497, 504, 510, 511, 513, 514, 515, 516, 517, 519,
	518, 372, 288, 447, 305, 342, 922, 961, 390, 425,
	227, 490, 448, 839, 843, 837, 904, 838, 893, 894,
	840, 952, 953, 954, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 0, 926, 833, 0, 841, 842, 0, 932,
	941, 942, 543, 352, 438, 487, 307, 319, 322, 312,
	331, 0, 332, 308, 309, 314, 316, 317, 318, 323,
	324, 328, 334, 897, 191, 208, 338, 957, 413, 270,
	521, 499, 495, 198, 210, 836, 244, 847, 855, 0,
	861, 869, 870, 882, 884, 885, 886, 887, 905, 906,
	908, 916, 918, 921, 923, 928, 938, 960, 193, 194,
	201, 209, 219, 223, 230, 243, 258, 260, 267, 279,
	284, 287, 292, 293, 296, 302, 348, 354, 355, 356,
	357, 374, 375, 376, 379, 382, 383, 386, 388, 389,
	392, 396, 400, 401, 402, 403, 405, 407, 414, 419,
	427, 428, 429, 430, 431, 434, 435, 440, 441, 442,
	443, 444, 452, 453, 457, 475, 477, 489, 503, 508,
	433, 280, 484, 509, 0, 347, 896, 902, 349, 263,
	283, 294, 911, 498, 454, 214, 421, 272, 202, 233,
	217, 241, 256, 259, 298, 358, 365, 394, 399, 277,
	253, 231, 418, 228, 437, 460, 461, 462, 464, 362,
	248, 398, 892, 920, 345, 466, 467, 290, 363, 0,
	0, 946, 931, 465, 0, 877, 949, 846, 865, 959,
	868, 871, 913, 825, 891, 381, 862, 818, 850, 820,
	857, 821, 848, 879, 252, 845, 933, 895, 948, 336,
	249, 827, 851, 395, 867, 197, 915, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 955, 340, 901, 0, 449, 366, 0, 0, 0,
	881, 937, 889, 927, 876, 914, 835, 900, 950, 863,
	910, 951, 297, 234, 299, 196, 378, 450, 268, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 859,
	907, 945, 860, 909, 247, 295, 254, 246, 469, 956,
	936, 824, 888, 944, 0, 0, 216, 947, 883, 0,
	912, 0, 962, 819, 903, 0, 822, 826, 958, 940,
	854, 257, 0, 0, 0, 0, 0, 0, 0, 880,
	890, 924, 874, 0, 0, 0, 0, 0, 0, 0,
	852, 0, 899, 0, 0, 0, 831, 823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 834, 0, 853, 925, 0, 817,
	278, 828, 367, 239, 0, 929, 939, 875, 505, 943,
	873, 872, 919, 832, 935, 866, 335, 830, 304, 192,
	212, 0, 864, 377, 420, 426, 934, 849, 858, 237,
	856, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 898, 917, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 1152, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 844, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 930, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 922, 961, 390, 425, 227, 490, 448,
	839, 843, 837, 904, 838, 893, 894, 840, 952, 953,
	954, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	926, 833, 0, 841, 842, 0, 932, 941, 942, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	897, 191, 208, 338, 957, 413, 270, 521, 499, 495,
	198, 210, 836, 244, 847, 855, 0, 861, 869, 870,
	882, 884, 885, 886, 887, 905, 906, 908, 916, 918,
	921, 923, 928, 938, 960, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 896, 902, 349, 263, 283, 294, 911,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 892,
	920, 345, 466, 467, 290, 363, 0, 0, 946, 931,
	465, 0, 877, 949, 846, 865, 959, 868, 871, 913,
	825, 891, 381, 862, 818, 850, 820, 857, 821, 848,
	879, 252, 845, 933, 895, 948, 336, 249, 827, 851,
	395, 867, 197, 915, 439, 236, 346, 343, 472, 264,
	255, 251, 235, 291, 353, 393, 459, 387, 955, 340,
	901, 0, 449, 366, 0, 0, 0, 881, 937, 889,
	927, 876, 914, 835, 900, 950, 863, 910, 951, 297,
	234, 299, 196, 378, 450, 268, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 321, 330, 329, 310,
	311, 313, 315, 320, 327, 333, 859, 907, 945, 860,
	909, 247, 295, 254, 246, 469, 956, 936, 824, 888,
	944, 0, 0, 216, 947, 883, 0, 912, 0, 962,
	819, 903, 0, 822, 826, 958, 940, 854, 257, 0,
	0, 0, 0, 0, 0, 0, 880, 890, 924, 874,
	0, 0, 0, 0, 0, 0, 0, 852, 0, 899,
	0, 0, 0, 831, 823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 878, 0, 0,
	0, 834, 0, 853, 925, 0, 817, 278, 828, 367,
	239, 0, 929, 939, 875, 505, 943, 873, 872, 919,
	832, 935, 866, 335, 830, 304, 192, 212, 0, 864,
	377, 420, 426, 934, 849, 858, 237, 856, 424, 391,
	488, 220, 266, 417, 397, 422, 404, 269, 898, 917,
	423, 341, 474, 411, 485, 506, 507, 245, 371, 496,
	463, 502, 520, 213, 242, 385, 456, 491, 446, 364,
	470, 471, 303, 445, 276, 195, 339, 512, 211, 432,
	229, 218, 476, 494, 271, 415, 203, 458, 483, 226,
	436, 0, 0, 522, 205, 481, 455, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 478, 479, 238,
	523, 215, 501, 207, 1152, 500, 373, 473, 482, 361,
	351, 206, 480, 359, 350, 306, 325, 326, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 492, 0,
	200, 0, 451, 493, 524, 221, 222, 224, 844, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 930, 468, 486, 497, 504, 510, 511, 513, 514,
	515, 516, 517, 519, 518, 372, 288, 447, 305, 342,
	922, 961, 390, 425, 227, 490, 448, 839, 843, 837,
	904, 838, 893, 894, 840, 952, 953, 954, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 0, 926, 833, 0,
	841, 842, 0, 932, 941, 942, 543, 352, 438, 487,
	307, 319, 322, 312, 331, 0, 332, 308, 309, 314,
	316, 317, 318, 323, 324, 328, 334, 897, 191, 208,
	338, 957, 413, 270, 521, 499, 495, 198, 210, 836,
	244, 847, 855, 0, 861, 869, 870, 882, 884, 885,
	886, 887, 905, 906, 908, 916, 918, 921, 923, 928,
	938, 960, 193, 194, 201, 209, 219, 223, 230, 243,
	258, 260, 267, 279, 284, 287, 292, 293, 296, 302,
	348, 354, 355, 356, 357, 374, 375, 376, 379, 382,
	383, 386, 388, 389, 392, 396, 400, 401, 402, 403,
	405, 407, 414, 419, 427, 428, 429, 430, 431, 434,
	435, 440, 441, 442, 443, 444, 452, 453, 457, 475,
	477, 489, 503, 508, 433, 280, 484, 509, 0, 347,
	896, 902, 349, 263, 283, 294, 911, 498, 454, 214,
	421, 272, 202, 233, 217, 241, 256, 259, 298, 358,
	365, 394, 399, 277, 253, 231, 418, 228, 437, 460,
	461, 462, 464, 362, 248, 398, 892, 920, 345, 466,
	467, 290, 363, 0, 0, 946, 931, 465, 0, 877,
	949, 846, 865, 959, 868, 871, 913, 825, 891, 381,
	862, 818, 850, 820, 857, 821, 848, 879, 252, 845,
	933, 895, 948, 336, 249, 827, 851, 395, 867, 197,
	915, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 955, 340, 901, 0, 449,
	366, 0, 0, 0, 881, 937, 889, 927, 876, 914,
	835, 900, 950, 863, 910, 951, 297, 234, 299, 196,
	378, 450, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 859, 907, 945, 860, 909, 247, 295,
	254, 246, 469, 956, 936, 824, 888, 944, 0, 0,
	963, 947, 883, 0, 912, 0, 962, 819, 903, 0,
	822, 826, 958, 940, 854, 257, 0, 0, 0, 0,
	0, 0, 0, 880, 890, 924, 874, 0, 0, 0,
	0, 0, 0, 0, 852, 0, 899, 0, 0, 0,
	831, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 834, 0,
	853, 925, 0, 817, 278, 828, 367, 239, 0, 929,
	939, 875, 505, 943, 873, 872, 919, 832, 935, 866,
	335, 830, 304, 192, 212, 0, 864, 377, 420, 426,
	934, 849, 858, 237, 856, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 898, 917, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 829, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 844, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 930, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 816, 810, 809, 305, 342, 922, 961, 390,
	425, 227, 490, 448, 839, 843, 837, 904, 838, 893,
	894, 840, 952, 953, 954, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 926, 833, 0, 841, 842, 0,
	932, 941, 942, 543, 352, 438, 487, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 897, 191, 208, 338, 957, 413,
	270, 521, 499, 495, 198, 210, 836, 244, 847, 855,
	0, 861, 869, 870, 882, 884, 885, 886, 887, 905,
	906, 908, 916, 918, 921, 923, 928, 938, 960, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 896, 902, 349,
	263, 283, 294, 911, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 892, 920, 345, 466, 467, 290, 363,
	0, 0, 946, 931, 465, 0, 877, 949, 846, 865,
	959, 868, 871, 913, 825, 891, 381, 862, 818, 850,
	820, 857, 821, 848, 879, 252, 845, 933, 895, 948,
	336, 249, 827, 851, 395, 867, 197, 915, 439, 236,
	346, 343, 472, 264, 255, 251, 235, 291, 353, 393,
	459, 387, 955, 340, 901, 0, 449, 366, 0, 0,
	0, 881, 937, 889, 927, 876, 914, 835, 900, 950,
	863, 910, 951, 297, 234, 299, 196, 378, 450, 268,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	321, 330, 329, 310, 311, 313, 315, 320, 327, 333,
	859, 907, 945, 860, 909, 247, 295, 254, 246, 469,
	956, 936, 824, 888, 944, 0, 0, 963, 947, 883,
	0, 912, 0, 962, 819, 903, 0, 822, 826, 958,
	940, 854, 257, 0, 0, 0, 0, 0, 0, 0,
	880, 890, 924, 874, 0, 0, 0, 0, 0, 0,
	0, 852, 0, 899, 0, 0, 0, 831, 823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 878, 0, 0, 0, 834, 0, 853, 925, 0,
	817, 278, 828, 367, 239, 0, 929, 939, 875, 505,
	943, 873, 872, 919, 832, 935, 866, 335, 830, 304,
	192, 212, 0, 864, 377, 420, 426, 934, 849, 858,
	237, 856, 424, 391, 488, 220, 266, 417, 397, 422,
	404, 269, 898, 917, 423, 341, 474, 411, 485, 506,
	507, 245, 371, 496, 463, 502, 520, 213, 242, 385,
	456, 491, 446, 364, 470, 471, 303, 445, 276, 195,
	339, 512, 211, 432, 229, 218, 476, 494, 271, 415,
	203, 458, 1367, 226, 436, 0, 0, 522, 205, 481,
	455, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 478, 479, 238, 523, 215, 501, 207, 829, 500,
	373, 473, 482, 361, 351, 206, 480, 359, 350, 306,
	325, 326, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 492, 0, 200, 0, 451, 493, 524, 221,
	222, 224, 844, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 930, 468, 486, 497, 504,
	510, 511, 513, 514, 515, 516, 517, 519, 518, 816,
	810, 809, 305, 342, 922, 961, 390, 425, 227, 490,
	448, 839, 843, 837, 904, 838, 893, 894, 840, 952,
	953, 954, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	0, 926, 833, 0, 841, 842, 0, 932, 941, 942,
	543, 352, 438, 487, 307, 319, 322, 312, 331, 0,
	332, 308, 309, 314, 316, 317, 318, 323, 324, 328,
	334, 897, 191, 208, 338, 957, 413, 270, 521, 499,
	495, 198, 210, 836, 244, 847, 855, 0, 861, 869,
	870, 882, 884, 885, 886, 887, 905, 906, 908, 916,
	918, 921, 923, 928, 938, 960, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 427, 428,
	429, 430, 431, 434, 435, 440, 441, 442, 443, 444,
	452, 453, 457, 475, 477, 489, 503, 508, 433, 280,
	484, 509, 0, 347, 896, 902, 349, 263, 283, 294,
	911, 498, 454, 214, 421, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 437, 460, 461, 462, 464, 362, 248, 398,
	892, 920, 345, 466, 467, 290, 363, 0, 0, 946,
	931, 465, 0, 877, 949, 846, 865, 959, 868, 871,
	913, 825, 891, 381, 862, 818, 850, 820, 857, 821,
	848, 879, 252, 845, 933, 895, 948, 336, 249, 827,
	851, 395, 867, 197, 915, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 955,
	340, 901, 0, 449, 366, 0, 0, 0, 881, 937,
	889, 927, 876, 914, 835, 900, 950, 863, 910, 951,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 859, 907, 945,
	860, 909, 247, 295, 254, 246, 469, 956, 936, 824,
	888, 944, 0, 0, 963, 947, 883, 0, 912, 0,
	962, 819, 903, 0, 822, 826, 958, 940, 854, 257,
	0, 0, 0, 0, 0, 0, 0, 880, 890, 924,
	874, 0, 0, 0, 0, 0, 0, 0, 852, 0,
	899, 0, 0, 0, 831, 823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 834, 0, 853, 925, 0, 817, 278, 828,
	367, 239, 0, 929, 939, 875, 505, 943, 873, 872,
	919, 832, 935, 866, 335, 830, 304, 192, 212, 0,
	864, 377, 420, 426, 934, 849, 858, 237, 856, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 898,
	917, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 807,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 829, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 844,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 930, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 816, 810, 809, 305,
	342, 922, 961, 390, 425, 227, 490, 448, 839, 843,
	837, 904, 838, 893, 894, 840, 952, 953, 954, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 926, 833,
	0, 841, 842, 0, 932, 941, 942, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 897, 191,
	208, 338, 957, 413, 270, 521, 499, 495, 198, 210,
	836, 244, 847, 855, 0, 861, 869, 870, 882, 884,
	885, 886, 887, 905, 906, 908, 916, 918, 921, 923,
	928, 938, 960, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 896, 902, 349, 263, 283, 294, 911, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 892, 920, 345,
	466, 467, 290, 363, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 1771, 0, 625, 0, 0, 0, 252,
	630, 0, 0, 0, 336, 249, 0, 1772, 395, 0,
	197, 0, 439, 236, 346, 343, 472, 264, 255, 251,
	235, 291, 353, 393, 459, 387, 637, 340, 0, 0,
	449, 366, 0, 0, 0, 0, 0, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 234, 299,
	196, 378, 450, 268, 0, 87, 0, 0, 188, 189,
	190, 701, 708, 709, 710, 711, 712, 702, 704, 0,
	0, 225, 703, 232, 648, 650, 649, 659, 660, 661,
	662, 663, 664, 665, 646, 706, 713, 714, 0, 247,
	295, 254, 246, 469, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 608,
	622, 0, 636, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 619, 620, 796, 0, 0, 0, 685, 0, 621,
	0, 0, 629, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 367, 239, 0,
	684, 0, 0, 505, 0, 0, 682, 0, 0, 0,
	0, 335, 0, 304, 192, 212, 0, 0, 377, 420,
	426, 0, 0, 0, 237, 0, 424, 391, 488, 220,
	266, 417, 397, 422, 404, 269, 0, 0, 423, 341,
	474, 411, 485, 506, 507, 245, 371, 496, 463, 502,
	520, 213, 242, 385, 456, 491, 446, 364, 470, 471,
	303, 445, 276, 195, 339, 512, 211, 432, 229, 218,
	476, 494, 271, 415, 203, 458, 483, 226, 436, 0,
	0, 522, 205, 481, 455, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 478, 479, 238, 523, 215,
	501, 207, 0, 500, 373, 473, 482, 361, 351, 206,
	480, 359, 350, 306, 654, 655, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 492, 0, 200, 0,
	451, 493, 524, 221, 222, 224, 0, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 0,
	468, 486, 497, 504, 510, 511, 513, 514, 515, 516,
	517, 519, 518, 372, 288, 447, 305, 342, 0, 0,
	390, 425, 227, 490, 448, 691, 683, 641, 695, 643,
	692, 693, 638, 639, 642, 694, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 0, 686, 628, 627, 0, 634,
	635, 0, 644, 645, 647, 651, 652, 653, 656, 657,
	658, 666, 668, 669, 667, 670, 671, 672, 675, 676,
	677, 678, 673, 674, 679, 626, 191, 208, 338, 0,
	413, 270, 521, 499, 495, 198, 210, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 374, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 427, 428, 429, 430, 431, 434, 435, 440,
	441, 442, 443, 444, 452, 453, 457, 475, 477, 489,
	503, 508, 433, 280, 484, 509, 0, 347, 0, 0,
	349, 263, 283, 294, 0, 498, 454, 214, 421, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 437, 460, 461, 462,
	464, 362, 248, 398, 0, 363, 345, 466, 467, 290,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 625, 0, 0,
	0, 252, 630, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 439, 236, 346, 343, 472, 264,
	255, 251, 235, 291, 353, 393, 459, 387, 637, 340,
	0, 0, 449, 366, 0, 0, 0, 0, 0, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 450, 268, 0, 87, 0, 0,
	188, 189, 190, 701, 708, 709, 710, 711, 712, 702,
	704, 0, 0, 225, 703, 232, 648, 650, 649, 659,
	660, 661, 662, 663, 664, 665, 646, 706, 713, 714,
	0, 247, 295, 254, 246, 469, 0, 0, 1737, 1738,
	1739, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 608, 622, 0, 636, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 685,
	0, 621, 0, 0, 629, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 367,
	239, 0, 684, 0, 0, 505, 0, 0, 682, 0,
	0, 0, 0, 335, 0, 304, 192, 212, 0, 0,
	377, 420, 426, 0, 0, 0, 237, 0, 424, 391,
	488, 220, 266, 417, 397, 422, 404, 269, 0, 0,
	423, 341, 474, 411, 485, 506, 507, 245, 371, 496,
	463, 502, 520, 213, 242, 385, 456, 491, 446, 364,
	470, 471, 303, 445, 276, 195, 339, 512, 211, 432,
	229, 218, 476, 494, 271, 415, 203, 458, 483, 226,
	436, 0, 0, 522, 205, 481, 455, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 478, 479, 238,
	523, 215, 501, 207, 0, 500, 373, 473, 482, 361,
	351, 206, 480, 359, 350, 306, 654, 655, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 492, 0,
	200, 0, 451, 493, 524, 221, 222, 224, 0, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 0, 468, 486, 497, 504, 510, 511, 513, 514,
	515, 516, 517, 519, 518, 372, 288, 447, 305, 342,
	0, 0, 390, 425, 227, 490, 448, 691, 683, 641,
	695, 643, 692, 693, 638, 639, 642, 694, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 0, 686, 628, 627,
	0, 634, 635, 0, 644, 645, 647, 651, 652, 653,
	656, 657, 658, 666, 668, 669, 667, 670, 671, 672,
	675, 676, 677, 678, 673, 674, 679, 626, 191, 208,
	338, 0, 413, 270, 521, 499, 495, 198, 210, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 243,
	258, 260, 267, 279, 284, 287, 292, 293, 296, 302,
	348, 354, 355, 356, 357, 374, 375, 376, 379, 382,
	383, 386, 388, 389, 392, 396, 400, 401, 402, 403,
	405, 407, 414, 419, 427, 428, 429, 430, 431, 434,
	435, 440, 441, 442, 443, 444, 452, 453, 457, 475,
	477, 489, 503, 508, 433, 280, 484, 509, 0, 347,
	0, 0, 349, 263, 283, 294, 0, 498, 454, 214,
	421, 272, 202, 233, 217, 241, 256, 259, 298, 358,
	365, 394, 399, 277, 253, 231, 418, 228, 437, 460,
	461, 462, 464, 362, 248, 398, 0, 363, 345, 466,
	467, 290, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 625,
	0, 0, 0, 252, 630, 0, 0, 0, 336, 249,
	0, 0, 395, 0, 197, 0, 439, 236, 346, 343,
	472, 264, 255, 251, 235, 291, 353, 393, 459, 387,
	637, 340, 0, 0, 449, 366, 0, 0, 0, 0,
	0, 632, 633, 0, 0, 0, 0, 0, 0, 1854,
	0, 297, 234, 299, 196, 378, 450, 268, 0, 87,
	0, 0, 188, 189, 190, 701, 708, 709, 710, 711,
	712, 702, 704, 0, 0, 225, 703, 232, 648, 650,
	649, 659, 660, 661, 662, 663, 664, 665, 646, 706,
	713, 714, 1855, 247, 295, 254, 246, 469, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 608, 622, 0, 636, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 619, 620, 0, 0, 0,
	0, 685, 0, 621, 0, 0, 629, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 367, 239, 0, 684, 0, 0, 505, 0, 0,
	682, 0, 0, 0, 0, 335, 0, 304, 192, 212,
	0, 0, 377, 420, 426, 0, 0, 0, 237, 0,
	424, 391, 488, 220, 266, 417, 397, 422, 404, 269,
	0, 0, 423, 341, 474, 411, 485, 506, 507, 245,
	371, 496, 463, 502, 520, 213, 242, 385, 456, 491,
	446, 364, 470, 471, 303, 445, 276, 195, 339, 512,
	211, 432, 229, 218, 476, 494, 271, 415, 203, 458,
	483, 226, 436, 0, 0, 522, 205, 481, 455, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 478,
	479, 238, 523, 215, 501, 207, 0, 500, 373, 473,
	482, 361, 351, 206, 480, 359, 350, 306, 654, 655,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	492, 0, 200, 0, 451, 493, 524, 221, 222, 224,
	0, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 0, 468, 486, 497, 504, 510, 511,
	513, 514, 515, 516, 517, 519, 518, 372, 288, 447,
	305, 342, 0, 0, 390, 425, 227, 490, 448, 691,
	683, 641, 695, 643, 692, 693, 638, 639, 642, 694,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 0, 686,
	628, 627, 0, 634, 635, 0, 644, 645, 647, 651,
	652, 653, 656, 657, 658, 666, 668, 669, 667, 670,
	671, 672, 675, 676, 677, 678, 673, 674, 679, 626,
	191, 208, 338, 0, 413, 270, 521, 499, 495, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 427, 428, 429, 430,
	431, 434, 435, 440, 441, 442, 443, 444, 452, 453,
	457, 475, 477, 489, 503, 508, 433, 280, 484, 509,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 498,
	454, 214, 421, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	437, 460, 461, 462, 464, 362, 248, 398, 0, 0,
	345, 466, 467, 290, 363, 0, 0, 0, 78, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 625, 0, 0, 0,
	252, 630, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 637, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 87, 0, 0, 188,
	189, 190, 701, 708, 709, 710, 711, 712, 702, 704,
	0, 0, 225, 703, 232, 648, 650, 649, 659, 660,
	661, 662, 663, 664, 665, 646, 706, 713, 714, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	608, 622, 0, 636, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 619, 620, 0, 0, 0, 0, 685, 0,
	621, 0, 0, 629, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 684, 0, 0, 505, 0, 0, 682, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 654, 655, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 691, 683, 641, 695,
	643, 692, 693, 638, 639, 642, 694, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 686, 628, 627, 0,
	634, 635, 0, 644, 645, 647, 651, 652, 653, 656,
	657, 658, 666, 668, 669, 667, 670, 671, 672, 675,
	676, 677, 678, 673, 674, 679, 626, 191, 208, 338,
	86, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 625, 0,
	0, 0, 252, 630, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 637,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 87, 0,
	0, 188, 189, 190, 701, 708, 709, 710, 711, 712,
	702, 704, 0, 0, 225, 703, 232, 648, 650, 649,
	659, 660, 661, 662, 663, 664, 665, 646, 706, 713,
	714, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 608, 622, 0, 636, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 619, 620, 0, 0, 0, 0,
	685, 0, 621, 0, 0, 629, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 684, 0, 0, 505, 0, 0, 682,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 2955,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 654, 655, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 691, 683,
	641, 695, 643, 692, 693, 638, 639, 642, 694, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 686, 628,
	627, 0, 634, 635, 0, 644, 645, 647, 651, 652,
	653, 656, 657, 658, 666, 668, 669, 667, 670, 671,
	672, 675, 676, 677, 678, 673, 674, 679, 626, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	625, 0, 0, 0, 252, 630, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 637, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	87, 0, 1334, 188, 189, 190, 701, 708, 709, 710,
	711, 712, 702, 704, 0, 0, 225, 703, 232, 648,
	650, 649, 659, 660, 661, 662, 663, 664, 665, 646,
	706, 713, 714, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 608, 622, 0, 636, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 619, 620, 0, 0,
	0, 0, 685, 0, 621, 0, 0, 629, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 684, 0, 0, 505, 0,
	0, 682, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 654,
	655, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	691, 683, 641, 695, 643, 692, 693, 638, 639, 642,
	694, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	686, 628, 627, 0, 634, 635, 0, 644, 645, 647,
	651, 652, 653, 656, 657, 658, 666, 668, 669, 667,
	670, 671, 672, 675, 676, 677, 678, 673, 674, 679,
	626, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	363, 345, 466, 467, 290, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 625, 0, 0, 0, 252, 630, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 637, 340, 0, 0, 449, 366, 0,
	0, 0, 0, 0, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 450,
	268, 0, 87, 0, 0, 188, 189, 190, 701, 708,
	709, 710, 711, 712, 702, 704, 0, 0, 225, 703,
	232, 648, 650, 649, 659, 660, 661, 662, 663, 664,
	665, 646, 706, 713, 714, 0, 247, 295, 254, 246,
	469, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 608, 622, 0, 636,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 619, 620,
	796, 0, 0, 0, 685, 0, 621, 0, 0, 629,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 684, 0, 0,
	505, 0, 0, 682, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 426, 0, 0,
	0, 237, 0, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 0, 0, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 0,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 654, 655, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 0, 0, 390, 425, 227,
	490, 448, 691, 683, 641, 695, 643, 692, 693, 638,
	639, 642, 694, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 686, 628, 627, 0, 634, 635, 0, 644,
	645, 647, 651, 652, 653, 656, 657, 658, 666, 668,
	669, 667, 670, 671, 672, 675, 676, 677, 678, 673,
	674, 679, 626, 191, 208, 338, 0, 413, 270, 521,
	499, 495, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 0, 363, 345, 466, 467, 290, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 625, 0, 0, 0, 252, 630,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 637, 340, 0, 0, 449,
	366, 0, 0, 0, 0, 0, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 450, 268, 0, 87, 0, 0, 188, 189, 190,
	701, 708, 709, 710, 711, 712, 702, 704, 0, 0,
	225, 703, 232, 648, 650, 649, 659, 660, 661, 662,
	663, 664, 665, 646, 706, 713, 714, 0, 247, 295,
	254, 246, 469, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 608, 622,
	0, 636, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	619, 620, 0, 0, 0, 0, 685, 0, 621, 0,
	0, 629, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 684,
	0, 0, 505, 0, 0, 682, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 426,
	0, 0, 0, 237, 0, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 0, 0, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 0, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 654, 655, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 372, 288, 447, 305, 342, 0, 0, 390,
	425, 227, 490, 448, 691, 683, 641, 695, 643, 692,
	693, 638, 639, 642, 694, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 686, 628, 627, 0, 634, 635,
	0, 644, 645, 647, 651, 652, 653, 656, 657, 658,
	666, 668, 669, 667, 670, 671, 672, 675, 676, 677,
	678, 673, 674, 679, 626, 191, 208, 338, 0, 413,
	270, 521, 499, 495, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 0, 363, 345, 466, 467, 290, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 625, 0, 0, 0,
	252, 630, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 637, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 87, 0, 0, 188,
	189, 190, 701, 708, 709, 710, 711, 712, 702, 704,
	0, 0, 225, 703, 232, 648, 650, 649, 659, 660,
	661, 662, 663, 664, 665, 646, 706, 713, 714, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 622, 0, 636, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 619, 620, 0, 0, 0, 0, 685, 0,
	621, 0, 0, 629, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 684, 0, 0, 505, 0, 0, 682, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 654, 655, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 691, 683, 641, 695,
	643, 692, 693, 638, 639, 642, 694, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 686, 628, 627, 0,
	634, 635, 0, 644, 645, 647, 651, 652, 653, 656,
	657, 658, 666, 668, 669, 667, 670, 671, 672, 675,
	676, 677, 678, 673, 674, 679, 626, 191, 208, 338,
	0, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 708, 709, 0, 0, 0,
	0, 1682, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 0, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 1014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 1013, 505, 0,
	0, 0, 0, 0, 1010, 1011, 335, 971, 304, 192,
	212, 1004, 1008, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	0, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	0, 345, 466, 467, 290, 363, 0, 0, 0, 78,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 439, 236, 346, 343, 472, 264,
	255, 251, 235, 291, 353, 393, 459, 387, 0, 340,
	0, 0, 449, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 450, 268, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 321, 330, 329, 310,
	311, 313, 315, 320, 327, 333, 0, 0, 0, 0,
	0, 247, 295, 254, 246, 469, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 367,
	239, 0, 0, 0, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 304, 192, 212, 0, 0,
	377, 420, 426, 0, 0, 0, 237, 0, 424, 391,
	488, 220, 266, 417, 397, 422, 404, 269, 0, 0,
	423, 341, 474, 411, 485, 506, 507, 245, 371, 496,
	463, 502, 520, 213, 242, 385, 456, 491, 446, 364,
	470, 471, 303, 445, 276, 195, 339, 512, 211, 432,
	229, 218, 476, 494, 271, 415, 203, 458, 483, 226,
	436, 0, 0, 522, 205, 481, 455, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 478, 479, 238,
	523, 215, 501, 207, 0, 500, 373, 473, 482, 361,
	351, 206, 480, 359, 350, 306, 325, 326, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 492, 0,
	200, 0, 451, 493, 524, 221, 222, 224, 0, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 0, 468, 486, 497, 504, 510, 511, 513, 514,
	515, 516, 517, 519, 518, 372, 288, 447, 305, 342,
	0, 0, 390, 425, 227, 490, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 352, 438, 487,
	307, 319, 322, 312, 331, 0, 332, 308, 309, 314,
	316, 317, 318, 323, 324, 328, 334, 0, 191, 208,
	338, 86, 413, 270, 521, 499, 495, 198, 210, 0,
	244, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 243,
	258, 260, 267, 279, 284, 287, 292, 293, 296, 302,
	348, 354, 355, 356, 357, 374, 375, 376, 379, 382,
	383, 386, 388, 389, 392, 396, 400, 401, 402, 403,
	405, 407, 414, 419, 427, 428, 429, 430, 431, 434,
	435, 440, 441, 442, 443, 444, 452, 453, 457, 475,
	477, 489, 503, 508, 433, 280, 484, 509, 0, 347,
	0, 0, 349, 263, 283, 294, 0, 498, 454, 214,
	421, 272, 202, 233, 217, 241, 256, 259, 298, 358,
	365, 394, 399, 277, 253, 231, 418, 228, 437, 460,
	461, 462, 464, 362, 248, 398, 0, 1353, 345, 466,
	467, 290, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 1355, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 336, 249,
	0, 0, 395, 0, 197, 0, 439, 236, 346, 343,
	472, 264, 255, 251, 235, 291, 353, 393, 459, 387,
	0, 340, 0, 0, 449, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 234, 299, 196, 378, 450, 268, 0, 0,
	0, 0, 188, 189, 190, 0, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 321, 330,
	329, 310, 311, 313, 315, 320, 327, 333, 0, 0,
	0, 0, 0, 247, 295, 254, 246, 469, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 1186,
	0, 1187, 1188, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 367, 239, 0, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 304, 192, 212,
	0, 0, 377, 420, 426, 0, 0, 0, 237, 0,
	424, 391, 488, 220, 266, 417, 397, 422, 404, 269,
	0, 0, 423, 341, 474, 411, 485, 506, 507, 245,
	371, 496, 463, 502, 520, 213, 242, 385, 456, 491,
	446, 364, 470, 471, 303, 445, 276, 195, 339, 512,
	211, 432, 229, 218, 476, 494, 271, 415, 203, 458,
	483, 226, 436, 0, 0, 522, 205, 481, 455, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 478,
	479, 238, 523, 215, 501, 207, 0, 500, 373, 473,
	482, 361, 351, 206, 480, 359, 350, 306, 325, 326,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	492, 0, 200, 0, 451, 493, 524, 221, 222, 224,
	0, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 0, 468, 486, 497, 504, 510, 511,
	513, 514, 515, 516, 517, 519, 518, 372, 288, 447,
	305, 342, 0, 0, 390, 425, 227, 490, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 352,
	438, 487, 307, 319, 322, 312, 331, 0, 332, 308,
	309, 314, 316, 317, 318, 323, 324, 328, 334, 0,
	191, 208, 338, 0, 413, 270, 521, 499, 495, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 427, 428, 429, 430,
	431, 434, 435, 440, 441, 442, 443, 444, 452, 453,
	457, 475, 477, 489, 503, 508, 433, 280, 484, 509,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 498,
	454, 214, 421, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	437, 460, 461, 462, 464, 362, 248, 398, 0, 363,
	345, 466, 467, 290, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	336, 249, 0, 0, 395, 0, 197, 0, 439, 236,
	346, 343, 472, 264, 255, 251, 235, 291, 353, 393,
	459, 387, 0, 340, 0, 0, 449, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 234, 299, 196, 378, 450, 268,
	0, 0, 0, 0, 188, 189, 190, 1296, 1299, 0,
	0, 0, 0, 1295, 1298, 0, 0, 225, 1294, 232,
	321, 330, 329, 310, 311, 313, 315, 320, 327, 333,
	0, 0, 0, 0, 0, 247, 295, 254, 246, 469,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 367, 239, 0, 0, 0, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 304,
	192, 212, 0, 0, 377, 420, 426, 0, 0, 0,
	237, 0, 424, 391, 488, 220, 266, 417, 397, 422,
	404, 269, 0, 0, 423, 341, 474, 411, 485, 506,
	507, 245, 371, 496, 463, 502, 520, 213, 242, 385,
	456, 491, 446, 364, 470, 471, 303, 445, 276, 195,
	339, 512, 211, 432, 229, 218, 476, 494, 271, 415,
	203, 458, 483, 226, 436, 0, 0, 522, 205, 481,
	455, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 478, 479, 238, 523, 215, 501, 207, 0, 500,
	373, 473, 482, 361, 351, 206, 480, 359, 350, 306,
	325, 326, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 492, 0, 200, 0, 451, 493, 524, 221,
	222, 224, 0, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 0, 468, 486, 497, 504,
	510, 511, 513, 514, 515, 516, 517, 519, 518, 372,
	288, 447, 305, 342, 0, 0, 390, 425, 227, 490,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 352, 438, 487, 307, 319, 322, 312, 331, 0,
	332, 308, 309, 314, 316, 317, 318, 323, 324, 328,
	334, 0, 191, 208, 338, 0, 413, 270, 521, 499,
	495, 198, 210, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 427, 428,
	429, 430, 431, 434, 435, 440, 441, 442, 443, 444,
	452, 453, 457, 475, 477, 489, 503, 508, 433, 280,
	484, 509, 0, 347, 0, 0, 349, 263, 283, 294,
	0, 498, 454, 214, 421, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 437, 460, 461, 462, 464, 362, 248, 398,
	0, 0, 345, 466, 467, 290, 363, 0, 0, 0,
	78, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 87, 0,
	1334, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 86, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 0, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	0, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	363, 345, 466, 467, 290, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 1793, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 0, 340, 0, 0, 449, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 450,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 1535,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	469, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 426, 0, 0,
	0, 237, 0, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 0, 1791, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 0,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 0, 0, 390, 425, 227,
	490, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 352, 438, 487, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 0, 191, 208, 338, 0, 413, 270, 521,
	499, 495, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 0, 363, 345, 466, 467, 290, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 0, 340, 0, 0, 449,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 450, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 469, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	335, 971, 304, 192, 212, 969, 0, 377, 420, 426,
	0, 0, 0, 237, 0, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 0, 0, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 0, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 372, 288, 447, 305, 342, 0, 0, 390,
	425, 227, 490, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 352, 438, 487, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 0, 191, 208, 338, 0, 413,
	270, 521, 499, 495, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 0, 363, 345, 466, 467, 290, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 1793, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 0, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 1535, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 352, 438, 487, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 0, 191, 208, 338,
	0, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	1334, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	2883, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 0, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	0, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	363, 345, 466, 467, 290, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 0, 340, 0, 0, 449, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 450,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 2135,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	469, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 426, 0, 0,
	0, 237, 0, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 0, 0, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 0,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 0, 0, 390, 425, 227,
	490, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 352, 438, 487, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 0, 191, 208, 338, 0, 413, 270, 521,
	499, 495, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 0, 363, 345, 466, 467, 290, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 0, 340, 0, 0, 449,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 450, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 2120, 0, 0, 0, 2121, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 469, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 426,
	0, 0, 0, 237, 0, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 0, 0, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 0, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 372, 288, 447, 305, 342, 0, 0, 390,
	425, 227, 490, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 352, 438, 487, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 0, 191, 208, 338, 0, 413,
	270, 521, 499, 495, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 0, 363, 345, 466, 467, 290, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 1378, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 0, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 1377, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 352, 438, 487, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 0, 191, 208, 338,
	0, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	2976, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 0, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 1535, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	0, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	363, 345, 466, 467, 290, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 0, 340, 0, 0, 449, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 450,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	469, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	505, 0, 0, 0, 2883, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 426, 0, 0,
	0, 237, 0, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 0, 0, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 0,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 0, 0, 390, 425, 227,
	490, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 352, 438, 487, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 0, 191, 208, 338, 0, 413, 270, 521,
	499, 495, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 0, 363, 345, 466, 467, 290, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 0, 340, 0, 0, 449,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 450, 268, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 469, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 426,
	0, 0, 0, 237, 0, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 0, 0, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 0, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 372, 288, 447, 305, 342, 0, 0, 390,
	425, 227, 490, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 352, 438, 487, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 0, 191, 208, 338, 0, 413,
	270, 521, 499, 495, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 0, 363, 345, 466, 467, 290, 465,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 0, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 352, 438, 487, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 0, 191, 208, 338,
	0, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 1357, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 0, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	0, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	363, 345, 466, 467, 290, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 0, 340, 0, 0, 449, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 450,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	469, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 426, 0, 0,
	0, 237, 0, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 0, 0, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 0,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 0, 0, 390, 425, 227,
	490, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 352, 438, 487, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 0, 191, 208, 338, 1633, 413, 270, 521,
	499, 495, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 0, 363, 345, 466, 467, 290, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 1503, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 0, 340, 0, 0, 449,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 450, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 469, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 426,
	0, 0, 0, 237, 0, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 0, 0, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 0, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 372, 288, 447, 305, 342, 0, 0, 390,
	425, 227, 490, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 352, 438, 487, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 0, 191, 208, 338, 0, 413,
	270, 521, 499, 495, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 0, 363, 345, 466, 467, 290, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 1501, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 0, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 352, 438, 487, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 0, 191, 208, 338,
	0, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 1499, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 1497, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 0, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	0, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	363, 345, 466, 467, 290, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 1495,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 0, 340, 0, 0, 449, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 450,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	469, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 426, 0, 0,
	0, 237, 0, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 0, 0, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 0,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 0, 0, 390, 425, 227,
	490, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 352, 438, 487, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 0, 191, 208, 338, 0, 413, 270, 521,
	499, 495, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 0, 363, 345, 466, 467, 290, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 1491, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 0, 340, 0, 0, 449,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 450, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 469, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 426,
	0, 0, 0, 237, 0, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 0, 0, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 0, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 372, 288, 447, 305, 342, 0, 0, 390,
	425, 227, 490, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 352, 438, 487, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 0, 191, 208, 338, 0, 413,
	270, 521, 499, 495, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 0, 363, 345, 466, 467, 290, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 1489, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 0, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 352, 438, 487, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 0, 191, 208, 338,
	0, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 1487, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 0, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	1462, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	0, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	363, 345, 466, 467, 290, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 1362, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 0, 340, 0, 0, 449, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 450,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	469, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 426, 0, 0,
	0, 237, 0, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 0, 0, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 0,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 0, 0, 390, 425, 227,
	490, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 352, 438, 487, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 0, 191, 208, 338, 0, 413, 270, 521,
	499, 495, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 0, 363, 345, 466, 467, 290, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 0, 340, 0, 0, 449,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 450, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 469, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 426,
	0, 0, 0, 237, 0, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 0, 0, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 0, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 372, 288, 447, 305, 342, 0, 0, 390,
	425, 227, 490, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 352, 438, 487, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 0, 191, 208, 338, 0, 413,
	270, 521, 499, 495, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 0, 363, 345, 466, 467, 290, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 0, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 352, 438, 487, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 0, 191, 208, 338,
	0, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 599, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 363, 345,
	466, 467, 290, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 439, 236, 346,
	343, 472, 264, 255, 251, 235, 291, 353, 393, 459,
	387, 0, 340, 0, 0, 449, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 450, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 469, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 546, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 426, 0, 0, 0, 237,
	0, 424, 391, 488, 220, 266, 417, 397, 422, 404,
	269, 0, 0, 423, 341, 474, 411, 485, 506, 507,
	245, 371, 496, 463, 502, 520, 213, 242, 385, 456,
	491, 446, 364, 470, 471, 303, 445, 276, 195, 339,
	512, 211, 432, 229, 218, 476, 494, 271, 415, 203,
	458, 483, 226, 436, 0, 0, 522, 205, 481, 455,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	478, 479, 238, 523, 215, 501, 207, 0, 500, 373,
	473, 482, 361, 351, 206, 480, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 492, 0, 200, 0, 451, 493, 524, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 468, 486, 497, 504, 510,
	511, 513, 514, 515, 516, 517, 519, 518, 372, 288,
	447, 305, 342, 0, 0, 390, 425, 227, 490, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	352, 438, 487, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	0, 191, 208, 338, 0, 413, 270, 521, 499, 495,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 427, 428, 429,
	430, 431, 434, 435, 440, 441, 442, 443, 444, 452,
	453, 457, 475, 477, 489, 503, 508, 433, 280, 484,
	509, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	498, 454, 214, 421, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 437, 460, 461, 462, 464, 362, 248, 398, 0,
	363, 345, 466, 467, 290, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 439,
	236, 346, 343, 472, 264, 255, 251, 235, 291, 353,
	393, 459, 387, 0, 340, 0, 0, 449, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 450,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	469, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 426, 0, 0,
	0, 237, 0, 424, 391, 488, 220, 266, 417, 397,
	422, 404, 269, 0, 0, 423, 341, 474, 411, 485,
	506, 507, 245, 371, 496, 463, 502, 520, 213, 242,
	385, 456, 491, 446, 364, 470, 471, 303, 445, 276,
	195, 339, 512, 211, 432, 229, 218, 476, 494, 271,
	415, 203, 458, 483, 226, 436, 0, 0, 522, 205,
	481, 455, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 478, 479, 238, 523, 215, 501, 207, 0,
	500, 373, 473, 482, 361, 351, 206, 480, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 492, 0, 200, 0, 451, 493, 524,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 468, 486, 497,
	504, 510, 511, 513, 514, 515, 516, 517, 519, 518,
	372, 288, 447, 305, 342, 0, 0, 390, 425, 227,
	490, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 352, 438, 487, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 0, 191, 208, 338, 0, 413, 270, 521,
	499, 495, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	2981, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 427,
	428, 429, 430, 431, 434, 435, 440, 441, 442, 443,
	444, 452, 453, 457, 475, 477, 489, 503, 508, 433,
	280, 484, 509, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 498, 454, 214, 421, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 437, 460, 461, 462, 464, 362, 248,
	398, 0, 363, 345, 466, 467, 290, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 439, 236, 346, 343, 472, 264, 255, 251, 235,
	291, 353, 393, 459, 387, 0, 340, 0, 0, 449,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 450, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 469, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 426,
	0, 0, 0, 237, 0, 424, 391, 488, 220, 266,
	417, 397, 422, 404, 269, 0, 0, 423, 341, 474,
	411, 485, 506, 507, 245, 371, 496, 463, 502, 520,
	213, 242, 385, 456, 491, 446, 364, 470, 471, 303,
	445, 276, 195, 339, 512, 211, 432, 229, 218, 476,
	494, 271, 415, 203, 458, 483, 226, 436, 0, 0,
	522, 205, 481, 455, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 478, 479, 238, 523, 215, 501,
	207, 0, 500, 373, 473, 482, 361, 351, 206, 480,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 492, 0, 200, 0, 451,
	493, 524, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 468,
	486, 497, 504, 510, 511, 513, 514, 515, 516, 517,
	519, 518, 372, 288, 447, 305, 342, 0, 0, 390,
	425, 227, 490, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 352, 438, 487, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 0, 191, 208, 338, 0, 413,
	270, 521, 499, 495, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 427, 428, 429, 430, 431, 434, 435, 440, 441,
	442, 443, 444, 452, 453, 457, 475, 477, 489, 503,
	508, 433, 280, 484, 509, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 498, 454, 214, 421, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 437, 460, 461, 462, 464,
	362, 248, 398, 0, 363, 345, 466, 467, 290, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 439, 236, 346, 343, 472, 264, 255,
	251, 235, 291, 353, 393, 459, 387, 0, 340, 0,
	0, 449, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 450, 268, 0, 0, 0, 0, 188,
	2603, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 469, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 426, 0, 0, 0, 237, 0, 424, 391, 488,
	220, 266, 417, 397, 422, 404, 269, 0, 0, 423,
	341, 474, 411, 485, 506, 507, 245, 371, 496, 463,
	502, 520, 213, 242, 385, 456, 491, 446, 364, 470,
	471, 303, 445, 276, 195, 339, 512, 211, 432, 229,
	218, 476, 494, 271, 415, 203, 458, 483, 226, 436,
	0, 0, 522, 205, 481, 455, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 478, 479, 238, 523,
	215, 501, 207, 0, 500, 373, 473, 482, 361, 351,
	206, 480, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 492, 0, 200,
	0, 451, 493, 524, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 468, 486, 497, 504, 510, 511, 513, 514, 515,
	516, 517, 519, 518, 372, 288, 447, 305, 342, 0,
	0, 390, 425, 227, 490, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 352, 438, 487, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 0, 191, 208, 338,
	0, 413, 270, 521, 499, 495, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 427, 428, 429, 430, 431, 434, 435,
	440, 441, 442, 443, 444, 452, 453, 457, 475, 477,
	489, 503, 508, 433, 280, 484, 509, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 498, 454, 214, 421,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 437, 460, 461,
	462, 464, 362, 248, 398, 0, 363, 345, 466, 467,
	290, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 439, 236, 346, 343, 472,
	264, 255, 251, 235, 291, 353, 393, 459, 387, 0,
	340, 0, 0, 449, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 450, 268, 0, 0, 0,
	0, 188, 2116, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 469, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 426, 0, 0, 0, 237, 0, 424,
	391, 488, 220, 266, 417, 397, 422, 404, 269, 0,
	0, 423, 341, 474, 411, 485, 506, 507, 245, 371,
	496, 463, 502, 520, 213, 242, 385, 456, 491, 446,
	364, 470, 471, 303, 445, 276, 195, 339, 512, 211,
	432, 229, 218, 476, 494, 271, 415, 203, 458, 483,
	226, 436, 0, 0, 522, 205, 481, 455, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 478, 479,
	238, 523, 215, 501, 207, 0, 500, 373, 473, 482,
	361, 351, 206, 480, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 492,
	0, 200, 0, 451, 493, 524, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 468, 486, 497, 504, 510, 511, 513,
	514, 515, 516, 517, 519, 518, 372, 288, 447, 305,
	342, 0, 0, 390, 425, 227, 490, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 352, 438,
	487, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 0, 191,
	208, 338, 0, 413, 270, 521, 499, 495, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 427, 428, 429, 430, 431,
	434, 435, 440, 441, 442, 443, 444, 452, 453, 457,
	475, 477, 489, 503, 508, 433, 280, 484, 509, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 498, 454,
	214, 421, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 437,
	460, 461, 462, 464, 362, 248, 398, 0, 0, 345,
	466, 467, 290,
}

var yyPact = [...]int{
	6181, -1000, -411, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2023, 2024, -1000, -1000,
	-1000, -1000, 2127, -1000, 672, 1731, -1000, 1963, 5577, -1000,
	41498, 461, -1000, 40294, 458, 115, 41498, -1000, 146, -1000,
	137, 41498, 142, 39692, -1000, -1000, -291, 17408, 1909, 29,
	28, 41498, -1000, -1000, -1000, -1000, 2100, 1723, -1000, 349,
	-1000, -1000, -1000, -1000, -1000, -1000, 39090, -1000, -1000, -1000,
	1969, 1955, 2141, 591, 1902, -1000, 2010, 1723, -1000, 17408,
	2087, 2038, 16806, -1000, 16806, 409, -1000, -1000, 12582, -1000,
	-1000, 23438, 41498, 29458, 323, -1000, 1963, -1000, -1000, -1000,
	106, -1000, 324, 1646, -1000, 1643, -1000, 484, 642, 341,
	466, 460, 339, 337, 335, 333, 332, 331, 328, 327,
	348, -1000, 619, 619, -138, -142, 3213, 476, 378, 378,
	425, 1933, 1930, -1000, 750, -1000, 619, 619, 619, 299,
	619, 619, 619, 619, 285, 284, 619, 619, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 619, 619, 619,
	619, 619, 619, 289, 1963, 218, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 41498, 155, 41498, -1000, 521, 41498,
	753, 753, 42, 753, 753, 753, 753, 189, 602, 26,
	-1000, 188, 238, 185, 210, 733, 182, -1000, -1000, 206,
	733, 1261, -1000, 605, 131, -1000, 753, 753, -1000, 10154,
	166, 10154, 10154, -1000, 1953, -1000, -1000, -1000, -1000, 1284,
	-1000, 423, -1000, -1000, -1000, -1000, 41498, 38488, 347, 634,
	-1000, -1000, -1000, 48, -1000, -1000, 1452, 989, 17408, 912,
	-1000, 1498, 572, -1000, -1000, -1000, -1000, -1000, 487, 18010,
	18010, 18010, 18010, -1000, -1000, 1661, 1661, 1661, 1661, 18010,
	1661, 18010, 1661, 1661, 1661, 1661, 17408, 1661, 1661, 1661,
	-1000, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661,
	1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661,
	1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661,
	1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661,
	1661, 519, 1661, 1661, 1661, 1661, 1661, -1000, -1000, -1000,
	-1000, 1661, 1661, 1661, 1661, 1661, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21025, -1000, 15000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 41498, -1000,
	1661, 167, 41498, 41498, 329, 2010, 1723, -1000, 2100, 2071,
	349, -1000, 2005, 1554, 1340, 1292, 1723, 1626, 41498, -1000,
	1671, -1000, -1000, -1000, 1850, 1179, 1258, -1000, -1000, -1000,
	-1000, 1141, 17408, -1000, -1000, 2119, -1000, 20423, 518, 848,
	2118, 37886, -1000, 409, 409, 1638, 11975, -30, -1000, -1000,
	-1000, 630, 27050, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1953,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1620, 41498, -1000, -1000, 4900, 1184,
	-1000, 1729, -1000, 1606, -1000, 1702, 17408, 1738, 456, 1184,
	446, 443, 439, -1000, -70, -1000, -1000, -1000, -1000, -1000,
	-1000, 619, 619, 619, -1000, 343, 2086, 5577, 4841, -1000,
	-1000, -1000, 37284, 1720, 1184, -1000, 1718, -1000, 773, 495,
	536, 536, 1184, -1000, -1000, 41498, 1184, 771, 767, 1184,
	1184, 41498, 41498, -1000, 36682, -1000, 36080, 35478, 1107, 41498,
	34876, 34274, 33672, 33070, 32468, -1000, 1830, -1000, 1754, -1000,
	-1000, -1000, 41498, 1184, 1184, 41498, 41498, 310, -1000, -1000,
	41498, 1184, -1000, -1000, 1081, 1075, 1071, 619, 619, 1066,
	1256, 1253, 1252, 619, 619, 1054, 1251, 28254, 1250, 229,
	1052, 1051, 1046, 1095, 1248, 198, 1247, 1056, 931, 1025,
	41498, 1715, 41498, -1000, 187, 686, 376, 629, 1963, 1905,
	1632, 414, 452, 1184, 394, 394, 41498, -1000, 10761, -1000,
	-1000, 1245, 17408, -1000, 742, 733, 733, -1000, -1000, -1000,
	-1000, -1000, -1000, 753, 41498, 742, -1000, -1000, -1000, 733,
	753, 41498, 753, 753, 753, 753, 733, 733, 733, 753,
	41498, 41498, 41498, 41498, 41498, 41498, 41498, 41498, 41498, 10154,
	605, 753, -295, -1000, 1243, -1000, 1828, -1000, -1000, -1000,
	-1000, -1000, -1000, 10154, 10154, -1000, -1000, -1000, -1000, 141,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -51,
	1630, 31866, -1000, -299, -305, -306, -308, -1000, -1000, -1000,
	-309, -310, -1000, -1000, -1000, 17408, 17408, 17408, 17408, -170,
	-1000, 800, 18010, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	918, 730, 18010, 18010, 18010, 18010, 18010, 18010, 18010, 18010,
	18010, 18010, 18010, 18010, 18010, 18010, 18010, 25244, 7197, 7197,
	572, 572, 572, 572, -1000, 16806, 17408, 17408, 572, -1000,
	1184, 31264, 16806, 16806, 17408, 1952, 643, 989, 41498, -1000,
	1292, -1000, -1000, -1000, 1089, -1000, 41498, 41498, 109, 17408,
	17408, 17408, 17408, 17408, 17408, 13791, 17408, 17408, 17408, 17408,
	17408, 17408, 17408, 17408, 17408, 17408, 17408, 17408, 17408, 17408,
	17408, 17408, 17408, 17408, 17408, 17408, 17408, 17408, 17408, 17408,
	17408, 17408, 13189, 10761, 16806, 16806, 16806, 16806, 16806, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 512, 1370, 1379, 1464, -1000, 1628, -1000, -141, 22836,
	17408, 1229, 2117, 1756, 41498, -1000, -1000, -1000, 2010, -1000,
	2010, 1370, 1973, 1797, 16806, -1000, -1000, 1973, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1417, -1000, 41498, 1626,
	2016, 41498, 1844, 1227, 311, -1000, 17408, 17408, 1625, -1000,
	980, 41498, -1000, -170, -1000, 30662, -1000, -1000, 9547, -1000,
	41498, 319, 41498, -1000, 22234, 30060, 11368, -30, -1000, 11368,
	1508, -1000, 7, -9, 14393, 571, -1000, -1000, -1000, 3213,
	19214, 1431, 571, 79, -1000, -1000, -1000, 1702, -1000, 1702,
	1702, 1702, 1702, 311, 311, 311, 311, -1000, -1000, -1000,
	-1000, -1000, 1714, 1711, -1000, 1702, 1702, 1702, 1702, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1710, 1710, 1710, 1703,
	1703, 373, -1000, 17408, 271, 29458, 1977, 1008, 1409, 187,
	405, 1749, 1184, 1184, 1184, 405, -1000, 1166, 1152, 1122,
	-1000, -395, 1623, -1000, -1000, 2085, -1000, -1000, 681, 802,
	795, 749, 41498, 173, 318, -1000, 387, -1000, 29458, 1184,
	758, 536, 1184, -1000, 1184, -1000, -1000, -1000, -1000, -1000,
	1184, -1000, -1000, 1614, -1000, 1488, 857, 791, 840, 752,
	1614, -1000, -1000, -118, 1614, -1000, 1614, -1000, 1614, -1000,
	1614, -1000, 1614, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 676, 178, -217, 41498, 173, 25244, -1000, 412,
	-1000, -1000, -1000, 25244, 25244, -1000, -1000, -1000, -1000, 1220,
	1219, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-385, 41498, -1000, 194, 626, 294, 334, 291, 41498, 273,
	2042, 2041, 2034, 186, 282, 41498, 41498, 394, 1801, 41498,
	1992, 41498, -1000, -1000, -1000, -1000, -1000, 989, 41498, -1000,
	-1000, 753, 753, -1000, -1000, 41498, 753, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 753, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 41498, -1000, -1000, -1000, -1000, 41498, -1000, -1000, -1000,
	-1000, -1000, 80, 5, 340, -1000, -1000, -1000, -1000, -1000,
	2045, -1000, 989, 774, 662, -1000, 1661, -1000, -1000, 898,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 918, 18010, 18010,
	18010, 945, 441, 1257, 1123, 1137, 874, 874, 766, 766,
	576, 576, 576, 576, 576, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1218, -1000, 1514, -1000, 985, 1098, 1292,
	-1000, 1514, 1514, 1178, 16806, -1000, -1000, 683, -1000, 17408,
	1292, -1000, -1000, 1292, 1292, 1592, 1550, 2115, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 954,
	1409, 1409, 1409, 1409, 1409, 17408, 1042, -1000, -1000, -1000,
	1848, 1835, 1292, 1452, 1292, 1534, -1000, 1818, 1409, 1780,
	1761, 1736, 1360, 1724, 1696, 1682, 1409, 1409, 1409, 1113,
	1642, 1635, 1622, 1616, 1610, 1596, 1588, 1582, 1566, 1409,
	1292, 16806, 16806, 1525, 1661, 509, -1000, 1514, 1292, 1292,
	1514, 1514, 10761, 1292, -1000, 41498, -1000, -285, -1000, 1,
	589, 1661, -1000, 28254, 1292, -1000, 6723, -1000, 42702, -1000,
	-1000, -1000, -1000, -1000, 26448, 1666, 1973, -1000, -1000, 1661,
	1561, -1000, -1000, 311, 66, 25846, 566, 566, 89, 989,
	989, 17408, -1000, -1000, -1000, -1000, -1000, -1000, 501, 2101,
	336, 1661, -1000, 1650, 1954, -1000, -1000, -1000, 2014, 19821,
	-1000, 1661, 1661, 41498, 1664, 1629, -1000, 490, -1000, 1508,
	-30, -2, -1000, -1000, -1000, -1000, 989, -1000, 1106, 325,
	3040, -1000, 386, -1000, -1000, -1000, -1000, 1919, 56, -1000,
	-1000, -1000, 192, 311, -1000, -1000, -1000, -1000, -1000, -1000,
	1215, 1215, -1000, -1000, -1000, -1000, -1000, 1003, -1000, -1000,
	-1000, 1001, -1000, -1000, 1553, 1792, 271, -1000, -1000, 619,
	1200, -1000, -1000, 1924, 619, 619, 41498, -1000, -1000, 1407,
	1977, 194, 41498, 646, 1795, -1000, 1749, 1749, 1749, 41498,
	-1000, -1000, -1000, -1000, -1000, -1000, -386, 65, 326, -1000,
	-1000, -1000, 3667, 41498, 1530, -1000, 168, -1000, 1339, -1000,
	41498, -1000, 1528, 1709, 1184, 1184, -1000, -1000, -1000, 41498,
	1661, -1000, -1000, -1000, -1000, 450, 1961, 303, -1000, -1000,
	-190, -1000, -1000, 173, 168, 571, 1184, -1000, -1000, -1000,
	-1000, -1000, -388, 1518, 437, 169, 301, 41498, 41498, 41498,
	41498, 41498, 477, -1000, -1000, -1000, -1000, 157, -1000, -1000,
	157, -1000, -1000, -1000, -1000, 217, 411, -1000, 41498, 41498,
	563, -1000, -1000, -1000, 733, -1000, -1000, 733, -1000, -1000,
	-1000, -1000, -1000, 1942, 41498, 3, -337, -1000, -334, 17408,
	-1000, -1000, -1000, -1000, 911, 438, 1257, 18010, 18010, 16806,
	-107, 615, 615, 25244, -1000, -1000, -1000, 17408, 17408, 1627,
	637, -1000, 17408, 818, -1000, -1000, -1000, 17408, 17408, 17408,
	1292, 274, -1000, -1000, -1000, -1000, -1000, 2114, -1000, 17408,
	17408, 17408, -1000, -1000, 17408, 17408, -1000, 17408, 17408, 18612,
	1292, 18612, 17408, 17408, 18612, -1000, -1000, -1000, -1000, 18612,
	17408, 17408, 17408, 17408, 17408, 17408, 17408, 17408, 17408, -1000,
	-1000, 1514, 1514, 16806, 10761, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 589, -1000, 536, 536, 536,
	41498, -1000, -1000, -1000, -1000, -1000, -1000, 1503, 2032, -1000,
	1869, 1864, 2113, 2101, -1000, 22234, 1973, -1000, -1000, 41498,
	-277, -1000, 1894, 1891, 566, 566, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8940, 2010, 17408, 1794, 41498, 1661, -1000,
	21632, 41498, 41498, 22234, 22234, 22234, 22234, 22234, -1000, 1829,
	1826, -1000, 1817, 1815, 1816, 41498, -1000, 1500, 1292, 2071,
	19821, 349, 17408, 24040, 1403, 22234, -1000, -1000, 22234, 41498,
	8333, -1000, -1000, 0, -32, -1000, -1000, -1000, -1000, 3213,
	-1000, -1000, 2977, 2008, 1917, -1000, -1000, -1000, -1000, -1000,
	1497, -1000, 1491, 1494, 1480, 178, -1000, 1687, 1939, 619,
	619, -1000, 996, -1000, 1184, 1183, 1175, -1000, -1000, -1000,
	431, -1000, 1988, 41498, 1793, 1790, 1788, -1000, -400, 994,
	1707, 1685, 17408, 1706, 2083, 1469, 41498, -1000, -1000, 41498,
	-1000, 165, -1000, 271, 41498, -1000, -1000, -1000, 318, 41498,
	-1000, 7008, -1000, -1000, -1000, 168, -1000, -1000, -1000, -1000,
	-1000, -1000, 41498, 190, -1000, 1705, 1126, -1000, -1000, 1733,
	-1000, -1000, -1000, -1000, 160, 225, 153, 1170, 153, -1000,
	41498, 504, 1792, 41498, -1000, -1000, -1000, 753, 753, -1000,
	-1000, 1936, -1000, 1184, 1409, 18010, 18010, -1000, 572, -1000,
	1661, -150, 1702, 1702, -1000, 1702, 1703, -1000, 1702, 132,
	1702, 107, 1702, -1000, -1000, -150, 1292, 1055, 1315, -78,
	-1000, 989, 17408, 1560, 1549, 1409, -1000, 1701, 1690, 17408,
	1409, 1409, 1409, -1000, 989, 1360, 1532, 1384, -1000, -1000,
	-1000, -1000, 1484, 1409, 1472, -269, 1292, 1467, 1467, 1467,
	1467, 1467, 1464, 1464, 1464, 1464, -1000, -1000, 1292, -1000,
	-1000, 2044, 2044, 2044, 1444, 42100, 41498, -1000, -1000, -1000,
	-1000, 2101, 2099, 1471, -1000, -1000, 66, 385, -1000, 1882,
	1891, -1000, 2078, 1893, 2077, -1000, -1000, -1000, -1000, -1000,
	989, -1000, 1965, 1381, -1000, 623, 1450, -1000, -1000, 16204,
	1446, 1857, 486, 1444, 1520, 1954, 1773, 1781, 1940, -1000,
	-1000, -1000, -1000, 1825, -1000, 1802, -1000, -1000, 1671, -1000,
	-1000, 1379, 1292, 1375, 319, 22234, 1459, 1459, -1000, 483,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 830, 6673, 2137,
	-1000, 1165, -1000, 1074, 204, 991, -1000, -1000, 619, 619,
	-1000, 745, 739, -1000, 41498, 1689, -1000, 311, 1157, 311,
	974, -1000, 934, -1000, -1000, -1000, -1000, 1680, 1751, -1000,
	-1000, -1000, -1000, 41498, -1000, -1000, 41498, 41498, 41498, 1686,
	2073, -1000, 17408, 1684, 622, 1455, 41498, 41498, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 419,
	619, -353, 281, 270, 619, 619, 619, -401, -1000, -1000,
	1439, 1435, -1000, -140, -1000, 17408, -1000, -1000, -1000, 958,
	958, -1000, 1671, -1000, -1000, -1000, 1316, -1000, -1000, -120,
	41498, 41498, 41498, 41498, -1000, 858, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 572, 18010,
	1292, -1000, -1000, 311, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1292, -1000, 17408, -1000, 17408, -1000, 2010, 1153, 989,
	17408, 17408, -1000, 929, 924, 1409, -1000, -1000, -1000, 1292,
	18612, -1000, 18612, -1000, 17408, 233, 615, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1661, 1885,
	1661, 1661, 24040, -1000, -1000, 2099, 2093, 2069, 1879, 1881,
	1881, 1882, -1000, 2068, 2067, -1000, 1151, 2065, 1145, 702,
	-1000, 41498, 17408, 1661, -1000, 338, 41498, 1661, 41498, -1000,
	2090, -1000, -1000, 17408, 1681, -1000, 17408, -1000, -1000, -1000,
	-1000, -1000, -1000, 7197, 2101, 1459, -1000, -1000, 582, -1000,
	17408, -1000, -1000, -1000, 5916, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1142, 1140, -1000, -1000, 1673, 17408, -1000,
	-1000, -1000, 1314, 1309, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1671, -1000, -1000, -1000, -1000, 318, -392, 1427,
	41498, 905, -1000, 1415, 1469, 305, 1661, 1134, 619, 619,
	619, 903, 880, 28254, 1413, -1000, 41498, 352, -1000, 318,
	-1000, -145, -146, 1409, -1000, -1000, 2007, -1000, -1000, 10761,
	-1000, -1000, 1670, 1747, -1000, -1000, -1000, 216, -1000, -1000,
	-1000, 1409, 1409, 1292, -1000, 1409, 1409, 1305, 1294, -1000,
	-1000, 1384, -1000, 873, -1000, 233, 1292, 1779, -1000, -1000,
	7197, -1000, 24642, -1000, 2060, 2058, 28856, 28856, 589, 2093,
	-1000, 17408, 17408, 1873, 872, -1000, -1000, -1000, -1000, 1130,
	1124, -1000, 1111, -1000, 2136, -1000, 989, -1000, 1661, -1000,
	478, 1450, -1000, 2010, 989, 41498, 989, 49, 2090, -1000,
	1409, -1000, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661,
	1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661,
	1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661, 1661,
	1661, 1661, 1661, 1661, -1000, -1000, 41498, 1260, -1000, -1000,
	2000, 1377, 64, -1000, 1373, -1000, -1000, 493, -1000, 17408,
	-1000, 28254, 1110, 956, -1000, -1000, -1000, -1000, -401, -1000,
	-1000, -1000, -1000, -1000, -1000, 349, 1457, -1000, 617, 41498,
	41498, 1292, 283, -129, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17408, -1000, 1292, 1778, -1000, -232, -1000,
	1368, -1000, -1000, -1000, -1000, -1000, 1368, 1368, -1000, -1000,
	989, 1452, -1000, 871, -1000, -1000, -1000, -1000, -1000, 41498,
	1450, 41498, -1000, 1351, 1292, 1661, 2010, -1000, 1347, -1000,
	349, -1000, 1657, 1685, -1000, -1000, -1000, 15602, -1000, -1000,
	-1000, -1000, -1000, 184, -119, 10761, 7726, 1345, -1000, -1000,
	1836, -115, -134, 1360, -1000, -322, -1000, -1000, 27652, -1000,
	-1000, -1000, -1000, -1000, 1441, -1000, -1000, 24040, 40896, -1000,
	-105, 180, -119, 17408, 1656, 1292, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1, -1000, -1000, -1000, -1000, -1000,
	1733, -1000, 1834, -1000, 1292, -1000, -1000, -1000, 1319, -1000,
	4318, -228, 1777, -1000, -57, -1000, -1000, -1000, 826, 913,
	-1000, -1000, -1000, -1000, -1000, -1000, 863, 41498, -1000, 372,
	-1000, -1000, -120, -127, -1000, -1000, 40896, -219, 571, 7197,
	-1000, 1769, 1752, 2112, -1000, -1000, -1000, -1000, -1000, -1000,
	-406, 1288, 191, -1000, -130, -1000, -1000, 1976, 49, -1000,
	2133, -1000, 2130, 653, 653, -1000, 878, -406, -1000, -135,
	-231, -1000, -1000, -1000, -1000, -1000, 369, 941, -1000, -1000,
	-1000, -1000, 7197, -1000, -1000, -1000, 223, 223, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2483, 2482, 26, 6, 38, 37, 2481, 49, 103,
	197, 27, 202, 106, 2480, 2476, 2471, 2470, 2469, 2467,
	2466, 241, 232, 231, 2465, 2464, 2463, 2462, 2461, 2460,
	2457, 2456, 2454, 2453, 219, 173, 192, 2452, 2449, 2448,
	130, 185, 96, 98, 189, 2447, 2443, 86, 2441, 2440,
	2439, 182, 181, 180, 740, 2438, 178, 135, 45, 2437,
	2425, 2424, 2423, 2422, 2421, 2420, 2419, 2417, 2416, 2413,
	2409, 2408, 2406, 2403, 2402, 2398, 195, 2397, 2394, 18,
	2392, 92, 2391, 2390, 2389, 2388, 141, 2384, 2382, 2380,
	28, 2378, 2376, 2375, 2371, 2368, 2365, 2363, 157, 2362,
	2361, 2360, 2359, 196, 2357, 2356, 152, 128, 120, 2355,
	2354, 124, 191, 2353, 139, 2352, 2351, 2350, 164, 2348,
	4496, 2346, 71, 80, 2345, 118, 90, 73, 69, 10,
	5, 2344, 2342, 66, 85, 2341, 115, 77, 2340, 119,
	110, 2337, 2336, 12, 8, 2335, 2, 7, 3, 76,
	2333, 2322, 122, 2320, 2317, 2316, 104, 2315, 2314, 2709,
	2313, 100, 144, 117, 82, 2312, 44, 70, 2311, 2310,
	2309, 2307, 2304, 55, 2303, 2302, 2301, 156, 48, 176,
	39, 65, 52, 154, 2300, 42, 93, 2298, 153, 151,
	2297, 63, 36, 43, 2296, 34, 148, 136, 68, 108,
	149, 2295, 2293, 61, 81, 2292, 2291, 2290, 2287, 2286,
	2285, 78, 2283, 59, 2279, 193, 2267, 14, 2264, 53,
	40, 2261, 75, 125, 79, 32, 2260, 171, 2258, 58,
	175, 142, 172, 2255, 2252, 2249, 2248, 190, 316, 2247,
	2246, 84, 177, 158, 163, 102, 2244, 322, 2243, 2242,
	107, 1296, 1803, 25, 174, 2239, 2235, 3815, 145, 33,
	19, 2234, 133, 2233, 2232, 2231, 194, 217, 126, 986,
	60, 2230, 2229, 83, 15, 2228, 2227, 2226, 2225, 2219,
	2218, 101, 35, 31, 30, 201, 88, 17, 105, 170,
	89, 2217, 2216, 2212, 137, 97, 2211, 169, 168, 140,
	162, 2210, 179, 159, 155, 2209, 680, 29, 2202, 2201,
	2199, 2198, 99, 2197, 2196, 2192, 2191, 167, 160, 138,
	94, 2189, 95, 131, 166, 165, 47, 2188, 41, 2187,
	2184, 23, 188, 24, 2183, 13, 67, 74, 22, 121,
	123, 2182, 0, 2178, 16, 184, 325, 161, 2177, 2175,
	4, 9, 11, 2173, 2172, 2170, 2168, 150, 2167, 2165,
	2164, 2163, 21, 46, 20, 1, 132, 91, 2162, 2161,
	4880, 2415, 143, 2159, 224,
}

//line sql.y:7134
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 368, 369, 369, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 342, 342,
	342, 345, 345, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	372, 372, 154, 154, 152, 152, 153, 153, 222, 222,
	24, 25, 25, 232, 232, 231, 231, 231, 233, 233,
	233, 233, 269, 269, 26, 26, 26, 26, 26, 104,
	104, 344, 344, 343, 335, 335, 334, 334, 333, 341,
	341, 340, 340, 339, 38, 39, 48, 48, 48, 48,
	49, 50, 346, 346, 308, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 310, 310, 296, 296, 309, 309, 309, 309, 309,
	309, 309, 295, 295, 115, 115, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 361, 361, 361, 360, 360, 202, 202,
	202, 202, 202, 202, 202, 202, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 362, 362, 362, 362, 274, 274, 274,
	274, 277, 277, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 276, 276, 276, 276, 276, 278, 278, 278,
	278, 278, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 280, 280,
	280, 280, 280, 280, 280, 280, 294, 294, 281, 281,
	289, 289, 290, 290, 290, 291, 291, 291, 292, 292,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 288,
	288, 287, 287, 287, 297, 322, 322, 321, 321, 319,
	319, 319, 319, 319, 319, 319, 319, 306, 306, 316,
	316, 316, 316, 316, 305, 305, 301, 301, 301, 302,
	302, 303, 303, 300, 300, 304, 304, 318, 318, 317,
	317, 298, 298, 299, 299, 324, 363, 363, 363, 363,
	363, 364, 364, 325, 353, 355, 355, 355, 354, 354,
	351, 352, 350, 350, 350, 350, 350, 81, 81, 81,
	245, 245, 246, 246, 314, 314, 313, 313, 313, 315,
	315, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 240, 240, 240, 349, 349, 349, 349, 349,
	349, 348, 348, 348, 311, 311, 311, 347, 347, 57,
	57, 186, 186, 366, 366, 367, 367, 367, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 327, 327, 58, 58, 3, 3, 142, 144,
	145, 145, 143, 143, 143, 143, 143, 143, 60, 60,
	59, 59, 147, 146, 148, 148, 148, 1, 1, 2,
	2, 4, 4, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 293, 293, 293, 326, 326,
	328, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 91, 91, 90, 93, 93, 93, 93, 93,
	93, 93, 93, 330, 330, 330, 61, 61, 331, 282,
	283, 284, 5, 6, 307, 329, 100, 100, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 239,
	239, 248, 248, 238, 238, 262, 262, 262, 241, 241,
	241, 242, 242, 359, 359, 359, 235, 235, 64, 64,
	64, 66, 66, 67, 68, 68, 264, 264, 265, 265,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 356, 356, 357, 358, 358, 358, 358,
	73, 75, 31, 31, 31, 31, 31, 31, 110, 110,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 99, 99, 373, 76, 77,
	77, 103, 103, 103, 96, 96, 96, 102, 102, 102,
	16, 16, 17, 221, 221, 18, 18, 107, 107, 109,
	109, 109, 109, 109, 111, 111, 111, 111, 111, 111,
	111, 106, 106, 108, 108, 108, 108, 255, 255, 255,
	254, 254, 136, 136, 138, 137, 137, 139, 139, 140,
	140, 140, 140, 184, 184, 162, 162, 219, 219, 217,
	217, 218, 218, 220, 220, 220, 220, 223, 223, 141,
	141, 141, 141, 149, 149, 150, 150, 151, 151, 263,
	263, 260, 260, 260, 259, 259, 155, 155, 155, 157,
	156, 156, 156, 156, 158, 158, 160, 160, 159, 159,
	161, 166, 166, 165, 165, 163, 163, 163, 163, 164,
	164, 164, 164, 167, 167, 120, 120, 120, 120, 120,
	120, 120, 131, 131, 131, 131, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 83, 83, 83, 236, 236, 168, 168,
	176, 176, 176, 176, 169, 169, 169, 169, 169, 169,
	169, 177, 177, 177, 183, 178, 178, 174, 174, 174,
	174, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 271,
	271, 338, 338, 337, 337, 336, 336, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 374, 374,
	285, 285, 285, 285, 175, 175, 175, 175, 175, 101,
	101, 101, 101, 101, 268, 268, 268, 272, 272, 272,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 273, 273, 189, 189, 97,
	97, 187, 187, 188, 190, 190, 185, 185, 185, 171,
	171, 171, 191, 191, 192, 192, 193, 193, 195, 194,
	194, 196, 197, 197, 197, 198, 198, 199, 199, 199,
	47, 47, 47, 47, 47, 42, 42, 42, 42, 43,
	43, 43, 43, 112, 112, 112, 112, 114, 114, 113,
	113, 79, 79, 80, 80, 80, 118, 118, 119, 119,
	119, 116, 116, 117, 117, 215, 215, 200, 200, 200,
	207, 207, 207, 203, 203, 205, 205, 205, 206, 206,
	206, 204, 212, 212, 214, 214, 213, 213, 209, 209,
	210, 210, 211, 211, 211, 208, 208, 170, 170, 170,
	170, 170, 216, 216, 216, 216, 224, 224, 180, 180,
	182, 182, 181, 135, 225, 225, 229, 226, 226, 230,
	230, 230, 230, 230, 227, 227, 228, 228, 256, 256,
	256, 234, 234, 247, 247, 243, 243, 244, 244, 237,
	237, 249, 249, 249, 74, 179, 179, 323, 323, 320,
	252, 252, 253, 253, 257, 257, 261, 261, 258, 258,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 370,
	371, 266, 267, 267, 267,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 7, 7, 6, 2, 2,
	3, 3, 3, 1, 1, 1, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 5, 5,
	6, 4, 4, 8, 6, 8, 6, 8, 5, 4,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 6, 6, 6,
	4, 4, 4, 7, 8, 6, 5, 6, 8, 11,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 0,
	2, 0, 2, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -368, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 220, -49, -39, 221,
	-50, 223, 222, 259, 224, 252, 74, 305, 306, 308,
	309, 310, 311, -85, 257, 258, 226, 36, 45, 33,
	34, 37, 230, 265, 266, 229, -10, -34, 8, -370,
	11, 436, 254, 253, 28, -12, 470, 86, -369, 611,
	-215, -200, 22, 33, 29, -199, -195, -103, -200, 20,
	18, 7, -76, -373, -76, -76, 12, 13, -76, -308,
	-310, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -332, -44, -41, 225, 222, 269,
	120, 121, 259, 260, 261, 224, 243, 258, 262, 257,
	278, -40, 81, 33, 470, 473, -315, 221, 227, 228,
	437, 123, 122, 75, 223, -312, 359, 503, 581, -56,
	583, 102, 104, 582, 44, 233, 584, 585, 586, 510,
	587, 242, 588, 589, 590, 591, 597, 552, 598, 599,
	600, 124, 7, -76, -261, -257, -342, -251, 89, 90,
	91, 467, 245, 501, 502, 294, 81, 41, 476, 356,
	359, 503, 581, 305, 319, 313, 340, 332, 468, 504,
	477, 297, 246, 282, 578, 330, 132, 583, 300, 505,
	260, 364, 365, 506, 366, 102, 308, 403, 596, 299,
	507, 594, 104, 582, 79, 51, 44, 255, 328, 229,
	324, 584, 283, 508, 479, 276, 123, 120, 603, 36,
	322, 50, 30, 593, 122, 49, 585, 147, 509, 586,
	510, 368, 347, 572, 48, 369, 261, 511, 84, 266,
	472, 303, 580, 370, 323, 371, 293, 592, 226, 512,
	564, 372, 373, 573, 513, 348, 352, 514, 395, 374,
	610, 52, 515, 516, 574, 121, 517, 78, 587, 80,
	317, 318, 518, 291, 244, 397, 344, 449, 456, 457,
	108, 109, 452, 110, 458, 111, 459, 460, 461, 450,
	112, 105, 451, 462, 463, 345, 346, 113, 464, 107,
	106, 453, 455, 114, 465, 242, 35, 375, 469, 295,
	58, 270, 398, 46, 350, 607, 45, 568, 519, 571,
	343, 339, 446, 53, 520, 521, 522, 523, 588, 342,
	316, 338, 602, 4, 288, 589, 62, 228, 354, 353,
	355, 277, 394, 335, 524, 525, 526, 249, 82, 527,
	325, 21, 528, 529, 376, 284, 530, 56, 531, 532,
	401, 258, 533, 54, 590, 39, 534, 263, 604, 591,
	535, 536, 537, 538, 265, 539, 378, 540, 377, 349,
	351, 272, 379, 471, 541, 304, 321, 262, 595, 542,
	250, 579, 264, 269, 257, 402, 251, 543, 544, 545,
	546, 547, 298, 563, 548, 549, 309, 597, 447, 43,
	550, 551, 552, 553, 554, 292, 287, 396, 405, 61,
	83, 361, 555, 556, 577, 315, 285, 557, 306, 55,
	598, 599, 600, 279, 601, 9, 608, 609, 381, 124,
	289, 290, 47, 336, 271, 558, 301, 559, 326, 327,
	341, 314, 337, 307, 565, 273, 382, 448, 259, 560,
	404, 286, 357, 362, 302, 475, 278, 383, 576, 474,
	334, 331, 280, 561, 384, 234, 274, 275, 562, 566,
	385, 386, 296, 387, 388, 389, 390, 391, 393, 392,
	281, 473, 312, 329, 363, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 445, 232, -76, 232, -159, -257, 232,
	-227, 365, -248, 367, 380, 375, 385, 373, -239, 376,
	378, 272, -359, 395, 232, 382, 220, 368, 377, 386,
	387, 296, 393, 388, 392, 281, 389, 390, 391, -342,
	173, 586, 601, 132, 333, 372, 370, 396, 568, -257,
	307, -264, 312, -252, -342, -251, 310, -159, -82, 564,
	224, -266, -266, -105, 568, 570, -178, -120, 140, -131,
	-134, -125, -126, -172, -173, -174, -175, -132, -185, 162,
	163, 170, 141, -183, -135, 26, 466, 438, 437, 173,
	31, 216, 68, 69, 440, 441, 143, 57, 413, 414,
	-133, 408, 415, 410, 443, 444, 115, 445, 105, 107,
	106, 446, 447, 448, 345, 346, 449, 450, 451, 108,
	109, 110, 111, 112, 113, 114, 452, 455, 453, 454,
	456, 457, 458, 463, 464, 459, 460, 461, 462, 465,
	-252, -257, 237, 407, 231, 168, 436, -127, -123, -8,
	-181, 406, 411, 412, 416, 409, -342, -251, -129, -128,
	-168, 92, 98, 103, 99, -365, 116, -370, 93, 94,
	95, 96, 97, 117, 118, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 44, 381, 381,
	-159, -76, -76, -76, -76, -193, -103, -195, -10, -8,
	-370, 8, -76, -8, -9, -13, -34, -36, 497, -35,
	-257, -200, -215, 12, 158, 42, 50, -198, -199, -12,
	-8, -120, 19, 23, 24, -108, 164, -120, -257, -77,
	-108, -237, 236, -76, -76, -226, -269, 307, -230, 396,
	395, -253, -228, -252, -250, -227, 394, 225, 23, 139,
	25, 27, 142, 173, 127, 19, 143, 37, 227, 333,
	243, 172, 239, 437, 220, 72, 478, 408, 410, 406,
	413, 439, 440, 407, 367, 31, 13, 480, 28, 253,
	24, 38, 166, 222, 146, 481, 256, 26, 254, 115,
	118, 483, 22, 75, 248, 14, 241, 40, 16, 484,
	485, 17, 237, 236, 158, 233, 70, 11, 216, 29,
	155, 66, 486, 134, 487, 488, 489, 490, 128, 68,
	156, 20, 605, 411, 412, 33, 569, 466, 267, 168,
	73, 59, 570, 140, 409, 491, 492, 116, 493, 119,
	76, 575, 136, 18, 71, 42, 494, 268, 495, 238,
	606, 496, 399, 497, 157, 223, 436, 69, 498, 231,
	380, 8, 442, 32, 252, 240, 126, 67, 499, 232,
	145, 443, 444, 235, 129, 117, 7, 133, 34, 12,
	74, 77, 414, 415, 416, 57, 125, 470, 144, 15,
	500, 400, 138, 132, -309, 156, -295, -299, -252, 247,
	-325, 243, -159, -318, -317, -252, -370, -104, -247, 233,
	241, 240, 133, -346, 136, 289, 407, 231, -51, -52,
	-53, -227, 172, 585, -86, 264, 268, 87, 87, -299,
	-298, -297, -347, 268, 247, -324, -316, 239, 248, -305,
	240, 241, -300, 233, 134, -347, -300, 238, 248, 243,
	247, 268, 268, 124, 268, 124, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 263, -306, 148, -306, 474,
	474, -312, -347, 243, 233, -347, -347, 235, 35, 35,
	-249, -300, 235, 25, -306, -306, -306, -227, 172, -306,
	-306, -306, -306, 276, 276, -306, -306, -306, -306, -306,
	-306, -306, -306, -306, -306, -306, -306, -306, -306, -306,
	-306, -306, 232, -346, -112, 392, 296, 81, -54, 278,
	-37, -159, -247, 233, 234, -346, 265, -159, 217, -159,
	-241, 156, 15, -241, -238, 381, 379, 366, 371, -241,
	-241, -241, -241, 279, 364, -301, 233, 35, 244, 381,
	279, 364, 279, 280, 279, 280, 374, 384, 279, -262,
	14, 158, 407, 369, 373, 272, 232, 273, 234, 383,
	280, -262, 93, -242, 156, 381, 275, -241, -241, -267,
	-370, -253, 333, -342, 571, -267, -267, 32, 90, 235,
	-252, -78, -252, 93, -15, -11, -22, -21, -23, 148,
	-110, 381, -98, 173, 586, 572, 573, 574, 571, 378,
	579, 577, 575, 279, 576, 87, 136, 138, 139, 4,
	-120, 155, -169, 148, 149, 150, 151, 152, 153, 154,
	158, 140, 142, 156, 157, 137, 159, 160, 161, 162,
	163, 164, 165, 167, 166, 168, 169, 172, 218, 219,
	-126, -126, -126, -126, -183, -370, -370, -370, -126, -236,
	-370, -126, -370, -370, -370, -370, -189, -120, -370, -374,
	-370, -374, -374, -285, -370, -285, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, 217, -370, -370, -370, -370, -370, -285,
	-285, -285, -285, -285, 103, 98, 92, -185, 99, 93,
	-252, -257, -8, -9, -178, -266, -356, -357, -162, -159,
	-370, 296, -252, -252, 265, -198, -12, -8, -193, -199,
	-195, -8, -76, -96, -109, 63, 64, -111, 24, 38,
	67, 65, 23, -371, 88, -371, -215, -371, 87, -36,
	-219, 86, 61, 43, 93, 93, 87, 21, -194, -196,
	-120, 14, -255, 4, -254, 25, -252, 93, 217, 101,
	14, -160, 29, -159, -237, -237, 87, 307, -230, -269,
	-232, -231, 397, 399, 148, -256, -252, 93, 31, 88,
	87, -159, -274, -277, -279, -278, -280, -275, -276, 330,
	331, 173, 334, 336, 337, 338, 339, 340, 341, 342,
	343, 344, 347, 32, 255, 326, 327, 328, 329, 348,
	349, 350, 351, 352, 353, 354, 355, 313, 332, 468,
	314, 315, 316, 317, 318, 319, 321, 322, 323, 324,
	325, -345, -342, 86, 88, 87, -281, 86, -120, -112,
	232, -342, 233, 233, 233, -76, 436, -306, -306, -306,
	263, 19, -44, -41, -332, 18, -40, -41, 225, 120,
	121, 222, 86, -295, 86, -304, -345, -342, 86, 134,
	238, 133, -303, -300, -303, -304, -342, -185, -342, 134,
	134, -342, -342, -223, -252, -223, -223, 23, -223, 23,
	-223, 23, 95, -252, -223, 23, -223, 23, -223, 23,
	-223, 23, -223, 23, 31, 78, 79, 80, 31, 82,
	83, 84, -185, -342, -342, -185, -295, -227, -159, -342,
	95, 95, 95, -306, -306, 95, 93, 93, 93, -306,
	-306, 95, 93, -259, -257, 93, 93, -348, 249, 293,
	295, 95, 95, 95, 95, 31, 93, -349, 31, 593,
	592, 594, 595, 596, 93, 95, 31, 95, 31, 95,
	-252, 86, -159, -118, 283, 220, 222, 225, 76, 93,
	297, 301, 302, 148, 44, 87, 235, 232, -342, -243,
	237, -243, -252, -258, -257, -250, 93, -120, -302, 14,
	158, -262, -262, -241, -159, -302, -262, -241, -159, -241,
	-241, -241, -241, -262, -262, -262, -241, -257, -257, -159,
	-159, -159, -159, -159, -159, -159, -267, -242, -241, 571,
	93, -235, 14, 76, -267, -267, -265, 310, 344, 565,
	566, 567, 87, 470, -152, -159, 571, 571, 571, 571,
	571, 571, -120, -120, -120, -120, 493, -176, 116, 140,
	117, 118, -134, -177, -181, -183, 100, 158, 142, 156,
	157, -125, -126, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -125, -268, -252, 93, 173,
	-130, -129, 99, -365, -130, -106, -108, -120, -120, -342,
	-252, -106, -106, -120, -102, 24, 38, -187, -188, 144,
	-185, -371, -371, 95, 99, -252, -252, -95, -94, 418,
	419, 420, 421, 423, 424, 425, 428, 429, 433, 434,
	417, 435, 422, 427, 430, 431, 432, 426, 329, -120,
	-120, -120, -120, -120, -120, -83, -120, 127, 128, 129,
	-120, -120, -179, -178, -341, -340, -339, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-107, 24, 38, -106, -253, -258, -250, -106, -107, -107,
	-106, -106, 217, -215, -371, 87, -358, 399, 400, 569,
	-260, 268, -259, 25, -179, 93, 14, -221, 77, -252,
	-198, -198, 63, 64, 59, -106, -111, -371, -35, 25,
	-217, -252, 62, 93, -286, -227, 356, 357, 173, -120,
	-120, 87, -197, 27, 28, -159, -254, 164, -258, -159,
	-222, 268, -159, -137, -139, -140, -141, -162, -184, -370,
	-142, 489, 486, 14, -152, -153, -161, -257, -230, -232,
	87, 398, 400, 401, 76, 119, -120, -287, 172, -314,
	-313, -312, -295, -297, -298, -299, 88, -287, -291, 362,
	361, -281, -281, -281, -281, -281, -286, -286, -286, -286,
	86, 86, -281, -281, -281, -281, -289, 86, -289, -289,
	-290, 86, -290, -325, -120, -322, -321, -319, -320, 242,
	102, 562, 518, 470, 510, 552, 77, -317, -197, 95,
	-371, -118, -244, 237, -323, -320, -342, -342, -342, -244,
	-342, 93, -342, 93, -342, 93, -87, -58, -1, 605,
	606, 607, 87, 19, -296, -295, -57, 293, -328, -329,
	268, -324, -318, -304, 134, -303, -304, -304, -342, 87,
	29, 124, 124, 124, 124, 470, 222, 32, -245, 509,
	140, 562, 518, -295, -57, -268, 235, -268, -268, 93,
	93, -240, 601, -152, -114, 285, 148, 274, 274, 232,
	232, 287, -159, 298, 300, 299, 297, 301, 302, 23,
	23, 23, 286, 288, 290, 276, -159, -159, -243, 76,
	-154, -159, 26, -257, -159, -241, -241, -159, -241, -241,
	-159, -252, -98, 399, 87, 470, 22, -99, 22, -370,
	116, 117, 118, -177, -125, -126, -125, 139, 256, 87,
	-371, 25, 87, 77, -371, -371, -371, 87, 14, -106,
	-190, -188, 146, -120, -371, -371, -371, 87, 87, 14,
	-272, 25, -371, -371, -371, -371, -371, -189, -371, 14,
	87, 87, -371, -371, 87, 87, -371, 87, 87, 87,
	-338, 87, 87, 87, 87, -371, -371, -371, -371, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, -371,
	-371, -106, -106, -370, 217, -371, -371, -371, -371, -371,
	-253, -357, 568, 400, -166, -165, -163, 74, 236, 75,
	-370, -259, -371, -130, 90, -218, 90, -217, -171, -252,
	95, 99, -200, -136, -138, 14, -111, -183, 88, 87,
	-286, -204, -209, -238, -252, 93, 173, -288, 173, -288,
	356, 357, -196, 217, -167, 15, -170, 32, 57, -11,
	-370, -370, 32, 87, -155, -157, -156, -158, 66, 70,
	72, 67, 68, 69, 73, -263, 25, -137, -9, -8,
	-370, -370, -370, -159, -152, -372, 14, 77, -372, 87,
	217, -231, -233, 402, 399, 405, -342, 93, -86, 87,
	-312, -299, -201, -115, 40, -292, 363, -286, 477, -286,
	-294, 93, -294, 95, 95, 88, -47, -42, -43, 33,
	81, -319, -306, 93, 39, -306, -306, -252, 88, -197,
	-114, -159, 140, 76, -323, -323, -323, -257, -2, 604,
	610, 134, 86, 366, 18, -217, 87, 88, -186, 294,
	88, -88, -252, 88, 86, -304, -304, -252, -370, 232,
	31, 31, 562, 518, 509, -57, -186, -287, -342, 603,
	602, 88, 234, 292, -119, 413, -116, 93, 89, -159,
	-159, -159, -159, -159, 225, 222, -366, 303, -366, 277,
	235, -152, -159, 87, -81, 251, 246, -262, -262, 33,
	-159, 399, 580, 578, -120, 139, 256, -134, -126, -108,
	467, -270, 173, 330, 255, 328, 324, 344, 335, 361,
	326, 362, 323, 322, 321, -270, -268, -120, -120, -193,
	147, -120, 145, -120, -120, -120, -371, 173, 330, 14,
	-120, -120, -120, -339, -120, -120, -120, -337, -336, -130,
	-185, -371, -337, -120, -120, -336, -336, -340, -340, -340,
	-340, -340, -178, -178, -178, -178, -371, -371, -107, -253,
	-163, -300, -300, -300, -223, 87, -234, 22, 14, 57,
	57, -136, -167, -137, -111, -252, -207, 564, -212, 46,
	-210, -211, 47, -208, 48, 56, -288, -288, 164, -198,
	-120, -224, 76, -225, -229, -185, -180, -182, -181, -370,
	-216, -371, -252, -223, -225, -139, -140, -140, -139, -140,
	66, 66, 66, 71, 66, 71, 66, -156, -257, -371,
	-371, -9, -9, -120, -260, 77, -137, -137, -161, -257,
	164, 399, 403, 404, -312, -364, 116, 140, 31, 76,
	359, 102, -362, 172, 506, 557, 562, 518, 510, 552,
	-363, 238, 133, 134, 250, 25, 41, 88, 87, 88,
	87, 88, 87, -246, -245, -43, -42, -306, -306, 95,
	-342, 93, 93, 234, 26, -159, 76, 76, 76, -89,
	608, 95, 86, -3, 81, -120, 86, 19, -295, -185,
	-330, -282, -331, -283, -284, -5, -6, -307, -92, 57,
	102, -61, 44, 233, 588, 589, 124, -370, 601, -322,
	-217, -326, -328, -159, -122, -370, -121, -123, -127, 162,
	163, -186, -159, -113, 283, 291, 86, -117, 90, -344,
	77, 274, 359, 274, -367, 304, 93, -367, -159, -81,
	-47, -159, -241, -241, 33, -342, -371, -134, -126, -370,
	-273, 476, -281, -281, -281, -290, -281, 318, -281, 318,
	-281, -273, -371, 87, -371, 22, -371, -97, 442, -120,
	87, 87, -371, 86, 86, -120, -371, -371, -371, -338,
	87, -371, 87, -371, 87, -271, 563, -371, -371, -371,
	-371, -371, -371, -371, -371, -371, -371, -371, -164, 22,
	-164, -164, -371, 90, -159, -167, -191, 16, -204, 51,
	336, -214, -213, 55, 47, -211, 19, 49, 19, 30,
	-224, 87, 148, 87, -371, -371, 87, 57, 217, -371,
	-167, -150, -149, 76, 77, -151, 76, -149, 66, 66,
	-219, -371, -371, 87, -222, -137, -167, -167, 217, 116,
	-370, -124, -133, -122, 12, 93, 93, -342, -361, 592,
	593, 31, 95, -306, -306, 134, 134, -159, 86, -286,
	93, -286, 95, 95, 31, 82, 83, 84, 31, 78,
	79, 80, -159, -159, -159, -159, -327, 86, 19, -120,
	86, 148, 88, -217, -217, 270, 158, -306, 586, 276,
	276, -306, -306, -306, -91, -90, 608, 88, -371, 87,
	-293, 470, 473, -120, -128, -128, -219, 88, -335, 470,
	-343, -252, -252, -252, -252, 95, 97, -125, -371, -286,
	-371, -120, -120, -198, 93, -120, -120, 95, 95, -371,
	-371, -337, -336, -120, -371, -147, -146, -148, 572, 116,
	31, -270, -370, 66, 18, 16, -370, -370, -260, -191,
	-192, 17, 19, -205, 53, -203, 52, -203, -213, 19,
	19, 93, 19, 93, 134, -229, -120, -182, 57, -11,
	-252, -180, -252, -193, -120, 86, -120, -130, -167, -167,
	-120, -173, 445, 105, 107, 106, 446, 447, 448, 345,
	346, 449, 450, 451, 108, 109, 110, 111, 112, 113,
	114, 452, 455, 453, 456, 457, 458, 463, 464, 459,
	460, 461, 462, 465, 93, 93, 86, -120, 88, 88,
	-219, -326, -58, 88, -217, 95, 88, 271, -181, -370,
	93, -306, -306, -306, 95, 95, -259, -371, 87, -252,
	-363, -328, 474, 474, -371, 25, -334, -333, -253, 86,
	77, -101, 158, 470, -371, -371, -371, -371, -371, 88,
	88, -371, -371, 87, -371, -146, -148, -371, 76, -130,
	-220, -371, -252, 238, 19, 19, -220, -220, -166, -192,
	-120, -178, -206, 54, 76, 119, 93, 93, 93, 12,
	-180, 217, -198, -217, -144, 366, -193, -371, -217, 88,
	25, 88, 610, 134, 88, -181, -100, -370, 267, -259,
	93, 93, -90, -93, -11, 87, 148, -217, -159, -371,
	468, 73, 471, -120, -371, 76, 481, 572, 87, -371,
	-371, -371, 76, 119, -225, -252, 88, -371, -370, -198,
	88, -202, -11, 86, -3, 267, -282, -331, -283, -284,
	-5, -6, -307, -79, 470, -333, -311, -253, 93, 95,
	88, 62, 469, 472, -338, -252, 238, -260, -145, -143,
	-252, 524, -354, -353, 466, -364, -360, 116, 140, 102,
	-362, 562, 518, 125, 126, -79, -120, 86, -371, -80,
	282, 568, -344, 62, -371, -371, 87, 22, -274, -60,
	535, -351, -352, 76, -355, 372, 534, 555, 116, 93,
	88, -217, 243, -335, 470, -143, 531, -287, -130, -352,
	76, -351, 76, 13, 12, -4, 609, 88, 284, 471,
	-59, 26, -144, -350, 251, 246, 249, 32, -350, 95,
	-4, 472, 535, 245, 31, 116, -130, -147, -146, -146,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1316, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1821, 1821, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1176, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1819, 1, 3,
	69, 73, 0, 0, 0, 56, 1185, 0, 76, 0,
	0, 831, 0, 829, 0, 1299, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1301, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1203, 153, 1317, 1314, 1315, 38, 39,
	40, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 0, 1293, 0, 686, 928, 0,
	748, 748, 0, 748, 748, 748, 748, 0, 0, 0,
	698, 0, 0, 0, 0, 745, 0, 714, 715, 0,
	745, 0, 721, 751, 0, 726, 748, 748, 729, 1822,
	0, 1822, 1822, 1284, 0, 742, 740, 754, 755, 758,
	762, 0, 767, 770, 1310, 1311, 0, 785, 47, 1555,
	777, 790, 791, 0, 823, 824, 43, 1025, 0, 950,
	955, 966, 979, 980, 981, 982, 983, 985, 986, 0,
	0, 0, 0, 991, 992, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 1157, 0, 1118, 1118,
	1042, 1118, 1120, 1120, 0, 0, 0, 1818, 1596, 1604,
	1605, 1627, 1713, 1762, 1600, 1601, 1582, 1594, 1597, 1585,
	1586, 1588, 1590, 1595, 1602, 1608, 1587, 1607, 1606, 0,
	1583, 1584, 1589, 1599, 1603, 1591, 1592, 1593, 1598, 1609,
	1166, 0, 0, 0, 0, 0, 0, 273, 274, 1024,
	1273, 1120, 1120, 1120, 1120, 1120, -2, -2, 219, 220,
	221, 222, 223, 224, 225, 0, 215, 0, 278, 279,
	275, 276, 277, 1008, 1009, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 1821, 0, 800,
	0, 0, 0, 0, 0, 1185, 0, 1177, 1176, 61,
	0, 827, -2, 0, 0, 0, 0, 45, 0, 50,
	887, 75, 74, 1225, 0, 0, 0, 57, 1186, 65,
	67, 1187, 0, 832, 833, 0, 863, 867, 0, 828,
	0, 0, 1300, 1299, 1299, 100, 0, 1758, 1277, -2,
	-2, 0, 0, 1312, 1313, 1286, -2, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, -2, 0, 0, 165, 166, 0, 41,
	404, 0, 161, 0, 397, 338, 0, 1203, 0, 0,
	0, 0, 0, 827, 0, 1294, 142, 143, 150, 151,
	152, 377, 377, 377, 549, 0, 0, 153, 153, 508,
	509, 510, 0, 0, -2, 402, 0, 488, 0, 0,
	391, 391, 395, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 378, 0, 547,
	548, 440, 0, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 1302, 1303, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1216, 0, 0, 0, -2, 0,
	678, 0, 0, 0, 1295, 1295, 0, 685, 0, 687,
	688, 0, 0, 689, 0, 745, 745, 743, 744, 691,
	692, 693, 694, 748, 0, 0, 386, 387, 388, 745,
	748, 0, 748, 748, 748, 748, 745, 745, 745, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	751, 748, 0, 722, 0, 723, 724, 727, 728, 730,
	1823, 1824, 1332, 1822, 1822, 734, 738, 1285, 760, 768,
	771, 788, 786, 787, 789, 781, 782, 783, 784, 0,
	802, 803, 808, 0, 0, 0, 0, 814, 815, 816,
	0, 0, 819, 820, 821, 0, 0, 0, 0, 0,
	948, 0, 0, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	987, 988, 989, 990, 993, 0, 0, 0, 998, 999,
	0, 0, 0, 0, 0, 837, 0, 1158, 0, 1040,
	0, 1041, 1043, 1044, 0, 1045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 847, 0, 0, 847, 847, 0, 0, 208,
	209, 210, 211, 212, 226, 227, 228, 229, 230, 280,
	1166, 0, 1024, 0, 0, 44, 792, 793, 0, 911,
	1305, 0, 0, 843, 0, 55, 64, 66, 1185, 59,
	1185, 0, 849, 0, 0, -2, -2, 850, 856, 857,
	858, 859, 860, 52, 1820, 53, 0, 72, 0, 46,
	0, 0, 0, 0, 350, 1228, 0, 0, 1178, 1179,
	1182, 0, 864, 1638, 868, 0, 870, 871, 0, 830,
	0, 98, 0, 927, 0, 0, 0, 1758, 1283, 0,
	102, 103, 0, 0, 0, 361, 1288, 1289, 1290, -2,
	384, 0, 361, 345, 288, 289, 290, 338, 292, 338,
	338, 338, 338, 350, 350, 350, 350, 321, 322, 323,
	324, 325, 0, 0, 307, 338, 338, 338, 338, 328,
	329, 330, 331, 332, 333, 334, 335, 293, 294, 295,
	296, 297, 298, 299, 300, 301, 340, 340, 340, 342,
	342, 0, 42, 0, 365, 0, 1182, 0, 0, 1216,
	1297, 1307, 0, 0, 0, 1297, 120, 0, 0, 0,
	550, 584, 502, 538, 551, 0, 505, 506, -2, 0,
	0, 487, 0, 489, 0, 385, 0, -2, 0, 395,
	0, 391, 395, 392, 395, 383, 396, 528, 529, 530,
	0, 532, 533, 614, 897, 0, 0, 0, 0, 0,
	620, 621, 622, 0, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 0, 0, 0, 489, 0, 535, 0,
	441, 442, 443, 0, 0, 446, 447, 448, 449, 0,
	0, 452, 453, 454, 914, 915, 455, 456, 481, 482,
	483, 457, 458, 459, 460, 461, 462, 463, 475, 476,
	477, 478, 479, 480, 464, 465, 466, 467, 468, 469,
	472, 0, 135, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 0, 0,
	0, 0, 846, 929, 1318, 1319, 749, 750, 0, 389,
	390, 748, 748, 695, 735, 0, 748, 699, 736, 700,
	702, 701, 703, 716, 717, 748, 706, 746, 747, 707,
	708, 709, 710, 711, 712, 713, 731, 718, 719, 720,
	752, 0, 756, 757, 732, 733, 0, 769, 773, 774,
	775, 776, 0, 0, 805, 94, 810, 811, 812, 813,
	825, 818, 1026, 945, 946, 947, 0, 949, 952, 0,
	1010, 1012, 954, 956, 1021, 1022, 1023, 0, 0, 0,
	0, 0, 960, 964, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 984, 1134, 1135, 1136,
	1001, 281, 282, 0, 1002, 0, 861, 0, 0, 0,
	1000, 0, 0, 0, 0, 838, 839, 1164, 1161, 0,
	0, 1119, 1121, 0, 0, 0, 0, 0, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1137,
	0, 0, 0, 0, 0, 1157, 0, 1003, 1004, 1005,
	0, 0, 0, 1306, 0, 130, 131, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 848, 1167, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 795, 796, 798, 0,
	931, 0, 912, 0, 0, 801, 0, 842, 0, 845,
	58, 60, 854, 855, 0, 872, 851, 54, 49, 0,
	0, 889, 1226, 350, 1248, 0, 359, 359, 356, 1188,
	1189, 0, 1181, 1183, 1184, 77, 869, 865, 0, 943,
	0, 0, 926, 0, 875, 877, 878, 879, 909, 0,
	882, 0, 0, 0, 0, 0, 96, 928, 1278, 101,
	0, 0, 106, 107, 1279, 1280, 1281, 1282, 0, 573,
	-2, 436, 167, 169, 170, 171, 162, -2, 348, 346,
	347, 291, 350, 350, 315, 316, 317, 318, 319, 320,
	0, 0, 308, 309, 310, 311, 302, 0, 303, 304,
	305, 0, 306, 403, 0, 1190, 366, 367, 369, 377,
	0, 372, 373, 0, 377, 377, 0, 398, 399, 0,
	1182, 1207, 0, 0, 0, 1308, 1307, 1307, 1307, 0,
	155, 156, 157, 158, 159, 160, 609, 0, 0, 585,
	607, 608, 153, 0, 0, 163, 491, 490, 0, 641,
	0, 401, 0, 0, 395, 395, 380, 381, 531, 0,
	0, 616, 617, 618, 619, 0, 0, 0, 518, 430,
	0, 519, 520, 489, 491, 361, 0, 444, 445, 450,
	451, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 566, 567, 493, 571, 568,
	493, 572, 1204, 1205, 1206, 0, 0, 679, 0, 0,
	427, 92, 1296, 684, 745, 705, 737, 745, 697, 704,
	725, 765, 809, 0, 0, 0, 0, 817, 0, 0,
	953, 1011, 1013, 957, 0, 961, 965, 0, 0, 0,
	0, 0, 0, 0, 1007, 1031, 1032, 0, 0, 1176,
	0, 1162, 0, 0, 1039, 1122, 1123, 0, 0, 0,
	0, 0, 1050, 1051, 1052, 1053, 1054, 0, 1056, 0,
	0, 0, 1060, 1061, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 1075, 1076, 1077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	1027, 0, 0, 847, 0, 1124, 1125, 1126, 1127, 1128,
	1167, 794, 797, 799, 885, 932, 933, 0, 0, 0,
	0, 913, 1304, 840, 841, 844, -2, 0, 0, 1169,
	0, 0, 872, 943, 873, 0, 852, 51, 888, 0,
	1230, 1229, 1242, 1255, 359, 359, 353, 354, 360, 355,
	357, 358, 1180, 0, 1185, 0, 1266, 0, 0, 1258,
	0, 0, 0, 0, 0, 0, 0, 0, 916, 0,
	0, 919, 0, 0, 0, 0, 910, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 90, 91, 0, 0,
	0, 104, 105, 0, 0, 111, 362, 363, 144, 153,
	438, 168, 411, 0, 0, 287, 349, 312, 313, 314,
	0, 336, 0, 0, 0, 432, 116, 1194, 1193, 377,
	377, 368, 0, 371, 0, 0, 0, 1309, 339, 400,
	0, 134, 0, 0, 0, 0, 0, 140, 579, 0,
	0, 586, 0, 0, 0, 500, 0, 511, 512, 0,
	613, -2, 675, 365, 0, 379, 382, 898, 0, 0,
	513, 0, 516, 517, 431, 491, 522, 523, 536, 473,
	474, 471, 0, 0, 1217, 1218, 1223, 1221, 1222, 121,
	557, 559, 558, 562, 0, 0, 495, 0, 495, 555,
	0, 427, 1190, 0, 683, 428, 429, 748, 748, 804,
	95, 0, 807, 0, 0, 0, 0, 958, 962, 862,
	0, 1155, 338, 338, 1142, 338, 342, 1145, 338, 1147,
	338, 1150, 338, 1153, 1154, 1155, 0, 0, 0, 1159,
	1038, 1165, 0, 0, 0, 0, 1049, 0, 0, 0,
	0, 0, 0, 132, 133, 1091, 0, 0, 1093, 1095,
	1096, 1066, 1092, 0, 0, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1028, 1029, 0, 1168,
	934, 939, 939, 939, 0, 0, 0, 1291, 1292, 1170,
	1171, 943, 1172, 874, 853, 890, 1248, 0, 1241, 0,
	-2, 1250, 0, 0, 0, 1256, 351, 352, 866, 78,
	944, 81, 0, 1266, 1274, 0, 1257, 1268, 1270, 0,
	0, 0, 1262, 0, 943, 876, 905, 907, 0, 902,
	917, 918, 920, 0, 922, 0, 924, 925, 887, 881,
	883, 0, 0, 0, 98, 0, 943, 943, 97, 0,
	930, 108, 109, 110, 437, 172, 177, 0, 0, 0,
	182, 0, 184, 0, 0, 0, 189, 190, 377, 377,
	412, 0, 284, 286, 0, 0, 175, 350, 0, 350,
	0, 343, 0, 413, 433, 1191, 1192, 0, 0, 370,
	374, 375, 376, 0, 1298, 136, 0, 0, 0, 582,
	0, 610, 0, 0, 0, 0, 0, 0, 164, 492,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 0,
	377, 0, 0, 0, 377, 377, 377, 0, 667, 364,
	0, 0, 638, 635, 514, 0, 213, 214, 216, 0,
	0, 521, 887, 1208, 1209, 1210, 0, 1220, 1224, 124,
	0, 0, 0, 0, 569, 0, 494, 570, 680, 681,
	682, 93, 690, 696, 806, 826, 951, 959, 963, 0,
	0, 1156, 1140, 350, 1143, 1144, 1146, 1148, 1149, 1151,
	1152, 0, 997, 0, 1034, 0, 1036, 1185, 0, 1163,
	0, 0, 1048, 0, 0, 0, 1057, 1058, 1059, 0,
	0, 1065, 0, 1067, 0, 0, 0, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1030, 0, 0,
	0, 0, 911, -2, 62, 1172, 1174, 0, 1235, 1233,
	1233, 1243, 1244, 0, 0, 1251, 0, 0, 0, 0,
	82, 0, 0, 0, 1271, 0, 0, 0, 0, 99,
	1176, 899, 906, 0, 0, 900, 0, 901, 921, 923,
	880, -2, 884, 0, 943, 943, 88, 89, 0, 178,
	0, 180, 206, 207, 0, 183, 185, 186, 187, 193,
	194, 195, 188, 0, 0, 283, 285, 0, 0, 326,
	337, 327, 0, 0, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 887, 137, 138, 139, 574, 0, 584, 0,
	0, 0, 577, 0, 503, 0, 0, 0, 377, 377,
	377, 0, 0, 0, 0, 652, 0, 0, 615, 0,
	623, 0, 0, 0, 217, 218, 0, 1219, 556, 0,
	122, 123, 0, 0, 561, 496, 497, 1129, 995, 1141,
	996, 0, 0, 0, 1160, 0, 0, 0, 0, 1055,
	1063, 0, 1094, 0, 1070, 0, 0, 0, 604, 605,
	0, 1090, 0, 940, 0, 0, 0, 0, 931, 1174,
	80, 0, 0, 1238, 0, 1231, 1234, 1232, 1245, 0,
	0, 1252, 0, 1254, 0, 1275, 1276, 1269, 0, 1261,
	1264, 1260, 1263, 1185, 903, 0, 908, 0, 1176, 87,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 0, 0, 341, 344,
	0, 0, 0, 575, 0, 587, 578, 0, 665, 0,
	669, 0, 0, 0, 672, 673, 674, 651, 0, 655,
	405, 639, 636, 637, 515, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1033, 1035, 1037, 1046, 1047, 1138,
	1139, 1064, 1068, 0, 1071, 0, 0, 1072, 0, 606,
	0, 936, 893, 894, 941, 942, 0, 0, 886, 79,
	1175, 1173, 1227, 0, 1236, 1237, 1246, 1247, 1253, 0,
	1259, 0, 85, 0, 0, 0, 1185, 179, 0, 198,
	0, 583, 0, 586, 576, 663, 664, 0, 676, 668,
	670, 671, 653, -2, 1211, 0, 0, 0, 563, 994,
	0, 0, 0, 1091, 1073, 0, 602, 603, 0, 935,
	937, 938, 1239, 1240, 1267, 1265, 904, 911, 0, 86,
	418, 411, 1211, 0, 0, 0, 656, 657, 658, 659,
	660, 661, 662, 553, 1213, 127, 128, 484, 485, 486,
	121, 1130, 0, 1133, 0, 895, 896, 588, 0, 590,
	0, -2, 406, 419, 0, 173, 199, 200, 0, 0,
	203, 204, 205, 196, 197, 117, 0, 0, 677, 0,
	1214, 1215, 124, 1131, 1069, 589, 0, 0, 361, 0,
	599, 407, 408, 0, 414, 415, 416, 417, 201, 202,
	611, 0, 0, 560, 0, 591, 592, 600, 0, 409,
	0, 410, 0, 0, 0, 580, 0, 611, 1212, 0,
	0, 601, 597, 420, 422, 423, 0, 0, 421, 612,
	581, 1132, 0, 424, 425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	86, 88, 164, 162, 87, 163, 217, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:533
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:538
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:539
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:543
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:598
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:608
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:614
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:620
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:624
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:633
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:643
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:649
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:802
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:808
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:828
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:840
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:852
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:856
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:885
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:890
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:900
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:904
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:910
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:923
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:939
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:945
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:949
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:955
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:959
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:963
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:969
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:973
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:977
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:981
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:987
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:991
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:997
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1010
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1023
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1030
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1034
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1039
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1049
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1054
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1059
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1065
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1070
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1085
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1091
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1095
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1101
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1107
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1114
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1121
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1126
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1131
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1136
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1143
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1150
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1161
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1172
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1178
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1182
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1186
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1208
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1218
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1224
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1228
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1238
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1244
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1248
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1254
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1264
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1269
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1274
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1302
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1311
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1343
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1349
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1354
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1359
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1397
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1413
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1419
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1423
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1427
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1433
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1437
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1446
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1457
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1468
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1494
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1510
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1521
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1532
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1583
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1772
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1778
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1782
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1786
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1796
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1803
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1807
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1811
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1815
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2052
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2061
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2069
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2073
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2079
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2104
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2175
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2184
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2190
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2194
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2200
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2204
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2209
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2213
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2217
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2221
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2225
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2229
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2245
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2249
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2253
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2257
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2261
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2300
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2329
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2339
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2343
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2349
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2353
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2359
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2363
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2369
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2375
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2379
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2383
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2387
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2391
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2400
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2406
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2412
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2418
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2422
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2426
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2431
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2435
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2441
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2447
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2453
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2457
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2461
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2465
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2469
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2492
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2501
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2510
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2516
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2530
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2540
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2544
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2548
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2552
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2556
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2560
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2564
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2568
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2572
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2724
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2729
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2742
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2746
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2755
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2759
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2763
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2771
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2777
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2791
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2795
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2799
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2803
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2807
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2811
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2815
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2819
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2823
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2827
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2861
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2869
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2909
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2915
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2967
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2974
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2981
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2994
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3004
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3011
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3018
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3040
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3061
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3144
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3155
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3164
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3172
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3181
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3188
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3200
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3209
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3224
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3229
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3233
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3238
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3242
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3248
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3254
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3260
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3270
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3274
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3280
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3286
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3292
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3298
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3304
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3316
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3322
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3328
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3334
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3338
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3342
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3348
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3352
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3357
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3361
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3366
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3370
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3376
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3380
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3384
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3388
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3392
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3396
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3400
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3404
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3408
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3412
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3416
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3420
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3424
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3428
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3432
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3436
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3440
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3444
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3448
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3452
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3456
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3460
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3465
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3469
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3473
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3480
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3495
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3499
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3504
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3509
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3514
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3519
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3524
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3530
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3536
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3541
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3547
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3553
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3557
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3563
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3568
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3572
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3577
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3582
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3587
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3592
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3598
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3604
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3611
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3618
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3625
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3633
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3637
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3643
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3649
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3655
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3661
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3667
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3673
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3685
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3701
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3707
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3711
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3744
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3755
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3974
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3978
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4012
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4016
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4026
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4032
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4095
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4100
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4118
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4122
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4126
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4130
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4134
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4138
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4215
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4219
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4225
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4231
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4235
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4239
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4243
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4261
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4281
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4301
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4372
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4382
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4428
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4432
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4444
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4453
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4472
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4477
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4485
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4489
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4493
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4529
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4533
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4539
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4543
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4547
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4551
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4576
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4580
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4586
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4592
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4606
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4610
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4614
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4618
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4624
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4628
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4634
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4638
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4647
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4653
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4663
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4673
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4677
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4681
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4691
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4708
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4712
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4716
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4720
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4726
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4728
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4732
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4738
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4740
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4743
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4745
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4748
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4752
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4756
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4769
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4773
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4777
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4783
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4789
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4793
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4797
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4801
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4807
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4811
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4850
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4856
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4860
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4866
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4870
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4874
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4878
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4883
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4887
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4891
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4895
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4912
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4916
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4920
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4924
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5035
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5039
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5043
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5047
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5051
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5055
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5065
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5077
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5081
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5085
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5109
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5163
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5167
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5171
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5177
		{
			yyVAL.str = ""
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5181
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5187
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5191
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5198
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5202
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5206
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5210
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5216
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5220
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5224
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5228
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5232
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5236
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5240
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5246
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5250
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5254
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5261
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5267
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5271
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5550
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5559
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5565
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5569
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5575
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5579
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5585
		{
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5587
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5591
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5595
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5599
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5603
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5607
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5611
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5615
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5619
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5623
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5627
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5633
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5637
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5641
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5645
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5649
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5653
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5657
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5661
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5665
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5683
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5706
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5720
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5724
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5728
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5732
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5736
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5742
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5760
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5764
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5770
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5774
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5778
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5782
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5786
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5792
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5796
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5800
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5804
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5808
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5812
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5816
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5820
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5824
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5828
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5834
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5838
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5852
		{
			yyVAL.str = string("")
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5856
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5862
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5866
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5872
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5887
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5891
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5895
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5924
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5942
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5948
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5954
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5958
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5964
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5969
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5973
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5977
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5986
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5992
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5996
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6000
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6009
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6013
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6017
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6021
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6028
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6032
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6036
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6040
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6046
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6050
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6054
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6058
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6063
		{
			yyVAL.str = ""
		}
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6080
		{
			yyVAL.str = ""
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6084
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6090
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6094
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6099
		{
			yyVAL.str = ""
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6103
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6108
		{
			yyVAL.str = "cascaded"
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6112
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6116
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6125
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6131
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6137
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6143
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6152
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6161
		{
			yyVAL.str = ""
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6165
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6171
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6175
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6181
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6185
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6189
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6194
		{
			yyVAL.str = ""
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6198
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6202
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6207
		{
			yyVAL.str = ""
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.str = " header"
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6216
		{
			yyVAL.str = ""
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6220
		{
			yyVAL.str = " manifest on"
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6224
		{
			yyVAL.str = " manifest off"
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6229
		{
			yyVAL.str = ""
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6233
		{
			yyVAL.str = " overwrite on"
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6237
		{
			yyVAL.str = " overwrite off"
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6243
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6248
		{
			yyVAL.str = ""
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6252
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6262
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6268
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6272
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6277
		{
			yyVAL.str = ""
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6281
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6287
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6291
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6297
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6301
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6305
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6310
		{
			yyVAL.str = ""
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6314
		{
			yyVAL.str = " optionally"
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6327
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6331
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6335
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6339
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6343
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6349
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6353
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6357
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6361
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6370
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6376
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6386
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6390
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6396
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6411
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6415
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6421
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6427
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6431
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6437
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6441
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6445
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6449
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6453
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6461
		{
			yyVAL.str = "charset"
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6488
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6490
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6495
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6498
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6503
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6505
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6508
		{
			yyVAL.empty = struct{}{}
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6510
		{
			yyVAL.empty = struct{}{}
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6512
		{
			yyVAL.empty = struct{}{}
		}
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6516
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6525
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6532
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6536
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6542
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6546
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6553
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6559
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6563
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6569
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6573
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6580
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7104
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7113
		{
			decNesting(yylex)
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7118
		{
			skipToEnd(yylex)
		}
	case 1822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7123
		{
			skipToEnd(yylex)
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7127
		{
			skipToEnd(yylex)
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7131
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
