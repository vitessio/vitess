// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const EMPTY_FROM_CLAUSE = 57485
const LOWER_THAN_CHARSET = 57486
const CHARSET = 57487
const UNIQUE = 57488
const KEY = 57489
const EXPRESSION_PREC_SETTER = 57490
const OR = 57491
const XOR = 57492
const AND = 57493
const NOT = 57494
const BETWEEN = 57495
const CASE = 57496
const WHEN = 57497
const THEN = 57498
const ELSE = 57499
const END = 57500
const LE = 57501
const GE = 57502
const NE = 57503
const NULL_SAFE_EQUAL = 57504
const IS = 57505
const LIKE = 57506
const REGEXP = 57507
const RLIKE = 57508
const IN = 57509
const ASSIGNMENT_OPT = 57510
const SHIFT_LEFT = 57511
const SHIFT_RIGHT = 57512
const DIV = 57513
const MOD = 57514
const UNARY = 57515
const COLLATE = 57516
const BINARY = 57517
const UNDERSCORE_ARMSCII8 = 57518
const UNDERSCORE_ASCII = 57519
const UNDERSCORE_BIG5 = 57520
const UNDERSCORE_BINARY = 57521
const UNDERSCORE_CP1250 = 57522
const UNDERSCORE_CP1251 = 57523
const UNDERSCORE_CP1256 = 57524
const UNDERSCORE_CP1257 = 57525
const UNDERSCORE_CP850 = 57526
const UNDERSCORE_CP852 = 57527
const UNDERSCORE_CP866 = 57528
const UNDERSCORE_CP932 = 57529
const UNDERSCORE_DEC8 = 57530
const UNDERSCORE_EUCJPMS = 57531
const UNDERSCORE_EUCKR = 57532
const UNDERSCORE_GB18030 = 57533
const UNDERSCORE_GB2312 = 57534
const UNDERSCORE_GBK = 57535
const UNDERSCORE_GEOSTD8 = 57536
const UNDERSCORE_GREEK = 57537
const UNDERSCORE_HEBREW = 57538
const UNDERSCORE_HP8 = 57539
const UNDERSCORE_KEYBCS2 = 57540
const UNDERSCORE_KOI8R = 57541
const UNDERSCORE_KOI8U = 57542
const UNDERSCORE_LATIN1 = 57543
const UNDERSCORE_LATIN2 = 57544
const UNDERSCORE_LATIN5 = 57545
const UNDERSCORE_LATIN7 = 57546
const UNDERSCORE_MACCE = 57547
const UNDERSCORE_MACROMAN = 57548
const UNDERSCORE_SJIS = 57549
const UNDERSCORE_SWE7 = 57550
const UNDERSCORE_TIS620 = 57551
const UNDERSCORE_UCS2 = 57552
const UNDERSCORE_UJIS = 57553
const UNDERSCORE_UTF16 = 57554
const UNDERSCORE_UTF16LE = 57555
const UNDERSCORE_UTF32 = 57556
const UNDERSCORE_UTF8 = 57557
const UNDERSCORE_UTF8MB4 = 57558
const UNDERSCORE_UTF8MB3 = 57559
const INTERVAL = 57560
const WINDOW_EXPR = 57561
const JSON_EXTRACT_OP = 57562
const JSON_UNQUOTE_EXTRACT_OP = 57563
const CREATE = 57564
const ALTER = 57565
const DROP = 57566
const RENAME = 57567
const ANALYZE = 57568
const ADD = 57569
const FLUSH = 57570
const CHANGE = 57571
const MODIFY = 57572
const DEALLOCATE = 57573
const REVERT = 57574
const QUERIES = 57575
const SCHEMA = 57576
const TABLE = 57577
const INDEX = 57578
const VIEW = 57579
const TO = 57580
const IGNORE = 57581
const IF = 57582
const PRIMARY = 57583
const COLUMN = 57584
const SPATIAL = 57585
const FULLTEXT = 57586
const KEY_BLOCK_SIZE = 57587
const CHECK = 57588
const INDEXES = 57589
const ACTION = 57590
const CASCADE = 57591
const CONSTRAINT = 57592
const FOREIGN = 57593
const NO = 57594
const REFERENCES = 57595
const RESTRICT = 57596
const SHOW = 57597
const DESCRIBE = 57598
const EXPLAIN = 57599
const DATE = 57600
const ESCAPE = 57601
const REPAIR = 57602
const OPTIMIZE = 57603
const TRUNCATE = 57604
const COALESCE = 57605
const EXCHANGE = 57606
const REBUILD = 57607
const PARTITIONING = 57608
const REMOVE = 57609
const PREPARE = 57610
const EXECUTE = 57611
const MAXVALUE = 57612
const PARTITION = 57613
const REORGANIZE = 57614
const LESS = 57615
const THAN = 57616
const PROCEDURE = 57617
const TRIGGER = 57618
const VINDEX = 57619
const VINDEXES = 57620
const DIRECTORY = 57621
const NAME = 57622
const UPGRADE = 57623
const STATUS = 57624
const VARIABLES = 57625
const WARNINGS = 57626
const CASCADED = 57627
const DEFINER = 57628
const OPTION = 57629
const SQL = 57630
const UNDEFINED = 57631
const SEQUENCE = 57632
const MERGE = 57633
const TEMPORARY = 57634
const TEMPTABLE = 57635
const INVOKER = 57636
const SECURITY = 57637
const FIRST = 57638
const AFTER = 57639
const LAST = 57640
const VITESS_MIGRATION = 57641
const CANCEL = 57642
const RETRY = 57643
const LAUNCH = 57644
const COMPLETE = 57645
const CLEANUP = 57646
const THROTTLE = 57647
const UNTHROTTLE = 57648
const FORCE_CUTOVER = 57649
const EXPIRE = 57650
const RATIO = 57651
const VITESS_THROTTLER = 57652
const BEGIN = 57653
const START = 57654
const TRANSACTION = 57655
const COMMIT = 57656
const ROLLBACK = 57657
const SAVEPOINT = 57658
const RELEASE = 57659
const WORK = 57660
const CONSISTENT = 57661
const SNAPSHOT = 57662
const UNRESOLVED = 57663
const TRANSACTIONS = 57664
const BIT = 57665
const TINYINT = 57666
const SMALLINT = 57667
const MEDIUMINT = 57668
const INT = 57669
const INTEGER = 57670
const BIGINT = 57671
const INTNUM = 57672
const REAL = 57673
const DOUBLE = 57674
const FLOAT_TYPE = 57675
const FLOAT4_TYPE = 57676
const FLOAT8_TYPE = 57677
const DECIMAL_TYPE = 57678
const NUMERIC = 57679
const TIME = 57680
const TIMESTAMP = 57681
const DATETIME = 57682
const YEAR = 57683
const CHAR = 57684
const VARCHAR = 57685
const BOOL = 57686
const CHARACTER = 57687
const VARBINARY = 57688
const NCHAR = 57689
const TEXT = 57690
const TINYTEXT = 57691
const MEDIUMTEXT = 57692
const LONGTEXT = 57693
const BLOB = 57694
const TINYBLOB = 57695
const MEDIUMBLOB = 57696
const LONGBLOB = 57697
const JSON = 57698
const JSON_SCHEMA_VALID = 57699
const JSON_SCHEMA_VALIDATION_REPORT = 57700
const ENUM = 57701
const GEOMETRY = 57702
const POINT = 57703
const LINESTRING = 57704
const POLYGON = 57705
const GEOMCOLLECTION = 57706
const GEOMETRYCOLLECTION = 57707
const MULTIPOINT = 57708
const MULTILINESTRING = 57709
const MULTIPOLYGON = 57710
const ASCII = 57711
const UNICODE = 57712
const VECTOR = 57713
const NULLX = 57714
const AUTO_INCREMENT = 57715
const APPROXNUM = 57716
const SIGNED = 57717
const UNSIGNED = 57718
const ZEROFILL = 57719
const PURGE = 57720
const BEFORE = 57721
const CODE = 57722
const COLLATION = 57723
const COLUMNS = 57724
const DATABASES = 57725
const ENGINES = 57726
const EVENT = 57727
const EXTENDED = 57728
const FIELDS = 57729
const FULL = 57730
const FUNCTION = 57731
const GTID_EXECUTED = 57732
const KEYSPACES = 57733
const OPEN = 57734
const PLUGINS = 57735
const PRIVILEGES = 57736
const PROCESSLIST = 57737
const SCHEMAS = 57738
const TABLES = 57739
const TRIGGERS = 57740
const USER = 57741
const VGTID_EXECUTED = 57742
const VITESS_KEYSPACES = 57743
const VITESS_METADATA = 57744
const VITESS_MIGRATIONS = 57745
const VITESS_REPLICATION_STATUS = 57746
const VITESS_SHARDS = 57747
const VITESS_TABLETS = 57748
const VITESS_TARGET = 57749
const VSCHEMA = 57750
const VITESS_THROTTLED_APPS = 57751
const NAMES = 57752
const GLOBAL = 57753
const SESSION = 57754
const ISOLATION = 57755
const LEVEL = 57756
const READ = 57757
const WRITE = 57758
const ONLY = 57759
const REPEATABLE = 57760
const COMMITTED = 57761
const UNCOMMITTED = 57762
const SERIALIZABLE = 57763
const ADDDATE = 57764
const CURRENT_TIMESTAMP = 57765
const DATABASE = 57766
const CURRENT_DATE = 57767
const CURDATE = 57768
const DATE_ADD = 57769
const DATE_SUB = 57770
const NOW = 57771
const SUBDATE = 57772
const CURTIME = 57773
const CURRENT_TIME = 57774
const LOCALTIME = 57775
const LOCALTIMESTAMP = 57776
const CURRENT_USER = 57777
const UTC_DATE = 57778
const UTC_TIME = 57779
const UTC_TIMESTAMP = 57780
const SYSDATE = 57781
const DAY = 57782
const DAY_HOUR = 57783
const DAY_MICROSECOND = 57784
const DAY_MINUTE = 57785
const DAY_SECOND = 57786
const HOUR = 57787
const HOUR_MICROSECOND = 57788
const HOUR_MINUTE = 57789
const HOUR_SECOND = 57790
const MICROSECOND = 57791
const MINUTE = 57792
const MINUTE_MICROSECOND = 57793
const MINUTE_SECOND = 57794
const MONTH = 57795
const QUARTER = 57796
const SECOND = 57797
const SECOND_MICROSECOND = 57798
const YEAR_MONTH = 57799
const WEEK = 57800
const SQL_TSI_DAY = 57801
const SQL_TSI_WEEK = 57802
const SQL_TSI_HOUR = 57803
const SQL_TSI_MINUTE = 57804
const SQL_TSI_MONTH = 57805
const SQL_TSI_QUARTER = 57806
const SQL_TSI_SECOND = 57807
const SQL_TSI_MICROSECOND = 57808
const SQL_TSI_YEAR = 57809
const REPLACE = 57810
const CONVERT = 57811
const CAST = 57812
const SUBSTR = 57813
const SUBSTRING = 57814
const MID = 57815
const SEPARATOR = 57816
const TIMESTAMPADD = 57817
const TIMESTAMPDIFF = 57818
const WEIGHT_STRING = 57819
const LTRIM = 57820
const RTRIM = 57821
const TRIM = 57822
const JSON_ARRAY = 57823
const JSON_OBJECT = 57824
const JSON_QUOTE = 57825
const JSON_DEPTH = 57826
const JSON_TYPE = 57827
const JSON_LENGTH = 57828
const JSON_VALID = 57829
const JSON_ARRAY_APPEND = 57830
const JSON_ARRAY_INSERT = 57831
const JSON_INSERT = 57832
const JSON_MERGE = 57833
const JSON_MERGE_PATCH = 57834
const JSON_MERGE_PRESERVE = 57835
const JSON_REMOVE = 57836
const JSON_REPLACE = 57837
const JSON_SET = 57838
const JSON_UNQUOTE = 57839
const COUNT = 57840
const AVG = 57841
const MAX = 57842
const MIN = 57843
const SUM = 57844
const GROUP_CONCAT = 57845
const BIT_AND = 57846
const BIT_OR = 57847
const BIT_XOR = 57848
const STD = 57849
const STDDEV = 57850
const STDDEV_POP = 57851
const STDDEV_SAMP = 57852
const VAR_POP = 57853
const VAR_SAMP = 57854
const VARIANCE = 57855
const ANY_VALUE = 57856
const REGEXP_INSTR = 57857
const REGEXP_LIKE = 57858
const REGEXP_REPLACE = 57859
const REGEXP_SUBSTR = 57860
const ExtractValue = 57861
const UpdateXML = 57862
const GET_LOCK = 57863
const RELEASE_LOCK = 57864
const RELEASE_ALL_LOCKS = 57865
const IS_FREE_LOCK = 57866
const IS_USED_LOCK = 57867
const LOCATE = 57868
const POSITION = 57869
const ST_GeometryCollectionFromText = 57870
const ST_GeometryFromText = 57871
const ST_LineStringFromText = 57872
const ST_MultiLineStringFromText = 57873
const ST_MultiPointFromText = 57874
const ST_MultiPolygonFromText = 57875
const ST_PointFromText = 57876
const ST_PolygonFromText = 57877
const ST_GeometryCollectionFromWKB = 57878
const ST_GeometryFromWKB = 57879
const ST_LineStringFromWKB = 57880
const ST_MultiLineStringFromWKB = 57881
const ST_MultiPointFromWKB = 57882
const ST_MultiPolygonFromWKB = 57883
const ST_PointFromWKB = 57884
const ST_PolygonFromWKB = 57885
const ST_AsBinary = 57886
const ST_AsText = 57887
const ST_Dimension = 57888
const ST_Envelope = 57889
const ST_IsSimple = 57890
const ST_IsEmpty = 57891
const ST_GeometryType = 57892
const ST_X = 57893
const ST_Y = 57894
const ST_Latitude = 57895
const ST_Longitude = 57896
const ST_EndPoint = 57897
const ST_IsClosed = 57898
const ST_Length = 57899
const ST_NumPoints = 57900
const ST_StartPoint = 57901
const ST_PointN = 57902
const ST_Area = 57903
const ST_Centroid = 57904
const ST_ExteriorRing = 57905
const ST_InteriorRingN = 57906
const ST_NumInteriorRings = 57907
const ST_NumGeometries = 57908
const ST_GeometryN = 57909
const ST_LongFromGeoHash = 57910
const ST_PointFromGeoHash = 57911
const ST_LatFromGeoHash = 57912
const ST_GeoHash = 57913
const ST_AsGeoJSON = 57914
const ST_GeomFromGeoJSON = 57915
const MATCH = 57916
const AGAINST = 57917
const BOOLEAN = 57918
const LANGUAGE = 57919
const WITH = 57920
const QUERY = 57921
const EXPANSION = 57922
const WITHOUT = 57923
const VALIDATION = 57924
const ROLLUP = 57925
const UNUSED = 57926
const ARRAY = 57927
const BYTE = 57928
const CUME_DIST = 57929
const DESCRIPTION = 57930
const DENSE_RANK = 57931
const EMPTY = 57932
const EXCEPT = 57933
const FIRST_VALUE = 57934
const GROUPING = 57935
const GROUPS = 57936
const JSON_TABLE = 57937
const LAG = 57938
const LAST_VALUE = 57939
const LATERAL = 57940
const LEAD = 57941
const NTH_VALUE = 57942
const NTILE = 57943
const OF = 57944
const OVER = 57945
const PERCENT_RANK = 57946
const RANK = 57947
const RECURSIVE = 57948
const ROW_NUMBER = 57949
const SYSTEM = 57950
const WINDOW = 57951
const ACTIVE = 57952
const ADMIN = 57953
const AUTOEXTEND_SIZE = 57954
const BUCKETS = 57955
const CLONE = 57956
const COLUMN_FORMAT = 57957
const COMPONENT = 57958
const DEFINITION = 57959
const ENFORCED = 57960
const ENGINE_ATTRIBUTE = 57961
const EXCLUDE = 57962
const FOLLOWING = 57963
const GET_MASTER_PUBLIC_KEY = 57964
const HISTOGRAM = 57965
const HISTORY = 57966
const INACTIVE = 57967
const INVISIBLE = 57968
const LOCKED = 57969
const MASTER_COMPRESSION_ALGORITHMS = 57970
const MASTER_PUBLIC_KEY_PATH = 57971
const MASTER_TLS_CIPHERSUITES = 57972
const MASTER_ZSTD_COMPRESSION_LEVEL = 57973
const NESTED = 57974
const NETWORK_NAMESPACE = 57975
const NOWAIT = 57976
const NULLS = 57977
const OJ = 57978
const OLD = 57979
const OPTIONAL = 57980
const ORDINALITY = 57981
const ORGANIZATION = 57982
const OTHERS = 57983
const PARTIAL = 57984
const PATH = 57985
const PERSIST = 57986
const PERSIST_ONLY = 57987
const PRECEDING = 57988
const PRIVILEGE_CHECKS_USER = 57989
const PROCESS = 57990
const RANDOM = 57991
const REFERENCE = 57992
const REQUIRE_ROW_FORMAT = 57993
const RESOURCE = 57994
const RESPECT = 57995
const RESTART = 57996
const RETAIN = 57997
const REUSE = 57998
const ROLE = 57999
const SECONDARY = 58000
const SECONDARY_ENGINE = 58001
const SECONDARY_ENGINE_ATTRIBUTE = 58002
const SECONDARY_LOAD = 58003
const SECONDARY_UNLOAD = 58004
const SIMPLE = 58005
const SKIP = 58006
const SRID = 58007
const THREAD_PRIORITY = 58008
const TIES = 58009
const UNBOUNDED = 58010
const VCPU = 58011
const VISIBLE = 58012
const RETURNING = 58013
const FORMAT_BYTES = 58014
const FORMAT_PICO_TIME = 58015
const PS_CURRENT_THREAD_ID = 58016
const PS_THREAD_ID = 58017
const GTID_SUBSET = 58018
const GTID_SUBTRACT = 58019
const WAIT_FOR_EXECUTED_GTID_SET = 58020
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58021
const FORMAT = 58022
const TREE = 58023
const VITESS = 58024
const TRADITIONAL = 58025
const VTEXPLAIN = 58026
const VEXPLAIN = 58027
const PLAN = 58028
const LOCAL = 58029
const LOW_PRIORITY = 58030
const NO_WRITE_TO_BINLOG = 58031
const LOGS = 58032
const ERROR = 58033
const GENERAL = 58034
const HOSTS = 58035
const OPTIMIZER_COSTS = 58036
const USER_RESOURCES = 58037
const SLOW = 58038
const CHANNEL = 58039
const RELAY = 58040
const EXPORT = 58041
const CURRENT = 58042
const ROW = 58043
const ROWS = 58044
const AVG_ROW_LENGTH = 58045
const CONNECTION = 58046
const CHECKSUM = 58047
const DELAY_KEY_WRITE = 58048
const ENCRYPTION = 58049
const ENGINE = 58050
const INSERT_METHOD = 58051
const MAX_ROWS = 58052
const MIN_ROWS = 58053
const PACK_KEYS = 58054
const PASSWORD = 58055
const FIXED = 58056
const DYNAMIC = 58057
const COMPRESSED = 58058
const REDUNDANT = 58059
const COMPACT = 58060
const ROW_FORMAT = 58061
const STATS_AUTO_RECALC = 58062
const STATS_PERSISTENT = 58063
const STATS_SAMPLE_PAGES = 58064
const STORAGE = 58065
const MEMORY = 58066
const DISK = 58067
const PARTITIONS = 58068
const LINEAR = 58069
const RANGE = 58070
const LIST = 58071
const SUBPARTITION = 58072
const SUBPARTITIONS = 58073
const HASH = 58074

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 157,
	750, 157,
	-2, 165,
	-1, 53,
	148, 165,
	190, 165,
	362, 165,
	-2, 524,
	-1, 61,
	38, 783,
	253, 783,
	264, 783,
	299, 797,
	300, 797,
	-2, 785,
	-1, 66,
	255, 821,
	-2, 819,
	-1, 122,
	252, 1618,
	-2, 131,
	-1, 124,
	1, 158,
	750, 158,
	-2, 165,
	-1, 135,
	149, 409,
	258, 409,
	-2, 513,
	-1, 154,
	148, 165,
	190, 165,
	362, 165,
	-2, 533,
	-1, 747,
	176, 41,
	-2, 43,
	-1, 956,
	95, 1635,
	-2, 1479,
	-1, 957,
	95, 1636,
	235, 1640,
	-2, 1480,
	-1, 958,
	235, 1639,
	-2, 42,
	-1, 1042,
	65, 893,
	-2, 906,
	-1, 1130,
	263, 1106,
	268, 1106,
	-2, 420,
	-1, 1215,
	1, 581,
	750, 581,
	-2, 165,
	-1, 1524,
	235, 1640,
	-2, 1480,
	-1, 1737,
	65, 894,
	-2, 910,
	-1, 1738,
	65, 895,
	-2, 911,
	-1, 1798,
	148, 165,
	190, 165,
	362, 165,
	-2, 459,
	-1, 1880,
	149, 409,
	258, 409,
	-2, 513,
	-1, 1889,
	263, 1107,
	268, 1107,
	-2, 421,
	-1, 2337,
	235, 1644,
	-2, 1638,
	-1, 2338,
	235, 1640,
	-2, 1636,
	-1, 2441,
	148, 165,
	190, 165,
	362, 165,
	-2, 460,
	-1, 2448,
	28, 186,
	-2, 188,
	-1, 2910,
	86, 96,
	96, 96,
	-2, 973,
	-1, 2979,
	725, 702,
	-2, 676,
	-1, 3203,
	55, 1583,
	-2, 1577,
	-1, 4041,
	725, 702,
	-2, 690,
	-1, 4133,
	98, 634,
	104, 634,
	114, 634,
	192, 634,
	193, 634,
	194, 634,
	195, 634,
	196, 634,
	197, 634,
	198, 634,
	199, 634,
	200, 634,
	201, 634,
	202, 634,
	203, 634,
	204, 634,
	205, 634,
	206, 634,
	207, 634,
	208, 634,
	209, 634,
	210, 634,
	211, 634,
	212, 634,
	213, 634,
	214, 634,
	215, 634,
	216, 634,
	217, 634,
	218, 634,
	219, 634,
	220, 634,
	221, 634,
	222, 634,
	223, 634,
	224, 634,
	225, 634,
	226, 634,
	227, 634,
	228, 634,
	229, 634,
	230, 634,
	231, 634,
	232, 634,
	233, 634,
	-2, 2015,
}

const yyPrivate = 57344

const yyLast = 57600

var yyAct = [...]int{
	972, 3692, 967, 87, 3693, 4022, 3691, 960, 4112, 4221,
	4131, 4208, 2366, 4004, 3355, 3255, 2142, 3641, 4175, 959,
	2130, 4176, 4100, 2438, 3262, 925, 2165, 3927, 42, 2068,
	3313, 3491, 5, 3318, 1281, 3315, 3304, 3216, 3314, 3312,
	3317, 1801, 3316, 4002, 3628, 2368, 3333, 1283, 2010, 3154,
	3270, 2513, 751, 3332, 1757, 3220, 3217, 3069, 3537, 3043,
	3531, 3734, 3335, 3214, 921, 3204, 3521, 2393, 745, 2476,
	2870, 746, 3068, 2944, 3362, 3025, 2481, 1858, 4073, 779,
	920, 2409, 2976, 2501, 2945, 2412, 1040, 2946, 87, 2426,
	2544, 163, 1060, 2895, 1905, 1037, 1092, 2414, 43, 2876,
	2413, 741, 1067, 1162, 1138, 41, 2862, 1040, 3559, 2846,
	2290, 1039, 2164, 1043, 2322, 2289, 2126, 2522, 3017, 149,
	2500, 2076, 1102, 1887, 2401, 2483, 2937, 1125, 1120, 2561,
	1790, 2912, 1062, 1770, 1537, 104, 2416, 1718, 105, 2170,
	2101, 2090, 1462, 1447, 100, 2006, 1894, 1099, 1096, 761,
	3219, 2498, 1131, 1100, 1986, 2472, 2473, 1126, 1128, 1127,
	1789, 1077, 1775, 1079, 1049, 99, 3729, 2178, 748, 2844,
	1740, 2197, 1520, 1046, 2883, 2067, 85, 1271, 2018, 756,
	3721, 2394, 167, 1059, 1496, 3492, 1045, 107, 3548, 132,
	133, 1879, 127, 1044, 1035, 922, 1279, 125, 126, 1211,
	1072, 1047, 93, 749, 738, 755, 1541, 98, 4209, 3629,
	1257, 84, 1546, 3301, 4057, 1071, 2515, 106, 2515, 2516,
	2517, 2999, 2998, 2559, 2967, 1463, 3621, 1034, 3584, 4158,
	3033, 3034, 4053, 4052, 2083, 128, 2363, 2364, 2082, 2081,
	4058, 1142, 2080, 681, 1052, 134, 1167, 1093, 2079, 2078,
	2049, 1227, 678, 4152, 679, 1164, 2842, 2611, 3200, 2548,
	3696, 3158, 4231, 1175, 4179, 1109, 1053, 4174, 1181, 1182,
	1183, 1761, 1186, 1187, 1188, 1189, 3495, 739, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1141, 1086, 1038, 1087, 95,
	2872, 1762, 1036, 2547, 3323, 3696, 1458, 128, 2, 1061,
	1117, 1971, 95, 3323, 1168, 1171, 1172, 1116, 95, 1104,
	723, 1479, 1115, 1114, 4031, 2969, 3320, 2989, 4199, 1759,
	2390, 3494, 2104, 1473, 4053, 2389, 2387, 4214, 2992, 4005,
	4162, 2807, 4160, 2088, 3381, 717, 4127, 1228, 3923, 1184,
	3922, 926, 1033, 111, 112, 113, 3695, 116, 95, 1760,
	122, 723, 4213, 191, 3321, 4161, 673, 4159, 1751, 1085,
	1089, 924, 1166, 3321, 1165, 128, 4189, 190, 736, 737,
	3634, 3933, 4156, 3635, 86, 3653, 1449, 1118, 1028, 1029,
	1030, 1031, 86, 3327, 3642, 1042, 1085, 1089, 924, 3932,
	129, 3695, 3327, 2618, 4101, 4109, 2541, 2886, 2135, 717,
	4136, 3407, 975, 976, 977, 1868, 172, 717, 1791, 1108,
	1792, 86, 1110, 1074, 1075, 2843, 975, 976, 977, 3652,
	1113, 2921, 1220, 1221, 2920, 2887, 2546, 2922, 1475, 3252,
	3253, 2433, 2434, 3748, 717, 1469, 2060, 2061, 1461, 3251,
	4141, 3032, 712, 2615, 2432, 3016, 1276, 1210, 1252, 1253,
	1247, 1264, 2926, 1266, 1223, 4113, 1026, 95, 1025, 1476,
	4139, 1477, 1478, 2616, 4023, 95, 169, 1235, 2933, 170,
	4145, 4146, 1236, 1248, 86, 1241, 2014, 88, 1111, 3272,
	3273, 4036, 717, 1235, 2451, 2450, 4140, 1463, 1236, 3359,
	697, 1263, 1265, 3389, 95, 189, 1234, 3324, 1233, 2365,
	2879, 2880, 717, 695, 3387, 1459, 3324, 1442, 4180, 717,
	3090, 1113, 717, 1105, 2609, 2059, 3357, 2492, 731, 2063,
	1107, 1106, 735, 1787, 3363, 2397, 729, 3018, 3975, 4181,
	3976, 4117, 2523, 1961, 1722, 2562, 3002, 2977, 3350, 1448,
	4211, 2486, 2566, 692, 1185, 4117, 3351, 2568, 1987, 718,
	1268, 2564, 707, 1250, 1251, 2397, 1254, 95, 2586, 1275,
	2587, 1441, 2588, 3020, 1273, 1274, 1255, 702, 1256, 1111,
	1216, 1249, 2612, 1242, 2613, 3623, 3622, 1962, 705, 1963,
	1140, 715, 3619, 2589, 2565, 3360, 1140, 1191, 3271, 716,
	1190, 3907, 1151, 1149, 3006, 1473, 3007, 2567, 1497, 1121,
	3274, 1261, 2569, 1122, 2526, 1262, 3700, 1725, 2410, 173,
	1112, 1122, 3358, 718, 1160, 1267, 1078, 2015, 179, 1159,
	3378, 718, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506,
	1505, 1507, 1508, 1158, 1157, 1156, 1155, 1154, 1153, 1148,
	1260, 3534, 1872, 1161, 3274, 4153, 1097, 4232, 718, 682,
	1095, 684, 698, 4186, 720, 2970, 719, 688, 1511, 686,
	690, 699, 691, 1097, 685, 3157, 696, 1097, 1134, 687,
	700, 701, 704, 708, 709, 710, 706, 703, 3091, 694,
	721, 1133, 2007, 1139, 1511, 1170, 1088, 1082, 1080, 1139,
	2499, 1133, 3021, 2485, 1073, 1169, 718, 3618, 2552, 2551,
	3294, 1112, 1280, 2003, 1280, 1280, 1450, 1469, 3166, 1866,
	1178, 3001, 1865, 1088, 1082, 1080, 718, 1864, 2987, 2004,
	2395, 2396, 1862, 718, 3185, 1226, 718, 672, 1512, 1513,
	3183, 1468, 1465, 1466, 1467, 1472, 1474, 1471, 4154, 1470,
	3015, 1152, 1150, 3014, 3037, 4018, 164, 3573, 3555, 1464,
	2395, 2396, 2917, 1788, 1040, 1521, 1526, 1527, 2882, 1530,
	1532, 1533, 1534, 1535, 1536, 2819, 1539, 1540, 1542, 1542,
	2633, 1542, 1542, 1547, 1547, 1547, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1439, 1440, 1269, 1518, 1674, 2545, 1676, 1677, 1678, 1679,
	1680, 1119, 973, 4030, 2968, 3582, 3583, 1438, 1547, 1547,
	1547, 1547, 1547, 1547, 3694, 973, 2991, 4076, 1531, 1222,
	3651, 973, 1140, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 89, 3004, 3535,
	1522, 1514, 1515, 1516, 1517, 722, 1893, 94, 1457, 2971,
	1140, 1528, 2617, 1081, 1715, 94, 2138, 2935, 2616, 3694,
	2990, 3325, 3326, 4144, 1232, 1543, 713, 1544, 1545, 1779,
	3325, 3326, 4115, 1219, 3329, 165, 1548, 1549, 1712, 1714,
	1081, 714, 177, 3329, 94, 3479, 4115, 2543, 1973, 1972,
	1974, 1975, 1976, 1468, 1465, 1466, 1467, 1472, 1474, 1471,
	1214, 1470, 1675, 1225, 4114, 3165, 2877, 4143, 1721, 4225,
	1231, 1464, 1237, 1238, 1239, 1240, 2489, 1040, 4114, 3024,
	1750, 1040, 680, 185, 1245, 1139, 1140, 1040, 1140, 2439,
	3379, 1133, 1136, 1137, 1511, 1097, 1277, 1278, 1508, 1130,
	1134, 3250, 1729, 2847, 2849, 1177, 1733, 94, 124, 2644,
	1491, 1230, 1039, 1139, 1056, 1892, 1272, 2490, 1713, 4044,
	1129, 2206, 2179, 1992, 2488, 1751, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 1163, 3614, 2180,
	3547, 2563, 184, 186, 187, 188, 2575, 2571, 2573, 2574,
	2572, 2576, 2577, 2578, 1258, 2072, 3258, 1140, 2491, 2000,
	119, 2019, 1793, 1991, 3064, 2171, 2171, 2653, 2487, 2960,
	1477, 1478, 1731, 4190, 1478, 1732, 104, 3743, 2540, 105,
	1681, 1682, 1683, 1684, 1685, 1686, 1713, 3589, 3027, 1139,
	1479, 1139, 3588, 3026, 1143, 1133, 1143, 1133, 2530, 1145,
	1902, 1145, 1719, 1146, 1144, 1146, 1144, 3259, 2644, 1901,
	1891, 2538, 1151, 1706, 1503, 1504, 1506, 1505, 1507, 1508,
	2198, 1113, 1209, 1149, 1147, 2200, 4182, 1140, 107, 2205,
	2201, 4233, 3261, 2202, 2203, 2204, 3574, 120, 2199, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 1479, 3027,
	1753, 1051, 3256, 2542, 3026, 3044, 4227, 4077, 2162, 1727,
	1139, 1869, 1870, 1871, 1229, 1885, 1133, 1136, 1137, 1716,
	1097, 3272, 3273, 1730, 1130, 1134, 2848, 2177, 3257, 1728,
	1956, 1895, 1895, 1907, 1878, 1908, 1213, 1910, 1912, 1751,
	1756, 1916, 1918, 1920, 1922, 1924, 1036, 2176, 1038, 1244,
	4223, 1215, 1897, 4224, 3915, 4222, 4078, 2535, 1280, 1938,
	1246, 1259, 3263, 2012, 3914, 1784, 1785, 1988, 2020, 1989,
	3905, 1853, 1990, 3648, 1896, 3649, 1981, 4234, 1946, 1947,
	1139, 3665, 1176, 3664, 1952, 1953, 1173, 3596, 1476, 3046,
	1477, 1478, 1996, 1861, 1994, 1995, 1993, 1997, 1998, 1999,
	2539, 1479, 4010, 1876, 1874, 1875, 1888, 2154, 2143, 2144,
	2145, 2146, 2156, 2147, 2148, 2149, 2161, 2157, 2150, 2151,
	2158, 2159, 2160, 2152, 2153, 2155, 1479, 1899, 3595, 2535,
	3271, 1501, 1502, 1503, 1504, 1506, 1505, 1507, 1508, 1979,
	1734, 2327, 3274, 3585, 3302, 1212, 1476, 1980, 1477, 1478,
	1942, 4011, 2402, 2403, 1934, 3066, 3290, 1937, 2008, 1939,
	2106, 1112, 3056, 3055, 3054, 2942, 2941, 3048, 2940, 3052,
	1968, 3047, 2537, 3045, 2107, 1509, 1510, 2105, 3050, 1485,
	1486, 1487, 1488, 1489, 1490, 1484, 1481, 3049, 128, 1497,
	2495, 3036, 1982, 4195, 1751, 975, 976, 977, 1116, 2094,
	2095, 2092, 2093, 1115, 1114, 1966, 3051, 3053, 1867, 1965,
	1978, 1964, 2025, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1506, 1505, 1507, 1508, 1954, 2091, 1948, 1479, 1280, 1280,
	1945, 1944, 1943, 1479, 2021, 2022, 2047, 2094, 2095, 2623,
	2624, 1967, 1914, 190, 87, 1726, 3354, 87, 2026, 1476,
	1444, 1477, 1478, 1479, 2046, 2033, 2034, 2035, 3579, 2924,
	723, 723, 3260, 723, 1787, 1497, 129, 4183, 1493, 42,
	1494, 1751, 42, 4039, 1476, 3396, 1477, 1478, 2511, 1479,
	2510, 4032, 172, 1497, 1495, 1509, 1510, 1492, 4038, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1506, 1505, 1507, 1508,
	2509, 1479, 2508, 1497, 4014, 2133, 2133, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1506, 1505, 1507, 1508, 4013, 4193,
	1751, 1479, 2131, 2131, 2134, 2694, 1751, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1506, 1505, 1507, 1508, 2507, 4012,
	2506, 3910, 169, 1764, 2096, 170, 1751, 3942, 1712, 1714,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1505, 1507,
	1508, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1505, 1507,
	1508, 189, 4184, 2868, 4210, 1476, 2217, 1477, 1478, 2023,
	3894, 1476, 3893, 1477, 1478, 1479, 2027, 110, 2029, 2030,
	2031, 2032, 1765, 4123, 1751, 2036, 2231, 1479, 109, 3941,
	108, 1476, 2327, 1477, 1478, 1479, 2324, 2048, 103, 2680,
	1479, 2690, 3742, 3937, 1497, 2326, 2632, 85, 4170, 1751,
	85, 3740, 2073, 2692, 2054, 2055, 3661, 1476, 1713, 1477,
	1478, 971, 2103, 1475, 1751, 1479, 1711, 2166, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1506, 1505, 1507, 1508, 1476,
	1710, 1477, 1478, 2109, 1709, 2111, 2112, 2113, 2114, 2115,
	2116, 2118, 2120, 2121, 2122, 2123, 2124, 2125, 2108, 1476,
	3593, 1477, 1478, 1751, 3898, 1479, 2314, 2315, 2316, 2317,
	2318, 101, 2868, 1751, 2137, 173, 3578, 1479, 3364, 2110,
	1751, 102, 2241, 2339, 179, 1479, 2342, 2343, 4027, 1479,
	2335, 2649, 4121, 1751, 3264, 1475, 1751, 1522, 3268, 2181,
	2182, 2183, 2184, 2337, 2336, 3267, 1479, 2868, 4108, 2868,
	4087, 3897, 2323, 2195, 3361, 2172, 2325, 4119, 1751, 3640,
	2216, 101, 2360, 1476, 1479, 1477, 1478, 103, 2868, 4083,
	2233, 102, 3995, 1751, 2978, 1476, 3293, 1477, 1478, 3269,
	3292, 1479, 1751, 1476, 3265, 1477, 1478, 2951, 1476, 3266,
	1477, 1478, 2938, 1479, 1708, 110, 1701, 3988, 1751, 2956,
	1479, 3632, 4029, 3918, 1751, 2418, 109, 2334, 108, 2648,
	2340, 2341, 2607, 1476, 2599, 1477, 1478, 3986, 1751, 2868,
	3906, 3983, 1751, 3632, 1751, 104, 2868, 3630, 105, 2598,
	2420, 2557, 1751, 2447, 2335, 2535, 1751, 3546, 3965, 1751,
	3553, 1751, 2774, 1751, 1479, 2448, 104, 2337, 2407, 105,
	3283, 3282, 164, 1476, 2370, 1477, 1478, 3902, 1475, 2382,
	3280, 3281, 1479, 2556, 2102, 1476, 2392, 1477, 1478, 1479,
	3278, 3279, 4071, 1476, 3615, 1477, 1478, 1476, 1102, 1477,
	1478, 1751, 1479, 3278, 3277, 3520, 1751, 2892, 1751, 2616,
	3000, 4043, 3513, 1751, 1476, 2371, 1477, 1478, 1479, 2358,
	2457, 2458, 2459, 2460, 2452, 1479, 2453, 2454, 2455, 2456,
	2442, 1102, 1476, 103, 1477, 1478, 2443, 2050, 1052, 2016,
	2462, 2913, 1479, 2464, 2465, 2466, 2467, 2424, 2913, 1476,
	2383, 1477, 1478, 1977, 2376, 1969, 2377, 2943, 2865, 1479,
	2385, 1476, 2478, 1477, 1478, 1857, 2981, 2446, 1476, 1479,
	1477, 1478, 103, 2524, 3510, 1751, 2974, 2975, 2868, 2405,
	2484, 3508, 1751, 2640, 2868, 2867, 2136, 1751, 2429, 2430,
	2428, 1959, 1955, 1479, 3471, 1751, 3550, 2445, 1751, 2444,
	1951, 1950, 1479, 1949, 1857, 1856, 1086, 1766, 1087, 2914,
	3469, 1751, 1476, 1479, 1477, 1478, 2914, 3465, 1751, 2916,
	1479, 2521, 1270, 2494, 1799, 1798, 2616, 2891, 1142, 1479,
	1476, 2892, 1477, 1478, 3462, 1751, 2863, 1476, 1895, 1477,
	1478, 1479, 2479, 2468, 2470, 2471, 2475, 3245, 3499, 109,
	1476, 2493, 1477, 1478, 2884, 2529, 2497, 2616, 2532, 2505,
	2533, 3460, 1751, 2536, 3549, 3280, 1476, 3188, 1477, 1478,
	2884, 2431, 3215, 1476, 2549, 1477, 1478, 2479, 2528, 2774,
	2531, 2527, 1141, 3546, 2677, 3458, 1751, 2676, 2892, 1479,
	1476, 2535, 1477, 1478, 3456, 1751, 2550, 2518, 2400, 2553,
	1755, 1479, 2361, 2554, 2555, 3454, 1751, 1476, 1479, 1477,
	1478, 165, 3452, 1751, 2136, 2074, 3597, 1476, 177, 1477,
	1478, 3450, 1751, 1475, 1479, 1752, 1754, 2535, 2058, 2621,
	1479, 2892, 2002, 3448, 1751, 1786, 1124, 1123, 1040, 1040,
	1040, 1476, 1479, 1477, 1478, 1041, 2560, 3546, 95, 4149,
	1476, 1479, 1477, 1478, 4090, 1479, 3929, 1758, 1532, 185,
	1532, 1476, 1479, 1477, 1478, 3895, 3755, 3613, 1476, 3610,
	1477, 1478, 1479, 3598, 3599, 3600, 2636, 1476, 3591, 1477,
	1478, 3446, 1751, 3412, 1479, 3411, 1859, 2477, 3352, 1476,
	2592, 1477, 1478, 3444, 1751, 3307, 3303, 2982, 2474, 2947,
	3442, 1751, 166, 171, 168, 174, 175, 176, 178, 180,
	181, 182, 183, 2639, 2469, 1479, 3440, 1751, 184, 186,
	187, 188, 3438, 1751, 2463, 1930, 2337, 2336, 95, 2461,
	1984, 1890, 1479, 3305, 3436, 1751, 1886, 1476, 1479, 1477,
	1478, 1855, 2608, 3434, 1751, 2659, 1479, 3432, 1751, 1476,
	121, 1477, 1478, 2948, 3418, 1751, 1476, 2614, 1477, 1478,
	2948, 1214, 2674, 3356, 3394, 1751, 3560, 3561, 3930, 1479,
	2492, 2374, 1476, 2622, 1477, 1478, 2839, 1751, 1476, 4205,
	1477, 1478, 1931, 1932, 1933, 2052, 2628, 2625, 2626, 2627,
	1476, 3601, 1477, 1478, 4203, 2103, 3566, 4177, 1479, 1476,
	1926, 1477, 1478, 1476, 4051, 1477, 1478, 2837, 1751, 3970,
	1476, 3563, 1477, 1478, 3299, 2629, 3298, 2631, 3297, 677,
	1476, 3215, 1477, 1478, 2812, 1751, 2634, 3565, 2635, 2961,
	2789, 1751, 1476, 2593, 1477, 1478, 3237, 3235, 2781, 1751,
	1763, 3238, 3236, 3234, 3602, 3603, 3604, 3233, 3720, 2652,
	3719, 2630, 2053, 1927, 1928, 1929, 3239, 4047, 2901, 2902,
	1479, 2772, 1751, 1476, 1479, 1477, 1478, 3931, 1479, 2391,
	1054, 2380, 2637, 1479, 3554, 3193, 2818, 1479, 3205, 3207,
	1476, 1479, 1477, 1478, 3192, 3733, 1476, 3208, 1477, 1478,
	2770, 1751, 3539, 740, 1476, 4009, 1477, 1478, 1479, 3735,
	3538, 2688, 1479, 3718, 3542, 1057, 1479, 3202, 2850, 2601,
	2602, 1497, 2001, 1058, 2604, 2133, 1024, 1476, 2806, 1477,
	1478, 1055, 3276, 2605, 2931, 2952, 2585, 1040, 2584, 2583,
	2179, 2582, 2131, 2853, 2581, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1506, 1505, 1507, 1508, 1476, 2180, 1477, 1478,
	2889, 2890, 2757, 1751, 1066, 2851, 2755, 1751, 2580, 2418,
	2753, 1751, 1040, 2909, 2579, 2751, 1751, 1180, 1065, 2749,
	1751, 1179, 101, 2747, 1751, 42, 1479, 3372, 103, 2888,
	2947, 2854, 102, 2856, 2906, 3030, 1443, 2908, 1479, 2988,
	2745, 1751, 1479, 129, 2743, 1751, 1479, 2102, 2741, 1751,
	2869, 1479, 2099, 2097, 2098, 103, 1479, 101, 1476, 3544,
	1477, 1478, 1476, 1768, 1477, 1478, 1476, 102, 1477, 1478,
	1479, 1476, 4219, 1477, 1478, 1476, 1479, 1477, 1478, 1476,
	110, 1477, 1478, 1479, 2402, 2403, 2878, 3295, 1719, 2841,
	2596, 109, 4126, 108, 2907, 4028, 1476, 3522, 1477, 1478,
	1476, 103, 1477, 1478, 1476, 3925, 1477, 1478, 1479, 3275,
	2905, 2934, 2936, 2386, 1713, 2620, 2861, 3191, 2739, 1751,
	2057, 108, 109, 2927, 2881, 3190, 2866, 2986, 3994, 110,
	2737, 1751, 3993, 3973, 1767, 2911, 3741, 1479, 2735, 1751,
	109, 3730, 108, 2733, 1751, 3739, 3738, 2915, 2731, 1751,
	3731, 3611, 2918, 3543, 3541, 1479, 2484, 3308, 2519, 2925,
	1479, 2928, 2729, 1751, 1873, 2642, 2162, 2997, 2727, 1751,
	110, 1479, 1064, 2174, 1476, 2641, 1477, 1478, 2175, 2950,
	2939, 109, 3532, 2884, 2953, 2954, 1476, 3704, 1477, 1478,
	1476, 2865, 1477, 1478, 1476, 3094, 1477, 1478, 2949, 1476,
	3568, 1477, 1478, 2678, 1476, 1479, 1477, 1478, 2372, 1479,
	1780, 2957, 1772, 2962, 2963, 2964, 2237, 2958, 1476, 4206,
	1477, 1478, 1479, 2994, 1476, 4207, 1477, 1478, 1878, 2725,
	1751, 1476, 1479, 1477, 1478, 4207, 4206, 114, 115, 4015,
	3577, 3040, 3041, 2071, 2983, 2984, 10, 2723, 1751, 3,
	97, 2069, 2718, 1751, 9, 1, 1476, 2993, 1477, 1478,
	1479, 1032, 3060, 2714, 1751, 2154, 2143, 2144, 2145, 2146,
	2156, 2147, 2148, 2149, 2161, 2157, 2150, 2151, 2158, 2159,
	2160, 2152, 2153, 2155, 1479, 1476, 1446, 1477, 1478, 1479,
	2070, 3057, 3019, 8, 3038, 1445, 2320, 2712, 1751, 1479,
	3581, 2705, 1751, 1476, 3022, 1477, 1478, 4138, 1476, 693,
	1477, 1478, 2362, 1479, 2703, 1751, 1717, 4178, 4134, 1476,
	4135, 1477, 1478, 1970, 3515, 1960, 2352, 3075, 3076, 3077,
	3078, 3079, 3080, 3081, 3082, 3083, 3084, 2995, 3643, 2288,
	3926, 3311, 2525, 3609, 1752, 2359, 2482, 3092, 1132, 3058,
	154, 2440, 3511, 1476, 2441, 1477, 1478, 1476, 4103, 1477,
	1478, 2897, 2900, 2901, 2902, 2898, 118, 2899, 2903, 1090,
	1476, 117, 1477, 1478, 1479, 1135, 3477, 1243, 2520, 3633,
	1476, 3473, 1477, 1478, 2384, 2932, 2449, 1805, 1803, 1804,
	1802, 3409, 1807, 1806, 3134, 3042, 3136, 4075, 3152, 3096,
	1479, 3028, 3380, 3059, 3029, 3408, 2679, 3478, 1476, 1479,
	1477, 1478, 3147, 3148, 3149, 3150, 2062, 730, 2897, 2900,
	2901, 2902, 2898, 2904, 2899, 2903, 1479, 3039, 3560, 3561,
	724, 192, 1476, 1794, 1477, 1478, 1773, 1476, 2056, 1477,
	1478, 1174, 683, 3284, 3170, 2558, 2973, 1476, 689, 1477,
	1478, 3161, 1529, 2051, 1479, 3189, 2418, 3159, 2919, 3085,
	1084, 1476, 1479, 1477, 1478, 2323, 3400, 2323, 1076, 2325,
	2373, 2325, 2855, 1083, 3903, 3132, 3223, 3536, 3222, 3201,
	87, 2420, 3203, 2418, 2418, 2418, 2418, 2418, 2871, 3206,
	3199, 2496, 3398, 4008, 3732, 4088, 3142, 3143, 3144, 3145,
	3146, 2835, 1479, 2418, 2929, 1043, 2418, 3170, 2420, 2420,
	2420, 2420, 2420, 3244, 1479, 3160, 1769, 3162, 2834, 3227,
	3498, 3169, 1476, 1479, 1477, 1478, 2651, 2169, 2420, 1519,
	1479, 2420, 2417, 3699, 2089, 3187, 753, 752, 750, 2857,
	2885, 3197, 3182, 3184, 3186, 3181, 2830, 1483, 1476, 1482,
	1477, 1478, 961, 1479, 2829, 2012, 3196, 1476, 3194, 1477,
	1478, 2845, 1781, 3209, 3210, 2896, 1479, 2894, 2893, 2594,
	3328, 2425, 3562, 3558, 1476, 3226, 1477, 1478, 1045, 4130,
	3336, 3229, 3230, 3228, 3232, 1044, 3231, 3240, 3246, 104,
	1479, 3247, 105, 2419, 2828, 2415, 3248, 1479, 2864, 912,
	911, 1479, 1476, 762, 1477, 1478, 2827, 754, 3254, 744,
	1476, 974, 1477, 1478, 1479, 2826, 910, 909, 3338, 1479,
	3339, 3287, 2825, 3286, 3285, 3003, 3353, 3195, 3005, 1479,
	2930, 3349, 1460, 1479, 1736, 1739, 2381, 1479, 1103, 3377,
	4034, 3288, 3289, 2619, 3340, 2816, 3406, 1735, 3330, 4041,
	1476, 3319, 1477, 1478, 3627, 2484, 3300, 3212, 2815, 3337,
	3341, 3309, 1476, 1479, 1477, 1478, 3347, 2979, 2512, 69,
	46, 1476, 3218, 1477, 1478, 4003, 4072, 3218, 1476, 904,
	1477, 1478, 2814, 901, 3365, 3701, 3702, 3368, 3367, 2813,
	3703, 3155, 3156, 2810, 1479, 4054, 4055, 900, 3375, 4056,
	2226, 1476, 1456, 1477, 1478, 1453, 2805, 4151, 3385, 2064,
	96, 2798, 3382, 3383, 1476, 3384, 1477, 1478, 3386, 36,
	3388, 2797, 3390, 35, 34, 2796, 33, 32, 26, 2795,
	25, 24, 23, 3401, 3402, 3403, 3404, 3405, 1476, 22,
	1477, 1478, 29, 19, 21, 1476, 20, 1477, 1478, 1476,
	18, 1477, 1478, 3322, 1532, 2794, 4173, 4218, 1532, 123,
	55, 52, 1476, 3310, 1477, 1478, 50, 1476, 2638, 1477,
	1478, 131, 2643, 130, 3523, 53, 3525, 1476, 49, 1477,
	1478, 1476, 1217, 1477, 1478, 1476, 2793, 1477, 1478, 47,
	31, 30, 17, 16, 15, 2646, 14, 2647, 13, 12,
	11, 7, 3493, 2655, 6, 39, 38, 2657, 2658, 3497,
	37, 1476, 28, 1477, 1478, 27, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 40, 2675, 4, 3221,
	2966, 3376, 2514, 0, 0, 0, 2418, 0, 0, 1714,
	0, 3524, 1476, 3526, 1477, 1478, 1479, 3528, 0, 3575,
	2681, 2682, 2683, 2684, 0, 2686, 2687, 0, 2689, 3540,
	3533, 2420, 2691, 0, 0, 0, 2696, 2697, 0, 2698,
	3545, 0, 2701, 2702, 2704, 2706, 2707, 2708, 2709, 2710,
	2711, 2713, 2715, 2716, 2717, 2719, 3567, 2721, 2722, 2724,
	2726, 2728, 2730, 2732, 2734, 2736, 2738, 2740, 2742, 2744,
	2746, 2748, 2750, 2752, 2754, 2756, 2758, 2759, 2760, 3331,
	2762, 3576, 2764, 3340, 2766, 2767, 3569, 2769, 2771, 2773,
	742, 3570, 3500, 2776, 3502, 3503, 3504, 2780, 3337, 3341,
	3564, 2785, 2786, 2787, 2788, 3592, 1479, 3594, 2792, 0,
	3637, 3638, 0, 1720, 2799, 2800, 2801, 2802, 2803, 2804,
	1479, 0, 2808, 2809, 1479, 0, 0, 0, 0, 3530,
	2811, 0, 3586, 3587, 0, 2817, 3370, 3371, 1479, 0,
	2820, 2821, 2822, 2823, 2824, 1479, 0, 0, 0, 0,
	0, 2831, 2832, 1479, 2833, 0, 0, 2836, 2838, 2384,
	0, 2840, 3557, 3639, 1476, 0, 1477, 1478, 0, 1479,
	0, 2852, 675, 1479, 0, 0, 0, 1479, 0, 0,
	0, 3571, 3572, 0, 1479, 3620, 0, 0, 0, 3624,
	3625, 3626, 1027, 0, 0, 0, 0, 0, 2791, 1063,
	0, 0, 1069, 1069, 0, 0, 0, 0, 0, 0,
	1479, 3655, 2790, 0, 0, 0, 2784, 0, 0, 1479,
	0, 0, 0, 0, 1479, 0, 0, 0, 0, 0,
	2783, 0, 0, 0, 1098, 0, 0, 2782, 1479, 0,
	0, 0, 0, 0, 1479, 2779, 3666, 0, 1479, 0,
	0, 0, 1479, 0, 1476, 0, 1477, 1478, 0, 0,
	3688, 2778, 1479, 0, 0, 2777, 0, 1479, 1476, 2775,
	1477, 1478, 1476, 0, 1477, 1478, 2768, 3707, 0, 3708,
	3709, 3710, 3717, 0, 0, 3724, 1476, 3726, 1477, 1478,
	0, 0, 1479, 1476, 0, 1477, 1478, 0, 0, 3697,
	3727, 1476, 2765, 1477, 1478, 0, 0, 0, 0, 0,
	3222, 2763, 0, 87, 0, 3222, 2761, 1476, 0, 1477,
	1478, 1476, 1479, 1477, 1478, 1476, 0, 1477, 1478, 0,
	2720, 2133, 1476, 1479, 1477, 1478, 2700, 0, 42, 0,
	2699, 0, 3749, 0, 2695, 0, 0, 0, 2131, 3757,
	3660, 3728, 0, 0, 2693, 3737, 3747, 3736, 1476, 2685,
	1477, 1478, 0, 3744, 0, 3746, 0, 1476, 0, 1477,
	1478, 0, 1476, 0, 1477, 1478, 0, 0, 0, 0,
	3909, 0, 0, 0, 2656, 0, 1476, 0, 1477, 1478,
	3761, 0, 1476, 0, 1477, 1478, 1476, 0, 1477, 1478,
	1476, 0, 1477, 1478, 3616, 3617, 0, 0, 0, 0,
	1476, 0, 1477, 1478, 2650, 1476, 0, 1477, 1478, 0,
	3899, 0, 0, 3901, 3900, 2645, 0, 0, 0, 0,
	0, 0, 3916, 0, 0, 0, 0, 3928, 0, 3921,
	1476, 3920, 1477, 1478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3967, 0, 0, 3968, 0, 0, 2133,
	3070, 3071, 3072, 3073, 3074, 3751, 3725, 0, 0, 0,
	1476, 0, 1477, 1478, 0, 0, 2131, 3971, 0, 0,
	3089, 1476, 0, 1477, 1478, 3911, 3912, 3913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3218, 0, 3758, 3759, 0, 0, 4016, 3222,
	0, 3974, 3753, 0, 0, 3977, 0, 0, 4007, 0,
	0, 0, 0, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1670, 1671, 1672, 1673,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 3972, 4001, 0, 4000, 3991, 4017,
	1741, 3221, 0, 0, 0, 3997, 3221, 3999, 4035, 0,
	0, 0, 0, 0, 1749, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	3224, 0, 0, 0, 0, 0, 1714, 4020, 0, 0,
	4019, 0, 2378, 2379, 1748, 1746, 1747, 1743, 3242, 1744,
	3904, 42, 0, 4024, 0, 4042, 0, 4037, 0, 1741,
	0, 0, 0, 4040, 0, 0, 0, 0, 0, 0,
	0, 3908, 1745, 1749, 0, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4049, 0, 0, 0, 0, 0, 0, 0,
	4059, 1737, 1738, 1748, 1746, 1747, 1743, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4085, 0, 1218, 0, 1224, 87,
	0, 1745, 4060, 0, 0, 4061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4070, 0, 0, 0, 0,
	0, 0, 0, 4079, 42, 0, 0, 0, 4089, 0,
	0, 0, 1714, 0, 4116, 0, 0, 0, 4091, 0,
	0, 4102, 4094, 0, 1480, 4099, 3374, 4096, 3928, 4105,
	4095, 4093, 4098, 0, 4097, 4124, 0, 0, 0, 0,
	1452, 0, 4021, 0, 0, 0, 0, 4129, 3391, 3392,
	3221, 3393, 3395, 3397, 4137, 1538, 0, 0, 0, 0,
	0, 0, 4147, 4142, 0, 0, 0, 0, 0, 0,
	0, 4116, 4157, 4155, 0, 0, 0, 4168, 0, 3410,
	0, 0, 0, 0, 3413, 0, 3415, 3416, 3417, 3419,
	3420, 3421, 3422, 3423, 3424, 3425, 3426, 3427, 3428, 3429,
	3430, 3431, 3433, 3435, 3437, 3439, 3441, 3443, 3445, 3447,
	3449, 3451, 3453, 3455, 3457, 3459, 3461, 3463, 3464, 3466,
	3467, 3468, 3470, 4188, 4172, 3472, 2133, 3474, 3475, 3476,
	4191, 4198, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487,
	3488, 3489, 3490, 2131, 4201, 4204, 4200, 4202, 4116, 4212,
	4197, 3496, 2012, 4187, 4167, 3501, 4081, 4220, 4086, 3505,
	3506, 3218, 3507, 3509, 0, 3512, 3514, 4226, 3516, 3517,
	3518, 3519, 4228, 0, 0, 0, 0, 0, 3527, 0,
	0, 0, 4026, 0, 2133, 0, 0, 4237, 4238, 0,
	0, 3968, 4236, 0, 0, 0, 0, 0, 0, 0,
	0, 2131, 4235, 0, 0, 0, 0, 0, 0, 4033,
	0, 0, 0, 3551, 3552, 0, 4045, 3556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 44, 45,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	48, 76, 77, 0, 74, 78, 0, 0, 0, 0,
	0, 0, 0, 4080, 0, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3650, 0,
	0, 3654, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	83, 0, 0, 0, 0, 3667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3690,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 0,
	0, 0, 3698, 0, 0, 0, 0, 0, 0, 3705,
	0, 0, 0, 0, 51, 54, 57, 56, 59, 0,
	73, 0, 0, 82, 79, 0, 0, 0, 0, 0,
	0, 2017, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 61, 91, 90,
	2013, 0, 71, 72, 58, 0, 0, 0, 0, 0,
	80, 81, 0, 0, 0, 0, 2024, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 63, 64, 0, 65, 66, 67, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3917, 0,
	0, 0, 0, 0, 0, 0, 0, 3924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3934, 3935, 3936,
	60, 3938, 0, 3939, 3940, 0, 0, 0, 0, 3943,
	3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953,
	3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963,
	3964, 0, 3966, 3969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3978, 3979,
	3980, 3981, 3982, 3984, 3985, 3987, 3989, 3990, 3992, 0,
	0, 0, 3996, 0, 0, 0, 3998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4025, 0, 0, 0, 0, 2084, 2085, 2086, 2087,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 2100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2139, 2140, 0,
	0, 0, 0, 2163, 0, 0, 2167, 2168, 0, 0,
	0, 2173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 0, 2196, 0, 0,
	94, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2227,
	0, 2232, 0, 2234, 2235, 2236, 0, 2238, 2239, 2240,
	0, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	0, 0, 0, 0, 0, 2319, 0, 2321, 0, 2328,
	2329, 2330, 2331, 2332, 2333, 0, 0, 70, 4050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 0, 2353, 2354, 2355,
	2356, 2357, 4065, 0, 0, 0, 0, 0, 4068, 0,
	4069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4084, 0, 0, 0, 1069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4110,
	4111, 0, 0, 0, 0, 0, 0, 0, 2398, 2399,
	0, 0, 0, 4118, 4120, 4122, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4128, 0, 0, 2437, 0, 2404, 0, 0, 0,
	0, 0, 0, 4150, 2408, 0, 2411, 0, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4169, 0, 0, 957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4192, 4194, 4196, 0, 0,
	0, 0, 0, 3782, 3784, 3783, 3849, 3850, 3851, 3852,
	3853, 3854, 3855, 3785, 3786, 804, 0, 0, 0, 0,
	195, 0, 0, 195, 0, 0, 0, 728, 4217, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 4229, 4230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 195, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1022, 0, 0, 2327, 0, 0, 1023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 2570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2590, 2591, 0, 0,
	2595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2600, 0, 0, 0, 0, 0, 0, 2603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2606, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 0, 0,
	0, 0, 0, 0, 0, 3790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3798, 3799, 0, 0, 3874, 3873, 3872, 0, 0, 3870,
	3871, 3869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2660, 2661, 2662, 2663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3875, 927, 0, 780, 781,
	3876, 3877, 931, 3878, 783, 784, 928, 929, 0, 778,
	782, 930, 932, 0, 0, 0, 0, 1538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3779, 3780,
	3781, 3787, 3788, 3789, 3800, 3847, 3848, 3856, 3858, 883,
	3857, 3859, 3860, 3861, 3864, 3865, 3866, 3867, 3862, 3863,
	3868, 3762, 3766, 3763, 3764, 3765, 3777, 3767, 3768, 3769,
	3770, 3771, 3772, 3773, 3774, 3775, 3776, 3778, 3879, 3880,
	3881, 3882, 3883, 3884, 3793, 3797, 3796, 3794, 3795, 3791,
	3792, 3819, 3818, 3820, 3821, 3822, 3823, 3824, 3825, 3827,
	3826, 3828, 3829, 3830, 3831, 3832, 3833, 3801, 3802, 3805,
	3806, 3804, 3803, 3807, 3816, 3817, 3808, 3809, 3810, 3811,
	3812, 3813, 3815, 3814, 3834, 3835, 3836, 3837, 3838, 3840,
	3839, 3843, 3844, 3842, 3841, 3846, 3845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	933, 0, 934, 0, 0, 938, 0, 0, 0, 940,
	939, 0, 941, 903, 902, 0, 956, 935, 936, 0,
	937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2910, 711, 0,
	0, 0, 0, 0, 733, 3885, 3886, 3887, 3888, 3889,
	3890, 3891, 3892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 733, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 195,
	0, 0, 2959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 734, 0, 734, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 195, 0, 0, 0, 0, 0, 0, 3008, 3009,
	3010, 3011, 3012, 3013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1524,
	0, 0, 0, 0, 0, 0, 2077, 3023, 0, 0,
	0, 0, 3035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3031, 0, 0, 0, 0, 0, 0, 0, 0, 3061,
	3062, 3063, 0, 0, 3065, 0, 0, 3067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3086, 3087, 3088,
	0, 0, 0, 0, 0, 0, 3093, 0, 0, 0,
	0, 3095, 0, 0, 3097, 3098, 3099, 0, 0, 0,
	3100, 3101, 0, 0, 3102, 0, 3103, 0, 0, 0,
	0, 0, 0, 3104, 0, 3105, 0, 0, 0, 3106,
	0, 3107, 0, 0, 3108, 0, 3109, 0, 3110, 0,
	3111, 0, 3112, 0, 3113, 0, 3114, 0, 3115, 0,
	3116, 0, 3117, 0, 3118, 0, 3119, 0, 3120, 0,
	3121, 0, 3122, 0, 3123, 0, 3124, 0, 3125, 0,
	0, 0, 3126, 0, 3127, 0, 3128, 0, 0, 3129,
	0, 3130, 0, 3131, 0, 2291, 3133, 0, 0, 3135,
	0, 0, 3137, 3138, 3139, 3140, 0, 0, 0, 0,
	3141, 2291, 2291, 2291, 2291, 2291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3151, 0, 0, 0,
	0, 0, 1524, 4171, 3164, 0, 0, 3168, 0, 0,
	0, 0, 1823, 0, 0, 0, 3171, 3172, 3173, 3174,
	3175, 3176, 0, 0, 0, 3177, 3178, 0, 3179, 0,
	3180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1069, 0, 0, 0, 0, 0,
	195, 0, 0, 1823, 734, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3213, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3243, 0, 0, 0, 734, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3306, 0, 734, 0, 734, 0, 0, 1810, 0,
	0, 0, 0, 734, 0, 3296, 1524, 734, 0, 0,
	734, 734, 734, 734, 0, 734, 0, 734, 734, 0,
	734, 734, 734, 734, 734, 734, 0, 0, 0, 0,
	0, 3334, 0, 1524, 734, 734, 1524, 734, 1524, 195,
	734, 0, 0, 0, 0, 3348, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 3366, 0, 0, 3369, 0,
	0, 0, 734, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 734, 0, 3399, 734, 0,
	195, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 195, 3414, 0, 0, 733, 1437,
	733, 733, 0, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 734, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 1837, 1840, 1841,
	1842, 1843, 1844, 1845, 0, 1846, 1847, 1849, 1850, 1848,
	1851, 1852, 1825, 1826, 1827, 1828, 1808, 1809, 1838, 0,
	1811, 1523, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 0, 0, 1821, 1829, 1830, 1831, 1832, 0, 1833,
	1834, 1835, 1836, 0, 0, 1822, 0, 0, 1837, 1840,
	1841, 1842, 1843, 1844, 1845, 0, 1846, 1847, 1849, 1850,
	1848, 1851, 1852, 1825, 1826, 1827, 1828, 1808, 1809, 1838,
	0, 1811, 0, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 0, 3529, 1821, 1829, 1830, 1831, 1832, 0,
	1833, 1834, 1835, 1836, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 734, 3590, 0,
	0, 0, 0, 0, 3612, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3605, 0,
	0, 3606, 3607, 3608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 1524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3656, 0, 3657, 0, 3658,
	0, 3659, 0, 0, 0, 0, 0, 0, 0, 3662,
	3663, 0, 0, 0, 0, 0, 733, 733, 0, 3668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 3669, 0, 3670, 0, 3671, 0, 3672,
	0, 3673, 0, 3674, 0, 3675, 0, 3676, 0, 3677,
	0, 3678, 0, 3679, 0, 3680, 733, 3681, 0, 3682,
	0, 3683, 0, 3684, 0, 0, 3685, 0, 0, 0,
	3686, 733, 3687, 0, 0, 0, 0, 0, 3689, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	3706, 0, 0, 0, 0, 0, 0, 0, 0, 3711,
	0, 3712, 3713, 0, 3714, 733, 3715, 733, 0, 0,
	2338, 3716, 0, 0, 0, 733, 0, 0, 1523, 733,
	0, 0, 733, 733, 733, 733, 0, 733, 0, 733,
	733, 0, 733, 733, 733, 733, 733, 733, 3745, 0,
	0, 0, 0, 0, 0, 1523, 733, 733, 1523, 733,
	1523, 3754, 733, 1022, 3756, 195, 0, 0, 0, 1023,
	734, 0, 0, 0, 0, 0, 3760, 0, 0, 2132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3896, 0, 733, 0, 0, 0, 0, 0,
	195, 0, 0, 734, 0, 0, 0, 733, 0, 0,
	733, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 734, 0, 0, 2338, 195, 0, 195, 0, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 733, 0, 0, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 734,
	734, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	0, 4006, 0, 0, 0, 734, 734, 0, 0, 734,
	0, 734, 0, 0, 0, 0, 0, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 734, 129, 0,
	151, 734, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 733, 733, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 195, 0, 162, 733,
	0, 0, 0, 0, 150, 0, 0, 195, 195, 0,
	0, 195, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 169, 0, 0, 170, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 138,
	139, 161, 160, 189, 0, 0, 195, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 734, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 2141, 0, 0,
	190, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	0, 2972, 0, 0, 1094, 0, 1101, 0, 4048, 0,
	0, 0, 0, 129, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 4046, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1524, 0, 2338, 4062, 0, 0, 4063, 0, 4064,
	0, 0, 0, 162, 155, 136, 158, 143, 135, 150,
	156, 157, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 144, 0, 169,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 145, 140, 141, 142, 146, 0, 0, 0,
	0, 0, 0, 137, 1881, 1882, 161, 160, 189, 0,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	4164, 0, 4165, 0, 4166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 733, 0, 0, 0, 155,
	1883, 158, 0, 1880, 0, 156, 157, 0, 0, 0,
	0, 0, 173, 733, 0, 0, 733, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 0, 4215, 0, 4216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	159, 0, 0, 0, 733, 0, 0, 0, 0, 0,
	0, 733, 733, 733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 195, 0,
	0, 733, 0, 0, 0, 0, 0, 733, 733, 0,
	0, 733, 0, 733, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 733, 0, 0, 0, 0, 733,
	0, 0, 0, 733, 733, 0, 0, 734, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 152,
	195, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 0, 0, 0, 0, 0,
	0, 734, 0, 0, 0, 734, 734, 0, 0, 0,
	734, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 159, 1524, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	195, 195, 195, 195, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 0, 734, 0, 0,
	184, 186, 187, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 733, 1282, 0, 1282, 1282,
	0, 0, 0, 0, 0, 0, 0, 734, 165, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	1451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 0, 0, 0, 0, 184, 186, 187, 188, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 734, 0, 0,
	0, 1524, 0, 0, 734, 734, 1524, 195, 195, 195,
	195, 195, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 195, 0, 195, 0, 0,
	195, 195, 195, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	0, 0, 1524, 0, 0, 0, 2923, 734, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 1724, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	1854, 0, 0, 733, 0, 0, 0, 733, 733, 0,
	1863, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 733,
	0, 0, 0, 1094, 0, 1889, 0, 0, 0, 0,
	0, 0, 0, 1898, 0, 0, 0, 1900, 0, 0,
	1903, 1904, 1906, 1906, 0, 1906, 0, 1906, 1906, 0,
	1915, 1906, 1906, 1906, 1906, 1906, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 1936, 0, 1094, 914, 0,
	1941, 0, 0, 0, 0, 0, 0, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 195, 2005, 0, 0, 2009, 0,
	0, 0, 0, 0, 193, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 1282, 1050, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1070, 1070, 0, 0, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 195, 195, 195, 0, 0, 0, 0, 0,
	0, 0, 734, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 733, 0, 0, 0, 0, 0,
	1877, 734, 734, 734, 734, 0, 733, 0, 0, 0,
	0, 0, 129, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 1282, 0, 733, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 2065, 150, 733,
	0, 0, 0, 1523, 0, 0, 733, 733, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 1882, 161, 160, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 2127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 733, 0, 0, 1523, 0, 0, 0, 734, 733,
	734, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1524, 0, 0, 0, 195, 0, 0, 734, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 1883,
	158, 3373, 1880, 0, 156, 157, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 734, 0, 0,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	2375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 164, 734,
	0, 734, 0, 2388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 1282, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 676, 0, 676, 159, 0, 0, 0, 0, 0,
	0, 0, 1101, 0, 0, 0, 0, 0, 0, 2502,
	2503, 2504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 733, 733, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 1101, 1898, 0, 0, 1898,
	0, 1898, 0, 0, 0, 0, 0, 2534, 0, 0,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 733, 733, 733, 733, 0, 0, 0,
	0, 0, 1094, 1525, 0, 0, 195, 2127, 0, 0,
	0, 2127, 2127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 734, 195, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	1524, 734, 0, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 734, 2338,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 0,
	733, 0, 733, 0, 184, 186, 187, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	734, 0, 0, 1523, 0, 0, 0, 0, 0, 0,
	733, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 0, 0, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 0, 0, 0, 0, 195,
	733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 676, 734, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 733, 0, 0, 0, 0, 0,
	0, 733, 0, 733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1525, 0, 0,
	1525, 0, 1525, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2858, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2873,
	0, 0, 0, 0, 2011, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 2038, 676,
	676, 676, 676, 676, 676, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2955, 0, 0,
	0, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2388, 0, 0, 0, 0, 0,
	0, 2980, 0, 0, 0, 1898, 1898, 0, 0, 0,
	2985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 733, 0, 733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	733, 733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 2127, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 1022,
	0, 0, 733, 0, 962, 1023, 975, 976, 977, 963,
	0, 0, 964, 965, 0, 966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 971, 0, 978, 979, 0, 0, 2127, 0, 0,
	1525, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3342, 3343, 0, 0, 733, 0, 733, 0, 0,
	0, 0, 0, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 1906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 0, 3225, 1906, 0, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 3345, 3346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1050, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 2011, 676,
	0, 676, 0, 676, 2427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 2388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 928, 929, 0, 0, 0, 930, 932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 676, 676, 0, 0, 676, 0, 2597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2388, 2388, 0, 1525, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3644, 3645, 3646, 3647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3722, 0,
	3722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3750, 0,
	3752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 2965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3722, 0, 0, 0, 0, 0, 0, 3722,
	1525, 3722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 676, 676, 676, 676, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 676, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2388, 0, 4082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 0, 676, 0, 0, 0, 1282, 1282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 0, 0, 0, 0,
	1525, 676, 676, 676, 676, 676, 0, 0, 0, 0,
	0, 0, 0, 3241, 0, 0, 0, 0, 0, 1957,
	4132, 676, 0, 0, 676, 3249, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2388, 0, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 1854, 0, 4132, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 0, 0, 676, 676, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 0, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 1420, 1404, 528, 0, 1346, 1423, 1314,
	1333, 1433, 1336, 1339, 1383, 1292, 1361, 416, 1330, 1318,
	1287, 1325, 1288, 1316, 1348, 270, 1313, 1406, 1365, 1422,
	366, 267, 1294, 1285, 204, 505, 1319, 430, 1335, 203,
	1385, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 1429, 370, 1371, 0, 497,
	401, 0, 0, 2011, 1410, 1409, 1340, 1350, 1412, 1359,
	1397, 1345, 1384, 1302, 1370, 1424, 1331, 1380, 1425, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	4106, 507, 958, 0, 0, 0, 0, 4107, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 1327, 1377, 608, 1419, 1328, 1379, 265, 321, 272,
	264, 580, 1430, 1411, 1291, 1358, 1418, 1353, 0, 0,
	229, 1421, 1352, 0, 1382, 0, 1436, 1286, 1373, 0,
	1289, 1293, 1432, 1416, 1322, 275, 0, 0, 0, 0,
	0, 0, 0, 1349, 1360, 1394, 1398, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 1369, 0,
	0, 0, 1298, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 1301, 0, 1321, 1395, 0, 1284, 297, 1295, 402,
	257, 0, 453, 1402, 1415, 1344, 628, 1417, 1342, 1341,
	1389, 1299, 1408, 1334, 365, 1297, 330, 197, 225, 0,
	1332, 412, 461, 473, 1407, 1317, 1326, 253, 1324, 471,
	426, 603, 233, 284, 458, 432, 469, 440, 287, 1368,
	1387, 470, 372, 585, 450, 600, 629, 630, 263, 406,
	614, 522, 622, 647, 226, 260, 420, 506, 606, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 635, 224,
	479, 371, 242, 231, 587, 611, 299, 289, 456, 642,
	213, 517, 597, 239, 483, 0, 0, 650, 247, 504,
	609, 598, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	651, 228, 621, 220, 1296, 620, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 607,
	625, 0, 208, 0, 499, 610, 652, 452, 212, 234,
	235, 237, 1312, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 1403, 579, 601, 615, 627,
	633, 634, 636, 637, 638, 639, 640, 643, 641, 407,
	311, 495, 333, 373, 1392, 1435, 425, 472, 240, 605,
	496, 199, 1306, 1311, 1304, 0, 254, 255, 1374, 575,
	1307, 1305, 1363, 1364, 1308, 1426, 1427, 1428, 1413, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 648, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 1396, 1300, 0,
	1309, 1310, 398, 1405, 591, 592, 671, 384, 486, 602,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	618, 619, 623, 205, 462, 463, 464, 465, 292, 613,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 1367, 196, 221, 368, 1431, 454, 288,
	649, 617, 484, 612, 206, 223, 1303, 262, 1315, 1323,
	0, 1329, 1337, 1338, 1351, 1354, 1355, 1356, 1357, 1375,
	1376, 1378, 1386, 1388, 1391, 1393, 1400, 1414, 1434, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 604, 624, 631,
	480, 301, 302, 444, 445, 314, 315, 645, 646, 300,
	599, 632, 596, 644, 626, 438, 378, 1366, 1372, 381,
	281, 305, 320, 1381, 616, 502, 227, 466, 290, 251,
	1399, 1401, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 1362, 1390, 376, 576,
	577, 316, 396, 0, 0, 0, 0, 0, 0, 1420,
	1404, 528, 0, 1346, 1423, 1314, 1333, 1433, 1336, 1339,
	1383, 1292, 1361, 416, 1330, 1318, 1287, 1325, 1288, 1316,
	1348, 270, 1313, 1406, 1365, 1422, 366, 267, 1294, 1285,
	204, 505, 1319, 430, 1335, 203, 1385, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 1429, 370, 1371, 0, 497, 401, 0, 0, 0,
	1410, 1409, 1340, 1350, 1412, 1359, 1397, 1345, 1384, 1302,
	1370, 1424, 1331, 1380, 1425, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 1327, 1377, 608,
	1419, 1328, 1379, 265, 321, 272, 264, 580, 1430, 1411,
	1291, 1358, 1418, 1353, 0, 0, 229, 1421, 1352, 0,
	1382, 0, 1436, 1286, 1373, 0, 1289, 1293, 1432, 1416,
	1322, 275, 0, 0, 0, 0, 0, 0, 0, 1349,
	1360, 1394, 1398, 1343, 0, 0, 0, 0, 0, 0,
	3250, 0, 1320, 0, 1369, 0, 0, 0, 1298, 1290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 1301, 0, 1321,
	1395, 0, 1284, 297, 1295, 402, 257, 0, 453, 1402,
	1415, 1344, 628, 1417, 1342, 1341, 1389, 1299, 1408, 1334,
	365, 1297, 330, 197, 225, 0, 1332, 412, 461, 473,
	1407, 1317, 1326, 253, 1324, 471, 426, 603, 233, 284,
	458, 432, 469, 440, 287, 1368, 1387, 470, 372, 585,
	450, 600, 629, 630, 263, 406, 614, 522, 622, 647,
	226, 260, 420, 506, 606, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 635, 224, 479, 371, 242, 231,
	587, 611, 299, 289, 456, 642, 213, 517, 597, 239,
	483, 0, 0, 650, 247, 504, 609, 598, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 651, 228, 621, 220,
	1296, 620, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 607, 625, 0, 208, 0,
	499, 610, 652, 452, 212, 234, 235, 237, 1312, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 1403, 579, 601, 615, 627, 633, 634, 636, 637,
	638, 639, 640, 643, 641, 407, 311, 495, 333, 373,
	1392, 1435, 425, 472, 240, 605, 496, 199, 1306, 1311,
	1304, 0, 254, 255, 1374, 575, 1307, 1305, 1363, 1364,
	1308, 1426, 1427, 1428, 1413, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 648, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 1396, 1300, 0, 1309, 1310, 398, 1405,
	591, 592, 671, 384, 486, 602, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 618, 619, 623, 205,
	462, 463, 464, 465, 292, 613, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 1367,
	196, 221, 368, 1431, 454, 288, 649, 617, 484, 612,
	206, 223, 1303, 262, 1315, 1323, 0, 1329, 1337, 1338,
	1351, 1354, 1355, 1356, 1357, 1375, 1376, 1378, 1386, 1388,
	1391, 1393, 1400, 1414, 1434, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 604, 624, 631, 480, 301, 302, 444,
	445, 314, 315, 645, 646, 300, 599, 632, 596, 644,
	626, 438, 378, 1366, 1372, 381, 281, 305, 320, 1381,
	616, 502, 227, 466, 290, 251, 1399, 1401, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 1362, 1390, 376, 576, 577, 316, 396, 0,
	0, 0, 0, 0, 0, 1420, 1404, 528, 0, 1346,
	1423, 1314, 1333, 1433, 1336, 1339, 1383, 1292, 1361, 416,
	1330, 1318, 1287, 1325, 1288, 1316, 1348, 270, 1313, 1406,
	1365, 1422, 366, 267, 1294, 1285, 204, 505, 1319, 430,
	1335, 203, 1385, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 1429, 370, 1371,
	0, 497, 401, 0, 0, 0, 1410, 1409, 1340, 1350,
	1412, 1359, 1397, 1345, 1384, 1302, 1370, 1424, 1331, 1380,
	1425, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 1327, 1377, 608, 1419, 1328, 1379, 265,
	321, 272, 264, 580, 1430, 1411, 1291, 1358, 1418, 1353,
	0, 0, 229, 1421, 1352, 0, 1382, 0, 1436, 1286,
	1373, 0, 1289, 1293, 1432, 1416, 1322, 275, 0, 0,
	0, 0, 0, 0, 0, 1349, 1360, 1394, 1398, 1343,
	0, 0, 0, 0, 0, 0, 3211, 0, 1320, 0,
	1369, 0, 0, 0, 1298, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 1301, 0, 1321, 1395, 0, 1284, 297,
	1295, 402, 257, 0, 453, 1402, 1415, 1344, 628, 1417,
	1342, 1341, 1389, 1299, 1408, 1334, 365, 1297, 330, 197,
	225, 0, 1332, 412, 461, 473, 1407, 1317, 1326, 253,
	1324, 471, 426, 603, 233, 284, 458, 432, 469, 440,
	287, 1368, 1387, 470, 372, 585, 450, 600, 629, 630,
	263, 406, 614, 522, 622, 647, 226, 260, 420, 506,
	606, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	635, 224, 479, 371, 242, 231, 587, 611, 299, 289,
	456, 642, 213, 517, 597, 239, 483, 0, 0, 650,
	247, 504, 609, 598, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 651, 228, 621, 220, 1296, 620, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 607, 625, 0, 208, 0, 499, 610, 652, 452,
	212, 234, 235, 237, 1312, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 1403, 579, 601,
	615, 627, 633, 634, 636, 637, 638, 639, 640, 643,
	641, 407, 311, 495, 333, 373, 1392, 1435, 425, 472,
	240, 605, 496, 199, 1306, 1311, 1304, 0, 254, 255,
	1374, 575, 1307, 1305, 1363, 1364, 1308, 1426, 1427, 1428,
	1413, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 648,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 1396,
	1300, 0, 1309, 1310, 398, 1405, 591, 592, 671, 384,
	486, 602, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 618, 619, 623, 205, 462, 463, 464, 465,
	292, 613, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 1367, 196, 221, 368, 1431,
	454, 288, 649, 617, 484, 612, 206, 223, 1303, 262,
	1315, 1323, 0, 1329, 1337, 1338, 1351, 1354, 1355, 1356,
	1357, 1375, 1376, 1378, 1386, 1388, 1391, 1393, 1400, 1414,
	1434, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 604,
	624, 631, 480, 301, 302, 444, 445, 314, 315, 645,
	646, 300, 599, 632, 596, 644, 626, 438, 378, 1366,
	1372, 381, 281, 305, 320, 1381, 616, 502, 227, 466,
	290, 251, 1399, 1401, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 1362, 1390,
	376, 576, 577, 316, 396, 0, 0, 0, 0, 0,
	0, 1420, 1404, 528, 0, 1346, 1423, 1314, 1333, 1433,
	1336, 1339, 1383, 1292, 1361, 416, 1330, 1318, 1287, 1325,
	1288, 1316, 1348, 270, 1313, 1406, 1365, 1422, 366, 267,
	1294, 1285, 204, 505, 1319, 430, 1335, 203, 1385, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 1429, 370, 1371, 0, 497, 401, 0,
	0, 0, 1410, 1409, 1340, 1350, 1412, 1359, 1397, 1345,
	1384, 1302, 1370, 1424, 1331, 1380, 1425, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 1327,
	1377, 608, 1419, 1328, 1379, 265, 321, 272, 264, 580,
	1430, 1411, 1291, 1358, 1418, 1353, 0, 0, 229, 1421,
	1352, 0, 1382, 0, 1436, 1286, 1373, 0, 1289, 1293,
	1432, 1416, 1322, 275, 0, 0, 0, 0, 0, 0,
	0, 1349, 1360, 1394, 1398, 1343, 0, 0, 0, 0,
	0, 0, 2406, 0, 1320, 0, 1369, 0, 0, 0,
	1298, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 1301,
	0, 1321, 1395, 0, 1284, 297, 1295, 402, 257, 0,
	453, 1402, 1415, 1344, 628, 1417, 1342, 1341, 1389, 1299,
	1408, 1334, 365, 1297, 330, 197, 225, 0, 1332, 412,
	461, 473, 1407, 1317, 1326, 253, 1324, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 1368, 1387, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 1296, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	1312, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 1403, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 1392, 1435, 425, 472, 240, 605, 496, 199,
	1306, 1311, 1304, 0, 254, 255, 1374, 575, 1307, 1305,
	1363, 1364, 1308, 1426, 1427, 1428, 1413, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 1396, 1300, 0, 1309, 1310,
	398, 1405, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 1367, 196, 221, 368, 1431, 454, 288, 649, 617,
	484, 612, 206, 223, 1303, 262, 1315, 1323, 0, 1329,
	1337, 1338, 1351, 1354, 1355, 1356, 1357, 1375, 1376, 1378,
	1386, 1388, 1391, 1393, 1400, 1414, 1434, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 1366, 1372, 381, 281, 305,
	320, 1381, 616, 502, 227, 466, 290, 251, 1399, 1401,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 1362, 1390, 376, 576, 577, 316,
	396, 0, 0, 0, 0, 0, 0, 1420, 1404, 528,
	0, 1346, 1423, 1314, 1333, 1433, 1336, 1339, 1383, 1292,
	1361, 416, 1330, 1318, 1287, 1325, 1288, 1316, 1348, 270,
	1313, 1406, 1365, 1422, 366, 267, 1294, 1285, 204, 505,
	1319, 430, 1335, 203, 1385, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 1429,
	370, 1371, 0, 497, 401, 0, 0, 0, 1410, 1409,
	1340, 1350, 1412, 1359, 1397, 1345, 1384, 1302, 1370, 1424,
	1331, 1380, 1425, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 0, 507, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 1327, 1377, 608, 1419, 1328,
	1379, 265, 321, 272, 264, 580, 1430, 1411, 1291, 1358,
	1418, 1353, 0, 0, 229, 1421, 1352, 0, 1382, 0,
	1436, 1286, 1373, 0, 1289, 1293, 1432, 1416, 1322, 275,
	0, 0, 0, 0, 0, 0, 0, 1349, 1360, 1394,
	1398, 1343, 0, 0, 0, 0, 0, 0, 0, 0,
	1320, 0, 1369, 0, 0, 0, 1298, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 1301, 0, 1321, 1395, 0,
	1284, 297, 1295, 402, 257, 0, 453, 1402, 1415, 1344,
	628, 1417, 1342, 1341, 1389, 1299, 1408, 1334, 365, 1297,
	330, 197, 225, 0, 1332, 412, 461, 473, 1407, 1317,
	1326, 253, 1324, 471, 426, 603, 233, 284, 458, 432,
	469, 440, 287, 1368, 1387, 470, 372, 585, 450, 600,
	629, 630, 263, 406, 614, 522, 622, 647, 226, 260,
	420, 506, 606, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 635, 224, 479, 371, 242, 231, 587, 611,
	299, 289, 456, 642, 213, 517, 597, 239, 483, 0,
	0, 650, 247, 504, 609, 598, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 651, 228, 621, 220, 1296, 620,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 607, 625, 0, 208, 0, 499, 610,
	652, 452, 212, 234, 235, 237, 1312, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 1403,
	579, 601, 615, 627, 633, 634, 636, 637, 638, 639,
	640, 643, 641, 407, 311, 495, 333, 373, 1392, 1435,
	425, 472, 240, 605, 496, 199, 1306, 1311, 1304, 0,
	254, 255, 1374, 575, 1307, 1305, 1363, 1364, 1308, 1426,
	1427, 1428, 1413, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 648, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 1396, 1300, 0, 1309, 1310, 398, 1405, 591, 592,
	671, 384, 486, 602, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 618, 619, 623, 205, 462, 463,
	464, 465, 292, 613, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 1367, 196, 221,
	368, 1431, 454, 288, 649, 617, 484, 612, 206, 223,
	1303, 262, 1315, 1323, 0, 1329, 1337, 1338, 1351, 1354,
	1355, 1356, 1357, 1375, 1376, 1378, 1386, 1388, 1391, 1393,
	1400, 1414, 1434, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 604, 624, 631, 480, 301, 302, 444, 445, 314,
	315, 645, 646, 300, 599, 632, 596, 644, 626, 438,
	378, 1366, 1372, 381, 281, 305, 320, 1381, 616, 502,
	227, 466, 290, 251, 1399, 1401, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	1362, 1390, 376, 576, 577, 316, 396, 0, 0, 0,
	0, 0, 0, 1420, 1404, 528, 0, 1346, 1423, 1314,
	1333, 1433, 1336, 1339, 1383, 1292, 1361, 416, 1330, 1318,
	1287, 1325, 1288, 1316, 1348, 270, 1313, 1406, 1365, 1422,
	366, 267, 1294, 1285, 204, 505, 1319, 430, 1335, 203,
	1385, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 1429, 370, 1371, 0, 497,
	401, 0, 0, 0, 1410, 1409, 1340, 1350, 1412, 1359,
	1397, 1345, 1384, 1302, 1370, 1424, 1331, 1380, 1425, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 1327, 1377, 608, 1419, 1328, 1379, 265, 321, 272,
	264, 580, 1430, 1411, 1291, 1358, 1418, 1353, 0, 0,
	229, 1421, 1352, 0, 1382, 0, 1436, 1286, 1373, 0,
	1289, 1293, 1432, 1416, 1322, 275, 0, 0, 0, 0,
	0, 0, 0, 1349, 1360, 1394, 1398, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 1369, 0,
	0, 0, 1298, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 1301, 0, 1321, 1395, 0, 1284, 297, 1295, 402,
	257, 0, 453, 1402, 1415, 1344, 628, 1417, 1342, 1341,
	1389, 1299, 1408, 1334, 365, 1297, 330, 197, 225, 0,
	1332, 412, 461, 473, 1407, 1317, 1326, 253, 1324, 471,
	426, 603, 233, 284, 458, 432, 469, 440, 287, 1368,
	1387, 470, 372, 585, 450, 600, 629, 630, 263, 406,
	614, 522, 622, 647, 226, 260, 420, 506, 606, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 635, 224,
	479, 371, 242, 231, 587, 611, 299, 289, 456, 642,
	213, 517, 597, 239, 483, 0, 0, 650, 247, 504,
	609, 598, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	651, 228, 621, 220, 1296, 620, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 607,
	625, 0, 208, 0, 499, 610, 652, 452, 212, 234,
	235, 237, 1312, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 1403, 579, 601, 615, 627,
	633, 634, 636, 637, 638, 639, 640, 643, 641, 407,
	311, 495, 333, 373, 1392, 1435, 425, 472, 240, 605,
	496, 199, 1306, 1311, 1304, 0, 254, 255, 1374, 575,
	1307, 1305, 1363, 1364, 1308, 1426, 1427, 1428, 1413, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 648, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 1396, 1300, 0,
	1309, 1310, 398, 1405, 591, 592, 671, 384, 486, 602,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	618, 619, 623, 205, 462, 463, 464, 465, 292, 613,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 1367, 196, 221, 368, 1431, 454, 288,
	649, 617, 484, 612, 206, 223, 1303, 262, 1315, 1323,
	0, 1329, 1337, 1338, 1351, 1354, 1355, 1356, 1357, 1375,
	1376, 1378, 1386, 1388, 1391, 1393, 1400, 1414, 1434, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 604, 624, 631,
	480, 301, 302, 444, 445, 314, 315, 645, 646, 300,
	599, 632, 596, 644, 626, 438, 378, 1366, 1372, 381,
	281, 305, 320, 1381, 616, 502, 227, 466, 290, 251,
	1399, 1401, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 1362, 1390, 376, 576,
	577, 316, 396, 0, 0, 0, 0, 0, 0, 1420,
	1404, 528, 0, 1346, 1423, 1314, 1333, 1433, 1336, 1339,
	1383, 1292, 1361, 416, 1330, 1318, 1287, 1325, 1288, 1316,
	1348, 270, 1313, 1406, 1365, 1422, 366, 267, 1294, 1285,
	204, 505, 1319, 430, 1335, 203, 1385, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 1429, 370, 1371, 0, 497, 401, 0, 0, 0,
	1410, 1409, 1340, 1350, 1412, 1359, 1397, 1345, 1384, 1302,
	1370, 1424, 1331, 1380, 1425, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 1327, 1377, 608,
	1419, 1328, 1379, 265, 321, 272, 264, 580, 1430, 1411,
	1291, 1358, 1418, 1353, 0, 0, 229, 1421, 1352, 0,
	1382, 0, 1436, 1286, 1373, 0, 1289, 1293, 1432, 1416,
	1322, 275, 0, 0, 0, 0, 0, 0, 0, 1349,
	1360, 1394, 1398, 1343, 0, 0, 0, 0, 0, 0,
	0, 0, 1320, 0, 1369, 0, 0, 0, 1298, 1290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 1301, 0, 1321,
	1395, 0, 1284, 297, 1295, 402, 257, 0, 453, 1402,
	1415, 1344, 628, 1417, 1342, 1341, 1389, 1299, 1408, 1334,
	365, 1297, 330, 197, 225, 0, 1332, 412, 461, 473,
	1407, 1317, 1326, 253, 1324, 471, 426, 603, 233, 284,
	458, 432, 469, 440, 287, 1368, 1387, 470, 372, 585,
	450, 600, 629, 630, 263, 406, 614, 522, 622, 647,
	226, 260, 420, 506, 606, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 635, 224, 479, 371, 242, 231,
	587, 611, 299, 289, 456, 642, 213, 517, 597, 239,
	483, 0, 0, 650, 247, 504, 609, 598, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 651, 228, 621, 220,
	1296, 620, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 607, 625, 0, 208, 0,
	499, 610, 652, 452, 212, 234, 235, 237, 1312, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 1403, 579, 601, 615, 627, 633, 634, 636, 637,
	638, 639, 640, 643, 641, 407, 311, 495, 333, 373,
	1392, 1435, 425, 472, 240, 605, 496, 199, 1306, 1311,
	1304, 0, 254, 255, 1374, 575, 1307, 1305, 1363, 1364,
	1308, 1426, 1427, 1428, 1413, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 648, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 1396, 1300, 0, 1309, 1310, 398, 1405,
	591, 592, 671, 384, 486, 602, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 618, 619, 623, 205,
	462, 463, 464, 465, 292, 613, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 1367,
	196, 221, 368, 1431, 454, 288, 649, 617, 484, 612,
	206, 223, 1303, 262, 1315, 1323, 0, 1329, 1337, 1338,
	1351, 1354, 1355, 1356, 1357, 1375, 1376, 1378, 1386, 1388,
	1391, 1393, 1400, 1414, 1434, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 604, 624, 631, 480, 301, 302, 444,
	445, 314, 315, 645, 646, 300, 599, 632, 596, 644,
	626, 438, 378, 1366, 1372, 381, 281, 305, 320, 1381,
	616, 502, 227, 466, 290, 251, 1399, 1401, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 1362, 1390, 376, 576, 577, 316, 396, 0,
	0, 0, 0, 0, 0, 1420, 1404, 528, 0, 1346,
	1423, 1314, 1333, 1433, 1336, 1339, 1383, 1292, 1361, 416,
	1330, 1318, 1287, 1325, 1288, 1316, 1348, 270, 1313, 1406,
	1365, 1422, 366, 267, 1294, 1285, 204, 505, 1319, 430,
	1335, 203, 1385, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 1429, 370, 1371,
	0, 497, 401, 0, 0, 0, 1410, 1409, 1340, 1350,
	1412, 1359, 1397, 1345, 1384, 1302, 1370, 1424, 1331, 1380,
	1425, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 1327, 1377, 608, 1419, 1328, 1379, 265,
	321, 272, 264, 580, 1430, 1411, 1291, 1358, 1418, 1353,
	0, 0, 229, 1421, 1352, 0, 1382, 0, 1436, 1286,
	1373, 0, 1289, 1293, 1432, 1416, 1322, 275, 0, 0,
	0, 0, 0, 0, 0, 1349, 1360, 1394, 1398, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 1320, 0,
	1369, 0, 0, 0, 1298, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 1301, 0, 1321, 1395, 0, 1284, 297,
	1295, 402, 257, 0, 453, 1402, 1415, 1344, 628, 1417,
	1342, 1341, 1389, 1299, 1408, 1334, 365, 1297, 330, 197,
	225, 0, 1332, 412, 461, 473, 1407, 1317, 1326, 253,
	1324, 471, 426, 603, 233, 284, 458, 432, 469, 440,
	287, 1368, 1387, 470, 372, 585, 450, 600, 629, 630,
	263, 406, 614, 522, 622, 647, 226, 260, 420, 506,
	606, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	635, 224, 479, 371, 242, 231, 587, 611, 299, 289,
	456, 642, 213, 517, 597, 239, 483, 0, 0, 650,
	247, 504, 609, 598, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 651, 228, 621, 220, 1296, 620, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 607, 625, 0, 208, 0, 499, 610, 652, 452,
	212, 234, 235, 237, 1312, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 1403, 579, 601,
	615, 627, 633, 634, 636, 637, 638, 639, 640, 643,
	641, 407, 311, 495, 333, 373, 1392, 1435, 425, 472,
	240, 605, 496, 199, 1306, 1311, 1304, 0, 254, 255,
	1374, 575, 1307, 1305, 1363, 1364, 1308, 1426, 1427, 1428,
	1413, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 648,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 1396,
	1300, 0, 1309, 1310, 398, 1405, 591, 592, 671, 384,
	486, 602, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 618, 619, 623, 205, 462, 463, 464, 465,
	292, 613, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 1367, 196, 221, 368, 1431,
	454, 288, 649, 617, 484, 612, 206, 223, 1303, 262,
	1315, 1323, 0, 1329, 1337, 1338, 1351, 1354, 1355, 1356,
	1357, 1375, 1376, 1378, 1386, 1388, 1391, 1393, 1400, 1414,
	1434, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 604,
	624, 631, 480, 301, 302, 444, 445, 314, 315, 645,
	646, 300, 599, 632, 596, 644, 626, 438, 378, 1366,
	1372, 381, 281, 305, 320, 1381, 616, 502, 227, 466,
	290, 251, 1399, 1401, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 1362, 1390,
	376, 576, 577, 316, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 2228, 2229, 2230, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 2435, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 2436, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 86, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 94, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 4092, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 1751, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 1068, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 3167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 747, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 743, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 3163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 1089, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 1089, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 763,
	0, 0, 0, 270, 768, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 775, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1022, 507,
	958, 1089, 924, 962, 1023, 975, 976, 977, 963, 0,
	238, 964, 965, 245, 966, 0, 923, 806, 808, 807,
	873, 874, 875, 876, 877, 878, 879, 809, 810, 804,
	971, 608, 978, 979, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 0, 774,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 0, 0, 0, 0, 918, 0, 759, 0,
	0, 767, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 2117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 917, 0, 0, 628, 0, 0, 915, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 968, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 969, 970, 256, 651, 814,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 822, 823, 280, 307, 899, 898,
	897, 306, 308, 895, 896, 894, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 905,
	927, 916, 780, 781, 906, 907, 931, 908, 783, 784,
	928, 929, 777, 778, 782, 930, 932, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 919, 766, 765, 0, 772,
	773, 0, 802, 803, 805, 811, 812, 813, 824, 871,
	872, 880, 882, 883, 881, 884, 885, 886, 889, 890,
	891, 892, 887, 888, 893, 785, 789, 786, 787, 788,
	800, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 801, 942, 943, 944, 945, 946, 947, 817, 821,
	820, 818, 819, 815, 816, 843, 842, 844, 845, 846,
	847, 848, 849, 851, 850, 852, 853, 854, 855, 856,
	857, 825, 826, 829, 830, 828, 827, 831, 840, 841,
	832, 833, 834, 835, 836, 837, 839, 838, 858, 859,
	860, 861, 862, 864, 863, 867, 868, 866, 865, 870,
	869, 764, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 933, 262, 934, 0, 0, 938,
	0, 0, 0, 940, 939, 0, 941, 903, 902, 0,
	0, 935, 936, 0, 937, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 948,
	949, 950, 951, 952, 953, 954, 955, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 973, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	1140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 1139, 628, 0, 0, 0, 0, 0,
	1136, 1137, 365, 1097, 330, 197, 225, 1130, 1134, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1708, 507,
	958, 0, 0, 1705, 0, 0, 0, 0, 1703, 0,
	238, 1704, 1702, 245, 1707, 0, 923, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 86, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 94, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 2422, 0, 0, 2421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 1774, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 1776, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1778, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 1476, 0, 1477, 1478, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 86, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 1751, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 94, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 2422, 0, 0, 2421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 2369, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1958, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 2367, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 1097, 330, 197, 225, 1095, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 2369, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1958, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 1751, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 3723, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 2128, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 2874, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 2859, 0, 0, 0, 0,
	238, 0, 0, 245, 2860, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 1797, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1796, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	725, 726, 727, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 4067, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1958, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 3723, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 2423, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1778, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 2075, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 2066, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1925, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1923, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1921, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1919, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1917, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1913, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1911, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1909, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 1884, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 1782, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 507,
	958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1455, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 1454, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 674, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 4133,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 608, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 603,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 600, 629, 630, 263, 406, 614, 522,
	622, 647, 226, 260, 420, 506, 606, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 635, 224, 479, 371,
	242, 231, 587, 611, 299, 289, 456, 642, 213, 517,
	597, 239, 483, 0, 0, 650, 247, 504, 609, 598,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 651, 228,
	621, 220, 0, 620, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 607, 625, 0,
	208, 0, 499, 610, 652, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 601, 615, 627, 633, 634,
	636, 637, 638, 639, 640, 643, 641, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 605, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 648, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 671, 384, 486, 602, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 618, 619,
	623, 205, 462, 463, 464, 465, 292, 613, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 649, 617,
	484, 612, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 604, 624, 631, 480, 301,
	302, 444, 445, 314, 315, 645, 646, 300, 599, 632,
	596, 644, 626, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 616, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 0, 0, 376, 576, 577, 316,
}

var yyPact = [...]int{
	-1000, -1000, 4305, -1000, -543, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2406, 2479, -1000, -1000, -1000, -1000, 2631, -1000, 1025,
	2115, -1000, 2419, 7084, -1000, 56850, 485, -1000, 53890, -452,
	851, 261, 37610, -1000, 206, -1000, 193, 55370, 199, -1000,
	-1000, -1000, -1000, -452, 22810, 2326, 54, 52, 56850, -1000,
	-1000, -1000, -1000, -369, 2569, 2093, -1000, 409, -1000, -1000,
	-1000, -1000, -1000, -1000, 53150, -1000, 1102, -1000, -1000, 2433,
	2441, 2314, 899, 2317, -1000, 2507, 2093, -1000, 22810, 2559,
	2387, 22070, 22070, 448, -1000, -1000, 296, -1000, -1000, 32430,
	56850, 40570, 270, -1000, 2419, -1000, -1000, -1000, 197, -1000,
	325, 2001, -1000, 2000, -1000, 792, 896, 361, 464, 463,
	360, 359, 358, 357, 356, 355, 341, 336, 370, -1000,
	933, 933, -225, -227, 1442, 442, 432, 432, 1037, 465,
	2393, 2389, -1000, -1000, 933, 933, 933, 364, 933, 933,
	933, 933, 304, 301, 933, 933, 933, 933, 933, 933,
	933, 933, 933, 933, 933, 933, 933, 933, 933, 933,
	933, 930, 2419, 282, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 56850, 179, 56850, -1000, 788, 483, -1000, -1000,
	-456, 1052, 1052, 94, 1052, 1052, 1052, 1052, 186, 1006,
	46, -1000, 184, 264, 159, 279, 1096, 209, -1000, -1000,
	260, 1096, 1884, -1000, 904, 275, 161, -1000, 1052, 1052,
	-1000, 15386, 220, 15386, 15386, 272, 178, -1000, 2411, -1000,
	-1000, -1000, -1000, -1000, 1359, -1000, -1000, -1000, -1000, -46,
	461, -1000, -1000, -1000, -1000, 55370, 52410, 265, -1000, -1000,
	34, 1742, 1146, 22810, 1225, 894, -1000, -1000, 1322, 864,
	-1000, -1000, -1000, -1000, -1000, 501, -1000, 25030, 25030, 25030,
	25030, -1000, -1000, 2013, 51670, 2013, 2013, 25030, 2013, 25030,
	2013, 2013, 2013, 2013, 22810, 2013, 2013, 2013, 2013, -1000,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, -1000,
	-1000, -1000, -1000, 2013, 787, 2013, 2013, 2013, 2013, 2013,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2013, 2013, 2013,
	2013, 2013, 2013, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, -1000, -1000, -1000, 1678,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27990, 1566, 1562,
	1548, -1000, 19850, 2013, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 56850, -1000, 2013, 228, 55370,
	55370, 332, 1350, -1000, -1000, 2507, 2093, -1000, 2569, 2528,
	409, -1000, 3932, 1586, 1715, 1384, 2093, 1964, 56850, -1000,
	2022, -1000, -1000, -1000, -322, -380, 2233, 1504, 1869, -1000,
	-1000, -1000, -1000, 2448, 22810, -1000, -1000, 2604, -1000, 29470,
	754, 2602, 50930, -1000, 448, 448, 1999, 433, -12, -1000,
	-1000, -1000, -1000, 958, 36870, -1000, -1000, -1000, -1000, -1000,
	1888, 56850, -1000, -1000, 6168, 55370, -1000, 2106, -1000, 1868,
	-1000, 2051, 22810, 2131, 480, 55370, 474, 469, 466, -1000,
	-70, -1000, -1000, -1000, -1000, -1000, -1000, 933, 933, 933,
	-1000, 369, 2551, 7084, 8508, -1000, -1000, -1000, 50190, 2101,
	55370, -1000, 2096, -1000, 1020, 817, 820, 820, 55370, -1000,
	-1000, 56110, 55370, 1019, 1010, 55370, 55370, 55370, 55370, -1000,
	49450, -1000, 48710, 47970, 1347, 55370, 47230, 46490, 45750, 45010,
	44270, -1000, 2226, -1000, 2151, -1000, -1000, -1000, 56110, 55370,
	55370, 56110, 55370, 56110, 56850, 55370, -1000, -1000, 371, -1000,
	-1000, 1337, 1336, 1335, 933, 933, 1331, 1865, 1863, 1862,
	933, 933, 1329, 1854, 39090, 1853, 274, 1316, 1314, 1310,
	1346, 1817, 277, 1815, 1315, 1252, 1297, 55370, 2095, 56850,
	-1000, 255, 1038, 985, 955, 2419, 2322, 1996, 458, 477,
	55370, 435, 435, 55370, -1000, 16132, 56850, 231, -1000, 1801,
	22810, -1000, 1103, 1096, 1096, -1000, -1000, -1000, -1000, -1000,
	-1000, 1052, 56850, 1103, -1000, -1000, -1000, 1096, 1052, 56850,
	1052, 1052, 1052, 1052, 1096, 1096, 1096, 1052, 56850, 56850,
	56850, 56850, 56850, 56850, 56850, 56850, 56850, 15386, 904, 1052,
	-457, -1000, 1799, -1000, -1000, -1000, 2227, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15386, 15386, -1000,
	-1000, 2504, -1000, -1000, -1000, -1000, 1992, -1000, 189, 13,
	196, -1000, 43530, 472, 951, -1000, 472, -1000, -1000, -1000,
	1979, 42790, -1000, -458, -459, -465, -468, -1000, -1000, -1000,
	-469, -473, -1000, -1000, -1000, 22810, 22810, 22810, 22810, -276,
	-1000, 1279, 25030, 2421, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22810, 217, 1212, 25030, 25030, 25030, 25030, 25030, 25030,
	25030, 26510, 25770, 25030, 25030, 25030, 25030, 25030, 25030, -1000,
	-1000, 34650, 6795, 6795, 864, 864, 864, 864, -1000, -184,
	1978, 56110, -1000, -1000, -1000, 741, 22810, 22810, 864, -1000,
	1373, 2218, 19850, 22810, 22810, 22810, 22810, 966, 1146, 56110,
	22810, -1000, 1384, -1000, -1000, -1000, -1000, 1152, -1000, -1000,
	1055, 2363, 2363, 2363, 2363, 22810, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 2363, 22810, 723, 723, 860,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 18370, 22810,
	22810, 25030, 22810, 22810, 22810, 1384, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 1384, 22810, 1511, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 17624, 22810, 22810, 22810, 22810,
	22810, -1000, -1000, -1000, -1000, -1000, -1000, 22810, 22810, 22810,
	22810, 22810, 22810, 22810, 22810, 1384, 22810, 22810, 22810, 22810,
	22810, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1764, 1665, 1619, 22810, -1000, 1966, -1000, -196,
	31690, 22810, 1777, 2600, 2145, 55370, -1000, -1000, -1000, -1000,
	2507, -1000, 2507, 1764, 3873, 2266, 22070, -1000, -1000, 3873,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1861, -1000, 56850, 1964, 2495, 55370, -1000,
	-309, -1000, -314, 2261, 1748, 344, -1000, 22810, 22810, 1962,
	-1000, 1332, 56850, -1000, -276, -1000, 42050, -1000, -1000, 14640,
	56850, 330, 56850, -1000, 30950, 41310, 269, -1000, -12, 1935,
	-1000, 23, 8, 19110, 859, -1000, -1000, -1000, 1442, 27250,
	1716, 859, 102, -1000, -1000, -1000, 2051, -1000, 2051, 2051,
	2051, 2051, 344, 344, 344, 344, -1000, -1000, -1000, -1000,
	-1000, 2094, 2051, 2089, -1000, 2051, 2051, 2051, 2051, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2079, 2079, 2079, 2063,
	2063, 2052, 2052, 414, -1000, 22810, 441, 40570, 2464, 1295,
	1439, 255, 443, 2144, 55370, 55370, 55370, 443, -1000, 1450,
	1412, 1390, -1000, -526, 1961, -1000, -1000, 2545, -1000, -1000,
	967, 1044, 1033, 898, 55370, 229, 326, -1000, 410, -1000,
	40570, 55370, 1008, 820, 55370, -1000, 55370, -1000, -1000, -1000,
	-1000, -1000, 55370, -1000, -1000, 1955, -1000, 1991, 1243, 1032,
	1171, 999, 1955, -1000, -1000, -189, 1955, -1000, 1955, -1000,
	1955, -1000, 1955, -1000, 1955, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 972, 280, -384, 55370, 229, 454,
	-1000, 453, 34650, -1000, -1000, -1000, 34650, 34650, -1000, -1000,
	-1000, -1000, 1745, 1713, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -517, 56850, -1000, 240, 937, 267, 300,
	305, 56850, 789, 2383, 2377, 2353, 2350, 2348, 2347, 2345,
	262, 297, 56850, 56850, 435, 2208, 56850, 2471, 56850, -1000,
	-1000, -1000, -1000, -1000, 1711, 1696, -1000, 1146, 56850, -1000,
	-1000, 1052, 1052, -1000, -1000, 56850, 1052, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1052, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 56850, -1000, -1000, -1000, -1000, 1694, -1000, -46, 187,
	-1000, -1000, 55370, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -116, -1000, 306, 21, 377, -1000, -1000, -1000,
	-1000, -1000, 2499, -1000, 1146, 976, 979, -1000, 2013, -1000,
	-1000, 1317, -1000, -1000, -1000, -1000, -1000, 2013, 2013, 2013,
	-1000, -1000, -1000, -1000, -1000, 217, 25030, 25030, 25030, 1471,
	504, 1340, 1383, 1393, 1161, 1161, 992, 25030, 992, 25030,
	871, 871, 871, 871, 871, -1000, -1000, -1000, -1000, -1000,
	-1000, 1678, -1000, 1676, -1000, 2013, 56110, 1850, 17624, 1915,
	2489, 1384, 889, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3569, 1384, 1742, 1384, 1693, 3558, 965,
	-1000, 22810, 1384, 3528, -1000, -1000, 1384, 1384, 22810, -1000,
	-1000, 22810, 22810, 22810, 22810, 1439, 1439, 1439, 1439, 1439,
	1439, 1439, 1439, 1439, 1439, 22810, 1439, 1951, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1948, 2595, 1591, 1439,
	1439, 1439, 1439, 3503, 1439, 1439, 22810, 1603, -1000, -1000,
	-1000, 1547, 3498, 1360, 3488, 1439, 1439, -1000, 1439, 3484,
	3480, 1384, 2628, 2615, 1439, 1439, 1439, 1439, 1439, 2611,
	2577, 1439, 1439, 2566, 1439, 3474, 1439, 2561, 2543, 2482,
	2476, 2462, 2457, 2452, 2444, 2432, 2362, 2358, 2354, 2337,
	2333, 2329, 2324, 2320, 2316, 1439, 1439, 1439, 3460, 1439,
	3455, 1439, 3446, 1439, 1439, 3420, 2254, 2225, 1384, 1943,
	-1000, 3413, 1439, 3409, 3405, 3389, 2202, 3381, 3374, 3360,
	1439, 1439, 1439, 2194, 3356, 3342, 3252, 3100, 3069, 3043,
	3039, 3035, 3025, 1439, 1619, 1619, 1619, 1619, 1619, 3020,
	-279, 1439, 1384, -1000, -1000, -1000, -1000, -1000, 3007, 2188,
	3003, 2996, 2972, 2959, 1384, 2013, 540, -1000, -1000, 1619,
	1384, 1384, 1619, 1619, 2936, 2929, 2920, 2908, 2868, 2860,
	1439, 1439, -1000, 1439, 2832, 2815, 2171, 2140, 1384, -1000,
	1619, 56850, -1000, -448, -1000, -8, 980, 2013, -1000, 39090,
	1384, -1000, 5214, -1000, 1250, -1000, -1000, -1000, -1000, -1000,
	36130, 1900, -1000, -1000, -1000, -1000, 2013, 1848, -1000, -1000,
	-1000, -1000, 344, 78, 35390, 835, 835, 124, 1146, 1146,
	22810, -1000, -1000, -1000, -1000, -1000, -1000, 533, 2574, 372,
	2013, -1000, 1952, 2696, -1000, -1000, -1000, 2492, 28730, -1000,
	-1000, 2013, 2013, 56850, 1890, 1883, -1000, 527, -1000, 1374,
	1935, -12, -1, -1000, -1000, -1000, -1000, 1146, -1000, 1371,
	333, 366, -1000, 393, -1000, -1000, -1000, -1000, 2338, 84,
	-1000, -1000, -1000, 374, 344, -1000, -1000, -1000, -1000, -1000,
	-1000, 1674, -1000, 1674, -1000, -1000, -1000, -1000, -1000, 1273,
	-1000, -1000, -1000, -1000, 1271, -1000, -1000, 1270, -1000, -1000,
	1820, 2123, 441, -1000, -1000, 933, 1669, -1000, -1000, 2340,
	933, 933, 55370, -1000, -1000, 1682, 2464, 240, 56850, 973,
	2204, -1000, 2144, 2144, 2144, 56850, -1000, -1000, -1000, -1000,
	-1000, -1000, -519, 175, 570, -1000, -1000, -1000, 7239, 55370,
	1840, -1000, 233, -1000, 1657, -1000, 55370, -1000, 1829, 2062,
	55370, 55370, -1000, -1000, -1000, 55370, 2013, -1000, -1000, -1000,
	-1000, 476, 2415, 293, -1000, -1000, -297, -1000, -1000, 229,
	233, 56110, 55370, 859, -1000, -1000, -1000, -1000, -1000, -520,
	1773, 467, 234, 506, 56850, 56850, 56850, 56850, 56850, 56850,
	509, -1000, -1000, 33, -1000, -1000, 212, -1000, -1000, -1000,
	-1000, -1000, -1000, 212, -1000, -1000, -1000, -1000, -1000, 276,
	447, -1000, 56850, 56850, 943, -1000, -1000, -1000, -1000, -1000,
	1096, -1000, -1000, 1096, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2409, 56850, 19, -486, -1000,
	-483, 22810, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1246,
	478, 1340, 25030, 25030, 2218, 2218, 25030, -1000, -1000, -1000,
	1024, 1024, 34650, -1000, 25030, 22810, -1000, -1000, 22810, 22810,
	22810, 961, -1000, 22810, 1204, -1000, 22810, -1000, -279, 1619,
	1439, 1439, 1439, 1439, -279, -279, -279, -279, -279, -279,
	-279, -279, -279, -279, 1987, -1000, 22810, 22810, 22810, 1384,
	329, -1000, -1000, -1000, -279, 22810, -1000, -1000, 2587, -1000,
	22810, -1000, 34650, 22810, 22810, 22810, -1000, -1000, -1000, 22810,
	22810, -1000, -1000, 22810, -1000, 22810, -1000, -1000, -1000, -1000,
	-1000, -1000, 22810, -1000, 22810, -1000, -1000, -1000, 22810, -1000,
	22810, -1000, -1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810,
	-1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810,
	-1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810,
	-1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810, -1000, -1000,
	-1000, 22810, -1000, 22810, -1000, 22810, -1000, -1000, 22810, -1000,
	22810, -1000, 22810, -1000, 22810, 22810, -1000, 22810, 22810, 22810,
	-1000, 22810, 22810, 22810, 22810, -1000, -1000, -1000, -1000, 22810,
	22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, 22810, -1000,
	-1000, -1000, -1000, -1000, -1000, 22810, -1000, 40570, 5, -279,
	1511, 5, 1511, 24290, 791, 484, 23550, -1000, 22810, 16878,
	-1000, -1000, -1000, -1000, -1000, 22810, 22810, 22810, 22810, 22810,
	22810, -1000, -1000, -1000, 22810, 22810, -1000, 22810, -1000, 22810,
	-1000, -1000, -1000, -1000, -1000, 980, -1000, 446, 440, 820,
	55370, -1000, -1000, -1000, -1000, 1931, -1000, 2509, -1000, 2281,
	2272, 2583, 2574, 22070, -1000, 30950, -1000, -1000, 55370, -439,
	-1000, 2315, 2285, 835, 835, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13894, 2507, 22810, 2196, 56110, 223, -1000, 30210,
	55370, 56110, 30950, 30950, 30950, 30950, 30950, -1000, 2232, 2228,
	-1000, 2222, 2221, 2241, 56850, -1000, 1764, 1771, -1000, 22810,
	33170, 1921, 30950, -1000, -1000, 30950, 56850, 13148, -1000, -1000,
	17, 3, -1000, -1000, -1000, -1000, 1442, -1000, -1000, 1082,
	2491, 2335, -1000, -1000, -1000, -1000, -1000, 1767, -1000, 1754,
	1929, 1744, 1734, 280, -1000, 2130, 2404, 933, 933, -1000,
	1261, -1000, 1373, 1662, 1658, -1000, -1000, -1000, 456, -1000,
	2468, 56850, 2193, 2191, 2189, -1000, -534, 1249, 2061, 2103,
	22810, 2060, 2544, 1842, 55370, -1000, -1000, 56110, -1000, 263,
	-1000, 441, 55370, -1000, -1000, -1000, 326, 56850, -1000, 9701,
	-1000, -1000, -1000, 233, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 56850, 245, -1000, 2053, 1355, -1000, -1000, 2137, -1000,
	-1000, -1000, -1000, -1000, 232, 205, 1636, 208, 1600, 208,
	-1000, 56850, 882, 2123, 56850, -1000, -1000, -1000, 1052, 1052,
	-1000, -1000, 2401, -1000, 1373, 1439, 25030, 25030, -1000, 864,
	-1000, -1000, 455, -258, 2051, 2051, -1000, 2051, 2052, -1000,
	2051, 169, 2051, 158, 2051, -1000, -1000, 1384, 1384, -1000,
	1619, 2128, 1459, 2806, -1000, 1146, 22810, 2780, -1000, -1000,
	-279, -279, -279, -279, -279, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -80, 2719, 2705, 1439, -1000,
	2050, 2048, -1000, 1439, 22810, 1439, 1384, 2118, 1439, 1439,
	1439, 1439, 1439, 1439, 1439, 1439, 1439, 1439, 1439, 1439,
	2111, 2107, 2098, 2086, 2080, 2064, 2057, 2045, 1997, 1985,
	1976, 1969, 1958, 1949, 1925, 1898, 1439, 1439, 1881, 1439,
	1874, 1858, -1000, 1146, 1619, 2695, 1619, 1439, 1439, 2690,
	317, 1439, 1726, 1726, 1726, 1726, 1726, 1619, 1619, 1619,
	1619, 1439, 55370, -1000, -279, -1000, -1000, -321, -376, -1000,
	1384, -279, 1912, 25030, 1439, 25030, 25030, 25030, 1439, 1384,
	-1000, 1845, 1838, 2666, 1776, 1439, 2638, 1439, 1439, 1439,
	1769, -1000, 2481, 2013, 2481, 2013, 2481, 1719, 1250, 56850,
	-1000, -1000, -1000, -1000, 2574, 2572, -1000, 1895, -1000, 78,
	594, -1000, 2299, 2285, -1000, 2541, 2309, 2540, -1000, -1000,
	-1000, -1000, -1000, 1146, -1000, 2436, 1947, -1000, 936, 1928,
	-1000, -1000, 21330, 1724, 2271, 523, 1719, 2011, 2696, 2141,
	2186, 2753, -1000, -1000, -1000, -1000, 2212, -1000, 2181, -1000,
	-1000, 2022, -1000, 2514, 330, 30950, 1995, 1995, -1000, 522,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1066, 9701, 2634,
	-1000, 1598, -1000, 1370, 194, 1248, -1000, -1000, 933, 933,
	-1000, 1002, 997, -1000, 56850, 2043, -1000, 344, 1582, 344,
	1233, -1000, -1000, 1192, -1000, -1000, -1000, -1000, 2042, 2217,
	-1000, -1000, -1000, -1000, 56850, -1000, -1000, 56850, 56850, 56850,
	2034, 2538, -1000, 22810, 2032, 934, 1757, 55370, 55370, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	417, 933, -499, 290, 289, 933, 933, 933, -538, -1000,
	-1000, 1710, 1707, -1000, -215, -1000, 22810, -1000, -1000, -1000,
	-1000, -1000, 1300, 1300, 1566, 1562, 1548, -1000, 2022, -1000,
	-1000, -1000, 1642, -1000, -1000, -201, 55370, 55370, 55370, 55370,
	-1000, -1000, -1000, 1178, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 864, 1384, 347, -211,
	1384, -1000, -1000, 344, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22810, -1000, 22810, -1000, 22810, 1146,
	22810, -1000, -1000, -1000, -1000, -1000, 2507, 1538, 22810, 22810,
	-1000, 1188, 1186, -279, 1439, -1000, -1000, -1000, 22810, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810, -1000,
	22810, -1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810, -1000,
	22810, -1000, 22810, -1000, 22810, -1000, 22810, -1000, 22810, -1000,
	22810, -1000, 22810, -1000, -1000, 22810, -1000, -1000, -1000, 22810,
	-1000, 22810, -1000, 22810, -1000, -1000, -1000, 22810, 271, 1024,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1384, 328, -1000, -1000, -1000, 2579, -1000, 1384, 22810,
	2218, -1000, 2218, 2218, 2218, -1000, -1000, -1000, 22810, -1000,
	22810, 22810, -1000, 22810, -1000, 22810, -1000, -1000, -1000, -1000,
	22810, 2013, 2288, 39830, 2013, 39830, 2013, 33170, -1000, -1000,
	2572, 2530, 2537, 2286, 2301, 2301, 2299, -1000, 2533, 2532,
	-1000, 1533, 2523, 1524, 987, -1000, 56110, 22810, -1000, 223,
	39090, -1000, 380, 55370, 223, 55370, -1000, 2510, -1000, -1000,
	22810, 2031, -1000, 22810, -1000, -1000, -1000, -1000, 6795, 2574,
	1995, -1000, -1000, 879, -1000, 22810, -1000, 5096, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1494, 1492, -1000, -1000,
	2030, 22810, -1000, -1000, -1000, 1634, 1587, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2022, -1000, -1000, -1000, -1000,
	326, -528, 1740, 55370, 1175, -1000, 1703, 1842, 310, 223,
	1453, 933, 933, 933, 1169, 1159, 39090, 1687, -1000, 55370,
	384, -1000, 326, -1000, -249, -251, 1439, -1000, -1000, 2487,
	-1000, -1000, 16878, -1000, -1000, 2021, 2142, -1000, -1000, -1000,
	-1000, 2259, -195, -216, -1000, -1000, 1439, 1439, 1439, 1527,
	1384, -1000, 1439, 1439, 1512, 1460, -1000, -1000, 1439, 1439,
	1439, 1439, 1439, 1439, 1439, 1439, 1439, 1439, 1439, 1439,
	1439, 1439, 1439, 1439, 1439, 1439, 1439, 1439, 1619, 1722,
	-1000, 271, 1384, 2184, -1000, -1000, 6795, -1000, -1000, 2510,
	2520, 5, -1000, -1000, 225, 5, 1146, 988, 1384, 1384,
	988, 1705, 1439, 1701, 1681, 1439, 1439, 33910, -1000, 2519,
	2515, 1656, -1000, -1000, 39830, 1656, 39830, 980, 2530, -287,
	22810, 22810, 2295, 1227, -1000, -1000, -1000, -1000, 1451, 1430,
	-1000, 1416, -1000, 2633, -1000, 1146, -1000, 2013, 223, -1000,
	520, 1928, -1000, 2507, 1146, 55370, 1146, 75, 2510, -1000,
	1439, -1000, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, -1000, -1000, 55370, 1611, -1000, -1000, 2477,
	1685, 174, -1000, 1394, 1842, -1000, -1000, 204, -1000, 22810,
	-1000, 39090, 1400, 1385, -1000, -1000, -1000, -1000, -538, -1000,
	-1000, -1000, -1000, -1000, -1000, 409, 1775, -1000, 915, 55370,
	56850, -1000, 2249, -1000, -1000, -1000, -1000, 22810, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22810, -1000, 1384, 2179, -1000,
	-374, -1000, -505, 22810, -279, -1000, -1000, -279, -1000, -1000,
	-1000, -1000, -1000, 22810, -1000, -1000, 22810, -1000, 22810, -1000,
	-1000, 1656, -1000, -1000, -1000, 38350, -1000, 1656, -1000, 1656,
	-1000, -287, -1000, 1756, -1000, 55370, 1146, 342, -1000, 1132,
	-1000, -1000, -1000, -1000, -1000, 56110, 55370, 1928, 55370, -1000,
	-1000, 1652, 1384, 2013, 2507, -1000, 1633, -1000, 409, -1000,
	2019, 2103, -1000, -1000, -1000, 20590, -1000, -1000, -1000, -1000,
	-1000, 254, -191, 16878, 12402, 1631, -1000, -190, 1439, 1619,
	-1000, -476, -1000, -1000, -1000, -1000, 307, -1000, -1000, 1742,
	-1000, -1000, 1641, 1616, 1507, -1000, -1000, -1000, -1000, -1000,
	-1000, -287, -1000, -1000, 2474, -1000, -254, -1000, -1000, 1721,
	1596, -1000, -1000, -1000, 33170, 54630, -1000, -181, 340, -191,
	22810, 2014, 1384, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -49, -1000, -1000, 513, -1000, -1000, -1000, 2137, -214,
	-1000, -1000, -1000, 321, -489, -296, -298, 25030, -1000, 22810,
	-1000, 22810, -1000, 22810, -1000, 55370, 2013, -1000, -1000, -1000,
	1532, -1000, 6117, -393, 2172, -1000, -141, -1000, -1000, -1000,
	1056, 1379, -1000, -1000, -1000, -1000, -1000, -1000, 1485, 55370,
	-1000, 400, -1000, -1000, 16132, -201, -221, 978, -1000, -1000,
	-1000, -1000, -1000, 2218, 1433, 1307, 1439, -1000, 55370, -1000,
	54630, -328, 859, 6795, -1000, 2169, 2154, 2629, -1000, -1000,
	-1000, -1000, -1000, -1000, -540, 1487, 246, -1000, -1000, -1000,
	321, -301, -1000, 22810, -1000, 22810, -1000, 1384, -1000, -1000,
	2453, 75, -1000, 2619, -1000, 2612, 994, 994, -1000, 1111,
	-540, -1000, -1000, -1000, -1000, 1439, 1439, -1000, -398, -1000,
	-1000, -1000, -1000, -1000, 392, 1157, -1000, -1000, -1000, -1000,
	-1000, 6795, -1000, -1000, -1000, 226, 226, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3242, 3240, 36, 11, 42, 40, 3238, 3236, 3225,
	175, 3222, 3220, 3216, 3215, 3214, 3211, 2700, 2661, 2653,
	3210, 3209, 3208, 3206, 3204, 3203, 3202, 3201, 3200, 29,
	98, 25, 105, 211, 202, 3199, 173, 164, 201, 3192,
	3188, 3185, 119, 191, 84, 87, 190, 3183, 3181, 73,
	3176, 3171, 3170, 198, 197, 192, 1068, 3169, 182, 117,
	51, 3167, 3166, 3163, 3160, 3156, 3154, 3153, 3152, 3149,
	3142, 3141, 3140, 3138, 3137, 3136, 3134, 3133, 3129, 308,
	3120, 3119, 22, 3117, 75, 3115, 3112, 3110, 3109, 3107,
	8, 3106, 3105, 31, 57, 72, 3102, 3101, 49, 3100,
	3096, 3095, 3093, 3089, 78, 3086, 13, 3085, 43, 3080,
	3079, 128, 3078, 3077, 3066, 44, 3064, 3061, 3059, 16,
	171, 3057, 3056, 142, 3053, 3050, 3049, 167, 217, 3048,
	2279, 3046, 102, 3045, 3044, 3042, 170, 199, 3041, 129,
	3040, 3038, 3036, 154, 3035, 3330, 3030, 3028, 64, 62,
	168, 3027, 3026, 203, 80, 7, 3021, 19, 20, 3019,
	3017, 79, 71, 3013, 114, 3010, 3009, 106, 85, 3008,
	100, 97, 3005, 3003, 10, 5, 2989, 1, 6, 4,
	108, 2983, 2982, 121, 2981, 2979, 2978, 93, 2977, 2975,
	3353, 2972, 89, 136, 109, 66, 2971, 169, 174, 2962,
	2959, 2957, 2950, 2949, 2948, 52, 2947, 2946, 2944, 140,
	26, 112, 2943, 150, 351, 55, 149, 2942, 195, 82,
	205, 172, 2939, 2937, 139, 134, 2936, 2930, 60, 166,
	194, 2926, 95, 133, 124, 183, 92, 144, 2914, 2905,
	61, 70, 2904, 2903, 2900, 2899, 184, 2898, 2892, 65,
	2889, 58, 2887, 165, 2886, 336, 54, 2884, 180, 179,
	2883, 68, 2882, 2880, 81, 94, 63, 37, 2878, 160,
	163, 130, 181, 2870, 2868, 56, 2865, 2863, 2862, 200,
	300, 2858, 2855, 347, 177, 145, 151, 90, 2853, 319,
	2852, 2851, 2848, 47, 5174, 7144, 185, 34, 162, 2846,
	2843, 8318, 48, 45, 12, 2841, 210, 2840, 188, 2833,
	2827, 2826, 204, 196, 116, 161, 59, 2817, 2816, 2812,
	2807, 41, 2803, 2802, 2800, 2799, 2798, 2797, 39, 38,
	35, 77, 212, 67, 23, 99, 156, 155, 69, 2796,
	2795, 2789, 126, 96, 2788, 159, 157, 127, 104, 2787,
	178, 146, 123, 2785, 103, 33, 2781, 2779, 2776, 2768,
	91, 2764, 2761, 2760, 2758, 153, 147, 125, 83, 2756,
	76, 120, 152, 148, 53, 2753, 46, 2752, 2751, 30,
	189, 27, 2750, 17, 110, 115, 2749, 5716, 2748, 14,
	265, 158, 2735, 2733, 9, 18, 21, 2730, 2728, 2727,
	2726, 137, 2722, 2719, 2717, 2710, 24, 50, 15, 2,
	118, 141, 74, 2705, 2696, 143, 2671, 2665, 2660, 0,
	1040, 131, 2659, 206,
}

//line sql.y:8747
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 417, 418, 418, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 261, 387, 259, 259, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 421, 421, 185, 185, 183, 183, 184, 184,
	264, 264, 20, 268, 268, 270, 270, 270, 270, 260,
	260, 260, 21, 21, 269, 269, 271, 271, 271, 274,
	274, 274, 274, 315, 315, 315, 22, 22, 22, 22,
	22, 129, 129, 389, 389, 388, 383, 383, 382, 382,
	381, 386, 386, 385, 385, 384, 40, 41, 50, 50,
	50, 50, 51, 52, 390, 390, 356, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 358, 358, 344, 344, 357, 357, 357,
	357, 357, 357, 357, 343, 343, 140, 140, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 405, 405, 405, 404, 404,
	239, 239, 239, 239, 239, 239, 239, 239, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 406, 406, 406, 406, 321, 321, 321,
	321, 324, 324, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 323, 323, 323, 323, 323, 323, 323, 325,
	325, 325, 325, 325, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 327, 327, 327, 327, 327, 327, 327, 327, 342,
	342, 331, 331, 336, 336, 337, 337, 338, 338, 338,
	339, 339, 339, 340, 340, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 335, 335, 334, 334, 334, 345,
	370, 370, 369, 369, 367, 367, 367, 367, 367, 367,
	367, 367, 354, 354, 364, 364, 364, 364, 364, 353,
	353, 349, 349, 349, 350, 350, 351, 351, 348, 348,
	352, 352, 366, 366, 365, 365, 346, 346, 347, 347,
	372, 407, 407, 407, 407, 407, 408, 408, 373, 397,
	399, 399, 399, 398, 398, 395, 396, 394, 394, 394,
	394, 394, 84, 84, 84, 287, 287, 288, 288, 362,
	362, 361, 361, 361, 363, 363, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 282, 282, 282,
	393, 393, 393, 393, 393, 393, 392, 392, 392, 359,
	359, 359, 359, 391, 391, 59, 59, 219, 219, 410,
	410, 412, 412, 412, 47, 47, 47, 47, 47, 47,
	46, 46, 46, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 48, 48, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 111,
	111, 112, 112, 112, 112, 114, 114, 114, 375, 375,
	60, 60, 3, 3, 173, 175, 176, 176, 174, 174,
	174, 174, 174, 174, 62, 62, 61, 61, 178, 177,
	179, 179, 179, 1, 1, 2, 2, 4, 4, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 341, 341, 341, 374, 374, 376, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 117, 116, 116,
	115, 118, 118, 118, 118, 118, 118, 118, 118, 378,
	378, 378, 63, 63, 379, 328, 329, 330, 5, 6,
	355, 377, 125, 125, 24, 39, 39, 25, 25, 25,
	25, 26, 26, 64, 67, 67, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 292, 292, 281, 281, 290, 290, 280, 280, 306,
	306, 306, 283, 283, 283, 284, 284, 403, 403, 403,
	277, 277, 66, 66, 66, 307, 307, 307, 307, 69,
	69, 413, 413, 414, 414, 415, 415, 415, 70, 71,
	71, 310, 310, 311, 311, 72, 73, 85, 85, 85,
	85, 85, 86, 86, 86, 86, 110, 110, 110, 10,
	10, 10, 10, 81, 81, 81, 9, 9, 11, 68,
	68, 75, 400, 400, 401, 402, 402, 402, 402, 76,
	78, 27, 27, 27, 27, 27, 27, 135, 135, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 130, 130, 130, 124, 124, 422, 79, 80, 80,
	128, 128, 128, 121, 121, 121, 127, 127, 127, 12,
	12, 13, 263, 263, 14, 14, 134, 134, 133, 133,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 131, 131, 132, 132, 132, 132, 299, 299, 299,
	298, 298, 167, 167, 169, 168, 168, 170, 170, 171,
	171, 171, 171, 217, 217, 193, 193, 256, 256, 257,
	257, 255, 255, 262, 262, 258, 258, 258, 258, 265,
	265, 172, 172, 172, 172, 180, 180, 181, 181, 182,
	182, 309, 309, 304, 304, 304, 303, 303, 186, 186,
	186, 188, 187, 187, 187, 187, 189, 189, 191, 191,
	190, 190, 192, 197, 197, 196, 196, 194, 194, 194,
	194, 194, 194, 195, 195, 195, 195, 198, 198, 145,
	145, 145, 145, 145, 145, 145, 145, 411, 411, 159,
	159, 159, 159, 159, 159, 159, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 246, 246, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 222,
	222, 221, 221, 87, 87, 87, 88, 88, 89, 89,
	89, 89, 89, 90, 90, 90, 90, 90, 90, 90,
	92, 92, 91, 91, 212, 212, 296, 296, 93, 94,
	94, 95, 95, 98, 98, 97, 96, 96, 102, 102,
	99, 99, 101, 101, 100, 103, 103, 104, 105, 105,
	278, 278, 199, 199, 208, 208, 208, 208, 200, 200,
	201, 201, 201, 201, 201, 201, 209, 209, 209, 216,
	210, 210, 206, 206, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 164, 164,
	164, 164, 227, 227, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 152,
	152, 165, 165, 165, 165, 166, 166, 166, 166, 166,
	166, 166, 317, 317, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 423, 423, 332, 332, 332, 207, 207, 207,
	207, 207, 126, 126, 126, 126, 126, 314, 314, 314,
	318, 318, 318, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 319, 319,
	225, 225, 122, 122, 223, 223, 224, 226, 226, 218,
	218, 218, 218, 220, 220, 203, 203, 203, 228, 228,
	320, 320, 229, 229, 106, 107, 107, 108, 108, 230,
	230, 232, 231, 231, 233, 234, 234, 234, 235, 235,
	236, 236, 236, 49, 49, 49, 49, 49, 44, 44,
	44, 44, 45, 45, 45, 45, 137, 137, 137, 137,
	139, 139, 138, 138, 82, 82, 83, 83, 83, 143,
	143, 144, 144, 144, 141, 141, 142, 142, 253, 253,
	253, 253, 253, 253, 253, 237, 237, 237, 244, 244,
	244, 240, 240, 242, 242, 242, 243, 243, 243, 241,
	250, 250, 252, 252, 251, 251, 247, 247, 248, 248,
	249, 249, 249, 245, 245, 202, 202, 202, 202, 202,
	254, 254, 254, 254, 308, 308, 308, 266, 266, 213,
	213, 215, 215, 214, 214, 163, 267, 267, 275, 272,
	272, 273, 273, 300, 300, 300, 276, 276, 289, 289,
	285, 285, 286, 286, 279, 279, 291, 291, 291, 77,
	211, 211, 371, 371, 368, 295, 295, 297, 297, 301,
	301, 305, 305, 302, 302, 8, 416, 416, 416, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 419, 420,
	312, 313, 313, 313,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 2,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	6, 10, 7, 5, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 4, 5, 5, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 2, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 5,
	3, 0, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 3, 2, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 5, 5, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 6, 1, 1, 3,
	4, 3, 4, 4, 4, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 5, 5, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 7,
	7, 6, 6, 2, 2, 5, 6, 3, 3, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 4, 2, 4,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 1, 0, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 8, 6, 8,
	6, 5, 4, 10, 2, 2, 1, 2, 2, 2,
	2, 2, 5, 6, 6, 6, 6, 6, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 8, 4,
	8, 8, 6, 5, 4, 4, 4, 5, 7, 4,
	4, 7, 4, 4, 6, 6, 6, 8, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 6, 4,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	4, 4, 4, 6, 4, 6, 4, 4, 6, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	4, 4, 6, 4, 6, 4, 8, 6, 4, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 5, 9, 6, 9, 8, 6,
	8, 8, 8, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 6, 6, 4, 6, 4,
	6, 8, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 5, 1, 1, 1, 2, 2, 0, 4,
	0, 2, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 3,
	4, 2, 3, 4, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 3, 1, 6, 5, 4,
	1, 3, 3, 5, 0, 2, 5, 0, 5, 1,
	3, 1, 2, 3, 4, 1, 1, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -417, -79, -422, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -109, -35, 35, -40,
	-50, 239, -51, -41, 240, -52, 242, 241, 279, 243,
	395, 272, 83, 328, 329, 331, 332, 333, 334, -110,
	702, 277, 278, 245, 39, 51, 36, 37, 40, 249,
	285, 286, 248, 145, -33, -36, 12, -419, 15, 485,
	274, 273, 31, -34, 595, 95, -80, -418, 750, -253,
	-237, 26, 36, 32, -236, -232, -128, -237, 24, 22,
	11, -79, -79, -79, 16, 17, -79, -356, -358, 95,
	172, 95, -79, -57, -56, -54, -53, -55, -58, 34,
	-47, -48, -380, -46, -43, 244, 241, 289, 135, 136,
	279, 280, 281, 243, 263, 278, 282, 277, 298, -42,
	90, 36, 595, 598, -363, 240, 246, 247, 242, 486,
	138, 137, 84, -360, 390, 629, 720, -58, 722, 110,
	113, 721, 50, 253, 723, 724, 725, 636, 726, 262,
	727, 728, 729, 730, 736, 677, 737, 738, 739, 139,
	11, -79, -305, -301, 100, -294, 592, 265, 627, 439,
	628, 314, 90, 47, 42, 531, 602, 386, 390, 629,
	516, 720, 396, 328, 346, 340, 521, 522, 523, 369,
	361, 593, 630, 603, 317, 266, 302, 714, 359, 148,
	722, 321, 631, 280, 397, 398, 632, 399, 110, 331,
	436, 735, 320, 633, 733, 113, 721, 336, 88, 515,
	57, 717, 50, 275, 444, 445, 357, 248, 353, 723,
	303, 634, 605, 296, 138, 135, 742, 39, 349, 56,
	33, 732, 137, 55, 724, 163, 635, 725, 636, 401,
	376, 708, 54, 402, 281, 637, 93, 286, 597, 325,
	716, 403, 536, 350, 404, 313, 731, 245, 638, 324,
	697, 689, 690, 405, 406, 709, 381, 377, 382, 538,
	639, 428, 520, 407, 693, 694, 749, 58, 640, 641,
	710, 136, 642, 87, 726, 89, 344, 345, 643, 311,
	264, 541, 542, 430, 373, 498, 127, 505, 506, 120,
	121, 501, 122, 507, 123, 128, 508, 509, 510, 499,
	124, 117, 500, 511, 512, 374, 375, 125, 513, 119,
	118, 502, 504, 126, 514, 262, 38, 408, 594, 315,
	64, 319, 290, 431, 52, 379, 746, 51, 704, 543,
	644, 707, 372, 368, 495, 59, 645, 646, 647, 648,
	517, 727, 371, 343, 367, 741, 4, 308, 490, 518,
	728, 68, 247, 384, 383, 385, 297, 427, 364, 649,
	650, 651, 269, 91, 652, 354, 25, 653, 654, 409,
	304, 655, 62, 656, 657, 434, 278, 658, 60, 729,
	45, 659, 283, 743, 730, 660, 661, 662, 703, 663,
	285, 664, 411, 665, 691, 692, 410, 378, 380, 544,
	292, 412, 395, 250, 596, 666, 326, 348, 282, 734,
	667, 270, 532, 533, 534, 535, 715, 540, 539, 284,
	289, 277, 435, 271, 668, 669, 670, 671, 672, 318,
	688, 673, 674, 332, 600, 736, 496, 49, 675, 676,
	677, 678, 679, 312, 307, 429, 438, 67, 92, 392,
	680, 681, 713, 342, 337, 43, 305, 99, 476, 478,
	479, 480, 481, 482, 477, 484, 682, 329, 61, 737,
	738, 739, 299, 740, 524, 525, 526, 527, 13, 578,
	561, 589, 562, 579, 563, 572, 564, 580, 588, 590,
	545, 553, 546, 554, 584, 567, 581, 573, 566, 565,
	587, 570, 574, 547, 555, 585, 571, 548, 556, 549,
	557, 550, 558, 583, 582, 575, 586, 551, 559, 577,
	552, 560, 576, 568, 569, 447, 747, 748, 519, 414,
	139, 309, 310, 53, 365, 291, 683, 322, 684, 355,
	356, 492, 493, 370, 341, 366, 700, 330, 339, 698,
	293, 415, 497, 279, 685, 437, 306, 387, 131, 338,
	393, 323, 601, 537, 298, 416, 712, 599, 528, 529,
	363, 360, 300, 530, 686, 388, 702, 417, 254, 294,
	295, 687, 699, 418, 419, 316, 420, 421, 422, 423,
	424, 426, 327, 425, 701, 695, 696, 301, 475, 598,
	335, 358, 394, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 494, 252, -79, 252, -190, -301, -130, 704, 706,
	191, -272, 398, -290, 400, 413, 408, 418, 406, -281,
	409, 411, 292, -403, 428, 252, 415, 239, 401, 410,
	419, 420, 316, 426, 421, 327, 425, 301, 422, 423,
	424, -387, 191, 725, 740, 330, 338, 148, 362, 405,
	403, 429, 704, 100, -307, 100, 101, 102, -294, 330,
	-310, 335, -295, -387, -294, 333, -79, -79, -312, -312,
	-130, -210, -145, 156, -159, -261, -162, 101, -150, -153,
	-204, -205, -206, -207, -160, -220, -259, 180, 181, 188,
	157, -216, -163, 29, 591, 487, 486, 191, 34, 234,
	77, 78, 489, 490, 159, 63, 15, 452, 453, -161,
	442, 443, 454, 448, 449, 515, 517, 518, 519, 516,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	520, 531, 492, 493, 129, 494, 117, 119, 118, 127,
	128, 495, 496, 497, 359, 543, 544, 538, 541, 542,
	540, 539, 374, 375, 498, 561, 562, 566, 565, 563,
	564, 567, 570, 571, 572, 573, 574, 575, 577, 576,
	568, 569, 546, 545, 547, 548, 549, 550, 551, 552,
	554, 553, 555, 556, 557, 558, 559, 560, 578, 579,
	580, 581, 582, 584, 583, 588, 587, 585, 586, 590,
	589, 499, 500, 120, 121, 122, 123, 124, 125, 126,
	501, 504, 502, 503, 505, 506, 507, 512, 513, 508,
	509, 510, 511, 514, 385, 383, 384, 380, 379, 378,
	-89, -102, 618, 617, -103, 439, 444, 445, 447, -151,
	-152, -165, -166, -295, -301, 257, 441, 251, 186, 485,
	-154, -148, -218, 116, 102, -31, -214, 440, 450, 451,
	455, 446, 456, 604, 606, 621, 622, 624, 609, 614,
	613, 616, 532, 533, 534, 535, 536, 537, 689, 690,
	691, 692, 693, 694, 695, 696, -387, -294, 100, -157,
	-155, -199, 103, 108, 111, 112, 114, -409, 275, 355,
	356, 130, -419, 718, -156, 105, 106, 107, 132, 133,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 98, 104, 50, 414, 414, -190, -79, -79,
	-79, -79, -416, 721, 596, -230, -128, -232, -33, -31,
	-419, 12, -79, -31, -32, -30, -36, -38, 623, -37,
	-301, 109, -237, -253, 16, 67, 175, 48, 56, -235,
	-236, -34, -31, -145, 23, 41, 27, -132, 182, -145,
	-301, -132, -279, 256, -79, -79, -268, -315, 330, -270,
	429, 704, 428, -260, -273, 100, -259, -272, 427, 101,
	-357, 172, -343, -347, -295, 267, -373, 263, -190, -366,
	-365, -295, -419, -129, -289, 253, 261, 260, 149, -390,
	152, 309, 441, 251, -53, -54, -55, -272, 190, 724,
	-111, 284, 288, 96, 96, -347, -346, -345, -391, 288,
	267, -372, -364, 259, 268, -353, 260, 261, -348, 253,
	150, -391, -348, 258, 268, 263, 267, 288, 288, 139,
	288, 139, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 283, -354, 164, -354, 599, 599, -360, -391, 263,
	253, -391, -391, 259, -291, -348, 255, 28, 255, 38,
	38, -354, -354, -354, -272, 190, -354, -354, -354, -354,
	296, 296, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, 252,
	-390, -137, 425, 316, 90, -56, 298, -39, -190, -289,
	253, 254, -390, 285, -190, 235, 252, 707, -283, 172,
	19, -283, -280, 414, 412, 399, 404, -283, -283, -283,
	-283, 299, 397, -349, 253, 38, 264, 414, 299, 397,
	299, 300, 299, 300, 407, 417, 299, -306, 18, 175,
	441, 402, 406, 292, 252, 293, 254, 416, 300, -306,
	98, -284, 172, 299, 414, 408, 295, -283, -283, -313,
	-419, -297, -295, -293, 244, 41, 155, 28, 30, 158,
	191, 142, 23, 159, 40, 246, 362, 263, 190, 259,
	486, 239, 81, 604, 442, 449, 440, 448, 452, 488,
	489, 441, 400, 34, 17, 606, 31, 273, 27, 44,
	184, 241, 162, 607, 276, 29, 274, 129, 133, 609,
	26, 84, 268, 18, 261, 46, 20, 610, 611, 21,
	74, 257, 256, 175, 253, 79, 15, 234, 32, 171,
	75, 612, 150, 145, 613, 614, 615, 616, 143, 77,
	172, 24, 744, 450, 451, 36, 705, 591, 287, 186,
	82, 65, 706, 156, 446, 617, 618, 130, 619, 134,
	85, 711, 152, 22, 80, 48, 620, 288, 621, 258,
	745, 622, 432, 623, 173, 242, 485, 78, 174, 718,
	624, 719, 251, 413, 12, 491, 35, 272, 260, 73,
	72, 141, 76, 456, 625, 252, 161, 255, 144, 132,
	11, 149, 37, 16, 83, 86, 453, 454, 455, 63,
	140, 595, 160, 19, 626, 433, 154, -387, 707, -313,
	-313, 299, 339, 35, 101, -413, -414, -415, 595, 432,
	255, -295, -190, -85, 697, 243, -86, 703, 41, 250,
	-135, 414, -123, 191, 725, 708, 709, 710, 707, 411,
	715, 713, 711, 299, 712, 96, 152, 154, 155, 4,
	-145, 171, -200, -201, 170, 164, 165, 166, 167, 168,
	169, 176, 175, 156, 158, 172, -246, 153, 177, 178,
	179, 180, 181, 182, 183, 185, 184, 186, 187, 173,
	174, 190, 237, 238, -153, -153, -153, -153, -216, -222,
	-221, -419, -218, -387, -294, -301, -419, -419, -153, -278,
	-419, -150, -419, -419, -419, -419, -419, -225, -145, -419,
	-419, -423, -419, -423, -423, -423, -332, -419, -332, -332,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, 235, -419, -419, -419, -419,
	-419, -332, -332, -332, -332, -332, -332, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, 98, 112, 108, 111, 103, -220, 114, 98, 98,
	98, 98, -31, -32, -210, -419, -312, -400, -401, -193,
	-190, -419, 316, -295, -295, 285, 105, -235, -34, -31,
	-230, -236, -232, -31, -79, -121, -134, 69, 70, -133,
	-136, 27, 44, 74, 76, 99, 72, 73, 71, 41,
	-420, 97, -420, -253, -420, 96, -38, -256, 95, 651,
	681, 651, 681, 67, 49, 98, 98, 96, 25, -231,
	-233, -145, 18, -299, 4, -298, 28, -295, 98, 235,
	18, -191, 32, -190, -279, -279, 96, 100, 330, -269,
	-271, 430, 432, 164, -300, -295, 98, 34, 97, 96,
	-190, -321, -324, -326, -325, -327, -322, -323, 359, 360,
	191, 363, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 376, 388, 35, 275, 355, 356, 357, 358, 377,
	378, 379, 380, 382, 383, 384, 385, 340, 361, 593,
	341, 342, 343, 344, 345, 346, 348, 349, 352, 350,
	351, 353, 354, -296, -295, 95, 97, 96, -331, 95,
	-145, -137, 252, -295, 253, 253, 253, -79, 485, -354,
	-354, -354, 283, 23, -46, -43, -380, 22, -42, -43,
	244, 135, 136, 241, 95, -343, 95, -352, -296, -295,
	95, 150, 258, 149, -351, -348, -351, -352, -295, -218,
	-295, 150, 150, -295, -295, -265, -295, -265, -265, 41,
	-265, 41, -265, 41, 105, -295, -265, 41, -265, 41,
	-265, 41, -265, 41, -265, 41, 34, 87, 88, 89,
	34, 91, 92, 93, -218, -295, -295, -218, -343, -218,
	-190, -295, -272, 105, 105, 105, -354, -354, 105, 98,
	98, 98, -354, -354, 105, 98, -303, -301, 98, 98,
	-392, 269, 313, 315, 105, 105, 105, 105, 34, 98,
	-393, 34, 732, 731, 733, 734, 735, 98, 105, 34,
	105, 34, 105, -295, 95, -190, -143, 303, 239, 241,
	244, 85, 98, 321, 319, 320, 317, 322, 323, 324,
	164, 50, 96, 255, 252, -295, -285, 257, -285, -295,
	-302, -301, -293, -190, 255, 396, 98, -145, -350, 18,
	175, -306, -306, -283, -190, -350, -306, -283, -190, -283,
	-283, -283, -283, -306, -306, -306, -283, -301, -301, -190,
	-190, -190, -190, -190, -190, -190, -313, -284, -283, 707,
	98, -277, 18, 85, -313, -313, -292, 26, 96, 336,
	433, 434, -311, 333, -81, -295, 98, -10, -29, -18,
	-17, -19, 164, -10, 96, 595, -183, -190, 707, 707,
	707, 707, 707, 707, -145, -145, -145, -145, 619, -208,
	-411, 156, 132, 133, 130, 131, -162, 42, 43, 41,
	-145, -209, -214, -216, 115, 175, 158, 172, -246, -150,
	-153, -150, -150, -150, -150, -150, -150, 234, -150, 234,
	-150, -150, -150, -150, -150, -150, -314, -295, 98, 191,
	-158, -157, 114, -409, -158, 592, 96, -221, 235, -145,
	-145, -387, -119, 458, 459, 460, 461, 463, 464, 465,
	468, 469, 473, 474, 457, 475, 462, 467, 470, 471,
	472, 466, 358, -145, -211, -210, -211, -145, -145, -223,
	-224, 160, -218, -145, -420, -420, 105, 182, -127, 27,
	44, -127, -127, -127, -127, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -127, -145, -120, 457, 475,
	462, 467, 470, 471, 472, 466, 358, 476, 477, 478,
	479, 480, 481, 482, 483, 484, -120, -119, -145, -145,
	-145, -145, -145, -145, -145, -145, -87, -145, 142, 143,
	144, -210, -145, -150, -145, -145, -145, -420, -145, -145,
	-145, -211, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -386, -385,
	-384, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -210, -210, -210, -210, -210, -145,
	-420, -145, -164, -148, 105, -261, 114, 101, -145, -145,
	-145, -145, -145, -145, -211, -297, -302, -293, -294, -210,
	-211, -211, -210, -210, -145, -145, -145, -145, -145, -145,
	-145, -145, -420, -145, -145, -145, -145, -145, -253, -420,
	-210, 96, -402, 432, 433, 705, -304, 288, -303, 28,
	-211, 98, 18, -263, 86, -295, -235, -235, 69, 70,
	65, -131, -132, -136, -420, -37, 28, -255, -295, 644,
	644, 68, 98, -333, -272, 386, 387, 191, -145, -145,
	96, -234, 30, 31, -190, -298, 182, -302, -190, -264,
	288, -190, -168, -170, -171, -172, -193, -217, -419, -173,
	-31, 615, 612, 18, -183, -184, -192, -301, -270, -315,
	-269, 96, 431, 433, 434, 85, 134, -145, -334, 190,
	-362, -361, -360, -343, -345, -346, -347, 97, -334, -339,
	393, 392, -331, -331, -331, -331, -331, -333, -333, -333,
	-333, 95, -331, 95, -331, -331, -331, -331, -336, 95,
	-336, -336, -337, -336, 95, -337, -338, 95, -338, -373,
	-145, -370, -369, -367, -368, 262, 110, 687, 643, 595,
	636, 677, 86, -365, -234, 105, -420, -143, -286, 257,
	-371, -368, -295, -295, -295, -286, 100, 98, 100, 98,
	100, 98, -112, -60, -1, 744, 745, 746, 96, 23,
	-344, -343, -59, 313, -376, -377, 288, -372, -366, -352,
	150, -351, -352, -352, -295, 96, 32, 139, 139, 139,
	139, 595, 241, 35, -287, 635, 156, 687, 643, -343,
	-59, 255, 255, -314, -314, -314, 98, 98, -282, 740,
	-183, -139, 305, 164, 294, 294, 252, 307, 252, 307,
	-190, 318, 321, 319, 320, 317, 322, 323, 324, 41,
	41, 41, 41, 41, 41, 41, 306, 308, 310, 296,
	-190, -190, -285, 85, -185, -190, 29, -301, 98, 98,
	-190, -283, -283, -190, -283, -283, -190, 98, -415, 337,
	-295, 373, 698, 700, -123, 432, 96, 595, 26, -124,
	26, -419, -411, 132, 133, -216, -216, -216, -209, -150,
	-153, -150, 155, 276, -150, -150, -419, -218, -420, -297,
	28, 96, 86, -420, 180, 96, -420, -420, 96, 18,
	96, -226, -224, 162, -145, -420, 96, -420, -420, -210,
	-145, -145, -145, -145, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -210, -420, 96, 96, 18, -318,
	28, -420, -420, -420, -420, 96, -420, -420, -225, -420,
	18, -420, 86, 96, 175, 96, -420, -420, -420, 96,
	96, -420, -420, 96, -420, 96, -420, -420, -420, -420,
	-420, -420, 96, -420, 96, -420, -420, -420, 96, -420,
	96, -420, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, 96, -420, 96, -420, -420,
	-420, 96, -420, 96, -420, 96, -420, -420, 96, -420,
	96, -420, 96, -420, 96, 96, -420, 96, 96, 96,
	-420, 96, 96, 96, 96, -420, -420, -420, -420, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, -420,
	-420, -420, -420, -420, -420, 96, -94, 620, -420, -420,
	96, -420, 96, 96, 96, 96, 96, -420, -419, 235,
	-420, -420, -420, -420, -420, 96, 96, 96, 96, 96,
	96, -420, -420, -420, 96, 96, -420, 96, -420, 96,
	-420, -401, 704, 433, -197, -196, -194, 83, 256, 84,
	-419, -303, -420, -158, -261, -262, -261, -203, -295, 105,
	114, -237, -167, 96, -169, 18, -216, 97, 96, -333,
	-241, -247, -280, -295, 98, 191, -335, 191, -335, 386,
	387, -233, 235, -198, 19, -202, 35, 63, -29, -419,
	-419, 35, 96, -186, -188, -187, -189, 75, 79, 81,
	76, 77, 78, 82, -309, 28, -31, -168, -31, -419,
	-190, -183, -421, 18, 86, -421, 96, 235, -271, -274,
	435, 432, 438, -387, 98, -111, 96, -360, -347, -238,
	-140, 46, -340, 394, -333, 603, -333, -342, 98, -342,
	105, 105, 105, 97, -49, -44, -45, 36, 90, -367,
	-354, 98, 45, -354, -354, -295, 97, -234, -139, -190,
	156, 85, -371, -371, -371, -301, -2, 743, 749, 150,
	95, 399, 22, -255, 96, 97, -219, 314, 97, -113,
	-295, 97, 95, -352, -352, -295, -419, 252, 34, 34,
	687, 643, 635, -59, -219, -218, -295, -334, 742, 741,
	97, 254, 312, -144, 452, -141, 98, 100, -190, -190,
	-190, -190, -190, -190, 244, 241, 422, -410, 325, -410,
	297, 255, -183, -190, 96, -84, 271, 266, -306, -306,
	36, -190, 432, 716, 714, -145, 155, 276, -162, -153,
	-119, -119, -150, -316, 191, 359, 275, 357, 353, 373,
	364, 392, 355, 393, 350, 349, 348, -316, -314, -150,
	-210, -145, -145, -145, 163, -145, 161, -145, -95, -94,
	-420, -420, -420, -420, -420, -95, -95, -95, -95, -95,
	-95, -95, -95, -95, -95, -230, -145, -145, -145, -420,
	191, 359, -95, -145, 18, -145, -314, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -384, -145, -210, -145, -210, -145, -145, -145,
	-145, -145, -385, -385, -385, -385, -385, -210, -210, -210,
	-210, -145, -419, -295, -98, -97, -96, 670, 256, -94,
	-164, -98, -164, 234, -145, 234, 234, 234, -145, -211,
	-297, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -194, -348, 294, -348, 294, -348, -265, 96, -276,
	26, 18, 63, 63, -167, -198, -132, -168, -295, -244,
	697, -250, 52, -248, -249, 53, -245, 54, 62, -335,
	-335, 182, -235, -145, -266, 85, -267, -275, -218, -213,
	-215, -214, -419, -254, -420, -295, -265, -267, -170, -171,
	-171, -170, -171, 75, 75, 75, 80, 75, 80, 75,
	-187, -301, -420, -145, -304, 86, -168, -168, -192, -301,
	182, 432, 436, 437, -360, -408, 130, 156, 34, 85,
	390, 110, -406, 190, 632, 682, 687, 643, 636, 677,
	-407, 258, 149, 150, 270, 28, 47, 97, 96, 97,
	96, 97, 97, 96, -288, -287, -45, -44, -354, -354,
	105, -387, 98, 98, 254, 29, -190, 85, 85, 85,
	-114, 747, 105, 95, -3, 90, -145, 95, 23, -343,
	-218, -378, -328, -379, -329, -330, -5, -6, -355, -117,
	63, 110, -63, 50, 253, 727, 728, 139, -419, 740,
	-370, -255, -374, -376, -190, -149, -419, -161, -147, -146,
	-148, -154, 180, 181, 275, 355, 356, -219, -190, -138,
	303, 311, 95, -142, 101, -389, 86, 294, 390, 294,
	390, 98, -412, 326, 98, -412, -190, -84, -49, -190,
	-283, -283, 36, -387, -420, -162, -153, -126, 175, 595,
	-319, 602, -331, -331, -331, -338, -331, 345, -331, 345,
	-331, -420, -420, -420, 96, -420, 26, -420, 96, -145,
	96, -95, -95, -95, -95, -95, -122, 491, 96, 96,
	-420, 95, 95, -420, -145, -420, -420, -420, 96, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, 96, -420, 96, -420, 96, -420, 96, -420,
	96, -420, 96, -420, 96, -420, 96, -420, 96, -420,
	96, -420, 96, -420, 96, -420, 96, -420, 96, -420,
	96, -420, 96, -420, -420, 96, -420, -420, -420, 96,
	-420, 96, -420, 96, -420, -420, -420, 96, -317, 688,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -93, -296, -94, 652, 652, -420, -94, -227, 96,
	-150, -420, -150, -150, -150, -420, -420, -420, 96, -420,
	96, 96, -420, 96, -420, 96, -420, -420, -420, -420,
	96, -195, 26, -419, -195, -419, -195, -420, -261, -190,
	-198, -228, 20, -241, 57, 365, -252, -251, 61, 53,
	-249, 23, 55, 23, 33, -266, 96, 164, -308, 96,
	28, -420, -420, 96, 63, 235, -420, -198, -181, -180,
	85, 86, -182, 85, -180, 75, 75, -256, 96, -264,
	-168, -198, -198, 235, 130, -419, -149, 16, 98, 98,
	-387, -405, 731, 732, 34, 105, -354, -354, 150, 150,
	-190, 95, -333, 98, -333, 105, 105, 34, 91, 92,
	93, 34, 87, 88, 89, -190, -190, -190, -190, -375,
	95, 23, -145, 95, 164, 97, -255, -255, 290, 175,
	-354, 725, 296, 296, -354, -354, -354, -116, -115, 747,
	97, -420, 96, -341, 595, 598, -145, -155, -155, -256,
	97, -383, 595, -388, -295, -295, -295, -295, 105, 107,
	-420, 593, 82, 596, -420, -333, -145, -145, -145, -145,
	-235, 98, -145, -145, 105, 105, -95, -420, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -210, -145,
	-420, -178, -177, -179, 708, 130, 34, -316, -420, -212,
	288, -101, -100, -99, 18, -420, -145, -119, -119, -119,
	-119, -145, -145, -145, -145, -145, -145, -419, 75, 22,
	20, -258, -295, 258, -419, -258, -419, -304, -228, -229,
	21, 23, -242, 59, -240, 58, -240, -251, 23, 23,
	98, 23, 98, 150, -275, -145, -215, -303, 63, -29,
	-295, -213, -295, -230, -145, 95, -145, -158, -198, -198,
	-145, -205, 515, 517, 518, 519, 516, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 520, 531, 492,
	493, 494, 117, 119, 118, 127, 128, 495, 496, 497,
	359, 543, 544, 538, 541, 542, 540, 539, 374, 375,
	498, 561, 562, 566, 565, 563, 564, 567, 570, 571,
	572, 573, 574, 575, 577, 576, 568, 569, 546, 545,
	547, 548, 549, 550, 551, 552, 554, 553, 555, 556,
	557, 558, 559, 560, 578, 579, 580, 581, 582, 584,
	583, 588, 587, 585, 586, 590, 589, 499, 500, 120,
	121, 122, 123, 124, 125, 126, 501, 504, 502, 505,
	506, 507, 512, 513, 508, 509, 510, 511, 514, 385,
	383, 384, 380, 379, 378, 439, 444, 445, 447, 532,
	533, 534, 535, 536, 537, 689, 690, 691, 692, 693,
	694, 695, 696, 98, 98, 95, -145, 97, 97, -256,
	-374, -60, 97, -257, -255, 105, 97, 291, -214, -419,
	98, -354, -354, -354, 105, 105, -303, -420, 96, -295,
	-407, -376, 599, 599, -420, 28, -382, -381, -297, 95,
	86, 68, 594, 597, -420, -420, -420, 96, -420, -420,
	-420, 97, 97, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, 96, -420, -177, -179, -420,
	85, -158, -230, 23, -98, 313, 315, -98, -420, -420,
	-420, -420, -420, 96, -420, -420, 96, -420, 96, -420,
	-420, -258, -420, 23, 23, 96, -420, -258, -420, -258,
	-197, -229, -108, -107, -106, 626, -145, -210, -243, 60,
	85, 134, 98, 98, 98, 16, -419, -213, 235, -308,
	-235, -255, -175, 399, -230, -420, -255, 97, 28, 97,
	749, 150, 97, -214, -125, -419, 287, -303, 98, 98,
	-115, -118, -29, 96, 164, -255, -190, 68, -145, -210,
	-420, 85, 607, 708, -92, -91, -88, 719, 745, -210,
	-94, -94, -145, -145, -145, -420, -295, 258, -420, -420,
	-108, 96, -105, -104, -295, -320, 595, 85, 134, -267,
	-255, -308, -295, 97, -420, -419, -235, 97, -239, -29,
	95, -3, 287, -328, -379, -329, -330, -5, -6, -355,
	-82, 595, -381, -359, -301, -297, 98, 105, 97, 595,
	-420, -420, -90, 158, 717, 685, -155, 234, -420, 96,
	-420, 96, -420, 96, -106, 96, 28, 600, -420, -304,
	-176, -174, -295, 649, -398, -397, 591, -408, -404, 130,
	156, 110, -406, 687, 643, 140, 141, -82, -145, 95,
	-420, -83, 302, 704, 235, -389, 596, -90, 718, 663,
	638, 663, 638, -150, -145, -145, -145, -104, -419, -420,
	96, 26, -321, -62, 660, -395, -396, 85, -399, 405,
	659, 680, 130, 98, 97, -255, 263, -302, -383, 597,
	155, -119, -420, 96, -420, 96, -420, -93, -174, 656,
	-334, -158, -396, 85, -395, 85, 17, 16, -4, 748,
	97, 304, -90, 663, 638, -145, -145, -420, -61, 29,
	-175, -394, 271, 266, 269, 35, -394, 105, -4, -420,
	-420, 660, 265, 34, 130, -158, -178, -177, -177,
}

var yyDef = [...]int{
	886, -2, -2, 888, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 886, 886, 886, 0, 886, 0,
	0, 886, -2, -2, 886, 1641, 0, 886, 0, 881,
	0, -2, 803, 809, 0, 818, -2, 0, 0, 886,
	886, 2280, 2280, 881, 0, 0, 0, 0, 0, 886,
	886, 886, 886, 1646, 1499, 50, 886, 0, 85, 86,
	836, 837, 838, 65, 0, 2278, 887, 1, 3, 71,
	75, 0, 0, 0, 58, 1508, 0, 78, 0, 0,
	890, 0, 0, 1624, 886, 886, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	609, 527, 579, 525, 564, -2, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	402, 402, 0, 0, -2, 513, 513, 513, 1626, 0,
	0, 0, 561, 464, 402, 402, 402, 0, 402, 402,
	402, 402, 0, 0, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 1526, 165, 1642, 1639, 1640, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 0, 1618, 0, 722, 990, 0, 882, 883,
	0, 792, 792, 0, 792, 792, 792, 792, 0, 0,
	0, 736, 0, 0, 0, 0, 789, 0, 752, 753,
	0, 789, 0, 759, 795, 0, 0, 766, 792, 792,
	769, 2281, 0, 2281, 2281, 0, 0, 1609, 0, 786,
	784, 798, 799, 42, 802, 805, 806, 807, 808, 811,
	0, 822, 825, 1635, 1636, 0, 827, 832, 849, 850,
	0, 45, 1150, 0, 1014, 0, 1025, -2, 1036, 1053,
	1054, 1055, 1056, 1057, 1059, 1060, 1061, 0, 0, 0,
	0, 1066, 1067, 0, 0, 0, 0, 0, 1130, 0,
	0, 0, 0, 2004, 1470, 0, 0, 1432, 1432, 1166,
	1432, 1432, 1434, 1434, 1434, 1855, 1996, 2005, 2184, 1816,
	1822, 1823, 1824, 2130, 2131, 2132, 2133, 2224, 2225, 2229,
	1918, 1811, 2197, 2198, 0, 2277, 1957, 1965, 1966, 1942,
	1951, 1990, 2092, 2208, 1834, 1985, 2055, 1915, 1937, 1938,
	2073, 2074, 1961, 1962, 1941, 2136, 2138, 2154, 2155, 2140,
	2142, 2151, 2157, 2162, 2141, 2153, 2158, 2171, 2175, 2178,
	2179, 2180, 2148, 2146, 2159, 2163, 2165, 2167, 2173, 2176,
	2149, 2147, 2160, 2164, 2166, 2168, 2174, 2177, 2135, 2139,
	2143, 2152, 2170, 2150, 2169, 2144, 2156, 2161, 2172, 2145,
	2137, 1955, 1958, 1945, 1946, 1948, 1950, 1956, 1963, 1969,
	1947, 1968, 1967, 0, 1943, 1944, 1949, 1960, 1964, 1952,
	1953, 1954, 1959, 1970, 2011, 2010, 2009, 2054, 1981, 2053,
	0, 0, 0, 0, 0, 1805, 1860, 1861, 2181, 1354,
	1355, 1356, 1357, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 1483, 1484, 44, 1149, 1605, 1434, 1434, 1434,
	1434, 1434, 1434, 1088, 1089, 1090, 1091, 1092, 1118, 1119,
	1125, 1126, 2068, 2069, 2070, 2071, 1898, 2219, 1907, 1908,
	2050, 2051, 1920, 1921, 2251, 2252, -2, -2, -2, 232,
	233, 234, 235, 236, 237, 238, 239, 0, 1859, 2195,
	2196, 228, 0, 0, 296, 293, 294, 295, 1132, 1133,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 298, 299, 2280, 0, 859, 0, 0, 0,
	0, 0, 0, 1647, 1648, 1508, 0, 1500, 1499, 63,
	0, 886, -2, 0, 0, 0, 0, 47, 0, 52,
	947, 889, 77, 76, 1548, 1551, 0, 0, 0, 59,
	1509, 67, 69, 1510, 0, 891, 892, 0, 923, 927,
	0, 0, 0, 1625, 1624, 1624, 102, 0, 0, 103,
	123, 124, 125, 0, 0, 109, 110, 1611, 1612, 43,
	0, 0, 177, 178, 0, 1106, 429, 0, 173, 0,
	422, 361, 0, 1526, 0, 0, 0, 0, 0, 886,
	0, 1619, 154, 155, 162, 163, 164, 402, 402, 402,
	576, 0, 0, 165, 165, 534, 535, 536, 0, 0,
	-2, 427, 0, 514, 0, 0, 416, 416, 420, 418,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	0, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 403, 0, 574, 575, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 1628, 0, 551,
	552, 0, 0, 0, 402, 402, 0, 0, 0, 0,
	402, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 1539, 0, 0, 0, -2, 0, 714, 0, 0,
	0, 1620, 1620, 0, 721, 0, 0, 0, 726, 0,
	0, 727, 0, 789, 789, 787, 788, 729, 730, 731,
	732, 792, 0, 0, 411, 412, 413, 789, 792, 0,
	792, 792, 792, 792, 789, 789, 789, 792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2281, 795, 792,
	0, 760, 0, 761, 762, 763, 764, 767, 768, 770,
	2282, 2283, 1637, 1638, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 2281, 2281, 774,
	778, 781, 780, 1610, 804, 810, 812, 813, 0, 0,
	823, 826, 843, 49, 1906, 831, 49, 833, 834, 835,
	861, 862, 867, 0, 0, 0, 0, 873, 874, 875,
	0, 0, 878, 879, 880, 0, 0, 0, 0, 0,
	1012, 0, 0, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1037,
	1038, 0, 0, 0, 1062, 1063, 1064, 1065, 1068, 0,
	1079, 0, 1081, 1479, -2, 0, 0, 0, 1073, 1074,
	0, 0, 0, 1630, 1630, 0, 0, 0, 1471, 0,
	0, 1164, 0, 1165, 1167, 1168, 1169, 0, 1170, 1171,
	896, 896, 896, 896, 896, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 1630, 1630, 0,
	0, 220, 221, 222, 223, 224, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 240, 241, 242, 243, 244, 245, 300, 246,
	247, 248, 1149, 0, 0, 0, 46, 851, 852, 0,
	973, 1630, 0, 0, 902, 0, 1645, 57, 66, 68,
	1508, 61, 1508, 0, 906, 0, 0, -2, -2, 907,
	908, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	54, 2279, 55, 0, 74, 0, 48, 0, 0, 1549,
	0, 1552, 0, 0, 0, 375, 1556, 0, 0, 1501,
	1502, 1505, 0, 924, 2002, 928, 0, 930, 931, 0,
	0, 100, 0, 989, 0, 0, 0, 111, 0, 113,
	114, 0, 0, 0, 386, 1613, 1614, 1615, -2, 409,
	0, 386, 370, 308, 309, 310, 361, 312, 361, 361,
	361, 361, 375, 375, 375, 375, 343, 344, 345, 346,
	347, 0, 361, 0, 329, 361, 361, 361, 361, 351,
	352, 353, 354, 355, 356, 357, 358, 313, 314, 315,
	316, 317, 318, 319, 320, 321, 363, 363, 363, 363,
	363, 367, 367, 0, 1107, 0, 390, 0, 1505, 0,
	0, 1539, 1622, 1632, 0, 0, 0, 1622, 132, 0,
	0, 0, 577, 620, 528, 565, 578, 0, 531, 532,
	-2, 0, 0, 513, 0, 515, 0, 410, 0, -2,
	0, 420, 0, 416, 420, 417, 420, 408, 421, 555,
	556, 557, 0, 559, 560, 650, 959, 0, 0, 0,
	0, 0, 656, 657, 658, 0, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 0, 0, 0, 515, 0,
	562, 0, 0, 466, 467, 468, 0, 0, 471, 472,
	473, 474, 0, 0, 477, 478, 479, 976, 977, 480,
	481, 506, 507, 508, 482, 483, 484, 485, 486, 487,
	488, 500, 501, 502, 503, 504, 505, 489, 490, 491,
	492, 493, 494, 497, 0, 147, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 905,
	991, 1643, 1644, 723, 0, 0, 793, 794, 0, 414,
	415, 792, 792, 733, 775, 0, 792, 737, 776, 738,
	740, 739, 741, 754, 755, 792, 744, 790, 791, 745,
	746, 747, 748, 749, 750, 751, 771, 756, 757, 758,
	796, 0, 800, 801, 772, 773, 0, 782, 0, 0,
	816, 817, 0, 824, 846, 844, 845, 847, 839, 840,
	841, 842, 0, 848, 0, 0, 864, 96, 869, 870,
	871, 872, 884, 877, 1151, 1009, 1010, 1011, 0, 1013,
	1019, 0, 1134, 1136, 1017, 1018, 1021, 0, 0, 0,
	1015, 1026, 1146, 1147, 1148, 0, 0, 0, 0, 0,
	1030, 1034, 1039, 1040, 1041, 1042, 1043, 0, 1044, 0,
	1047, 1048, 1049, 1050, 1051, 1052, 1058, 1447, 1448, 1449,
	1077, 301, 302, 0, 1078, 0, 0, 0, 0, 0,
	0, 0, 0, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1150, 0, 1631, 0, 0, 0, 1477,
	1474, 0, 0, 0, 1433, 1435, 0, 0, 0, 897,
	898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 0, 0, 1450, 0,
	0, 0, 0, 0, 0, 0, 1470, 0, 1083, 1084,
	1085, 0, 0, 0, 0, 0, 0, 1212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 1359, 1360, 1361, 41, 0, 0,
	0, 0, 0, 0, 0, 1481, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 0, 0, 0, 0, 0, 1603,
	0, 0, 854, 855, 857, 0, 993, 0, 974, 0,
	0, 860, 0, 901, 0, 904, 60, 62, 910, 911,
	0, 932, 921, 909, 56, 51, 0, 0, 951, 1550,
	1553, 1554, 375, 1576, 0, 384, 384, 381, 1511, 1512,
	0, 1504, 1506, 1507, 79, 929, 925, 0, 1007, 0,
	0, 988, 0, 935, 937, 938, 939, 971, 0, 942,
	943, 0, 0, 0, 0, 0, 98, 990, 104, 0,
	112, 0, 0, 117, 118, 105, 106, 107, 108, 0,
	609, -2, 461, 179, 181, 182, 183, 174, -2, 373,
	371, 372, 311, 375, 375, 337, 338, 339, 340, 341,
	342, 0, 349, 0, 330, 331, 332, 333, 322, 0,
	323, 324, 325, 365, 0, 326, 327, 0, 328, 428,
	0, 1513, 391, 392, 394, 402, 0, 397, 398, 0,
	402, 402, 0, 423, 424, 0, 1505, 1530, 0, 0,
	0, 1633, 1632, 1632, 1632, 0, 167, 168, 169, 170,
	171, 172, 645, 0, 0, 621, 643, 644, 165, 0,
	0, 175, 517, 516, 0, 677, 0, 426, 0, 0,
	420, 420, 405, 406, 558, 0, 0, 652, 653, 654,
	655, 0, 0, 0, 544, 455, 0, 545, 546, 515,
	517, 0, 0, 386, 469, 470, 475, 476, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 594, 596, 599, 601, 519, 605, 607, 595,
	598, 600, 602, 519, 606, 608, 1527, 1528, 1529, 0,
	0, 715, 0, 0, 452, 94, 1621, 720, 724, 725,
	789, 743, 777, 789, 735, 742, 765, 779, 814, 815,
	820, 828, 829, 830, 868, 0, 0, 0, 0, 876,
	0, 0, 1020, 1135, 1137, 1022, 1023, 1024, 1027, 0,
	1031, 1035, 0, 0, 0, 0, 0, 1082, 1080, 1481,
	0, 0, 0, 1131, 0, 0, 1154, 1155, 0, 0,
	0, 0, 1475, 0, 0, 1162, 0, 1436, 1112, 0,
	0, 0, 0, 0, 1112, 1112, 1112, 1112, 1112, 1112,
	1112, 1112, 1112, 1112, 1499, 1189, 0, 0, 0, 0,
	0, 1194, 1195, 1196, 1112, 0, 1199, 1200, 0, 1202,
	0, 1203, 0, 0, 0, 0, 1210, 1211, 1213, 0,
	0, 1216, 1217, 0, 1219, 0, 1221, 1222, 1223, 1224,
	1225, 1226, 0, 1228, 0, 1230, 1231, 1232, 0, 1234,
	0, 1236, 1237, 0, 1239, 0, 1241, 0, 1244, 0,
	1247, 0, 1250, 0, 1253, 0, 1256, 0, 1259, 0,
	1262, 0, 1265, 0, 1268, 0, 1271, 0, 1274, 0,
	1277, 0, 1280, 0, 1283, 0, 1286, 0, 1289, 1290,
	1291, 0, 1293, 0, 1295, 0, 1298, 1299, 0, 1301,
	0, 1304, 0, 1307, 0, 0, 1308, 0, 0, 0,
	1312, 0, 0, 0, 0, 1321, 1322, 1323, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	1336, 1337, 1338, 1339, 1340, 0, 1342, 0, 1113, 0,
	0, 1113, 0, 0, 0, 0, 0, 1152, 1630, 0,
	1437, 1438, 1439, 1440, 1441, 0, 0, 0, 0, 0,
	0, 1381, 1382, 1384, 0, 0, 1387, 0, 1389, 0,
	1604, 853, 856, 858, 945, 994, 995, 0, 0, 0,
	0, 975, 1629, 899, 900, 903, 953, 0, 1485, 0,
	0, 932, 1007, 0, 933, 0, 53, 948, 0, 1558,
	1557, 1570, 1583, 384, 384, 378, 379, 385, 380, 382,
	383, 1503, 0, 1508, 0, 1597, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 0, 0, 978, 0, 0,
	981, 0, 0, 0, 0, 972, 943, 0, 944, 0,
	-2, 0, 0, 92, 93, 0, 0, 0, 115, 116,
	0, 0, 122, 387, 388, 156, 165, 463, 180, 436,
	0, 0, 307, 374, 334, 335, 336, 0, 359, 0,
	0, 0, 0, 457, 128, 1517, 1516, 402, 402, 393,
	0, 396, 0, 0, 0, 1634, 362, 425, 0, 146,
	0, 0, 0, 0, 0, 152, 615, 0, 0, 622,
	0, 0, 0, 526, 0, 537, 538, 0, 649, -2,
	711, 390, 0, 404, 407, 960, 0, 0, 539, 0,
	542, 543, 456, 517, 548, 549, 563, 550, 498, 499,
	496, 0, 0, 1540, 1541, 1546, 1544, 1545, 133, 584,
	586, 590, 585, 589, 0, 0, 0, 521, 0, 521,
	582, 0, 452, 1513, 0, 719, 453, 454, 792, 792,
	863, 97, 0, 866, 0, 0, 0, 0, 1028, 1032,
	1045, 1046, 1442, 1468, 361, 361, 1455, 361, 367, 1458,
	361, 1460, 361, 1463, 361, 1466, 1467, 0, 0, 1075,
	0, 0, 0, 0, 1161, 1478, 0, 0, 1172, 1111,
	1112, 1112, 1112, 1112, 1112, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1472, 0, 0, 0, 1193,
	0, 0, 1197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 145, 0, 0, 0, 0, 0, 0,
	1392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 1110, 0, 1114, 1115, 0, 0, 1344,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 996, 1003, 0, 1003, 0, 1003, 0, 0, 0,
	1616, 1617, 1486, 1487, 1007, 1488, 922, 934, 952, 1576,
	0, 1569, 0, -2, 1578, 0, 0, 0, 1584, 376,
	377, 926, 80, 1008, 83, 0, 1597, 1606, 0, 1594,
	1599, 1601, 0, 0, 0, 1590, 0, 1007, 936, 967,
	969, 0, 964, 979, 980, 982, 0, 984, 0, 986,
	987, 947, 941, 0, 100, 0, 1007, 1007, 99, 0,
	992, 119, 120, 121, 462, 184, 189, 0, 0, 0,
	194, 0, 196, 0, 0, 0, 201, 202, 402, 402,
	437, 0, 304, 306, 0, 0, 187, 375, 0, 375,
	0, 366, 368, 0, 438, 458, 1514, 1515, 0, 0,
	395, 399, 400, 401, 0, 1623, 148, 0, 0, 0,
	618, 0, 646, 0, 0, 0, 0, 0, 0, 176,
	518, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	0, 402, 0, 0, 0, 402, 402, 402, 0, 703,
	389, 0, 0, 674, 671, 540, 0, 218, 219, 226,
	227, 229, 0, 0, 0, 0, 0, 547, 947, 1531,
	1532, 1533, 0, 1543, 1547, 136, 0, 0, 0, 0,
	592, 597, 603, 0, 520, 604, 716, 717, 718, 95,
	728, 734, 865, 885, 1016, 1029, 1033, 0, 0, 0,
	0, 1469, 1453, 375, 1456, 1457, 1459, 1461, 1462, 1464,
	1465, 1071, 1072, 1076, 0, 1158, 0, 1160, 0, 1476,
	0, 1173, 1174, 1175, 1176, 1177, 1508, 0, 0, 0,
	1192, 0, 0, 1112, 0, 1205, 1204, 1206, 0, 1208,
	1209, 1214, 1215, 1218, 1220, 1227, 1229, 1233, 1235, 1238,
	1240, 1242, 0, 1245, 0, 1248, 0, 1251, 0, 1254,
	0, 1257, 0, 1260, 0, 1263, 0, 1266, 0, 1269,
	0, 1272, 0, 1275, 0, 1278, 0, 1281, 0, 1284,
	0, 1287, 0, 1292, 1294, 0, 1297, 1300, 1302, 0,
	1305, 0, 1309, 0, 1311, 1313, 1314, 0, 0, 0,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1341, 0, 1104, 1343, 1116, 1117, 1122, 1346, 0, 0,
	0, 1349, 0, 0, 0, 1353, 1153, 1364, 0, 1369,
	0, 0, 1375, 0, 1379, 0, 1385, 1386, 1388, 1390,
	0, 0, 0, 0, 0, 0, 0, 973, 954, 64,
	1488, 1492, 0, 1563, 1561, 1561, 1571, 1572, 0, 0,
	1579, 0, 0, 0, 0, 84, 0, 0, 1585, 0,
	0, 1602, 0, 0, 0, 0, 101, 1499, 961, 968,
	0, 0, 962, 0, 963, 983, 985, 940, 0, 1007,
	1007, 90, 91, 0, 190, 0, 192, 0, 195, 197,
	198, 199, 205, 206, 207, 200, 0, 0, 303, 305,
	0, 0, 348, 360, 350, 0, 0, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 947, 149, 150, 151, 610,
	0, 620, 0, 949, 0, 613, 0, 529, 0, 0,
	0, 402, 402, 402, 0, 0, 0, 0, 688, 0,
	0, 651, 0, 659, 0, 0, 0, 230, 231, 0,
	1542, 583, 0, 134, 135, 0, 0, 588, 522, 523,
	1069, 0, 0, 0, 1070, 1454, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 1198, 1201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1317, 0, 0, 0, 640, 641, 0, 1393, 1109, 1499,
	0, 1113, 1123, 1124, 0, 1113, 1363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1004, 0,
	0, 0, 955, 956, 0, 0, 0, 993, 1492, 1497,
	0, 0, 1566, 0, 1559, 1562, 1560, 1573, 0, 0,
	1580, 0, 1582, 0, 1607, 1608, 1600, 1595, 0, 1589,
	1592, 1594, 1591, 1508, 965, 0, 970, 0, 1499, 89,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 204, 0, 0, 364, 369, 0,
	0, 0, 611, 0, 950, 623, 614, 0, 701, 0,
	705, 0, 0, 0, 708, 709, 710, 687, 0, 691,
	430, 675, 672, 673, 541, 0, 137, 138, 0, 0,
	0, 1443, 0, 1446, 1156, 1159, 1157, 0, 1188, 1190,
	1191, 1451, 1452, 1207, 1243, 1246, 1249, 1252, 1255, 1258,
	1261, 1264, 1267, 1270, 1273, 1276, 1279, 1282, 1285, 1288,
	1296, 1303, 1306, 1310, 1315, 0, 1318, 0, 0, 1319,
	0, 642, 1100, 0, 0, 1120, 1121, 0, 1348, 1350,
	1351, 1352, 1365, 0, 1370, 1371, 0, 1376, 0, 1380,
	1391, 0, 998, 1005, 1006, 0, 1001, 0, 1002, 0,
	946, 1497, 82, 1498, 1495, 0, 1493, 1490, 1555, 0,
	1564, 1565, 1574, 1575, 1581, 0, 0, 1594, 0, 1588,
	87, 0, 0, 0, 1508, 191, 0, 210, 0, 619,
	0, 622, 612, 699, 700, 0, 712, 704, 706, 707,
	689, -2, 1534, 0, 0, 0, 591, 1444, 0, 0,
	1320, 0, 638, 639, 1108, 1101, 0, 1086, 1087, 1105,
	1345, 1347, 0, 0, 0, 997, 957, 958, 999, 1000,
	81, 0, 1494, 1128, 0, 1489, 0, 1567, 1568, 1598,
	0, 1587, 1593, 966, 973, 0, 88, 443, 436, 1534,
	0, 0, 0, 692, 693, 694, 695, 696, 697, 698,
	580, 1536, 139, 140, 0, 510, 511, 512, 133, 0,
	1163, 1316, 1102, 0, 0, 0, 0, 0, 1366, 0,
	1372, 0, 1377, 0, 1496, 0, 0, 1491, 1596, 624,
	0, 626, 0, -2, 431, 444, 0, 185, 211, 212,
	0, 0, 215, 216, 217, 208, 209, 129, 0, 0,
	713, 0, 1537, 1538, 0, 136, 0, 0, 1093, 1094,
	1095, 1096, 1098, 0, 0, 0, 0, 1129, 1106, 625,
	0, 0, 386, 0, 635, 432, 433, 0, 439, 440,
	441, 442, 213, 214, 647, 0, 0, 509, 587, 1445,
	0, 0, 1367, 0, 1373, 0, 1378, 0, 627, 628,
	636, 0, 434, 0, 435, 0, 0, 0, 616, 0,
	647, 1535, 1103, 1097, 1099, 0, 0, 1127, 0, 637,
	633, 445, 447, 448, 0, 0, 446, 648, 617, 1368,
	1374, 0, 449, 450, 451, 629, 630, 631, 632,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 3, 3, 3, 185, 177, 3,
	95, 97, 182, 180, 96, 181, 235, 183, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 750,
	165, 164, 166, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 187, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 188,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 154, 155,
	156, 158, 159, 160, 161, 162, 163, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 178, 179, 184,
	186, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:644
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:688
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:694
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:706
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:710
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:716
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:751
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:757
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:831
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:891
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:897
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:924
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:928
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:958
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:962
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:982
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:986
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:996
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1006
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1016
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1020
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1029
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1035
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1041
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1045
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1051
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1055
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1059
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1063
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1069
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1073
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1077
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1083
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1087
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1093
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1097
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1103
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1107
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1111
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1125
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1135
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1139
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1143
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1149
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1155
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1162
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1171
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1175
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1186
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1191
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1201
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1206
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1211
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1217
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1237
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1243
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1253
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1259
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1266
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1273
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1278
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1283
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1288
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1295
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1302
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1313
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1324
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1330
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1334
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1338
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1342
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1346
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1356
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1360
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1370
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1376
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1380
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1386
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1390
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1396
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1400
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1406
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1416
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1421
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1430
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1454
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1463
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1553
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1558
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1562
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1568
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1572
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1576
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1582
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1586
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1591
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1595
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1600
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1615
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1620
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1625
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1655
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1659
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1722
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1726
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1743
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1747
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1751
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1939
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1949
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1955
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1959
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1963
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1969
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1973
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1979
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1983
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1987
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1991
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2216
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2244
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2249
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2273
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2283
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2299
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2304
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2313
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2349
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2359
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2364
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2368
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2378
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2387
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2393
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2412
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2416
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2420
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2424
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2428
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2432
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2448
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2452
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2456
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2460
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2464
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = ""
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2521
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2525
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2531
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2541
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2545
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2551
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2555
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2561
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2565
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2571
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2577
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2581
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2585
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2589
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2593
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2602
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2608
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2614
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2620
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2624
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2628
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2633
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2637
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2643
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2655
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2659
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2663
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2667
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2671
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2676
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2690
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2694
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2703
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2708
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2712
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2718
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2732
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2742
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2746
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2750
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2754
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2758
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2762
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2766
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2770
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2774
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2778
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2782
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2786
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2790
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2794
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2798
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2802
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2806
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2810
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2814
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2818
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2822
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2826
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2830
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2834
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2838
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2842
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2846
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2850
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2854
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2858
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2862
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2902
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2930
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2935
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2948
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2952
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2961
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2965
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2969
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2977
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2983
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3101
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3105
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3109
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3113
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3117
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3123
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3127
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3153
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3157
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3161
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3165
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3169
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3332
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3359
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3366
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3396
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3420
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3429
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3437
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3446
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3453
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3465
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3474
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3489
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3494
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3498
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3503
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3507
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3513
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3519
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3525
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3529
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3535
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3539
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3545
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3551
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3557
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3563
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3569
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3573
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3577
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3581
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3587
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3593
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3599
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3603
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3607
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3613
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3617
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3622
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3626
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3631
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3635
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3641
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3645
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3649
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3653
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3657
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3661
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3665
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3669
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3673
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3677
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3681
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3685
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3689
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3693
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3697
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3701
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3705
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3709
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3713
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3717
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3721
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3725
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3730
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3738
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3744
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3759
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3763
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3768
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3773
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3778
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3783
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3788
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3793
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3798
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3803
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3809
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3815
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3819
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3825
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3830
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3834
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3839
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3844
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3849
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3854
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3859
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3864
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3871
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3878
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3885
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3893
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3897
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3903
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3909
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3915
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3921
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3927
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3933
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3939
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3945
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3967
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3971
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4026
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4066
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4082
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4134
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4138
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4182
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4245
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4251
		{
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4257
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.str = "extended "
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4287
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4291
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4295
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4305
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4309
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4319
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4325
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4349
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4353
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4357
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4364
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4368
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4396
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4402
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4406
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4412
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4416
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4420
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4433
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4437
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4442
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4447
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.empty = struct{}{}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4453
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4464
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4468
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4472
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4476
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4480
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4485
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4489
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4493
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4497
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = yyDollar[1].str
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = yyDollar[1].str
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = yyDollar[1].str
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4529
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4534
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4548
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4552
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4558
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4564
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4568
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4580
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4584
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4590
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4596
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4600
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4604
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4608
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4620
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4626
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4630
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4638
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4642
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4646
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4656
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4670
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4724
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4728
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			setAllowComments(yylex, true)
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4737
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4743
		{
			yyVAL.strs = nil
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4747
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4753
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4757
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4761
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4766
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = SQLCacheStr
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4779
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4783
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4787
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4793
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4797
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4807
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4816
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4822
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4826
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4831
		{
			yyVAL.strs = nil
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4845
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.str = SQLCacheStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4859
		{
			yyVAL.str = DistinctStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.str = DistinctStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.str = HighPriorityStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = StraightJoinHint
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4883
		{
			yyVAL.str = SQLBigResultStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4897
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4901
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4907
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4911
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4915
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4919
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4924
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4928
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4932
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4939
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4944
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4948
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4954
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4960
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4974
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4978
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4982
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4986
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4992
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4996
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5002
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5006
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5015
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5024
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5030
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5034
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5040
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5044
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5050
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5054
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5062
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5068
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5072
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5085
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5089
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5093
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5097
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5103
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5105
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5109
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5115
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5117
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5120
		{
			yyVAL.empty = struct{}{}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.empty = struct{}{}
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5125
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5133
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5140
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5146
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5150
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5154
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5160
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5166
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5170
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5174
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5178
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5184
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5188
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5198
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5202
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5208
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5212
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5218
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5227
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5233
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5237
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5243
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5247
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5251
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5255
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5259
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5263
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5268
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5272
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5276
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5280
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5592
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5596
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5602
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5606
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5612
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5616
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5620
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5626
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5630
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5637
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5641
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5645
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5649
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5653
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5659
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5663
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5667
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5671
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5675
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5679
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5683
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5692
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5698
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5702
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5711
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5716
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5720
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5726
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5732
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5736
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5742
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5746
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5758
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5764
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5768
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5774
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5778
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5784
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5788
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5800
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5806
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5810
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5816
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5822
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5826
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5832
		{
			yyVAL.str = ""
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5842
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5846
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5853
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5857
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5861
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5865
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5871
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5875
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5881
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5885
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5889
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5893
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5897
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5901
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5907
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5911
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5915
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5922
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5928
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5932
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6115
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6794
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6833
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6837
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6841
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6846
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6850
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6865
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6887
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6897
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6901
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6905
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6909
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6926
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6932
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6936
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6940
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6944
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6948
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6952
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6956
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6960
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6964
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6968
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6972
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6976
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6980
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6984
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6988
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6992
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6996
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7000
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7004
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7008
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7014
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7018
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7022
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7026
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7030
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7034
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7038
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7042
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7046
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7050
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7054
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7058
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7062
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7066
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7070
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7074
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7078
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7082
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7092
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7096
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7100
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7110
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7114
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7118
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7122
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7126
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7132
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7136
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7140
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7144
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7148
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7154
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7158
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7162
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7172
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7176
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7182
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7186
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7190
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7194
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7198
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7204
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7208
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7212
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7216
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7220
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7224
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7228
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7232
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7236
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7240
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7259
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7264
		{
			yyVAL.str = string("")
		}
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7268
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7274
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7278
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7284
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7293
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7299
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7303
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7307
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7311
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7317
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7321
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7327
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7336
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7340
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7349
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7368
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7374
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7380
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7384
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7393
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7402
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7408
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7414
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7418
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7424
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7429
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7433
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7437
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7446
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7452
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7456
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7460
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7469
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7473
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7477
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7481
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7488
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7492
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7496
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7500
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7506
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7510
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7514
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7518
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = ""
		}
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7527
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7531
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7535
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7540
		{
			yyVAL.str = ""
		}
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7544
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7550
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7554
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7559
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7563
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7568
		{
			yyVAL.str = "cascaded"
		}
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7572
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7576
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7585
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7591
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7597
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7603
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7612
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7616
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7621
		{
			yyVAL.str = ""
		}
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7625
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7631
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7635
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7639
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7643
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7647
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7651
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7655
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7661
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7665
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7669
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7674
		{
			yyVAL.str = ""
		}
	case 1559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7678
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7682
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7687
		{
			yyVAL.str = ""
		}
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7691
		{
			yyVAL.str = " header"
		}
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7696
		{
			yyVAL.str = ""
		}
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7700
		{
			yyVAL.str = " manifest on"
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7704
		{
			yyVAL.str = " manifest off"
		}
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7709
		{
			yyVAL.str = ""
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7713
		{
			yyVAL.str = " overwrite on"
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7717
		{
			yyVAL.str = " overwrite off"
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7723
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7728
		{
			yyVAL.str = ""
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7732
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7738
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7742
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7748
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7752
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7757
		{
			yyVAL.str = ""
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7761
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7767
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7771
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7777
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7781
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7785
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7790
		{
			yyVAL.str = ""
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7794
		{
			yyVAL.str = " optionally"
		}
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7807
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7811
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7815
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7819
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7823
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7829
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7833
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7837
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7841
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7850
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7854
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7863
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7869
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7873
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7879
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7883
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7889
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7893
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7898
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7908
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7912
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7918
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7925
		{
			yyVAL.str = "charset"
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7935
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7939
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7943
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7954
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7957
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7962
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7964
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7969
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7972
		{
			yyVAL.empty = struct{}{}
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7974
		{
			yyVAL.empty = struct{}{}
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7976
		{
			yyVAL.empty = struct{}{}
		}
	case 1629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7980
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7989
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7996
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8000
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8006
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8010
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8017
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8023
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8027
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8033
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8037
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8044
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8050
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8056
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8060
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8064
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8722
		{
		}
	case 2279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8727
		{
		}
	case 2280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8731
		{
			skipToEnd(yylex)
		}
	case 2281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8736
		{
			skipToEnd(yylex)
		}
	case 2282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8740
		{
			skipToEnd(yylex)
		}
	case 2283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8744
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
