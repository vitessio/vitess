// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const UNDERSCORE_UTF8MB3 = 57541
const INTERVAL = 57542
const JSON_EXTRACT_OP = 57543
const JSON_UNQUOTE_EXTRACT_OP = 57544
const CREATE = 57545
const ALTER = 57546
const DROP = 57547
const RENAME = 57548
const ANALYZE = 57549
const ADD = 57550
const FLUSH = 57551
const CHANGE = 57552
const MODIFY = 57553
const DEALLOCATE = 57554
const REVERT = 57555
const SCHEMA = 57556
const TABLE = 57557
const INDEX = 57558
const VIEW = 57559
const TO = 57560
const IGNORE = 57561
const IF = 57562
const PRIMARY = 57563
const COLUMN = 57564
const SPATIAL = 57565
const FULLTEXT = 57566
const KEY_BLOCK_SIZE = 57567
const CHECK = 57568
const INDEXES = 57569
const ACTION = 57570
const CASCADE = 57571
const CONSTRAINT = 57572
const FOREIGN = 57573
const NO = 57574
const REFERENCES = 57575
const RESTRICT = 57576
const SHOW = 57577
const DESCRIBE = 57578
const EXPLAIN = 57579
const DATE = 57580
const ESCAPE = 57581
const REPAIR = 57582
const OPTIMIZE = 57583
const TRUNCATE = 57584
const COALESCE = 57585
const EXCHANGE = 57586
const REBUILD = 57587
const PARTITIONING = 57588
const REMOVE = 57589
const PREPARE = 57590
const EXECUTE = 57591
const MAXVALUE = 57592
const PARTITION = 57593
const REORGANIZE = 57594
const LESS = 57595
const THAN = 57596
const PROCEDURE = 57597
const TRIGGER = 57598
const VINDEX = 57599
const VINDEXES = 57600
const DIRECTORY = 57601
const NAME = 57602
const UPGRADE = 57603
const STATUS = 57604
const VARIABLES = 57605
const WARNINGS = 57606
const CASCADED = 57607
const DEFINER = 57608
const OPTION = 57609
const SQL = 57610
const UNDEFINED = 57611
const SEQUENCE = 57612
const MERGE = 57613
const TEMPORARY = 57614
const TEMPTABLE = 57615
const INVOKER = 57616
const SECURITY = 57617
const FIRST = 57618
const AFTER = 57619
const LAST = 57620
const VITESS_MIGRATION = 57621
const CANCEL = 57622
const RETRY = 57623
const COMPLETE = 57624
const CLEANUP = 57625
const THROTTLE = 57626
const UNTHROTTLE = 57627
const EXPIRE = 57628
const RATIO = 57629
const BEGIN = 57630
const START = 57631
const TRANSACTION = 57632
const COMMIT = 57633
const ROLLBACK = 57634
const SAVEPOINT = 57635
const RELEASE = 57636
const WORK = 57637
const BIT = 57638
const TINYINT = 57639
const SMALLINT = 57640
const MEDIUMINT = 57641
const INT = 57642
const INTEGER = 57643
const BIGINT = 57644
const INTNUM = 57645
const REAL = 57646
const DOUBLE = 57647
const FLOAT_TYPE = 57648
const DECIMAL_TYPE = 57649
const NUMERIC = 57650
const TIME = 57651
const TIMESTAMP = 57652
const DATETIME = 57653
const YEAR = 57654
const CHAR = 57655
const VARCHAR = 57656
const BOOL = 57657
const CHARACTER = 57658
const VARBINARY = 57659
const NCHAR = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const BLOB = 57665
const TINYBLOB = 57666
const MEDIUMBLOB = 57667
const LONGBLOB = 57668
const JSON = 57669
const JSON_SCHEMA_VALID = 57670
const JSON_SCHEMA_VALIDATION_REPORT = 57671
const ENUM = 57672
const GEOMETRY = 57673
const POINT = 57674
const LINESTRING = 57675
const POLYGON = 57676
const GEOMETRYCOLLECTION = 57677
const MULTIPOINT = 57678
const MULTILINESTRING = 57679
const MULTIPOLYGON = 57680
const ASCII = 57681
const UNICODE = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const CODE = 57689
const COLLATION = 57690
const COLUMNS = 57691
const DATABASES = 57692
const ENGINES = 57693
const EVENT = 57694
const EXTENDED = 57695
const FIELDS = 57696
const FULL = 57697
const FUNCTION = 57698
const GTID_EXECUTED = 57699
const KEYSPACES = 57700
const OPEN = 57701
const PLUGINS = 57702
const PRIVILEGES = 57703
const PROCESSLIST = 57704
const SCHEMAS = 57705
const TABLES = 57706
const TRIGGERS = 57707
const USER = 57708
const VGTID_EXECUTED = 57709
const VITESS_KEYSPACES = 57710
const VITESS_METADATA = 57711
const VITESS_MIGRATIONS = 57712
const VITESS_REPLICATION_STATUS = 57713
const VITESS_SHARDS = 57714
const VITESS_TABLETS = 57715
const VITESS_TARGET = 57716
const VSCHEMA = 57717
const VITESS_THROTTLED_APPS = 57718
const NAMES = 57719
const GLOBAL = 57720
const SESSION = 57721
const ISOLATION = 57722
const LEVEL = 57723
const READ = 57724
const WRITE = 57725
const ONLY = 57726
const REPEATABLE = 57727
const COMMITTED = 57728
const UNCOMMITTED = 57729
const SERIALIZABLE = 57730
const CURRENT_TIMESTAMP = 57731
const DATABASE = 57732
const CURRENT_DATE = 57733
const NOW = 57734
const CURRENT_TIME = 57735
const LOCALTIME = 57736
const LOCALTIMESTAMP = 57737
const CURRENT_USER = 57738
const UTC_DATE = 57739
const UTC_TIME = 57740
const UTC_TIMESTAMP = 57741
const DAY = 57742
const DAY_HOUR = 57743
const DAY_MICROSECOND = 57744
const DAY_MINUTE = 57745
const DAY_SECOND = 57746
const HOUR = 57747
const HOUR_MICROSECOND = 57748
const HOUR_MINUTE = 57749
const HOUR_SECOND = 57750
const MICROSECOND = 57751
const MINUTE = 57752
const MINUTE_MICROSECOND = 57753
const MINUTE_SECOND = 57754
const MONTH = 57755
const QUARTER = 57756
const SECOND = 57757
const SECOND_MICROSECOND = 57758
const YEAR_MONTH = 57759
const WEEK = 57760
const REPLACE = 57761
const CONVERT = 57762
const CAST = 57763
const SUBSTR = 57764
const SUBSTRING = 57765
const GROUP_CONCAT = 57766
const SEPARATOR = 57767
const TIMESTAMPADD = 57768
const TIMESTAMPDIFF = 57769
const WEIGHT_STRING = 57770
const LTRIM = 57771
const RTRIM = 57772
const TRIM = 57773
const JSON_ARRAY = 57774
const JSON_OBJECT = 57775
const JSON_QUOTE = 57776
const JSON_DEPTH = 57777
const JSON_TYPE = 57778
const JSON_LENGTH = 57779
const JSON_VALID = 57780
const JSON_ARRAY_APPEND = 57781
const JSON_ARRAY_INSERT = 57782
const JSON_INSERT = 57783
const JSON_MERGE = 57784
const JSON_MERGE_PATCH = 57785
const JSON_MERGE_PRESERVE = 57786
const JSON_REMOVE = 57787
const JSON_REPLACE = 57788
const JSON_SET = 57789
const JSON_UNQUOTE = 57790
const COUNT = 57791
const AVG = 57792
const MAX = 57793
const MIN = 57794
const MATCH = 57795
const AGAINST = 57796
const BOOLEAN = 57797
const LANGUAGE = 57798
const WITH = 57799
const QUERY = 57800
const EXPANSION = 57801
const WITHOUT = 57802
const VALIDATION = 57803
const UNUSED = 57804
const ARRAY = 57805
const BYTE = 57806
const CUME_DIST = 57807
const DESCRIPTION = 57808
const DENSE_RANK = 57809
const EMPTY = 57810
const EXCEPT = 57811
const FIRST_VALUE = 57812
const GROUPING = 57813
const GROUPS = 57814
const JSON_TABLE = 57815
const LAG = 57816
const LAST_VALUE = 57817
const LATERAL = 57818
const LEAD = 57819
const NTH_VALUE = 57820
const NTILE = 57821
const OF = 57822
const OVER = 57823
const PERCENT_RANK = 57824
const RANK = 57825
const RECURSIVE = 57826
const ROW_NUMBER = 57827
const SYSTEM = 57828
const WINDOW = 57829
const ACTIVE = 57830
const ADMIN = 57831
const AUTOEXTEND_SIZE = 57832
const BUCKETS = 57833
const CLONE = 57834
const COLUMN_FORMAT = 57835
const COMPONENT = 57836
const DEFINITION = 57837
const ENFORCED = 57838
const ENGINE_ATTRIBUTE = 57839
const EXCLUDE = 57840
const FOLLOWING = 57841
const GEOMCOLLECTION = 57842
const GET_MASTER_PUBLIC_KEY = 57843
const HISTOGRAM = 57844
const HISTORY = 57845
const INACTIVE = 57846
const INVISIBLE = 57847
const LOCKED = 57848
const MASTER_COMPRESSION_ALGORITHMS = 57849
const MASTER_PUBLIC_KEY_PATH = 57850
const MASTER_TLS_CIPHERSUITES = 57851
const MASTER_ZSTD_COMPRESSION_LEVEL = 57852
const NESTED = 57853
const NETWORK_NAMESPACE = 57854
const NOWAIT = 57855
const NULLS = 57856
const OJ = 57857
const OLD = 57858
const OPTIONAL = 57859
const ORDINALITY = 57860
const ORGANIZATION = 57861
const OTHERS = 57862
const PARTIAL = 57863
const PATH = 57864
const PERSIST = 57865
const PERSIST_ONLY = 57866
const PRECEDING = 57867
const PRIVILEGE_CHECKS_USER = 57868
const PROCESS = 57869
const RANDOM = 57870
const REFERENCE = 57871
const REQUIRE_ROW_FORMAT = 57872
const RESOURCE = 57873
const RESPECT = 57874
const RESTART = 57875
const RETAIN = 57876
const REUSE = 57877
const ROLE = 57878
const SECONDARY = 57879
const SECONDARY_ENGINE = 57880
const SECONDARY_ENGINE_ATTRIBUTE = 57881
const SECONDARY_LOAD = 57882
const SECONDARY_UNLOAD = 57883
const SIMPLE = 57884
const SKIP = 57885
const SRID = 57886
const THREAD_PRIORITY = 57887
const TIES = 57888
const UNBOUNDED = 57889
const VCPU = 57890
const VISIBLE = 57891
const RETURNING = 57892
const FORMAT = 57893
const TREE = 57894
const VITESS = 57895
const TRADITIONAL = 57896
const LOCAL = 57897
const LOW_PRIORITY = 57898
const NO_WRITE_TO_BINLOG = 57899
const LOGS = 57900
const ERROR = 57901
const GENERAL = 57902
const HOSTS = 57903
const OPTIMIZER_COSTS = 57904
const USER_RESOURCES = 57905
const SLOW = 57906
const CHANNEL = 57907
const RELAY = 57908
const EXPORT = 57909
const AVG_ROW_LENGTH = 57910
const CONNECTION = 57911
const CHECKSUM = 57912
const DELAY_KEY_WRITE = 57913
const ENCRYPTION = 57914
const ENGINE = 57915
const INSERT_METHOD = 57916
const MAX_ROWS = 57917
const MIN_ROWS = 57918
const PACK_KEYS = 57919
const PASSWORD = 57920
const FIXED = 57921
const DYNAMIC = 57922
const COMPRESSED = 57923
const REDUNDANT = 57924
const COMPACT = 57925
const ROW_FORMAT = 57926
const STATS_AUTO_RECALC = 57927
const STATS_PERSISTENT = 57928
const STATS_SAMPLE_PAGES = 57929
const STORAGE = 57930
const MEMORY = 57931
const DISK = 57932
const PARTITIONS = 57933
const LINEAR = 57934
const RANGE = 57935
const LIST = 57936
const SUBPARTITION = 57937
const SUBPARTITIONS = 57938
const HASH = 57939

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	615, 145,
	-2, 153,
	-1, 48,
	132, 153,
	172, 153,
	333, 153,
	-2, 498,
	-1, 55,
	35, 739,
	233, 739,
	244, 739,
	279, 753,
	280, 753,
	-2, 741,
	-1, 60,
	235, 766,
	-2, 764,
	-1, 114,
	232, 1297,
	-2, 119,
	-1, 116,
	1, 146,
	615, 146,
	-2, 153,
	-1, 127,
	133, 384,
	238, 384,
	-2, 487,
	-1, 146,
	132, 153,
	172, 153,
	333, 153,
	-2, 507,
	-1, 703,
	217, 1318,
	-2, 1314,
	-1, 704,
	217, 1319,
	-2, 1315,
	-1, 779,
	59, 834,
	-2, 849,
	-1, 816,
	148, 1730,
	-2, 112,
	-1, 817,
	148, 1569,
	-2, 113,
	-1, 823,
	148, 1655,
	-2, 1291,
	-1, 971,
	148, 1496,
	-2, 1288,
	-1, 1012,
	243, 41,
	248, 41,
	-2, 395,
	-1, 1096,
	1, 554,
	615, 554,
	-2, 153,
	-1, 1337,
	59, 835,
	-2, 854,
	-1, 1338,
	59, 836,
	-2, 855,
	-1, 1391,
	132, 153,
	172, 153,
	333, 153,
	-2, 434,
	-1, 1470,
	133, 384,
	238, 384,
	-2, 487,
	-1, 1479,
	243, 42,
	248, 42,
	-2, 396,
	-1, 1794,
	217, 1323,
	-2, 1317,
	-1, 1878,
	132, 153,
	172, 153,
	333, 153,
	-2, 435,
	-1, 1885,
	25, 174,
	-2, 176,
	-1, 2139,
	87, 39,
	-2, 892,
	-1, 2196,
	77, 94,
	87, 94,
	-2, 912,
	-1, 2264,
	590, 666,
	-2, 640,
	-1, 2405,
	49, 1259,
	-2, 1253,
	-1, 2627,
	87, 39,
	-2, 893,
	-1, 2665,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 884,
	-1, 2949,
	590, 666,
	-2, 654,
	-1, 3007,
	22, 1657,
	32, 1657,
	173, 1657,
	255, 1657,
	313, 1657,
	314, 1657,
	315, 1657,
	316, 1657,
	317, 1657,
	318, 1657,
	319, 1657,
	321, 1657,
	322, 1657,
	323, 1657,
	324, 1657,
	325, 1657,
	326, 1657,
	327, 1657,
	328, 1657,
	329, 1657,
	330, 1657,
	331, 1657,
	332, 1657,
	334, 1657,
	336, 1657,
	337, 1657,
	338, 1657,
	339, 1657,
	340, 1657,
	341, 1657,
	342, 1657,
	343, 1657,
	344, 1657,
	347, 1657,
	348, 1657,
	349, 1657,
	350, 1657,
	351, 1657,
	352, 1657,
	353, 1657,
	354, 1657,
	355, 1657,
	472, 1657,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 43453

var yyAct = [...]int{
	703, 712, 2768, 2769, 3061, 705, 3069, 2767, 2930, 3037,
	2364, 3038, 3005, 2742, 1828, 1394, 2554, 1875, 2989, 1808,
	2460, 2467, 2093, 2517, 2883, 3, 696, 37, 1159, 2522,
	2508, 2418, 2782, 2519, 2518, 2516, 2521, 2520, 794, 2729,
	2421, 2906, 2127, 772, 2475, 1810, 1945, 2537, 96, 2536,
	1352, 186, 2422, 617, 186, 2419, 582, 186, 2636, 2362,
	1316, 2787, 597, 621, 186, 697, 2167, 2630, 2324, 614,
	2363, 694, 186, 695, 706, 643, 2539, 2190, 2416, 1848,
	2656, 2406, 1832, 2154, 2622, 615, 1908, 186, 2229, 2261,
	2307, 2559, 1448, 1933, 613, 2230, 1913, 1864, 2231, 821,
	36, 1976, 2179, 795, 776, 974, 780, 155, 2160, 597,
	1853, 38, 597, 186, 597, 2146, 2129, 1764, 1788, 1108,
	2299, 1852, 1646, 1954, 797, 774, 141, 1932, 609, 1840,
	1688, 1339, 1915, 1007, 2223, 1495, 1763, 818, 1698, 1020,
	1992, 95, 1002, 1383, 626, 2198, 1855, 1361, 1595, 1319,
	1244, 1710, 1665, 1180, 1591, 91, 981, 1013, 1477, 978,
	1930, 1010, 1484, 1575, 982, 1008, 1009, 1833, 1382, 1904,
	1366, 1380, 786, 1706, 1151, 1600, 159, 1157, 1760, 1791,
	781, 119, 117, 1443, 118, 1469, 124, 125, 808, 784,
	97, 782, 76, 98, 604, 1092, 1251, 85, 89, 3062,
	1801, 1137, 1247, 2939, 2254, 188, 189, 190, 102, 1947,
	1948, 1949, 1947, 2730, 2505, 2252, 2527, 2283, 2282, 1990,
	2527, 8, 1560, 553, 120, 783, 77, 1181, 7, 6,
	2685, 2722, 586, 2524, 126, 2315, 2316, 90, 2772, 2962,
	2772, 802, 2963, 807, 1653, 975, 788, 1181, 586, 104,
	105, 1652, 108, 1651, 1049, 114, 1805, 1806, 183, 1650,
	605, 548, 87, 188, 189, 190, 1649, 773, 1024, 1648,
	775, 1631, 1000, 607, 2525, 608, 822, 3026, 2525, 2125,
	815, 768, 769, 770, 771, 2402, 2610, 779, 999, 583,
	1023, 1640, 789, 120, 1059, 796, 2531, 1346, 998, 997,
	2531, 996, 2156, 1980, 986, 3078, 2274, 3036, 3015, 1050,
	1053, 1054, 3052, 3041, 2277, 810, 811, 1978, 1658, 586,
	2879, 2878, 3013, 2771, 1048, 2771, 2735, 1065, 1047, 2736,
	2963, 3019, 3020, 1191, 3077, 78, 569, 991, 2999, 2477,
	2478, 78, 78, 3065, 2958, 1213, 3014, 1979, 567, 3050,
	2743, 78, 2990, 1191, 80, 1973, 2998, 1924, 2957, 2170,
	1836, 120, 2323, 3010, 2592, 1458, 2888, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1222, 1221, 1223, 1224, 2126, 2291,
	2034, 1095, 1918, 2290, 2171, 2457, 2458, 1144, 564, 1146,
	2800, 1384, 2207, 1385, 1869, 2206, 2456, 578, 2208, 1870,
	1871, 2314, 2031, 1115, 995, 2528, 1101, 1102, 1116, 2528,
	1127, 766, 574, 87, 765, 2255, 1114, 1154, 1113, 87,
	87, 1115, 2931, 2219, 1132, 1133, 1116, 1143, 1145, 87,
	1807, 2633, 1187, 587, 2352, 1179, 1888, 1887, 1104, 2163,
	2164, 1128, 1121, 2583, 2476, 2032, 586, 586, 2581, 587,
	595, 1639, 1187, 599, 2463, 2556, 2479, 586, 593, 2262,
	2560, 2300, 993, 1323, 1955, 2010, 3064, 2011, 990, 2012,
	2286, 992, 2004, 2001, 2003, 2002, 2005, 2006, 1993, 3042,
	1998, 554, 1136, 556, 570, 1576, 589, 1836, 588, 560,
	1550, 558, 562, 571, 563, 1148, 557, 1066, 568, 2464,
	3043, 559, 572, 573, 576, 579, 580, 581, 577, 575,
	1097, 566, 590, 2302, 1746, 1581, 1641, 1642, 1643, 1134,
	587, 1091, 1917, 1153, 1141, 2466, 1129, 1122, 1142, 1135,
	2724, 995, 1090, 2549, 1551, 1999, 1552, 1997, 1147, 2461,
	2557, 2550, 2558, 1834, 1835, 1130, 1131, 2723, 186, 2013,
	186, 1995, 1072, 186, 1071, 2863, 2477, 2478, 1033, 1958,
	2720, 1031, 1140, 2462, 87, 1003, 995, 3027, 987, 1004,
	1849, 1004, 1042, 1326, 1041, 989, 988, 1040, 1039, 1996,
	994, 1038, 1225, 597, 1161, 597, 597, 1037, 1036, 1035,
	1030, 2353, 2032, 1462, 1043, 2468, 1094, 1225, 2479, 3073,
	597, 597, 1738, 1727, 1728, 1729, 1730, 1740, 1731, 1732,
	1733, 1745, 1741, 1734, 1735, 1742, 1743, 1744, 1736, 1737,
	1739, 979, 3079, 1015, 993, 977, 1022, 1173, 37, 1186,
	1183, 1184, 1185, 1190, 1192, 1189, 979, 1188, 3048, 2306,
	1125, 1016, 979, 1483, 1182, 1592, 1931, 587, 587, 1186,
	1183, 1184, 1185, 1190, 1192, 1189, 809, 1188, 587, 1052,
	1022, 2476, 2303, 1984, 1182, 1015, 2319, 1588, 2221, 1051,
	1834, 1835, 2719, 2479, 1111, 1167, 1117, 1118, 1119, 1120,
	1055, 2046, 2889, 2938, 2253, 2498, 2130, 2132, 591, 1001,
	1977, 2285, 1093, 1044, 1456, 2256, 1455, 1454, 2272, 1155,
	1156, 1589, 1034, 2288, 1452, 1032, 584, 994, 1228, 1229,
	1230, 1231, 1061, 552, 547, 2927, 2634, 2672, 1236, 1582,
	1239, 585, 2161, 1583, 1584, 1021, 2298, 1876, 3018, 2297,
	2652, 1015, 1018, 1019, 1975, 979, 1226, 1227, 2203, 1012,
	1016, 1314, 994, 116, 1580, 2944, 2166, 2117, 1482, 1162,
	1800, 2309, 2325, 1370, 1921, 1295, 2308, 2956, 1106, 1021,
	1011, 1225, 1163, 1164, 2529, 2530, 186, 1224, 2529, 2530,
	597, 597, 3017, 1232, 2455, 1149, 1309, 2533, 1022, 81,
	791, 2533, 2465, 2770, 1152, 2770, 186, 1562, 1561, 1563,
	1564, 1565, 1707, 1110, 1922, 2683, 2684, 2276, 2309, 2952,
	1329, 86, 1920, 2308, 1333, 597, 1708, 86, 86, 186,
	776, 1327, 1022, 3071, 597, 1315, 3072, 86, 3070, 1330,
	597, 1022, 1045, 1176, 774, 1332, 1138, 77, 1601, 2715,
	1174, 1175, 2033, 2646, 2327, 2343, 1923, 1046, 1124, 1994,
	111, 2275, 818, 1253, 1022, 1249, 1919, 1250, 2131, 1126,
	1062, 1063, 1064, 1100, 1067, 1068, 1069, 1070, 1112, 1585,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1021, 1315, 1386,
	1331, 1177, 1025, 1015, 95, 1197, 1103, 1027, 1577, 1711,
	1578, 1028, 1026, 1579, 1196, 1301, 1302, 1303, 1304, 1305,
	2337, 2336, 2335, 2329, 1711, 2333, 2060, 2328, 2796, 2326,
	112, 1021, 1320, 1972, 2331, 1670, 1025, 1015, 2690, 2245,
	1021, 1027, 1060, 2330, 1974, 1028, 1026, 2689, 1096, 1671,
	1672, 1669, 1720, 2469, 1109, 1962, 98, 2473, 1195, 1196,
	2332, 2334, 1492, 1021, 1491, 2472, 1029, 1197, 1967, 1015,
	1018, 1019, 1481, 979, 1970, 1033, 1031, 1012, 1016, 1317,
	1219, 1220, 1222, 1221, 1223, 1224, 773, 3044, 2074, 1197,
	1139, 1328, 1602, 2968, 186, 1351, 775, 1197, 1444, 2474,
	2673, 822, 1348, 1381, 2470, 1971, 1967, 1334, 1453, 2471,
	1217, 1218, 1219, 1220, 1222, 1221, 1223, 1224, 2049, 1376,
	1377, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1221, 1223,
	1224, 597, 3080, 1479, 1371, 3075, 2969, 1194, 2871, 1195,
	1196, 1488, 1197, 1969, 2870, 1490, 2345, 2861, 1493, 1494,
	597, 597, 2082, 597, 2920, 597, 597, 2760, 597, 597,
	597, 597, 597, 597, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1199, 1525, 1526, 1197, 597, 1660, 1662, 1663, 186,
	1531, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1221,
	1223, 1224, 2038, 2039, 2040, 2759, 186, 2921, 2697, 1194,
	1661, 1195, 1196, 2749, 87, 2750, 1570, 1489, 1346, 597,
	1197, 186, 813, 2553, 2696, 1715, 2686, 3081, 1668, 1716,
	2056, 1194, 1590, 1195, 1196, 597, 1346, 186, 2506, 1194,
	1197, 1195, 1196, 1346, 1524, 2494, 1475, 1527, 717, 718,
	719, 1545, 2227, 186, 2226, 1927, 1568, 1571, 2589, 1197,
	186, 1557, 1555, 1468, 1554, 1553, 1197, 2899, 1346, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 597, 1543,
	1569, 1537, 1841, 1842, 1194, 1534, 1195, 1196, 1485, 1485,
	1528, 1533, 597, 597, 1532, 1504, 1497, 3045, 1498, 2947,
	1500, 1502, 1197, 2055, 1506, 1508, 1510, 1512, 1514, 1487,
	186, 1451, 1486, 2946, 1355, 1213, 1194, 2318, 1195, 1196,
	1567, 1465, 1466, 1464, 1346, 1556, 1478, 188, 189, 190,
	1457, 2680, 2924, 2923, 2922, 2866, 1597, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1222, 1221, 1223, 1224, 2896, 2587,
	1346, 2851, 1194, 1529, 1195, 1196, 597, 1197, 1695, 1695,
	2850, 1197, 1693, 1693, 1356, 2795, 2793, 1692, 1696, 1701,
	597, 1605, 1194, 2756, 1195, 1196, 2694, 2679, 1609, 2561,
	1611, 1612, 1613, 1614, 2497, 2102, 1346, 1618, 1593, 597,
	597, 1194, 1197, 1195, 1196, 2496, 1197, 2236, 1194, 1630,
	1195, 1196, 2224, 120, 1666, 188, 189, 190, 998, 997,
	1673, 996, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1664, 1311, 1674, 1988, 1607,
	1987, 1197, 1831, 1813, 1194, 1632, 1195, 1196, 1197, 1598,
	1712, 3046, 1566, 1558, 2094, 1603, 1604, 1548, 1359, 1544,
	1166, 1540, 186, 1629, 1792, 1628, 1539, 597, 1538, 1608,
	1357, 1761, 1197, 1150, 2895, 2051, 1615, 1616, 1617, 1636,
	1637, 2645, 188, 189, 190, 2050, 2210, 2152, 3063, 2855,
	2935, 186, 2854, 1667, 597, 94, 188, 189, 190, 1194,
	1943, 1195, 1196, 1194, 186, 1195, 1196, 2741, 597, 1818,
	2263, 1819, 100, 186, 1197, 186, 2241, 186, 186, 597,
	3032, 1346, 597, 1761, 1358, 3023, 1197, 188, 189, 190,
	2199, 1941, 1346, 597, 1194, 1794, 1195, 1196, 1194, 1792,
	1195, 1196, 188, 189, 190, 2199, 1939, 818, 2152, 2996,
	818, 92, 1885, 1697, 1346, 2667, 1796, 1797, 95, 1197,
	1703, 1704, 93, 2152, 2976, 2152, 2972, 1884, 1717, 1719,
	2964, 1346, 2148, 1194, 2647, 1195, 1196, 95, 2152, 2940,
	1194, 2047, 1195, 1196, 1793, 2733, 2937, 94, 597, 2450,
	1197, 2606, 1346, 2200, 1851, 1934, 1935, 1936, 2859, 2032,
	1938, 1940, 1942, 2202, 1194, 1193, 1195, 1196, 2200, 2608,
	1794, 1824, 2874, 1346, 2951, 597, 1795, 1346, 2032, 1798,
	1799, 597, 1488, 2152, 2862, 1488, 2152, 1488, 1894, 1895,
	1896, 1897, 1889, 1966, 1890, 1891, 1892, 1893, 1880, 1879,
	1862, 1812, 2175, 2716, 788, 2047, 1194, 2168, 1195, 1196,
	1900, 1901, 1902, 1903, 101, 1197, 1823, 1968, 1194, 1846,
	1195, 1196, 2176, 1826, 1956, 100, 1883, 99, 597, 1910,
	597, 2733, 1346, 2604, 2152, 2731, 597, 597, 1844, 1213,
	1916, 2045, 704, 1967, 1346, 92, 822, 2606, 1867, 822,
	1866, 1194, 94, 1195, 1196, 2485, 93, 2176, 1882, 1881,
	2168, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1221,
	1223, 1224, 2650, 1346, 186, 1967, 1197, 2390, 1926, 2176,
	1953, 186, 1194, 1868, 1195, 1196, 1197, 2047, 186, 186,
	1193, 1346, 186, 187, 186, 1346, 187, 2087, 2595, 187,
	2071, 186, 2070, 1911, 598, 1967, 187, 1950, 186, 1906,
	1907, 1346, 1925, 1024, 187, 1929, 2087, 1346, 1937, 2487,
	2486, 2483, 2484, 1485, 2483, 2482, 2176, 1346, 1839, 187,
	2047, 1346, 2645, 1981, 186, 1023, 1959, 1960, 1911, 597,
	1961, 1350, 1197, 1964, 1803, 1965, 1963, 1194, 1197, 1195,
	1196, 598, 1982, 1197, 598, 187, 598, 1644, 1213, 2594,
	1983, 1209, 1197, 1210, 2032, 2284, 1985, 1986, 1197, 2979,
	2228, 1447, 2266, 1197, 1587, 1213, 1378, 1211, 1212, 1208,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1221, 1223,
	1224, 1006, 1197, 1459, 1460, 1461, 1991, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1222, 1221, 1223, 1224, 1194, 1197,
	1195, 1196, 2259, 2260, 2152, 2151, 1197, 2698, 1194, 1005,
	1195, 1196, 87, 2023, 2024, 2111, 1447, 1446, 2026, 2885,
	101, 2110, 1197, 1392, 1391, 1666, 2109, 2027, 1197, 2417,
	2042, 100, 2044, 99, 2016, 2108, 1353, 1197, 2852, 2509,
	2645, 2107, 94, 1197, 778, 2233, 2106, 2043, 2807, 1535,
	1536, 2714, 1197, 2711, 2692, 1541, 1542, 2598, 2699, 2700,
	2701, 1197, 1095, 2597, 1194, 2105, 1195, 1196, 1449, 1909,
	1194, 2551, 1195, 1196, 2511, 1194, 1197, 1195, 1196, 2507,
	2267, 2555, 2104, 1905, 1194, 1197, 1195, 1196, 2030, 2103,
	1194, 1899, 1195, 1196, 186, 1194, 1898, 1195, 1196, 1634,
	1573, 1346, 186, 1480, 1667, 2097, 1695, 597, 1476, 1445,
	1693, 2096, 2041, 597, 1194, 2136, 1195, 1196, 113, 2123,
	2095, 2140, 87, 2886, 597, 2232, 2092, 1924, 1520, 2657,
	2658, 1194, 1816, 1195, 1196, 2091, 3058, 3056, 1194, 3039,
	1195, 1196, 2961, 2904, 2090, 2660, 1197, 2134, 186, 2503,
	2702, 2059, 186, 1516, 1194, 2502, 1195, 1196, 2501, 2088,
	1194, 1635, 1195, 1196, 2172, 37, 2417, 2209, 2084, 1194,
	2246, 1195, 1196, 2233, 2192, 1194, 2057, 1195, 1196, 1521,
	1522, 1523, 2017, 2439, 1194, 1354, 1195, 1196, 2440, 2663,
	1794, 1344, 1340, 1194, 2080, 1195, 1196, 2703, 2704, 2705,
	1517, 1518, 1519, 2662, 2153, 2436, 1341, 2437, 1194, 2435,
	1195, 1196, 2438, 3029, 2997, 597, 1830, 1194, 1822, 1195,
	1196, 186, 2441, 2651, 2185, 2186, 1344, 1340, 186, 2083,
	2395, 1820, 1821, 1343, 2162, 1342, 2394, 2919, 2786, 1793,
	1320, 1341, 597, 2124, 2638, 2777, 2149, 2776, 2191, 597,
	2788, 2641, 2637, 1488, 1488, 2404, 2258, 792, 597, 2114,
	2115, 1586, 2150, 2220, 2222, 793, 1337, 1338, 1343, 2145,
	1342, 764, 2481, 2217, 2197, 2281, 2213, 2165, 1194, 2237,
	1195, 1196, 1707, 2407, 2409, 1057, 186, 186, 186, 186,
	186, 2280, 2410, 2569, 92, 2775, 1708, 1056, 1916, 2201,
	2232, 94, 2204, 2312, 2214, 93, 1165, 186, 186, 92,
	2211, 2181, 2184, 2185, 2186, 2182, 2273, 2183, 2187, 121,
	93, 2657, 2658, 186, 2225, 2181, 2184, 2185, 2186, 2182,
	2643, 2183, 2187, 101, 1841, 1842, 3067, 2234, 94, 2499,
	2020, 2936, 597, 2881, 100, 2480, 99, 2189, 2242, 1827,
	800, 801, 2247, 2248, 2249, 94, 2393, 2009, 2008, 2007,
	2243, 2623, 2279, 101, 2392, 2036, 99, 1468, 2911, 2910,
	2794, 2792, 2791, 2784, 100, 100, 99, 2712, 2642, 2640,
	187, 2512, 187, 1951, 1695, 187, 1695, 1463, 1693, 1695,
	1693, 2342, 101, 1693, 1695, 2278, 774, 799, 1693, 2783,
	2631, 2168, 2148, 100, 3060, 3059, 3060, 2354, 597, 2338,
	2072, 2268, 2269, 1814, 1372, 598, 1363, 598, 598, 2301,
	106, 107, 2321, 3059, 597, 2925, 2678, 790, 103, 2304,
	2320, 88, 598, 598, 1, 1718, 2384, 2682, 3012, 186,
	565, 1804, 1318, 597, 2367, 3040, 2365, 3008, 2365, 3009,
	1559, 2365, 1345, 1549, 2744, 1762, 2365, 597, 2370, 2377,
	2378, 2379, 2380, 2371, 597, 597, 2882, 186, 186, 186,
	186, 186, 2339, 2515, 1957, 2710, 2322, 1914, 1014, 186,
	146, 1877, 1878, 2992, 186, 2384, 110, 186, 972, 186,
	780, 109, 186, 186, 186, 2358, 2414, 2429, 1017, 1123,
	1952, 2734, 2218, 2397, 1886, 1398, 2449, 1396, 1397, 1395,
	1333, 2192, 1400, 1399, 2310, 2073, 2398, 2311, 2609, 1638,
	687, 594, 2188, 184, 2420, 2383, 1387, 2423, 2495, 2420,
	2372, 2373, 2374, 2375, 2376, 2385, 1364, 186, 1058, 555,
	2488, 1989, 561, 1237, 1633, 2391, 2205, 819, 812, 1815,
	597, 2396, 2138, 2425, 2635, 2403, 2411, 2412, 597, 2389,
	2386, 2387, 2388, 186, 781, 2405, 2451, 2155, 2408, 2452,
	2401, 2399, 2535, 2918, 2785, 782, 186, 2977, 2431, 2432,
	2442, 2434, 596, 2215, 2446, 2447, 95, 1360, 2430, 2058,
	2453, 2433, 1709, 1597, 186, 1856, 1659, 186, 187, 619,
	2428, 618, 598, 598, 616, 2141, 2169, 2570, 1200, 707,
	2459, 2128, 1373, 2180, 2178, 2177, 2514, 2491, 187, 2490,
	2489, 2018, 1863, 2659, 2655, 3004, 1858, 1854, 2147, 820,
	627, 620, 976, 612, 983, 2675, 2543, 598, 2542, 2541,
	2287, 187, 2552, 2289, 2216, 2548, 598, 1178, 1336, 606,
	1916, 985, 598, 2534, 2887, 2513, 2942, 2035, 2546, 2591,
	1335, 1725, 1726, 2949, 2523, 2728, 2504, 2264, 1944, 63,
	41, 1753, 601, 2603, 3025, 1169, 806, 32, 31, 30,
	29, 597, 186, 2562, 2565, 2564, 28, 23, 22, 21,
	20, 19, 25, 18, 17, 2573, 16, 2526, 3035, 3066,
	115, 50, 47, 2572, 45, 123, 2579, 122, 2576, 2577,
	48, 2578, 44, 1098, 2580, 42, 2582, 27, 2584, 26,
	2567, 2568, 15, 14, 13, 12, 11, 10, 9, 5,
	4, 35, 34, 33, 1172, 24, 2, 2251, 1946, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2629, 0, 0, 0, 0, 0, 2681,
	0, 0, 2624, 2625, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 2632, 0, 2639, 0, 0,
	0, 0, 0, 0, 2664, 0, 2654, 2644, 0, 186,
	0, 0, 186, 186, 186, 0, 0, 0, 0, 0,
	0, 0, 597, 597, 2661, 0, 187, 0, 2670, 2671,
	0, 0, 0, 0, 0, 0, 2717, 2718, 2669, 2668,
	0, 0, 0, 0, 0, 2543, 0, 2542, 0, 2676,
	2677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 597, 597, 597, 597,
	0, 0, 0, 0, 0, 2693, 0, 2695, 0, 0,
	0, 0, 598, 598, 0, 598, 0, 598, 598, 0,
	598, 598, 598, 598, 598, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 2740, 0,
	0, 187, 0, 0, 0, 0, 1695, 0, 1695, 0,
	1693, 2235, 1693, 0, 0, 0, 2238, 2239, 187, 2738,
	2739, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	2755, 598, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2751, 0, 2780, 598, 0, 187,
	0, 597, 0, 597, 0, 0, 0, 0, 0, 0,
	2752, 0, 0, 0, 2763, 187, 0, 0, 2365, 1695,
	2365, 0, 187, 1693, 0, 2801, 37, 2764, 2809, 2773,
	0, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	598, 0, 2803, 0, 2790, 0, 2789, 2781, 2805, 0,
	2799, 2797, 0, 774, 598, 598, 0, 0, 0, 2420,
	0, 0, 0, 2423, 0, 597, 0, 2423, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 186, 2860,
	0, 597, 2813, 0, 0, 2810, 2811, 0, 0, 0,
	0, 0, 0, 0, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2856, 0, 2858,
	0, 2857, 0, 0, 0, 0, 0, 0, 598, 0,
	2901, 2902, 2884, 2872, 1695, 597, 2876, 0, 1693, 597,
	597, 2877, 598, 2905, 0, 0, 2864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 598, 0, 0, 0, 0, 0, 597, 0,
	0, 0, 0, 820, 2915, 820, 820, 0, 0, 0,
	2912, 2913, 2929, 2914, 0, 0, 0, 0, 0, 0,
	1168, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2926, 0, 0, 2928, 2917, 0, 0, 0, 0,
	0, 0, 0, 597, 2932, 0, 0, 0, 0, 774,
	0, 0, 0, 0, 187, 0, 2423, 2934, 186, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 186, 0, 0,
	0, 0, 0, 187, 0, 0, 598, 0, 0, 0,
	2953, 0, 0, 0, 0, 0, 187, 2950, 37, 0,
	598, 0, 0, 2945, 2948, 187, 0, 187, 0, 187,
	187, 598, 0, 0, 598, 0, 2492, 2493, 597, 2941,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	0, 0, 0, 1312, 1347, 1349, 0, 0, 0, 0,
	0, 0, 597, 597, 0, 0, 0, 2970, 0, 0,
	0, 0, 2978, 37, 0, 597, 0, 0, 0, 0,
	2980, 2975, 0, 2983, 186, 597, 2991, 0, 0, 2988,
	2884, 2993, 3000, 2985, 2984, 2982, 2987, 2986, 0, 2420,
	598, 0, 0, 3003, 0, 3033, 0, 3021, 3011, 3016,
	1324, 1325, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 3028, 0, 0, 0, 598, 0, 0,
	0, 0, 3034, 598, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 1368, 0, 1695, 3047, 0,
	0, 1693, 3049, 0, 820, 3051, 3054, 0, 3057, 3055,
	1388, 0, 3053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3068, 0, 0, 0, 3074, 3076, 0,
	598, 0, 598, 0, 0, 0, 0, 0, 598, 598,
	1695, 0, 0, 0, 1693, 3084, 3085, 2902, 0, 3082,
	3083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 187, 0, 0, 187, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 1403, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2687, 2688, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2721,
	0, 0, 0, 2725, 2726, 2727, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 182, 0, 0, 0,
	1496, 1496, 0, 1496, 0, 1496, 1496, 0, 1505, 1496,
	1496, 1496, 1496, 1496, 0, 0, 0, 0, 0, 0,
	121, 1312, 0, 0, 1312, 976, 1429, 1432, 1433, 1434,
	1435, 1436, 1437, 164, 1438, 1439, 1440, 1441, 1442, 1417,
	1418, 1419, 1420, 1401, 1402, 1430, 0, 1404, 0, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 0, 1572,
	1414, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 0,
	0, 0, 0, 0, 0, 1594, 2212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 161, 0, 162, 187, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 598, 0, 820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 820, 820, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 1713, 0, 0, 0, 1714, 2867, 2868, 2869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	1702, 0, 0, 187, 0, 0, 0, 1312, 1347, 1802,
	187, 0, 165, 0, 0, 0, 0, 0, 0, 1723,
	1724, 171, 0, 0, 598, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 187,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 1817, 0, 187,
	187, 0, 0, 0, 0, 0, 0, 2257, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	121, 0, 143, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 598, 0, 0, 0, 1368, 0,
	0, 820, 0, 0, 0, 0, 0, 0, 156, 820,
	0, 0, 820, 1928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 976, 153, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 182, 0, 0, 0, 0, 1471,
	1472, 152, 151, 181, 0, 0, 598, 0, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 187, 550, 0, 0, 598, 0, 0, 0, 0,
	0, 164, 600, 0, 0, 976, 0, 0, 0, 598,
	767, 983, 0, 0, 0, 0, 598, 598, 0, 187,
	187, 187, 187, 187, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 187, 0, 0, 187,
	0, 187, 0, 0, 187, 187, 187, 0, 0, 0,
	0, 980, 0, 0, 0, 0, 157, 0, 976, 161,
	1689, 162, 0, 169, 0, 0, 1689, 1689, 0, 0,
	147, 1473, 154, 0, 1470, 0, 148, 149, 0, 0,
	0, 181, 165, 0, 0, 0, 0, 0, 0, 187,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 177, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 187, 0, 0, 187,
	176, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 2052, 0, 2053, 2054, 0, 2029,
	0, 0, 0, 0, 0, 2062, 0, 0, 2063, 2064,
	0, 2066, 0, 0, 2068, 2069, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 2075, 2076, 2077, 2078, 2079, 0, 2081, 0, 0,
	0, 0, 0, 2085, 0, 2086, 0, 0, 0, 2089,
	0, 0, 0, 598, 187, 0, 0, 2098, 2099, 2100,
	2101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2112, 2113, 0, 0, 0, 0, 0, 0, 2118, 2119,
	2120, 2121, 2122, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 187, 144, 0, 0, 145, 0, 0, 0,
	0, 820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 187, 187, 187, 1829, 0, 0,
	0, 0, 0, 2142, 598, 598, 157, 0, 0, 185,
	0, 0, 551, 169, 2157, 592, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 787, 0, 0, 598, 598,
	598, 598, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 805, 0, 805, 0, 0, 0, 0, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 0, 0, 0,
	176, 178, 179, 180, 0, 2240, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 187,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 1099, 0, 1105, 2265,
	0, 1107, 0, 598, 0, 598, 0, 0, 2270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2346, 0,
	2347, 0, 0, 0, 0, 0, 2351, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 2366, 598, 176, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 598, 0, 0, 0, 2381, 2382, 0,
	0, 0, 1689, 0, 0, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 598, 598, 1312, 0, 1312, 0, 0, 1312, 0,
	0, 0, 0, 1312, 0, 0, 2426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 820, 0,
	598, 0, 0, 2444, 2445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 0, 820, 0, 0,
	0, 1312, 0, 0, 2427, 1496, 1312, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2571, 0, 0, 0, 0, 0, 0, 2575, 0, 0,
	976, 0, 0, 1312, 598, 598, 0, 0, 1829, 0,
	0, 2585, 2586, 2588, 2590, 0, 0, 598, 0, 0,
	0, 0, 0, 2596, 0, 0, 187, 598, 2600, 2601,
	2602, 0, 0, 0, 0, 2605, 0, 0, 0, 0,
	0, 2607, 0, 0, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 0, 0, 2621, 0, 0, 0,
	0, 0, 2626, 0, 0, 0, 551, 0, 551, 0,
	0, 551, 0, 0, 0, 0, 598, 0, 804, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2648, 2649, 0,
	182, 2653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2665,
	2666, 0, 1393, 0, 121, 0, 143, 0, 0, 0,
	0, 2400, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 39, 40, 80, 0, 0, 153, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 798, 0,
	0, 0, 84, 0, 0, 0, 43, 69, 70, 0,
	67, 71, 0, 0, 0, 161, 0, 162, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 2732,
	0, 0, 0, 130, 131, 152, 151, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 56, 0,
	0, 1313, 0, 0, 0, 0, 0, 0, 0, 1574,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 79,
	0, 1606, 2761, 0, 0, 0, 2762, 0, 1610, 0,
	0, 0, 2766, 0, 551, 0, 0, 0, 0, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 2745, 2746, 2747, 2748,
	0, 0, 0, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 128, 154, 135, 127, 0,
	148, 149, 0, 0, 0, 0, 165, 551, 1647, 0,
	0, 0, 0, 0, 0, 171, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 777, 1312, 79, 0,
	139, 137, 132, 133, 134, 138, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 777, 0, 0, 0,
	0, 140, 0, 0, 46, 49, 52, 51, 54, 0,
	66, 0, 984, 75, 72, 0, 1312, 0, 0, 0,
	0, 2802, 0, 2804, 0, 0, 0, 0, 0, 0,
	0, 2873, 0, 0, 0, 0, 55, 83, 82, 0,
	2880, 64, 65, 53, 0, 0, 0, 0, 0, 73,
	74, 0, 0, 0, 0, 0, 2890, 2891, 2892, 0,
	2893, 2894, 0, 0, 0, 0, 2897, 0, 2898, 0,
	2900, 2903, 0, 0, 0, 0, 0, 2907, 0, 0,
	0, 0, 156, 0, 0, 1829, 0, 0, 0, 57,
	58, 0, 59, 60, 61, 62, 0, 0, 0, 0,
	0, 2875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 820, 2933, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 2908, 0, 0, 0, 2908,
	2908, 1847, 0, 1850, 0, 0, 1647, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2955, 0, 0, 0, 0, 0, 0, 144, 0, 1313,
	145, 0, 1313, 0, 2960, 0, 0, 551, 0, 2965,
	0, 0, 0, 0, 0, 2966, 2967, 0, 0, 0,
	81, 0, 0, 1829, 1546, 0, 0, 0, 0, 0,
	157, 0, 0, 2973, 0, 0, 0, 169, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 1829, 0, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 0, 551, 177,
	0, 0, 0, 0, 3024, 0, 0, 1619, 1620, 551,
	551, 551, 551, 551, 551, 551, 1312, 0, 2971, 0,
	0, 0, 0, 3030, 0, 0, 0, 3031, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	1198, 0, 820, 820, 176, 178, 179, 180, 551, 0,
	0, 0, 0, 0, 0, 3001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3006, 0, 0, 1245, 0,
	0, 0, 1647, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 2014, 2015, 0, 0,
	2019, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	0, 0, 805, 0, 0, 0, 2025, 0, 0, 805,
	805, 0, 0, 0, 1829, 1313, 0, 0, 0, 0,
	0, 0, 0, 3006, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 805, 1596, 805, 805, 805, 805, 805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 1158, 1158, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 787,
	79, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 1596,
	0, 551, 0, 551, 0, 551, 1865, 777, 1233, 1234,
	1235, 0, 1238, 0, 1240, 1241, 1242, 1243, 0, 1246,
	1248, 1248, 0, 1248, 1252, 1252, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 0, 1296, 1297,
	1298, 1299, 1300, 0, 0, 0, 0, 1252, 1252, 1252,
	1252, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1322, 0, 0, 0,
	0, 0, 777, 0, 0, 0, 777, 0, 0, 0,
	0, 0, 777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 551, 551, 0, 0,
	551, 0, 2021, 0, 0, 0, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2292, 2293, 2294, 2295, 2296, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 2305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2313, 0, 0, 0, 0, 0, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2819, 2821,
	2820, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 1655, 1656, 1657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 805, 805,
	0, 0, 0, 1699, 1700, 0, 0, 0, 0, 1596,
	0, 1705, 551, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 1721, 1722, 0, 0, 0,
	1747, 1748, 1749, 1750, 1751, 1752, 1754, 1758, 1759, 610,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 0, 0, 0, 551, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2500, 0, 0, 0, 0,
	0, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 2538, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 1158, 0, 0, 2547, 0, 0, 1837, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 551,
	0, 0, 2563, 0, 0, 2566, 2250, 0, 182, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 2825, 2826,
	0, 0, 121, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 551, 551, 551, 551, 0,
	0, 0, 0, 0, 1912, 0, 153, 0, 0, 0,
	0, 0, 142, 0, 0, 551, 551, 0, 0, 698,
	2628, 644, 702, 646, 699, 700, 0, 642, 645, 701,
	0, 551, 0, 161, 0, 162, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	0, 1471, 1472, 152, 151, 181, 651, 652, 2818, 2822,
	2823, 2824, 2827, 2828, 2829, 2837, 2839, 676, 2838, 2840,
	2841, 2842, 2845, 2846, 2847, 2848, 2843, 2844, 2849, 2815,
	2814, 2816, 2817, 0, 0, 0, 0, 0, 0, 0,
	0, 1313, 0, 1313, 0, 0, 1313, 0, 0, 0,
	0, 1313, 0, 0, 0, 0, 0, 0, 2691, 0,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 2706, 0, 0,
	2707, 2708, 2709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 0, 147, 1473, 154, 0, 1470, 0, 148, 149,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 1313,
	0, 0, 0, 171, 1313, 551, 551, 551, 551, 551,
	1403, 0, 0, 0, 0, 0, 0, 2443, 0, 0,
	0, 0, 551, 0, 0, 1546, 984, 551, 0, 0,
	551, 2454, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1313, 1416, 0, 0, 0, 0, 0, 0, 0,
	2061, 551, 0, 0, 0, 0, 2065, 0, 2067, 0,
	0, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	1429, 1432, 1433, 1434, 1435, 1436, 1437, 0, 1438, 1439,
	1440, 1441, 1442, 1417, 1418, 1419, 1420, 1401, 1402, 1430,
	0, 1404, 0, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 0, 0, 1414, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 144, 0, 2037, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 1431,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	551, 551, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2954, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 0, 0, 0, 0,
	0, 2116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2317, 2173, 2174, 0,
	0, 0, 0, 1313, 0, 1313, 2193, 0, 2194, 2195,
	0, 0, 0, 0, 2340, 2341, 0, 0, 0, 2344,
	0, 0, 0, 0, 0, 1546, 0, 0, 0, 2348,
	2349, 2350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2355, 2356, 2357, 1313, 0, 1765, 2359, 0, 2360,
	2361, 0, 0, 0, 2368, 2369, 0, 0, 0, 0,
	0, 0, 1765, 1765, 1765, 1765, 1765, 610, 610, 610,
	610, 87, 0, 0, 0, 0, 0, 708, 715, 716,
	717, 718, 719, 709, 711, 0, 0, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 713, 720, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2271, 0, 0,
	0, 0, 0, 0, 0, 0, 1546, 2415, 0, 0,
	0, 2137, 0, 0, 715, 716, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 2544, 2545, 0,
	0, 0, 0, 0, 2448, 0, 0, 0, 0, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2510, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 2593, 0, 0, 0, 0, 0,
	0, 0, 0, 2599, 0, 0, 0, 0, 0, 0,
	2424, 0, 79, 0, 1313, 1857, 1857, 1857, 1857, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2193, 777, 0, 0, 0, 1857, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 0, 0, 0, 0, 0,
	0, 698, 0, 0, 702, 0, 699, 700, 0, 0,
	0, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2532, 0, 0, 0, 0, 0, 715,
	716, 0, 0, 2540, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2713, 0, 0, 0,
	0, 0, 2574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2737,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 0, 0, 0, 2753, 0, 2754, 0,
	0, 0, 0, 2757, 2758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 2765, 0, 0,
	708, 715, 716, 717, 718, 719, 709, 711, 0, 0,
	0, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 713, 720, 721, 0, 0, 1857,
	0, 0, 0, 0, 0, 2798, 0, 0, 0, 0,
	0, 0, 2674, 0, 0, 0, 2806, 0, 0, 2808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2812, 0, 0, 0, 0, 0, 0,
	2544, 2545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2853, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2916, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2774, 0, 2778, 2779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2424, 0, 79, 0,
	2424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1254, 1255, 1256, 1257, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 0, 954, 939, 468,
	79, 885, 957, 854, 873, 967, 876, 879, 921, 833,
	899, 384, 870, 825, 858, 828, 865, 829, 856, 887,
	253, 853, 941, 903, 956, 337, 250, 835, 859, 398,
	875, 197, 923, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 963, 341, 909,
	2974, 452, 369, 0, 0, 79, 889, 945, 897, 935,
	884, 922, 843, 908, 958, 871, 918, 959, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 2994, 0, 2995, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 867, 915, 953, 868, 917,
	248, 296, 255, 247, 472, 964, 944, 832, 896, 952,
	0, 0, 216, 955, 891, 0, 920, 0, 970, 827,
	911, 0, 830, 834, 966, 948, 862, 258, 0, 0,
	0, 0, 0, 0, 0, 888, 898, 932, 882, 0,
	0, 0, 0, 0, 0, 0, 860, 0, 907, 0,
	0, 0, 839, 831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	842, 0, 861, 933, 0, 824, 279, 836, 370, 240,
	0, 937, 947, 883, 508, 951, 881, 880, 927, 840,
	943, 874, 336, 838, 305, 192, 212, 0, 872, 380,
	423, 429, 942, 857, 866, 238, 864, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 906, 925, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 1160, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 852, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	938, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 930,
	969, 393, 428, 227, 493, 451, 847, 851, 845, 912,
	846, 901, 902, 848, 960, 961, 962, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 934, 841, 0, 849,
	850, 0, 940, 949, 950, 546, 353, 441, 490, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	905, 191, 208, 339, 965, 416, 271, 524, 502, 498,
	826, 210, 844, 245, 855, 863, 0, 869, 877, 878,
	890, 892, 893, 894, 895, 913, 914, 916, 924, 926,
	929, 931, 936, 946, 968, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 904, 910, 350, 264, 284, 295, 919,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 900,
	928, 346, 469, 470, 291, 365, 0, 0, 954, 939,
	468, 0, 885, 957, 854, 873, 967, 876, 879, 921,
	833, 899, 384, 870, 825, 858, 828, 865, 829, 856,
	887, 253, 853, 941, 903, 956, 337, 250, 835, 859,
	398, 875, 197, 923, 442, 237, 347, 344, 475, 265,
	256, 252, 236, 292, 354, 396, 462, 390, 963, 341,
	909, 0, 452, 369, 0, 0, 0, 889, 945, 897,
	935, 884, 922, 843, 908, 958, 871, 918, 959, 298,
	234, 300, 196, 381, 453, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 867, 915, 953, 868,
	917, 248, 296, 255, 247, 472, 964, 944, 832, 896,
	952, 0, 0, 216, 955, 891, 0, 920, 0, 970,
	827, 911, 0, 830, 834, 966, 948, 862, 258, 0,
	0, 0, 0, 0, 0, 0, 888, 898, 932, 882,
	0, 0, 0, 0, 0, 2455, 0, 860, 0, 907,
	0, 0, 0, 839, 831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 842, 0, 861, 933, 0, 824, 279, 836, 370,
	240, 0, 937, 947, 883, 508, 951, 881, 880, 927,
	840, 943, 874, 336, 838, 305, 192, 212, 0, 872,
	380, 423, 429, 942, 857, 866, 238, 864, 427, 394,
	491, 220, 267, 420, 400, 425, 407, 270, 906, 925,
	426, 342, 477, 414, 488, 509, 510, 246, 374, 499,
	466, 505, 523, 213, 243, 388, 459, 494, 449, 366,
	473, 474, 304, 448, 277, 195, 340, 515, 211, 435,
	229, 218, 479, 497, 272, 418, 203, 461, 486, 226,
	439, 0, 0, 525, 205, 484, 458, 362, 301, 302,
	204, 0, 419, 251, 275, 241, 383, 481, 482, 239,
	526, 215, 504, 207, 1160, 503, 376, 476, 485, 363,
	352, 206, 483, 361, 351, 307, 326, 327, 263, 286,
	412, 345, 413, 287, 372, 371, 373, 198, 495, 0,
	199, 0, 454, 496, 527, 221, 222, 224, 852, 262,
	266, 274, 276, 282, 283, 290, 338, 387, 411, 409,
	415, 938, 471, 489, 500, 507, 513, 514, 516, 517,
	518, 519, 520, 522, 521, 375, 289, 450, 306, 343,
	930, 969, 393, 428, 227, 493, 451, 847, 851, 845,
	912, 846, 901, 902, 848, 960, 961, 962, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 0, 934, 841, 0,
	849, 850, 0, 940, 949, 950, 546, 353, 441, 490,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 359,
	367, 905, 191, 208, 339, 965, 416, 271, 524, 502,
	498, 826, 210, 844, 245, 855, 863, 0, 869, 877,
	878, 890, 892, 893, 894, 895, 913, 914, 916, 924,
	926, 929, 931, 936, 946, 968, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 478, 480, 492, 506, 511, 436, 281,
	487, 512, 0, 348, 904, 910, 350, 264, 284, 295,
	919, 501, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	900, 928, 346, 469, 470, 291, 365, 0, 0, 954,
	939, 468, 0, 885, 957, 854, 873, 967, 876, 879,
	921, 833, 899, 384, 870, 825, 858, 828, 865, 829,
	856, 887, 253, 853, 941, 903, 956, 337, 250, 835,
	859, 398, 875, 197, 923, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 963,
	341, 909, 0, 452, 369, 0, 0, 0, 889, 945,
	897, 935, 884, 922, 843, 908, 958, 871, 918, 959,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 867, 915, 953,
	868, 917, 248, 296, 255, 247, 472, 964, 944, 832,
	896, 952, 0, 0, 216, 955, 891, 0, 920, 0,
	970, 827, 911, 0, 830, 834, 966, 948, 862, 258,
	0, 0, 0, 0, 0, 0, 0, 888, 898, 932,
	882, 0, 0, 0, 0, 0, 2413, 0, 860, 0,
	907, 0, 0, 0, 839, 831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 842, 0, 861, 933, 0, 824, 279, 836,
	370, 240, 0, 937, 947, 883, 508, 951, 881, 880,
	927, 840, 943, 874, 336, 838, 305, 192, 212, 0,
	872, 380, 423, 429, 942, 857, 866, 238, 864, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 906,
	925, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 1160, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 852,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 938, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 930, 969, 393, 428, 227, 493, 451, 847, 851,
	845, 912, 846, 901, 902, 848, 960, 961, 962, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 934, 841,
	0, 849, 850, 0, 940, 949, 950, 546, 353, 441,
	490, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 905, 191, 208, 339, 965, 416, 271, 524,
	502, 498, 826, 210, 844, 245, 855, 863, 0, 869,
	877, 878, 890, 892, 893, 894, 895, 913, 914, 916,
	924, 926, 929, 931, 936, 946, 968, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 904, 910, 350, 264, 284,
	295, 919, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 900, 928, 346, 469, 470, 291, 365, 0, 0,
	954, 939, 468, 0, 885, 957, 854, 873, 967, 876,
	879, 921, 833, 899, 384, 870, 825, 858, 828, 865,
	829, 856, 887, 253, 853, 941, 903, 956, 337, 250,
	835, 859, 398, 875, 197, 923, 442, 237, 347, 344,
	475, 265, 256, 252, 236, 292, 354, 396, 462, 390,
	963, 341, 909, 0, 452, 369, 0, 0, 0, 889,
	945, 897, 935, 884, 922, 843, 908, 958, 871, 918,
	959, 298, 234, 300, 196, 381, 453, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 867, 915,
	953, 868, 917, 248, 296, 255, 247, 472, 964, 944,
	832, 896, 952, 0, 0, 216, 955, 891, 0, 920,
	0, 970, 827, 911, 0, 830, 834, 966, 948, 862,
	258, 0, 0, 0, 0, 0, 0, 0, 888, 898,
	932, 882, 0, 0, 0, 0, 0, 1845, 0, 860,
	0, 907, 0, 0, 0, 839, 831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 886,
	0, 0, 0, 842, 0, 861, 933, 0, 824, 279,
	836, 370, 240, 0, 937, 947, 883, 508, 951, 881,
	880, 927, 840, 943, 874, 336, 838, 305, 192, 212,
	0, 872, 380, 423, 429, 942, 857, 866, 238, 864,
	427, 394, 491, 220, 267, 420, 400, 425, 407, 270,
	906, 925, 426, 342, 477, 414, 488, 509, 510, 246,
	374, 499, 466, 505, 523, 213, 243, 388, 459, 494,
	449, 366, 473, 474, 304, 448, 277, 195, 340, 515,
	211, 435, 229, 218, 479, 497, 272, 418, 203, 461,
	486, 226, 439, 0, 0, 525, 205, 484, 458, 362,
	301, 302, 204, 0, 419, 251, 275, 241, 383, 481,
	482, 239, 526, 215, 504, 207, 1160, 503, 376, 476,
	485, 363, 352, 206, 483, 361, 351, 307, 326, 327,
	263, 286, 412, 345, 413, 287, 372, 371, 373, 198,
	495, 0, 199, 0, 454, 496, 527, 221, 222, 224,
	852, 262, 266, 274, 276, 282, 283, 290, 338, 387,
	411, 409, 415, 938, 471, 489, 500, 507, 513, 514,
	516, 517, 518, 519, 520, 522, 521, 375, 289, 450,
	306, 343, 930, 969, 393, 428, 227, 493, 451, 847,
	851, 845, 912, 846, 901, 902, 848, 960, 961, 962,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 0, 934,
	841, 0, 849, 850, 0, 940, 949, 950, 546, 353,
	441, 490, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 359, 367, 905, 191, 208, 339, 965, 416, 271,
	524, 502, 498, 826, 210, 844, 245, 855, 863, 0,
	869, 877, 878, 890, 892, 893, 894, 895, 913, 914,
	916, 924, 926, 929, 931, 936, 946, 968, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 417, 422,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 478, 480, 492, 506, 511,
	436, 281, 487, 512, 0, 348, 904, 910, 350, 264,
	284, 295, 919, 501, 457, 214, 424, 273, 202, 233,
	217, 242, 257, 260, 299, 360, 368, 397, 402, 278,
	254, 231, 421, 228, 440, 463, 464, 465, 467, 364,
	249, 401, 900, 928, 346, 469, 470, 291, 365, 0,
	0, 954, 939, 468, 0, 885, 957, 854, 873, 967,
	876, 879, 921, 833, 899, 384, 870, 825, 858, 828,
	865, 829, 856, 887, 253, 853, 941, 903, 956, 337,
	250, 835, 859, 398, 875, 197, 923, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 963, 341, 909, 0, 452, 369, 0, 0, 0,
	889, 945, 897, 935, 884, 922, 843, 908, 958, 871,
	918, 959, 298, 234, 300, 196, 381, 453, 269, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 867,
	915, 953, 868, 917, 248, 296, 255, 247, 472, 964,
	944, 832, 896, 952, 0, 0, 216, 955, 891, 0,
	920, 0, 970, 827, 911, 0, 830, 834, 966, 948,
	862, 258, 0, 0, 0, 0, 0, 0, 0, 888,
	898, 932, 882, 0, 0, 0, 0, 0, 0, 0,
	860, 0, 907, 0, 0, 0, 839, 831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 842, 0, 861, 933, 0, 824,
	279, 836, 370, 240, 0, 937, 947, 883, 508, 951,
	881, 880, 927, 840, 943, 874, 336, 838, 305, 192,
	212, 0, 872, 380, 423, 429, 942, 857, 866, 238,
	864, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 906, 925, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 1160, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 852, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 938, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 930, 969, 393, 428, 227, 493, 451,
	847, 851, 845, 912, 846, 901, 902, 848, 960, 961,
	962, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	934, 841, 0, 849, 850, 0, 940, 949, 950, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 905, 191, 208, 339, 965, 416,
	271, 524, 502, 498, 826, 210, 844, 245, 855, 863,
	0, 869, 877, 878, 890, 892, 893, 894, 895, 913,
	914, 916, 924, 926, 929, 931, 936, 946, 968, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 904, 910, 350,
	264, 284, 295, 919, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 900, 928, 346, 469, 470, 291, 365,
	0, 0, 954, 939, 468, 0, 885, 957, 854, 873,
	967, 876, 879, 921, 833, 899, 384, 870, 825, 858,
	828, 865, 829, 856, 887, 253, 853, 941, 903, 956,
	337, 250, 835, 859, 398, 875, 197, 923, 442, 237,
	347, 344, 475, 265, 256, 252, 236, 292, 354, 396,
	462, 390, 963, 341, 909, 0, 452, 369, 0, 0,
	0, 889, 945, 897, 935, 884, 922, 843, 908, 958,
	871, 918, 959, 298, 234, 300, 196, 381, 453, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	867, 915, 953, 868, 917, 248, 296, 255, 247, 472,
	964, 944, 832, 896, 952, 0, 0, 216, 955, 891,
	0, 920, 0, 970, 827, 911, 0, 830, 834, 966,
	948, 862, 258, 0, 0, 0, 0, 0, 0, 0,
	888, 898, 932, 882, 0, 0, 0, 0, 0, 0,
	0, 860, 0, 907, 0, 0, 0, 839, 831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 842, 0, 861, 933, 0,
	824, 279, 836, 370, 240, 0, 937, 947, 883, 508,
	951, 881, 880, 927, 840, 943, 874, 336, 838, 305,
	192, 212, 0, 872, 380, 423, 429, 942, 857, 866,
	238, 864, 427, 394, 491, 220, 267, 420, 400, 425,
	407, 270, 906, 925, 426, 342, 477, 414, 488, 509,
	510, 246, 374, 499, 466, 505, 523, 213, 243, 388,
	459, 494, 449, 366, 473, 474, 304, 448, 277, 195,
	340, 515, 211, 435, 229, 218, 479, 497, 272, 418,
	203, 461, 486, 226, 439, 0, 0, 525, 205, 484,
	458, 362, 301, 302, 204, 0, 419, 251, 275, 241,
	383, 481, 482, 239, 526, 215, 504, 207, 1160, 503,
	376, 476, 485, 363, 352, 206, 483, 361, 351, 307,
	326, 327, 263, 286, 412, 345, 413, 287, 372, 371,
	373, 198, 495, 0, 199, 0, 454, 496, 527, 221,
	222, 224, 852, 262, 266, 274, 276, 282, 283, 290,
	338, 387, 411, 409, 415, 938, 471, 489, 500, 507,
	513, 514, 516, 517, 518, 519, 520, 522, 521, 375,
	289, 450, 306, 343, 930, 969, 393, 428, 227, 493,
	451, 847, 851, 845, 912, 846, 901, 902, 848, 960,
	961, 962, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	0, 934, 841, 0, 849, 850, 0, 940, 949, 950,
	546, 353, 441, 490, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 359, 367, 905, 191, 208, 339, 965,
	416, 271, 524, 502, 498, 826, 210, 844, 245, 855,
	863, 0, 869, 877, 878, 890, 892, 893, 894, 895,
	913, 914, 916, 924, 926, 929, 931, 936, 946, 968,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	417, 422, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 478, 480, 492,
	506, 511, 436, 281, 487, 512, 0, 348, 904, 910,
	350, 264, 284, 295, 919, 501, 457, 214, 424, 273,
	202, 233, 217, 242, 257, 260, 299, 360, 368, 397,
	402, 278, 254, 231, 421, 228, 440, 463, 464, 465,
	467, 364, 249, 401, 900, 928, 346, 469, 470, 291,
	365, 0, 0, 954, 939, 468, 0, 885, 957, 854,
	873, 967, 876, 879, 921, 833, 899, 384, 870, 825,
	858, 828, 865, 829, 856, 887, 253, 853, 941, 903,
	956, 337, 250, 835, 859, 398, 875, 197, 923, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 963, 341, 909, 0, 452, 369, 0,
	0, 0, 889, 945, 897, 935, 884, 922, 843, 908,
	958, 871, 918, 959, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 867, 915, 953, 868, 917, 248, 296, 255, 247,
	472, 964, 944, 832, 896, 952, 0, 0, 971, 955,
	891, 0, 920, 0, 970, 827, 911, 0, 830, 834,
	966, 948, 862, 258, 0, 0, 0, 0, 0, 0,
	0, 888, 898, 932, 882, 0, 0, 0, 0, 0,
	0, 0, 860, 0, 907, 0, 0, 0, 839, 831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 842, 0, 861, 933,
	0, 824, 279, 836, 370, 240, 0, 937, 947, 883,
	508, 951, 881, 880, 927, 840, 943, 874, 336, 838,
	305, 192, 212, 0, 872, 380, 423, 429, 942, 857,
	866, 238, 864, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 906, 925, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 837,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 852, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 938, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	823, 817, 816, 306, 343, 930, 969, 393, 428, 227,
	493, 451, 847, 851, 845, 912, 846, 901, 902, 848,
	960, 961, 962, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 934, 841, 0, 849, 850, 0, 940, 949,
	950, 546, 353, 441, 490, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 905, 191, 208, 339,
	965, 416, 271, 524, 502, 498, 826, 210, 844, 245,
	855, 863, 0, 869, 877, 878, 890, 892, 893, 894,
	895, 913, 914, 916, 924, 926, 929, 931, 936, 946,
	968, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 904,
	910, 350, 264, 284, 295, 919, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 900, 928, 346, 469, 470,
	291, 365, 0, 0, 954, 939, 468, 0, 885, 957,
	854, 873, 967, 876, 879, 921, 833, 899, 384, 870,
	825, 858, 828, 865, 829, 856, 887, 253, 853, 941,
	903, 956, 337, 250, 835, 859, 398, 875, 197, 923,
	442, 237, 347, 344, 475, 265, 256, 252, 236, 292,
	354, 396, 462, 390, 963, 341, 909, 0, 452, 369,
	0, 0, 0, 889, 945, 897, 935, 884, 922, 843,
	908, 958, 871, 918, 959, 298, 234, 300, 196, 381,
	453, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 867, 915, 953, 868, 917, 248, 296, 255,
	247, 472, 964, 944, 832, 896, 952, 0, 0, 971,
	955, 891, 0, 920, 0, 970, 827, 911, 0, 830,
	834, 966, 948, 862, 258, 0, 0, 0, 0, 0,
	0, 0, 888, 898, 932, 882, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 907, 0, 0, 0, 839,
	831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 886, 0, 0, 0, 842, 0, 861,
	933, 0, 824, 279, 836, 370, 240, 0, 937, 947,
	883, 508, 951, 881, 880, 927, 840, 943, 874, 336,
	838, 305, 192, 212, 0, 872, 380, 423, 429, 942,
	857, 866, 238, 864, 427, 394, 491, 220, 267, 420,
	400, 425, 407, 270, 906, 925, 426, 342, 477, 414,
	488, 509, 510, 246, 374, 499, 466, 505, 523, 213,
	243, 388, 459, 494, 449, 366, 473, 474, 304, 448,
	277, 195, 340, 515, 211, 435, 229, 218, 479, 497,
	272, 418, 203, 461, 1379, 226, 439, 0, 0, 525,
	205, 484, 458, 362, 301, 302, 204, 0, 419, 251,
	275, 241, 383, 481, 482, 239, 526, 215, 504, 207,
	837, 503, 376, 476, 485, 363, 352, 206, 483, 361,
	351, 307, 326, 327, 263, 286, 412, 345, 413, 287,
	372, 371, 373, 198, 495, 0, 199, 0, 454, 496,
	527, 221, 222, 224, 852, 262, 266, 274, 276, 282,
	283, 290, 338, 387, 411, 409, 415, 938, 471, 489,
	500, 507, 513, 514, 516, 517, 518, 519, 520, 522,
	521, 823, 817, 816, 306, 343, 930, 969, 393, 428,
	227, 493, 451, 847, 851, 845, 912, 846, 901, 902,
	848, 960, 961, 962, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 0, 934, 841, 0, 849, 850, 0, 940,
	949, 950, 546, 353, 441, 490, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 359, 367, 905, 191, 208,
	339, 965, 416, 271, 524, 502, 498, 826, 210, 844,
	245, 855, 863, 0, 869, 877, 878, 890, 892, 893,
	894, 895, 913, 914, 916, 924, 926, 929, 931, 936,
	946, 968, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 478,
	480, 492, 506, 511, 436, 281, 487, 512, 0, 348,
	904, 910, 350, 264, 284, 295, 919, 501, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 900, 928, 346, 469,
	470, 291, 365, 0, 0, 954, 939, 468, 0, 885,
	957, 854, 873, 967, 876, 879, 921, 833, 899, 384,
	870, 825, 858, 828, 865, 829, 856, 887, 253, 853,
	941, 903, 956, 337, 250, 835, 859, 398, 875, 197,
	923, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 963, 341, 909, 0, 452,
	369, 0, 0, 0, 889, 945, 897, 935, 884, 922,
	843, 908, 958, 871, 918, 959, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 867, 915, 953, 868, 917, 248, 296,
	255, 247, 472, 964, 944, 832, 896, 952, 0, 0,
	971, 955, 891, 0, 920, 0, 970, 827, 911, 0,
	830, 834, 966, 948, 862, 258, 0, 0, 0, 0,
	0, 0, 0, 888, 898, 932, 882, 0, 0, 0,
	0, 0, 0, 0, 860, 0, 907, 0, 0, 0,
	839, 831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 886, 0, 0, 0, 842, 0,
	861, 933, 0, 824, 279, 836, 370, 240, 0, 937,
	947, 883, 508, 951, 881, 880, 927, 840, 943, 874,
	336, 838, 305, 192, 212, 0, 872, 380, 423, 429,
	942, 857, 866, 238, 864, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 906, 925, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 814, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 837, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 852, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 938, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 823, 817, 816, 306, 343, 930, 969, 393,
	428, 227, 493, 451, 847, 851, 845, 912, 846, 901,
	902, 848, 960, 961, 962, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 934, 841, 0, 849, 850, 0,
	940, 949, 950, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 905, 191,
	208, 339, 965, 416, 271, 524, 502, 498, 826, 210,
	844, 245, 855, 863, 0, 869, 877, 878, 890, 892,
	893, 894, 895, 913, 914, 916, 924, 926, 929, 931,
	936, 946, 968, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 904, 910, 350, 264, 284, 295, 919, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 900, 928, 346,
	469, 470, 291, 365, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 1789, 0, 628, 0, 0, 0, 253,
	633, 0, 0, 0, 337, 250, 0, 1790, 398, 0,
	197, 0, 442, 237, 347, 344, 475, 265, 256, 252,
	236, 292, 354, 396, 462, 390, 640, 341, 0, 0,
	452, 369, 0, 0, 0, 0, 0, 635, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 381, 453, 269, 0, 87, 0, 0, 188, 189,
	190, 708, 715, 716, 717, 718, 719, 709, 711, 0,
	0, 225, 710, 232, 655, 657, 656, 666, 667, 668,
	669, 670, 671, 672, 653, 713, 720, 721, 0, 248,
	296, 255, 247, 472, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 611,
	625, 0, 639, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 622, 623, 803, 0, 0, 0, 692, 0, 624,
	0, 0, 632, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 370, 240, 0,
	691, 0, 0, 508, 0, 0, 689, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 380, 423,
	429, 0, 0, 0, 238, 0, 427, 394, 491, 220,
	267, 420, 400, 425, 407, 270, 0, 0, 426, 342,
	477, 414, 488, 509, 510, 246, 374, 499, 466, 505,
	523, 213, 243, 388, 459, 494, 449, 366, 473, 474,
	304, 448, 277, 195, 340, 515, 211, 435, 229, 218,
	479, 497, 272, 418, 203, 461, 486, 226, 439, 0,
	0, 525, 205, 484, 458, 362, 301, 302, 204, 0,
	419, 251, 275, 241, 383, 481, 482, 239, 526, 215,
	504, 207, 0, 503, 376, 476, 485, 363, 352, 206,
	483, 361, 351, 307, 661, 662, 263, 286, 412, 345,
	413, 287, 372, 371, 373, 198, 495, 0, 199, 0,
	454, 496, 527, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 387, 411, 409, 415, 0,
	471, 489, 500, 507, 513, 514, 516, 517, 518, 519,
	520, 522, 521, 375, 289, 450, 306, 343, 0, 0,
	393, 428, 227, 493, 451, 698, 690, 644, 702, 646,
	699, 700, 641, 642, 645, 701, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 0, 693, 631, 630, 0, 637,
	638, 0, 651, 652, 654, 658, 659, 660, 663, 664,
	665, 673, 675, 676, 674, 677, 678, 679, 682, 683,
	684, 685, 680, 681, 686, 648, 647, 649, 650, 629,
	191, 208, 339, 0, 416, 271, 524, 502, 498, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 417, 422, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 478, 480, 492, 506, 511, 436, 281, 487, 512,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 501,
	457, 214, 424, 273, 202, 233, 217, 242, 257, 260,
	299, 360, 368, 397, 402, 278, 254, 231, 421, 228,
	440, 463, 464, 465, 467, 364, 249, 401, 0, 365,
	346, 469, 470, 291, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 628, 0, 0, 0, 253, 633, 0, 0, 0,
	337, 250, 0, 0, 398, 0, 197, 0, 442, 237,
	347, 344, 475, 265, 256, 252, 236, 292, 354, 396,
	462, 390, 640, 341, 0, 0, 452, 369, 0, 0,
	0, 0, 0, 635, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 381, 453, 269,
	0, 87, 0, 0, 188, 189, 190, 708, 715, 716,
	717, 718, 719, 709, 711, 0, 0, 225, 710, 232,
	655, 657, 656, 666, 667, 668, 669, 670, 671, 672,
	653, 713, 720, 721, 0, 248, 296, 255, 247, 472,
	0, 0, 1755, 1756, 1757, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 611, 625, 0, 639, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 622, 623, 0,
	0, 0, 0, 692, 0, 624, 0, 0, 632, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 370, 240, 0, 691, 0, 0, 508,
	0, 0, 689, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 380, 423, 429, 0, 0, 0,
	238, 0, 427, 394, 491, 220, 267, 420, 400, 425,
	407, 270, 0, 0, 426, 342, 477, 414, 488, 509,
	510, 246, 374, 499, 466, 505, 523, 213, 243, 388,
	459, 494, 449, 366, 473, 474, 304, 448, 277, 195,
	340, 515, 211, 435, 229, 218, 479, 497, 272, 418,
	203, 461, 486, 226, 439, 0, 0, 525, 205, 484,
	458, 362, 301, 302, 204, 0, 419, 251, 275, 241,
	383, 481, 482, 239, 526, 215, 504, 207, 0, 503,
	376, 476, 485, 363, 352, 206, 483, 361, 351, 307,
	661, 662, 263, 286, 412, 345, 413, 287, 372, 371,
	373, 198, 495, 0, 199, 0, 454, 496, 527, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 387, 411, 409, 415, 0, 471, 489, 500, 507,
	513, 514, 516, 517, 518, 519, 520, 522, 521, 375,
	289, 450, 306, 343, 0, 0, 393, 428, 227, 493,
	451, 698, 690, 644, 702, 646, 699, 700, 641, 642,
	645, 701, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	0, 693, 631, 630, 0, 637, 638, 0, 651, 652,
	654, 658, 659, 660, 663, 664, 665, 673, 675, 676,
	674, 677, 678, 679, 682, 683, 684, 685, 680, 681,
	686, 648, 647, 649, 650, 629, 191, 208, 339, 0,
	416, 271, 524, 502, 498, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	417, 422, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 478, 480, 492,
	506, 511, 436, 281, 487, 512, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 501, 457, 214, 424, 273,
	202, 233, 217, 242, 257, 260, 299, 360, 368, 397,
	402, 278, 254, 231, 421, 228, 440, 463, 464, 465,
	467, 364, 249, 401, 0, 365, 346, 469, 470, 291,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 628, 0, 0,
	0, 253, 633, 0, 0, 0, 337, 250, 0, 0,
	398, 0, 197, 0, 442, 237, 347, 344, 475, 265,
	256, 252, 236, 292, 354, 396, 462, 390, 640, 341,
	0, 0, 452, 369, 0, 0, 0, 0, 0, 635,
	636, 0, 0, 0, 0, 0, 0, 1872, 0, 298,
	234, 300, 196, 381, 453, 269, 0, 87, 0, 0,
	188, 189, 190, 708, 715, 716, 717, 718, 719, 709,
	711, 0, 0, 225, 710, 232, 655, 657, 656, 666,
	667, 668, 669, 670, 671, 672, 653, 713, 720, 721,
	1873, 248, 296, 255, 247, 472, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 611, 625, 0, 639, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 622, 623, 0, 0, 0, 0, 692,
	0, 624, 0, 0, 632, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 370,
	240, 0, 691, 0, 0, 508, 0, 0, 689, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	380, 423, 429, 0, 0, 0, 238, 0, 427, 394,
	491, 220, 267, 420, 400, 425, 407, 270, 0, 0,
	426, 342, 477, 414, 488, 509, 510, 246, 374, 499,
	466, 505, 523, 213, 243, 388, 459, 494, 449, 366,
	473, 474, 304, 448, 277, 195, 340, 515, 211, 435,
	229, 218, 479, 497, 272, 418, 203, 461, 486, 226,
	439, 0, 0, 525, 205, 484, 458, 362, 301, 302,
	204, 0, 419, 251, 275, 241, 383, 481, 482, 239,
	526, 215, 504, 207, 0, 503, 376, 476, 485, 363,
	352, 206, 483, 361, 351, 307, 661, 662, 263, 286,
	412, 345, 413, 287, 372, 371, 373, 198, 495, 0,
	199, 0, 454, 496, 527, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 387, 411, 409,
	415, 0, 471, 489, 500, 507, 513, 514, 516, 517,
	518, 519, 520, 522, 521, 375, 289, 450, 306, 343,
	0, 0, 393, 428, 227, 493, 451, 698, 690, 644,
	702, 646, 699, 700, 641, 642, 645, 701, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 0, 693, 631, 630,
	0, 637, 638, 0, 651, 652, 654, 658, 659, 660,
	663, 664, 665, 673, 675, 676, 674, 677, 678, 679,
	682, 683, 684, 685, 680, 681, 686, 648, 647, 649,
	650, 629, 191, 208, 339, 0, 416, 271, 524, 502,
	498, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 478, 480, 492, 506, 511, 436, 281,
	487, 512, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 501, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	0, 0, 346, 469, 470, 291, 365, 0, 0, 0,
	78, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 628, 0,
	0, 0, 253, 633, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 640,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 87, 0,
	0, 188, 189, 190, 708, 715, 716, 717, 718, 719,
	709, 711, 0, 0, 225, 710, 232, 655, 657, 656,
	666, 667, 668, 669, 670, 671, 672, 653, 713, 720,
	721, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 611, 625, 0, 639, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 622, 623, 0, 0, 0, 0,
	692, 0, 624, 0, 0, 632, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 691, 0, 0, 508, 0, 0, 689,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 661, 662, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 698, 690,
	644, 702, 646, 699, 700, 641, 642, 645, 701, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 693, 631,
	630, 0, 637, 638, 0, 651, 652, 654, 658, 659,
	660, 663, 664, 665, 673, 675, 676, 674, 677, 678,
	679, 682, 683, 684, 685, 680, 681, 686, 648, 647,
	649, 650, 629, 191, 208, 339, 86, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 628, 0, 0, 0, 253, 633,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 640, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 87, 0, 0, 188, 189, 190,
	708, 715, 716, 717, 718, 719, 709, 711, 0, 0,
	225, 710, 232, 655, 657, 656, 666, 667, 668, 669,
	670, 671, 672, 653, 713, 720, 721, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 611, 625,
	0, 639, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	622, 623, 0, 0, 0, 0, 692, 0, 624, 0,
	0, 632, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 691,
	0, 0, 508, 0, 0, 689, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 2981, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 661, 662, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 698, 690, 644, 702, 646, 699,
	700, 641, 642, 645, 701, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 693, 631, 630, 0, 637, 638,
	0, 651, 652, 654, 658, 659, 660, 663, 664, 665,
	673, 675, 676, 674, 677, 678, 679, 682, 683, 684,
	685, 680, 681, 686, 648, 647, 649, 650, 629, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	628, 0, 0, 0, 253, 633, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 640, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	87, 0, 1346, 188, 189, 190, 708, 715, 716, 717,
	718, 719, 709, 711, 0, 0, 225, 710, 232, 655,
	657, 656, 666, 667, 668, 669, 670, 671, 672, 653,
	713, 720, 721, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 611, 625, 0, 639, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 622, 623, 0, 0,
	0, 0, 692, 0, 624, 0, 0, 632, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 691, 0, 0, 508, 0,
	0, 689, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 661,
	662, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	698, 690, 644, 702, 646, 699, 700, 641, 642, 645,
	701, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	693, 631, 630, 0, 637, 638, 0, 651, 652, 654,
	658, 659, 660, 663, 664, 665, 673, 675, 676, 674,
	677, 678, 679, 682, 683, 684, 685, 680, 681, 686,
	648, 647, 649, 650, 629, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 628, 0, 0, 0,
	253, 633, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 640, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 87, 0, 0, 188,
	189, 190, 708, 715, 716, 717, 718, 719, 709, 711,
	0, 0, 225, 710, 232, 655, 657, 656, 666, 667,
	668, 669, 670, 671, 672, 653, 713, 720, 721, 0,
	248, 296, 255, 247, 472, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	611, 625, 0, 639, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 622, 623, 803, 0, 0, 0, 692, 0,
	624, 0, 0, 632, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 691, 0, 0, 508, 0, 0, 689, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 0, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 661, 662, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 493, 451, 698, 690, 644, 702,
	646, 699, 700, 641, 642, 645, 701, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 693, 631, 630, 0,
	637, 638, 0, 651, 652, 654, 658, 659, 660, 663,
	664, 665, 673, 675, 676, 674, 677, 678, 679, 682,
	683, 684, 685, 680, 681, 686, 648, 647, 649, 650,
	629, 191, 208, 339, 0, 416, 271, 524, 502, 498,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 628, 0, 0, 0, 253, 633, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 640, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 87, 0, 0, 188, 189, 190, 708, 715,
	716, 717, 718, 719, 709, 711, 0, 0, 225, 710,
	232, 655, 657, 656, 666, 667, 668, 669, 670, 671,
	672, 653, 713, 720, 721, 0, 248, 296, 255, 247,
	472, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 611, 625, 0, 639,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 622, 623,
	0, 0, 0, 0, 692, 0, 624, 0, 0, 632,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 691, 0, 0,
	508, 0, 0, 689, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 0,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 661, 662, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	493, 451, 698, 690, 644, 702, 646, 699, 700, 641,
	642, 645, 701, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 693, 631, 630, 0, 637, 638, 0, 651,
	652, 654, 658, 659, 660, 663, 664, 665, 673, 675,
	676, 674, 677, 678, 679, 682, 683, 684, 685, 680,
	681, 686, 648, 647, 649, 650, 629, 191, 208, 339,
	0, 416, 271, 524, 502, 498, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 628, 0,
	0, 0, 253, 633, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 640,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 87, 0,
	0, 188, 189, 190, 708, 715, 716, 717, 718, 719,
	709, 711, 0, 0, 225, 710, 232, 655, 657, 656,
	666, 667, 668, 669, 670, 671, 672, 653, 713, 720,
	721, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 625, 0, 639, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 622, 623, 0, 0, 0, 0,
	692, 0, 624, 0, 0, 632, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 691, 0, 0, 508, 0, 0, 689,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 661, 662, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 698, 690,
	644, 702, 646, 699, 700, 641, 642, 645, 701, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 693, 631,
	630, 0, 637, 638, 0, 651, 652, 654, 658, 659,
	660, 663, 664, 665, 673, 675, 676, 674, 677, 678,
	679, 682, 683, 684, 685, 680, 681, 686, 648, 647,
	649, 650, 629, 191, 208, 339, 0, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 715, 716, 0, 0, 0, 0, 1694, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 1022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 1021, 508, 0,
	0, 0, 0, 0, 1018, 1019, 336, 979, 305, 192,
	212, 1012, 1016, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 0, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 0, 346, 469, 470, 291, 365,
	0, 0, 0, 78, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 398, 0, 197, 0, 442, 237,
	347, 344, 475, 265, 256, 252, 236, 292, 354, 396,
	462, 390, 0, 341, 0, 0, 452, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 381, 453, 269,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 472,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 370, 240, 0, 0, 0, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 380, 423, 429, 0, 0, 0,
	238, 0, 427, 394, 491, 220, 267, 420, 400, 425,
	407, 270, 0, 0, 426, 342, 477, 414, 488, 509,
	510, 246, 374, 499, 466, 505, 523, 213, 243, 388,
	459, 494, 449, 366, 473, 474, 304, 448, 277, 195,
	340, 515, 211, 435, 229, 218, 479, 497, 272, 418,
	203, 461, 486, 226, 439, 0, 0, 525, 205, 484,
	458, 362, 301, 302, 204, 0, 419, 251, 275, 241,
	383, 481, 482, 239, 526, 215, 504, 207, 0, 503,
	376, 476, 485, 363, 352, 206, 483, 361, 351, 307,
	326, 327, 263, 286, 412, 345, 413, 287, 372, 371,
	373, 198, 495, 0, 199, 0, 454, 496, 527, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 387, 411, 409, 415, 0, 471, 489, 500, 507,
	513, 514, 516, 517, 518, 519, 520, 522, 521, 375,
	289, 450, 306, 343, 0, 0, 393, 428, 227, 493,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 353, 441, 490, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 359, 367, 0, 191, 208, 339, 86,
	416, 271, 524, 502, 498, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	417, 422, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 478, 480, 492,
	506, 511, 436, 281, 487, 512, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 501, 457, 214, 424, 273,
	202, 233, 217, 242, 257, 260, 299, 360, 368, 397,
	402, 278, 254, 231, 421, 228, 440, 463, 464, 465,
	467, 364, 249, 401, 0, 1365, 346, 469, 470, 291,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 1367, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	398, 0, 197, 0, 442, 237, 347, 344, 475, 265,
	256, 252, 236, 292, 354, 396, 462, 390, 0, 341,
	0, 0, 452, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 381, 453, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1369, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 472, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 1194, 0, 1195,
	1196, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 370,
	240, 0, 0, 0, 0, 508, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	380, 423, 429, 0, 0, 0, 238, 0, 427, 394,
	491, 220, 267, 420, 400, 425, 407, 270, 0, 0,
	426, 342, 477, 414, 488, 509, 510, 246, 374, 499,
	466, 505, 523, 213, 243, 388, 459, 494, 449, 366,
	473, 474, 304, 448, 277, 195, 340, 515, 211, 435,
	229, 218, 479, 497, 272, 418, 203, 461, 486, 226,
	439, 0, 0, 525, 205, 484, 458, 362, 301, 302,
	204, 0, 419, 251, 275, 241, 383, 481, 482, 239,
	526, 215, 504, 207, 0, 503, 376, 476, 485, 363,
	352, 206, 483, 361, 351, 307, 326, 327, 263, 286,
	412, 345, 413, 287, 372, 371, 373, 198, 495, 0,
	199, 0, 454, 496, 527, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 387, 411, 409,
	415, 0, 471, 489, 500, 507, 513, 514, 516, 517,
	518, 519, 520, 522, 521, 375, 289, 450, 306, 343,
	0, 0, 393, 428, 227, 493, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 353, 441, 490,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 359,
	367, 0, 191, 208, 339, 0, 416, 271, 524, 502,
	498, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 417, 422, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 478, 480, 492, 506, 511, 436, 281,
	487, 512, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 501, 457, 214, 424, 273, 202, 233, 217, 242,
	257, 260, 299, 360, 368, 397, 402, 278, 254, 231,
	421, 228, 440, 463, 464, 465, 467, 364, 249, 401,
	0, 365, 346, 469, 470, 291, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 398, 0, 197, 0,
	442, 237, 347, 344, 475, 265, 256, 252, 236, 292,
	354, 396, 462, 390, 0, 341, 0, 0, 452, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 381,
	453, 269, 0, 0, 0, 0, 188, 189, 190, 1308,
	1311, 0, 0, 0, 0, 1307, 1310, 0, 0, 225,
	1306, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 472, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 370, 240, 0, 0, 0,
	0, 508, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 380, 423, 429, 0,
	0, 0, 238, 0, 427, 394, 491, 220, 267, 420,
	400, 425, 407, 270, 0, 0, 426, 342, 477, 414,
	488, 509, 510, 246, 374, 499, 466, 505, 523, 213,
	243, 388, 459, 494, 449, 366, 473, 474, 304, 448,
	277, 195, 340, 515, 211, 435, 229, 218, 479, 497,
	272, 418, 203, 461, 486, 226, 439, 0, 0, 525,
	205, 484, 458, 362, 301, 302, 204, 0, 419, 251,
	275, 241, 383, 481, 482, 239, 526, 215, 504, 207,
	0, 503, 376, 476, 485, 363, 352, 206, 483, 361,
	351, 307, 326, 327, 263, 286, 412, 345, 413, 287,
	372, 371, 373, 198, 495, 0, 199, 0, 454, 496,
	527, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 387, 411, 409, 415, 0, 471, 489,
	500, 507, 513, 514, 516, 517, 518, 519, 520, 522,
	521, 375, 289, 450, 306, 343, 0, 0, 393, 428,
	227, 493, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 353, 441, 490, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 359, 367, 0, 191, 208,
	339, 0, 416, 271, 524, 502, 498, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 417, 422, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 478,
	480, 492, 506, 511, 436, 281, 487, 512, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 501, 457, 214,
	424, 273, 202, 233, 217, 242, 257, 260, 299, 360,
	368, 397, 402, 278, 254, 231, 421, 228, 440, 463,
	464, 465, 467, 364, 249, 401, 0, 0, 346, 469,
	470, 291, 365, 0, 0, 0, 78, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 87, 0, 1346, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 86, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 0, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 1811, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 1547, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 472, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 0, 1809, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 0, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 353, 441, 490, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	0, 191, 208, 339, 0, 416, 271, 524, 502, 498,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	472, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 336, 979,
	305, 192, 212, 977, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 0,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 353, 441, 490, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 0, 191, 208, 339,
	0, 416, 271, 524, 502, 498, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 1811, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 353, 441,
	490, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 0, 191, 208, 339, 0, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 1346, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 2909, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 1690, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 0, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 2158, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 472, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 0, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 353, 441, 490, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	0, 191, 208, 339, 0, 416, 271, 524, 502, 498,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 2143, 0, 0, 0, 2144, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	472, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 0,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 353, 441, 490, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 0, 191, 208, 339,
	0, 416, 271, 524, 502, 498, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 1390, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 353, 441,
	490, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 0, 191, 208, 339, 0, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 3002, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 1547, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 0, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 472, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 508, 0, 0, 0, 2909, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 0, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 353, 441, 490, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	0, 191, 208, 339, 0, 416, 271, 524, 502, 498,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	472, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 0,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 353, 441, 490, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 0, 191, 208, 339,
	0, 416, 271, 524, 502, 498, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 353, 441,
	490, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 0, 191, 208, 339, 0, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 0, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 472, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 0, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 353, 441, 490, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	0, 191, 208, 339, 1645, 416, 271, 524, 502, 498,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 1515,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	472, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 0,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 353, 441, 490, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 0, 191, 208, 339,
	0, 416, 271, 524, 502, 498, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 1513, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 353, 441,
	490, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 0, 191, 208, 339, 0, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 1511, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 1509, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 0, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 1507, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 472, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 0, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 353, 441, 490, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	0, 191, 208, 339, 0, 416, 271, 524, 502, 498,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 1503,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	472, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 0,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 353, 441, 490, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 0, 191, 208, 339,
	0, 416, 271, 524, 502, 498, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 1501, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 353, 441,
	490, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 0, 191, 208, 339, 0, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 1499, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	1474, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 0, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 1374,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 472, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 0, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 353, 441, 490, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	0, 191, 208, 339, 0, 416, 271, 524, 502, 498,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	472, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 0,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 353, 441, 490, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 0, 191, 208, 339,
	0, 416, 271, 524, 502, 498, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 353, 441,
	490, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 0, 191, 208, 339, 0, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 785, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 602, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 365, 346,
	469, 470, 291, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 398, 0, 197, 0, 442, 237, 347,
	344, 475, 265, 256, 252, 236, 292, 354, 396, 462,
	390, 0, 341, 0, 0, 452, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 381, 453, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 472, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 370, 240, 0, 0, 549, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 380, 423, 429, 0, 0, 0, 238,
	0, 427, 394, 491, 220, 267, 420, 400, 425, 407,
	270, 0, 0, 426, 342, 477, 414, 488, 509, 510,
	246, 374, 499, 466, 505, 523, 213, 243, 388, 459,
	494, 449, 366, 473, 474, 304, 448, 277, 195, 340,
	515, 211, 435, 229, 218, 479, 497, 272, 418, 203,
	461, 486, 226, 439, 0, 0, 525, 205, 484, 458,
	362, 301, 302, 204, 0, 419, 251, 275, 241, 383,
	481, 482, 239, 526, 215, 504, 207, 0, 503, 376,
	476, 485, 363, 352, 206, 483, 361, 351, 307, 326,
	327, 263, 286, 412, 345, 413, 287, 372, 371, 373,
	198, 495, 0, 199, 0, 454, 496, 527, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	387, 411, 409, 415, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 375, 289,
	450, 306, 343, 0, 0, 393, 428, 227, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	353, 441, 490, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 359, 367, 0, 191, 208, 339, 0, 416,
	271, 524, 502, 498, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 417,
	422, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 281, 487, 512, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 501, 457, 214, 424, 273, 202,
	233, 217, 242, 257, 260, 299, 360, 368, 397, 402,
	278, 254, 231, 421, 228, 440, 463, 464, 465, 467,
	364, 249, 401, 0, 365, 346, 469, 470, 291, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 398,
	0, 197, 0, 442, 237, 347, 344, 475, 265, 256,
	252, 236, 292, 354, 396, 462, 390, 0, 341, 0,
	0, 452, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 381, 453, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 472, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 370, 240,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 380,
	423, 429, 0, 0, 0, 238, 0, 427, 394, 491,
	220, 267, 420, 400, 425, 407, 270, 0, 0, 426,
	342, 477, 414, 488, 509, 510, 246, 374, 499, 466,
	505, 523, 213, 243, 388, 459, 494, 449, 366, 473,
	474, 304, 448, 277, 195, 340, 515, 211, 435, 229,
	218, 479, 497, 272, 418, 203, 461, 486, 226, 439,
	0, 0, 525, 205, 484, 458, 362, 301, 302, 204,
	0, 419, 251, 275, 241, 383, 481, 482, 239, 526,
	215, 504, 207, 0, 503, 376, 476, 485, 363, 352,
	206, 483, 361, 351, 307, 326, 327, 263, 286, 412,
	345, 413, 287, 372, 371, 373, 198, 495, 0, 199,
	0, 454, 496, 527, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 387, 411, 409, 415,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 375, 289, 450, 306, 343, 0,
	0, 393, 428, 227, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 353, 441, 490, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 359, 367,
	0, 191, 208, 339, 0, 416, 271, 524, 502, 498,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 3007, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 417, 422, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 281, 487,
	512, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	501, 457, 214, 424, 273, 202, 233, 217, 242, 257,
	260, 299, 360, 368, 397, 402, 278, 254, 231, 421,
	228, 440, 463, 464, 465, 467, 364, 249, 401, 0,
	365, 346, 469, 470, 291, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 398, 0, 197, 0, 442,
	237, 347, 344, 475, 265, 256, 252, 236, 292, 354,
	396, 462, 390, 0, 341, 0, 0, 452, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 381, 453,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	472, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 370, 240, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 380, 423, 429, 0, 0,
	0, 238, 0, 427, 394, 491, 220, 267, 420, 400,
	425, 407, 270, 0, 0, 426, 342, 477, 414, 488,
	509, 510, 246, 374, 499, 466, 505, 523, 213, 243,
	388, 459, 494, 449, 366, 473, 474, 304, 448, 277,
	195, 340, 515, 211, 435, 229, 218, 479, 497, 272,
	418, 203, 461, 486, 226, 439, 0, 0, 525, 205,
	484, 458, 362, 301, 302, 204, 0, 419, 251, 275,
	241, 383, 481, 482, 239, 526, 215, 504, 207, 0,
	503, 376, 476, 485, 363, 352, 206, 483, 361, 351,
	307, 326, 327, 263, 286, 412, 345, 413, 287, 372,
	371, 373, 198, 495, 0, 199, 0, 454, 496, 527,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 387, 411, 409, 415, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	375, 289, 450, 306, 343, 0, 0, 393, 428, 227,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 353, 441, 490, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 359, 367, 0, 191, 208, 339,
	0, 416, 271, 524, 502, 498, 0, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 417, 422, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 281, 487, 512, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 501, 457, 214, 424,
	273, 202, 233, 217, 242, 257, 260, 299, 360, 368,
	397, 402, 278, 254, 231, 421, 228, 440, 463, 464,
	465, 467, 364, 249, 401, 0, 365, 346, 469, 470,
	291, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 398, 0, 197, 0, 442, 237, 347, 344, 475,
	265, 256, 252, 236, 292, 354, 396, 462, 390, 0,
	341, 0, 0, 452, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 381, 453, 269, 0, 0, 0,
	0, 188, 2627, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 472, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	370, 240, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 380, 423, 429, 0, 0, 0, 238, 0, 427,
	394, 491, 220, 267, 420, 400, 425, 407, 270, 0,
	0, 426, 342, 477, 414, 488, 509, 510, 246, 374,
	499, 466, 505, 523, 213, 243, 388, 459, 494, 449,
	366, 473, 474, 304, 448, 277, 195, 340, 515, 211,
	435, 229, 218, 479, 497, 272, 418, 203, 461, 486,
	226, 439, 0, 0, 525, 205, 484, 458, 362, 301,
	302, 204, 0, 419, 251, 275, 241, 383, 481, 482,
	239, 526, 215, 504, 207, 0, 503, 376, 476, 485,
	363, 352, 206, 483, 361, 351, 307, 326, 327, 263,
	286, 412, 345, 413, 287, 372, 371, 373, 198, 495,
	0, 199, 0, 454, 496, 527, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 387, 411,
	409, 415, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 375, 289, 450, 306,
	343, 0, 0, 393, 428, 227, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 353, 441,
	490, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 235, 201,
	359, 367, 0, 191, 208, 339, 0, 416, 271, 524,
	502, 498, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 417, 422, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	281, 487, 512, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 501, 457, 214, 424, 273, 202, 233, 217,
	242, 257, 260, 299, 360, 368, 397, 402, 278, 254,
	231, 421, 228, 440, 463, 464, 465, 467, 364, 249,
	401, 0, 365, 346, 469, 470, 291, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 398, 0, 197,
	0, 442, 237, 347, 344, 475, 265, 256, 252, 236,
	292, 354, 396, 462, 390, 0, 341, 0, 0, 452,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	381, 453, 269, 0, 0, 0, 0, 188, 2139, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 472, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 370, 240, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 380, 423, 429,
	0, 0, 0, 238, 0, 427, 394, 491, 220, 267,
	420, 400, 425, 407, 270, 0, 0, 426, 342, 477,
	414, 488, 509, 510, 246, 374, 499, 466, 505, 523,
	213, 243, 388, 459, 494, 449, 366, 473, 474, 304,
	448, 277, 195, 340, 515, 211, 435, 229, 218, 479,
	497, 272, 418, 203, 461, 486, 226, 439, 0, 0,
	525, 205, 484, 458, 362, 301, 302, 204, 0, 419,
	251, 275, 241, 383, 481, 482, 239, 526, 215, 504,
	207, 0, 503, 376, 476, 485, 363, 352, 206, 483,
	361, 351, 307, 326, 327, 263, 286, 412, 345, 413,
	287, 372, 371, 373, 198, 495, 0, 199, 0, 454,
	496, 527, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 387, 411, 409, 415, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 375, 289, 450, 306, 343, 0, 0, 393,
	428, 227, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 353, 441, 490, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 359, 367, 0, 191,
	208, 339, 0, 416, 271, 524, 502, 498, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 417, 422, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 281, 487, 512, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 501, 457,
	214, 424, 273, 202, 233, 217, 242, 257, 260, 299,
	360, 368, 397, 402, 278, 254, 231, 421, 228, 440,
	463, 464, 465, 467, 364, 249, 401, 0, 0, 346,
	469, 470, 291,
}

var yyPact = [...]int{
	4644, -1000, -417, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1982, 2036, -1000, -1000,
	-1000, -1000, 2118, -1000, 754, 1742, -1000, 1998, 4583, -1000,
	41626, 482, -1000, 40414, 481, 116, 41626, -1000, 151, -1000,
	138, 41626, 143, 39808, -1000, -1000, -299, 17376, 1937, 33,
	30, 41626, -1000, -1000, -1000, -1000, 2095, 1746, -1000, 334,
	-1000, -1000, -1000, -1000, -1000, -1000, 39202, -1000, -1000, -1000,
	2019, 1997, 2125, 622, 1925, -1000, 2056, 1746, -1000, 17376,
	2088, 2037, 16770, -1000, 16770, 420, -1000, -1000, 12518, -1000,
	-1000, 23446, 41626, 29506, 335, -1000, 1998, -1000, -1000, -1000,
	100, -1000, 301, 1632, -1000, 1604, -1000, 492, 678, 322,
	437, 434, 321, 320, 319, 313, 310, 309, 306, 304,
	331, -1000, 674, 674, -150, -154, 3657, 426, 384, 384,
	445, 1972, 1960, -1000, 687, -1000, 674, 674, 674, 325,
	674, 674, 674, 674, 278, 276, 674, 674, 674, 674,
	674, 674, 674, 674, 674, 674, 674, 674, 674, 674,
	674, 674, 674, 300, 1998, 232, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 41626, 173, 41626,
	-1000, 541, 41626, 778, 778, 37, 778, 778, 778, 778,
	163, 605, 29, -1000, 162, 266, 145, 203, 812, 155,
	-1000, -1000, 215, 812, 1240, -1000, 628, 142, -1000, 778,
	778, -1000, 10074, 174, 10074, 10074, -1000, 1984, -1000, -1000,
	-1000, -1000, 1230, -1000, 440, -1000, -1000, -1000, -1000, 41626,
	38596, 343, 733, -1000, -1000, -1000, 54, -1000, -1000, 1378,
	965, 17376, 896, -1000, 1521, 589, -1000, -1000, -1000, -1000,
	-1000, 518, 17982, 17982, 17982, 17982, -1000, -1000, 1636, 1636,
	1636, 1636, 17982, 1636, 17982, 1636, 1636, 1636, 1636, 17376,
	1636, 1636, 1636, -1000, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 538, 1636,
	1636, 1636, 1636, 1636, -1000, -1000, -1000, -1000, 1636, 1636,
	1636, 1636, 1636, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21017, -1000, 14952, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 41626, -1000, 1636, 167, 41626,
	41626, 308, 2056, 1746, -1000, 2095, 2066, 334, -1000, 1913,
	1723, 1523, 1025, 1746, 1554, 41626, -1000, 1660, -1000, -1000,
	-1000, 1834, 1141, 1237, -1000, -1000, -1000, -1000, 1297, 17376,
	-1000, -1000, 2112, -1000, 20411, 536, 913, 2110, 37990, -1000,
	420, 420, 1589, 11907, -6, -1000, -1000, -1000, 731, 27082,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1984, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1646, 41626, -1000, -1000, 6017, 1186, -1000, 1733,
	-1000, 1639, -1000, 1692, 17376, 1691, 472, 1186, 464, 463,
	461, -1000, -71, -1000, -1000, -1000, -1000, -1000, -1000, 674,
	674, 674, -1000, 330, 2078, 4583, 5941, -1000, -1000, -1000,
	37384, 1732, 1186, -1000, 1727, -1000, 818, 510, 526, 526,
	1186, -1000, -1000, 41626, 1186, 810, 808, 1186, 1186, 41626,
	41626, -1000, 36778, -1000, 36172, 35566, 1070, 41626, 34960, 34354,
	33748, 33142, 32536, -1000, 1832, -1000, 1807, -1000, -1000, -1000,
	41626, 1186, 1186, 41626, 41626, 315, -1000, -1000, 41626, 1186,
	-1000, -1000, 1069, 1066, 1060, 674, 674, 1056, 1235, 1233,
	1228, 674, 674, 1054, 1226, 28294, 1224, 241, 1040, 1039,
	1037, 1100, 1220, 191, 1219, 1095, 1055, 1032, 41626, 1724,
	41626, -1000, 202, 668, 422, 711, 1998, 1927, 1587, 432,
	469, 1186, 408, 408, 41626, -1000, 10685, -1000, -1000, 1216,
	17376, -1000, 814, 812, 812, -1000, -1000, -1000, -1000, -1000,
	-1000, 778, 41626, 814, -1000, -1000, -1000, 812, 778, 41626,
	778, 778, 778, 778, 812, 812, 812, 778, 41626, 41626,
	41626, 41626, 41626, 41626, 41626, 41626, 41626, 10074, 628, 778,
	-304, -1000, 1212, -1000, 1795, -1000, -1000, -1000, -1000, -1000,
	-1000, 10074, 10074, -1000, -1000, -1000, -1000, 141, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -53, 1570, 31930,
	-1000, -306, -309, -316, -322, -1000, -1000, -1000, -324, -331,
	-1000, -1000, -1000, 17376, 17376, 17376, 17376, -179, -1000, 940,
	17982, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 998, 773,
	17982, 17982, 17982, 17982, 17982, 17982, 17982, 17982, 17982, 17982,
	17982, 17982, 17982, 17982, 17982, 25264, 6936, 6936, 589, 589,
	589, 589, -1000, 16770, 17376, 17376, 589, -1000, 1186, 31324,
	16770, 16770, 17376, 1968, 745, 965, 41626, -1000, 1025, -1000,
	-1000, -1000, 1000, -1000, 1968, 768, 17376, 17376, 41626, 41626,
	185, 17376, 17376, 17376, 17376, 17376, 17376, 13735, 17376, 17376,
	17376, 17376, 17376, 17376, 17376, 17376, 17376, 17376, 17376, 17376,
	17376, 17376, 17376, 17376, 17376, 17376, 17376, 17376, 17376, 17376,
	17376, 17376, 17376, 17376, 13129, 10685, 16770, 16770, 16770, 16770,
	16770, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 533, 1507, 1389, 1503, -1000, 1557, -1000,
	-143, 22840, 17376, 1210, 2109, 1765, 41626, -1000, -1000, -1000,
	2056, -1000, 2056, 1507, 1878, 1869, 16770, -1000, -1000, 1878,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1326, -1000,
	41626, 1554, 2034, 41626, 1864, 1209, 314, -1000, 17376, 17376,
	1541, -1000, 1125, 41626, -1000, -179, -1000, 30718, -1000, -1000,
	9463, -1000, 41626, 302, 41626, -1000, 22234, 30112, 11296, -6,
	-1000, 11296, 1496, -1000, -4, -1, 14341, 555, -1000, -1000,
	-1000, 3657, 19194, 1339, 555, 75, -1000, -1000, -1000, 1692,
	-1000, 1692, 1692, 1692, 1692, 314, 314, 314, 314, -1000,
	-1000, -1000, -1000, -1000, 1720, 1715, -1000, 1692, 1692, 1692,
	1692, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1707, 1707,
	1707, 1693, 1693, 399, -1000, 17376, 280, 29506, 2017, 1030,
	1304, 202, 409, 1760, 1186, 1186, 1186, 409, -1000, 1313,
	1298, 1267, -1000, -400, 1520, -1000, -1000, 2074, -1000, -1000,
	710, 832, 831, 644, 41626, 171, 291, -1000, 393, -1000,
	29506, 1186, 801, 526, 1186, -1000, 1186, -1000, -1000, -1000,
	-1000, -1000, 1186, -1000, -1000, 1518, -1000, 1488, 899, 830,
	861, 789, 1518, -1000, -1000, -119, 1518, -1000, 1518, -1000,
	1518, -1000, 1518, -1000, 1518, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 702, 177, -219, 41626, 171, 25264,
	-1000, 428, -1000, -1000, -1000, 25264, 25264, -1000, -1000, -1000,
	-1000, 1207, 1205, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -386, 41626, -1000, 193, 691, 277, 305, 248,
	41626, 175, 2046, 2045, 2044, 179, 273, 41626, 41626, 408,
	1816, 41626, 2024, 41626, -1000, -1000, -1000, -1000, -1000, 965,
	41626, -1000, -1000, 778, 778, -1000, -1000, 41626, 778, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 778, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 41626, -1000, -1000, -1000, -1000, 41626, -1000,
	-1000, -1000, -1000, -1000, 74, 3, 358, -1000, -1000, -1000,
	-1000, -1000, 2053, -1000, 965, 800, 755, -1000, 1636, -1000,
	-1000, 956, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 998,
	17982, 17982, 17982, 1402, 425, 1538, 902, 841, 828, 828,
	796, 796, 598, 598, 598, 598, 598, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1203, -1000, 1543, -1000, 973,
	1258, 1025, -1000, 1543, 1543, 1086, 16770, -1000, -1000, 760,
	-1000, 17376, 1025, -1000, -1000, 1025, 1025, 17376, 1025, 17376,
	-1000, 1304, 1304, 1515, 1513, 2106, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 943, 1304, 1304,
	1304, 1304, 1304, 17376, 1018, -1000, -1000, -1000, 1852, 1791,
	1025, 1378, 1025, 1510, -1000, 1782, 1304, 1767, 1758, 1749,
	1227, 1743, 1734, 1728, 1304, 1304, 1304, 1168, 1712, 1705,
	1688, 1669, 1664, 1658, 1649, 1644, 1638, 1304, 1025, 16770,
	16770, 1500, 1636, 530, -1000, 1543, 1025, 1025, 1543, 1543,
	10685, 1025, -1000, 41626, -1000, -293, -1000, -22, 612, 1636,
	-1000, 28294, 1025, -1000, 6651, -1000, 42838, -1000, -1000, -1000,
	-1000, -1000, 26476, 1418, 1878, -1000, -1000, 1636, 1627, -1000,
	-1000, 314, 55, 25870, 549, 549, 83, 965, 965, 17376,
	-1000, -1000, -1000, -1000, -1000, -1000, 529, 2096, 327, 1636,
	-1000, 1470, 1969, -1000, -1000, -1000, 2032, 19805, -1000, 1636,
	1636, 41626, 1391, 1376, -1000, 521, -1000, 1496, -6, -7,
	-1000, -1000, -1000, -1000, 965, -1000, 1253, 303, 3249, -1000,
	378, -1000, -1000, -1000, -1000, 1943, 60, -1000, -1000, -1000,
	187, 314, -1000, -1000, -1000, -1000, -1000, -1000, 1179, 1179,
	-1000, -1000, -1000, -1000, -1000, 1029, -1000, -1000, -1000, 1027,
	-1000, -1000, 1582, 1802, 280, -1000, -1000, 674, 1174, -1000,
	-1000, 1950, 674, 674, 41626, -1000, -1000, 1288, 2017, 193,
	41626, 779, 1804, -1000, 1760, 1760, 1760, 41626, -1000, -1000,
	-1000, -1000, -1000, -1000, -393, 70, 329, -1000, -1000, -1000,
	3549, 41626, 1625, -1000, 165, -1000, 1282, -1000, 41626, -1000,
	1584, 1704, 1186, 1186, -1000, -1000, -1000, 41626, 1636, -1000,
	-1000, -1000, -1000, 466, 1995, 275, -1000, -1000, -199, -1000,
	-1000, 171, 165, 555, 1186, -1000, -1000, -1000, -1000, -1000,
	-389, 1577, 457, 178, 290, 41626, 41626, 41626, 41626, 41626,
	504, -1000, -1000, -1000, -1000, 158, -1000, -1000, 158, -1000,
	-1000, -1000, -1000, 236, 427, -1000, 41626, 41626, 552, -1000,
	-1000, -1000, 812, -1000, -1000, 812, -1000, -1000, -1000, -1000,
	-1000, 1980, 41626, 2, -349, -1000, -346, 17376, -1000, -1000,
	-1000, -1000, 1048, 410, 1538, 17982, 17982, 16770, -109, 579,
	579, 25264, -1000, -1000, -1000, 17376, 17376, 1354, 688, -1000,
	17376, 881, -1000, -1000, -1000, 1304, -1000, 1304, -1000, -1000,
	17376, 17376, 17376, 1025, 261, -1000, -1000, -1000, -1000, -1000,
	2103, -1000, 17376, 17376, 17376, -1000, -1000, 17376, 17376, -1000,
	17376, 17376, 18588, 1025, 18588, 17376, 17376, 18588, -1000, -1000,
	-1000, -1000, 18588, 17376, 17376, 17376, 17376, 17376, 17376, 17376,
	17376, 17376, -1000, -1000, 1543, 1543, 16770, 10685, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 612, -1000,
	526, 526, 526, 41626, -1000, -1000, -1000, -1000, -1000, -1000,
	1490, 2052, -1000, 1889, 1883, 2098, 2096, -1000, 22234, 1878,
	-1000, -1000, 41626, -283, -1000, 1919, 1946, 549, 549, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8852, 2056, 17376, 1800,
	41626, 1636, -1000, 21628, 41626, 41626, 22234, 22234, 22234, 22234,
	22234, -1000, 1853, 1849, -1000, 1851, 1827, 1866, 41626, -1000,
	1539, 1025, 2066, 19805, 334, 17376, 24052, 1372, 22234, -1000,
	-1000, 22234, 41626, 8241, -1000, -1000, -3, -18, -1000, -1000,
	-1000, -1000, 3657, -1000, -1000, 423, 2030, 1941, -1000, -1000,
	-1000, -1000, -1000, 1537, -1000, 1534, 1468, 1532, 177, -1000,
	1674, 1977, 674, 674, -1000, 1020, -1000, 1186, 1172, 1161,
	-1000, -1000, -1000, 451, -1000, 2023, 41626, 1792, 1789, 1783,
	-1000, -398, 1013, 1703, 1668, 17376, 1698, 2072, 1399, 41626,
	-1000, -1000, 41626, -1000, 176, -1000, 280, 41626, -1000, -1000,
	-1000, 291, 41626, -1000, 7088, -1000, -1000, -1000, 165, -1000,
	-1000, -1000, -1000, -1000, -1000, 41626, 250, -1000, 1695, 1003,
	-1000, -1000, 1714, -1000, -1000, -1000, -1000, 181, 268, 156,
	1156, 156, -1000, 41626, 505, 1802, 41626, -1000, -1000, -1000,
	778, 778, -1000, -1000, 1970, -1000, 1186, 1304, 17982, 17982,
	-1000, 589, -1000, 1636, 1025, 1692, 1692, -1000, 1692, 1693,
	-1000, 1692, 130, 1692, 125, 1692, -1000, -1000, 1025, 1025,
	1132, 1106, -78, -1000, 965, 17376, -1000, -1000, 1572, 1511,
	1304, -1000, 1687, 1681, 17376, 1304, 1304, 1304, -1000, 965,
	1227, 1446, 1364, -1000, -1000, -1000, -1000, 1460, 1304, 1382,
	-281, 1025, 1529, 1529, 1529, 1529, 1529, 1503, 1503, 1503,
	1503, -1000, -1000, 1025, -1000, -1000, 2049, 2049, 2049, 1456,
	42232, 41626, -1000, -1000, -1000, -1000, 2096, 2094, 1435, -1000,
	-1000, 55, 380, -1000, 1907, 1946, -1000, 2070, 1912, 2069,
	-1000, -1000, -1000, -1000, -1000, 965, -1000, 2010, 1663, -1000,
	685, 1347, -1000, -1000, 16164, 1485, 1876, 513, 1456, 1545,
	1969, 1763, 1779, 1955, -1000, -1000, -1000, -1000, 1847, -1000,
	1833, -1000, -1000, 1660, -1000, -1000, 1389, 1025, 1328, 302,
	22234, 1492, 1492, -1000, 500, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 864, 6595, 2124, -1000, 1154, -1000, 1108, 199,
	1001, -1000, -1000, 674, 674, -1000, 793, 784, -1000, 41626,
	1678, -1000, 314, 1153, 314, 999, -1000, 983, -1000, -1000,
	-1000, -1000, 1686, 1829, -1000, -1000, -1000, -1000, 41626, -1000,
	-1000, 41626, 41626, 41626, 1677, 2068, -1000, 17376, 1675, 681,
	1415, 41626, 41626, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 402, 674, -359, 271, 254, 674,
	674, 674, -399, -1000, -1000, 1447, 1444, -1000, -148, -1000,
	17376, -1000, -1000, -1000, 1023, 1023, -1000, 1660, -1000, -1000,
	-1000, 1279, -1000, -1000, -124, 41626, 41626, 41626, 41626, -1000,
	988, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 589, 17982, -1000, -1000, 314, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 17376, -1000, 17376,
	-1000, 2056, 1150, 965, 17376, 17376, -1000, 980, 942, 1304,
	-1000, -1000, -1000, 1025, 18588, -1000, 18588, -1000, 17376, 209,
	579, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1636, 1939, 1636, 1636, 24052, -1000, -1000, 2094,
	2092, 2064, 1895, 1908, 1908, 1907, -1000, 2063, 2062, -1000,
	1143, 2061, 1142, 774, -1000, 41626, 17376, 1636, -1000, 333,
	41626, 1636, 41626, -1000, 2067, -1000, -1000, 17376, 1672, -1000,
	17376, -1000, -1000, -1000, -1000, -1000, -1000, 6936, 2096, 1492,
	-1000, -1000, 610, -1000, 17376, -1000, -1000, -1000, 5623, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1137, 1128, -1000,
	-1000, 1662, 17376, -1000, -1000, -1000, 1264, 1261, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1660, -1000, -1000, -1000,
	-1000, 291, -397, 1370, 41626, 932, -1000, 1396, 1399, 284,
	1636, 1112, 674, 674, 674, 929, 923, 28294, 1385, -1000,
	41626, 348, -1000, 291, -1000, -157, -158, 1304, -1000, -1000,
	2028, -1000, -1000, 10685, -1000, -1000, 1643, 1756, -1000, -1000,
	-1000, 208, -1000, 1304, 1304, 1025, -1000, 1304, 1304, 1246,
	1130, -1000, -1000, 1364, -1000, 1050, -1000, 209, 1025, 1777,
	-1000, -1000, 6936, -1000, 24658, -1000, 2060, 2059, 28900, 28900,
	612, 2092, -1000, 17376, 17376, 1893, 958, -1000, -1000, -1000,
	-1000, 1111, 1110, -1000, 1109, -1000, 2123, -1000, 965, -1000,
	1636, -1000, 498, 1347, -1000, 2056, 965, 41626, 965, 56,
	2067, -1000, 1304, -1000, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	-1000, -1000, 41626, 1262, -1000, -1000, 2026, 1358, 69, -1000,
	1351, -1000, -1000, 478, -1000, 17376, -1000, 28294, 1090, 1076,
	-1000, -1000, -1000, -1000, -399, -1000, -1000, -1000, -1000, -1000,
	-1000, 334, 1387, -1000, 651, 41626, 41626, 1025, 285, -131,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17376,
	-1000, 1025, 1776, -1000, -246, -1000, 1343, -1000, -1000, -1000,
	-1000, -1000, 1343, 1343, -1000, -1000, 965, 1378, -1000, 897,
	-1000, -1000, -1000, -1000, -1000, 41626, 1347, 41626, -1000, 1338,
	1025, 1636, 2056, -1000, 1336, -1000, 334, -1000, 1583, 1668,
	-1000, -1000, -1000, 15558, -1000, -1000, -1000, -1000, -1000, 172,
	-122, 10685, 7630, 1321, -1000, -1000, 1862, -117, -138, 1227,
	-1000, -334, -1000, -1000, 27688, -1000, -1000, -1000, -1000, -1000,
	1254, -1000, -1000, 24052, 41020, -1000, -107, 206, -122, 17376,
	1299, 1025, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-5, -1000, -1000, -1000, -1000, -1000, 1714, -1000, 1861, -1000,
	1025, -1000, -1000, -1000, 1293, -1000, 2973, -232, 1773, -1000,
	-59, -1000, -1000, -1000, 851, 1074, -1000, -1000, -1000, -1000,
	-1000, -1000, 1223, 41626, -1000, 395, -1000, -1000, -124, -125,
	-1000, -1000, 41020, -223, 555, 6936, -1000, 1771, 1770, 2102,
	-1000, -1000, -1000, -1000, -1000, -1000, -414, 1260, 182, -1000,
	-132, -1000, -1000, 2020, 56, -1000, 2104, -1000, 2120, 567,
	567, -1000, 920, -414, -1000, -142, -234, -1000, -1000, -1000,
	-1000, -1000, 377, 981, -1000, -1000, -1000, -1000, 6936, -1000,
	-1000, -1000, 207, 207, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2448, 2447, 30, 4, 37, 36, 2446, 26, 100,
	192, 25, 197, 111, 2445, 2444, 2443, 2442, 2441, 2440,
	2439, 229, 228, 221, 2438, 2437, 2436, 2435, 2434, 2433,
	2432, 2429, 2427, 2425, 225, 172, 189, 2423, 2422, 2420,
	126, 185, 95, 98, 187, 2417, 2415, 88, 2414, 2412,
	2411, 184, 182, 181, 743, 2410, 176, 123, 46, 2409,
	2408, 2407, 2406, 2404, 2403, 2402, 2401, 2400, 2399, 2398,
	2397, 2396, 2390, 2389, 2388, 2387, 208, 2386, 2385, 18,
	2384, 90, 2382, 2381, 2380, 2379, 142, 2378, 2377, 2376,
	39, 2375, 2374, 2373, 2372, 2371, 2370, 2369, 153, 2367,
	2366, 2364, 173, 190, 2361, 2359, 179, 118, 138, 2358,
	2357, 131, 195, 2355, 140, 2354, 2353, 2352, 163, 2350,
	4568, 2349, 76, 73, 2345, 69, 85, 71, 74, 5,
	10, 2343, 2341, 75, 94, 2340, 115, 77, 2338, 121,
	110, 2337, 2336, 12, 8, 2335, 2, 7, 3, 80,
	2334, 2333, 122, 2332, 2331, 2325, 102, 2324, 2323, 3638,
	2322, 97, 146, 116, 84, 2321, 42, 66, 2319, 2318,
	2316, 2315, 2314, 53, 2311, 2309, 2306, 152, 60, 178,
	40, 65, 52, 144, 2305, 63, 89, 2302, 151, 150,
	2299, 67, 32, 43, 2297, 48, 147, 129, 38, 103,
	155, 2293, 2287, 61, 83, 2284, 2283, 2280, 2278, 2277,
	2275, 81, 2265, 58, 2264, 200, 2263, 14, 2262, 50,
	41, 2259, 79, 135, 78, 31, 2258, 167, 2257, 55,
	171, 143, 168, 2256, 2255, 2254, 2253, 188, 302, 2252,
	2251, 119, 174, 154, 160, 101, 2250, 304, 2249, 2248,
	99, 1542, 2230, 28, 170, 2246, 2236, 4008, 148, 45,
	19, 2233, 201, 2232, 2231, 2229, 194, 177, 130, 983,
	68, 2228, 2225, 15, 2223, 2222, 2219, 2218, 2217, 2215,
	92, 35, 34, 33, 196, 82, 17, 108, 169, 86,
	2214, 2212, 2211, 134, 105, 2210, 166, 165, 133, 139,
	2209, 175, 162, 158, 2208, 693, 29, 2201, 2198, 2196,
	2193, 107, 2192, 2191, 2190, 2188, 164, 156, 132, 93,
	2187, 96, 127, 157, 159, 49, 2185, 47, 2184, 2183,
	23, 186, 24, 2176, 13, 70, 59, 22, 117, 136,
	2165, 0, 2164, 16, 183, 337, 161, 2163, 2160, 6,
	9, 11, 2159, 2157, 2155, 2152, 149, 2151, 2150, 2148,
	2147, 21, 44, 20, 1, 120, 91, 2145, 2144, 2141,
	4758, 2162, 145, 2138, 202,
}

//line sql.y:7154
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 368, 369, 369, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 341, 341,
	341, 344, 344, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	372, 372, 154, 154, 152, 152, 153, 153, 222, 222,
	24, 25, 25, 232, 232, 231, 231, 231, 233, 233,
	233, 233, 269, 269, 26, 26, 26, 26, 26, 104,
	104, 343, 343, 342, 334, 334, 333, 333, 332, 340,
	340, 339, 339, 338, 38, 39, 48, 48, 48, 48,
	49, 50, 345, 345, 307, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 309, 309, 295, 295, 308, 308, 308, 308, 308,
	308, 308, 294, 294, 115, 115, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 360, 360, 360, 359, 359, 202, 202,
	202, 202, 202, 202, 202, 202, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 361, 361, 361, 361, 273, 273, 273,
	273, 276, 276, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 275, 275, 275, 275, 275, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 279, 279,
	279, 279, 279, 279, 279, 279, 293, 293, 280, 280,
	288, 288, 289, 289, 289, 290, 290, 290, 291, 291,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 287,
	287, 286, 286, 286, 296, 321, 321, 320, 320, 318,
	318, 318, 318, 318, 318, 318, 318, 305, 305, 315,
	315, 315, 315, 315, 304, 304, 300, 300, 300, 301,
	301, 302, 302, 299, 299, 303, 303, 317, 317, 316,
	316, 297, 297, 298, 298, 323, 362, 362, 362, 362,
	362, 363, 363, 324, 352, 354, 354, 354, 353, 353,
	350, 351, 349, 349, 349, 349, 349, 81, 81, 81,
	245, 245, 246, 246, 313, 313, 312, 312, 312, 314,
	314, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 240, 240, 240, 348, 348, 348, 348, 348,
	348, 347, 347, 347, 310, 310, 310, 346, 346, 57,
	57, 186, 186, 365, 365, 366, 366, 366, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 326, 326, 58, 58, 3, 3, 142, 144,
	145, 145, 143, 143, 143, 143, 143, 143, 60, 60,
	59, 59, 147, 146, 148, 148, 148, 1, 1, 2,
	2, 4, 4, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 292, 292, 292, 325, 325,
	327, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 91, 91, 90, 93, 93, 93, 93, 93,
	93, 93, 93, 329, 329, 329, 61, 61, 330, 281,
	282, 283, 5, 6, 306, 328, 100, 100, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 239,
	239, 248, 248, 238, 238, 262, 262, 262, 241, 241,
	241, 242, 242, 358, 358, 358, 235, 235, 64, 64,
	64, 66, 66, 67, 68, 68, 264, 264, 265, 265,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 355, 355, 356, 357, 357, 357, 357,
	73, 75, 31, 31, 31, 31, 31, 31, 110, 110,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 99, 99, 373, 76, 77,
	77, 103, 103, 103, 96, 96, 96, 102, 102, 102,
	16, 16, 17, 221, 221, 18, 18, 107, 107, 109,
	109, 109, 109, 109, 111, 111, 111, 111, 111, 111,
	111, 367, 106, 106, 108, 108, 108, 108, 255, 255,
	255, 254, 254, 136, 136, 138, 137, 137, 139, 139,
	140, 140, 140, 140, 184, 184, 162, 162, 219, 219,
	217, 217, 218, 218, 220, 220, 220, 220, 223, 223,
	141, 141, 141, 141, 149, 149, 150, 150, 151, 151,
	263, 263, 260, 260, 260, 259, 259, 155, 155, 155,
	157, 156, 156, 156, 156, 158, 158, 160, 160, 159,
	159, 161, 166, 166, 165, 165, 163, 163, 163, 163,
	164, 164, 164, 164, 167, 167, 120, 120, 120, 120,
	120, 120, 120, 131, 131, 131, 131, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 83, 83, 83, 236, 236, 168,
	168, 176, 176, 176, 176, 169, 169, 169, 169, 169,
	169, 169, 177, 177, 177, 183, 178, 178, 174, 174,
	174, 174, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 271, 271, 337, 337, 336,
	336, 335, 335, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 374, 374, 284, 284, 284, 284,
	175, 175, 175, 175, 175, 101, 101, 101, 101, 101,
	268, 268, 268, 272, 272, 272, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 189, 189, 97, 97, 187, 187, 188, 190, 190,
	185, 185, 185, 171, 171, 171, 191, 191, 192, 192,
	193, 193, 195, 194, 194, 196, 197, 197, 197, 198,
	198, 199, 199, 199, 47, 47, 47, 47, 47, 42,
	42, 42, 42, 43, 43, 43, 43, 112, 112, 112,
	112, 114, 114, 113, 113, 79, 79, 80, 80, 80,
	118, 118, 119, 119, 119, 116, 116, 117, 117, 215,
	215, 200, 200, 200, 207, 207, 207, 203, 203, 205,
	205, 205, 206, 206, 206, 204, 212, 212, 214, 214,
	213, 213, 209, 209, 210, 210, 211, 211, 211, 208,
	208, 170, 170, 170, 170, 170, 216, 216, 216, 216,
	224, 224, 180, 180, 182, 182, 181, 135, 225, 225,
	229, 226, 226, 230, 230, 230, 230, 230, 227, 227,
	228, 228, 256, 256, 256, 234, 234, 247, 247, 243,
	243, 244, 244, 237, 237, 249, 249, 249, 74, 179,
	179, 322, 322, 319, 252, 252, 253, 253, 257, 257,
	261, 261, 258, 258, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 370, 371, 266,
	267, 267, 267,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 5, 4, 5,
	4, 4, 8, 8, 6, 5, 4, 4, 4, 4,
	4, 7, 4, 6, 6, 6, 4, 4, 4, 7,
	8, 6, 5, 6, 8, 11, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 0, 2, 0, 2, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -368, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 220, -49, -39, 221,
	-50, 223, 222, 259, 224, 252, 74, 305, 306, 308,
	309, 310, 311, -85, 257, 258, 226, 36, 45, 33,
	34, 37, 230, 265, 266, 229, -10, -34, 8, -370,
	11, 436, 254, 253, 28, -12, 474, 86, -369, 615,
	-215, -200, 22, 33, 29, -199, -195, -103, -200, 20,
	18, 7, -76, -373, -76, -76, 12, 13, -76, -307,
	-309, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -331, -44, -41, 225, 222, 269,
	120, 121, 259, 260, 261, 224, 243, 258, 262, 257,
	278, -40, 81, 33, 474, 477, -314, 221, 227, 228,
	437, 123, 122, 75, 223, -311, 359, 507, 585, -56,
	587, 102, 104, 586, 44, 233, 588, 589, 590, 514,
	591, 242, 592, 593, 594, 595, 601, 556, 602, 603,
	604, 124, 7, -76, -261, -257, -341, -251, 89, 90,
	91, 471, 245, 505, 506, 294, 81, 41, 356, 359,
	507, 467, 585, 305, 319, 313, 340, 332, 472, 508,
	481, 297, 246, 282, 582, 330, 132, 587, 300, 509,
	260, 364, 365, 510, 366, 102, 308, 403, 600, 299,
	511, 598, 104, 586, 79, 466, 51, 44, 255, 328,
	229, 324, 588, 283, 512, 483, 276, 123, 120, 607,
	36, 322, 50, 30, 597, 122, 49, 589, 147, 513,
	590, 514, 368, 347, 576, 48, 369, 261, 515, 84,
	266, 476, 303, 584, 370, 323, 371, 293, 596, 226,
	516, 568, 372, 373, 577, 517, 348, 352, 518, 395,
	374, 614, 52, 519, 520, 578, 121, 521, 78, 591,
	80, 317, 318, 522, 291, 244, 397, 344, 449, 456,
	457, 108, 109, 452, 110, 458, 111, 459, 460, 461,
	450, 112, 105, 451, 462, 463, 345, 346, 113, 464,
	107, 106, 453, 455, 114, 465, 242, 35, 375, 473,
	295, 58, 270, 398, 46, 350, 611, 45, 572, 523,
	575, 343, 339, 446, 53, 524, 525, 526, 527, 468,
	592, 342, 316, 338, 606, 4, 288, 469, 593, 62,
	228, 354, 353, 355, 277, 394, 335, 528, 529, 530,
	249, 82, 531, 325, 21, 532, 533, 376, 284, 534,
	56, 535, 536, 401, 258, 537, 54, 594, 39, 538,
	263, 608, 595, 539, 540, 541, 542, 265, 543, 378,
	544, 377, 349, 351, 272, 379, 475, 545, 304, 321,
	262, 599, 546, 250, 583, 264, 269, 257, 402, 251,
	547, 548, 549, 550, 551, 298, 567, 552, 553, 309,
	601, 447, 43, 554, 555, 556, 557, 558, 292, 287,
	396, 405, 61, 83, 361, 559, 560, 581, 315, 285,
	561, 306, 55, 602, 603, 604, 279, 605, 9, 612,
	613, 381, 124, 289, 290, 47, 336, 271, 562, 301,
	563, 326, 327, 341, 314, 337, 307, 569, 273, 382,
	448, 259, 564, 404, 286, 357, 362, 302, 479, 278,
	383, 580, 478, 334, 331, 280, 565, 384, 234, 274,
	275, 566, 570, 385, 386, 296, 387, 388, 389, 390,
	391, 393, 392, 281, 477, 312, 329, 363, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 445, 232, -76, 232,
	-159, -257, 232, -227, 365, -248, 367, 380, 375, 385,
	373, -239, 376, 378, 272, -358, 395, 232, 382, 220,
	368, 377, 386, 387, 296, 393, 388, 392, 281, 389,
	390, 391, -341, 173, 590, 605, 132, 333, 372, 370,
	396, 572, -257, 307, -264, 312, -252, -341, -251, 310,
	-159, -82, 568, 224, -266, -266, -105, 572, 574, -178,
	-120, 140, -131, -134, -125, -126, -172, -173, -174, -175,
	-132, -185, 162, 163, 170, 141, -183, -135, 26, 470,
	438, 437, 173, 31, 216, 68, 69, 440, 441, 143,
	57, 413, 414, -133, 408, 415, 410, 467, 466, 468,
	469, 443, 444, 115, 445, 105, 107, 106, 446, 447,
	448, 345, 346, 449, 450, 451, 108, 109, 110, 111,
	112, 113, 114, 452, 455, 453, 454, 456, 457, 458,
	463, 464, 459, 460, 461, 462, 465, -252, -257, 237,
	407, 231, 168, 436, -127, -123, -8, -181, 406, 411,
	412, 416, 409, -341, -251, -129, -128, -168, 92, 98,
	103, 99, -364, 116, -370, 93, 94, 95, 96, 97,
	117, 118, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 44, 381, 381, -159, -76, -76,
	-76, -76, -193, -103, -195, -10, -8, -370, 8, -76,
	-8, -9, -13, -34, -36, 501, -35, -257, -200, -215,
	12, 158, 42, 50, -198, -199, -12, -8, -120, 19,
	23, 24, -108, 164, -120, -257, -77, -108, -237, 236,
	-76, -76, -226, -269, 307, -230, 396, 395, -253, -228,
	-252, -250, -227, 394, 225, 23, 480, 139, 25, 27,
	142, 173, 127, 19, 143, 37, 227, 333, 243, 172,
	239, 437, 220, 72, 482, 408, 410, 406, 413, 439,
	440, 407, 367, 31, 13, 484, 28, 253, 24, 38,
	166, 222, 146, 485, 256, 26, 254, 115, 118, 487,
	22, 75, 248, 14, 241, 40, 16, 488, 489, 17,
	237, 236, 158, 233, 70, 11, 216, 29, 155, 66,
	490, 134, 491, 492, 493, 494, 128, 68, 156, 20,
	609, 411, 412, 33, 573, 470, 267, 168, 73, 59,
	574, 140, 409, 495, 496, 116, 497, 119, 76, 579,
	136, 18, 71, 42, 498, 268, 499, 238, 610, 500,
	399, 501, 157, 223, 436, 69, 502, 231, 380, 8,
	442, 32, 252, 240, 126, 67, 503, 232, 145, 443,
	444, 235, 129, 117, 7, 133, 34, 12, 74, 77,
	414, 415, 416, 57, 125, 474, 144, 15, 504, 400,
	138, 132, -308, 156, -294, -298, -252, 247, -324, 243,
	-159, -317, -316, -252, -370, -104, -247, 233, 241, 240,
	133, -345, 136, 289, 407, 231, -51, -52, -53, -227,
	172, 589, -86, 264, 268, 87, 87, -298, -297, -296,
	-346, 268, 247, -323, -315, 239, 248, -304, 240, 241,
	-299, 233, 134, -346, -299, 238, 248, 243, 247, 268,
	268, 124, 268, 124, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 263, -305, 148, -305, 478, 478, -311,
	-346, 243, 233, -346, -346, 235, 35, 35, -249, -299,
	235, 25, -305, -305, -305, -227, 172, -305, -305, -305,
	-305, 276, 276, -305, -305, -305, -305, -305, -305, -305,
	-305, -305, -305, -305, -305, -305, -305, -305, -305, -305,
	232, -345, -112, 392, 296, 81, -54, 278, -37, -159,
	-247, 233, 234, -345, 265, -159, 217, -159, -241, 156,
	15, -241, -238, 381, 379, 366, 371, -241, -241, -241,
	-241, 279, 364, -300, 233, 35, 244, 381, 279, 364,
	279, 280, 279, 280, 374, 384, 279, -262, 14, 158,
	407, 369, 373, 272, 232, 273, 234, 383, 280, -262,
	93, -242, 156, 381, 275, -241, -241, -267, -370, -253,
	333, -341, 575, -267, -267, 32, 90, 235, -252, -78,
	-252, 93, -15, -11, -22, -21, -23, 148, -110, 381,
	-98, 173, 590, 576, 577, 578, 575, 378, 583, 581,
	579, 279, 580, 87, 136, 138, 139, 4, -120, 155,
	-169, 148, 149, 150, 151, 152, 153, 154, 158, 140,
	142, 156, 157, 137, 159, 160, 161, 162, 163, 164,
	165, 167, 166, 168, 169, 172, 218, 219, -126, -126,
	-126, -126, -183, -370, -370, -370, -126, -236, -370, -126,
	-370, -370, -370, -370, -189, -120, -370, -374, -370, -374,
	-374, -284, -370, -284, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, 217, -370, -370, -370, -370,
	-370, -284, -284, -284, -284, -284, 103, 98, 92, -185,
	99, 93, -252, -257, -8, -9, -178, -266, -355, -356,
	-162, -159, -370, 296, -252, -252, 265, -198, -12, -8,
	-193, -199, -195, -8, -76, -96, -109, 63, 64, -111,
	24, 38, 67, 65, 23, -371, 88, -371, -215, -371,
	87, -36, -219, 86, 61, 43, 93, 93, 87, 21,
	-194, -196, -120, 14, -255, 4, -254, 25, -252, 93,
	217, 101, 14, -160, 29, -159, -237, -237, 87, 307,
	-230, -269, -232, -231, 397, 399, 148, -256, -252, 93,
	31, 88, 87, -159, -273, -276, -278, -277, -279, -274,
	-275, 330, 331, 173, 334, 336, 337, 338, 339, 340,
	341, 342, 343, 344, 347, 32, 255, 326, 327, 328,
	329, 348, 349, 350, 351, 352, 353, 354, 355, 313,
	332, 472, 314, 315, 316, 317, 318, 319, 321, 322,
	323, 324, 325, -344, -341, 86, 88, 87, -280, 86,
	-120, -112, 232, -341, 233, 233, 233, -76, 436, -305,
	-305, -305, 263, 19, -44, -41, -331, 18, -40, -41,
	225, 120, 121, 222, 86, -294, 86, -303, -344, -341,
	86, 134, 238, 133, -302, -299, -302, -303, -341, -185,
	-341, 134, 134, -341, -341, -223, -252, -223, -223, 23,
	-223, 23, -223, 23, 95, -252, -223, 23, -223, 23,
	-223, 23, -223, 23, -223, 23, 31, 78, 79, 80,
	31, 82, 83, 84, -185, -341, -341, -185, -294, -227,
	-159, -341, 95, 95, 95, -305, -305, 95, 93, 93,
	93, -305, -305, 95, 93, -259, -257, 93, 93, -347,
	249, 293, 295, 95, 95, 95, 95, 31, 93, -348,
	31, 597, 596, 598, 599, 600, 93, 95, 31, 95,
	31, 95, -252, 86, -159, -118, 283, 220, 222, 225,
	76, 93, 297, 301, 302, 148, 44, 87, 235, 232,
	-341, -243, 237, -243, -252, -258, -257, -250, 93, -120,
	-301, 14, 158, -262, -262, -241, -159, -301, -262, -241,
	-159, -241, -241, -241, -241, -262, -262, -262, -241, -257,
	-257, -159, -159, -159, -159, -159, -159, -159, -267, -242,
	-241, 575, 93, -235, 14, 76, -267, -267, -265, 310,
	344, 569, 570, 571, 87, 474, -152, -159, 575, 575,
	575, 575, 575, 575, -120, -120, -120, -120, 497, -176,
	116, 140, 117, 118, -134, -177, -181, -183, 100, 158,
	142, 156, 157, -125, -126, -125, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -268, -252,
	93, 173, -130, -129, 99, -364, -130, -106, -108, -120,
	-120, -341, -252, -106, -106, -120, -102, 24, 38, -187,
	-188, 144, -185, -371, -371, 95, 99, -102, -367, -102,
	164, -120, -120, -252, -252, -95, -94, 418, 419, 420,
	421, 423, 424, 425, 428, 429, 433, 434, 417, 435,
	422, 427, 430, 431, 432, 426, 329, -120, -120, -120,
	-120, -120, -120, -83, -120, 127, 128, 129, -120, -120,
	-179, -178, -340, -339, -338, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -107, 24,
	38, -106, -253, -258, -250, -106, -107, -107, -106, -106,
	217, -215, -371, 87, -357, 399, 400, 573, -260, 268,
	-259, 25, -179, 93, 14, -221, 77, -252, -198, -198,
	63, 64, 59, -106, -111, -371, -35, 25, -217, -252,
	62, 93, -285, -227, 356, 357, 173, -120, -120, 87,
	-197, 27, 28, -159, -254, 164, -258, -159, -222, 268,
	-159, -137, -139, -140, -141, -162, -184, -370, -142, 493,
	490, 14, -152, -153, -161, -257, -230, -232, 87, 398,
	400, 401, 76, 119, -120, -286, 172, -313, -312, -311,
	-294, -296, -297, -298, 88, -286, -290, 362, 361, -280,
	-280, -280, -280, -280, -285, -285, -285, -285, 86, 86,
	-280, -280, -280, -280, -288, 86, -288, -288, -289, 86,
	-289, -324, -120, -321, -320, -318, -319, 242, 102, 566,
	522, 474, 514, 556, 77, -316, -197, 95, -371, -118,
	-244, 237, -322, -319, -341, -341, -341, -244, -341, 93,
	-341, 93, -341, 93, -87, -58, -1, 609, 610, 611,
	87, 19, -295, -294, -57, 293, -327, -328, 268, -323,
	-317, -303, 134, -302, -303, -303, -341, 87, 29, 124,
	124, 124, 124, 474, 222, 32, -245, 513, 140, 566,
	522, -294, -57, -268, 235, -268, -268, 93, 93, -240,
	605, -152, -114, 285, 148, 274, 274, 232, 232, 287,
	-159, 298, 300, 299, 297, 301, 302, 23, 23, 23,
	286, 288, 290, 276, -159, -159, -243, 76, -154, -159,
	26, -257, -159, -241, -241, -159, -241, -241, -159, -252,
	-98, 399, 87, 474, 22, -99, 22, -370, 116, 117,
	118, -177, -125, -126, -125, 139, 256, 87, -371, 25,
	87, 77, -371, -371, -371, 87, 14, -106, -190, -188,
	146, -120, -371, -371, -371, -120, -371, -120, -371, -371,
	87, 87, 14, -272, 25, -371, -371, -371, -371, -371,
	-189, -371, 14, 87, 87, -371, -371, 87, 87, -371,
	87, 87, 87, -337, 87, 87, 87, 87, -371, -371,
	-371, -371, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, -371, -371, -106, -106, -370, 217, -371, -371,
	-371, -371, -371, -253, -356, 572, 400, -166, -165, -163,
	74, 236, 75, -370, -259, -371, -130, 90, -218, 90,
	-217, -171, -252, 95, 99, -200, -136, -138, 14, -111,
	-183, 88, 87, -285, -204, -209, -238, -252, 93, 173,
	-287, 173, -287, 356, 357, -196, 217, -167, 15, -170,
	32, 57, -11, -370, -370, 32, 87, -155, -157, -156,
	-158, 66, 70, 72, 67, 68, 69, 73, -263, 25,
	-137, -9, -8, -370, -370, -370, -159, -152, -372, 14,
	77, -372, 87, 217, -231, -233, 402, 399, 405, -341,
	93, -86, 87, -311, -298, -201, -115, 40, -291, 363,
	-285, 481, -285, -293, 93, -293, 95, 95, 88, -47,
	-42, -43, 33, 81, -318, -305, 93, 39, -305, -305,
	-252, 88, -197, -114, -159, 140, 76, -322, -322, -322,
	-257, -2, 608, 614, 134, 86, 366, 18, -217, 87,
	88, -186, 294, 88, -88, -252, 88, 86, -303, -303,
	-252, -370, 232, 31, 31, 566, 522, 513, -57, -186,
	-286, -341, 607, 606, 88, 234, 292, -119, 413, -116,
	93, 89, -159, -159, -159, -159, -159, 225, 222, -365,
	303, -365, 277, 235, -152, -159, 87, -81, 251, 246,
	-262, -262, 33, -159, 399, 584, 582, -120, 139, 256,
	-134, -126, -108, 471, -270, 173, 330, 255, 328, 324,
	344, 335, 361, 326, 362, 323, 322, 321, -270, -268,
	-120, -120, -193, 147, -120, 145, -371, -371, -120, -120,
	-120, -371, 173, 330, 14, -120, -120, -120, -338, -120,
	-120, -120, -336, -335, -130, -185, -371, -336, -120, -120,
	-335, -335, -339, -339, -339, -339, -339, -178, -178, -178,
	-178, -371, -371, -107, -253, -163, -299, -299, -299, -223,
	87, -234, 22, 14, 57, 57, -136, -167, -137, -111,
	-252, -207, 568, -212, 46, -210, -211, 47, -208, 48,
	56, -287, -287, 164, -198, -120, -224, 76, -225, -229,
	-185, -180, -182, -181, -370, -216, -371, -252, -223, -225,
	-139, -140, -140, -139, -140, 66, 66, 66, 71, 66,
	71, 66, -156, -257, -371, -371, -9, -9, -120, -260,
	77, -137, -137, -161, -257, 164, 399, 403, 404, -311,
	-363, 116, 140, 31, 76, 359, 102, -361, 172, 510,
	561, 566, 522, 514, 556, -362, 238, 133, 134, 250,
	25, 41, 88, 87, 88, 87, 88, 87, -246, -245,
	-43, -42, -305, -305, 95, -341, 93, 93, 234, 26,
	-159, 76, 76, 76, -89, 612, 95, 86, -3, 81,
	-120, 86, 19, -294, -185, -329, -281, -330, -282, -283,
	-5, -6, -306, -92, 57, 102, -61, 44, 233, 592,
	593, 124, -370, 605, -321, -217, -325, -327, -159, -122,
	-370, -121, -123, -127, 162, 163, -186, -159, -113, 283,
	291, 86, -117, 90, -343, 77, 274, 359, 274, -366,
	304, 93, -366, -159, -81, -47, -159, -241, -241, 33,
	-341, -371, -134, -126, -370, -371, -280, -280, -280, -289,
	-280, 318, -280, 318, -280, -371, -371, 87, -371, 22,
	-371, -97, 442, -120, 87, 87, -371, 86, 86, -120,
	-371, -371, -371, -337, 87, -371, 87, -371, 87, -271,
	567, -371, -371, -371, -371, -371, -371, -371, -371, -371,
	-371, -371, -164, 22, -164, -164, -371, 90, -159, -167,
	-191, 16, -204, 51, 336, -214, -213, 55, 47, -211,
	19, 49, 19, 30, -224, 87, 148, 87, -371, -371,
	87, 57, 217, -371, -167, -150, -149, 76, 77, -151,
	76, -149, 66, 66, -219, -371, -371, 87, -222, -137,
	-167, -167, 217, 116, -370, -124, -133, -122, 12, 93,
	93, -341, -360, 596, 597, 31, 95, -305, -305, 134,
	134, -159, 86, -285, 93, -285, 95, 95, 31, 82,
	83, 84, 31, 78, 79, 80, -159, -159, -159, -159,
	-326, 86, 19, -120, 86, 148, 88, -217, -217, 270,
	158, -305, 590, 276, 276, -305, -305, -305, -91, -90,
	612, 88, -371, 87, -292, 474, 477, -120, -128, -128,
	-219, 88, -334, 474, -342, -252, -252, -252, -252, 95,
	97, -125, -285, -120, -120, -198, 93, -120, -120, 95,
	95, -371, -371, -336, -335, -120, -371, -147, -146, -148,
	576, 116, 31, -270, -370, 66, 18, 16, -370, -370,
	-260, -191, -192, 17, 19, -205, 53, -203, 52, -203,
	-213, 19, 19, 93, 19, 93, 134, -229, -120, -182,
	57, -11, -252, -180, -252, -193, -120, 86, -120, -130,
	-167, -167, -120, -173, 467, 466, 468, 469, 445, 105,
	107, 106, 446, 447, 448, 345, 346, 449, 450, 451,
	108, 109, 110, 111, 112, 113, 114, 452, 455, 453,
	456, 457, 458, 463, 464, 459, 460, 461, 462, 465,
	93, 93, 86, -120, 88, 88, -219, -325, -58, 88,
	-217, 95, 88, 271, -181, -370, 93, -305, -305, -305,
	95, 95, -259, -371, 87, -252, -362, -327, 478, 478,
	-371, 25, -333, -332, -253, 86, 77, -101, 158, 474,
	-371, -371, -371, -371, -371, 88, 88, -371, -371, 87,
	-371, -146, -148, -371, 76, -130, -220, -371, -252, 238,
	19, 19, -220, -220, -166, -192, -120, -178, -206, 54,
	76, 119, 93, 93, 93, 12, -180, 217, -198, -217,
	-144, 366, -193, -371, -217, 88, 25, 88, 614, 134,
	88, -181, -100, -370, 267, -259, 93, 93, -90, -93,
	-11, 87, 148, -217, -159, -371, 472, 73, 475, -120,
	-371, 76, 485, 576, 87, -371, -371, -371, 76, 119,
	-225, -252, 88, -371, -370, -198, 88, -202, -11, 86,
	-3, 267, -281, -330, -282, -283, -5, -6, -306, -79,
	474, -332, -310, -253, 93, 95, 88, 62, 473, 476,
	-337, -252, 238, -260, -145, -143, -252, 528, -353, -352,
	470, -363, -359, 116, 140, 102, -361, 566, 522, 125,
	126, -79, -120, 86, -371, -80, 282, 572, -343, 62,
	-371, -371, 87, 22, -273, -60, 539, -350, -351, 76,
	-354, 372, 538, 559, 116, 93, 88, -217, 243, -334,
	474, -143, 535, -286, -130, -351, 76, -350, 76, 13,
	12, -4, 613, 88, 284, 475, -59, 26, -144, -349,
	251, 246, 249, 32, -349, 95, -4, 476, 539, 245,
	31, 116, -130, -147, -146, -146,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1320, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1829, 1829, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1180, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1827, 1, 3,
	69, 73, 0, 0, 0, 56, 1189, 0, 76, 0,
	0, 831, 0, 829, 0, 1303, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1305, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1207, 153, 1321, 1318, 1319, 38, 39,
	40, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 0, 1297, 0,
	686, 929, 0, 748, 748, 0, 748, 748, 748, 748,
	0, 0, 0, 698, 0, 0, 0, 0, 745, 0,
	714, 715, 0, 745, 0, 721, 751, 0, 726, 748,
	748, 729, 1830, 0, 1830, 1830, 1288, 0, 742, 740,
	754, 755, 758, 762, 0, 767, 770, 1314, 1315, 0,
	785, 47, 1561, 777, 790, 791, 0, 823, 824, 43,
	1026, 0, 951, 956, 967, 980, 981, 982, 983, 984,
	986, 987, 0, 0, 0, 0, 992, 993, 0, 0,
	0, 0, 0, 1007, 0, 0, 0, 0, 0, 1161,
	0, 1124, 1124, 1043, 1124, 1126, 1126, 1481, 1515, 1639,
	1647, 0, 0, 0, 1826, 1602, 1610, 1611, 1633, 1721,
	1770, 1606, 1607, 1588, 1600, 1603, 1591, 1592, 1594, 1596,
	1601, 1608, 1614, 1593, 1613, 1612, 0, 1589, 1590, 1595,
	1605, 1609, 1597, 1598, 1599, 1604, 1615, 1170, 0, 0,
	0, 0, 0, 0, 273, 274, 1025, 1277, 1126, 1126,
	1126, 1126, 1126, -2, -2, 219, 220, 221, 222, 223,
	224, 225, 0, 215, 0, 278, 279, 275, 276, 277,
	1009, 1010, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 1829, 0, 800, 0, 0, 0,
	0, 0, 1189, 0, 1181, 1180, 61, 0, 827, -2,
	0, 0, 0, 0, 45, 0, 50, 888, 75, 74,
	1229, 0, 0, 0, 57, 1190, 65, 67, 1191, 0,
	832, 833, 0, 864, 868, 0, 828, 0, 0, 1304,
	1303, 1303, 100, 0, 1766, 1281, -2, -2, 0, 0,
	1316, 1317, 1290, -2, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, -2, 0, 0, 165, 166, 0, 41, 404, 0,
	161, 0, 397, 338, 0, 1207, 0, 0, 0, 0,
	0, 827, 0, 1298, 142, 143, 150, 151, 152, 377,
	377, 377, 549, 0, 0, 153, 153, 508, 509, 510,
	0, 0, -2, 402, 0, 488, 0, 0, 391, 391,
	395, 393, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 0, 378, 0, 547, 548, 440,
	0, 0, 0, 0, 0, 0, 524, 525, 0, 0,
	1306, 1307, 0, 0, 0, 377, 377, 0, 0, 0,
	0, 377, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 1220, 0, 0, 0, -2, 0, 678, 0,
	0, 0, 1299, 1299, 0, 685, 0, 687, 688, 0,
	0, 689, 0, 745, 745, 743, 744, 691, 692, 693,
	694, 748, 0, 0, 386, 387, 388, 745, 748, 0,
	748, 748, 748, 748, 745, 745, 745, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 751, 748,
	0, 722, 0, 723, 724, 727, 728, 730, 1831, 1832,
	1337, 1830, 1830, 734, 738, 1289, 760, 768, 771, 788,
	786, 787, 789, 781, 782, 783, 784, 0, 802, 803,
	808, 0, 0, 0, 0, 814, 815, 816, 0, 0,
	819, 820, 821, 0, 0, 0, 0, 0, 949, 0,
	0, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 988, 989,
	990, 991, 994, 0, 0, 0, 999, 1000, 0, 0,
	0, 0, 0, 837, 0, 1162, 0, 1041, 0, 1042,
	1044, 1045, 0, 1046, 837, 837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 0, 0, 847, 847, 0,
	0, 208, 209, 210, 211, 212, 226, 227, 228, 229,
	230, 280, 1170, 0, 1025, 0, 0, 44, 792, 793,
	0, 912, 1309, 0, 0, 843, 0, 55, 64, 66,
	1189, 59, 1189, 0, 849, 0, 0, -2, -2, 850,
	856, 857, 858, 859, 860, 52, 1828, 53, 0, 72,
	0, 46, 0, 0, 0, 0, 350, 1232, 0, 0,
	1182, 1183, 1186, 0, 865, 1645, 869, 0, 871, 872,
	0, 830, 0, 98, 0, 928, 0, 0, 0, 1766,
	1287, 0, 102, 103, 0, 0, 0, 361, 1292, 1293,
	1294, -2, 384, 0, 361, 345, 288, 289, 290, 338,
	292, 338, 338, 338, 338, 350, 350, 350, 350, 321,
	322, 323, 324, 325, 0, 0, 307, 338, 338, 338,
	338, 328, 329, 330, 331, 332, 333, 334, 335, 293,
	294, 295, 296, 297, 298, 299, 300, 301, 340, 340,
	340, 342, 342, 0, 42, 0, 365, 0, 1186, 0,
	0, 1220, 1301, 1311, 0, 0, 0, 1301, 120, 0,
	0, 0, 550, 584, 502, 538, 551, 0, 505, 506,
	-2, 0, 0, 487, 0, 489, 0, 385, 0, -2,
	0, 395, 0, 391, 395, 392, 395, 383, 396, 528,
	529, 530, 0, 532, 533, 614, 898, 0, 0, 0,
	0, 0, 620, 621, 622, 0, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 489, 0,
	535, 0, 441, 442, 443, 0, 0, 446, 447, 448,
	449, 0, 0, 452, 453, 454, 915, 916, 455, 456,
	481, 482, 483, 457, 458, 459, 460, 461, 462, 463,
	475, 476, 477, 478, 479, 480, 464, 465, 466, 467,
	468, 469, 472, 0, 135, 1211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 846, 930, 1322, 1323, 749, 750,
	0, 389, 390, 748, 748, 695, 735, 0, 748, 699,
	736, 700, 702, 701, 703, 716, 717, 748, 706, 746,
	747, 707, 708, 709, 710, 711, 712, 713, 731, 718,
	719, 720, 752, 0, 756, 757, 732, 733, 0, 769,
	773, 774, 775, 776, 0, 0, 805, 94, 810, 811,
	812, 813, 825, 818, 1027, 946, 947, 948, 0, 950,
	953, 0, 1011, 1013, 955, 957, 1022, 1023, 1024, 0,
	0, 0, 0, 0, 961, 965, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 985, 1140,
	1141, 1142, 1002, 281, 282, 0, 1003, 0, 862, 0,
	0, 0, 1001, 0, 0, 0, 0, 838, 839, 1168,
	1165, 0, 0, 1125, 1127, 0, 0, 0, 0, 0,
	861, 0, 0, 0, 0, 0, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1143, 0, 0,
	0, 0, 0, 1161, 0, 1004, 1005, 1006, 0, 0,
	0, 1310, 0, 130, 131, 0, 0, 0, 0, 0,
	1097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 848, 1171, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 795, 796, 798, 0, 932, 0,
	913, 0, 0, 801, 0, 842, 0, 845, 58, 60,
	854, 855, 0, 873, 851, 54, 49, 0, 0, 890,
	1230, 350, 1252, 0, 359, 359, 356, 1192, 1193, 0,
	1185, 1187, 1188, 77, 870, 866, 0, 944, 0, 0,
	927, 0, 876, 878, 879, 880, 910, 0, 883, 0,
	0, 0, 0, 0, 96, 929, 1282, 101, 0, 0,
	106, 107, 1283, 1284, 1285, 1286, 0, 573, -2, 436,
	167, 169, 170, 171, 162, -2, 348, 346, 347, 291,
	350, 350, 315, 316, 317, 318, 319, 320, 0, 0,
	308, 309, 310, 311, 302, 0, 303, 304, 305, 0,
	306, 403, 0, 1194, 366, 367, 369, 377, 0, 372,
	373, 0, 377, 377, 0, 398, 399, 0, 1186, 1211,
	0, 0, 0, 1312, 1311, 1311, 1311, 0, 155, 156,
	157, 158, 159, 160, 609, 0, 0, 585, 607, 608,
	153, 0, 0, 163, 491, 490, 0, 641, 0, 401,
	0, 0, 395, 395, 380, 381, 531, 0, 0, 616,
	617, 618, 619, 0, 0, 0, 518, 430, 0, 519,
	520, 489, 491, 361, 0, 444, 445, 450, 451, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 565, 566, 567, 493, 571, 568, 493, 572,
	1208, 1209, 1210, 0, 0, 679, 0, 0, 427, 92,
	1300, 684, 745, 705, 737, 745, 697, 704, 725, 765,
	809, 0, 0, 0, 0, 817, 0, 0, 954, 1012,
	1014, 958, 0, 962, 966, 0, 0, 0, 0, 0,
	0, 0, 1008, 1032, 1033, 0, 0, 1180, 0, 1166,
	0, 0, 1040, 1128, 1129, 0, 1048, 0, 1050, 1051,
	0, 0, 0, 0, 0, 1056, 1057, 1058, 1059, 1060,
	0, 1062, 0, 0, 0, 1066, 1067, 0, 0, 1068,
	0, 0, 0, 0, 0, 0, 0, 0, 1080, 1081,
	1082, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 1028, 0, 0, 847, 0, 1130, 1131,
	1132, 1133, 1134, 1171, 794, 797, 799, 886, 933, 934,
	0, 0, 0, 0, 914, 1308, 840, 841, 844, -2,
	0, 0, 1173, 0, 0, 873, 944, 874, 0, 852,
	51, 889, 0, 1234, 1233, 1246, 1259, 359, 359, 353,
	354, 360, 355, 357, 358, 1184, 0, 1189, 0, 1270,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 917, 0, 0, 920, 0, 0, 0, 0, 911,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 362,
	363, 144, 153, 438, 168, 411, 0, 0, 287, 349,
	312, 313, 314, 0, 336, 0, 0, 0, 432, 116,
	1198, 1197, 377, 377, 368, 0, 371, 0, 0, 0,
	1313, 339, 400, 0, 134, 0, 0, 0, 0, 0,
	140, 579, 0, 0, 586, 0, 0, 0, 500, 0,
	511, 512, 0, 613, -2, 675, 365, 0, 379, 382,
	899, 0, 0, 513, 0, 516, 517, 431, 491, 522,
	523, 536, 473, 474, 471, 0, 0, 1221, 1222, 1227,
	1225, 1226, 121, 557, 559, 558, 562, 0, 0, 495,
	0, 495, 555, 0, 427, 1194, 0, 683, 428, 429,
	748, 748, 804, 95, 0, 807, 0, 0, 0, 0,
	959, 963, 863, 0, 0, 338, 338, 1148, 338, 342,
	1151, 338, 1153, 338, 1156, 338, 1159, 1160, 0, 0,
	0, 0, 1163, 1039, 1169, 0, 1047, 1049, 0, 0,
	0, 1055, 0, 0, 0, 0, 0, 0, 132, 133,
	1097, 0, 0, 1099, 1101, 1102, 1072, 1098, 0, 0,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1029, 1030, 0, 1172, 935, 940, 940, 940, 0,
	0, 0, 1295, 1296, 1174, 1175, 944, 1176, 875, 853,
	891, 1252, 0, 1245, 0, -2, 1254, 0, 0, 0,
	1260, 351, 352, 867, 78, 945, 81, 0, 1270, 1278,
	0, 1261, 1272, 1274, 0, 0, 0, 1266, 0, 944,
	877, 906, 908, 0, 903, 918, 919, 921, 0, 923,
	0, 925, 926, 888, 882, 884, 0, 0, 0, 98,
	0, 944, 944, 97, 0, 931, 108, 109, 110, 437,
	172, 177, 0, 0, 0, 182, 0, 184, 0, 0,
	0, 189, 190, 377, 377, 412, 0, 284, 286, 0,
	0, 175, 350, 0, 350, 0, 343, 0, 413, 433,
	1195, 1196, 0, 0, 370, 374, 375, 376, 0, 1302,
	136, 0, 0, 0, 582, 0, 610, 0, 0, 0,
	0, 0, 0, 164, 492, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 0, 377, 0, 0, 0, 377,
	377, 377, 0, 667, 364, 0, 0, 638, 635, 514,
	0, 213, 214, 216, 0, 0, 521, 888, 1212, 1213,
	1214, 0, 1224, 1228, 124, 0, 0, 0, 0, 569,
	0, 494, 570, 680, 681, 682, 93, 690, 696, 806,
	826, 952, 960, 964, 0, 996, 1146, 350, 1149, 1150,
	1152, 1154, 1155, 1157, 1158, 997, 998, 0, 1035, 0,
	1037, 1189, 0, 1167, 0, 0, 1054, 0, 0, 0,
	1063, 1064, 1065, 0, 0, 1071, 0, 1073, 0, 0,
	0, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1031, 0, 0, 0, 0, 912, -2, 62, 1176,
	1178, 0, 1239, 1237, 1237, 1247, 1248, 0, 0, 1255,
	0, 0, 0, 0, 82, 0, 0, 0, 1275, 0,
	0, 0, 0, 99, 1180, 900, 907, 0, 0, 901,
	0, 902, 922, 924, 881, -2, 885, 0, 944, 944,
	88, 89, 0, 178, 0, 180, 206, 207, 0, 183,
	185, 186, 187, 193, 194, 195, 188, 0, 0, 283,
	285, 0, 0, 326, 337, 327, 0, 0, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 888, 137, 138, 139,
	574, 0, 584, 0, 0, 0, 577, 0, 503, 0,
	0, 0, 377, 377, 377, 0, 0, 0, 0, 652,
	0, 0, 615, 0, 623, 0, 0, 0, 217, 218,
	0, 1223, 556, 0, 122, 123, 0, 0, 561, 496,
	497, 1135, 1147, 0, 0, 0, 1164, 0, 0, 0,
	0, 1061, 1069, 0, 1100, 0, 1076, 0, 0, 0,
	604, 605, 0, 1096, 0, 941, 0, 0, 0, 0,
	932, 1178, 80, 0, 0, 1242, 0, 1235, 1238, 1236,
	1249, 0, 0, 1256, 0, 1258, 0, 1279, 1280, 1273,
	0, 1265, 1268, 1264, 1267, 1189, 904, 0, 909, 0,
	1180, 87, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 0, 0, 341, 344, 0, 0, 0, 575,
	0, 587, 578, 0, 665, 0, 669, 0, 0, 0,
	672, 673, 674, 651, 0, 655, 405, 639, 636, 637,
	515, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	1034, 1036, 1038, 1052, 1053, 1144, 1145, 1070, 1074, 0,
	1077, 0, 0, 1078, 0, 606, 0, 937, 894, 895,
	942, 943, 0, 0, 887, 79, 1179, 1177, 1231, 0,
	1240, 1241, 1250, 1251, 1257, 0, 1263, 0, 85, 0,
	0, 0, 1189, 179, 0, 198, 0, 583, 0, 586,
	576, 663, 664, 0, 676, 668, 670, 671, 653, -2,
	1215, 0, 0, 0, 563, 995, 0, 0, 0, 1097,
	1079, 0, 602, 603, 0, 936, 938, 939, 1243, 1244,
	1271, 1269, 905, 912, 0, 86, 418, 411, 1215, 0,
	0, 0, 656, 657, 658, 659, 660, 661, 662, 553,
	1217, 127, 128, 484, 485, 486, 121, 1136, 0, 1139,
	0, 896, 897, 588, 0, 590, 0, -2, 406, 419,
	0, 173, 199, 200, 0, 0, 203, 204, 205, 196,
	197, 117, 0, 0, 677, 0, 1218, 1219, 124, 1137,
	1075, 589, 0, 0, 361, 0, 599, 407, 408, 0,
	414, 415, 416, 417, 201, 202, 611, 0, 0, 560,
	0, 591, 592, 600, 0, 409, 0, 410, 0, 0,
	0, 580, 0, 611, 1216, 0, 0, 601, 597, 420,
	422, 423, 0, 0, 421, 612, 581, 1138, 0, 424,
	425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	86, 88, 164, 162, 87, 163, 217, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 615,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:538
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:543
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:548
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:594
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:603
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:607
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:613
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:619
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:625
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:629
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:638
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:644
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:648
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:654
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:708
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:728
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:807
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:831
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:843
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:855
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:859
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:871
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:875
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:879
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:883
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:889
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:893
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:897
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:903
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:913
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:917
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:926
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:948
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:952
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:958
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:962
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:966
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:972
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:976
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:980
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:984
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:990
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:994
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1006
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1022
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1026
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1033
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1037
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1042
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1057
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1062
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1068
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1088
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1094
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1110
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1124
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1129
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1134
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1139
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1146
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1153
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1164
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1175
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1181
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1185
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1189
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1207
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1217
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1221
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1227
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1231
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1237
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1241
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1247
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1251
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1257
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1267
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1272
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1281
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1286
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1290
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1305
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1314
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1323
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1336
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1340
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1346
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1357
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1386
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1391
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1395
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1400
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1406
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1412
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1416
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1422
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1426
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1430
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1436
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1440
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1449
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1454
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1460
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1466
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1471
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1482
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1490
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1497
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1501
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1505
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1509
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1513
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1523
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1530
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1540
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1544
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1548
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1552
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1556
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1560
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1573
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1577
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1581
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1585
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1766
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1770
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1774
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1780
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1784
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1788
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1794
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1798
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1805
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1809
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1813
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1817
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2045
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2054
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2059
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2063
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2071
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2081
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2089
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2093
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2097
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2102
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2106
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2157
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2176
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2185
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2191
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2201
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2205
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2210
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2214
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2218
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2222
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2226
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2230
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2246
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2250
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2254
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2258
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2262
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2271
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2300
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2329
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2339
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2343
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2349
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2353
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2359
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2363
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2369
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2375
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2379
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2383
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2387
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2391
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2400
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2406
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2412
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2418
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2422
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2426
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2431
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2435
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2441
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2447
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2453
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2457
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2461
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2465
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2469
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2492
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2501
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2510
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2516
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2530
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2540
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2544
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2548
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2552
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2556
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2560
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2564
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2568
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2572
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2724
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2729
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2742
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2746
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2755
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2759
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2763
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2771
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2777
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2791
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2795
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2799
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2803
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2807
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2811
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2815
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2819
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2823
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2827
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2861
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2869
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2909
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2915
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2967
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2974
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2981
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2994
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3004
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3011
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3018
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3040
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3061
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3144
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3155
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3164
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3172
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3181
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3188
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3200
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3209
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3224
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3229
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3233
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3238
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3242
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3248
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3254
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3260
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3270
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3274
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3280
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3286
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3292
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3298
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3304
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3316
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3322
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3328
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3334
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3338
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3342
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3348
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3352
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3357
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3361
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3366
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3370
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3376
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3380
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3384
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3388
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3392
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3396
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3400
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3404
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3408
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3412
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3416
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3420
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3424
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3428
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3432
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3436
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3440
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3444
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3448
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3452
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3456
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3460
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3465
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3469
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3473
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3479
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3489
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3494
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3498
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3503
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3508
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3513
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3518
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3523
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3529
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3535
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3540
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3546
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3552
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3556
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3562
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3567
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3571
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3576
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3581
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3586
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3591
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3597
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3603
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3610
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3617
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3624
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3632
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3636
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3642
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3648
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3654
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3660
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3666
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3672
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3684
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3700
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3706
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3710
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3729
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3733
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3739
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3743
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3755
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3974
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3978
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4012
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4016
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4026
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4032
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4095
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4100
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4117
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4121
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4125
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4129
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4133
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4137
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4143
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4214
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4218
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4224
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4230
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4234
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4238
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4242
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4254
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4260
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4264
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4268
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4272
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4280
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4290
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4324
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4345
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4349
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4367
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4377
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4381
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4395
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4421
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4431
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4443
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4452
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4462
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4467
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4471
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4476
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4484
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4492
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL StarExpr
//line sql.y:4528
		{
			yyLOCAL = StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4534
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4544
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4548
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4552
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4556
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4561
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4569
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4581
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4585
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4591
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4597
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4611
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4615
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4619
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4623
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4629
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4633
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4639
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4643
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4652
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4658
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4662
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4668
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4678
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4682
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4690
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4696
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4700
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4713
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4717
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4721
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4725
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4731
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4733
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4737
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4743
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4745
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4748
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4753
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4757
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4761
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4768
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4774
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4778
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4782
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4788
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4794
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4798
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4802
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4806
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4812
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4816
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4826
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4855
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4861
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4871
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4875
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4879
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4883
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4888
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4892
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4896
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4900
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4910
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4948
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5168
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5172
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5176
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5182
		{
			yyVAL.str = ""
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5186
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5192
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5196
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5203
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5207
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5211
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5215
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5221
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5225
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5229
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5233
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5237
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5241
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5245
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5251
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5255
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5259
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5266
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5272
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5276
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &Avg{Arg: yyDollar[4].exprUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &CountStar{Star: yyDollar[3].starExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &Count{Arg: yyDollar[4].exprUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &Max{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &Min{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5538
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5575
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5584
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5590
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5594
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5604
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5610
		{
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5612
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5616
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5620
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5624
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5628
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5632
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5636
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5640
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5644
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5648
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5652
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5658
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5662
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5666
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5670
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5674
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5678
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5682
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5686
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5690
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5727
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5731
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5745
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5749
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5753
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5757
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5761
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5767
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5771
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5775
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5785
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5789
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5795
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5799
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5803
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5807
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5811
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5817
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5821
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5825
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5829
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5833
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5837
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5841
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5845
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5849
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5853
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5868
		{
			yyVAL.str = string("")
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5872
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5878
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5882
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5888
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5903
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5907
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5911
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5940
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5958
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5964
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5970
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5980
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5985
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5989
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5993
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6002
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6008
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6012
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6016
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6025
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6029
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6033
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6037
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6044
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6048
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6052
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6056
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6062
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6066
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6070
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6074
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6079
		{
			yyVAL.str = ""
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = ""
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6100
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6106
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6115
		{
			yyVAL.str = ""
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6119
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6124
		{
			yyVAL.str = "cascaded"
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6128
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6132
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6141
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6147
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6153
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6159
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6168
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6177
		{
			yyVAL.str = ""
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6181
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6187
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6191
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6197
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6201
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6205
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6210
		{
			yyVAL.str = ""
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6214
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6218
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6223
		{
			yyVAL.str = ""
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6227
		{
			yyVAL.str = " header"
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6232
		{
			yyVAL.str = ""
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6236
		{
			yyVAL.str = " manifest on"
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6240
		{
			yyVAL.str = " manifest off"
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6245
		{
			yyVAL.str = ""
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6249
		{
			yyVAL.str = " overwrite on"
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6253
		{
			yyVAL.str = " overwrite off"
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6259
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6264
		{
			yyVAL.str = ""
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6268
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6274
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6278
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6284
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6288
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6293
		{
			yyVAL.str = ""
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6297
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6303
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6307
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6313
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6317
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6321
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6326
		{
			yyVAL.str = ""
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6330
		{
			yyVAL.str = " optionally"
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6343
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6347
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6351
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6355
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6359
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6365
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6369
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6373
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6377
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6386
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6392
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6396
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6402
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6406
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6412
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6427
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6431
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6437
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6443
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6447
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6453
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6457
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6461
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6465
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6469
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6477
		{
			yyVAL.str = "charset"
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6521
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6524
		{
			yyVAL.empty = struct{}{}
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6526
		{
			yyVAL.empty = struct{}{}
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6528
		{
			yyVAL.empty = struct{}{}
		}
	case 1308:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6532
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6541
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6548
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6552
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6558
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6562
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6569
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6575
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6579
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6585
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6589
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6596
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7124
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7133
		{
			decNesting(yylex)
		}
	case 1829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7138
		{
			skipToEnd(yylex)
		}
	case 1830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7143
		{
			skipToEnd(yylex)
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7147
		{
			skipToEnd(yylex)
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7151
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
