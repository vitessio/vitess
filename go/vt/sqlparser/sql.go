// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const END = 57501
const LE = 57502
const GE = 57503
const NE = 57504
const NULL_SAFE_EQUAL = 57505
const IS = 57506
const LIKE = 57507
const REGEXP = 57508
const RLIKE = 57509
const IN = 57510
const ASSIGNMENT_OPT = 57511
const SHIFT_LEFT = 57512
const SHIFT_RIGHT = 57513
const DIV = 57514
const MOD = 57515
const UNARY = 57516
const COLLATE = 57517
const BINARY = 57518
const UNDERSCORE_ARMSCII8 = 57519
const UNDERSCORE_ASCII = 57520
const UNDERSCORE_BIG5 = 57521
const UNDERSCORE_BINARY = 57522
const UNDERSCORE_CP1250 = 57523
const UNDERSCORE_CP1251 = 57524
const UNDERSCORE_CP1256 = 57525
const UNDERSCORE_CP1257 = 57526
const UNDERSCORE_CP850 = 57527
const UNDERSCORE_CP852 = 57528
const UNDERSCORE_CP866 = 57529
const UNDERSCORE_CP932 = 57530
const UNDERSCORE_DEC8 = 57531
const UNDERSCORE_EUCJPMS = 57532
const UNDERSCORE_EUCKR = 57533
const UNDERSCORE_GB18030 = 57534
const UNDERSCORE_GB2312 = 57535
const UNDERSCORE_GBK = 57536
const UNDERSCORE_GEOSTD8 = 57537
const UNDERSCORE_GREEK = 57538
const UNDERSCORE_HEBREW = 57539
const UNDERSCORE_HP8 = 57540
const UNDERSCORE_KEYBCS2 = 57541
const UNDERSCORE_KOI8R = 57542
const UNDERSCORE_KOI8U = 57543
const UNDERSCORE_LATIN1 = 57544
const UNDERSCORE_LATIN2 = 57545
const UNDERSCORE_LATIN5 = 57546
const UNDERSCORE_LATIN7 = 57547
const UNDERSCORE_MACCE = 57548
const UNDERSCORE_MACROMAN = 57549
const UNDERSCORE_SJIS = 57550
const UNDERSCORE_SWE7 = 57551
const UNDERSCORE_TIS620 = 57552
const UNDERSCORE_UCS2 = 57553
const UNDERSCORE_UJIS = 57554
const UNDERSCORE_UTF16 = 57555
const UNDERSCORE_UTF16LE = 57556
const UNDERSCORE_UTF32 = 57557
const UNDERSCORE_UTF8 = 57558
const UNDERSCORE_UTF8MB4 = 57559
const UNDERSCORE_UTF8MB3 = 57560
const INTERVAL = 57561
const WINDOW_EXPR = 57562
const JSON_EXTRACT_OP = 57563
const JSON_UNQUOTE_EXTRACT_OP = 57564
const CREATE = 57565
const ALTER = 57566
const DROP = 57567
const RENAME = 57568
const ANALYZE = 57569
const ADD = 57570
const FLUSH = 57571
const CHANGE = 57572
const MODIFY = 57573
const DEALLOCATE = 57574
const REVERT = 57575
const QUERIES = 57576
const SCHEMA = 57577
const TABLE = 57578
const INDEX = 57579
const VIEW = 57580
const TO = 57581
const IGNORE = 57582
const IF = 57583
const PRIMARY = 57584
const COLUMN = 57585
const SPATIAL = 57586
const FULLTEXT = 57587
const KEY_BLOCK_SIZE = 57588
const CHECK = 57589
const INDEXES = 57590
const ACTION = 57591
const CASCADE = 57592
const CONSTRAINT = 57593
const FOREIGN = 57594
const NO = 57595
const REFERENCES = 57596
const RESTRICT = 57597
const SHOW = 57598
const DESCRIBE = 57599
const EXPLAIN = 57600
const DATE = 57601
const ESCAPE = 57602
const REPAIR = 57603
const OPTIMIZE = 57604
const TRUNCATE = 57605
const COALESCE = 57606
const EXCHANGE = 57607
const REBUILD = 57608
const PARTITIONING = 57609
const REMOVE = 57610
const PREPARE = 57611
const EXECUTE = 57612
const MAXVALUE = 57613
const PARTITION = 57614
const REORGANIZE = 57615
const LESS = 57616
const THAN = 57617
const PROCEDURE = 57618
const TRIGGER = 57619
const VINDEX = 57620
const VINDEXES = 57621
const DIRECTORY = 57622
const NAME = 57623
const UPGRADE = 57624
const STATUS = 57625
const VARIABLES = 57626
const WARNINGS = 57627
const CASCADED = 57628
const DEFINER = 57629
const OPTION = 57630
const SQL = 57631
const UNDEFINED = 57632
const SEQUENCE = 57633
const MERGE = 57634
const TEMPORARY = 57635
const TEMPTABLE = 57636
const INVOKER = 57637
const SECURITY = 57638
const FIRST = 57639
const AFTER = 57640
const LAST = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const FORCE_CUTOVER = 57650
const CUTOVER_THRESHOLD = 57651
const EXPIRE = 57652
const RATIO = 57653
const VITESS_THROTTLER = 57654
const BEGIN = 57655
const START = 57656
const TRANSACTION = 57657
const COMMIT = 57658
const ROLLBACK = 57659
const SAVEPOINT = 57660
const RELEASE = 57661
const WORK = 57662
const CONSISTENT = 57663
const SNAPSHOT = 57664
const UNRESOLVED = 57665
const TRANSACTIONS = 57666
const BIT = 57667
const TINYINT = 57668
const SMALLINT = 57669
const MEDIUMINT = 57670
const INT = 57671
const INTEGER = 57672
const BIGINT = 57673
const INTNUM = 57674
const REAL = 57675
const DOUBLE = 57676
const FLOAT_TYPE = 57677
const FLOAT4_TYPE = 57678
const FLOAT8_TYPE = 57679
const DECIMAL_TYPE = 57680
const NUMERIC = 57681
const TIME = 57682
const TIMESTAMP = 57683
const DATETIME = 57684
const YEAR = 57685
const CHAR = 57686
const VARCHAR = 57687
const BOOL = 57688
const CHARACTER = 57689
const VARBINARY = 57690
const NCHAR = 57691
const TEXT = 57692
const TINYTEXT = 57693
const MEDIUMTEXT = 57694
const LONGTEXT = 57695
const BLOB = 57696
const TINYBLOB = 57697
const MEDIUMBLOB = 57698
const LONGBLOB = 57699
const JSON = 57700
const JSON_SCHEMA_VALID = 57701
const JSON_SCHEMA_VALIDATION_REPORT = 57702
const ENUM = 57703
const GEOMETRY = 57704
const POINT = 57705
const LINESTRING = 57706
const POLYGON = 57707
const GEOMCOLLECTION = 57708
const GEOMETRYCOLLECTION = 57709
const MULTIPOINT = 57710
const MULTILINESTRING = 57711
const MULTIPOLYGON = 57712
const ASCII = 57713
const UNICODE = 57714
const VECTOR = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const PURGE = 57722
const BEFORE = 57723
const CODE = 57724
const COLLATION = 57725
const COLUMNS = 57726
const DATABASES = 57727
const ENGINES = 57728
const EVENT = 57729
const EXTENDED = 57730
const FIELDS = 57731
const FULL = 57732
const FUNCTION = 57733
const GTID_EXECUTED = 57734
const KEYSPACES = 57735
const OPEN = 57736
const PLUGINS = 57737
const PRIVILEGES = 57738
const PROCESSLIST = 57739
const SCHEMAS = 57740
const TABLES = 57741
const TRIGGERS = 57742
const USER = 57743
const VGTID_EXECUTED = 57744
const VITESS_KEYSPACES = 57745
const VITESS_METADATA = 57746
const VITESS_MIGRATIONS = 57747
const VITESS_REPLICATION_STATUS = 57748
const VITESS_SHARDS = 57749
const VITESS_TABLETS = 57750
const VITESS_TARGET = 57751
const VSCHEMA = 57752
const VITESS_THROTTLED_APPS = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const ADDDATE = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_DATE = 57769
const CURDATE = 57770
const DATE_ADD = 57771
const DATE_SUB = 57772
const NOW = 57773
const SUBDATE = 57774
const CURTIME = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const CURRENT_USER = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const SYSDATE = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_HOUR = 57805
const SQL_TSI_MINUTE = 57806
const SQL_TSI_MONTH = 57807
const SQL_TSI_QUARTER = 57808
const SQL_TSI_SECOND = 57809
const SQL_TSI_MICROSECOND = 57810
const SQL_TSI_YEAR = 57811
const REPLACE = 57812
const CONVERT = 57813
const CAST = 57814
const SUBSTR = 57815
const SUBSTRING = 57816
const MID = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const ANY_VALUE = 57858
const REGEXP_INSTR = 57859
const REGEXP_LIKE = 57860
const REGEXP_REPLACE = 57861
const REGEXP_SUBSTR = 57862
const ExtractValue = 57863
const UpdateXML = 57864
const GET_LOCK = 57865
const RELEASE_LOCK = 57866
const RELEASE_ALL_LOCKS = 57867
const IS_FREE_LOCK = 57868
const IS_USED_LOCK = 57869
const LOCATE = 57870
const POSITION = 57871
const ST_GeometryCollectionFromText = 57872
const ST_GeometryFromText = 57873
const ST_LineStringFromText = 57874
const ST_MultiLineStringFromText = 57875
const ST_MultiPointFromText = 57876
const ST_MultiPolygonFromText = 57877
const ST_PointFromText = 57878
const ST_PolygonFromText = 57879
const ST_GeometryCollectionFromWKB = 57880
const ST_GeometryFromWKB = 57881
const ST_LineStringFromWKB = 57882
const ST_MultiLineStringFromWKB = 57883
const ST_MultiPointFromWKB = 57884
const ST_MultiPolygonFromWKB = 57885
const ST_PointFromWKB = 57886
const ST_PolygonFromWKB = 57887
const ST_AsBinary = 57888
const ST_AsText = 57889
const ST_Dimension = 57890
const ST_Envelope = 57891
const ST_IsSimple = 57892
const ST_IsEmpty = 57893
const ST_GeometryType = 57894
const ST_X = 57895
const ST_Y = 57896
const ST_Latitude = 57897
const ST_Longitude = 57898
const ST_EndPoint = 57899
const ST_IsClosed = 57900
const ST_Length = 57901
const ST_NumPoints = 57902
const ST_StartPoint = 57903
const ST_PointN = 57904
const ST_Area = 57905
const ST_Centroid = 57906
const ST_ExteriorRing = 57907
const ST_InteriorRingN = 57908
const ST_NumInteriorRings = 57909
const ST_NumGeometries = 57910
const ST_GeometryN = 57911
const ST_LongFromGeoHash = 57912
const ST_PointFromGeoHash = 57913
const ST_LatFromGeoHash = 57914
const ST_GeoHash = 57915
const ST_AsGeoJSON = 57916
const ST_GeomFromGeoJSON = 57917
const MATCH = 57918
const AGAINST = 57919
const BOOLEAN = 57920
const LANGUAGE = 57921
const WITH = 57922
const QUERY = 57923
const EXPANSION = 57924
const WITHOUT = 57925
const VALIDATION = 57926
const ROLLUP = 57927
const UNUSED = 57928
const ARRAY = 57929
const BYTE = 57930
const CUME_DIST = 57931
const DESCRIPTION = 57932
const DENSE_RANK = 57933
const EMPTY = 57934
const EXCEPT = 57935
const FIRST_VALUE = 57936
const GROUPING = 57937
const GROUPS = 57938
const JSON_TABLE = 57939
const LAG = 57940
const LAST_VALUE = 57941
const LATERAL = 57942
const LEAD = 57943
const NTH_VALUE = 57944
const NTILE = 57945
const OF = 57946
const OVER = 57947
const PERCENT_RANK = 57948
const RANK = 57949
const RECURSIVE = 57950
const ROW_NUMBER = 57951
const SYSTEM = 57952
const WINDOW = 57953
const ACTIVE = 57954
const ADMIN = 57955
const AUTOEXTEND_SIZE = 57956
const BUCKETS = 57957
const CLONE = 57958
const COLUMN_FORMAT = 57959
const COMPONENT = 57960
const DEFINITION = 57961
const ENFORCED = 57962
const ENGINE_ATTRIBUTE = 57963
const EXCLUDE = 57964
const FOLLOWING = 57965
const GET_MASTER_PUBLIC_KEY = 57966
const HISTOGRAM = 57967
const HISTORY = 57968
const INACTIVE = 57969
const INVISIBLE = 57970
const LOCKED = 57971
const MASTER_COMPRESSION_ALGORITHMS = 57972
const MASTER_PUBLIC_KEY_PATH = 57973
const MASTER_TLS_CIPHERSUITES = 57974
const MASTER_ZSTD_COMPRESSION_LEVEL = 57975
const NESTED = 57976
const NETWORK_NAMESPACE = 57977
const NOWAIT = 57978
const NULLS = 57979
const OJ = 57980
const OLD = 57981
const OPTIONAL = 57982
const ORDINALITY = 57983
const ORGANIZATION = 57984
const OTHERS = 57985
const PARTIAL = 57986
const PATH = 57987
const PERSIST = 57988
const PERSIST_ONLY = 57989
const PRECEDING = 57990
const PRIVILEGE_CHECKS_USER = 57991
const PROCESS = 57992
const RANDOM = 57993
const REFERENCE = 57994
const REQUIRE_ROW_FORMAT = 57995
const RESOURCE = 57996
const RESPECT = 57997
const RESTART = 57998
const RETAIN = 57999
const REUSE = 58000
const ROLE = 58001
const SECONDARY = 58002
const SECONDARY_ENGINE = 58003
const SECONDARY_ENGINE_ATTRIBUTE = 58004
const SECONDARY_LOAD = 58005
const SECONDARY_UNLOAD = 58006
const SIMPLE = 58007
const SKIP = 58008
const SRID = 58009
const THREAD_PRIORITY = 58010
const TIES = 58011
const UNBOUNDED = 58012
const VCPU = 58013
const VISIBLE = 58014
const RETURNING = 58015
const MANUAL = 58016
const PARALLEL = 58017
const QUALIFY = 58018
const TABLESAMPLE = 58019
const FORMAT_BYTES = 58020
const FORMAT_PICO_TIME = 58021
const PS_CURRENT_THREAD_ID = 58022
const PS_THREAD_ID = 58023
const GTID_SUBSET = 58024
const GTID_SUBTRACT = 58025
const WAIT_FOR_EXECUTED_GTID_SET = 58026
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58027
const FORMAT = 58028
const TREE = 58029
const VITESS = 58030
const TRADITIONAL = 58031
const VTEXPLAIN = 58032
const VEXPLAIN = 58033
const PLAN = 58034
const LOCAL = 58035
const LOW_PRIORITY = 58036
const NO_WRITE_TO_BINLOG = 58037
const LOGS = 58038
const ERROR = 58039
const GENERAL = 58040
const HOSTS = 58041
const OPTIMIZER_COSTS = 58042
const USER_RESOURCES = 58043
const SLOW = 58044
const CHANNEL = 58045
const RELAY = 58046
const EXPORT = 58047
const CURRENT = 58048
const ROW = 58049
const ROWS = 58050
const AVG_ROW_LENGTH = 58051
const CONNECTION = 58052
const CHECKSUM = 58053
const DELAY_KEY_WRITE = 58054
const ENCRYPTION = 58055
const ENGINE = 58056
const INSERT_METHOD = 58057
const MAX_ROWS = 58058
const MIN_ROWS = 58059
const PACK_KEYS = 58060
const PASSWORD = 58061
const FIXED = 58062
const DYNAMIC = 58063
const COMPRESSED = 58064
const REDUNDANT = 58065
const COMPACT = 58066
const ROW_FORMAT = 58067
const STATS_AUTO_RECALC = 58068
const STATS_PERSISTENT = 58069
const STATS_SAMPLE_PAGES = 58070
const STORAGE = 58071
const MEMORY = 58072
const DISK = 58073
const PARTITIONS = 58074
const LINEAR = 58075
const RANGE = 58076
const LIST = 58077
const SUBPARTITION = 58078
const SUBPARTITIONS = 58079
const HASH = 58080

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 53,
	1, 164,
	756, 164,
	-2, 172,
	-1, 54,
	149, 172,
	191, 172,
	364, 172,
	-2, 532,
	-1, 62,
	38, 793,
	254, 793,
	265, 793,
	300, 807,
	301, 807,
	-2, 795,
	-1, 67,
	256, 831,
	-2, 829,
	-1, 129,
	1, 165,
	756, 165,
	-2, 172,
	-1, 140,
	150, 417,
	259, 417,
	-2, 521,
	-1, 159,
	149, 172,
	191, 172,
	364, 172,
	-2, 541,
	-1, 758,
	177, 41,
	-2, 43,
	-1, 967,
	95, 1655,
	-2, 1491,
	-1, 968,
	95, 1656,
	236, 1660,
	-2, 1492,
	-1, 969,
	236, 1659,
	-2, 42,
	-1, 1055,
	65, 905,
	-2, 918,
	-1, 1060,
	253, 1638,
	-2, 1552,
	-1, 1137,
	264, 1118,
	269, 1118,
	-2, 428,
	-1, 1225,
	1, 589,
	756, 589,
	-2, 172,
	-1, 1537,
	236, 1660,
	-2, 1492,
	-1, 1750,
	65, 906,
	-2, 922,
	-1, 1751,
	65, 907,
	-2, 923,
	-1, 1827,
	149, 172,
	191, 172,
	364, 172,
	-2, 467,
	-1, 1904,
	150, 417,
	259, 417,
	-2, 521,
	-1, 1913,
	264, 1119,
	269, 1119,
	-2, 429,
	-1, 2361,
	236, 1664,
	-2, 1658,
	-1, 2362,
	236, 1660,
	-2, 1656,
	-1, 2479,
	149, 172,
	191, 172,
	364, 172,
	-2, 468,
	-1, 2486,
	28, 193,
	-2, 195,
	-1, 2960,
	86, 99,
	96, 99,
	-2, 985,
	-1, 3024,
	731, 711,
	-2, 685,
	-1, 3258,
	55, 1597,
	-2, 1591,
	-1, 4091,
	731, 711,
	-2, 699,
	-1, 4181,
	98, 643,
	104, 643,
	114, 643,
	193, 643,
	194, 643,
	195, 643,
	196, 643,
	197, 643,
	198, 643,
	199, 643,
	200, 643,
	201, 643,
	202, 643,
	203, 643,
	204, 643,
	205, 643,
	206, 643,
	207, 643,
	208, 643,
	209, 643,
	210, 643,
	211, 643,
	212, 643,
	213, 643,
	214, 643,
	215, 643,
	216, 643,
	217, 643,
	218, 643,
	219, 643,
	220, 643,
	221, 643,
	222, 643,
	223, 643,
	224, 643,
	225, 643,
	226, 643,
	227, 643,
	228, 643,
	229, 643,
	230, 643,
	231, 643,
	232, 643,
	233, 643,
	234, 643,
	-2, 2037,
}

const yyPrivate = 57344

const yyLast = 57071

var yyAct = [...]int{
	983, 3740, 3741, 88, 3739, 4253, 4265, 4073, 1830, 4123,
	759, 3399, 3310, 978, 2154, 3317, 970, 4160, 4220, 4055,
	2390, 1292, 3363, 3978, 2189, 2535, 3354, 3368, 3365, 3364,
	3362, 4221, 3367, 3366, 3271, 4053, 3109, 2476, 2092, 3677,
	4179, 5, 2392, 3194, 3535, 3383, 3325, 2545, 2166, 3382,
	762, 3275, 3272, 3786, 3575, 3588, 3083, 3108, 971, 932,
	790, 3385, 1294, 2033, 3689, 3259, 2920, 126, 756, 2447,
	2514, 3565, 757, 2994, 2431, 3065, 3406, 931, 3021, 2905,
	2450, 2519, 2995, 2576, 1107, 2996, 2464, 1053, 1887, 88,
	3610, 2945, 1169, 168, 936, 2926, 41, 42, 1075, 1050,
	752, 1929, 2904, 2452, 43, 2410, 3269, 1082, 2451, 2878,
	2894, 1053, 2346, 2188, 2314, 2554, 2150, 2100, 3056, 2439,
	154, 2521, 2987, 1127, 1132, 1819, 1117, 2933, 1911, 2962,
	985, 1799, 1785, 1768, 104, 2313, 2419, 2454, 1731, 1550,
	2194, 108, 109, 2125, 2114, 1458, 772, 1475, 2029, 1918,
	3274, 1145, 1111, 1114, 1115, 1135, 2510, 1138, 1133, 1134,
	1818, 2511, 1804, 1092, 1094, 103, 760, 1063, 2432, 3777,
	767, 1218, 1753, 2876, 2221, 1509, 1533, 111, 2091, 1059,
	2202, 1052, 86, 1056, 1282, 1057, 2041, 3536, 137, 172,
	1074, 132, 3769, 1058, 130, 131, 1903, 138, 3599, 1048,
	1061, 1554, 1087, 95, 110, 1077, 102, 1290, 4254, 933,
	1268, 1229, 1223, 2547, 2548, 2549, 85, 3678, 3351, 1559,
	749, 4107, 2547, 3012, 1086, 3044, 3043, 2591, 3670, 1476,
	1047, 692, 4203, 1787, 3073, 3074, 4103, 4102, 1067, 1217,
	1476, 2107, 2106, 133, 1995, 2105, 2104, 4108, 1108, 1171,
	2103, 139, 2102, 1174, 2072, 1238, 3009, 2874, 2387, 2388,
	2643, 3255, 1188, 1189, 1190, 3635, 1193, 1194, 1195, 1196,
	1068, 3198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1102,
	1049, 1101, 2922, 1149, 750, 1492, 3744, 1148, 3744, 689,
	2580, 690, 1124, 1051, 1790, 4224, 4258, 1065, 2, 734,
	1788, 4275, 4219, 1239, 1076, 1182, 1175, 1178, 1179, 133,
	4207, 1123, 4081, 4244, 1122, 1121, 1472, 3539, 3538, 1469,
	3014, 4257, 4205, 3373, 1791, 3034, 3373, 1486, 1119, 2428,
	1789, 1191, 4103, 1783, 2579, 4206, 2427, 984, 1486, 3370,
	3037, 4056, 115, 116, 117, 2839, 120, 4204, 2112, 1046,
	3425, 1764, 4175, 196, 3974, 3973, 684, 1100, 1104, 935,
	3683, 1173, 728, 3684, 1100, 1104, 935, 1172, 747, 748,
	4234, 97, 3984, 4201, 3701, 1460, 3690, 133, 1041, 1042,
	1043, 1044, 3743, 3371, 3743, 1055, 3371, 1035, 87, 1060,
	4157, 2650, 973, 1036, 987, 988, 989, 974, 2536, 2573,
	975, 976, 3983, 977, 1125, 2159, 728, 3451, 4184, 2421,
	1224, 2936, 3377, 728, 2875, 3377, 1089, 1090, 3307, 3308,
	3306, 990, 991, 1275, 1471, 1277, 2971, 3072, 2647, 2970,
	2471, 2472, 2972, 1820, 1489, 1821, 1490, 1491, 2470, 2937,
	1482, 2084, 2085, 1474, 3055, 1263, 1264, 1287, 4161, 1258,
	1039, 1482, 3700, 1246, 1246, 1038, 3015, 4074, 1247, 1247,
	2983, 2648, 1488, 1274, 1276, 2037, 1245, 1259, 1244, 2489,
	2488, 97, 2929, 2930, 3130, 728, 3433, 1252, 3431, 1453,
	87, 2578, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 4165, 2389, 2530, 3374, 4189, 1470,
	3374, 99, 87, 3403, 3401, 2641, 87, 740, 1459, 89,
	2083, 742, 2087, 746, 1816, 3407, 2230, 3057, 4187, 4225,
	2524, 4026, 1735, 4027, 1265, 3022, 2555, 2900, 4194, 4195,
	3657, 1286, 2598, 97, 1266, 3394, 1260, 1285, 3327, 3328,
	4226, 1510, 1222, 1216, 1272, 4188, 1253, 729, 1273, 2644,
	1985, 2645, 1226, 3800, 3241, 2596, 1279, 99, 1278, 1093,
	2411, 1779, 3242, 3422, 1452, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1519, 1518, 1520, 1521, 1284, 2038, 2914, 2409,
	2915, 1267, 2617, 1271, 2618, 97, 2619, 2599, 2186, 97,
	3060, 729, 2411, 3958, 1986, 3672, 1987, 2595, 729, 2594,
	3404, 3402, 3671, 1261, 1262, 2620, 1198, 1220, 1197, 2558,
	2597, 3748, 2448, 3131, 1128, 2222, 3395, 3396, 1129, 3668,
	2224, 1129, 1167, 3010, 2229, 2225, 1166, 1165, 2226, 2227,
	2228, 1164, 1163, 2223, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 1162, 1161, 1738, 3197, 3326, 3585, 1160,
	1155, 1896, 1168, 3329, 3349, 4276, 1103, 1097, 1095, 3329,
	729, 1112, 1177, 1103, 1097, 1095, 1141, 1112, 1140, 1112,
	2420, 1110, 1176, 2523, 2605, 2601, 2603, 2604, 2602, 2606,
	2607, 2608, 2609, 1291, 1140, 1291, 1291, 2178, 2167, 2168,
	2169, 2170, 2180, 2171, 2172, 2173, 2185, 2181, 2174, 2175,
	2182, 2183, 2184, 2176, 2177, 2179, 2030, 1088, 3061, 2584,
	1481, 1478, 1479, 1480, 1485, 1487, 1484, 1219, 1483, 2583,
	2026, 1481, 1478, 1479, 1480, 1485, 1487, 1484, 1477, 1483,
	1461, 1185, 3016, 1221, 3667, 1053, 1534, 1539, 1540, 1477,
	1543, 1545, 1546, 1547, 1548, 1549, 1817, 1552, 1553, 1555,
	1555, 1544, 1555, 1555, 1560, 1560, 1560, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1531, 1449, 1280, 1232, 1687, 4080, 1689, 1690, 1691,
	1692, 1693, 1450, 1451, 3013, 1527, 1528, 1529, 1530, 1560,
	1560, 1560, 1560, 1560, 1560, 1541, 3036, 1997, 1996, 1998,
	1999, 2000, 1787, 1126, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 3633, 3634,
	3636, 2577, 2649, 4126, 2912, 3699, 3742, 1096, 3742, 1147,
	1147, 3523, 728, 96, 1096, 1535, 4163, 1243, 728, 97,
	3035, 1556, 1158, 1557, 1558, 728, 1156, 1468, 3586, 1524,
	1524, 4269, 1917, 1222, 3577, 1230, 1231, 1242, 1726, 1248,
	1249, 1250, 1251, 3245, 1561, 1562, 3375, 3376, 3313, 3375,
	3376, 90, 4162, 1147, 3423, 2435, 2879, 2881, 3046, 3379,
	1192, 2899, 3379, 1288, 1289, 1728, 2418, 1233, 2435, 2417,
	1224, 1734, 2416, 3032, 2412, 2027, 1237, 2527, 683, 1184,
	1053, 1525, 1526, 2648, 1053, 3064, 4199, 2927, 4069, 1763,
	1053, 1234, 1256, 3054, 2575, 3206, 3053, 3624, 1147, 3314,
	3606, 2967, 2932, 4193, 2851, 96, 2162, 1808, 1724, 1688,
	1725, 1236, 1146, 1146, 3205, 3077, 2665, 691, 2528, 129,
	2014, 2477, 1524, 1521, 3316, 2526, 3305, 2676, 1504, 1764,
	1775, 1071, 123, 1778, 1283, 4094, 1170, 3663, 3104, 2015,
	3598, 1916, 4191, 2422, 3311, 2195, 4235, 4192, 2096, 88,
	2023, 1822, 1269, 3225, 3223, 2042, 1146, 96, 1241, 2529,
	2910, 96, 1782, 1491, 3327, 3328, 2195, 3795, 2685, 2525,
	3641, 3312, 1159, 3084, 1742, 3640, 1157, 2562, 1746, 1926,
	1725, 1744, 1745, 2203, 1052, 108, 109, 1890, 1694, 1695,
	1696, 1697, 1698, 1699, 1516, 1517, 1519, 1518, 1520, 1521,
	2204, 1146, 1147, 2130, 1925, 3318, 1732, 1140, 1143, 1144,
	124, 1112, 4086, 2676, 1915, 1137, 1141, 2131, 1522, 1523,
	2129, 111, 1490, 1491, 1221, 2572, 1786, 729, 2567, 2567,
	2880, 2570, 1222, 729, 1772, 1158, 1136, 1156, 4227, 3625,
	729, 1774, 1773, 42, 1066, 4271, 4229, 1893, 1894, 1895,
	1909, 2433, 2434, 1766, 3067, 3966, 3067, 3086, 1492, 3066,
	3696, 3066, 3697, 4267, 2433, 2434, 4268, 3965, 4266, 1740,
	2351, 2571, 2569, 3326, 1980, 2011, 3956, 2012, 1147, 3713,
	2013, 1743, 1902, 1741, 1779, 3329, 1049, 1931, 1729, 1932,
	1234, 1934, 1936, 1781, 1962, 1940, 1942, 1944, 1946, 1948,
	3712, 2574, 1769, 1771, 1921, 1146, 1051, 1183, 1255, 1291,
	1270, 1180, 1240, 2043, 1970, 1971, 1147, 1225, 1492, 1257,
	1976, 1977, 1813, 1814, 1920, 1919, 1919, 3648, 1882, 2035,
	1776, 3096, 3095, 3094, 4127, 1147, 3088, 3253, 3092, 2201,
	3087, 4061, 3085, 2118, 2119, 2655, 2656, 3090, 3647, 1900,
	4240, 1764, 1492, 4277, 1455, 1912, 3089, 1899, 1898, 2019,
	97, 2017, 2018, 2016, 2020, 2021, 2022, 1514, 1515, 1516,
	1517, 1519, 1518, 1520, 1521, 3091, 3093, 1764, 2440, 2441,
	2128, 1146, 2010, 4128, 1966, 2200, 1150, 1140, 1923, 3637,
	4062, 1152, 1747, 3352, 3345, 1153, 1151, 1498, 1499, 1500,
	1501, 1502, 1503, 1497, 1494, 2992, 3315, 1489, 2351, 1490,
	1491, 2031, 2348, 2005, 1492, 1958, 1154, 2003, 1961, 1146,
	1963, 2350, 2991, 1221, 734, 1140, 1143, 1144, 2990, 1112,
	1510, 1992, 3076, 1137, 1141, 2533, 2006, 982, 1146, 2118,
	2119, 2116, 2117, 1150, 1140, 133, 1990, 1123, 1152, 4278,
	1122, 1121, 1153, 1151, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1519, 1518, 1520, 1521, 1492, 2115, 1489, 2985, 1490,
	1491, 2048, 987, 988, 989, 1989, 3106, 1988, 1978, 1291,
	1291, 1972, 1969, 1968, 2004, 2044, 2045, 1967, 2002, 2712,
	1938, 1739, 1492, 1510, 2070, 88, 4228, 1793, 88, 2049,
	1816, 1489, 1991, 1490, 1491, 4089, 2056, 2057, 2058, 1510,
	4088, 1492, 1506, 3630, 1507, 734, 2069, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521, 1508, 1522,
	1523, 1505, 4065, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1519, 1518, 1520, 1521, 97, 2974, 1794, 734, 2133, 4064,
	2135, 2136, 2137, 2138, 2139, 2140, 2142, 2144, 2145, 2146,
	2147, 2148, 2149, 1489, 1492, 1490, 1491, 1892, 4255, 2157,
	2157, 2158, 2155, 2155, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1519, 1518, 1520, 1521, 1764, 1764, 1492, 2543, 42,
	2542, 2541, 42, 2540, 4063, 2539, 2046, 2538, 2120, 3961,
	1726, 3946, 1492, 2050, 4230, 2052, 2053, 2054, 2055, 2724,
	114, 3945, 2059, 3794, 1489, 195, 1490, 1491, 3792, 1488,
	1764, 113, 3709, 112, 2071, 1512, 1513, 1514, 1515, 1516,
	1517, 1519, 1518, 1520, 1521, 2257, 105, 1723, 134, 105,
	1722, 1489, 1492, 1490, 1491, 107, 106, 2255, 3319, 106,
	4215, 1764, 3323, 1721, 177, 3645, 4238, 1764, 4082, 3322,
	1489, 2241, 1490, 1491, 1892, 1764, 1488, 1764, 1892, 4156,
	1724, 3629, 1725, 3408, 86, 3405, 2097, 86, 3348, 4171,
	1764, 1492, 2127, 1892, 4137, 3993, 2077, 2078, 1892, 4133,
	3992, 2190, 3347, 3324, 4169, 1764, 1764, 1492, 3320, 2186,
	2976, 3058, 1797, 3321, 3001, 2134, 2988, 1764, 4046, 1764,
	1764, 3950, 2132, 1489, 174, 1490, 1491, 175, 1720, 3440,
	3681, 4079, 3969, 1764, 2674, 1892, 3957, 2338, 2339, 2340,
	2341, 2342, 3681, 1764, 2673, 1510, 1489, 1714, 1490, 1491,
	2359, 2161, 2638, 194, 2363, 1492, 2265, 2366, 2367, 1892,
	3679, 1489, 2630, 1490, 1491, 2567, 1764, 2726, 1552, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521,
	2347, 1492, 2629, 1796, 1535, 2205, 2206, 2207, 2208, 2349,
	2589, 2361, 2360, 2384, 3604, 1764, 2240, 2588, 1492, 2219,
	1764, 1489, 2196, 1490, 1491, 1510, 2430, 2664, 2178, 2167,
	2168, 2169, 2170, 2180, 2171, 2172, 2173, 2185, 2181, 2174,
	2175, 2182, 2183, 2184, 2176, 2177, 2179, 2395, 2426, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521,
	1489, 2358, 1490, 1491, 2364, 2365, 1492, 4167, 1764, 3949,
	1492, 2806, 1764, 3583, 2456, 2073, 1489, 2039, 1490, 1491,
	2001, 1492, 2897, 108, 109, 3338, 3337, 3023, 178, 107,
	2359, 3335, 3336, 4039, 1764, 2722, 107, 184, 3333, 3334,
	1492, 1993, 1720, 3333, 3332, 108, 109, 1718, 2394, 1510,
	4037, 1764, 1716, 2126, 1492, 1717, 1715, 2406, 1719, 2942,
	1764, 1492, 2648, 3045, 1489, 1983, 1490, 1491, 2486, 1886,
	3026, 2361, 2445, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1519, 1518, 1520, 1521, 3019, 3020, 113, 1117, 2160, 1764,
	1489, 2382, 1490, 1491, 1764, 3601, 1979, 1975, 4034, 1764,
	2895, 1067, 4016, 1764, 1492, 2414, 1974, 1489, 2458, 1490,
	1491, 1973, 195, 2481, 1764, 1117, 2495, 2496, 2497, 2498,
	1795, 2480, 2963, 1492, 2490, 2407, 2491, 2492, 2493, 2494,
	1492, 2963, 2462, 4078, 2400, 134, 2401, 1892, 1891, 3006,
	2500, 1492, 2413, 2502, 2503, 2504, 2505, 3953, 2423, 1281,
	1492, 177, 2516, 2484, 3664, 1489, 2556, 1490, 1491, 1489,
	1488, 1490, 1491, 3600, 114, 2522, 169, 2568, 2443, 2941,
	1489, 2934, 1490, 1491, 2934, 113, 2485, 112, 2468, 2467,
	2466, 1492, 1886, 1885, 1102, 107, 1101, 2483, 2482, 1489,
	2964, 1490, 1491, 2553, 3300, 2681, 3564, 1764, 3597, 2964,
	2966, 1828, 1827, 1489, 2648, 1490, 1491, 2532, 3270, 2648,
	1489, 174, 1490, 1491, 175, 3557, 1764, 1492, 1488, 3597,
	1054, 4121, 3554, 1764, 4093, 1892, 2942, 3649, 1492, 3543,
	2942, 2567, 3335, 3552, 1764, 2517, 2513, 2506, 2508, 2509,
	194, 2531, 3515, 1764, 2561, 1492, 2581, 2564, 2942, 2565,
	1764, 3597, 1492, 1489, 3228, 1490, 1491, 1492, 2469, 1149,
	2806, 2709, 2708, 1148, 1492, 2517, 2567, 2563, 2560, 1919,
	2559, 99, 1489, 2680, 1490, 1491, 2672, 2550, 2582, 1489,
	1492, 1490, 1491, 2585, 3650, 3651, 3652, 2586, 2587, 1954,
	1489, 2438, 1490, 1491, 2425, 1780, 1492, 2385, 2160, 1489,
	1492, 1490, 1491, 97, 3355, 2098, 1492, 2082, 2025, 3513,
	1764, 1815, 1131, 2653, 1130, 4197, 2593, 1765, 1767, 2998,
	3509, 1764, 1053, 1053, 1053, 4139, 2592, 3980, 1492, 3947,
	1489, 3807, 1490, 1491, 127, 3662, 1224, 3506, 1764, 3659,
	3643, 2661, 1545, 2663, 1545, 1492, 1955, 1956, 1957, 3504,
	1764, 3456, 2666, 3455, 2667, 178, 3502, 1764, 1888, 2515,
	2668, 3357, 3353, 3251, 184, 3027, 1489, 2512, 1490, 1491,
	2507, 1492, 3500, 1764, 2501, 2499, 2623, 1489, 2008, 1490,
	1491, 1492, 1914, 1910, 2671, 1884, 1492, 2997, 3498, 1764,
	125, 734, 3496, 1764, 1489, 3400, 1490, 1491, 3494, 1764,
	1492, 1489, 3981, 1490, 1491, 170, 1489, 2530, 1490, 1491,
	3611, 3612, 182, 1489, 2398, 1490, 1491, 2075, 4250, 4248,
	3492, 1764, 1492, 4222, 4101, 2361, 2360, 2691, 2640, 1489,
	4021, 1490, 1491, 3614, 1492, 3582, 3617, 3490, 1764, 3581,
	728, 2998, 3580, 3270, 2706, 1489, 2646, 1490, 1491, 1489,
	1492, 1490, 1491, 190, 1492, 1489, 3246, 1490, 1491, 2624,
	2654, 3292, 3290, 3488, 1764, 3616, 3293, 3291, 2657, 2658,
	2659, 4097, 3289, 2660, 2993, 1492, 2127, 1489, 3988, 1490,
	1491, 3288, 688, 723, 2076, 3294, 1492, 2951, 2952, 3982,
	1492, 2429, 3619, 169, 1489, 1492, 1490, 1491, 2662, 1069,
	171, 176, 173, 179, 180, 181, 183, 185, 186, 187,
	188, 3653, 1792, 2404, 3486, 1764, 189, 191, 192, 193,
	1489, 3605, 1490, 1491, 1492, 3233, 3484, 1764, 3232, 1492,
	1489, 708, 1490, 1491, 2684, 1489, 1492, 1490, 1491, 4060,
	3590, 1950, 3482, 1764, 706, 3593, 3480, 1764, 3589, 1489,
	1070, 1490, 1491, 3785, 3768, 3787, 3767, 751, 2632, 2633,
	2850, 1072, 3257, 2635, 3654, 3655, 3656, 3478, 1764, 1073,
	2669, 1489, 2636, 1490, 1491, 3331, 1492, 2024, 3476, 1764,
	1037, 2838, 3559, 1489, 703, 1490, 1491, 3462, 1764, 2981,
	2720, 3002, 2882, 718, 1951, 1952, 1953, 2203, 1081, 1489,
	2616, 1490, 1491, 1489, 2615, 1490, 1491, 2614, 713, 3766,
	2157, 2885, 1080, 2155, 2204, 2613, 3438, 1764, 2612, 2611,
	716, 2871, 1764, 726, 1489, 1053, 1490, 1491, 2869, 1764,
	2610, 727, 2123, 2121, 2122, 1489, 2883, 1490, 1491, 1489,
	1187, 1490, 1491, 1186, 1489, 3416, 1490, 1491, 2939, 2940,
	2997, 2384, 1492, 3260, 3262, 729, 1492, 2456, 3070, 1454,
	1053, 2959, 3263, 3033, 105, 2886, 134, 2888, 2844, 1764,
	107, 107, 105, 1489, 106, 1490, 1491, 2126, 1489, 114,
	1490, 1491, 106, 3595, 4263, 1489, 2938, 1490, 1491, 1492,
	113, 693, 112, 695, 709, 3250, 731, 4174, 730, 699,
	107, 697, 701, 710, 702, 2919, 696, 2627, 707, 2440,
	2441, 698, 711, 712, 715, 719, 720, 721, 717, 714,
	2903, 705, 732, 1732, 2873, 1489, 1492, 1490, 1491, 3976,
	2928, 3330, 170, 1492, 2955, 2424, 112, 2957, 1118, 182,
	2893, 3566, 42, 2652, 2821, 1764, 2898, 2902, 3555, 2901,
	2081, 2956, 3231, 1725, 2958, 1492, 1786, 2080, 2917, 1492,
	3230, 4045, 4044, 4024, 114, 3793, 2984, 2986, 1492, 3031,
	2931, 2916, 1492, 2977, 113, 113, 1492, 112, 3778, 2961,
	190, 2813, 1764, 2947, 2950, 2951, 2952, 2948, 3791, 2949,
	2953, 1492, 3790, 2965, 3779, 2968, 1492, 3660, 3594, 3592,
	2522, 1489, 2975, 1490, 1491, 1489, 2978, 1490, 1491, 3358,
	2934, 2551, 1897, 1079, 3576, 2198, 3000, 3752, 2804, 1764,
	2199, 3003, 3004, 3042, 2989, 2802, 1764, 171, 176, 173,
	179, 180, 181, 183, 185, 186, 187, 188, 1489, 114,
	1490, 1491, 2999, 189, 191, 192, 193, 2789, 1764, 2897,
	113, 2787, 1764, 3134, 3007, 4252, 4251, 1492, 2261, 2710,
	3521, 3039, 2396, 1809, 2785, 1764, 1801, 4251, 2783, 1764,
	4252, 1902, 1492, 118, 119, 1489, 4066, 1490, 1491, 3082,
	3628, 3, 1489, 3517, 1490, 1491, 101, 3099, 2781, 1764,
	2095, 3028, 3029, 10, 1, 1492, 2093, 3038, 2094, 9,
	1045, 8, 3100, 1457, 1489, 1456, 1490, 1491, 1489, 3632,
	1490, 1491, 1492, 4186, 704, 3080, 3081, 1489, 1492, 1490,
	1491, 1489, 2386, 1490, 1491, 1489, 1730, 1490, 1491, 4223,
	3097, 4182, 4183, 3059, 1994, 1984, 3691, 3078, 2344, 2312,
	1489, 3062, 1490, 1491, 3977, 1489, 3361, 1490, 1491, 2779,
	1764, 2557, 3658, 2520, 3115, 3116, 3117, 3118, 3119, 3120,
	3121, 3122, 3123, 3124, 2777, 1764, 1492, 1139, 2376, 159,
	2478, 2479, 4151, 1492, 3132, 122, 1105, 121, 1142, 1492,
	1254, 2552, 3682, 1492, 2982, 1765, 2383, 2775, 1764, 2487,
	1492, 3098, 1834, 3040, 1832, 1833, 1831, 1836, 1835, 1492,
	4125, 733, 3424, 2711, 2773, 1764, 1489, 3522, 1490, 1491,
	2771, 1764, 2086, 741, 2954, 735, 1492, 197, 1823, 1802,
	2079, 1489, 724, 1490, 1491, 1181, 2408, 694, 3339, 2590,
	700, 1542, 3079, 2074, 3174, 3229, 3176, 725, 2969, 1099,
	3192, 3136, 3068, 1091, 1489, 3069, 1490, 1491, 2397, 2887,
	1098, 3954, 3187, 3188, 3189, 3190, 3278, 3587, 2769, 1764,
	3256, 1489, 3258, 1490, 1491, 2767, 1764, 1489, 2921, 1490,
	1491, 2765, 1764, 3210, 3261, 2763, 1764, 1492, 3199, 3254,
	4059, 3784, 2761, 1764, 4138, 2979, 1798, 3201, 3542, 2683,
	3018, 2759, 1764, 2193, 1532, 766, 2455, 937, 2456, 1784,
	3747, 2113, 2347, 764, 2347, 763, 3125, 761, 2757, 1764,
	1492, 2349, 2889, 2349, 1492, 1489, 2935, 1490, 1491, 1496,
	1492, 3172, 1489, 1495, 1490, 1491, 972, 2877, 1489, 1810,
	1490, 1491, 1489, 2946, 1490, 1491, 2944, 2943, 3277, 1489,
	88, 1490, 1491, 2456, 2456, 2456, 2456, 2456, 1489, 2534,
	1490, 1491, 2625, 2463, 3210, 3200, 3613, 3202, 3182, 3183,
	3184, 3185, 3186, 2456, 3209, 1489, 2456, 1490, 1491, 2755,
	1764, 3609, 4178, 2457, 2453, 2896, 3282, 923, 3237, 922,
	773, 3299, 1492, 765, 3227, 755, 986, 3221, 921, 920,
	1492, 3388, 2458, 3389, 2911, 1777, 1492, 3252, 2913, 2980,
	3240, 1492, 3453, 3236, 3234, 1492, 2750, 1764, 3244, 3247,
	3248, 3249, 2746, 1764, 1473, 1492, 1749, 1752, 2405, 3264,
	3265, 1770, 3235, 3421, 4084, 3378, 1489, 2651, 1490, 1491,
	2035, 3222, 3224, 3226, 1056, 3386, 1057, 2458, 2458, 2458,
	2458, 2458, 3281, 3301, 1058, 3295, 3302, 3284, 3285, 3450,
	3287, 3283, 1748, 3303, 3286, 108, 109, 2458, 4091, 1489,
	2458, 1490, 1491, 1489, 3369, 1490, 1491, 3676, 3350, 1489,
	3309, 1490, 1491, 3024, 2744, 1764, 2544, 3340, 70, 3342,
	46, 3341, 2737, 1764, 4054, 1492, 4122, 915, 2735, 1764,
	3343, 3344, 912, 3452, 3390, 3387, 3749, 3444, 3750, 3751,
	1492, 3195, 3196, 4104, 3359, 4105, 2522, 3442, 3380, 911,
	4106, 2250, 3391, 1492, 1467, 1464, 3008, 3397, 2088, 100,
	36, 35, 34, 33, 3267, 32, 26, 25, 24, 23,
	1492, 1489, 22, 1490, 1491, 1492, 3409, 3412, 3411, 1489,
	29, 1490, 1491, 1492, 19, 1489, 3273, 1490, 1491, 3419,
	1489, 3273, 1490, 1491, 1489, 21, 1490, 1491, 20, 3429,
	18, 1492, 3372, 4218, 1489, 4262, 1490, 1491, 3445, 3446,
	3447, 3448, 3449, 3426, 3427, 128, 3428, 2867, 56, 3430,
	53, 3432, 51, 3434, 136, 135, 54, 2947, 2950, 2951,
	2952, 2948, 2866, 2949, 2953, 52, 50, 3611, 3612, 49,
	1227, 47, 98, 31, 1545, 2862, 30, 17, 1545, 16,
	15, 14, 13, 12, 3544, 11, 3546, 3547, 3548, 7,
	6, 2670, 2861, 39, 3567, 2675, 3569, 2860, 38, 37,
	28, 3537, 3360, 27, 1489, 2859, 1490, 1491, 3541, 40,
	4, 3011, 2546, 0, 3420, 0, 0, 0, 2678, 1489,
	2679, 1490, 1491, 2858, 0, 0, 2687, 0, 0, 0,
	2689, 2690, 1489, 0, 1490, 1491, 0, 0, 0, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 1489,
	2707, 1490, 1491, 0, 1489, 3276, 1490, 1491, 0, 0,
	0, 0, 1489, 0, 1490, 1491, 3568, 3572, 3570, 0,
	0, 2456, 1726, 2713, 2714, 2715, 2716, 0, 2718, 2719,
	1489, 2721, 1490, 1491, 3626, 2723, 0, 0, 0, 2728,
	2729, 3584, 2730, 1492, 3591, 2733, 2734, 2736, 2738, 2739,
	2740, 2741, 2742, 2743, 2745, 2747, 2748, 2749, 2751, 1492,
	2753, 2754, 2756, 2758, 2760, 2762, 2764, 2766, 2768, 2770,
	2772, 2774, 2776, 2778, 2780, 2782, 2784, 2786, 2788, 2790,
	2791, 2792, 3574, 2794, 3618, 2796, 3381, 2798, 2799, 3620,
	2801, 2803, 2805, 3390, 3387, 3627, 2808, 3615, 3596, 753,
	2812, 3621, 3414, 3415, 2817, 2818, 2819, 2820, 1492, 0,
	0, 3391, 1492, 0, 0, 2458, 0, 2831, 2832, 2833,
	2834, 2835, 2836, 0, 0, 2840, 2841, 3644, 1492, 3646,
	3608, 0, 1492, 2843, 0, 2857, 3638, 3639, 2849, 0,
	0, 1492, 0, 2852, 2853, 2854, 2855, 2856, 0, 3622,
	3623, 2848, 1492, 0, 2863, 2864, 1492, 2865, 0, 0,
	2868, 2870, 2408, 0, 2872, 0, 0, 0, 0, 0,
	0, 3686, 3687, 0, 2884, 0, 1492, 0, 0, 0,
	1492, 0, 0, 0, 3669, 0, 3688, 0, 3673, 3674,
	3675, 0, 1489, 1492, 1490, 1491, 0, 0, 0, 0,
	2847, 0, 0, 0, 2846, 0, 2918, 0, 1489, 0,
	1490, 1491, 1078, 0, 0, 1084, 1084, 1492, 0, 0,
	2845, 0, 3703, 0, 2842, 0, 1492, 0, 0, 0,
	1492, 0, 0, 2837, 0, 3714, 0, 0, 0, 0,
	0, 1492, 0, 0, 2830, 1492, 0, 0, 2829, 1492,
	0, 0, 0, 0, 1492, 0, 0, 1489, 1492, 1490,
	1491, 1489, 3736, 1490, 1491, 0, 0, 0, 2828, 0,
	0, 0, 2827, 1492, 0, 0, 0, 1489, 0, 1490,
	1491, 1489, 1492, 1490, 1491, 2826, 3765, 0, 1492, 3772,
	1489, 3774, 1490, 1491, 0, 0, 0, 0, 0, 1492,
	3745, 1489, 0, 1490, 1491, 1489, 0, 1490, 1491, 2825,
	0, 0, 3775, 3755, 0, 3756, 3757, 3758, 2824, 0,
	0, 3277, 2823, 0, 88, 1489, 3277, 1490, 1491, 1489,
	0, 1490, 1491, 2822, 0, 0, 0, 2816, 1492, 0,
	0, 2815, 1489, 1492, 1490, 1491, 2814, 0, 0, 3776,
	2811, 1492, 0, 2157, 3809, 0, 2155, 1492, 0, 0,
	3788, 3708, 3801, 3789, 3799, 2810, 1489, 1492, 1490, 1491,
	3796, 0, 3798, 0, 2809, 1489, 0, 1490, 1491, 1489,
	2807, 1490, 1491, 0, 0, 0, 0, 0, 0, 3960,
	1489, 2800, 1490, 1491, 1489, 0, 1490, 1491, 1489, 3813,
	1490, 1491, 0, 1489, 0, 1490, 1491, 1489, 0, 1490,
	1491, 0, 0, 0, 0, 0, 3665, 3666, 42, 0,
	0, 0, 1489, 0, 1490, 1491, 0, 0, 3952, 3951,
	2797, 1489, 3979, 1490, 1491, 2795, 0, 1489, 3967, 1490,
	1491, 0, 0, 2793, 0, 0, 3971, 3972, 1489, 2752,
	1490, 1491, 0, 0, 0, 0, 0, 0, 0, 2732,
	0, 4018, 4019, 0, 0, 0, 0, 0, 3810, 3811,
	0, 3110, 3111, 3112, 3113, 3114, 3803, 0, 2157, 4022,
	0, 2155, 3773, 3962, 3963, 3964, 0, 1489, 0, 1490,
	1491, 3129, 1489, 0, 1490, 1491, 0, 0, 0, 0,
	1489, 0, 1490, 1491, 0, 0, 1489, 0, 1490, 1491,
	0, 0, 0, 4025, 0, 0, 1489, 4028, 1490, 1491,
	4067, 3277, 0, 0, 4058, 0, 0, 3273, 3805, 0,
	0, 0, 0, 0, 0, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1683, 1684,
	1685, 1686, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 4052, 4023, 3276, 4051,
	0, 4068, 0, 3276, 1492, 0, 0, 0, 4042, 4085,
	1492, 0, 0, 0, 0, 4048, 0, 4050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 1492, 0,
	0, 0, 0, 0, 0, 1726, 1754, 1492, 0, 0,
	0, 1492, 0, 0, 0, 0, 4071, 0, 1492, 3279,
	1762, 3955, 4070, 1755, 0, 4087, 0, 0, 0, 4090,
	4075, 0, 0, 0, 0, 4092, 3959, 3297, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 2402, 2403,
	1761, 1759, 1760, 1756, 0, 1757, 0, 0, 0, 0,
	0, 4099, 0, 0, 0, 0, 2731, 0, 0, 4109,
	0, 0, 2727, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 4110, 0, 0, 4111, 0, 0, 0, 0,
	2725, 42, 0, 0, 0, 4135, 0, 0, 0, 2717,
	0, 0, 0, 2688, 0, 0, 0, 0, 4120, 0,
	2682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4129, 0, 1489, 0, 1490, 1491, 0, 4140, 1489,
	1726, 1490, 1491, 2677, 4143, 3979, 4153, 4150, 4149, 4148,
	4145, 4144, 4142, 0, 4147, 4146, 0, 1489, 0, 1490,
	1491, 0, 0, 0, 1493, 3418, 1489, 0, 1490, 1491,
	1489, 4172, 1490, 1491, 0, 0, 4072, 1489, 3276, 1490,
	1491, 4185, 0, 0, 4190, 4177, 0, 3435, 3436, 0,
	3437, 3439, 3441, 0, 0, 1551, 0, 0, 4200, 0,
	1489, 0, 1490, 1491, 0, 4213, 4208, 0, 0, 4202,
	0, 0, 0, 4212, 4164, 0, 0, 0, 3454, 4217,
	0, 0, 0, 3457, 0, 3459, 3460, 3461, 3463, 3464,
	3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474,
	3475, 3477, 3479, 3481, 3483, 3485, 3487, 3489, 3491, 3493,
	3495, 3497, 3499, 3501, 3503, 3505, 3507, 3508, 3510, 3511,
	3512, 3514, 2157, 4246, 3516, 2155, 3518, 3519, 3520, 4164,
	4249, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532,
	3533, 3534, 4247, 4256, 4264, 4245, 4243, 4236, 4242, 4270,
	3540, 4272, 2035, 4232, 3545, 4233, 4136, 4131, 3549, 3550,
	0, 3551, 3553, 0, 3556, 3558, 3273, 3560, 3561, 3562,
	3563, 4281, 4282, 4019, 4280, 0, 4077, 3571, 0, 2157,
	4279, 0, 2155, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 4083, 0, 0, 0,
	0, 0, 0, 4164, 1762, 0, 0, 1755, 0, 4095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3602, 3603, 0,
	0, 3607, 1750, 1751, 1761, 1759, 1760, 1756, 0, 1757,
	0, 0, 0, 0, 0, 0, 87, 44, 45, 89,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 94, 0, 0, 0, 48,
	77, 78, 0, 75, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4130, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 63, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 3680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3698, 0, 0, 3702, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 1889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3738, 0, 91, 55, 58, 57, 60, 0,
	74, 0, 0, 83, 80, 3746, 0, 0, 0, 0,
	0, 0, 3753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 93, 92,
	0, 2040, 72, 73, 59, 200, 0, 0, 200, 0,
	81, 82, 739, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 65, 0, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 200, 745, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3968, 0, 0, 0,
	0, 61, 0, 0, 0, 3975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3985, 3986, 3987, 0, 3989, 0,
	3990, 3991, 0, 0, 0, 0, 3994, 3995, 3996, 3997,
	3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007,
	4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 0, 4017,
	4020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4029, 4030, 4031, 4032, 4033,
	4035, 4036, 4038, 4040, 4041, 4043, 0, 0, 0, 4047,
	0, 90, 0, 4049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2108, 2109,
	2110, 2111, 4076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2163,
	2164, 0, 0, 0, 0, 2187, 0, 0, 2191, 2192,
	0, 0, 0, 2197, 0, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 0, 2220,
	0, 0, 0, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2251, 0, 2256, 0, 2258, 2259, 2260, 0, 2262,
	2263, 2264, 0, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 71, 0, 0, 0, 0, 2343, 0, 2345,
	0, 2352, 2353, 2354, 2355, 2356, 2357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4100, 0,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 0, 2377,
	2378, 2379, 2380, 2381, 0, 0, 0, 0, 0, 0,
	0, 0, 4115, 0, 0, 0, 0, 0, 4118, 0,
	4119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 0, 4134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4158, 4159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4166, 4168, 4170, 0, 2436, 2437, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4198, 2475, 134, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 167, 200, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 2518, 0, 0, 0, 0, 4237,
	4239, 4241, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 745, 745, 0, 0, 0, 0, 0,
	0, 0, 4261, 0, 143, 144, 166, 165, 194, 0,
	0, 0, 0, 0, 0, 745, 200, 0, 0, 4273,
	4274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 0, 0, 973,
	1036, 987, 988, 989, 974, 0, 0, 975, 976, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 990, 991,
	160, 141, 163, 148, 140, 0, 161, 162, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 150, 145,
	146, 147, 151, 0, 0, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 4165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3394, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2692, 2693, 2694, 2695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4216, 0, 0, 0, 0, 0, 200, 0, 0,
	1852, 745, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 200, 0, 3395, 3396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 200, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 1537, 745, 0,
	0, 745, 745, 745, 745, 0, 745, 0, 745, 745,
	0, 745, 745, 745, 745, 745, 745, 0, 0, 0,
	0, 0, 0, 0, 1537, 745, 745, 1537, 745, 1537,
	200, 745, 0, 0, 0, 0, 0, 1035, 0, 0,
	2351, 0, 0, 1036, 0, 0, 157, 1839, 0, 158,
	200, 0, 0, 2156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	170, 0, 745, 0, 0, 200, 200, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 745, 190, 0,
	0, 1853, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 0, 171, 176, 173, 179, 180,
	181, 183, 185, 186, 187, 188, 0, 0, 0, 0,
	0, 189, 191, 192, 193, 0, 0, 1866, 1869, 1870,
	1871, 1872, 1873, 1874, 0, 1875, 1876, 1878, 1879, 1877,
	1880, 1881, 1854, 1855, 1856, 1857, 1837, 1838, 1867, 0,
	1840, 0, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 0, 0, 1850, 1858, 1859, 1860, 1861, 0, 1862,
	1863, 1864, 1865, 4163, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 3075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3101, 3102, 3103, 0, 0, 3105, 0, 0, 3107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3126, 3127,
	3128, 0, 0, 745, 0, 0, 0, 3133, 0, 0,
	0, 0, 3135, 1537, 0, 3137, 3138, 3139, 0, 0,
	0, 3140, 3141, 0, 0, 3142, 0, 3143, 0, 0,
	0, 1537, 0, 0, 3144, 0, 3145, 0, 0, 0,
	3146, 0, 3147, 0, 0, 3148, 0, 3149, 0, 3150,
	0, 3151, 0, 3152, 0, 3153, 0, 3154, 0, 3155,
	0, 3156, 0, 3157, 0, 3158, 0, 3159, 0, 3160,
	0, 3161, 0, 3162, 0, 3163, 0, 3164, 0, 3165,
	1868, 0, 0, 3166, 0, 3167, 0, 3168, 0, 0,
	3169, 0, 3170, 0, 3171, 0, 2315, 3173, 0, 0,
	3175, 0, 0, 3177, 3178, 3179, 3180, 0, 0, 0,
	0, 3181, 2315, 2315, 2315, 2315, 2315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3191, 0, 0,
	0, 0, 0, 0, 0, 3204, 0, 0, 3208, 0,
	0, 0, 0, 0, 0, 0, 0, 3211, 3212, 3213,
	3214, 3215, 3216, 0, 0, 0, 3217, 3218, 0, 3219,
	0, 3220, 0, 0, 0, 0, 0, 2362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1084, 0, 0, 0, 0,
	0, 0, 0, 1733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 3268, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3017, 0, 0, 0, 0, 0, 0, 3298,
	0, 745, 0, 686, 134, 0, 156, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 1040, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 745, 0, 0, 2362, 200, 0,
	200, 0, 200, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 3356, 0, 745, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 1113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1906, 166, 165, 194,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 745, 745, 0, 3443, 745, 0, 745,
	0, 0, 0, 0, 0, 745, 0, 0, 967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 745, 0, 0, 0, 745,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 1907, 163, 0, 1904, 0, 161, 162, 0,
	0, 722, 0, 0, 178, 0, 0, 744, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 200, 0, 0, 200, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 744, 0, 744, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1537,
	0, 2362, 0, 3661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 0,
	1116, 0, 1120, 0, 0, 0, 0, 0, 3704, 0,
	3705, 0, 3706, 0, 3707, 0, 0, 0, 0, 0,
	0, 0, 3710, 3711, 0, 0, 0, 0, 0, 0,
	0, 0, 3716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3717, 0, 3718, 0,
	3719, 0, 3720, 0, 3721, 0, 3722, 0, 3723, 0,
	3724, 0, 3725, 0, 3726, 0, 3727, 0, 3728, 0,
	3729, 0, 3730, 0, 3731, 0, 3732, 0, 0, 3733,
	0, 0, 0, 3734, 0, 3735, 0, 0, 0, 0,
	0, 3737, 0, 0, 0, 0, 0, 157, 1839, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3754, 0, 0, 0, 0, 0, 0,
	0, 0, 3759, 0, 3760, 3761, 0, 3762, 0, 3763,
	0, 170, 0, 0, 3764, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 1228, 0, 1235,
	0, 0, 0, 745, 0, 0, 0, 0, 3797, 0,
	0, 0, 0, 0, 0, 745, 745, 745, 200, 190,
	0, 3806, 1853, 0, 3808, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 3812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3948, 0, 200, 0, 0, 0, 0,
	200, 1463, 0, 0, 0, 0, 171, 176, 173, 179,
	180, 181, 183, 185, 186, 187, 188, 0, 0, 0,
	0, 0, 189, 191, 192, 193, 0, 0, 1866, 1869,
	1870, 1871, 1872, 1873, 1874, 0, 1875, 1876, 1878, 1879,
	1877, 1880, 1881, 1854, 1855, 1856, 1857, 1837, 1838, 1867,
	0, 1840, 0, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 0, 0, 1850, 1858, 1859, 1860, 1861, 745,
	1862, 1863, 1864, 1865, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 745, 745, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 745, 0, 0, 0, 0, 4057, 0,
	0, 0, 0, 200, 200, 200, 200, 200, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 1035,
	0, 744, 1448, 744, 744, 1036, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2156, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4098, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 745, 1293,
	1293, 0, 0, 0, 4112, 0, 0, 4113, 0, 4114,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1964, 200, 200, 200, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2009, 745, 0, 0, 0, 1537, 0, 0, 745, 745,
	1537, 200, 200, 200, 200, 200, 0, 0, 0, 4196,
	0, 2036, 0, 200, 0, 0, 0, 0, 0, 200,
	0, 200, 0, 0, 200, 200, 200, 2047, 0, 0,
	0, 744, 744, 0, 2051, 0, 0, 4209, 0, 4210,
	0, 4211, 0, 0, 0, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 0, 745, 0,
	0, 1537, 0, 0, 0, 0, 745, 0, 744, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 0, 0, 200, 0, 0, 4259, 0,
	4260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 200, 744, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 0, 1536, 744, 0,
	0, 744, 744, 744, 744, 0, 744, 0, 744, 744,
	0, 744, 744, 744, 744, 744, 744, 0, 0, 0,
	0, 0, 0, 0, 1536, 744, 744, 1536, 744, 1536,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 1737, 744,
	0, 0, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2101, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 200, 0, 0, 0, 0,
	1109, 0, 1913, 0, 0, 0, 0, 0, 0, 0,
	1922, 0, 0, 0, 1924, 0, 0, 1927, 1928, 1930,
	1930, 0, 1930, 0, 1930, 1930, 0, 1939, 1930, 1930,
	1930, 1930, 1930, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 0, 1109, 0, 0, 1965, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 745, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 1293, 0, 0, 0, 0, 0, 745,
	745, 745, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 0, 134, 0, 156, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 0, 0, 0,
	0, 177, 2165, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 2442, 0, 0, 0, 0,
	0, 0, 0, 2446, 0, 2449, 0, 0, 2101, 0,
	0, 174, 0, 0, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 925, 0, 1905, 1906, 166, 165,
	194, 0, 0, 1293, 1293, 0, 745, 0, 745, 0,
	200, 0, 0, 0, 0, 0, 200, 0, 2089, 200,
	200, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 0,
	200, 0, 0, 745, 0, 745, 0, 0, 0, 0,
	0, 198, 0, 0, 687, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 2151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 160, 1907, 163, 0, 1904, 744, 161, 162,
	1085, 1085, 0, 0, 200, 178, 0, 745, 0, 687,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2101, 0, 0, 0, 0, 0, 2600, 0,
	0, 0, 0, 0, 744, 0, 0, 744, 0, 2621,
	2622, 0, 0, 2626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2631, 0, 744, 0, 0,
	0, 0, 2634, 0, 745, 0, 0, 0, 0, 0,
	0, 745, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 169, 0, 744, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 744, 744, 0, 0, 744, 0, 744,
	0, 0, 0, 2399, 0, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2415, 0, 0,
	744, 0, 0, 0, 0, 744, 0, 0, 0, 744,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1116, 0, 0, 0, 0, 0, 2537, 0, 0,
	0, 0, 0, 0, 0, 744, 0, 0, 157, 0,
	0, 158, 0, 1109, 0, 0, 0, 0, 0, 1116,
	1922, 0, 0, 1922, 0, 1922, 0, 0, 0, 0,
	0, 2566, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 745, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 1537, 745, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	0, 2151, 0, 0, 0, 2151, 2151, 0, 0, 1536,
	0, 744, 745, 2362, 0, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 176, 173,
	179, 180, 181, 183, 185, 186, 187, 188, 0, 0,
	0, 0, 0, 189, 191, 192, 193, 0, 0, 0,
	0, 0, 745, 0, 0, 2960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 200, 0,
	0, 2642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 3047, 3048,
	3049, 3050, 3051, 3052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 0, 0, 744, 0, 0, 0, 2101, 3063, 0,
	0, 0, 0, 0, 0, 744, 744, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 3071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 744, 744, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 744, 0, 0, 0, 0, 0, 2890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2906, 2907, 2908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3239, 0, 3243, 0, 1064, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 3005, 0, 0, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 1120, 0, 0, 0,
	0, 0, 0, 3025, 0, 0, 0, 1922, 1922, 0,
	0, 0, 3030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3041,
	0, 0, 0, 1538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 0, 0, 1538, 0, 1538, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	3398, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 687, 0, 0, 0, 3410, 0, 0, 3413, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 2151,
	0, 2034, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 744, 0, 0, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 2061, 687, 687, 687, 687,
	687, 687, 687, 0, 0, 0, 0, 0, 0, 2151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 1536, 0, 0, 744, 744,
	1536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3573, 0, 0, 0, 0, 744, 0,
	0, 1536, 0, 0, 3193, 0, 744, 0, 0, 3578,
	3579, 0, 0, 0, 0, 0, 1293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 0, 0,
	0, 0, 0, 3417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3642, 0, 0, 0, 1293, 0, 97,
	0, 0, 1035, 0, 3280, 1930, 0, 973, 1036, 987,
	988, 989, 974, 0, 0, 975, 976, 0, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 982, 0, 990, 991, 0, 1538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 3392, 3393, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 3631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 744, 1981, 0,
	0, 3780, 0, 0, 3781, 3782, 3783, 0, 0, 0,
	0, 0, 0, 0, 1085, 0, 0, 1883, 0, 0,
	0, 3395, 3396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	744, 744, 744, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 2034, 687, 0, 687, 0, 687, 2465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 938, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 939, 940, 0, 0,
	0, 941, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3692, 3693, 3694, 3695, 0,
	0, 0, 0, 0, 0, 0, 1536, 0, 0, 0,
	0, 0, 0, 744, 0, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 687, 0, 0, 687, 0, 2628, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 0, 0, 2639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3770, 0, 3770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 744, 4096, 0, 0, 0, 0,
	0, 744, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 0, 2034, 0, 3802,
	0, 3804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	3770, 0, 0, 0, 0, 0, 0, 3770, 0, 3770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2909, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 744, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 744, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1120, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 0,
	0, 0, 744, 0, 744, 0, 0, 0, 0, 687,
	687, 687, 687, 687, 687, 0, 0, 0, 0, 0,
	0, 4116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4124, 0, 0, 0, 0, 0, 0, 687, 687,
	0, 0, 1120, 0, 4132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 1293, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3834, 3836, 3835, 3901, 3902, 3903,
	3904, 3905, 3906, 3907, 3837, 3838, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	4180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1085, 0, 687, 3238, 687, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 0, 0, 0, 0, 1538, 687, 687, 687,
	687, 687, 0, 0, 0, 0, 0, 0, 3842, 3296,
	0, 0, 0, 0, 0, 1981, 0, 687, 0, 0,
	687, 3304, 2034, 3850, 3851, 0, 0, 3926, 3925, 3924,
	0, 0, 3922, 3923, 3921, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 3927, 938,
	0, 791, 792, 3928, 3929, 942, 3930, 794, 795, 939,
	940, 687, 789, 793, 941, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3831, 3832, 3833, 3839, 3840, 3841, 3852, 3899, 3900,
	3908, 3910, 894, 3909, 3911, 3912, 3913, 3916, 3917, 3918,
	3919, 3914, 3915, 3920, 3814, 3818, 3815, 3816, 3817, 3829,
	3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828,
	3830, 3931, 3932, 3933, 3934, 3935, 3936, 3845, 3849, 3848,
	3846, 3847, 3843, 3844, 3871, 3870, 3872, 3873, 3874, 3875,
	3876, 3877, 3879, 3878, 3880, 3881, 3882, 3883, 3884, 3885,
	3853, 3854, 3857, 3858, 3856, 3855, 3859, 3868, 3869, 3860,
	3861, 3862, 3863, 3864, 3865, 3867, 3866, 3886, 3887, 3888,
	3889, 3890, 3892, 3891, 3895, 3896, 3894, 3893, 3898, 3897,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 944, 0, 945, 0, 0, 949, 0,
	0, 0, 951, 950, 0, 952, 914, 913, 0, 0,
	946, 947, 0, 948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 687, 0, 0, 687, 687, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1538, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 403, 0, 1981,
	0, 0, 0, 0, 1431, 1415, 537, 0, 1357, 1434,
	1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372, 423, 1341,
	1329, 1298, 1336, 1299, 1327, 1359, 276, 1324, 1417, 1376,
	1433, 372, 273, 1305, 1296, 209, 514, 1330, 438, 1346,
	208, 1396, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 1440, 376, 1382, 0,
	506, 408, 0, 0, 2034, 1421, 1420, 1351, 1361, 1423,
	1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342, 1391, 1436,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 4154, 516, 969, 0, 0, 0, 0, 4155, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 1338, 1388, 619, 1430, 1339, 1390, 271, 327,
	278, 270, 590, 1441, 1422, 1302, 1369, 1429, 1364, 606,
	0, 0, 234, 1432, 1363, 0, 1393, 0, 1447, 1297,
	1384, 0, 1300, 1304, 1443, 1427, 1333, 281, 0, 0,
	0, 0, 0, 0, 0, 1360, 1371, 1405, 1409, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	1380, 0, 0, 0, 1309, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 1312, 0, 1332, 1406, 0, 1295, 303,
	1306, 409, 263, 0, 462, 1413, 1426, 1355, 639, 1428,
	1353, 1352, 1400, 1310, 1419, 1345, 371, 1308, 336, 202,
	230, 0, 1343, 419, 470, 482, 1418, 1328, 1337, 259,
	1335, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 1379, 1398, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 1307, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 1323, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 1414, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 1403, 1446, 432,
	481, 245, 616, 505, 204, 1317, 1322, 1315, 0, 260,
	261, 1385, 584, 1318, 1316, 1374, 1375, 1319, 1437, 1438,
	1439, 1424, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	1407, 1311, 0, 1320, 1321, 405, 1416, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 1378, 201, 226, 374,
	1442, 463, 294, 660, 628, 493, 623, 211, 228, 1314,
	268, 1326, 1334, 0, 1340, 1348, 1349, 1362, 1365, 1366,
	1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402, 1404, 1411,
	1425, 1445, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 1377, 1383, 387, 287, 311, 326,
	1392, 627, 511, 232, 475, 296, 256, 1410, 1412, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 1373, 1401, 382, 585, 586, 322, 403,
	0, 0, 0, 0, 0, 0, 1431, 1415, 537, 0,
	1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372,
	423, 1341, 1329, 1298, 1336, 1299, 1327, 1359, 276, 1324,
	1417, 1376, 1433, 372, 273, 1305, 1296, 209, 514, 1330,
	438, 1346, 208, 1396, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 1440, 376,
	1382, 0, 506, 408, 0, 0, 0, 1421, 1420, 1351,
	1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342,
	1391, 1436, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 1338, 1388, 619, 1430, 1339, 1390,
	271, 327, 278, 270, 590, 1441, 1422, 1302, 1369, 1429,
	1364, 606, 0, 0, 234, 1432, 1363, 0, 1393, 0,
	1447, 1297, 1384, 0, 1300, 1304, 1443, 1427, 1333, 281,
	0, 0, 0, 0, 0, 0, 0, 1360, 1371, 1405,
	1409, 1354, 0, 0, 0, 0, 0, 0, 3305, 0,
	1331, 0, 1380, 0, 0, 0, 1309, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 1312, 0, 1332, 1406, 0,
	1295, 303, 1306, 409, 263, 0, 462, 1413, 1426, 1355,
	639, 1428, 1353, 1352, 1400, 1310, 1419, 1345, 371, 1308,
	336, 202, 230, 0, 1343, 419, 470, 482, 1418, 1328,
	1337, 259, 1335, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 1379, 1398, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 1307,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 1323, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	1414, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 1403,
	1446, 432, 481, 245, 616, 505, 204, 1317, 1322, 1315,
	0, 260, 261, 1385, 584, 1318, 1316, 1374, 1375, 1319,
	1437, 1438, 1439, 1424, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 1407, 1311, 0, 1320, 1321, 405, 1416, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 1378, 201,
	226, 374, 1442, 463, 294, 660, 628, 493, 623, 211,
	228, 1314, 268, 1326, 1334, 0, 1340, 1348, 1349, 1362,
	1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402,
	1404, 1411, 1425, 1445, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 1377, 1383, 387, 287,
	311, 326, 1392, 627, 511, 232, 475, 296, 256, 1410,
	1412, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 1373, 1401, 382, 585, 586,
	322, 403, 0, 0, 0, 0, 0, 0, 1431, 1415,
	537, 0, 1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394,
	1303, 1372, 423, 1341, 1329, 1298, 1336, 1299, 1327, 1359,
	276, 1324, 1417, 1376, 1433, 372, 273, 1305, 1296, 209,
	514, 1330, 438, 1346, 208, 1396, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	1440, 376, 1382, 0, 506, 408, 0, 0, 0, 1421,
	1420, 1351, 1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381,
	1435, 1342, 1391, 1436, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 1338, 1388, 619, 1430,
	1339, 1390, 271, 327, 278, 270, 590, 1441, 1422, 1302,
	1369, 1429, 1364, 606, 0, 0, 234, 1432, 1363, 0,
	1393, 0, 1447, 1297, 1384, 0, 1300, 1304, 1443, 1427,
	1333, 281, 0, 0, 0, 0, 0, 0, 0, 1360,
	1371, 1405, 1409, 1354, 0, 0, 0, 0, 0, 0,
	3266, 0, 1331, 0, 1380, 0, 0, 0, 1309, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 1312, 0, 1332,
	1406, 0, 1295, 303, 1306, 409, 263, 0, 462, 1413,
	1426, 1355, 639, 1428, 1353, 1352, 1400, 1310, 1419, 1345,
	371, 1308, 336, 202, 230, 0, 1343, 419, 470, 482,
	1418, 1328, 1337, 259, 1335, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 1379, 1398, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 1307, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 1323,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 1414, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 1403, 1446, 432, 481, 245, 616, 505, 204, 1317,
	1322, 1315, 0, 260, 261, 1385, 584, 1318, 1316, 1374,
	1375, 1319, 1437, 1438, 1439, 1424, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 1407, 1311, 0, 1320, 1321, 405,
	1416, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	1378, 201, 226, 374, 1442, 463, 294, 660, 628, 493,
	623, 211, 228, 1314, 268, 1326, 1334, 0, 1340, 1348,
	1349, 1362, 1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397,
	1399, 1402, 1404, 1411, 1425, 1445, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 1377, 1383,
	387, 287, 311, 326, 1392, 627, 511, 232, 475, 296,
	256, 1410, 1412, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 1373, 1401, 382,
	585, 586, 322, 403, 0, 0, 0, 0, 0, 0,
	1431, 1415, 537, 0, 1357, 1434, 1325, 1344, 1444, 1347,
	1350, 1394, 1303, 1372, 423, 1341, 1329, 1298, 1336, 1299,
	1327, 1359, 276, 1324, 1417, 1376, 1433, 372, 273, 1305,
	1296, 209, 514, 1330, 438, 1346, 208, 1396, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 1440, 376, 1382, 0, 506, 408, 0, 0,
	0, 1421, 1420, 1351, 1361, 1423, 1370, 1408, 1356, 1395,
	1313, 1381, 1435, 1342, 1391, 1436, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 1338, 1388,
	619, 1430, 1339, 1390, 271, 327, 278, 270, 590, 1441,
	1422, 1302, 1369, 1429, 1364, 606, 0, 0, 234, 1432,
	1363, 0, 1393, 0, 1447, 1297, 1384, 0, 1300, 1304,
	1443, 1427, 1333, 281, 0, 0, 0, 0, 0, 0,
	0, 1360, 1371, 1405, 1409, 1354, 0, 0, 0, 0,
	0, 0, 2444, 0, 1331, 0, 1380, 0, 0, 0,
	1309, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 1312,
	0, 1332, 1406, 0, 1295, 303, 1306, 409, 263, 0,
	462, 1413, 1426, 1355, 639, 1428, 1353, 1352, 1400, 1310,
	1419, 1345, 371, 1308, 336, 202, 230, 0, 1343, 419,
	470, 482, 1418, 1328, 1337, 259, 1335, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 1379, 1398, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 1307, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 1323, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 1414, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 1403, 1446, 432, 481, 245, 616, 505,
	204, 1317, 1322, 1315, 0, 260, 261, 1385, 584, 1318,
	1316, 1374, 1375, 1319, 1437, 1438, 1439, 1424, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 1407, 1311, 0, 1320,
	1321, 405, 1416, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 1378, 201, 226, 374, 1442, 463, 294, 660,
	628, 493, 623, 211, 228, 1314, 268, 1326, 1334, 0,
	1340, 1348, 1349, 1362, 1365, 1366, 1367, 1368, 1386, 1387,
	1389, 1397, 1399, 1402, 1404, 1411, 1425, 1445, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	1377, 1383, 387, 287, 311, 326, 1392, 627, 511, 232,
	475, 296, 256, 1410, 1412, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 1373,
	1401, 382, 585, 586, 322, 403, 0, 0, 0, 0,
	0, 0, 1431, 1415, 537, 0, 1357, 1434, 1325, 1344,
	1444, 1347, 1350, 1394, 1303, 1372, 423, 1341, 1329, 1298,
	1336, 1299, 1327, 1359, 276, 1324, 1417, 1376, 1433, 372,
	273, 1305, 1296, 209, 514, 1330, 438, 1346, 208, 1396,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 1440, 376, 1382, 0, 506, 408,
	0, 0, 0, 1421, 1420, 1351, 1361, 1423, 1370, 1408,
	1356, 1395, 1313, 1381, 1435, 1342, 1391, 1436, 329, 253,
	331, 207, 420, 507, 292, 0, 97, 0, 0, 0,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	1338, 1388, 619, 1430, 1339, 1390, 271, 327, 278, 270,
	590, 1441, 1422, 1302, 1369, 1429, 1364, 606, 0, 0,
	234, 1432, 1363, 0, 1393, 0, 1447, 1297, 1384, 0,
	1300, 1304, 1443, 1427, 1333, 281, 0, 0, 0, 0,
	0, 0, 0, 1360, 1371, 1405, 1409, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 1380, 0,
	0, 0, 1309, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 1312, 0, 1332, 1406, 0, 1295, 303, 1306, 409,
	263, 0, 462, 1413, 1426, 1355, 639, 1428, 1353, 1352,
	1400, 1310, 1419, 1345, 371, 1308, 336, 202, 230, 0,
	1343, 419, 470, 482, 1418, 1328, 1337, 259, 1335, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 1379,
	1398, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 1307, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 1323, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 1414, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 1403, 1446, 432, 481, 245,
	616, 505, 204, 1317, 1322, 1315, 0, 260, 261, 1385,
	584, 1318, 1316, 1374, 1375, 1319, 1437, 1438, 1439, 1424,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 1407, 1311,
	0, 1320, 1321, 405, 1416, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 1378, 201, 226, 374, 1442, 463,
	294, 660, 628, 493, 623, 211, 228, 1314, 268, 1326,
	1334, 0, 1340, 1348, 1349, 1362, 1365, 1366, 1367, 1368,
	1386, 1387, 1389, 1397, 1399, 1402, 1404, 1411, 1425, 1445,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 1377, 1383, 387, 287, 311, 326, 1392, 627,
	511, 232, 475, 296, 256, 1410, 1412, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 1373, 1401, 382, 585, 586, 322, 403, 0, 0,
	0, 0, 0, 0, 1431, 1415, 537, 0, 1357, 1434,
	1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372, 423, 1341,
	1329, 1298, 1336, 1299, 1327, 1359, 276, 1324, 1417, 1376,
	1433, 372, 273, 1305, 1296, 209, 514, 1330, 438, 1346,
	208, 1396, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 1440, 376, 1382, 0,
	506, 408, 0, 0, 0, 1421, 1420, 1351, 1361, 1423,
	1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342, 1391, 1436,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 1338, 1388, 619, 1430, 1339, 1390, 271, 327,
	278, 270, 590, 1441, 1422, 1302, 1369, 1429, 1364, 606,
	0, 0, 234, 1432, 1363, 0, 1393, 0, 1447, 1297,
	1384, 0, 1300, 1304, 1443, 1427, 1333, 281, 0, 0,
	0, 0, 0, 0, 0, 1360, 1371, 1405, 1409, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	1380, 0, 0, 0, 1309, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 1312, 0, 1332, 1406, 0, 1295, 303,
	1306, 409, 263, 0, 462, 1413, 1426, 1355, 639, 1428,
	1353, 1352, 1400, 1310, 1419, 1345, 371, 1308, 336, 202,
	230, 0, 1343, 419, 470, 482, 1418, 1328, 1337, 259,
	1335, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 1379, 1398, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 1307, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 1323, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 1414, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 1403, 1446, 432,
	481, 245, 616, 505, 204, 1317, 1322, 1315, 0, 260,
	261, 1385, 584, 1318, 1316, 1374, 1375, 1319, 1437, 1438,
	1439, 1424, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	1407, 1311, 0, 1320, 1321, 405, 1416, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 1378, 201, 226, 374,
	1442, 463, 294, 660, 628, 493, 623, 211, 228, 1314,
	268, 1326, 1334, 0, 1340, 1348, 1349, 1362, 1365, 1366,
	1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402, 1404, 1411,
	1425, 1445, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 1377, 1383, 387, 287, 311, 326,
	1392, 627, 511, 232, 475, 296, 256, 1410, 1412, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 1373, 1401, 382, 585, 586, 322, 403,
	0, 0, 0, 0, 0, 0, 1431, 1415, 537, 0,
	1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372,
	423, 1341, 1329, 1298, 1336, 1299, 1327, 1359, 276, 1324,
	1417, 1376, 1433, 372, 273, 1305, 1296, 209, 514, 1330,
	438, 1346, 208, 1396, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 1440, 376,
	1382, 0, 506, 408, 0, 0, 0, 1421, 1420, 1351,
	1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342,
	1391, 1436, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 1338, 1388, 619, 1430, 1339, 1390,
	271, 327, 278, 270, 590, 1441, 1422, 1302, 1369, 1429,
	1364, 606, 0, 0, 234, 1432, 1363, 0, 1393, 0,
	1447, 1297, 1384, 0, 1300, 1304, 1443, 1427, 1333, 281,
	0, 0, 0, 0, 0, 0, 0, 1360, 1371, 1405,
	1409, 1354, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 1380, 0, 0, 0, 1309, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 1312, 0, 1332, 1406, 0,
	1295, 303, 1306, 409, 263, 0, 462, 1413, 1426, 1355,
	639, 1428, 1353, 1352, 1400, 1310, 1419, 1345, 371, 1308,
	336, 202, 230, 0, 1343, 419, 470, 482, 1418, 1328,
	1337, 259, 1335, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 1379, 1398, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 1307,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 1323, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	1414, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 1403,
	1446, 432, 481, 245, 616, 505, 204, 1317, 1322, 1315,
	0, 260, 261, 1385, 584, 1318, 1316, 1374, 1375, 1319,
	1437, 1438, 1439, 1424, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 1407, 1311, 0, 1320, 1321, 405, 1416, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 1378, 201,
	226, 374, 1442, 463, 294, 660, 628, 493, 623, 211,
	228, 1314, 268, 1326, 1334, 0, 1340, 1348, 1349, 1362,
	1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402,
	1404, 1411, 1425, 1445, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 1377, 1383, 387, 287,
	311, 326, 1392, 627, 511, 232, 475, 296, 256, 1410,
	1412, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 1373, 1401, 382, 585, 586,
	322, 403, 0, 0, 0, 0, 0, 0, 1431, 1415,
	537, 0, 1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394,
	1303, 1372, 423, 1341, 1329, 1298, 1336, 1299, 1327, 1359,
	276, 1324, 1417, 1376, 1433, 372, 273, 1305, 1296, 209,
	514, 1330, 438, 1346, 208, 1396, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	1440, 376, 1382, 0, 506, 408, 0, 0, 0, 1421,
	1420, 1351, 1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381,
	1435, 1342, 1391, 1436, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 1338, 1388, 619, 1430,
	1339, 1390, 271, 327, 278, 270, 590, 1441, 1422, 1302,
	1369, 1429, 1364, 606, 0, 0, 234, 1432, 1363, 0,
	1393, 0, 1447, 1297, 1384, 0, 1300, 1304, 1443, 1427,
	1333, 281, 0, 0, 0, 0, 0, 0, 0, 1360,
	1371, 1405, 1409, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 1380, 0, 0, 0, 1309, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 1312, 0, 1332,
	1406, 0, 1295, 303, 1306, 409, 263, 0, 462, 1413,
	1426, 1355, 639, 1428, 1353, 1352, 1400, 1310, 1419, 1345,
	371, 1308, 336, 202, 230, 0, 1343, 419, 470, 482,
	1418, 1328, 1337, 259, 1335, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 1379, 1398, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 1307, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 1323,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 1414, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 1403, 1446, 432, 481, 245, 616, 505, 204, 1317,
	1322, 1315, 0, 260, 261, 1385, 584, 1318, 1316, 1374,
	1375, 1319, 1437, 1438, 1439, 1424, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 1407, 1311, 0, 1320, 1321, 405,
	1416, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	1378, 201, 226, 374, 1442, 463, 294, 660, 628, 493,
	623, 211, 228, 1314, 268, 1326, 1334, 0, 1340, 1348,
	1349, 1362, 1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397,
	1399, 1402, 1404, 1411, 1425, 1445, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 1377, 1383,
	387, 287, 311, 326, 1392, 627, 511, 232, 475, 296,
	256, 1410, 1412, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 1373, 1401, 382,
	585, 586, 322, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 774, 0,
	0, 0, 276, 779, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 786, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 97, 0, 0, 1035, 516, 969,
	758, 935, 973, 1036, 987, 988, 989, 974, 0, 243,
	975, 976, 250, 977, 0, 934, 817, 819, 818, 884,
	885, 886, 887, 888, 889, 890, 820, 821, 815, 982,
	619, 990, 991, 0, 271, 327, 278, 270, 590, 0,
	0, 2252, 2253, 2254, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 754, 771, 0, 785,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 769, 0, 0, 0, 0, 929, 0, 770, 0,
	0, 778, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 928, 0, 0, 639, 0, 0, 926, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 979, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 980, 981, 262, 662,
	825, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 833, 834, 286, 313, 910,
	909, 908, 312, 314, 906, 907, 905, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	916, 938, 927, 791, 792, 917, 918, 942, 919, 794,
	795, 939, 940, 788, 789, 793, 941, 943, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 930, 777, 776, 0,
	783, 784, 0, 813, 814, 816, 822, 823, 824, 835,
	882, 883, 891, 893, 894, 892, 895, 896, 897, 900,
	901, 902, 903, 898, 899, 904, 796, 800, 797, 798,
	799, 811, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 812, 953, 954, 955, 956, 957, 958, 828,
	832, 831, 829, 830, 826, 827, 854, 853, 855, 856,
	857, 858, 859, 860, 862, 861, 863, 864, 865, 866,
	867, 868, 836, 837, 840, 841, 839, 838, 842, 851,
	852, 843, 844, 845, 846, 847, 848, 850, 849, 869,
	870, 871, 872, 873, 875, 874, 878, 879, 877, 876,
	881, 880, 775, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 944, 268, 945, 0, 0,
	949, 0, 0, 0, 951, 950, 0, 952, 914, 913,
	0, 0, 946, 947, 0, 948, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 959, 960, 961, 962, 963, 964,
	965, 966, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 1034, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 774, 0, 0, 0, 276, 779,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 786, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 782, 0, 0, 0, 0, 0, 0,
	2473, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	97, 0, 0, 1035, 516, 969, 758, 935, 973, 1036,
	987, 988, 989, 974, 0, 243, 975, 976, 250, 977,
	0, 934, 817, 819, 818, 884, 885, 886, 887, 888,
	889, 890, 820, 821, 815, 982, 619, 990, 991, 2474,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 754, 771, 0, 785, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 769, 0, 0,
	0, 0, 929, 0, 770, 0, 0, 778, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 928, 0, 0,
	639, 0, 0, 926, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 979, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 980, 981, 262, 662, 825, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 833, 834, 286, 313, 910, 909, 908, 312, 314,
	906, 907, 905, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 916, 938, 927, 791,
	792, 917, 918, 942, 919, 794, 795, 939, 940, 788,
	789, 793, 941, 943, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 930, 777, 776, 0, 783, 784, 0, 813,
	814, 816, 822, 823, 824, 835, 882, 883, 891, 893,
	894, 892, 895, 896, 897, 900, 901, 902, 903, 898,
	899, 904, 796, 800, 797, 798, 799, 811, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 812, 953,
	954, 955, 956, 957, 958, 828, 832, 831, 829, 830,
	826, 827, 854, 853, 855, 856, 857, 858, 859, 860,
	862, 861, 863, 864, 865, 866, 867, 868, 836, 837,
	840, 841, 839, 838, 842, 851, 852, 843, 844, 845,
	846, 847, 848, 850, 849, 869, 870, 871, 872, 873,
	875, 874, 878, 879, 877, 876, 881, 880, 775, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 944, 268, 945, 0, 0, 949, 0, 0, 0,
	951, 950, 0, 952, 914, 913, 0, 0, 946, 947,
	0, 948, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	959, 960, 961, 962, 963, 964, 965, 966, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 1034,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 87, 537, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	774, 0, 0, 0, 276, 779, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 1727, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 782,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 97, 0, 0, 1035,
	516, 969, 758, 935, 973, 1036, 987, 988, 989, 974,
	0, 243, 975, 976, 250, 977, 0, 934, 817, 819,
	818, 884, 885, 886, 887, 888, 889, 890, 820, 821,
	815, 982, 619, 990, 991, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 754, 771,
	0, 785, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 769, 0, 0, 0, 0, 929, 0,
	770, 0, 0, 778, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 928, 0, 0, 639, 0, 0, 926,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 979, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 980, 981,
	262, 662, 825, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 833, 834, 286,
	313, 910, 909, 908, 312, 314, 906, 907, 905, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 916, 938, 927, 791, 792, 917, 918, 942,
	919, 794, 795, 939, 940, 788, 789, 793, 941, 943,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 930, 777,
	776, 0, 783, 784, 0, 813, 814, 816, 822, 823,
	824, 835, 882, 883, 891, 893, 894, 892, 895, 896,
	897, 900, 901, 902, 903, 898, 899, 904, 796, 800,
	797, 798, 799, 811, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 812, 953, 954, 955, 956, 957,
	958, 828, 832, 831, 829, 830, 826, 827, 854, 853,
	855, 856, 857, 858, 859, 860, 862, 861, 863, 864,
	865, 866, 867, 868, 836, 837, 840, 841, 839, 838,
	842, 851, 852, 843, 844, 845, 846, 847, 848, 850,
	849, 869, 870, 871, 872, 873, 875, 874, 878, 879,
	877, 876, 881, 880, 775, 201, 226, 374, 96, 463,
	294, 660, 628, 493, 623, 211, 228, 944, 268, 945,
	0, 0, 949, 0, 0, 0, 951, 950, 0, 952,
	914, 913, 0, 0, 946, 947, 0, 948, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 959, 960, 961, 962,
	963, 964, 965, 966, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 1034, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 774, 0, 0, 0,
	276, 779, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	786, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 782, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 97, 0, 0, 1035, 516, 969, 758, 935,
	973, 1036, 987, 988, 989, 974, 0, 243, 975, 976,
	250, 977, 0, 934, 817, 819, 818, 884, 885, 886,
	887, 888, 889, 890, 820, 821, 815, 982, 619, 990,
	991, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 754, 771, 0, 785, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 769,
	0, 0, 0, 0, 929, 0, 770, 0, 0, 778,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 928,
	0, 0, 639, 0, 0, 926, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 979, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 4141, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 980, 981, 262, 662, 825, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 833, 834, 286, 313, 910, 909, 908,
	312, 314, 906, 907, 905, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 916, 938,
	927, 791, 792, 917, 918, 942, 919, 794, 795, 939,
	940, 788, 789, 793, 941, 943, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 930, 777, 776, 0, 783, 784,
	0, 813, 814, 816, 822, 823, 824, 835, 882, 883,
	891, 893, 894, 892, 895, 896, 897, 900, 901, 902,
	903, 898, 899, 904, 796, 800, 797, 798, 799, 811,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	812, 953, 954, 955, 956, 957, 958, 828, 832, 831,
	829, 830, 826, 827, 854, 853, 855, 856, 857, 858,
	859, 860, 862, 861, 863, 864, 865, 866, 867, 868,
	836, 837, 840, 841, 839, 838, 842, 851, 852, 843,
	844, 845, 846, 847, 848, 850, 849, 869, 870, 871,
	872, 873, 875, 874, 878, 879, 877, 876, 881, 880,
	775, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 944, 268, 945, 0, 0, 949, 0,
	0, 0, 951, 950, 0, 952, 914, 913, 0, 0,
	946, 947, 0, 948, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 959, 960, 961, 962, 963, 964, 965, 966,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 1034, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 774, 0, 0, 0, 276, 779, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 786, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 782, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	1764, 1035, 516, 969, 758, 935, 973, 1036, 987, 988,
	989, 974, 0, 243, 975, 976, 250, 977, 0, 934,
	817, 819, 818, 884, 885, 886, 887, 888, 889, 890,
	820, 821, 815, 982, 619, 990, 991, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	754, 771, 0, 785, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 769, 0, 0, 0, 0,
	929, 0, 770, 0, 0, 778, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 928, 0, 0, 639, 0,
	0, 926, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 979,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	980, 981, 262, 662, 825, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 833,
	834, 286, 313, 910, 909, 908, 312, 314, 906, 907,
	905, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 916, 938, 927, 791, 792, 917,
	918, 942, 919, 794, 795, 939, 940, 788, 789, 793,
	941, 943, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	930, 777, 776, 0, 783, 784, 0, 813, 814, 816,
	822, 823, 824, 835, 882, 883, 891, 893, 894, 892,
	895, 896, 897, 900, 901, 902, 903, 898, 899, 904,
	796, 800, 797, 798, 799, 811, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 812, 953, 954, 955,
	956, 957, 958, 828, 832, 831, 829, 830, 826, 827,
	854, 853, 855, 856, 857, 858, 859, 860, 862, 861,
	863, 864, 865, 866, 867, 868, 836, 837, 840, 841,
	839, 838, 842, 851, 852, 843, 844, 845, 846, 847,
	848, 850, 849, 869, 870, 871, 872, 873, 875, 874,
	878, 879, 877, 876, 881, 880, 775, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 944,
	268, 945, 0, 0, 949, 0, 0, 0, 951, 950,
	0, 952, 914, 913, 0, 0, 946, 947, 0, 948,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 959, 960,
	961, 962, 963, 964, 965, 966, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 1034, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 774, 0,
	0, 0, 276, 779, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 786, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 97, 0, 0, 1035, 516, 969,
	758, 935, 973, 1036, 987, 988, 989, 974, 0, 243,
	975, 976, 250, 977, 0, 934, 817, 819, 818, 884,
	885, 886, 887, 888, 889, 890, 820, 821, 815, 982,
	619, 990, 991, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 754, 771, 0, 785,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 769, 1083, 0, 0, 0, 929, 0, 770, 0,
	0, 778, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 928, 0, 0, 639, 0, 0, 926, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 979, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 980, 981, 262, 662,
	825, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 833, 834, 286, 313, 910,
	909, 908, 312, 314, 906, 907, 905, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	916, 938, 927, 791, 792, 917, 918, 942, 919, 794,
	795, 939, 940, 788, 789, 793, 941, 943, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 930, 777, 776, 0,
	783, 784, 0, 813, 814, 816, 822, 823, 824, 835,
	882, 883, 891, 893, 894, 892, 895, 896, 897, 900,
	901, 902, 903, 898, 899, 904, 796, 800, 797, 798,
	799, 811, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 812, 953, 954, 955, 956, 957, 958, 828,
	832, 831, 829, 830, 826, 827, 854, 853, 855, 856,
	857, 858, 859, 860, 862, 861, 863, 864, 865, 866,
	867, 868, 836, 837, 840, 841, 839, 838, 842, 851,
	852, 843, 844, 845, 846, 847, 848, 850, 849, 869,
	870, 871, 872, 873, 875, 874, 878, 879, 877, 876,
	881, 880, 775, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 944, 268, 945, 0, 0,
	949, 0, 0, 0, 951, 950, 0, 952, 914, 913,
	0, 0, 946, 947, 0, 948, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 959, 960, 961, 962, 963, 964,
	965, 966, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 1034, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 774, 0, 0, 0, 276, 779,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 786, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	97, 0, 0, 1035, 516, 969, 758, 935, 973, 1036,
	987, 988, 989, 974, 0, 243, 975, 976, 250, 977,
	0, 934, 817, 819, 818, 884, 885, 886, 887, 888,
	889, 890, 820, 821, 815, 982, 619, 990, 991, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 754, 771, 0, 785, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 769, 0, 0,
	0, 0, 929, 0, 770, 0, 0, 778, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 928, 0, 0,
	639, 0, 0, 926, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 979, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 980, 981, 262, 662, 825, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 833, 834, 286, 313, 910, 909, 908, 312, 314,
	906, 907, 905, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 916, 938, 927, 791,
	792, 917, 918, 942, 919, 794, 795, 939, 940, 788,
	789, 793, 941, 943, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 930, 777, 776, 0, 783, 784, 0, 813,
	814, 816, 822, 823, 824, 835, 882, 883, 891, 893,
	894, 892, 895, 896, 897, 900, 901, 902, 903, 898,
	899, 904, 796, 800, 797, 798, 799, 811, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 812, 953,
	954, 955, 956, 957, 958, 828, 832, 831, 829, 830,
	826, 827, 854, 853, 855, 856, 857, 858, 859, 860,
	862, 861, 863, 864, 865, 866, 867, 868, 836, 837,
	840, 841, 839, 838, 842, 851, 852, 843, 844, 845,
	846, 847, 848, 850, 849, 869, 870, 871, 872, 873,
	875, 874, 878, 879, 877, 876, 881, 880, 775, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 944, 268, 945, 0, 0, 949, 0, 0, 0,
	951, 950, 0, 952, 914, 913, 0, 0, 946, 947,
	0, 948, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	959, 960, 961, 962, 963, 964, 965, 966, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 1034,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	774, 0, 0, 0, 276, 779, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 786, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 782,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 97, 0, 0, 1035,
	516, 969, 758, 935, 973, 1036, 987, 988, 989, 974,
	0, 243, 975, 976, 250, 977, 0, 934, 817, 819,
	818, 884, 885, 886, 887, 888, 889, 890, 820, 821,
	815, 982, 619, 990, 991, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 754, 771,
	0, 785, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 769, 0, 0, 0, 0, 929, 0,
	770, 0, 0, 778, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 3207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 928, 0, 0, 639, 0, 0, 926,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 979, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 980, 981,
	262, 662, 825, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 833, 834, 286,
	313, 910, 909, 908, 312, 314, 906, 907, 905, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 916, 938, 927, 791, 792, 917, 918, 942,
	919, 794, 795, 939, 940, 788, 789, 793, 941, 943,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 930, 777,
	776, 0, 783, 784, 0, 813, 814, 816, 822, 823,
	824, 835, 882, 883, 891, 893, 894, 892, 895, 896,
	897, 900, 901, 902, 903, 898, 899, 904, 796, 800,
	797, 798, 799, 811, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 812, 953, 954, 955, 956, 957,
	958, 828, 832, 831, 829, 830, 826, 827, 854, 853,
	855, 856, 857, 858, 859, 860, 862, 861, 863, 864,
	865, 866, 867, 868, 836, 837, 840, 841, 839, 838,
	842, 851, 852, 843, 844, 845, 846, 847, 848, 850,
	849, 869, 870, 871, 872, 873, 875, 874, 878, 879,
	877, 876, 881, 880, 775, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 944, 268, 945,
	0, 0, 949, 0, 0, 0, 951, 950, 0, 952,
	914, 913, 0, 0, 946, 947, 0, 948, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 959, 960, 961, 962,
	963, 964, 965, 966, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 1034, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 774, 0, 0, 0,
	276, 779, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	786, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 782, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 97, 0, 0, 1035, 516, 969, 758, 935,
	973, 1036, 987, 988, 989, 974, 0, 243, 975, 976,
	250, 977, 0, 934, 817, 819, 818, 884, 885, 886,
	887, 888, 889, 890, 820, 821, 815, 982, 619, 990,
	991, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 754, 771, 0, 785, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 769,
	0, 0, 0, 0, 929, 0, 770, 0, 0, 778,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 3203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 928,
	0, 0, 639, 0, 0, 926, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 979, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 980, 981, 262, 662, 825, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 833, 834, 286, 313, 910, 909, 908,
	312, 314, 906, 907, 905, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 916, 938,
	927, 791, 792, 917, 918, 942, 919, 794, 795, 939,
	940, 788, 789, 793, 941, 943, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 930, 777, 776, 0, 783, 784,
	0, 813, 814, 816, 822, 823, 824, 835, 882, 883,
	891, 893, 894, 892, 895, 896, 897, 900, 901, 902,
	903, 898, 899, 904, 796, 800, 797, 798, 799, 811,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	812, 953, 954, 955, 956, 957, 958, 828, 832, 831,
	829, 830, 826, 827, 854, 853, 855, 856, 857, 858,
	859, 860, 862, 861, 863, 864, 865, 866, 867, 868,
	836, 837, 840, 841, 839, 838, 842, 851, 852, 843,
	844, 845, 846, 847, 848, 850, 849, 869, 870, 871,
	872, 873, 875, 874, 878, 879, 877, 876, 881, 880,
	775, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 944, 268, 945, 0, 0, 949, 0,
	0, 0, 951, 950, 0, 952, 914, 913, 0, 0,
	946, 947, 0, 948, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 959, 960, 961, 962, 963, 964, 965, 966,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 1034, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 774, 0, 0, 0, 276, 779, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 786, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 782, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	0, 1035, 516, 969, 1104, 935, 973, 1036, 987, 988,
	989, 974, 0, 243, 975, 976, 250, 977, 0, 934,
	817, 819, 818, 884, 885, 886, 887, 888, 889, 890,
	820, 821, 815, 982, 619, 990, 991, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 785, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 769, 0, 0, 0, 0,
	929, 0, 770, 0, 0, 778, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 928, 0, 0, 639, 0,
	0, 926, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 979,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	980, 981, 262, 662, 825, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 833,
	834, 286, 313, 910, 909, 908, 312, 314, 906, 907,
	905, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 916, 938, 927, 791, 792, 917,
	918, 942, 919, 794, 795, 939, 940, 788, 789, 793,
	941, 943, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	930, 777, 776, 0, 783, 784, 0, 813, 814, 816,
	822, 823, 824, 835, 882, 883, 891, 893, 894, 892,
	895, 896, 897, 900, 901, 902, 903, 898, 899, 904,
	796, 800, 797, 798, 799, 811, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 812, 953, 954, 955,
	956, 957, 958, 828, 832, 831, 829, 830, 826, 827,
	854, 853, 855, 856, 857, 858, 859, 860, 862, 861,
	863, 864, 865, 866, 867, 868, 836, 837, 840, 841,
	839, 838, 842, 851, 852, 843, 844, 845, 846, 847,
	848, 850, 849, 869, 870, 871, 872, 873, 875, 874,
	878, 879, 877, 876, 881, 880, 775, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 944,
	268, 945, 0, 0, 949, 0, 0, 0, 951, 950,
	0, 952, 914, 913, 0, 0, 946, 947, 0, 948,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 959, 960,
	961, 962, 963, 964, 965, 966, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 1034, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 774, 0,
	0, 0, 276, 779, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 786, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 97, 0, 0, 1035, 516, 969,
	1104, 935, 973, 1036, 987, 988, 989, 974, 0, 243,
	975, 976, 250, 977, 0, 934, 817, 819, 818, 884,
	885, 886, 887, 888, 889, 890, 820, 821, 815, 982,
	619, 990, 991, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 0, 785,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 769, 0, 0, 0, 0, 929, 0, 770, 0,
	0, 778, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 2143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 928, 0, 0, 639, 0, 0, 926, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 979, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 980, 981, 262, 662,
	825, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 833, 834, 286, 313, 910,
	909, 908, 312, 314, 906, 907, 905, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	916, 938, 927, 791, 792, 917, 918, 942, 919, 794,
	795, 939, 940, 788, 789, 793, 941, 943, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 930, 777, 776, 0,
	783, 784, 0, 813, 814, 816, 822, 823, 824, 835,
	882, 883, 891, 893, 894, 892, 895, 896, 897, 900,
	901, 902, 903, 898, 899, 904, 796, 800, 797, 798,
	799, 811, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 812, 953, 954, 955, 956, 957, 958, 828,
	832, 831, 829, 830, 826, 827, 854, 853, 855, 856,
	857, 858, 859, 860, 862, 861, 863, 864, 865, 866,
	867, 868, 836, 837, 840, 841, 839, 838, 842, 851,
	852, 843, 844, 845, 846, 847, 848, 850, 849, 869,
	870, 871, 872, 873, 875, 874, 878, 879, 877, 876,
	881, 880, 775, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 944, 268, 945, 0, 0,
	949, 0, 0, 0, 951, 950, 0, 952, 914, 913,
	0, 0, 946, 947, 0, 948, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 959, 960, 961, 962, 963, 964,
	965, 966, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 1034, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 774, 0, 0, 0, 276, 779,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 786, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	97, 0, 0, 1035, 516, 969, 1104, 935, 973, 1036,
	987, 988, 989, 974, 0, 243, 975, 976, 250, 977,
	0, 934, 817, 819, 818, 884, 885, 886, 887, 888,
	889, 890, 820, 821, 815, 982, 619, 990, 991, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 0, 785, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 769, 0, 0,
	0, 0, 929, 0, 770, 0, 0, 778, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	2141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 928, 0, 0,
	639, 0, 0, 926, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 979, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 980, 981, 262, 662, 825, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 833, 834, 286, 313, 910, 909, 908, 312, 314,
	906, 907, 905, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 916, 938, 927, 791,
	792, 917, 918, 942, 919, 794, 795, 939, 940, 788,
	789, 793, 941, 943, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 930, 777, 776, 0, 783, 784, 0, 813,
	814, 816, 822, 823, 824, 835, 882, 883, 891, 893,
	894, 892, 895, 896, 897, 900, 901, 902, 903, 898,
	899, 904, 796, 800, 797, 798, 799, 811, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 812, 953,
	954, 955, 956, 957, 958, 828, 832, 831, 829, 830,
	826, 827, 854, 853, 855, 856, 857, 858, 859, 860,
	862, 861, 863, 864, 865, 866, 867, 868, 836, 837,
	840, 841, 839, 838, 842, 851, 852, 843, 844, 845,
	846, 847, 848, 850, 849, 869, 870, 871, 872, 873,
	875, 874, 878, 879, 877, 876, 881, 880, 775, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 944, 268, 945, 0, 0, 949, 0, 0, 0,
	951, 950, 0, 952, 914, 913, 0, 0, 946, 947,
	0, 948, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	959, 960, 961, 962, 963, 964, 965, 966, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 1034,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 1147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 1146, 639, 0, 0, 0,
	0, 0, 1143, 1144, 371, 1112, 336, 202, 230, 1137,
	1141, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 87,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	99, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 97, 0, 0, 0, 516, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 96, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 2460, 0, 0, 2459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 87, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 99, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	1764, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	96, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 1803, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 1805, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 1807, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 1489, 0, 1490, 1491, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	97, 0, 0, 0, 516, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 2460,
	0, 0, 2459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 2393,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 1982,
	516, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	2391, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 1112, 336, 202, 230, 1110, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 2393, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 1982, 516, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 1764, 0, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 3771, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 2152, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 2924,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 2891, 0, 0, 0, 0, 243, 0, 0,
	250, 2892, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 1826, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 1825, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 4117, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 1982,
	516, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 3771, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 2461, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 1807, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 2099, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 2090, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 1949, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	1947, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 1945, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 1943, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 1941, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 1937, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	1935, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 1933, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 1908, 0, 0, 0,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 1811,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	0, 0, 516, 969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1466, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 1465, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 685, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 4181, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 0, 0, 382, 585, 586,
	322,
}

var yyPact = [...]int{
	-1000, -1000, 4344, -1000, -550, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2438, 2468, -1000, -1000, -1000, -1000, 2657, -1000, 1007,
	-1000, 2095, 2039, 2432, 5169, -1000, 56315, 795, -1000, 53331,
	-411, 895, 2091, 36919, -1000, 215, -1000, 214, 54823, 218,
	-1000, -1000, -1000, -1000, -411, 22745, 2330, 49, 44, 56315,
	-1000, -1000, -1000, -1000, -368, 2628, 2008, -1000, 478, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52585, -1000, -1000, -1000,
	1105, -1000, -1000, 2439, 2446, 2283, 925, 2313, -1000, 2512,
	2008, -1000, 22745, 2590, 2371, 21999, 21999, 490, -1000, -1000,
	267, -1000, -1000, 31697, 56315, 39903, 2510, 54823, -1000, 2432,
	-1000, -1000, -1000, 223, -1000, 369, 2018, -1000, 2016, -1000,
	917, 1097, 401, 857, 853, 400, 395, 394, 383, 382,
	378, 377, 373, 408, -1000, 941, 941, -224, -230, 1901,
	448, 464, 464, 1021, 515, 2405, 2402, -1000, -1000, 941,
	941, 941, 839, 941, 941, 941, 941, 351, 349, 941,
	941, 941, 941, 941, 941, 941, 941, 941, 941, 941,
	941, 941, 941, 941, 941, 941, 330, 2432, 293, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 56315, 751, 56315, -1000, 845, 793, -1000,
	-1000, -458, 1109, 1109, 62, 1109, 1109, 1109, 1109, 187,
	1024, 43, -1000, 177, 343, 155, 321, 1104, 180, -1000,
	-1000, 295, 1104, 1851, -1000, 931, 316, 161, -1000, 1109,
	1109, -1000, 15261, 209, 15261, 15261, 304, 148, -1000, 2424,
	-1000, -1000, -1000, -1000, -1000, 1223, -1000, -1000, -1000, -1000,
	-49, 514, -1000, -1000, -1000, -1000, 54823, 51839, 288, -1000,
	-1000, 37, 1922, 1380, 22745, 1202, 921, -1000, -1000, 1325,
	901, -1000, -1000, -1000, -1000, -1000, 813, -1000, 24983, 24983,
	24983, 24983, -1000, -1000, 1419, 51093, 1419, 1419, 24983, 1419,
	24983, 1419, 1419, 1419, 1419, 22745, 1419, 1419, 1419, 1419,
	-1000, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	-1000, -1000, -1000, -1000, 1419, 843, 1419, 1419, 1419, 1419,
	1419, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1419, 1419,
	1419, 1419, 1419, 1419, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, -1000, -1000, -1000,
	1609, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1744, 1525,
	1512, 1509, -1000, 19761, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1419, -1000, -1000, -1000, 56315, -1000,
	1419, 245, 54823, 54823, 399, 1356, -1000, -1000, 2512, 2008,
	-1000, 2628, 2553, 478, -1000, 4273, 1953, 1583, 1459, 2008,
	950, 1999, 56315, -1000, 2039, 228, -1000, -1000, -1000, -343,
	-349, 2245, 1418, 1822, -1000, -1000, -1000, -1000, 1647, 22745,
	-1000, -1000, 2648, -1000, 29459, 841, 2645, 50347, -1000, 490,
	490, 2015, 454, 11, -1000, -1000, -1000, -1000, 956, 36173,
	-1000, -1000, -1000, -1000, -1000, 1905, 56315, -1000, -1000, 6716,
	54823, -1000, 2090, -1000, 1886, -1000, 2063, 22745, 478, 1841,
	-1000, -1000, -1000, -1000, 941, 941, 941, -1000, 407, 2589,
	5169, 7991, -1000, -1000, -1000, 49601, 2088, 54823, -1000, 2087,
	-1000, 1033, 852, 872, 872, 54823, -1000, -1000, 55569, 54823,
	1023, 998, 54823, 54823, 54823, 54823, -1000, 48855, -1000, 48109,
	47363, 1355, 54823, 46617, 45871, 45125, 44379, 43633, -1000, 2307,
	-1000, 2055, -1000, -1000, -1000, 55569, 54823, 54823, 55569, 54823,
	55569, 56315, 54823, -1000, -1000, 336, -1000, -1000, 1352, 1348,
	1347, 941, 941, 1346, 1813, 1808, 1799, 941, 941, 1343,
	1798, 38411, 1767, 320, 1342, 1340, 1311, 1367, 1743, 210,
	1722, 1353, 1349, 1301, 54823, 2083, 56315, -1000, 297, 1005,
	1011, -1000, -1000, -1000, 955, 2432, 2327, 2012, 504, 792,
	54823, 488, 488, 54823, -1000, -1000, 16013, 56315, 219, -1000,
	1719, 22745, -1000, 1107, 1104, 1104, -1000, -1000, -1000, -1000,
	-1000, -1000, 1109, 56315, 1107, -1000, -1000, -1000, 1104, 1109,
	56315, 1109, 1109, 1109, 1109, 1104, 1104, 1104, 1109, 56315,
	56315, 56315, 56315, 56315, 56315, 56315, 56315, 56315, 15261, 931,
	1109, -459, -1000, 1717, -1000, -1000, -1000, 2199, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15261, 15261,
	-1000, -1000, 2531, 2524, -1000, -1000, -1000, 2011, -1000, 212,
	16, 217, -1000, 42887, 534, 953, -1000, 534, -1000, -1000,
	-1000, -1000, -1000, 2009, 42141, -1000, -461, -463, -467, -468,
	-1000, -1000, -1000, -471, -472, -1000, -1000, -1000, 22745, 22745,
	22745, 22745, -263, -1000, 1279, 24983, 2391, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22745, 1235, 1014, 24983, 24983, 24983,
	24983, 24983, 24983, 24983, 26475, 25729, 24983, 24983, 24983, 24983,
	24983, 24983, -1000, -1000, 33935, 7121, 7121, 901, 901, 901,
	901, -1000, -179, 2002, 55569, -1000, -1000, -1000, 840, 22745,
	22745, 901, -1000, 1294, 1309, 19761, 22745, 22745, 22745, 22745,
	954, 1380, 55569, 22745, -1000, 1459, -1000, -1000, -1000, -1000,
	1250, -1000, -1000, 1126, 2370, 2370, 2370, 2370, 22745, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 2370, 22745,
	196, 196, 268, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, 18269, 22745, 22745, 24983, 22745, 22745, 22745, 1459, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 1459, 22745,
	1277, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 17517, 22745,
	22745, 22745, 22745, 22745, -1000, -1000, -1000, -1000, -1000, -1000,
	22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 1459, 22745,
	22745, 22745, 22745, 22745, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1569, 1580, 1540, 1419, 22745, -1000,
	2001, -1000, -176, 30951, 22745, 1689, 2644, 2128, 54823, -1000,
	-1000, -1000, -1000, 2512, -1000, 2512, 1569, 3959, 2248, 21999,
	-1000, -1000, 3959, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1797, -1000, 326, 791,
	2046, 297, 54823, 788, 785, 782, 452, -1000, -68, 948,
	56315, 1999, 2507, -1000, 1998, -1000, -1000, 1419, -1000, -300,
	-1000, -307, 2223, 1668, 846, -1000, 22745, 22745, 1995, -1000,
	1318, 56315, -1000, -263, -1000, 41395, -1000, -1000, 14509, 56315,
	363, 56315, -1000, 30205, 40649, 274, -1000, 11, 1962, -1000,
	15, 5, 19015, 900, -1000, -1000, -1000, 1901, 27221, 1879,
	900, 85, -1000, -1000, -1000, 2063, -1000, 2063, 2063, 2063,
	2063, 846, 846, 846, 846, -1000, -1000, -1000, -1000, -1000,
	2080, 2063, 2079, -1000, 2063, 2063, 2063, 2063, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2075, 2075, 2075, 2072, 2072,
	2064, 2064, 445, -1000, 22745, 450, 39903, 2479, 1300, 1458,
	-189, -1000, 54823, 1467, 1463, 1460, -1000, -537, 1981, -1000,
	-1000, 2588, -1000, -1000, 1135, 1068, 1066, 1154, 54823, 252,
	360, -1000, 437, -1000, 39903, 54823, 996, 872, 54823, -1000,
	54823, -1000, -1000, -1000, -1000, -1000, 54823, -1000, -1000, 1970,
	-1000, 1935, 1103, 1062, 1102, 1056, 1970, -1000, -1000, -188,
	1970, -1000, 1970, -1000, 1970, -1000, 1970, -1000, 1970, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1029, 334,
	-345, 54823, 252, 503, -1000, 493, 33935, -1000, -1000, -1000,
	33935, 33935, -1000, -1000, -1000, -1000, 1659, 1652, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -519, 56315, -1000,
	294, 344, 342, 319, 56315, 396, 2389, 2378, 2377, 2374,
	2366, 2363, 2359, 315, 348, 56315, 56315, 488, 2174, 56315,
	2478, 56315, -1000, -1000, -1000, -1000, -1000, 1644, 1624, -1000,
	1380, 56315, -1000, -1000, 1109, 1109, -1000, -1000, 56315, 1109,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1109, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 56315, -1000, -1000, -1000, -1000, 1614,
	-1000, 56315, -49, 206, -1000, -1000, 54823, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -115, -1000, 48, 4,
	375, -1000, -1000, -1000, -1000, -1000, 2517, -1000, 1380, 1037,
	977, -1000, 1419, -1000, -1000, 1183, -1000, -1000, -1000, -1000,
	-1000, 1419, 1419, 1419, -1000, -1000, -1000, -1000, -1000, 1235,
	24983, 24983, 24983, 1611, 809, 1695, 1366, 1416, 1156, 1156,
	981, 24983, 981, 24983, 905, 905, 905, 905, 905, -1000,
	-1000, -1000, -1000, -1000, -1000, 1609, -1000, 1590, -1000, 1419,
	55569, 1792, 17517, 2048, 1608, 1459, 916, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4017, 1459, 1922,
	1459, 1977, 3994, 975, -1000, 22745, 1459, 3987, -1000, -1000,
	1459, 1459, 22745, -1000, -1000, 22745, 22745, 22745, 22745, 1458,
	1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 22745,
	1458, 1966, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1965, 2641, 1431, 1458, 1458, 1458, 1458, 3983, 1458, 1458,
	22745, 1817, -1000, -1000, -1000, 1493, 3974, 1551, 3956, 1458,
	1458, -1000, 1458, 3950, 3643, 1459, 2992, 2986, 1458, 1458,
	1458, 1458, 1458, 2978, 2916, 1458, 1458, 2910, 1458, 3633,
	1458, 2873, 2812, 2795, 2786, 2779, 2775, 2769, 2762, 2714,
	2708, 2691, 2668, 2653, 2592, 2572, 2568, 2555, 2551, 1458,
	1458, 1458, 3627, 1458, 3619, 1458, 3614, 1458, 1458, 3575,
	2529, 2522, 1459, 1964, -1000, 3564, 1458, 3558, 3549, 3534,
	2485, 3530, 3525, 3521, 1458, 1458, 1458, 2448, 3517, 3506,
	3502, 3493, 3469, 3456, 3452, 3432, 3428, 1458, 1540, 1540,
	1540, 1540, 1540, 3417, -267, 1458, 1459, -1000, -1000, -1000,
	-1000, -1000, 3408, 2372, 3404, 3388, 3384, 3335, 1459, 1419,
	838, -1000, -1000, 1540, 1459, 1459, 1540, 1540, 3319, 3157,
	3139, 3131, 3126, 3109, 1458, 1458, -1000, 1458, 3096, 3081,
	2332, 2325, 1459, -1000, 1540, 56315, -1000, -453, -1000, -11,
	943, 1419, -1000, 38411, 1459, -1000, 5659, -1000, 1139, -1000,
	-1000, -1000, -1000, -1000, 35427, 1804, -1000, -1000, -1000, 452,
	776, 254, 452, 297, 294, 2121, 54823, 54823, 54823, 56315,
	973, -1000, 520, -1000, 1419, -491, 21253, -1000, -1000, -1000,
	846, 63, 34681, 865, 865, 94, 1380, 1380, 22745, -1000,
	-1000, -1000, -1000, -1000, -1000, 836, 2591, 386, 1419, -1000,
	1934, 2508, -1000, -1000, -1000, 2506, 27967, -1000, -1000, 1419,
	1419, 56315, 1913, 1904, -1000, 835, -1000, 1370, 1962, 11,
	2, -1000, -1000, -1000, -1000, 1380, -1000, 1417, 372, 1574,
	-1000, 443, -1000, -1000, -1000, -1000, 2343, 74, -1000, -1000,
	-1000, 833, 846, -1000, -1000, -1000, -1000, -1000, -1000, 1578,
	-1000, 1578, -1000, -1000, -1000, -1000, -1000, 1293, -1000, -1000,
	-1000, -1000, 1287, -1000, -1000, 1270, -1000, -1000, 2177, 2151,
	450, -1000, -1000, 941, 1576, -1000, -1000, 2346, 941, 941,
	54823, -1000, -1000, 1842, 2479, -1000, -47, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -526, 179, 371, -1000, -1000, -1000,
	6310, 54823, 1788, -1000, 250, -1000, 1730, -1000, 54823, -1000,
	1773, 2070, 54823, 54823, -1000, -1000, -1000, 54823, 1419, -1000,
	-1000, -1000, -1000, 790, 2429, 301, -1000, -1000, -287, -1000,
	-1000, 252, 250, 55569, 54823, 900, -1000, -1000, -1000, -1000,
	-1000, -522, 1766, 773, 56315, 56315, 56315, 56315, 56315, 56315,
	821, -1000, -1000, 30, -1000, -1000, 230, -1000, -1000, 1573,
	-1000, -1000, -1000, -1000, 230, -1000, -1000, -1000, -1000, -1000,
	332, 492, -1000, 56315, 56315, 959, -1000, -1000, -1000, -1000,
	-1000, 1104, -1000, -1000, 1104, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2422, 56315, 3,
	-488, -1000, -485, 22745, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1246, 808, 1695, 24983, 24983, 1309, 1309, 24983, -1000,
	-1000, -1000, 951, 951, 33935, -1000, 24983, 22745, -1000, -1000,
	22745, 22745, 22745, 944, -1000, 22745, 1284, -1000, 22745, -1000,
	-267, 1540, 1458, 1458, 1458, 1458, -267, -267, -267, -267,
	-267, -267, -267, -267, -267, -267, 1864, -1000, 22745, 22745,
	22745, 1459, 292, -1000, -1000, -1000, -267, 22745, -1000, -1000,
	2635, -1000, 22745, -1000, 33935, 22745, 22745, 22745, -1000, -1000,
	-1000, 22745, 22745, -1000, -1000, 22745, -1000, 22745, -1000, -1000,
	-1000, -1000, -1000, -1000, 22745, -1000, 22745, -1000, -1000, -1000,
	22745, -1000, 22745, -1000, -1000, 22745, -1000, 22745, -1000, 22745,
	-1000, 22745, -1000, 22745, -1000, 22745, -1000, 22745, -1000, 22745,
	-1000, 22745, -1000, 22745, -1000, 22745, -1000, 22745, -1000, 22745,
	-1000, 22745, -1000, 22745, -1000, 22745, -1000, 22745, -1000, 22745,
	-1000, -1000, -1000, 22745, -1000, 22745, -1000, 22745, -1000, -1000,
	22745, -1000, 22745, -1000, 22745, -1000, 22745, 22745, -1000, 22745,
	22745, 22745, -1000, 22745, 22745, 22745, 22745, -1000, -1000, -1000,
	-1000, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745, 22745,
	22745, -1000, -1000, -1000, -1000, -1000, -1000, 22745, -1000, 39903,
	14, -267, 1277, 14, 1277, 24237, 849, 830, 23491, -1000,
	22745, 16765, -1000, -1000, -1000, -1000, -1000, 22745, 22745, 22745,
	22745, 22745, 22745, -1000, -1000, -1000, 22745, 22745, -1000, 22745,
	-1000, 22745, -1000, -1000, -1000, -1000, -1000, 943, -1000, 829,
	828, 872, 54823, -1000, -1000, -1000, -1000, 1958, -1000, 2534,
	-1000, 2265, 2262, 2631, 2591, 21999, -1000, 30205, 56315, 56315,
	290, 56315, 294, 758, 2171, -1000, 2121, 2121, 2121, -1000,
	2466, -1000, 2068, 1206, -1000, -1000, -1000, -1000, -1000, -442,
	-1000, 2310, 2400, 865, 865, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13757, 2512, 22745, 2158, 55569, 1419, -1000, 28713,
	54823, 55569, 30205, 30205, 30205, 30205, 30205, -1000, 2206, 2197,
	-1000, 2187, 2186, 2210, 56315, -1000, 1569, 1763, -1000, 22745,
	32443, 1908, 30205, -1000, -1000, 30205, 56315, 13005, -1000, -1000,
	-4, -10, -1000, -1000, -1000, -1000, 1901, -1000, -1000, 984,
	2503, 2328, -1000, -1000, -1000, -1000, -1000, 1747, -1000, 1742,
	1936, 1735, 1729, 334, -1000, 2029, 2414, 941, 941, -1000,
	1259, -1000, 1294, 1564, 1550, -1000, -1000, -1000, 430, -1000,
	-1000, -535, 1258, 2067, 2014, 22745, 2066, 2586, 1929, 54823,
	-1000, -1000, 55569, -1000, 286, -1000, 450, 54823, -1000, -1000,
	-1000, 360, 56315, -1000, 9524, -1000, -1000, -1000, 250, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 56315, 2109, -1000, -1000,
	-1000, -1000, -1000, 249, 248, 1547, 227, 1545, -1000, 227,
	-1000, 56315, 957, 2151, 56315, -1000, -1000, -1000, 1109, 1109,
	-1000, -1000, 2409, -1000, 1294, 1458, 24983, 24983, -1000, 901,
	-1000, -1000, 427, -244, 2063, 2063, -1000, 2063, 2064, -1000,
	2063, 141, 2063, 139, 2063, -1000, -1000, 1459, 1459, -1000,
	1540, 2320, 1663, 3011, -1000, 1380, 22745, 3001, -1000, -1000,
	-267, -267, -267, -267, -267, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -76, 2997, 2906, 1458, -1000,
	2058, 2056, -1000, 1458, 22745, 1458, 1459, 2291, 1458, 1458,
	1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458,
	2282, 2271, 2250, 2246, 2230, 2218, 2167, 2141, 2124, 2102,
	2096, 2092, 2076, 2060, 2053, 2041, 1458, 1458, 2024, 1458,
	2013, 1946, -1000, 1380, 1540, 2587, 1540, 1458, 1458, 2564,
	291, 1458, 1715, 1715, 1715, 1715, 1715, 1540, 1540, 1540,
	1540, 1458, 54823, -1000, -267, -1000, -1000, -326, -327, -1000,
	1459, -267, 1933, 24983, 1458, 24983, 24983, 24983, 1458, 1459,
	-1000, 1937, 1926, 2452, 1919, 1458, 2286, 1458, 1458, 1458,
	1900, -1000, 2515, 1419, 2515, 1419, 2515, 1629, 1139, 56315,
	-1000, -1000, -1000, -1000, 2591, 2594, -1000, 1930, -1000, -1000,
	-1000, -1000, -1000, -1000, 749, 56315, 56315, 2157, 2154, 2150,
	-1000, 1716, -1000, -1000, 63, 631, -1000, 2287, 2400, -1000,
	2576, 2290, 2575, -1000, -1000, -1000, -1000, -1000, 1380, -1000,
	2450, 1923, -1000, 945, 1867, -1000, -1000, 21253, 1658, 2258,
	834, 1629, 1955, 2508, 2125, 2148, 3112, -1000, -1000, -1000,
	-1000, 2190, -1000, 2161, -1000, -1000, 2039, -1000, 2196, 363,
	30205, 1952, 1952, -1000, 831, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1079, 9524, 2664, -1000, 1543, -1000, 1385, 231,
	1254, -1000, -1000, 941, 941, -1000, 994, 989, -1000, 56315,
	2045, -1000, 846, 1527, 846, 1213, -1000, -1000, 1192, -1000,
	-1000, -1000, -1000, 1993, 2277, -1000, -1000, -1000, -1000, 265,
	2044, 2574, -1000, 22745, 2040, 942, 1857, 54823, 54823, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	483, 941, -503, 345, 338, 941, 941, 941, -536, -1000,
	-1000, 1623, 1606, -1000, -227, -1000, 22745, -1000, -1000, -1000,
	-1000, -1000, 1337, 1337, 1525, 1512, 1509, -1000, 2039, -211,
	54823, 54823, 54823, 54823, -1000, -1000, -1000, 1125, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	901, 1459, 380, -214, 1459, -1000, -1000, 846, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22745, -1000,
	22745, -1000, 22745, 1380, 22745, -1000, -1000, -1000, -1000, -1000,
	2512, 1494, 22745, 22745, -1000, 1165, 1144, -267, 1458, -1000,
	-1000, -1000, 22745, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 22745, -1000, 22745, -1000,
	22745, -1000, 22745, -1000, 22745, -1000, 22745, -1000, 22745, -1000,
	22745, -1000, 22745, -1000, 22745, -1000, 22745, -1000, 22745, -1000,
	22745, -1000, 22745, -1000, 22745, -1000, 22745, -1000, -1000, 22745,
	-1000, -1000, -1000, 22745, -1000, 22745, -1000, 22745, -1000, -1000,
	-1000, 22745, 264, 951, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1459, 362, -1000, -1000, -1000,
	2599, -1000, 1459, 22745, 1309, -1000, 1309, 1309, 1309, -1000,
	-1000, -1000, 22745, -1000, 22745, 22745, -1000, 22745, -1000, 22745,
	-1000, -1000, -1000, -1000, 22745, 1419, 2334, 39157, 1419, 39157,
	1419, 32443, -1000, -1000, 2594, 2557, 2571, 56315, -1000, -1000,
	56315, 56315, 56315, -1000, 2294, 2297, 2297, 2287, -1000, 2569,
	2565, -1000, 1490, 2542, 1485, 986, -1000, 55569, 22745, -1000,
	1419, 38411, -1000, 530, 54823, 1419, 54823, -1000, 2552, -1000,
	-1000, 22745, 2036, -1000, 22745, -1000, -1000, -1000, -1000, 7121,
	2591, 1952, -1000, -1000, 913, -1000, 22745, -1000, 10717, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1483, 1473,
	-1000, -1000, 2034, 22745, -1000, -1000, -1000, 1712, 1584, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 360,
	-528, 1850, 54823, 1141, -1000, 1599, 1929, 341, 1419, 1471,
	941, 941, 941, 1132, 1120, 38411, 1596, -1000, 54823, 422,
	-1000, 360, -1000, -236, -237, 1458, -1000, -1000, 2501, -1000,
	16765, -1000, -1000, 2032, 2116, -1000, -1000, -1000, -1000, 2221,
	-184, -217, -1000, -1000, 1458, 1458, 1458, 2182, 1459, -1000,
	1458, 1458, 1563, 1558, -1000, -1000, 1458, 1458, 1458, 1458,
	1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458,
	1458, 1458, 1458, 1458, 1458, 1458, 1540, 1806, -1000, 264,
	1459, 2145, -1000, -1000, 7121, -1000, -1000, 2552, 2540, 14,
	-1000, -1000, 247, 14, 1380, 1002, 1459, 1459, 1002, 1802,
	1458, 1754, 1737, 1458, 1458, 33189, -1000, 2539, 2538, 1582,
	-1000, -1000, 39157, 1582, 39157, 943, 2557, -277, 22745, 22745,
	-1000, -1000, -1000, -1000, 2279, 1226, -1000, -1000, -1000, -1000,
	1466, 1421, -1000, 1404, -1000, 2660, -1000, 1380, -1000, 1419,
	1419, -1000, 822, 1867, -1000, 2512, 1380, 54823, 1380, 66,
	2552, -1000, 1458, -1000, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, -1000, -1000, 54823, 1836, -1000,
	-1000, 1594, 171, -1000, 1531, 1929, -1000, -1000, 894, -1000,
	22745, -1000, 38411, 1382, 1377, -1000, -1000, -1000, -1000, -536,
	-1000, -1000, -1000, -1000, -1000, -1000, 478, 1928, -1000, 940,
	54823, 56315, -1000, 2203, -1000, -1000, -1000, -1000, 22745, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 22745, -1000, 1459, 2139,
	-1000, -372, -1000, -504, 22745, -267, -1000, -1000, -267, -1000,
	-1000, -1000, -1000, -1000, 22745, -1000, -1000, 22745, -1000, 22745,
	-1000, -1000, 1582, -1000, -1000, -1000, 37665, -1000, 1582, -1000,
	1582, -1000, -277, -1000, 1925, -1000, 54823, 1380, 376, -1000,
	1219, -1000, -1000, -1000, -1000, -1000, 55569, 54823, 1867, 54823,
	-1000, -1000, 1562, 1459, 1419, 2512, -1000, 1557, -1000, -1000,
	2030, 2014, -1000, -1000, -1000, 20507, -1000, -1000, -1000, -1000,
	-1000, 283, -189, 16765, 12253, 1542, -1000, -197, 1458, 1540,
	-1000, -478, -1000, -1000, -1000, -1000, 299, -1000, -1000, 1922,
	-1000, -1000, 1711, 1568, 1553, -1000, -1000, -1000, -1000, -1000,
	-1000, -277, -1000, -1000, 2469, -1000, -240, -1000, -1000, 1902,
	1538, -1000, -1000, -1000, 32443, 54077, -1000, -175, 428, 22745,
	2020, 1459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 820, -1000, -1000, -1000, 2109, -215, -1000, -1000,
	-1000, 5276, -492, -308, -320, 24983, -1000, 22745, -1000, 22745,
	-1000, 22745, -1000, 54823, 1419, -1000, -1000, -1000, 1524, -1000,
	5575, -350, 2138, -1000, -102, -1000, -1000, -1000, 1078, 1368,
	-1000, 1111, -1000, -1000, -1000, -1000, 1477, 54823, -1000, 16013,
	-211, -219, 960, -1000, -1000, -1000, -1000, -1000, 1309, 1530,
	1224, 1458, -1000, 54823, -1000, 54077, -335, 900, 7121, -1000,
	2134, 2133, 2639, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-546, 1441, -1000, -1000, -1000, 5276, -334, -1000, 22745, -1000,
	22745, -1000, 1459, -1000, -1000, 2455, 66, -1000, 2654, -1000,
	2650, 966, 966, -1000, 1110, -546, -1000, -1000, -1000, 1458,
	1458, -1000, -351, -1000, -1000, -1000, -1000, -1000, 429, 1289,
	-1000, -1000, -1000, -1000, -1000, 7121, -1000, -1000, -1000, 262,
	262, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3242, 3241, 26, 5, 33, 32, 3240, 3239, 3233,
	178, 3230, 3229, 3228, 3223, 3220, 3219, 2698, 2696, 2690,
	3215, 3213, 3212, 3211, 3210, 3209, 3207, 3206, 3203, 38,
	104, 94, 96, 216, 203, 3202, 3201, 179, 167, 200,
	3200, 3199, 3196, 3195, 3186, 120, 196, 82, 85, 197,
	3185, 3184, 73, 3182, 3180, 3178, 195, 194, 191, 1089,
	3175, 189, 115, 47, 3165, 3163, 3162, 3160, 3158, 3155,
	3144, 3140, 3132, 3129, 3128, 3127, 3126, 3125, 3123, 3122,
	3121, 3120, 307, 3119, 3118, 25, 3116, 75, 3115, 3114,
	3111, 3110, 3109, 17, 3105, 3103, 44, 36, 57, 3102,
	3101, 43, 3099, 3098, 3096, 3092, 3087, 9, 3086, 19,
	3084, 35, 3080, 3078, 123, 3076, 3073, 3068, 39, 3067,
	3064, 3058, 48, 174, 3052, 3049, 147, 3027, 3024, 3023,
	180, 204, 3021, 2282, 3018, 107, 3017, 3016, 3014, 172,
	171, 212, 3000, 105, 2999, 2998, 2997, 133, 2995, 2994,
	3379, 2993, 2991, 59, 61, 10, 2989, 2988, 166, 77,
	58, 2986, 16, 14, 2985, 2983, 60, 72, 2980, 112,
	2979, 2977, 110, 80, 2975, 108, 103, 2974, 2973, 40,
	7, 2972, 1, 4, 2, 90, 2971, 2956, 117, 2953,
	2952, 2937, 91, 2936, 2933, 6283, 2929, 86, 137, 109,
	71, 2927, 173, 127, 2926, 2923, 2919, 2916, 2912, 2907,
	50, 2905, 2903, 2901, 143, 24, 113, 2900, 2899, 150,
	347, 130, 51, 132, 2897, 146, 2896, 209, 78, 2895,
	176, 2894, 2893, 140, 139, 2889, 2888, 54, 169, 199,
	2886, 99, 131, 119, 190, 98, 134, 2885, 2884, 53,
	66, 2881, 2880, 2879, 2874, 175, 2868, 2862, 65, 2860,
	55, 2857, 165, 2856, 338, 67, 2851, 192, 170, 2850,
	68, 2849, 2848, 69, 101, 106, 34, 2843, 160, 164,
	125, 168, 2839, 2838, 52, 2835, 2833, 2831, 202, 292,
	2830, 2829, 313, 184, 148, 136, 83, 2828, 211, 2827,
	2825, 2820, 62, 4568, 6684, 187, 21, 162, 2819, 2818,
	8124, 63, 42, 20, 2817, 210, 2815, 198, 2814, 2813,
	2812, 220, 207, 116, 163, 56, 2807, 2803, 2802, 2800,
	8, 2798, 2797, 2796, 2795, 2794, 2792, 30, 29, 28,
	88, 219, 74, 37, 95, 161, 156, 70, 2789, 2784,
	2782, 122, 84, 2781, 159, 158, 124, 151, 2780, 186,
	149, 128, 2778, 92, 27, 2777, 2776, 2775, 2772, 93,
	2771, 2770, 2769, 2767, 154, 153, 121, 79, 2753, 81,
	102, 157, 152, 49, 2752, 45, 2751, 2746, 22, 188,
	23, 2744, 64, 114, 135, 2739, 6498, 2736, 11, 239,
	155, 2735, 2734, 6, 18, 31, 2732, 2731, 2729, 2726,
	138, 2722, 2714, 2713, 2709, 15, 46, 12, 13, 118,
	144, 76, 2705, 2703, 145, 2700, 2694, 2686, 0, 1059,
	129, 2681, 201,
}

//line sql.y:8870
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 426, 427, 427, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 270, 396, 268, 268, 28, 77, 37, 37, 36,
	36, 39, 39, 38, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 35,
	35, 15, 16, 34, 34, 34, 17, 17, 112, 112,
	18, 19, 19, 19, 19, 430, 430, 190, 190, 188,
	188, 189, 189, 273, 273, 20, 277, 277, 279, 279,
	279, 279, 269, 269, 269, 21, 21, 278, 278, 280,
	280, 280, 283, 283, 283, 283, 324, 324, 324, 22,
	22, 22, 22, 22, 22, 132, 398, 398, 397, 392,
	392, 391, 391, 390, 395, 395, 394, 394, 393, 42,
	41, 43, 43, 43, 44, 53, 53, 53, 53, 54,
	55, 399, 399, 365, 60, 60, 59, 59, 59, 59,
	59, 59, 61, 61, 57, 57, 56, 56, 58, 58,
	367, 367, 353, 353, 366, 366, 366, 366, 366, 366,
	366, 352, 352, 144, 144, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 414, 414, 414, 414, 413, 413, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 154, 154, 166,
	166, 166, 166, 166, 166, 152, 152, 153, 151, 151,
	151, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 165,
	165, 160, 160, 160, 162, 162, 161, 161, 161, 163,
	163, 415, 415, 415, 415, 330, 330, 330, 330, 333,
	333, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	332, 332, 332, 332, 332, 332, 332, 334, 334, 334,
	334, 334, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 336,
	336, 336, 336, 336, 336, 336, 336, 351, 351, 340,
	340, 345, 345, 346, 346, 347, 347, 347, 348, 348,
	348, 349, 349, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 344, 344, 343, 343, 343, 354, 379, 379,
	378, 378, 376, 376, 376, 376, 376, 376, 376, 376,
	363, 363, 373, 373, 373, 373, 373, 362, 362, 358,
	358, 358, 359, 359, 360, 360, 357, 357, 361, 361,
	375, 375, 374, 374, 355, 355, 356, 356, 381, 416,
	416, 416, 416, 416, 417, 417, 382, 406, 408, 408,
	408, 407, 407, 404, 405, 403, 403, 403, 403, 403,
	87, 87, 87, 296, 296, 297, 297, 371, 371, 370,
	370, 370, 372, 372, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 291, 291, 291, 402, 402,
	402, 402, 402, 402, 401, 401, 401, 368, 368, 368,
	368, 400, 400, 62, 62, 228, 228, 419, 419, 421,
	421, 421, 50, 50, 50, 50, 50, 50, 49, 49,
	49, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 51, 51, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 114, 114,
	115, 115, 115, 115, 117, 117, 117, 384, 384, 63,
	63, 3, 3, 178, 180, 181, 181, 179, 179, 179,
	179, 179, 179, 65, 65, 64, 64, 183, 182, 184,
	184, 184, 1, 1, 2, 2, 4, 4, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	350, 350, 350, 383, 383, 385, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 120, 119, 119, 118,
	121, 121, 121, 121, 121, 121, 121, 121, 387, 387,
	387, 66, 66, 388, 337, 338, 339, 5, 6, 364,
	386, 128, 128, 24, 40, 40, 25, 25, 25, 25,
	26, 26, 67, 70, 70, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 301, 301, 290, 290, 299, 299, 289, 289, 315,
	315, 315, 292, 292, 292, 293, 293, 412, 412, 412,
	286, 286, 69, 69, 69, 316, 316, 316, 316, 72,
	72, 422, 422, 423, 423, 424, 424, 424, 73, 74,
	74, 319, 319, 320, 320, 75, 76, 88, 88, 88,
	88, 88, 89, 89, 89, 89, 89, 89, 113, 113,
	113, 10, 10, 10, 10, 84, 84, 84, 9, 9,
	11, 71, 71, 78, 409, 409, 410, 411, 411, 411,
	411, 79, 81, 27, 27, 27, 27, 27, 27, 138,
	138, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 133, 133, 133, 127, 127, 431, 82,
	83, 83, 131, 131, 131, 124, 124, 124, 130, 130,
	130, 12, 12, 13, 272, 272, 14, 14, 137, 137,
	136, 136, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 134, 134, 135, 135, 135, 135, 308,
	308, 308, 307, 307, 172, 172, 174, 173, 173, 175,
	175, 176, 176, 176, 176, 226, 226, 198, 198, 265,
	265, 266, 266, 264, 264, 271, 271, 267, 267, 267,
	267, 274, 274, 177, 177, 177, 177, 185, 185, 186,
	186, 187, 187, 318, 318, 313, 313, 313, 312, 312,
	191, 191, 191, 193, 192, 192, 192, 192, 194, 194,
	196, 196, 195, 195, 197, 202, 202, 201, 201, 199,
	199, 199, 199, 199, 199, 200, 200, 200, 200, 203,
	203, 150, 150, 150, 150, 150, 150, 150, 150, 420,
	420, 164, 164, 164, 164, 164, 164, 164, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 255,
	255, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 231, 231, 230, 230, 90, 90, 90, 91, 91,
	92, 92, 92, 92, 92, 93, 93, 93, 93, 93,
	93, 93, 95, 95, 94, 94, 217, 217, 305, 305,
	96, 97, 97, 98, 98, 101, 101, 100, 99, 99,
	105, 105, 102, 102, 104, 104, 103, 106, 106, 107,
	108, 108, 287, 287, 204, 204, 213, 213, 213, 213,
	205, 205, 206, 206, 206, 206, 206, 206, 214, 214,
	214, 225, 215, 215, 211, 211, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	169, 169, 169, 169, 236, 236, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 157, 157, 170, 170, 170, 170, 171, 171, 171,
	171, 171, 171, 171, 326, 326, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 432, 432, 341, 341, 341, 212,
	212, 212, 212, 212, 129, 129, 129, 129, 129, 323,
	323, 323, 327, 327, 327, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	328, 328, 234, 234, 125, 125, 232, 232, 233, 235,
	235, 227, 227, 227, 227, 229, 229, 208, 208, 208,
	237, 237, 329, 329, 238, 238, 109, 110, 110, 111,
	111, 239, 239, 241, 240, 240, 242, 243, 243, 243,
	244, 244, 245, 245, 245, 52, 52, 52, 52, 52,
	47, 47, 47, 47, 48, 48, 48, 48, 140, 140,
	141, 141, 141, 143, 143, 142, 142, 85, 85, 86,
	86, 86, 147, 147, 148, 149, 149, 149, 145, 145,
	146, 146, 262, 262, 262, 262, 262, 262, 262, 246,
	246, 246, 253, 253, 253, 249, 249, 251, 251, 251,
	252, 252, 252, 250, 259, 259, 261, 261, 260, 260,
	256, 256, 257, 257, 258, 258, 258, 254, 254, 207,
	207, 207, 207, 207, 263, 263, 263, 263, 317, 317,
	317, 275, 275, 218, 218, 219, 219, 223, 223, 222,
	222, 220, 221, 224, 224, 168, 276, 276, 284, 281,
	281, 282, 282, 309, 309, 309, 285, 285, 298, 298,
	294, 294, 295, 295, 288, 288, 300, 300, 300, 80,
	216, 216, 380, 380, 377, 304, 304, 306, 306, 310,
	310, 314, 314, 311, 311, 8, 425, 425, 425, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 428, 429, 321, 322, 322, 322,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 3,
	3, 5, 7, 10, 9, 1, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 6, 5, 2, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	6, 6, 8, 7, 4, 7, 8, 8, 8, 5,
	3, 1, 1, 5, 0, 1, 1, 1, 1, 2,
	2, 2, 0, 1, 4, 4, 4, 4, 4, 4,
	2, 4, 1, 3, 1, 1, 3, 4, 3, 3,
	3, 5, 10, 0, 2, 0, 2, 3, 5, 3,
	4, 2, 3, 2, 3, 3, 3, 3, 2, 2,
	4, 4, 1, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 3, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 2, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 6, 10,
	7, 5, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 6, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 4, 5, 5, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 2, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 5, 3,
	5, 0, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 3, 2, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 4, 4,
	4, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 1, 2, 3, 7, 0,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 5, 5, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 3, 6, 1,
	1, 3, 4, 3, 4, 4, 4, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 5, 5, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 5, 6, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 4,
	2, 4, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 1, 0, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 2, 2, 5, 6, 6, 6, 6, 6,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	8, 4, 8, 8, 6, 5, 4, 4, 4, 5,
	7, 4, 4, 7, 4, 4, 6, 6, 6, 8,
	6, 6, 4, 4, 3, 4, 6, 6, 4, 4,
	6, 4, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 4, 4, 4, 6, 4, 6, 4, 4,
	6, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 4, 4, 6, 4, 6, 4, 8, 6,
	4, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	4, 6, 8, 6, 4, 6, 6, 8, 10, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 5, 9, 6, 9,
	8, 6, 8, 8, 8, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 4, 4, 3, 4, 6, 6, 4,
	6, 4, 6, 8, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 4, 0, 2, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 1,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 1, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 3, 4, 2, 3, 4, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 3,
	1, 6, 5, 4, 1, 3, 3, 5, 0, 2,
	5, 0, 5, 1, 3, 1, 3, 1, 3, 1,
	2, 3, 4, 1, 1, 1, 1, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -426, -82, -431, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -67, -70,
	-68, -69, -72, -73, -74, -75, -76, -9, -11, -71,
	-27, -28, -77, -78, -79, -80, -81, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -112, -36, 35, -41,
	-42, -53, -43, -54, -44, 241, -55, 243, 242, 280,
	244, 397, 273, 83, 330, 331, 333, 334, 335, 336,
	-113, 708, 278, 279, 246, 39, 51, 36, 37, 40,
	250, 286, 287, 249, 145, -33, -37, 12, -428, 15,
	487, 240, 275, 274, 31, -34, 597, 95, -35, 63,
	-83, -427, 756, -262, -246, 26, 36, 32, -245, -241,
	-131, -246, 24, 22, 11, -82, -82, -82, 16, 17,
	-82, -365, -367, 95, 173, 95, -265, 95, -60, -59,
	-57, -56, -58, -61, 34, -50, -51, -389, -49, -46,
	245, 242, 290, 135, 136, 280, 281, 282, 244, 264,
	279, 283, 278, 299, -45, 90, 36, 597, 600, -372,
	241, 247, 248, 243, 488, 138, 137, 84, -369, 392,
	631, 726, -61, 728, 110, 113, 727, 50, 254, 729,
	730, 731, 638, 732, 263, 733, 734, 735, 736, 742,
	679, 743, 744, 745, 139, 11, -82, -314, -310, 100,
	-303, 594, 266, 629, 441, 630, 315, 90, 47, 42,
	533, 604, 388, 392, 631, 518, 726, 398, 330, 348,
	342, 523, 524, 525, 371, 363, 595, 632, 605, 318,
	267, 303, 720, 361, 149, 728, 322, 633, 281, 399,
	400, 634, 401, 110, 333, 438, 741, 321, 635, 739,
	113, 727, 338, 88, 517, 57, 723, 326, 50, 276,
	446, 447, 359, 249, 355, 729, 304, 636, 607, 297,
	138, 135, 748, 39, 351, 56, 33, 738, 137, 55,
	730, 164, 637, 731, 638, 403, 378, 714, 54, 404,
	282, 639, 93, 287, 599, 327, 722, 405, 538, 352,
	406, 314, 737, 246, 640, 325, 703, 695, 696, 407,
	408, 715, 383, 379, 384, 540, 641, 430, 522, 409,
	699, 700, 755, 58, 642, 643, 716, 136, 644, 87,
	732, 89, 346, 347, 645, 312, 265, 543, 544, 432,
	375, 500, 127, 507, 508, 120, 121, 503, 122, 509,
	123, 128, 510, 511, 512, 501, 124, 117, 502, 513,
	514, 376, 377, 125, 515, 119, 118, 504, 506, 126,
	516, 263, 38, 410, 596, 316, 64, 320, 291, 433,
	52, 381, 752, 51, 710, 545, 646, 713, 374, 370,
	497, 691, 59, 647, 648, 649, 650, 519, 733, 373,
	345, 369, 747, 4, 309, 492, 520, 734, 68, 248,
	386, 385, 387, 298, 429, 366, 651, 652, 653, 270,
	91, 654, 356, 25, 655, 656, 411, 305, 657, 62,
	658, 659, 436, 279, 660, 60, 735, 692, 45, 661,
	284, 749, 736, 662, 663, 664, 709, 665, 286, 666,
	413, 667, 697, 698, 412, 380, 382, 546, 293, 414,
	397, 693, 251, 598, 668, 328, 350, 283, 740, 669,
	271, 534, 535, 536, 537, 721, 542, 541, 285, 290,
	278, 437, 272, 670, 671, 672, 673, 674, 319, 690,
	675, 676, 334, 602, 742, 498, 49, 677, 678, 679,
	680, 681, 313, 308, 431, 440, 67, 92, 394, 682,
	683, 719, 344, 339, 43, 306, 99, 478, 480, 481,
	482, 483, 484, 479, 486, 684, 331, 61, 743, 744,
	745, 300, 746, 526, 527, 528, 529, 13, 580, 563,
	591, 564, 581, 565, 574, 566, 582, 590, 592, 547,
	555, 548, 556, 586, 569, 583, 575, 568, 567, 589,
	572, 576, 549, 557, 587, 573, 550, 558, 551, 559,
	552, 560, 585, 584, 577, 588, 553, 561, 579, 554,
	562, 578, 570, 571, 449, 753, 754, 521, 416, 694,
	139, 310, 311, 53, 367, 292, 685, 323, 686, 357,
	358, 494, 495, 372, 343, 368, 146, 706, 332, 341,
	704, 294, 417, 499, 280, 687, 439, 307, 389, 131,
	340, 395, 324, 603, 539, 299, 418, 718, 601, 530,
	531, 365, 362, 301, 532, 688, 390, 708, 419, 255,
	295, 296, 689, 705, 420, 421, 317, 422, 423, 424,
	425, 426, 428, 329, 427, 707, 701, 702, 302, 477,
	600, 337, 360, 396, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 496, 253, -82, 253, -195, -310, -133, 710,
	712, 192, -281, 400, -299, 402, 415, 410, 420, 408,
	-290, 411, 413, 293, -412, 430, 253, 417, 240, 403,
	412, 421, 422, 317, 428, 423, 329, 427, 302, 424,
	425, 426, -396, 192, 731, 746, 332, 340, 149, 364,
	407, 405, 431, 710, 100, -316, 100, 101, 102, -303,
	332, -319, 337, -304, -396, -303, 335, -82, -82, -321,
	-321, -133, -215, -150, 157, -164, -270, -167, 101, -155,
	-158, -209, -210, -211, -212, -165, -229, -268, 181, 182,
	189, 158, -225, -168, 29, 593, 489, 488, 192, 34,
	235, 77, 78, 491, 492, 160, 63, 15, 454, 455,
	-166, 444, 445, 456, 450, 451, 517, 519, 520, 521,
	518, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 522, 533, 494, 495, 129, 496, 117, 119, 118,
	127, 128, 497, 498, 499, 361, 545, 546, 540, 543,
	544, 542, 541, 376, 377, 500, 563, 564, 568, 567,
	565, 566, 569, 572, 573, 574, 575, 576, 577, 579,
	578, 570, 571, 548, 547, 549, 550, 551, 552, 553,
	554, 556, 555, 557, 558, 559, 560, 561, 562, 580,
	581, 582, 583, 584, 586, 585, 590, 589, 587, 588,
	592, 591, 501, 502, 120, 121, 122, 123, 124, 125,
	126, 503, 506, 504, 505, 507, 508, 509, 514, 515,
	510, 511, 512, 513, 516, 387, 385, 386, 382, 381,
	380, -92, -105, 620, 619, -106, 441, 446, 447, 449,
	-156, -157, -170, -171, -304, -310, 258, 443, 252, 187,
	487, -159, -153, -227, 116, 102, -31, -224, 442, 452,
	453, 457, 448, 458, 606, 608, 623, 624, 626, 611,
	616, 615, 618, 534, 535, 536, 537, 538, 539, 695,
	696, 697, 698, 699, 700, 701, 702, -396, -303, 100,
	-162, -160, -204, 103, 108, 111, 112, 114, -418, 276,
	357, 358, 130, -428, -220, -221, -161, 105, 106, 107,
	132, 133, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 724, 98, 104, 50, 416, 416,
	-195, -82, -82, -82, -82, -425, 727, 598, -239, -131,
	-241, -33, -31, -428, 12, -82, -31, -32, -30, -37,
	-82, -39, 625, -38, -310, -82, 109, -246, -262, 16,
	67, 176, 48, 56, -244, -245, -34, -31, -150, 23,
	41, 27, -135, 183, -150, -310, -135, -288, 257, -82,
	-82, -277, -324, 332, -279, 431, 710, 430, -269, -282,
	100, -268, -281, 429, 101, -366, 173, -352, -356, -304,
	268, -382, 264, -195, -375, -374, -304, -428, 28, -264,
	-304, -56, -57, -58, -281, 191, 730, -114, 285, 289,
	96, 96, -356, -355, -354, -400, 289, 268, -381, -373,
	260, 269, -362, 261, 262, -357, 254, 151, -400, -357,
	259, 269, 264, 268, 289, 289, 139, 289, 139, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 284, -363,
	165, -363, 601, 601, -369, -400, 264, 254, -400, -400,
	260, -300, -357, 256, 28, 256, 38, 38, -363, -363,
	-363, -281, 191, -363, -363, -363, -363, 297, 297, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, 253, -399, -140, 427,
	317, 443, 252, -141, 90, -59, 299, -40, -195, -298,
	254, 255, -399, 286, 310, -195, 236, 253, 713, -292,
	173, 19, -292, -289, 416, 414, 401, 406, -292, -292,
	-292, -292, 300, 399, -358, 254, 38, 265, 416, 300,
	399, 300, 301, 300, 301, 409, 419, 300, -315, 18,
	176, 443, 404, 408, 293, 253, 294, 255, 418, 301,
	-315, 98, -293, 173, 300, 416, 410, 296, -292, -292,
	-322, -428, -306, -304, -302, 245, 41, 156, 28, 30,
	159, 192, 142, 23, 160, 40, 247, 364, 264, 191,
	260, 488, 240, 81, 606, 444, 451, 442, 450, 454,
	490, 491, 443, 402, 34, 17, 608, 31, 274, 27,
	44, 185, 242, 163, 609, 277, 29, 275, 129, 133,
	611, 26, 84, 269, 18, 262, 46, 20, 612, 613,
	21, 74, 258, 257, 176, 254, 79, 15, 235, 32,
	172, 75, 614, 151, 145, 615, 616, 617, 618, 143,
	77, 173, 24, 750, 452, 453, 36, 711, 593, 288,
	187, 82, 65, 712, 157, 448, 619, 620, 130, 621,
	134, 85, 717, 153, 22, 80, 48, 622, 289, 623,
	259, 751, 624, 434, 625, 174, 243, 487, 78, 175,
	724, 626, 725, 252, 415, 12, 493, 35, 273, 261,
	73, 72, 141, 76, 458, 627, 253, 162, 256, 144,
	132, 11, 150, 37, 16, 83, 86, 455, 456, 457,
	63, 140, 597, 161, 19, 628, 435, 155, -396, 713,
	-322, -322, 300, 341, 35, 101, -422, -423, -424, 597,
	434, 256, -304, -195, -88, 703, 244, -89, 709, 41,
	251, 146, 38, -138, 416, -126, 192, 731, 714, 715,
	716, 713, 413, 721, 719, 717, 300, 718, 96, 153,
	155, 156, 4, -150, 172, -205, -206, 171, 165, 166,
	167, 168, 169, 170, 177, 176, 157, 159, 173, -255,
	154, 178, 179, 180, 181, 182, 183, 184, 186, 185,
	187, 188, 174, 175, 191, 238, 239, -158, -158, -158,
	-158, -225, -231, -230, -428, -227, -396, -303, -310, -428,
	-428, -158, -287, -428, -155, -428, -428, -428, -428, -428,
	-234, -150, -428, -428, -432, -428, -432, -432, -432, -341,
	-428, -341, -341, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, 236, -428,
	-428, -428, -428, -428, -341, -341, -341, -341, -341, -341,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, 98, 112, 108, 111, 103, 114,
	98, 98, 98, 98, -31, -32, -215, 63, -428, -321,
	-409, -410, -198, -195, -428, 317, -304, -304, 286, 105,
	-244, -34, -31, -239, -245, -241, -31, -82, -124, -137,
	69, 70, -136, -139, 27, 44, 74, 76, 99, 72,
	73, 71, 41, -429, 97, -429, -262, -429, -147, -298,
	-132, -141, 254, 262, 261, 150, -399, -148, 153, 304,
	96, -39, -265, 115, -218, -223, -221, 724, 653, 683,
	653, 683, 67, 49, 98, 98, 96, 25, -240, -242,
	-150, 18, -308, 4, -307, 28, -304, 98, 236, 18,
	-196, 32, -195, -288, -288, 96, 100, 332, -278, -280,
	432, 434, 165, -309, -304, 98, 34, 97, 96, -195,
	-330, -333, -335, -334, -336, -331, -332, 361, 362, 192,
	365, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	378, 390, 35, 276, 357, 358, 359, 360, 379, 380,
	381, 382, 384, 385, 386, 387, 342, 363, 595, 343,
	344, 345, 346, 347, 348, 350, 351, 354, 352, 353,
	355, 356, -305, -304, 95, 97, 96, -340, 95, -150,
	-29, 97, 96, -363, -363, -363, 284, 23, -49, -46,
	-389, 22, -45, -46, 245, 135, 136, 242, 95, -352,
	95, -361, -305, -304, 95, 151, 259, 150, -360, -357,
	-360, -361, -304, -227, -304, 151, 151, -304, -304, -274,
	-304, -274, -274, 41, -274, 41, -274, 41, 105, -304,
	-274, 41, -274, 41, -274, 41, -274, 41, -274, 41,
	34, 87, 88, 89, 34, 91, 92, 93, -227, -304,
	-304, -227, -352, -227, -195, -304, -281, 105, 105, 105,
	-363, -363, 105, 98, 98, 98, -363, -363, 105, 98,
	-312, -310, 98, 98, -401, 270, 314, 316, 105, 105,
	105, 105, 34, 98, -402, 34, 738, 737, 739, 740,
	741, 98, 105, 34, 105, 34, 105, -304, 95, -195,
	-147, 240, 242, 245, 85, 98, 322, 320, 321, 318,
	323, 324, 325, 165, 50, 96, 256, 253, -304, -294,
	258, -294, -304, -311, -310, -302, -195, 256, 398, 98,
	-150, -359, 18, 176, -315, -315, -292, -195, -359, -315,
	-292, -195, -292, -292, -292, -292, -315, -315, -315, -292,
	-310, -310, -195, -195, -195, -195, -195, -195, -195, -322,
	-293, -292, 713, 98, -286, 18, 85, -322, -322, -301,
	26, 26, 96, 338, 435, 436, -320, 335, -84, -304,
	98, -10, -29, -18, -17, -19, 165, -10, 96, 597,
	-188, -195, 713, 713, 713, 713, 713, 713, -150, -150,
	-150, -150, 621, -213, -420, 157, 132, 133, 130, 131,
	-167, 42, 43, 41, -150, -214, -220, -225, 115, 176,
	159, 173, -255, -155, -158, -155, -155, -155, -155, -155,
	-155, 235, -155, 235, -155, -155, -155, -155, -155, -155,
	-323, -304, 98, 192, -163, -162, 114, -418, -163, 594,
	96, -230, 236, -150, -150, -396, -122, 460, 461, 462,
	463, 465, 466, 467, 470, 471, 475, 476, 459, 477,
	464, 469, 472, 473, 474, 468, 360, -150, -216, -215,
	-216, -150, -150, -232, -233, 161, -227, -150, -429, -429,
	105, 183, -130, 27, 44, -130, -130, -130, -130, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -130,
	-150, -123, 459, 477, 464, 469, 472, 473, 474, 468,
	360, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	-123, -122, -150, -150, -150, -150, -150, -150, -150, -150,
	-90, -150, 142, 143, 144, -215, -150, -155, -150, -150,
	-150, -429, -150, -150, -150, -216, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -395, -394, -393, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -215, -215,
	-215, -215, -215, -150, -429, -150, -169, -153, 105, -270,
	114, 101, -150, -150, -150, -150, -150, -150, -216, -306,
	-311, -302, -303, -215, -216, -216, -215, -215, -150, -150,
	-150, -150, -150, -150, -150, -150, -429, -150, -150, -150,
	-150, -150, -262, -429, -215, 96, -411, 434, 435, 711,
	-313, 289, -312, 28, -216, 98, 18, -272, 86, -304,
	-244, -244, 69, 70, 65, -134, -135, -139, -429, 293,
	-143, 306, 253, -140, -147, -304, 254, 254, 254, -295,
	258, 487, 165, -38, 28, 96, -428, 646, 646, 68,
	98, -342, -281, 388, 389, 192, -150, -150, 96, -243,
	30, 31, -195, -307, 183, -311, -195, -273, 289, -195,
	-173, -175, -176, -177, -198, -226, -428, -178, -31, 617,
	614, 18, -188, -189, -197, -310, -279, -324, -278, 96,
	433, 435, 436, 85, 134, -150, -343, 191, -371, -370,
	-369, -352, -354, -355, -356, 97, -343, -348, 395, 394,
	-340, -340, -340, -340, -340, -342, -342, -342, -342, 95,
	-340, 95, -340, -340, -340, -340, -345, 95, -345, -345,
	-346, -345, 95, -346, -347, 95, -347, -382, -150, -379,
	-378, -376, -377, 263, 110, 689, 645, 597, 638, 679,
	86, -374, -243, 105, -429, -85, 597, -304, 100, 98,
	100, 98, 100, 98, -115, -63, -1, 750, 751, 752,
	96, 23, -353, -352, -62, 314, -385, -386, 289, -381,
	-375, -361, 151, -360, -361, -361, -304, 96, 32, 139,
	139, 139, 139, 597, 242, 35, -296, 637, 157, 689,
	645, -352, -62, 256, 256, -323, -323, -323, 98, 98,
	-291, 746, -188, -143, 295, 295, 253, 308, 253, 308,
	-195, 319, 322, 320, 321, 318, 323, 324, 325, 326,
	41, 41, 41, 41, 41, 41, 41, 307, 309, 311,
	297, -195, -195, -294, 85, -190, -195, 29, -310, 98,
	98, -195, -292, -292, -195, -292, -292, -195, 98, -310,
	-424, 339, -304, 375, 704, 706, -126, 434, 96, 597,
	26, -127, 26, -428, -420, 132, 133, -225, -225, -225,
	-214, -155, -158, -155, 156, 277, -155, -155, -428, -227,
	-429, -306, 28, 96, 86, -429, 181, 96, -429, -429,
	96, 18, 96, -235, -233, 163, -150, -429, 96, -429,
	-429, -215, -150, -150, -150, -150, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -429, -215, -429, 96, 96,
	18, -327, 28, -429, -429, -429, -429, 96, -429, -429,
	-234, -429, 18, -429, 86, 96, 176, 96, -429, -429,
	-429, 96, 96, -429, -429, 96, -429, 96, -429, -429,
	-429, -429, -429, -429, 96, -429, 96, -429, -429, -429,
	96, -429, 96, -429, -429, 96, -429, 96, -429, 96,
	-429, 96, -429, 96, -429, 96, -429, 96, -429, 96,
	-429, 96, -429, 96, -429, 96, -429, 96, -429, 96,
	-429, 96, -429, 96, -429, 96, -429, 96, -429, 96,
	-429, -429, -429, 96, -429, 96, -429, 96, -429, -429,
	96, -429, 96, -429, 96, -429, 96, 96, -429, 96,
	96, 96, -429, 96, 96, 96, 96, -429, -429, -429,
	-429, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, -429, -429, -429, -429, -429, -429, 96, -97, 622,
	-429, -429, 96, -429, 96, 96, 96, 96, 96, -429,
	-428, 236, -429, -429, -429, -429, -429, 96, 96, 96,
	96, 96, 96, -429, -429, -429, 96, 96, -429, 96,
	-429, 96, -429, -410, 710, 435, -202, -201, -199, 83,
	257, 84, -428, -312, -429, -163, -270, -271, -270, -208,
	-304, 105, 114, -246, -172, 96, -174, 18, -295, 255,
	313, -295, -147, -143, -380, -377, -304, -304, -304, -310,
	157, -149, 454, -145, 98, 100, -225, -223, -429, -342,
	-250, -256, -289, -304, 98, 192, -344, 192, -344, 388,
	389, -242, 236, -203, 19, -207, 35, 63, -29, -428,
	-428, 35, 96, -191, -193, -192, -194, 75, 79, 81,
	76, 77, 78, 82, -318, 28, -31, -173, -31, -428,
	-195, -188, -430, 18, 86, -430, 96, 236, -280, -283,
	437, 434, 440, -396, 98, -114, 96, -369, -356, -247,
	-144, 46, -349, 396, -342, 605, -342, -351, 98, -351,
	105, 105, 105, 97, -52, -47, -48, 36, 90, -376,
	-363, 98, 45, -363, -363, -304, 97, -243, -86, 303,
	710, -2, 749, 755, 151, 95, 401, 22, -264, 96,
	97, -228, 315, 97, -116, -304, 97, 95, -361, -361,
	-304, -428, 253, 34, 34, 689, 645, 637, -62, -228,
	-227, -304, -343, 748, 747, 97, 255, -195, -195, -195,
	-195, -195, -195, 245, 242, 424, -419, 327, 98, -419,
	298, 256, -188, -195, 96, -87, 272, 267, -315, -315,
	36, -195, 434, 722, 720, -150, 156, 277, -167, -158,
	-122, -122, -155, -325, 192, 361, 276, 359, 355, 375,
	366, 394, 357, 395, 352, 351, 350, -325, -323, -155,
	-215, -150, -150, -150, 164, -150, 162, -150, -98, -97,
	-429, -429, -429, -429, -429, -98, -98, -98, -98, -98,
	-98, -98, -98, -98, -98, -239, -150, -150, -150, -429,
	192, 361, -98, -150, 18, -150, -323, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -393, -150, -215, -150, -215, -150, -150, -150,
	-150, -150, -394, -394, -394, -394, -394, -215, -215, -215,
	-215, -150, -428, -304, -101, -100, -99, 672, 257, -97,
	-169, -101, -169, 235, -150, 235, 235, 235, -150, -216,
	-306, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -199, -357, 295, -357, 295, -357, -274, 96, -285,
	26, 18, 63, 63, -172, -203, -135, -173, -310, -195,
	-142, 304, 312, -195, -143, 255, 85, -380, -380, -380,
	29, 95, -146, 101, -253, 703, -259, 52, -257, -258,
	53, -254, 54, 62, -344, -344, 183, -244, -150, -275,
	85, -276, -284, -227, -219, -222, -220, -428, -263, -429,
	-304, -274, -276, -175, -176, -176, -175, -176, 75, 75,
	75, 80, 75, 80, 75, -192, -310, -429, -150, -313,
	86, -173, -173, -197, -310, 183, 434, 438, 439, -369,
	-417, 130, 157, 34, 85, 392, 110, -415, 191, 634,
	684, 689, 645, 638, 679, -416, 259, 150, 151, 271,
	28, 47, 97, 96, 97, 96, 97, 97, 96, -297,
	-296, -48, -47, -363, -363, 105, -396, 98, 98, 264,
	-117, 753, 105, 95, -3, 90, -150, 95, 23, -352,
	-227, -387, -337, -388, -338, -339, -5, -6, -364, -120,
	63, 110, -66, 50, 254, 733, 734, 139, -428, 746,
	-379, -264, -383, -385, -195, -154, -428, -166, -152, -151,
	-153, -159, 181, 182, 276, 357, 358, -228, -195, -398,
	86, 295, 392, 295, 392, 98, -421, 328, 98, -421,
	-195, -87, -52, -195, -292, -292, 36, -396, -429, -167,
	-158, -129, 176, 597, -328, 604, -340, -340, -340, -347,
	-340, 347, -340, 347, -340, -429, -429, -429, 96, -429,
	26, -429, 96, -150, 96, -98, -98, -98, -98, -98,
	-125, 493, 96, 96, -429, 95, 95, -429, -150, -429,
	-429, -429, 96, -429, -429, -429, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -429, 96, -429, 96, -429,
	96, -429, 96, -429, 96, -429, 96, -429, 96, -429,
	96, -429, 96, -429, 96, -429, 96, -429, 96, -429,
	96, -429, 96, -429, 96, -429, 96, -429, -429, 96,
	-429, -429, -429, 96, -429, 96, -429, 96, -429, -429,
	-429, 96, -326, 690, -429, -429, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -96, -305, -97, 654, 654,
	-429, -97, -236, 96, -155, -429, -155, -155, -155, -429,
	-429, -429, 96, -429, 96, 96, -429, 96, -429, 96,
	-429, -429, -429, -429, 96, -200, 26, -428, -200, -428,
	-200, -429, -270, -195, -203, -237, 20, 255, -195, -195,
	85, 85, 85, 97, -250, 57, 367, -261, -260, 61,
	53, -258, 23, 55, 23, 33, -275, 96, 165, -317,
	96, 28, -429, -429, 96, 63, 236, -429, -203, -186,
	-185, 85, 86, -187, 85, -185, 75, 75, -265, 96,
	-273, -173, -203, -203, 236, 130, -428, -154, 16, 98,
	98, -396, -414, 737, 738, 34, 739, 105, -363, -363,
	151, 151, -195, 95, -342, 98, -342, 105, 105, 34,
	91, 92, 93, 34, 87, 88, 89, 305, -384, 95,
	23, -150, 95, 165, 97, -264, -264, 291, 176, -363,
	731, 297, 297, -363, -363, -363, -119, -118, 753, 97,
	-429, 96, -350, 597, 600, -150, -160, -160, -265, -392,
	597, -397, -304, -304, -304, -304, 105, 107, -429, 595,
	82, 598, -429, -342, -150, -150, -150, -150, -244, 98,
	-150, -150, 105, 105, -98, -429, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -215, -150, -429, -183,
	-182, -184, 714, 130, 34, -325, -429, -217, 289, -104,
	-103, -102, 18, -429, -150, -122, -122, -122, -122, -150,
	-150, -150, -150, -150, -150, -428, 75, 22, 20, -267,
	-304, 259, -428, -267, -428, -313, -237, -238, 21, 23,
	-195, -195, -195, -195, -251, 59, -249, 58, -249, -260,
	23, 23, 98, 23, 98, 151, -284, -150, -222, -312,
	63, -29, -304, -219, -304, -239, -150, 95, -150, -163,
	-203, -203, -150, -210, 517, 519, 520, 521, 518, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 522,
	533, 494, 495, 496, 117, 119, 118, 127, 128, 497,
	498, 499, 361, 545, 546, 540, 543, 544, 542, 541,
	376, 377, 500, 563, 564, 568, 567, 565, 566, 569,
	572, 573, 574, 575, 576, 577, 579, 578, 570, 571,
	548, 547, 549, 550, 551, 552, 553, 554, 556, 555,
	557, 558, 559, 560, 561, 562, 580, 581, 582, 583,
	584, 586, 585, 590, 589, 587, 588, 592, 591, 501,
	502, 120, 121, 122, 123, 124, 125, 126, 503, 506,
	504, 507, 508, 509, 514, 515, 510, 511, 512, 513,
	516, 387, 385, 386, 382, 381, 380, 441, 446, 447,
	449, 534, 535, 536, 537, 538, 539, 695, 696, 697,
	698, 699, 700, 701, 702, 98, 98, 95, -150, 97,
	97, -383, -63, 97, -266, -264, 105, 97, 292, -220,
	-428, 98, -363, -363, -363, 105, 105, -312, -429, 96,
	-304, -416, -385, 601, 601, -429, 28, -391, -390, -306,
	95, 86, 68, 596, 599, -429, -429, -429, 96, -429,
	-429, -429, 97, 97, -429, -429, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -429, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -429, 96, -429, -182, -184,
	-429, 85, -163, -239, 23, -101, 314, 316, -101, -429,
	-429, -429, -429, -429, 96, -429, -429, 96, -429, 96,
	-429, -429, -267, -429, 23, 23, 96, -429, -267, -429,
	-267, -202, -238, -111, -110, -109, 628, -150, -215, -252,
	60, 85, 134, 98, 98, 98, 16, -428, -219, 236,
	-317, -244, -264, -180, 401, -239, -429, -264, 97, 97,
	755, 151, 97, -220, -128, -428, 288, -312, 98, 98,
	-118, -121, -29, 96, 165, -264, -195, 68, -150, -215,
	-429, 85, 609, 714, -95, -94, -91, 725, 751, -215,
	-97, -97, -150, -150, -150, -429, -304, 259, -429, -429,
	-111, 96, -108, -107, -304, -329, 597, 85, 134, -276,
	-264, -317, -304, 97, -429, -428, -244, 97, -248, 95,
	-3, 288, -337, -388, -338, -339, -5, -6, -364, -85,
	-390, -368, -310, -306, 98, 105, 97, 597, -429, -429,
	-93, 159, 723, 687, -159, 235, -429, 96, -429, 96,
	-429, 96, -109, 96, 28, 602, -429, -313, -181, -179,
	-304, 651, -407, -406, 593, -417, -413, 130, 157, 110,
	-415, 684, 689, 645, 140, 141, -150, 95, -429, 236,
	-398, 598, -93, 724, 665, 640, 665, 640, -155, -150,
	-150, -150, -107, -428, -429, 96, 26, -330, -65, 662,
	-404, -405, 85, -408, 407, 661, 682, 130, 98, 105,
	97, -264, -311, -392, 599, 156, -122, -429, 96, -429,
	96, -429, -96, -179, 658, -343, -163, -405, 85, -404,
	85, 17, 16, -4, 754, 97, -93, 665, 640, -150,
	-150, -429, -64, 29, -180, -403, 272, 267, 270, 35,
	-403, 105, -4, -429, -429, 662, 266, 34, 130, -163,
	-183, -182, -182,
}

var yyDef = [...]int{
	898, -2, -2, 900, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 898, 898, 898, 0, 898, 0,
	131, 0, 959, -2, -2, 898, 1661, 0, 898, 0,
	893, 0, -2, 813, 819, 0, 828, -2, 0, 0,
	898, 898, 2306, 2306, 893, 0, 0, 0, 0, 0,
	898, 898, 898, 898, 1666, 1511, 50, 898, 0, 88,
	89, 898, 848, 849, 850, 65, 0, 2304, 85, 898,
	899, 1, 3, 71, 75, 0, 0, 0, 58, 1520,
	0, 78, 0, 0, 902, 0, 0, 1644, 898, 898,
	0, 129, 130, 0, 0, 0, 0, 0, 134, -2,
	166, 167, 168, 0, 173, 618, 535, 587, 533, 572,
	-2, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 538, 410, 410, 0, 0, -2,
	521, 521, 521, 1646, 0, 0, 0, 569, 472, 410,
	410, 410, 0, 410, 410, 410, 410, 0, 0, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 1538, 172, 1662, 1659,
	1660, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 0, 1638, 0, 731, 1002, 0, 894,
	895, 0, 802, 802, 0, 802, 802, 802, 802, 0,
	0, 0, 745, 0, 0, 0, 0, 799, 0, 761,
	762, 0, 799, 0, 768, 805, 0, 0, 775, 802,
	802, 778, 2307, 0, 2307, 2307, 0, 0, 1629, 0,
	796, 794, 808, 809, 42, 812, 815, 816, 817, 818,
	821, 0, 832, 835, 1655, 1656, 0, 837, 842, 861,
	862, 0, 45, 1162, 0, 1026, 0, 1037, -2, 1048,
	1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 0, 0,
	0, 0, 1078, 1079, 0, 0, 0, 0, 0, 1142,
	0, 0, 0, 0, 2026, 1482, 0, 0, 1444, 1444,
	1178, 1444, 1444, 1446, 1446, 1446, 1875, 2018, 2027, 2208,
	1836, 1842, 1843, 1844, 2154, 2155, 2156, 2157, 2250, 2251,
	2255, 1939, 1831, 2222, 2223, 0, 2303, 1978, 1986, 1987,
	1963, 1972, 2011, 2116, 2234, 1854, 2006, 2078, 1936, 1958,
	1959, 2097, 2098, 1982, 1983, 1962, 2160, 2162, 2178, 2179,
	2164, 2166, 2175, 2181, 2186, 2165, 2177, 2182, 2195, 2199,
	2202, 2203, 2204, 2172, 2170, 2183, 2187, 2189, 2191, 2197,
	2200, 2173, 2171, 2184, 2188, 2190, 2192, 2198, 2201, 2159,
	2163, 2167, 2176, 2194, 2174, 2193, 2168, 2180, 2185, 2196,
	2169, 2161, 1976, 1979, 1966, 1967, 1969, 1971, 1977, 1984,
	1990, 1968, 1989, 1988, 0, 1964, 1965, 1970, 1981, 1985,
	1973, 1974, 1975, 1980, 1991, 2033, 2032, 2031, 2077, 2002,
	2076, 0, 0, 0, 0, 0, 1825, 1881, 1882, 2205,
	1366, 1367, 1368, 1369, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 1495, 1496, 44, 1161, 1625, 1446, 1446,
	1446, 1446, 1446, 1446, 1100, 1101, 1102, 1103, 1104, 1130,
	1131, 1137, 1138, 2092, 2093, 2094, 2095, 1919, 2245, 1928,
	1929, 2073, 2074, 1941, 1942, 2277, 2278, -2, -2, -2,
	241, 242, 243, 244, 245, 246, 247, 248, 0, 1880,
	2220, 2221, 237, 0, 1623, 1624, 304, 301, 302, 303,
	1144, 1145, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 280, 281, 282, 283, 284,
	285, 286, 287, 288, 289, 290, 291, 292, 293, 294,
	295, 296, 297, 298, 0, 306, 307, 2306, 0, 871,
	0, 0, 0, 0, 0, 0, 1667, 1668, 1520, 0,
	1512, 1511, 63, 0, 898, -2, 0, 0, 0, 0,
	-2, 47, 0, 52, 959, 0, 901, 77, 76, 1562,
	1565, 0, 0, 0, 59, 1521, 67, 69, 1522, 0,
	903, 904, 0, 935, 939, 0, 0, 0, 1645, 1644,
	1644, 105, 0, 0, 106, 126, 127, 128, 0, 0,
	112, 113, 1631, 1632, 43, 0, 0, 184, 185, 0,
	1118, 437, 0, 180, 0, 430, 369, 0, 0, 0,
	963, 169, 170, 171, 410, 410, 410, 584, 0, 0,
	172, 172, 542, 543, 544, 0, 0, -2, 435, 0,
	522, 0, 0, 424, 424, 428, 426, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	411, 0, 582, 583, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1648, 0, 559, 560, 0, 0,
	0, 410, 410, 0, 0, 0, 0, 410, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 1552, 0,
	0, 161, 162, 1539, 0, -2, 0, 723, 0, 0,
	0, 1640, 1640, 0, 1639, 730, 0, 0, 0, 735,
	0, 0, 736, 0, 799, 799, 797, 798, 738, 739,
	740, 741, 802, 0, 0, 419, 420, 421, 799, 802,
	0, 802, 802, 802, 802, 799, 799, 799, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2307, 805,
	802, 0, 769, 0, 770, 771, 772, 773, 776, 777,
	779, 2308, 2309, 1657, 1658, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 2307, 2307,
	783, 787, 791, 789, 1630, 814, 820, 822, 823, 0,
	0, 833, 836, 855, 49, 1927, 841, 49, 843, 844,
	845, 846, 847, 873, 874, 879, 0, 0, 0, 0,
	885, 886, 887, 0, 0, 890, 891, 892, 0, 0,
	0, 0, 0, 1024, 0, 0, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1049, 1050, 0, 0, 0, 1074, 1075, 1076,
	1077, 1080, 0, 1091, 0, 1093, 1491, -2, 0, 0,
	0, 1085, 1086, 0, 0, 0, 1650, 1650, 0, 0,
	0, 1483, 0, 0, 1176, 0, 1177, 1179, 1180, 1181,
	0, 1182, 1183, 908, 908, 908, 908, 908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	1650, 1650, 0, 0, 229, 230, 231, 232, 233, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 249, 250, 251, 252, 253,
	308, 254, 255, 256, 1161, 0, 0, 898, 0, 46,
	863, 864, 0, 985, 1650, 0, 0, 914, 0, 1665,
	57, 66, 68, 1520, 61, 1520, 0, 918, 0, 0,
	-2, -2, 919, 920, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 54, 2305, 55, 0, 74, 1543, 0,
	1538, 1552, 0, 0, 0, 0, 1642, 1553, 0, 0,
	0, 48, 0, 79, 80, 1613, 1617, 0, 1563, 0,
	1566, 0, 0, 0, 383, 1570, 0, 0, 1513, 1514,
	1517, 0, 936, 2024, 940, 0, 942, 943, 0, 0,
	103, 0, 1001, 0, 0, 0, 114, 0, 116, 117,
	0, 0, 0, 394, 1633, 1634, 1635, -2, 417, 0,
	394, 378, 316, 317, 318, 369, 320, 369, 369, 369,
	369, 383, 383, 383, 383, 351, 352, 353, 354, 355,
	0, 369, 0, 337, 369, 369, 369, 369, 359, 360,
	361, 362, 363, 364, 365, 366, 321, 322, 323, 324,
	325, 326, 327, 328, 329, 371, 371, 371, 371, 371,
	375, 375, 0, 1119, 0, 398, 0, 1517, 0, 0,
	1547, 960, 0, 0, 0, 0, 585, 629, 536, 573,
	586, 0, 539, 540, -2, 0, 0, 521, 0, 523,
	0, 418, 0, -2, 0, 428, 0, 424, 428, 425,
	428, 416, 429, 563, 564, 565, 0, 567, 568, 659,
	971, 0, 0, 0, 0, 0, 665, 666, 667, 0,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 523, 0, 570, 0, 0, 474, 475, 476,
	0, 0, 479, 480, 481, 482, 0, 0, 485, 486,
	487, 988, 989, 488, 489, 514, 515, 516, 490, 491,
	492, 493, 494, 495, 496, 508, 509, 510, 511, 512,
	513, 497, 498, 499, 500, 501, 502, 505, 0, 154,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 917, 1003, 1663, 1664, 732, 0, 0, 803,
	804, 0, 422, 423, 802, 802, 742, 784, 0, 802,
	746, 785, 747, 749, 748, 750, 763, 764, 802, 753,
	800, 801, 754, 755, 756, 757, 758, 759, 760, 780,
	765, 766, 767, 806, 0, 810, 811, 781, 782, 0,
	792, 0, 0, 0, 826, 827, 0, 834, 858, 856,
	857, 859, 851, 852, 853, 854, 0, 860, 0, 0,
	876, 99, 881, 882, 883, 884, 896, 889, 1163, 1021,
	1022, 1023, 0, 1025, 1031, 0, 1146, 1148, 1029, 1030,
	1033, 0, 0, 0, 1027, 1038, 1158, 1159, 1160, 0,
	0, 0, 0, 0, 1042, 1046, 1051, 1052, 1053, 1054,
	1055, 0, 1056, 0, 1059, 1060, 1061, 1062, 1063, 1064,
	1070, 1459, 1460, 1461, 1089, 309, 310, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1162, 0, 1651,
	0, 0, 0, 1489, 1486, 0, 0, 0, 1445, 1447,
	0, 0, 0, 909, 910, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	0, 0, 1462, 0, 0, 0, 0, 0, 0, 0,
	1482, 0, 1095, 1096, 1097, 0, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1370, 1371, 1372,
	1373, 41, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1395, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 866, 867, 869, 0,
	1005, 0, 986, 0, 0, 872, 0, 913, 0, 916,
	60, 62, 922, 923, 0, 944, 933, 921, 56, 1642,
	0, 0, 1642, 1552, 1543, 1652, 0, 0, 0, 0,
	0, 135, 0, 51, 0, 0, 0, 1564, 1567, 1568,
	383, 1590, 0, 392, 392, 389, 1523, 1524, 0, 1516,
	1518, 1519, 81, 941, 937, 0, 1019, 0, 0, 1000,
	0, 947, 949, 950, 951, 983, 0, 954, 955, 0,
	0, 0, 0, 0, 101, 1002, 107, 0, 115, 0,
	0, 120, 121, 108, 109, 110, 111, 0, 618, -2,
	469, 186, 188, 189, 190, 181, -2, 381, 379, 380,
	319, 383, 383, 345, 346, 347, 348, 349, 350, 0,
	357, 0, 338, 339, 340, 341, 330, 0, 331, 332,
	333, 373, 0, 334, 335, 0, 336, 436, 0, 1525,
	399, 400, 402, 410, 0, 405, 406, 0, 410, 410,
	0, 431, 432, 0, 1517, 133, 1549, 964, 174, 175,
	176, 177, 178, 179, 654, 0, 0, 630, 652, 653,
	172, 0, 0, 182, 525, 524, 0, 686, 0, 434,
	0, 0, 428, 428, 413, 414, 566, 0, 0, 661,
	662, 663, 664, 0, 0, 0, 552, 463, 0, 553,
	554, 523, 525, 0, 0, 394, 477, 478, 483, 484,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 602, 604, 607, 609, 527, 613, 615, 0,
	603, 606, 608, 610, 527, 614, 616, 1540, 1541, 1542,
	0, 0, 724, 0, 0, 460, 97, 1641, 729, 733,
	734, 799, 752, 786, 799, 744, 751, 774, 788, 790,
	824, 825, 830, 838, 839, 840, 880, 0, 0, 0,
	0, 888, 0, 0, 1032, 1147, 1149, 1034, 1035, 1036,
	1039, 0, 1043, 1047, 0, 0, 0, 0, 0, 1094,
	1092, 1493, 0, 0, 0, 1143, 0, 0, 1166, 1167,
	0, 0, 0, 0, 1487, 0, 0, 1174, 0, 1448,
	1124, 0, 0, 0, 0, 0, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 1124, 1124, 1124, 1511, 1201, 0, 0,
	0, 0, 0, 1206, 1207, 1208, 1124, 0, 1211, 1212,
	0, 1214, 0, 1215, 0, 0, 0, 0, 1222, 1223,
	1225, 0, 0, 1228, 1229, 0, 1231, 0, 1233, 1234,
	1235, 1236, 1237, 1238, 0, 1240, 0, 1242, 1243, 1244,
	0, 1246, 0, 1248, 1249, 0, 1251, 0, 1253, 0,
	1256, 0, 1259, 0, 1262, 0, 1265, 0, 1268, 0,
	1271, 0, 1274, 0, 1277, 0, 1280, 0, 1283, 0,
	1286, 0, 1289, 0, 1292, 0, 1295, 0, 1298, 0,
	1301, 1302, 1303, 0, 1305, 0, 1307, 0, 1310, 1311,
	0, 1313, 0, 1316, 0, 1319, 0, 0, 1320, 0,
	0, 0, 1324, 0, 0, 0, 0, 1333, 1334, 1335,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 1348, 1349, 1350, 1351, 1352, 0, 1354, 0,
	1125, 0, 0, 1125, 0, 0, 0, 0, 0, 1164,
	1650, 0, 1449, 1450, 1451, 1452, 1453, 0, 0, 0,
	0, 0, 0, 1393, 1394, 1396, 0, 0, 1399, 0,
	1401, 0, 1622, 865, 868, 870, 957, 1006, 1007, 0,
	0, 0, 0, 987, 1649, 911, 912, 915, 965, 0,
	1497, 0, 0, 944, 1019, 0, 945, 0, 0, 0,
	0, 0, 1543, 0, 0, 1653, 1652, 1652, 1652, 159,
	0, 1554, 1555, 1560, 1558, 1559, 53, 1614, 1618, 1572,
	1571, 1584, 1597, 392, 392, 386, 387, 393, 388, 390,
	391, 1515, 0, 1520, 0, 1611, 0, 898, 1600, 0,
	0, 0, 0, 0, 0, 0, 0, 990, 0, 0,
	993, 0, 0, 0, 0, 984, 955, 0, 956, 0,
	-2, 0, 0, 95, 96, 0, 0, 0, 118, 119,
	0, 0, 125, 395, 396, 163, 172, 471, 187, 444,
	0, 0, 315, 382, 342, 343, 344, 0, 367, 0,
	0, 0, 0, 465, 132, 1529, 1528, 410, 410, 401,
	0, 404, 0, 0, 0, 1654, 370, 433, 0, 1550,
	1551, 624, 0, 0, 631, 0, 0, 0, 534, 0,
	545, 546, 0, 658, -2, 720, 398, 0, 412, 415,
	972, 0, 0, 547, 0, 550, 551, 464, 525, 556,
	557, 571, 558, 506, 507, 504, 0, 136, 592, 594,
	598, 593, 597, 0, 0, 0, 529, 0, 617, 529,
	590, 0, 460, 1525, 0, 728, 461, 462, 802, 802,
	875, 100, 0, 878, 0, 0, 0, 0, 1040, 1044,
	1057, 1058, 1454, 1480, 369, 369, 1467, 369, 375, 1470,
	369, 1472, 369, 1475, 369, 1478, 1479, 0, 0, 1087,
	0, 0, 0, 0, 1173, 1490, 0, 0, 1184, 1123,
	1124, 1124, 1124, 1124, 1124, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1484, 0, 0, 0, 1205,
	0, 0, 1209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 148, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1118, 1122, 0, 1126, 1127, 0, 0, 1356,
	0, 0, 1374, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1008, 1015, 0, 1015, 0, 1015, 0, 0, 0,
	1636, 1637, 1498, 1499, 1019, 1500, 934, 946, 149, 151,
	1544, 1545, 1546, 150, 0, 0, 0, 0, 0, 0,
	1643, 0, 1557, 1561, 1590, 0, 1583, 0, -2, 1592,
	0, 0, 0, 1598, 384, 385, 938, 82, 1020, 86,
	0, 1611, 1626, 0, 1608, 1615, 1619, 0, 0, 0,
	1604, 0, 1019, 948, 979, 981, 0, 976, 991, 992,
	994, 0, 996, 0, 998, 999, 959, 953, 0, 103,
	0, 1019, 1019, 102, 0, 1004, 122, 123, 124, 470,
	191, 196, 0, 0, 0, 201, 0, 203, 0, 0,
	0, 208, 209, 410, 410, 445, 0, 312, 314, 0,
	0, 194, 383, 0, 383, 0, 374, 376, 0, 446,
	466, 1526, 1527, 0, 0, 403, 407, 408, 409, 0,
	627, 0, 655, 0, 0, 0, 0, 0, 0, 183,
	526, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	0, 410, 0, 0, 0, 410, 410, 410, 0, 712,
	397, 0, 0, 683, 680, 548, 0, 227, 228, 235,
	236, 238, 0, 0, 0, 0, 0, 555, 959, 139,
	0, 0, 0, 0, 600, 605, 611, 0, 528, 612,
	725, 726, 727, 98, 737, 743, 877, 897, 1028, 1041,
	1045, 0, 0, 0, 0, 1481, 1465, 383, 1468, 1469,
	1471, 1473, 1474, 1476, 1477, 1083, 1084, 1088, 0, 1170,
	0, 1172, 0, 1488, 0, 1185, 1186, 1187, 1188, 1189,
	1520, 0, 0, 0, 1204, 0, 0, 1124, 0, 1217,
	1216, 1218, 0, 1220, 1221, 1226, 1227, 1230, 1232, 1239,
	1241, 1245, 1247, 1250, 1252, 1254, 0, 1257, 0, 1260,
	0, 1263, 0, 1266, 0, 1269, 0, 1272, 0, 1275,
	0, 1278, 0, 1281, 0, 1284, 0, 1287, 0, 1290,
	0, 1293, 0, 1296, 0, 1299, 0, 1304, 1306, 0,
	1309, 1312, 1314, 0, 1317, 0, 1321, 0, 1323, 1325,
	1326, 0, 0, 0, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1353, 0, 1116, 1355, 1128, 1129,
	1134, 1358, 0, 0, 0, 1361, 0, 0, 0, 1365,
	1165, 1376, 0, 1381, 0, 0, 1387, 0, 1391, 0,
	1397, 1398, 1400, 1402, 0, 0, 0, 0, 0, 0,
	0, 985, 966, 64, 1500, 1504, 0, 0, 153, 155,
	0, 0, 0, 1556, 1577, 1575, 1575, 1585, 1586, 0,
	0, 1593, 0, 0, 0, 0, 87, 0, 0, 1599,
	0, 0, 1620, 0, 0, 0, 0, 104, 1511, 973,
	980, 0, 0, 974, 0, 975, 995, 997, 952, 0,
	1019, 1019, 93, 94, 0, 197, 0, 199, 0, 202,
	204, 205, 206, 212, 213, 214, 215, 207, 0, 0,
	311, 313, 0, 0, 356, 368, 358, 0, 0, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1548, 619, 0,
	629, 0, 961, 0, 622, 0, 537, 0, 0, 0,
	410, 410, 410, 0, 0, 0, 0, 697, 0, 0,
	660, 0, 668, 0, 0, 0, 239, 240, 0, 591,
	0, 137, 138, 0, 0, 596, 530, 531, 1081, 0,
	0, 0, 1082, 1466, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1210, 1213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1329, 0,
	0, 0, 649, 650, 0, 1405, 1121, 1511, 0, 1125,
	1135, 1136, 0, 1125, 1375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1016, 0, 0, 0,
	967, 968, 0, 0, 0, 1005, 1504, 1509, 0, 0,
	152, 156, 157, 158, 1580, 0, 1573, 1576, 1574, 1587,
	0, 0, 1594, 0, 1596, 0, 1627, 1628, 1616, 1609,
	898, 1603, 1606, 1608, 1605, 1520, 977, 0, 982, 0,
	1511, 92, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 211, 0, 0, 372,
	377, 0, 0, 620, 0, 962, 632, 623, 0, 710,
	0, 714, 0, 0, 0, 717, 718, 719, 696, 0,
	700, 438, 684, 681, 682, 549, 0, 140, 141, 0,
	0, 0, 1455, 0, 1458, 1168, 1171, 1169, 0, 1200,
	1202, 1203, 1463, 1464, 1219, 1255, 1258, 1261, 1264, 1267,
	1270, 1273, 1276, 1279, 1282, 1285, 1288, 1291, 1294, 1297,
	1300, 1308, 1315, 1318, 1322, 1327, 0, 1330, 0, 0,
	1331, 0, 651, 1112, 0, 0, 1132, 1133, 0, 1360,
	1362, 1363, 1364, 1377, 0, 1382, 1383, 0, 1388, 0,
	1392, 1403, 0, 1010, 1017, 1018, 0, 1013, 0, 1014,
	0, 958, 1509, 84, 1510, 1507, 0, 1505, 1502, 1569,
	0, 1578, 1579, 1588, 1589, 1595, 0, 0, 1608, 0,
	1602, 90, 0, 0, 0, 1520, 198, 0, 218, 628,
	0, 631, 621, 708, 709, 0, 721, 713, 715, 716,
	698, -2, 1547, 0, 0, 0, 599, 1456, 0, 0,
	1332, 0, 647, 648, 1120, 1113, 0, 1098, 1099, 1117,
	1357, 1359, 0, 0, 0, 1009, 969, 970, 1011, 1012,
	83, 0, 1506, 1140, 0, 1501, 0, 1581, 1582, 1612,
	0, 1601, 1607, 978, 985, 0, 91, 451, 444, 0,
	0, 0, 701, 702, 703, 704, 705, 706, 707, 588,
	142, 143, 0, 518, 519, 520, 136, 0, 1175, 1328,
	1114, 0, 0, 0, 0, 0, 1378, 0, 1384, 0,
	1389, 0, 1508, 0, 0, 1503, 1610, 633, 0, 635,
	0, -2, 439, 452, 0, 192, 219, 220, 0, 0,
	223, 0, 225, 226, 216, 217, 0, 0, 722, 0,
	139, 0, 0, 1105, 1106, 1107, 1108, 1110, 0, 0,
	0, 0, 1141, 1118, 634, 0, 0, 394, 0, 644,
	440, 441, 0, 447, 448, 449, 450, 221, 222, 224,
	656, 0, 517, 595, 1457, 0, 0, 1379, 0, 1385,
	0, 1390, 0, 636, 637, 645, 0, 442, 0, 443,
	0, 0, 0, 625, 0, 656, 1115, 1109, 1111, 0,
	0, 1139, 0, 646, 642, 453, 455, 456, 0, 0,
	454, 657, 626, 1380, 1386, 0, 457, 458, 459, 638,
	639, 640, 641,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 186, 178, 3,
	95, 97, 183, 181, 96, 182, 236, 184, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 756,
	166, 165, 167, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 188, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 189,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	185, 187, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:637
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:650
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:655
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:694
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:700
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:712
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:716
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:728
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:734
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:738
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:747
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:757
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:763
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:769
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:773
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:777
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:800
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:806
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:811
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:817
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:824
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:830
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:841
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:847
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:851
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:855
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:859
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:863
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:869
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:873
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:878
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:882
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:888
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:892
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:897
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:903
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:909
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:916
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:920
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:926
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:940
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:944
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:948
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:978
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:982
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1002
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1006
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1011
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1016
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1020
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1026
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1030
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1036
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1040
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1049
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1055
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1061
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1065
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1071
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1075
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1079
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1083
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1089
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1093
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1097
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1103
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1107
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1113
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1123
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1127
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1131
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1137
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1141
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1155
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1159
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1163
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1169
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1175
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1182
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1186
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1195
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1202
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1225
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1230
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1235
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1241
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1261
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1267
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1283
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1290
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1306
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1311
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1316
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1324
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1331
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1336
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1341
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1346
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1353
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1360
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1371
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1382
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1388
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1392
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1396
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1400
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1424
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1428
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1434
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1438
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1444
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1448
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1454
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1458
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1464
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1468
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1474
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1479
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1484
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1488
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1493
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1497
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1512
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1521
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = ""
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = ""
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1547
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1552
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1557
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1562
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1568
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1573
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1578
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1583
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1592
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1601
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1616
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1620
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1626
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1630
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1634
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1638
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1644
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1648
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1653
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1657
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1662
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1667
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1672
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1677
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1682
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1687
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1692
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1722
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1726
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1743
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1747
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1753
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1757
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1761
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1765
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1769
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1773
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1777
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1781
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1785
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1789
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1793
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1797
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1801
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1806
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1810
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1814
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Armscii8Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = ASCIIStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Big5Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = UBinaryStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Cp1250Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Cp1251Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Cp1256Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Cp1257Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Cp850Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Cp852Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Cp866Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Cp932Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Dec8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = EucjpmsStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = EuckrStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Gb18030Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Gb2312Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = GbkStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Geostd8Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = GreekStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = HebrewStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Hp8Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Keybcs2Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Koi8rStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = Koi8uStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Latin1Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Latin2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = Latin5Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = Latin7Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.str = MacceStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = MacromanStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = SjisStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.str = Swe7Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.str = Tis620Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.str = Ucs2Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = UjisStr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = Utf16Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.str = Utf16leStr
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.str = Utf32Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.str = Utf8mb3Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.str = Utf8mb4Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.str = Utf8mb3Str
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1994
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1998
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2002
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2008
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2012
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2018
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2022
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2026
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2032
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2036
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2042
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2046
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2050
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2054
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2220
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2228
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2253
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2259
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2307
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2312
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2316
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2329
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2336
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2340
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2346
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2362
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2367
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2371
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2407
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2418
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2441
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2450
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2456
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2466
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2470
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2475
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2479
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2483
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2487
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2491
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2495
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = ""
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2511
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2515
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2519
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2523
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2527
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = ""
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = yyDollar[2].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = ""
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = yyDollar[1].str
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2584
		{
			yyVAL.str = ""
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2594
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2604
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2608
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2614
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2618
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2624
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2628
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2634
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2640
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2644
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2648
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2652
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2656
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2665
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2671
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2677
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2683
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2687
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2691
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2696
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2700
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2706
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2712
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2718
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2722
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2726
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2730
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2734
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = ""
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2753
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2757
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2762
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2766
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2775
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2781
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2795
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2853
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2857
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2865
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2869
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2873
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2877
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2881
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2885
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2889
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2893
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2897
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2901
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2905
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2909
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2913
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2917
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2921
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2925
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2969
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2980
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2984
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2993
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2998
		{
			yyVAL.str = ""
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3011
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3015
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3024
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3028
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3032
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3036
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3040
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3046
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3054
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3156
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3160
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3164
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3168
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3172
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3176
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3180
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3186
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3196
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3200
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3204
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3208
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3212
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3216
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3220
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3224
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3228
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3232
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3311
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3332
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3342
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3375
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3382
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3388
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3403
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3416
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3465
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3491
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3500
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3508
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3517
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3524
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3536
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3545
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3560
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3565
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3569
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3574
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3578
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3584
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3590
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3596
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3600
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3606
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3610
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3616
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3622
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3628
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3634
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3640
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3652
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3658
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3664
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3670
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3674
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3678
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3684
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3688
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3693
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3697
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3702
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3706
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3712
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3716
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3720
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3724
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3728
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3732
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3736
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3740
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3744
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3748
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3752
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3756
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3760
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3764
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3768
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3772
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3776
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3780
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3784
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3788
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3792
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3796
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3801
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3805
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3809
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3815
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3819
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3830
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3834
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3839
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3844
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3849
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3854
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3859
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3864
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3869
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3874
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3880
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3886
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3890
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3896
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3901
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3905
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3910
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3915
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3920
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3925
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3930
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3935
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3942
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3949
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3956
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3964
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3974
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3980
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3986
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3992
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3998
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4004
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4016
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4038
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4042
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4245
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4253
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4257
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4261
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4280
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4284
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4288
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4292
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4296
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4300
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4304
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4308
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4325
		{
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4331
		{
			yyVAL.str = ""
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.str = "extended "
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4361
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4379
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4383
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4393
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4399
		{
			yyVAL.empty = struct{}{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4423
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4431
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4438
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4470
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4476
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4486
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4490
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4494
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4501
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4507
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4516
		{
			yyVAL.empty = struct{}{}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.empty = struct{}{}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4521
		{
			yyVAL.empty = struct{}{}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.empty = struct{}{}
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4527
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4533
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4538
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4542
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4546
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4550
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4554
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4559
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4563
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4567
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4571
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4575
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4579
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = yyDollar[1].str
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.str = yyDollar[1].str
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.str = yyDollar[1].str
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4603
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4607
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4611
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4616
		{
			yyVAL.str = ""
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4624
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4630
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4640
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4646
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4650
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4656
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4662
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4672
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4678
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4682
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4686
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4690
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4696
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4702
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4708
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4712
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4716
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4720
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4724
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4728
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4738
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4744
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4748
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4752
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4756
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4760
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4764
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4768
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4772
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4776
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4780
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4784
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4793
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4797
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4801
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4815
		{
			setAllowComments(yylex, true)
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4819
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4825
		{
			yyVAL.strs = nil
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4829
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4835
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4839
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4843
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4848
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4852
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.str = SQLCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4861
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4865
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4869
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4875
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4879
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4889
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4898
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4904
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4908
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4913
		{
			yyVAL.strs = nil
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4917
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4923
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.str = SQLCacheStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.str = DistinctStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = DistinctStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4949
		{
			yyVAL.str = HighPriorityStr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4953
		{
			yyVAL.str = StraightJoinHint
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4961
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.str = SQLBigResultStr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4973
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:4979
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:4983
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4991
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4995
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4999
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5003
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5008
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5016
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5028
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5032
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5038
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5044
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5048
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5058
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5062
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5066
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5070
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5076
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5080
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5086
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5090
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5099
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5108
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5114
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5118
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5124
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5128
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5134
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5138
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5142
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5146
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5152
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5156
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5169
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5173
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5177
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5181
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5187
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5189
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5193
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5195
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5199
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5201
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5204
		{
			yyVAL.empty = struct{}{}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			yyVAL.empty = struct{}{}
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5209
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5213
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5217
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5224
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5230
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5234
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5238
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5244
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5250
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5254
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5258
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5262
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5268
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5272
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5282
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5286
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5292
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5296
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5302
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5311
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5317
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5321
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5327
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5331
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5335
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5339
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5343
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5347
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5352
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5356
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5360
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5364
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5499
		{
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5548
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5606
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5610
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5622
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5666
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5676
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5680
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5686
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5690
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5696
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5700
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5704
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5710
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5714
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5721
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5725
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5729
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5733
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5737
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5743
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5747
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5751
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5755
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5759
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5763
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5767
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5776
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5782
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5786
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5795
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5800
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5804
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5810
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5816
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5820
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5826
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5842
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5848
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5852
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5858
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5862
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5868
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5872
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5884
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5890
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5894
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5900
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5906
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5910
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5916
		{
			yyVAL.str = ""
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5920
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5926
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5930
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5937
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5941
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5945
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5949
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5955
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5959
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5965
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5969
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5973
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5977
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5981
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5985
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5991
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5995
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5999
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6006
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6012
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6016
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6843
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6857
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6861
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6865
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6878
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6905
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6909
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6930
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6934
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6938
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6942
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6949
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6953
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6959
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6963
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6967
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6971
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6977
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6981
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6985
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6989
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6993
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6997
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7001
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7010
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7016
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7020
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7024
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7028
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7032
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7036
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7040
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7044
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7048
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7052
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7056
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7060
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7064
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7068
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7072
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7076
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7080
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7084
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7088
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7092
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7098
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7102
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7106
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7110
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7114
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7118
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7122
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7126
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7130
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7134
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7138
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7142
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7146
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7150
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7154
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7158
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7162
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7166
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7176
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7180
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7184
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7194
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7198
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7202
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7206
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7216
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7220
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7224
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7228
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7232
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7238
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7246
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7256
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7260
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7266
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7270
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7274
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7278
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7282
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7288
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7292
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7296
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7300
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7304
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7308
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7312
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7316
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7320
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7324
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7343
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7348
		{
			yyVAL.str = string("")
		}
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7352
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7358
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7362
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7368
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7377
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7383
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7387
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7391
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7395
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7401
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7405
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7411
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7420
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7424
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7433
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7452
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7458
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7464
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7468
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7477
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7486
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7492
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7498
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7502
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7508
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7513
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7517
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7521
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7530
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7536
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7540
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7544
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7553
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7557
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7561
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7565
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7572
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7576
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7580
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7584
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7590
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7594
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7598
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7602
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7607
		{
			yyVAL.str = ""
		}
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7614
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7618
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7622
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7627
		{
			yyVAL.str = ""
		}
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7631
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7637
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7641
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7646
		{
			yyVAL.str = ""
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7650
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7655
		{
			yyVAL.str = "cascaded"
		}
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7675
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7681
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7687
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7693
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7702
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7706
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7711
		{
			yyVAL.str = ""
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7715
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7721
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7725
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7729
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7733
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7737
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7741
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7745
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7751
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7755
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7759
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7764
		{
			yyVAL.str = ""
		}
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7768
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7772
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7777
		{
			yyVAL.str = ""
		}
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7781
		{
			yyVAL.str = " header"
		}
	case 1577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7786
		{
			yyVAL.str = ""
		}
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7790
		{
			yyVAL.str = " manifest on"
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7794
		{
			yyVAL.str = " manifest off"
		}
	case 1580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7799
		{
			yyVAL.str = ""
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7803
		{
			yyVAL.str = " overwrite on"
		}
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7807
		{
			yyVAL.str = " overwrite off"
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7813
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7818
		{
			yyVAL.str = ""
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7822
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7828
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7832
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7838
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7842
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7847
		{
			yyVAL.str = ""
		}
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7851
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7857
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7861
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7867
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7871
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7875
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7880
		{
			yyVAL.str = ""
		}
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7884
		{
			yyVAL.str = " optionally"
		}
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7897
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7901
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7905
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7909
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7913
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7919
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7923
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7927
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7931
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7940
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7944
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7953
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7959
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7963
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7969
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7973
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7979
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7983
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7989
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7993
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7999
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8005
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8015
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8025
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8029
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8035
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8042
		{
			yyVAL.str = "charset"
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8052
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8056
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8060
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8071
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8081
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8084
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8089
		{
			yyVAL.empty = struct{}{}
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8091
		{
			yyVAL.empty = struct{}{}
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8093
		{
			yyVAL.empty = struct{}{}
		}
	case 1649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8097
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8106
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8113
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8117
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8123
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8127
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8134
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8140
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8144
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8150
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8154
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8161
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8167
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8173
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8177
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8181
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8845
		{
		}
	case 2305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8850
		{
		}
	case 2306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8854
		{
			skipToEnd(yylex)
		}
	case 2307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8859
		{
			skipToEnd(yylex)
		}
	case 2308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8863
		{
			skipToEnd(yylex)
		}
	case 2309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8867
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
