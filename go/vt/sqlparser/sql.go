// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const REVERT = 57487
const SCHEMA = 57488
const TABLE = 57489
const INDEX = 57490
const VIEW = 57491
const TO = 57492
const IGNORE = 57493
const IF = 57494
const UNIQUE = 57495
const PRIMARY = 57496
const COLUMN = 57497
const SPATIAL = 57498
const FULLTEXT = 57499
const KEY_BLOCK_SIZE = 57500
const CHECK = 57501
const INDEXES = 57502
const ACTION = 57503
const CASCADE = 57504
const CONSTRAINT = 57505
const FOREIGN = 57506
const NO = 57507
const REFERENCES = 57508
const RESTRICT = 57509
const SHOW = 57510
const DESCRIBE = 57511
const EXPLAIN = 57512
const DATE = 57513
const ESCAPE = 57514
const REPAIR = 57515
const OPTIMIZE = 57516
const TRUNCATE = 57517
const COALESCE = 57518
const EXCHANGE = 57519
const REBUILD = 57520
const PARTITIONING = 57521
const REMOVE = 57522
const MAXVALUE = 57523
const PARTITION = 57524
const REORGANIZE = 57525
const LESS = 57526
const THAN = 57527
const PROCEDURE = 57528
const TRIGGER = 57529
const VINDEX = 57530
const VINDEXES = 57531
const DIRECTORY = 57532
const NAME = 57533
const UPGRADE = 57534
const STATUS = 57535
const VARIABLES = 57536
const WARNINGS = 57537
const CASCADED = 57538
const DEFINER = 57539
const OPTION = 57540
const SQL = 57541
const UNDEFINED = 57542
const SEQUENCE = 57543
const MERGE = 57544
const TEMPORARY = 57545
const TEMPTABLE = 57546
const INVOKER = 57547
const SECURITY = 57548
const FIRST = 57549
const AFTER = 57550
const LAST = 57551
const VITESS_MIGRATION = 57552
const CANCEL = 57553
const RETRY = 57554
const COMPLETE = 57555
const BEGIN = 57556
const START = 57557
const TRANSACTION = 57558
const COMMIT = 57559
const ROLLBACK = 57560
const SAVEPOINT = 57561
const RELEASE = 57562
const WORK = 57563
const BIT = 57564
const TINYINT = 57565
const SMALLINT = 57566
const MEDIUMINT = 57567
const INT = 57568
const INTEGER = 57569
const BIGINT = 57570
const INTNUM = 57571
const REAL = 57572
const DOUBLE = 57573
const FLOAT_TYPE = 57574
const DECIMAL = 57575
const NUMERIC = 57576
const TIME = 57577
const TIMESTAMP = 57578
const DATETIME = 57579
const YEAR = 57580
const CHAR = 57581
const VARCHAR = 57582
const BOOL = 57583
const CHARACTER = 57584
const VARBINARY = 57585
const NCHAR = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const BLOB = 57591
const TINYBLOB = 57592
const MEDIUMBLOB = 57593
const LONGBLOB = 57594
const JSON = 57595
const ENUM = 57596
const GEOMETRY = 57597
const POINT = 57598
const LINESTRING = 57599
const POLYGON = 57600
const GEOMETRYCOLLECTION = 57601
const MULTIPOINT = 57602
const MULTILINESTRING = 57603
const MULTIPOLYGON = 57604
const NULLX = 57605
const AUTO_INCREMENT = 57606
const APPROXNUM = 57607
const SIGNED = 57608
const UNSIGNED = 57609
const ZEROFILL = 57610
const CODE = 57611
const COLLATION = 57612
const COLUMNS = 57613
const DATABASES = 57614
const ENGINES = 57615
const EVENT = 57616
const EXTENDED = 57617
const FIELDS = 57618
const FULL = 57619
const FUNCTION = 57620
const KEYSPACES = 57621
const OPEN = 57622
const PLUGINS = 57623
const PRIVILEGES = 57624
const PROCESSLIST = 57625
const SCHEMAS = 57626
const TABLES = 57627
const TRIGGERS = 57628
const USER = 57629
const VGTID_EXECUTED = 57630
const VITESS_KEYSPACES = 57631
const VITESS_METADATA = 57632
const VITESS_MIGRATIONS = 57633
const VITESS_SHARDS = 57634
const VITESS_TABLETS = 57635
const VSCHEMA = 57636
const NAMES = 57637
const CHARSET = 57638
const GLOBAL = 57639
const SESSION = 57640
const ISOLATION = 57641
const LEVEL = 57642
const READ = 57643
const WRITE = 57644
const ONLY = 57645
const REPEATABLE = 57646
const COMMITTED = 57647
const UNCOMMITTED = 57648
const SERIALIZABLE = 57649
const CURRENT_TIMESTAMP = 57650
const DATABASE = 57651
const CURRENT_DATE = 57652
const CURRENT_TIME = 57653
const LOCALTIME = 57654
const LOCALTIMESTAMP = 57655
const CURRENT_USER = 57656
const UTC_DATE = 57657
const UTC_TIME = 57658
const UTC_TIMESTAMP = 57659
const REPLACE = 57660
const CONVERT = 57661
const CAST = 57662
const SUBSTR = 57663
const SUBSTRING = 57664
const GROUP_CONCAT = 57665
const SEPARATOR = 57666
const TIMESTAMPADD = 57667
const TIMESTAMPDIFF = 57668
const MATCH = 57669
const AGAINST = 57670
const BOOLEAN = 57671
const LANGUAGE = 57672
const WITH = 57673
const QUERY = 57674
const EXPANSION = 57675
const WITHOUT = 57676
const VALIDATION = 57677
const UNUSED = 57678
const ARRAY = 57679
const CUME_DIST = 57680
const DESCRIPTION = 57681
const DENSE_RANK = 57682
const EMPTY = 57683
const EXCEPT = 57684
const FIRST_VALUE = 57685
const GROUPING = 57686
const GROUPS = 57687
const JSON_TABLE = 57688
const LAG = 57689
const LAST_VALUE = 57690
const LATERAL = 57691
const LEAD = 57692
const MEMBER = 57693
const NTH_VALUE = 57694
const NTILE = 57695
const OF = 57696
const OVER = 57697
const PERCENT_RANK = 57698
const RANK = 57699
const RECURSIVE = 57700
const ROW_NUMBER = 57701
const SYSTEM = 57702
const WINDOW = 57703
const ACTIVE = 57704
const ADMIN = 57705
const BUCKETS = 57706
const CLONE = 57707
const COMPONENT = 57708
const DEFINITION = 57709
const ENFORCED = 57710
const EXCLUDE = 57711
const FOLLOWING = 57712
const GEOMCOLLECTION = 57713
const GET_MASTER_PUBLIC_KEY = 57714
const HISTOGRAM = 57715
const HISTORY = 57716
const INACTIVE = 57717
const INVISIBLE = 57718
const LOCKED = 57719
const MASTER_COMPRESSION_ALGORITHMS = 57720
const MASTER_PUBLIC_KEY_PATH = 57721
const MASTER_TLS_CIPHERSUITES = 57722
const MASTER_ZSTD_COMPRESSION_LEVEL = 57723
const NESTED = 57724
const NETWORK_NAMESPACE = 57725
const NOWAIT = 57726
const NULLS = 57727
const OJ = 57728
const OLD = 57729
const OPTIONAL = 57730
const ORDINALITY = 57731
const ORGANIZATION = 57732
const OTHERS = 57733
const PATH = 57734
const PERSIST = 57735
const PERSIST_ONLY = 57736
const PRECEDING = 57737
const PRIVILEGE_CHECKS_USER = 57738
const PROCESS = 57739
const RANDOM = 57740
const REFERENCE = 57741
const REQUIRE_ROW_FORMAT = 57742
const RESOURCE = 57743
const RESPECT = 57744
const RESTART = 57745
const RETAIN = 57746
const REUSE = 57747
const ROLE = 57748
const SECONDARY = 57749
const SECONDARY_ENGINE = 57750
const SECONDARY_LOAD = 57751
const SECONDARY_UNLOAD = 57752
const SKIP = 57753
const SRID = 57754
const THREAD_PRIORITY = 57755
const TIES = 57756
const UNBOUNDED = 57757
const VCPU = 57758
const VISIBLE = 57759
const FORMAT = 57760
const TREE = 57761
const VITESS = 57762
const TRADITIONAL = 57763
const LOCAL = 57764
const LOW_PRIORITY = 57765
const NO_WRITE_TO_BINLOG = 57766
const LOGS = 57767
const ERROR = 57768
const GENERAL = 57769
const HOSTS = 57770
const OPTIMIZER_COSTS = 57771
const USER_RESOURCES = 57772
const SLOW = 57773
const CHANNEL = 57774
const RELAY = 57775
const EXPORT = 57776
const AVG_ROW_LENGTH = 57777
const CONNECTION = 57778
const CHECKSUM = 57779
const DELAY_KEY_WRITE = 57780
const ENCRYPTION = 57781
const ENGINE = 57782
const INSERT_METHOD = 57783
const MAX_ROWS = 57784
const MIN_ROWS = 57785
const PACK_KEYS = 57786
const PASSWORD = 57787
const FIXED = 57788
const DYNAMIC = 57789
const COMPRESSED = 57790
const REDUNDANT = 57791
const COMPACT = 57792
const ROW_FORMAT = 57793
const STATS_AUTO_RECALC = 57794
const STATS_PERSISTENT = 57795
const STATS_SAMPLE_PAGES = 57796
const STORAGE = 57797
const MEMORY = 57798
const DISK = 57799

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 112,
	475, 112,
	-2, 118,
	-1, 46,
	143, 118,
	259, 118,
	313, 118,
	-2, 326,
	-1, 53,
	34, 473,
	165, 473,
	177, 473,
	210, 487,
	211, 487,
	-2, 475,
	-1, 58,
	167, 497,
	-2, 495,
	-1, 84,
	56, 565,
	-2, 573,
	-1, 97,
	164, 935,
	-2, 91,
	-1, 99,
	1, 113,
	475, 113,
	-2, 118,
	-1, 109,
	170, 231,
	171, 231,
	-2, 320,
	-1, 128,
	143, 118,
	259, 118,
	313, 118,
	-2, 335,
	-1, 562,
	150, 956,
	-2, 952,
	-1, 563,
	150, 957,
	-2, 953,
	-1, 582,
	56, 566,
	-2, 578,
	-1, 583,
	56, 567,
	-2, 579,
	-1, 604,
	118, 1300,
	-2, 84,
	-1, 605,
	118, 1182,
	-2, 85,
	-1, 611,
	118, 1232,
	-2, 929,
	-1, 749,
	118, 1119,
	-2, 926,
	-1, 785,
	176, 38,
	181, 38,
	-2, 242,
	-1, 862,
	1, 373,
	475, 373,
	-2, 118,
	-1, 1102,
	1, 269,
	475, 269,
	-2, 118,
	-1, 1178,
	170, 231,
	171, 231,
	-2, 320,
	-1, 1187,
	176, 39,
	181, 39,
	-2, 243,
	-1, 1394,
	150, 961,
	-2, 955,
	-1, 1487,
	74, 66,
	82, 66,
	-2, 70,
	-1, 1508,
	1, 270,
	475, 270,
	-2, 118,
	-1, 1931,
	5, 822,
	18, 822,
	20, 822,
	32, 822,
	83, 822,
	-2, 605,
	-1, 2156,
	46, 897,
	-2, 891,
}

const yyPrivate = 57344

const yyLast = 28301

var yyAct = [...]int{
	562, 2248, 2235, 2081, 1988, 2183, 1808, 2209, 1724, 2134,
	2157, 1911, 83, 3, 2196, 2106, 534, 1691, 2078, 1912,
	1573, 1003, 520, 1725, 1908, 1057, 1505, 1050, 505, 1431,
	1788, 1543, 1159, 1851, 1812, 1789, 503, 1790, 1538, 137,
	1388, 1558, 1870, 815, 500, 1380, 873, 1923, 921, 165,
	1084, 1293, 165, 1651, 468, 165, 752, 901, 1185, 81,
	484, 1571, 165, 1711, 575, 123, 1557, 1523, 1484, 1545,
	165, 780, 1782, 1094, 1078, 1604, 1087, 1466, 1473, 1433,
	609, 1055, 33, 1080, 1060, 1042, 1414, 496, 569, 1357,
	1077, 939, 484, 593, 584, 484, 165, 484, 1555, 783,
	507, 1290, 1276, 1449, 1192, 759, 1534, 781, 793, 760,
	756, 786, 782, 1093, 1489, 1091, 79, 1203, 140, 1067,
	100, 101, 858, 1177, 78, 1019, 491, 8, 7, 1154,
	6, 1602, 1298, 1016, 1262, 1524, 1858, 106, 107, 1859,
	606, 2108, 919, 1831, 1830, 1346, 940, 167, 168, 169,
	1428, 1429, 1345, 1344, 1343, 1342, 1341, 2223, 494, 497,
	495, 1334, 570, 1689, 102, 2153, 753, 763, 820, 817,
	108, 591, 595, 2057, 2130, 768, 940, 2129, 1957, 819,
	818, 2076, 831, 832, 2077, 835, 836, 837, 838, 443,
	492, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 2254, 603, 1391, 84,
	796, 2206, 950, 1641, 2247, 2178, 2239, 2082, 102, 797,
	774, 773, 80, 1550, 1590, 2205, 2177, 610, 1887, 821,
	822, 823, 1168, 2021, 1938, 1939, 1838, 1095, 775, 1096,
	1837, 1690, 950, 1937, 1548, 828, 86, 87, 88, 89,
	90, 91, 1857, 908, 97, 910, 1755, 162, 161, 1754,
	438, 35, 1756, 1639, 72, 39, 40, 1500, 1501, 1807,
	1499, 834, 1430, 892, 566, 1490, 833, 565, 472, 769,
	568, 917, 102, 103, 776, 125, 861, 167, 168, 169,
	897, 898, 907, 909, 145, 772, 1772, 867, 868, 1517,
	893, 946, 2012, 2010, 938, 2143, 965, 964, 974, 975,
	967, 968, 969, 970, 971, 972, 973, 966, 880, 886,
	976, 1990, 2180, 881, 1547, 135, 482, 1335, 1336, 1337,
	124, 946, 471, 1333, 486, 772, 71, 764, 857, 880,
	480, 1046, 767, 1813, 881, 766, 765, 1572, 142, 1834,
	143, 879, 770, 878, 1605, 1179, 1180, 134, 133, 160,
	1282, 547, 1252, 553, 554, 551, 552, 1417, 550, 549,
	548, 1610, 772, 856, 2246, 1277, 894, 916, 555, 556,
	905, 895, 896, 2224, 906, 899, 914, 472, 1615, 1613,
	1614, 900, 770, 911, 863, 887, 1620, 1991, 1871, 1617,
	472, 1618, 1984, 1619, 1253, 1846, 1254, 129, 1181, 136,
	1985, 1178, 840, 130, 131, 904, 1609, 839, 146, 1992,
	1607, 2126, 2071, 1574, 804, 1611, 802, 1467, 151, 813,
	812, 811, 810, 809, 808, 807, 860, 806, 165, 795,
	165, 471, 1873, 165, 945, 942, 943, 944, 949, 951,
	948, 578, 947, 1956, 471, 801, 777, 1608, 771, 941,
	1171, 912, 472, 814, 2072, 2255, 2237, 757, 757, 484,
	484, 484, 2252, 789, 945, 942, 943, 944, 949, 951,
	948, 757, 947, 1836, 788, 755, 1490, 484, 484, 941,
	795, 876, 1291, 882, 883, 884, 885, 1549, 771, 1556,
	1283, 932, 2176, 795, 1875, 913, 1879, 597, 1874, 890,
	1872, 1191, 1190, 1850, 918, 1877, 471, 805, 1847, 803,
	859, 795, 915, 1596, 1876, 2144, 1287, 1692, 1694, 926,
	824, 1964, 1833, 795, 138, 771, 2181, 1878, 1880, 1896,
	1895, 1640, 1894, 1166, 1165, 1164, 1823, 1288, 1162, 442,
	437, 2164, 1592, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 2041, 1670, 2197, 165, 1264, 1263, 1265,
	1266, 1267, 988, 989, 830, 794, 99, 1936, 1769, 1764,
	795, 798, 788, 1853, 1048, 1716, 1659, 877, 1852, 132,
	73, 799, 1582, 957, 484, 1047, 1495, 165, 1071, 165,
	165, 126, 484, 986, 127, 1667, 866, 1001, 484, 800,
	1853, 1506, 923, 924, 869, 1852, 935, 933, 1004, 934,
	2250, 871, 1765, 2251, 1693, 2249, 794, 1845, 966, 497,
	1844, 976, 976, 788, 791, 792, 1751, 757, 1014, 794,
	889, 785, 789, 1445, 1767, 798, 788, 1762, 902, 1043,
	606, 1329, 891, 956, 2172, 799, 816, 794, 2018, 1763,
	784, 1281, 1921, 1299, 788, 791, 792, 1076, 757, 794,
	1053, 1056, 785, 789, 1022, 1024, 1591, 1027, 1029, 1061,
	1032, 1018, 1021, 1023, 1025, 1026, 1028, 1030, 1031, 1606,
	875, 1040, 967, 968, 969, 970, 971, 972, 973, 966,
	955, 953, 976, 988, 989, 139, 144, 141, 147, 148,
	149, 150, 152, 153, 154, 155, 794, 956, 829, 1770,
	1768, 156, 157, 158, 159, 965, 964, 974, 975, 967,
	968, 969, 970, 971, 972, 973, 966, 610, 94, 976,
	862, 1278, 1284, 1279, 988, 989, 1280, 1097, 936, 1889,
	1589, 1415, 165, 1677, 1415, 1801, 1155, 1941, 969, 970,
	971, 972, 973, 966, 903, 1163, 976, 965, 964, 974,
	975, 967, 968, 969, 970, 971, 972, 973, 966, 1300,
	953, 976, 1049, 95, 484, 1652, 1187, 167, 168, 169,
	1059, 1382, 1787, 1587, 1196, 804, 956, 1584, 1200, 1584,
	802, 484, 484, 874, 484, 2256, 484, 484, 1064, 484,
	484, 484, 484, 484, 484, 2240, 954, 955, 953, 1169,
	1170, 1588, 1364, 1586, 484, 1197, 2229, 71, 165, 1236,
	1766, 167, 168, 169, 956, 1777, 1362, 1363, 1361, 1360,
	1183, 1665, 2233, 2241, 1249, 1176, 1092, 1383, 2056, 1664,
	1231, 1232, 1195, 2055, 2230, 484, 596, 165, 974, 975,
	967, 968, 969, 970, 971, 972, 973, 966, 1289, 1962,
	976, 1786, 165, 2257, 954, 955, 953, 1239, 1240, 1785,
	1233, 1553, 1271, 1245, 1246, 1161, 1272, 1898, 165, 1666,
	1269, 1778, 956, 1257, 1256, 165, 1255, 1194, 1247, 1241,
	1193, 1193, 1173, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 484, 484, 484, 1186, 1174, 1172, 1238, 1205,
	1237, 1206, 1212, 1208, 1210, 2232, 1259, 1214, 1216, 1218,
	1220, 1222, 2231, 1303, 1447, 1899, 1301, 1302, 601, 165,
	1307, 1270, 1309, 1310, 1311, 1312, 598, 599, 1315, 1268,
	1306, 2217, 1295, 1644, 1645, 1646, 2215, 1313, 1314, 2097,
	1234, 2053, 1330, 2029, 954, 955, 953, 1944, 1900, 1297,
	1795, 1292, 1891, 954, 955, 953, 1358, 1381, 1167, 1450,
	1451, 102, 956, 774, 773, 1258, 1384, 1783, 1635, 1340,
	1600, 956, 1352, 1354, 1355, 1599, 1439, 1446, 1296, 1260,
	484, 1248, 1244, 1356, 1353, 1243, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1305, 954, 955, 953, 1385, 1386, 167, 168, 169,
	1398, 1758, 1242, 1987, 484, 484, 579, 80, 1403, 1406,
	956, 167, 168, 169, 1416, 165, 1347, 1348, 1349, 1350,
	1392, 1971, 2221, 1393, 1325, 1326, 1327, 1971, 2203, 484,
	1359, 954, 955, 953, 2124, 1418, 165, 1438, 2123, 484,
	1004, 1971, 2170, 165, 2080, 165, 1815, 1422, 1423, 956,
	1971, 2165, 1394, 165, 165, 954, 955, 953, 1971, 579,
	484, 2074, 579, 484, 1798, 1485, 167, 168, 169, 1514,
	1566, 1401, 1402, 956, 484, 523, 522, 525, 526, 527,
	528, 1920, 1440, 2036, 524, 579, 529, 1584, 579, 1395,
	1392, 1712, 1452, 1464, 167, 168, 169, 2168, 1564, 167,
	168, 169, 1491, 1250, 1488, 2039, 579, 2171, 606, 497,
	952, 606, 1509, 1518, 1971, 1519, 1520, 1521, 1522, 1971,
	1976, 1491, 1394, 1954, 1953, 1712, 1460, 1950, 1951, 484,
	1510, 1530, 1531, 1532, 1533, 1559, 1560, 1561, 1950, 1949,
	1563, 1565, 1458, 579, 35, 1513, 1490, 1832, 1158, 1817,
	1810, 1811, 2058, 484, 1459, 1525, 1526, 1527, 1462, 484,
	1470, 1504, 1540, 1196, 1492, 1196, 1470, 579, 35, 1546,
	1493, 1909, 1494, 1583, 1497, 1496, 952, 579, 1158, 1157,
	1920, 1512, 82, 1492, 1399, 1400, 1511, 1585, 1405, 1408,
	1409, 1490, 2113, 1719, 1920, 610, 1103, 1102, 610, 1745,
	2059, 2060, 2061, 484, 71, 1381, 1952, 1490, 1470, 1570,
	1381, 1381, 1498, 1682, 1421, 35, 1720, 1424, 1425, 71,
	1542, 1580, 1469, 1581, 1458, 1681, 572, 1536, 1537, 1458,
	2136, 579, 1584, 1552, 1554, 1541, 1562, 1567, 1551, 1448,
	1426, 1338, 1584, 71, 1227, 165, 1286, 1089, 1458, 779,
	1595, 796, 165, 778, 2079, 1597, 1598, 165, 165, 1593,
	797, 165, 563, 165, 1576, 1594, 1579, 1541, 1575, 165,
	1193, 2047, 1792, 1470, 1160, 1539, 165, 965, 964, 974,
	975, 967, 968, 969, 970, 971, 972, 973, 966, 1986,
	71, 976, 1228, 1229, 1230, 1603, 1577, 1535, 1529, 1528,
	1274, 71, 165, 484, 1188, 1184, 1156, 96, 1791, 861,
	2062, 166, 1924, 1925, 166, 2024, 1989, 166, 1630, 1631,
	2137, 1550, 485, 1633, 166, 2243, 2236, 1969, 1968, 1224,
	1967, 1634, 166, 1927, 1909, 1802, 1624, 1331, 1736, 2040,
	1396, 1397, 1058, 1737, 1734, 1930, 1929, 1733, 1358, 1735,
	1732, 2226, 2204, 1792, 485, 2063, 2064, 485, 166, 485,
	1623, 2023, 965, 964, 974, 975, 967, 968, 969, 970,
	971, 972, 973, 966, 1225, 1226, 976, 1648, 1649, 1650,
	1901, 1475, 1478, 1479, 1480, 1476, 1441, 1477, 1481, 1701,
	1974, 1924, 1925, 1738, 1710, 1479, 1480, 165, 2158, 2160,
	1638, 1709, 2228, 2208, 2210, 165, 2188, 2161, 965, 964,
	974, 975, 967, 968, 969, 970, 971, 972, 973, 966,
	2185, 1647, 976, 1699, 2155, 1796, 1285, 564, 2184, 826,
	165, 1700, 1359, 1661, 825, 589, 585, 1411, 1698, 1999,
	1791, 165, 165, 165, 165, 165, 1051, 925, 570, 1721,
	1705, 586, 1412, 165, 1660, 1856, 2111, 165, 1052, 1825,
	165, 165, 1824, 103, 165, 165, 165, 1946, 1726, 1743,
	1676, 1945, 1578, 1202, 1062, 1063, 588, 1757, 587, 1678,
	1043, 1201, 1688, 1189, 1696, 1475, 1478, 1479, 1480, 1476,
	2034, 1477, 1481, 1450, 1451, 1776, 1443, 1965, 1714, 1717,
	1704, 2017, 1627, 2166, 1643, 2131, 1483, 573, 574, 1616,
	1702, 1703, 1056, 1713, 576, 2216, 1728, 1729, 1760, 1731,
	1775, 484, 1779, 1780, 1781, 1715, 165, 2214, 1746, 1708,
	1739, 1727, 1748, 165, 1730, 1744, 2213, 1707, 2189, 484,
	2187, 1749, 1752, 2033, 1970, 484, 1295, 1568, 484, 577,
	1196, 82, 1761, 2032, 1818, 484, 1546, 1773, 1774, 1904,
	1712, 1794, 2245, 2244, 80, 1671, 1668, 1829, 1656, 1657,
	1072, 1814, 1784, 1065, 2245, 2162, 1943, 1444, 165, 165,
	165, 165, 165, 572, 1793, 85, 77, 1, 455, 1674,
	1427, 1041, 1828, 467, 165, 165, 1803, 1804, 1805, 1827,
	1799, 1820, 2234, 1176, 1393, 1261, 1251, 2083, 1819, 2133,
	965, 964, 974, 975, 967, 968, 969, 970, 971, 972,
	973, 966, 589, 585, 976, 1826, 1977, 1544, 787, 128,
	484, 1507, 1508, 1394, 2199, 93, 1381, 750, 586, 92,
	790, 888, 1569, 2075, 1848, 964, 974, 975, 967, 968,
	969, 970, 971, 972, 973, 966, 1868, 1854, 976, 1869,
	1855, 582, 583, 588, 1771, 587, 484, 1862, 1863, 1866,
	1888, 1516, 1860, 1109, 1107, 1108, 1106, 165, 1867, 1882,
	1111, 1881, 1883, 1884, 1110, 1885, 1886, 484, 1105, 1332,
	481, 1482, 163, 484, 484, 1098, 1892, 1893, 1910, 1066,
	166, 827, 166, 445, 1955, 166, 1328, 1913, 1601, 451,
	984, 1706, 1753, 607, 600, 1915, 165, 2182, 1726, 2154,
	2156, 2107, 1654, 2159, 2152, 2227, 1655, 2207, 1515, 1442,
	1054, 485, 485, 485, 2031, 1867, 1903, 1662, 1663, 1675,
	1013, 1890, 1413, 1669, 1081, 506, 1672, 1673, 1928, 485,
	485, 1437, 1907, 1351, 1679, 521, 1680, 518, 1919, 1683,
	1684, 1685, 1686, 1687, 519, 1453, 1718, 1963, 958, 1940,
	1947, 1948, 504, 165, 498, 1697, 1905, 2016, 1932, 1942,
	1934, 484, 1935, 1897, 1933, 1073, 1474, 1472, 1471, 1625,
	1085, 1926, 1922, 1079, 165, 1457, 1959, 1958, 1835, 1983,
	937, 581, 493, 762, 165, 1960, 1961, 532, 1410, 2142,
	1642, 1918, 1973, 1978, 2020, 580, 61, 38, 165, 1975,
	488, 165, 1741, 1742, 2222, 928, 590, 32, 166, 1546,
	2000, 1981, 1980, 31, 30, 29, 28, 1972, 23, 22,
	21, 20, 19, 25, 18, 17, 16, 98, 48, 45,
	1995, 43, 1994, 105, 104, 46, 485, 42, 864, 166,
	27, 166, 166, 26, 485, 15, 14, 483, 13, 12,
	485, 1997, 1998, 11, 2005, 2006, 2001, 2007, 10, 9,
	2009, 5, 2011, 4, 2008, 931, 965, 964, 974, 975,
	967, 968, 969, 970, 971, 972, 973, 966, 24, 608,
	976, 1002, 754, 2003, 761, 2035, 2, 0, 0, 0,
	0, 0, 0, 0, 2044, 2043, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 165, 2051, 2030, 165, 165,
	165, 484, 484, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 0,
	2084, 484, 484, 484, 0, 0, 0, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 497, 0,
	0, 0, 0, 0, 0, 2045, 0, 2052, 2046, 2054,
	0, 2048, 0, 0, 1864, 1865, 484, 484, 484, 165,
	0, 2088, 2100, 2102, 2103, 0, 0, 0, 0, 0,
	484, 0, 484, 2015, 166, 0, 0, 0, 484, 0,
	0, 2114, 2116, 1913, 2119, 2110, 2112, 1913, 2104, 0,
	2091, 2092, 2093, 2094, 2095, 0, 0, 0, 2098, 2099,
	0, 0, 0, 165, 2089, 0, 485, 0, 0, 2121,
	484, 2122, 0, 484, 2125, 2096, 2132, 0, 0, 0,
	1916, 0, 0, 485, 485, 2128, 485, 2105, 485, 485,
	0, 485, 485, 485, 485, 485, 485, 0, 2118, 0,
	0, 1931, 0, 0, 2120, 0, 485, 0, 0, 0,
	166, 0, 2151, 0, 0, 2163, 2109, 497, 0, 0,
	1913, 2135, 0, 0, 0, 0, 0, 484, 165, 0,
	0, 0, 0, 2173, 2169, 0, 0, 485, 0, 166,
	0, 0, 965, 964, 974, 975, 967, 968, 969, 970,
	971, 972, 973, 966, 166, 484, 976, 2186, 2179, 484,
	0, 2190, 484, 484, 0, 2195, 0, 0, 0, 2192,
	166, 2198, 0, 0, 0, 0, 0, 166, 2212, 2211,
	0, 1726, 0, 0, 0, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 485, 485, 485, 2218, 2225, 0,
	0, 0, 2193, 0, 533, 0, 0, 0, 0, 0,
	2135, 2200, 0, 0, 0, 0, 0, 0, 0, 2238,
	0, 166, 0, 0, 2002, 0, 0, 2242, 2004, 0,
	0, 0, 0, 0, 0, 0, 0, 2253, 0, 2013,
	2014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 2028, 441, 0, 0, 479,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 2037, 2038, 441, 0, 2042, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 594, 594, 0, 0, 0, 608, 608, 608, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 927, 929, 485, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 485, 0, 0, 0, 166, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 166, 166, 0, 460, 0,
	0, 0, 485, 0, 0, 485, 0, 459, 0, 0,
	0, 0, 960, 2101, 963, 0, 485, 0, 457, 0,
	977, 978, 979, 980, 981, 982, 983, 0, 961, 962,
	959, 965, 964, 974, 975, 967, 968, 969, 970, 971,
	972, 973, 966, 0, 0, 976, 0, 0, 0, 0,
	0, 1069, 0, 0, 0, 0, 0, 454, 0, 608,
	0, 0, 0, 0, 0, 1099, 466, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 2138,
	2139, 2140, 2141, 0, 2145, 0, 2146, 2147, 2148, 0,
	2149, 2150, 0, 0, 1861, 485, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 965, 964, 974, 975, 967, 968,
	969, 970, 971, 972, 973, 966, 0, 0, 976, 0,
	2175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 444, 0, 446, 461, 485, 474, 161, 473, 450,
	448, 452, 462, 453, 0, 447, 0, 458, 0, 0,
	449, 463, 464, 478, 477, 465, 0, 471, 456, 475,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 2219, 2220, 145, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 166,
	166, 0, 0, 166, 0, 166, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 143,
	0, 754, 0, 0, 166, 485, 0, 0, 160, 0,
	0, 0, 0, 0, 1198, 0, 0, 0, 1204, 1204,
	0, 1204, 0, 1204, 1204, 0, 1213, 1204, 1204, 1204,
	1204, 1204, 441, 0, 441, 1653, 0, 441, 0, 1198,
	1198, 754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 965, 964, 974, 975, 967,
	968, 969, 970, 971, 972, 973, 966, 146, 0, 976,
	0, 469, 1273, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 1044, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	1175, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 103, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 161, 608,
	608, 608, 166, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 166, 166, 166, 166, 166, 0, 0,
	487, 0, 0, 103, 0, 166, 135, 0, 567, 166,
	441, 124, 166, 166, 145, 0, 166, 166, 166, 0,
	0, 0, 0, 0, 0, 0, 594, 0, 0, 142,
	0, 143, 0, 138, 758, 0, 1179, 1180, 134, 133,
	160, 441, 0, 441, 1088, 965, 964, 974, 975, 967,
	968, 969, 970, 971, 972, 973, 966, 0, 0, 976,
	0, 0, 0, 0, 0, 0, 0, 1387, 142, 608,
	143, 0, 0, 485, 0, 0, 0, 0, 166, 160,
	0, 0, 0, 1198, 0, 166, 0, 0, 129, 1181,
	136, 485, 1178, 0, 130, 131, 0, 485, 0, 146,
	485, 1419, 1420, 0, 0, 0, 0, 485, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1454, 0, 0, 0,
	166, 166, 166, 166, 166, 0, 1069, 0, 146, 608,
	0, 0, 0, 0, 0, 0, 166, 166, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 139, 144, 141, 147, 148, 149,
	150, 152, 153, 154, 155, 138, 0, 0, 485, 0,
	156, 157, 158, 159, 0, 0, 761, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 1199, 0, 0, 0, 485, 485, 0, 0, 0,
	754, 0, 0, 0, 138, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 1199, 166, 0,
	132, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 441, 485, 0, 0, 0, 0, 0, 441,
	0, 0, 0, 0, 0, 0, 166, 1316, 1317, 441,
	441, 441, 441, 441, 441, 441, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 166, 0, 0, 865, 0, 870, 0,
	0, 872, 0, 441, 0, 0, 139, 144, 141, 147,
	148, 149, 150, 152, 153, 154, 155, 0, 0, 0,
	1637, 0, 156, 157, 158, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 34, 0, 139, 144, 141, 147, 148,
	149, 150, 152, 153, 154, 155, 0, 0, 0, 0,
	0, 156, 157, 158, 159, 594, 1294, 0, 0, 0,
	594, 594, 0, 0, 594, 594, 594, 34, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	594, 594, 594, 594, 594, 0, 0, 166, 0, 1435,
	166, 166, 166, 485, 485, 0, 0, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 485, 485, 485, 1294, 441, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 441, 441, 0,
	0, 0, 0, 0, 0, 1075, 0, 1198, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 485,
	485, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 485, 0, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	1198, 0, 1816, 0, 0, 1809, 0, 0, 0, 0,
	608, 0, 1821, 0, 0, 0, 0, 0, 0, 485,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	1104, 485, 0, 0, 485, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	0, 0, 0, 0, 0, 0, 441, 608, 0, 0,
	0, 441, 441, 0, 0, 441, 0, 1628, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 0, 1198, 0, 0,
	1917, 1204, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 0,
	0, 0, 0, 1308, 594, 594, 0, 0, 0, 0,
	0, 0, 0, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 0, 1086, 754, 1435,
	0, 1198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 920, 920, 920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 594, 441, 0, 0, 0, 0, 0,
	0, 34, 0, 0, 1199, 441, 441, 441, 441, 441,
	0, 0, 0, 0, 985, 987, 0, 1740, 0, 0,
	0, 441, 0, 0, 441, 441, 0, 0, 441, 1750,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1000, 0, 0, 0, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 0, 1015, 1017,
	1020, 1020, 1020, 1017, 1020, 1020, 1017, 1020, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 0, 0, 0, 1198, 0,
	1045, 0, 0, 0, 34, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 1461, 0, 0, 1806, 0, 0,
	0, 1465, 0, 1468, 0, 0, 0, 1199, 0, 0,
	0, 1082, 1487, 0, 0, 0, 0, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 441, 441, 441, 441, 0, 2085, 2086,
	2087, 0, 0, 0, 0, 0, 0, 0, 441, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 1809, 1809, 0, 0, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 2115, 0, 2117,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	608, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 1621, 1622, 0, 0, 1626,
	1198, 0, 2191, 0, 0, 0, 1809, 1629, 0, 608,
	608, 0, 0, 0, 1632, 1126, 0, 441, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	1636, 0, 0, 103, 0, 125, 0, 0, 441, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 441, 0, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 920, 920, 0, 142, 0,
	143, 0, 0, 0, 0, 112, 113, 134, 133, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 1114, 0,
	0, 0, 0, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 110, 136,
	117, 109, 1127, 130, 131, 0, 0, 0, 146, 441,
	0, 0, 441, 441, 441, 0, 0, 0, 151, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 121, 119, 114, 115, 116, 120, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 1140, 1143, 1144, 1145, 1146, 1147, 1148,
	0, 1149, 1150, 1151, 1152, 1153, 1128, 1129, 1130, 1131,
	1112, 1113, 1141, 1435, 1115, 0, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1486, 35, 36, 37, 72,
	39, 40, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 138, 0, 76, 0, 0, 0,
	0, 41, 67, 68, 0, 65, 69, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 1839, 1840, 1841, 1842,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1142, 0, 1086, 1849, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 0, 0, 0, 0, 0, 132,
	0, 71, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1902, 0, 0, 0, 0,
	0, 0, 0, 44, 47, 50, 49, 52, 0, 64,
	0, 0, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 75, 74, 0, 0,
	62, 63, 51, 0, 0, 139, 144, 141, 147, 148,
	149, 150, 152, 153, 154, 155, 0, 0, 0, 0,
	0, 156, 157, 158, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 56, 0, 57, 58, 59, 60, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1658, 0, 0, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 0, 0, 0, 0, 1722,
	1723, 0, 0, 1082, 1082, 1082, 1082, 1082, 0, 0,
	0, 0, 0, 2065, 0, 0, 2066, 2067, 2068, 1486,
	0, 0, 1082, 0, 0, 0, 1082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 2127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1914, 0, 34, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2019, 0, 0, 0, 0, 0, 0, 2025, 2026, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1914,
	0, 34, 0, 1914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2167,
	0, 0, 0, 0, 34, 0, 0, 0, 0, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 34,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 2201, 2202, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 922, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 303, 190, 253, 371,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 0,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 1906,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 922, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 303, 190, 253, 371,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 0,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 1751,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 922, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 303, 190, 253, 371,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 0,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 1463,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 922, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 303, 190, 253, 371,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 0,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 71, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 922, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 303, 190, 253, 371,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 0,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 922, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 303, 190, 253, 371,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 0,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 623, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 611, 749, 605, 604,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 0,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 1090, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 623, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 611, 749, 605, 604,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 733,
	720, 0, 0, 669, 736, 640, 658, 745, 660, 663,
	703, 619, 682, 312, 655, 0, 644, 615, 651, 616,
	642, 671, 222, 675, 639, 722, 685, 735, 270, 0,
	621, 645, 326, 705, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 742, 274,
	692, 0, 373, 297, 0, 0, 0, 673, 725, 680,
	716, 668, 704, 629, 691, 737, 656, 700, 738, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 697, 732, 653, 699, 218, 258, 224, 217,
	389, 702, 748, 614, 694, 0, 617, 620, 744, 728,
	648, 649, 0, 0, 0, 0, 0, 0, 0, 672,
	681, 713, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 690, 0, 0, 0, 625, 618, 0,
	0, 0, 0, 670, 0, 0, 0, 628, 0, 647,
	714, 0, 612, 244, 622, 298, 0, 718, 727, 667,
	421, 731, 665, 664, 734, 709, 626, 724, 659, 269,
	624, 266, 171, 186, 0, 657, 308, 347, 353, 723,
	643, 652, 209, 650, 351, 322, 406, 193, 234, 344,
	327, 349, 689, 707, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 602, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 623, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 638, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 719, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 611, 749, 605, 604,
	267, 276, 711, 747, 321, 352, 199, 408, 372, 633,
	637, 631, 632, 683, 684, 634, 739, 740, 741, 715,
	627, 0, 635, 636, 0, 721, 729, 730, 688, 170,
	183, 272, 743, 341, 237, 434, 415, 411, 613, 630,
	215, 641, 0, 0, 654, 661, 662, 674, 676, 677,
	678, 679, 687, 695, 696, 698, 706, 708, 710, 712,
	717, 726, 746, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 686, 693, 282, 231, 248, 257,
	701, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 312,
	0, 0, 1389, 0, 502, 0, 0, 0, 222, 0,
	501, 0, 0, 0, 270, 0, 0, 1390, 326, 0,
	364, 208, 279, 277, 392, 232, 225, 221, 207, 254,
	285, 324, 382, 318, 545, 274, 0, 0, 373, 297,
	0, 0, 0, 0, 0, 536, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 206, 175, 309, 374,
	236, 71, 0, 0, 167, 168, 169, 523, 522, 525,
	526, 527, 528, 0, 0, 197, 524, 204, 529, 530,
	531, 0, 218, 258, 224, 217, 389, 0, 0, 0,
	499, 516, 0, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 592, 0, 0, 0, 560,
	0, 515, 0, 0, 508, 509, 511, 510, 512, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 298, 0, 559, 0, 0, 421, 0, 0, 557,
	0, 0, 0, 0, 0, 269, 0, 266, 171, 186,
	0, 0, 308, 347, 353, 0, 0, 0, 209, 0,
	351, 322, 406, 193, 234, 344, 327, 349, 0, 0,
	350, 275, 394, 339, 404, 422, 423, 216, 302, 412,
	386, 418, 433, 187, 213, 316, 379, 409, 370, 295,
	390, 391, 265, 369, 242, 174, 273, 430, 185, 359,
	201, 178, 381, 402, 198, 362, 0, 0, 0, 180,
	400, 378, 292, 262, 263, 179, 0, 343, 220, 240,
	211, 311, 397, 398, 210, 435, 189, 417, 182, 0,
	416, 304, 393, 401, 293, 284, 181, 399, 291, 283,
	268, 230, 250, 337, 278, 338, 251, 300, 299, 301,
	0, 176, 0, 375, 410, 436, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 271, 315, 336, 334,
	340, 0, 388, 405, 413, 420, 426, 427, 431, 428,
	429, 432, 303, 190, 253, 371, 267, 276, 0, 0,
	321, 352, 199, 408, 372, 547, 558, 553, 554, 551,
	552, 546, 550, 549, 548, 561, 538, 539, 540, 541,
	543, 0, 555, 556, 542, 170, 183, 272, 0, 341,
	237, 434, 415, 411, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	255, 256, 259, 264, 281, 286, 287, 288, 289, 305,
	306, 307, 310, 313, 314, 317, 319, 320, 323, 329,
	330, 331, 332, 333, 335, 342, 346, 354, 355, 356,
	357, 358, 360, 361, 365, 366, 367, 368, 376, 380,
	395, 396, 407, 419, 424, 246, 403, 425, 0, 280,
	0, 0, 282, 231, 248, 257, 0, 414, 377, 188,
	348, 238, 177, 205, 191, 212, 226, 228, 261, 290,
	296, 325, 328, 243, 223, 203, 345, 200, 363, 383,
	384, 385, 387, 294, 219, 312, 0, 0, 0, 0,
	502, 0, 0, 0, 222, 0, 501, 0, 0, 0,
	270, 0, 0, 0, 326, 0, 364, 208, 279, 277,
	392, 232, 225, 221, 207, 254, 285, 324, 382, 318,
	545, 274, 0, 0, 373, 297, 0, 0, 0, 0,
	0, 536, 537, 0, 0, 0, 0, 0, 0, 1502,
	0, 260, 206, 175, 309, 374, 236, 71, 0, 0,
	167, 168, 169, 523, 522, 525, 526, 527, 528, 0,
	0, 197, 524, 204, 529, 530, 531, 1503, 218, 258,
	224, 217, 389, 0, 0, 0, 499, 516, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 0, 0, 0, 0, 560, 0, 515, 0, 0,
	508, 509, 511, 510, 512, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 298, 0, 559,
	0, 0, 421, 0, 0, 557, 0, 0, 0, 0,
	0, 269, 0, 266, 171, 186, 0, 0, 308, 347,
	353, 0, 0, 0, 209, 0, 351, 322, 406, 193,
	234, 344, 327, 349, 0, 0, 350, 275, 394, 339,
	404, 422, 423, 216, 302, 412, 386, 418, 433, 187,
	213, 316, 379, 409, 370, 295, 390, 391, 265, 369,
	242, 174, 273, 430, 185, 359, 201, 178, 381, 402,
	198, 362, 0, 0, 0, 180, 400, 378, 292, 262,
	263, 179, 0, 343, 220, 240, 211, 311, 397, 398,
	210, 435, 189, 417, 182, 0, 416, 304, 393, 401,
	293, 284, 181, 399, 291, 283, 268, 230, 250, 337,
	278, 338, 251, 300, 299, 301, 0, 176, 0, 375,
	410, 436, 194, 195, 196, 0, 229, 233, 239, 241,
	0, 247, 271, 315, 336, 334, 340, 0, 388, 405,
	413, 420, 426, 427, 431, 428, 429, 432, 303, 190,
	253, 371, 267, 276, 0, 0, 321, 352, 199, 408,
	372, 547, 558, 553, 554, 551, 552, 546, 550, 549,
	548, 561, 538, 539, 540, 541, 543, 0, 555, 556,
	542, 170, 183, 272, 0, 341, 237, 434, 415, 411,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 184, 192, 202,
	214, 227, 235, 245, 249, 252, 255, 256, 259, 264,
	281, 286, 287, 288, 289, 305, 306, 307, 310, 313,
	314, 317, 319, 320, 323, 329, 330, 331, 332, 333,
	335, 342, 346, 354, 355, 356, 357, 358, 360, 361,
	365, 366, 367, 368, 376, 380, 395, 396, 407, 419,
	424, 246, 403, 425, 0, 280, 0, 0, 282, 231,
	248, 257, 0, 414, 377, 188, 348, 238, 177, 205,
	191, 212, 226, 228, 261, 290, 296, 325, 328, 243,
	223, 203, 345, 200, 363, 383, 384, 385, 387, 294,
	219, 312, 0, 0, 0, 0, 502, 0, 0, 0,
	222, 0, 501, 0, 0, 0, 270, 0, 0, 0,
	326, 0, 364, 208, 279, 277, 392, 232, 225, 221,
	207, 254, 285, 324, 382, 318, 545, 274, 0, 0,
	373, 297, 0, 0, 0, 0, 0, 536, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 206, 175,
	309, 374, 236, 71, 0, 579, 167, 168, 169, 523,
	522, 525, 526, 527, 528, 0, 0, 197, 524, 204,
	529, 530, 531, 0, 218, 258, 224, 217, 389, 0,
	0, 0, 499, 516, 0, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 0, 0, 0,
	0, 560, 0, 515, 0, 0, 508, 509, 511, 510,
	512, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 298, 0, 559, 0, 0, 421, 0,
	0, 557, 0, 0, 0, 0, 0, 269, 0, 266,
	171, 186, 0, 0, 308, 347, 353, 0, 0, 0,
	209, 0, 351, 322, 406, 193, 234, 344, 327, 349,
	0, 0, 350, 275, 394, 339, 404, 422, 423, 216,
	302, 412, 386, 418, 433, 187, 213, 316, 379, 409,
	370, 295, 390, 391, 265, 369, 242, 174, 273, 430,
	185, 359, 201, 178, 381, 402, 198, 362, 0, 0,
	0, 180, 400, 378, 292, 262, 263, 179, 0, 343,
	220, 240, 211, 311, 397, 398, 210, 435, 189, 417,
	182, 0, 416, 304, 393, 401, 293, 284, 181, 399,
	291, 283, 268, 230, 250, 337, 278, 338, 251, 300,
	299, 301, 0, 176, 0, 375, 410, 436, 194, 195,
	196, 0, 229, 233, 239, 241, 0, 247, 271, 315,
	336, 334, 340, 0, 388, 405, 413, 420, 426, 427,
	431, 428, 429, 432, 303, 190, 253, 371, 267, 276,
	0, 0, 321, 352, 199, 408, 372, 547, 558, 553,
	554, 551, 552, 546, 550, 549, 548, 561, 538, 539,
	540, 541, 543, 0, 555, 556, 542, 170, 183, 272,
	0, 341, 237, 434, 415, 411, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 184, 192, 202, 214, 227, 235, 245,
	249, 252, 255, 256, 259, 264, 281, 286, 287, 288,
	289, 305, 306, 307, 310, 313, 314, 317, 319, 320,
	323, 329, 330, 331, 332, 333, 335, 342, 346, 354,
	355, 356, 357, 358, 360, 361, 365, 366, 367, 368,
	376, 380, 395, 396, 407, 419, 424, 246, 403, 425,
	0, 280, 0, 0, 282, 231, 248, 257, 0, 414,
	377, 188, 348, 238, 177, 205, 191, 212, 226, 228,
	261, 290, 296, 325, 328, 243, 223, 203, 345, 200,
	363, 383, 384, 385, 387, 294, 219, 312, 0, 0,
	0, 0, 502, 0, 0, 0, 222, 0, 501, 0,
	0, 0, 270, 0, 0, 0, 326, 0, 364, 208,
	279, 277, 392, 232, 225, 221, 207, 254, 285, 324,
	382, 318, 545, 274, 0, 0, 373, 297, 0, 0,
	0, 0, 0, 536, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 206, 175, 309, 374, 236, 71,
	0, 0, 167, 168, 169, 523, 522, 525, 526, 527,
	528, 0, 0, 197, 524, 204, 529, 530, 531, 0,
	218, 258, 224, 217, 389, 0, 0, 0, 499, 516,
	0, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 592, 0, 0, 0, 560, 0, 515,
	0, 0, 508, 509, 511, 510, 512, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 298,
	0, 559, 0, 0, 421, 0, 0, 557, 0, 0,
	0, 0, 0, 269, 0, 266, 171, 186, 0, 0,
	308, 347, 353, 0, 0, 0, 209, 0, 351, 322,
	406, 193, 234, 344, 327, 349, 0, 0, 350, 275,
	394, 339, 404, 422, 423, 216, 302, 412, 386, 418,
	433, 187, 213, 316, 379, 409, 370, 295, 390, 391,
	265, 369, 242, 174, 273, 430, 185, 359, 201, 178,
	381, 402, 198, 362, 0, 0, 0, 180, 400, 378,
	292, 262, 263, 179, 0, 343, 220, 240, 211, 311,
	397, 398, 210, 435, 189, 417, 182, 0, 416, 304,
	393, 401, 293, 284, 181, 399, 291, 283, 268, 230,
	250, 337, 278, 338, 251, 300, 299, 301, 0, 176,
	0, 375, 410, 436, 194, 195, 196, 0, 229, 233,
	239, 241, 0, 247, 271, 315, 336, 334, 340, 0,
	388, 405, 413, 420, 426, 427, 431, 428, 429, 432,
	303, 190, 253, 371, 267, 276, 0, 0, 321, 352,
	199, 408, 372, 547, 558, 553, 554, 551, 552, 546,
	550, 549, 548, 561, 538, 539, 540, 541, 543, 0,
	555, 556, 542, 170, 183, 272, 0, 341, 237, 434,
	415, 411, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 255, 256,
	259, 264, 281, 286, 287, 288, 289, 305, 306, 307,
	310, 313, 314, 317, 319, 320, 323, 329, 330, 331,
	332, 333, 335, 342, 346, 354, 355, 356, 357, 358,
	360, 361, 365, 366, 367, 368, 376, 380, 395, 396,
	407, 419, 424, 246, 403, 425, 0, 280, 0, 0,
	282, 231, 248, 257, 0, 414, 377, 188, 348, 238,
	177, 205, 191, 212, 226, 228, 261, 290, 296, 325,
	328, 243, 223, 203, 345, 200, 363, 383, 384, 385,
	387, 294, 219, 312, 0, 0, 0, 0, 502, 0,
	0, 0, 222, 0, 501, 0, 0, 0, 270, 0,
	0, 0, 326, 0, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 545, 274,
	0, 0, 373, 297, 0, 0, 0, 0, 0, 536,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	206, 175, 309, 374, 236, 71, 0, 0, 167, 168,
	169, 523, 1407, 525, 526, 527, 528, 0, 0, 197,
	524, 204, 529, 530, 531, 0, 218, 258, 224, 217,
	389, 0, 0, 0, 499, 516, 0, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 592,
	0, 0, 0, 560, 0, 515, 0, 0, 508, 509,
	511, 510, 512, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 298, 0, 559, 0, 0,
	421, 0, 0, 557, 0, 0, 0, 0, 0, 269,
	0, 266, 171, 186, 0, 0, 308, 347, 353, 0,
	0, 0, 209, 0, 351, 322, 406, 193, 234, 344,
	327, 349, 0, 0, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 0, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 0, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 0, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 303, 190, 253, 371,
	267, 276, 0, 0, 321, 352, 199, 408, 372, 547,
	558, 553, 554, 551, 552, 546, 550, 549, 548, 561,
	538, 539, 540, 541, 543, 0, 555, 556, 542, 170,
	183, 272, 0, 341, 237, 434, 415, 411, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 246,
	403, 425, 0, 280, 0, 0, 282, 231, 248, 257,
	0, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 312,
	0, 0, 0, 0, 502, 0, 0, 0, 222, 0,
	501, 0, 0, 0, 270, 0, 0, 0, 326, 0,
	364, 208, 279, 277, 392, 232, 225, 221, 207, 254,
	285, 324, 382, 318, 545, 274, 0, 0, 373, 297,
	0, 0, 0, 0, 0, 536, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 206, 175, 309, 374,
	236, 71, 0, 0, 167, 168, 169, 523, 1404, 525,
	526, 527, 528, 0, 0, 197, 524, 204, 529, 530,
	531, 0, 218, 258, 224, 217, 389, 0, 0, 0,
	499, 516, 0, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 592, 0, 0, 0, 560,
	0, 515, 0, 0, 508, 509, 511, 510, 512, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 298, 0, 559, 0, 0, 421, 0, 0, 557,
	0, 0, 0, 0, 0, 269, 0, 266, 171, 186,
	0, 0, 308, 347, 353, 0, 0, 0, 209, 0,
	351, 322, 406, 193, 234, 344, 327, 349, 0, 0,
	350, 275, 394, 339, 404, 422, 423, 216, 302, 412,
	386, 418, 433, 187, 213, 316, 379, 409, 370, 295,
	390, 391, 265, 369, 242, 174, 273, 430, 185, 359,
	201, 178, 381, 402, 198, 362, 0, 0, 0, 180,
	400, 378, 292, 262, 263, 179, 0, 343, 220, 240,
	211, 311, 397, 398, 210, 435, 189, 417, 182, 0,
	416, 304, 393, 401, 293, 284, 181, 399, 291, 283,
	268, 230, 250, 337, 278, 338, 251, 300, 299, 301,
	0, 176, 0, 375, 410, 436, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 271, 315, 336, 334,
	340, 0, 388, 405, 413, 420, 426, 427, 431, 428,
	429, 432, 303, 190, 253, 371, 267, 276, 0, 0,
	321, 352, 199, 408, 372, 547, 558, 553, 554, 551,
	552, 546, 550, 549, 548, 561, 538, 539, 540, 541,
	543, 0, 555, 556, 542, 170, 183, 272, 0, 341,
	237, 434, 415, 411, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	255, 256, 259, 264, 281, 286, 287, 288, 289, 305,
	306, 307, 310, 313, 314, 317, 319, 320, 323, 329,
	330, 331, 332, 333, 335, 342, 346, 354, 355, 356,
	357, 358, 360, 361, 365, 366, 367, 368, 376, 380,
	395, 396, 407, 419, 424, 246, 403, 425, 0, 280,
	0, 0, 282, 231, 248, 257, 0, 414, 377, 188,
	348, 238, 177, 205, 191, 212, 226, 228, 261, 290,
	296, 325, 328, 243, 223, 203, 345, 200, 363, 383,
	384, 385, 387, 294, 219, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 502, 0, 0, 0, 222, 0, 501,
	0, 0, 0, 270, 0, 0, 0, 326, 0, 364,
	208, 279, 277, 392, 232, 225, 221, 207, 254, 285,
	324, 382, 318, 545, 274, 0, 0, 373, 297, 0,
	0, 0, 0, 0, 536, 537, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 206, 175, 309, 374, 236,
	71, 0, 0, 167, 168, 169, 523, 522, 525, 526,
	527, 528, 0, 0, 197, 524, 204, 529, 530, 531,
	0, 218, 258, 224, 217, 389, 0, 0, 0, 499,
	516, 0, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 0, 0, 0, 0, 560, 0,
	515, 0, 0, 508, 509, 511, 510, 512, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	298, 0, 559, 0, 0, 421, 0, 0, 557, 0,
	0, 0, 0, 0, 269, 0, 266, 171, 186, 0,
	0, 308, 347, 353, 0, 0, 0, 209, 0, 351,
	322, 406, 193, 234, 344, 327, 349, 0, 0, 350,
	275, 394, 339, 404, 422, 423, 216, 302, 412, 386,
	418, 433, 187, 213, 316, 379, 409, 370, 295, 390,
	391, 265, 369, 242, 174, 273, 430, 185, 359, 201,
	178, 381, 402, 198, 362, 0, 0, 0, 180, 400,
	378, 292, 262, 263, 179, 0, 343, 220, 240, 211,
	311, 397, 398, 210, 435, 189, 417, 182, 0, 416,
	304, 393, 401, 293, 284, 181, 399, 291, 283, 268,
	230, 250, 337, 278, 338, 251, 300, 299, 301, 0,
	176, 0, 375, 410, 436, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 271, 315, 336, 334, 340,
	0, 388, 405, 413, 420, 426, 427, 431, 428, 429,
	432, 303, 190, 253, 371, 267, 276, 0, 0, 321,
	352, 199, 408, 372, 547, 558, 553, 554, 551, 552,
	546, 550, 549, 548, 561, 538, 539, 540, 541, 543,
	0, 555, 556, 542, 170, 183, 272, 0, 341, 237,
	434, 415, 411, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 255,
	256, 259, 264, 281, 286, 287, 288, 289, 305, 306,
	307, 310, 313, 314, 317, 319, 320, 323, 329, 330,
	331, 332, 333, 335, 342, 346, 354, 355, 356, 357,
	358, 360, 361, 365, 366, 367, 368, 376, 380, 395,
	396, 407, 419, 424, 246, 403, 425, 0, 280, 0,
	0, 282, 231, 248, 257, 0, 414, 377, 188, 348,
	238, 177, 205, 191, 212, 226, 228, 261, 290, 296,
	325, 328, 243, 223, 203, 345, 200, 363, 383, 384,
	385, 387, 294, 219, 312, 0, 0, 0, 0, 502,
	0, 0, 0, 222, 0, 501, 0, 0, 0, 270,
	0, 0, 0, 326, 0, 364, 208, 279, 277, 392,
	232, 225, 221, 207, 254, 285, 324, 382, 318, 545,
	274, 0, 0, 373, 297, 0, 0, 0, 0, 0,
	536, 537, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 206, 175, 309, 374, 236, 71, 0, 0, 167,
	168, 169, 523, 522, 525, 526, 527, 528, 0, 0,
	197, 524, 204, 529, 530, 531, 0, 218, 258, 224,
	217, 389, 0, 0, 0, 499, 516, 0, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	0, 0, 0, 0, 560, 0, 515, 0, 0, 508,
	509, 511, 510, 512, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 298, 0, 559, 0,
	0, 421, 0, 0, 557, 0, 0, 0, 0, 0,
	269, 0, 266, 171, 186, 0, 0, 308, 347, 353,
	0, 0, 0, 209, 0, 351, 322, 406, 193, 234,
	344, 327, 349, 0, 0, 350, 275, 394, 339, 404,
	422, 423, 216, 302, 412, 386, 418, 433, 187, 213,
	316, 379, 409, 370, 295, 390, 391, 265, 369, 242,
	174, 273, 430, 185, 359, 201, 178, 381, 402, 198,
	362, 0, 0, 0, 180, 400, 378, 292, 262, 263,
	179, 0, 343, 220, 240, 211, 311, 397, 398, 210,
	435, 189, 417, 182, 0, 416, 304, 393, 401, 293,
	284, 181, 399, 291, 283, 268, 230, 250, 337, 278,
	338, 251, 300, 299, 301, 0, 176, 0, 375, 410,
	436, 194, 195, 196, 0, 229, 233, 239, 241, 0,
	247, 271, 315, 336, 334, 340, 0, 388, 405, 413,
	420, 426, 427, 431, 428, 429, 432, 303, 190, 253,
	371, 267, 276, 0, 0, 321, 352, 199, 408, 372,
	547, 558, 553, 554, 551, 552, 546, 550, 549, 548,
	561, 538, 539, 540, 541, 543, 0, 555, 556, 542,
	170, 183, 272, 0, 341, 237, 434, 415, 411, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 255, 256, 259, 264, 281,
	286, 287, 288, 289, 305, 306, 307, 310, 313, 314,
	317, 319, 320, 323, 329, 330, 331, 332, 333, 335,
	342, 346, 354, 355, 356, 357, 358, 360, 361, 365,
	366, 367, 368, 376, 380, 395, 396, 407, 419, 424,
	246, 403, 425, 0, 280, 0, 0, 282, 231, 248,
	257, 0, 414, 377, 188, 348, 238, 177, 205, 191,
	212, 226, 228, 261, 290, 296, 325, 328, 243, 223,
	203, 345, 200, 363, 383, 384, 385, 387, 294, 219,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 326,
	0, 364, 208, 279, 277, 392, 232, 225, 221, 207,
	254, 285, 324, 382, 318, 545, 274, 0, 0, 373,
	297, 0, 0, 0, 0, 0, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 206, 175, 309,
	374, 236, 71, 0, 0, 167, 168, 169, 523, 522,
	525, 526, 527, 528, 0, 0, 197, 524, 204, 529,
	530, 531, 0, 218, 258, 224, 217, 389, 0, 0,
	0, 0, 516, 0, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 0, 0, 0, 0,
	560, 0, 515, 0, 0, 508, 509, 511, 510, 512,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 298, 0, 559, 0, 0, 421, 0, 0,
	557, 0, 0, 0, 0, 0, 269, 0, 266, 171,
	186, 0, 0, 308, 347, 353, 0, 0, 0, 209,
	0, 351, 322, 406, 193, 234, 344, 327, 349, 2194,
	0, 350, 275, 394, 339, 404, 422, 423, 216, 302,
	412, 386, 418, 433, 187, 213, 316, 379, 409, 370,
	295, 390, 391, 265, 369, 242, 174, 273, 430, 185,
	359, 201, 178, 381, 402, 198, 362, 0, 0, 0,
	180, 400, 378, 292, 262, 263, 179, 0, 343, 220,
	240, 211, 311, 397, 398, 210, 435, 189, 417, 182,
	0, 416, 304, 393, 401, 293, 284, 181, 399, 291,
	283, 268, 230, 250, 337, 278, 338, 251, 300, 299,
	301, 0, 176, 0, 375, 410, 436, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 271, 315, 336,
	334, 340, 0, 388, 405, 413, 420, 426, 427, 431,
	428, 429, 432, 303, 190, 253, 371, 267, 276, 0,
	0, 321, 352, 199, 408, 372, 547, 558, 553, 554,
	551, 552, 546, 550, 549, 548, 561, 538, 539, 540,
	541, 543, 0, 555, 556, 542, 170, 183, 272, 0,
	341, 237, 434, 415, 411, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 255, 256, 259, 264, 281, 286, 287, 288, 289,
	305, 306, 307, 310, 313, 314, 317, 319, 320, 323,
	329, 330, 331, 332, 333, 335, 342, 346, 354, 355,
	356, 357, 358, 360, 361, 365, 366, 367, 368, 376,
	380, 395, 396, 407, 419, 424, 246, 403, 425, 0,
	280, 0, 0, 282, 231, 248, 257, 0, 414, 377,
	188, 348, 238, 177, 205, 191, 212, 226, 228, 261,
	290, 296, 325, 328, 243, 223, 203, 345, 200, 363,
	383, 384, 385, 387, 294, 219, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 326, 0, 364, 208, 279,
	277, 392, 232, 225, 221, 207, 254, 285, 324, 382,
	318, 545, 274, 0, 0, 373, 297, 0, 0, 0,
	0, 0, 536, 537, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 206, 175, 309, 374, 236, 71, 0,
	579, 167, 168, 169, 523, 522, 525, 526, 527, 528,
	0, 0, 197, 524, 204, 529, 530, 531, 0, 218,
	258, 224, 217, 389, 0, 0, 0, 0, 516, 0,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 0, 0, 0, 0, 560, 0, 515, 0,
	0, 508, 509, 511, 510, 512, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 298, 0,
	559, 0, 0, 421, 0, 0, 557, 0, 0, 0,
	0, 0, 269, 0, 266, 171, 186, 0, 0, 308,
	347, 353, 0, 0, 0, 209, 0, 351, 322, 406,
	193, 234, 344, 327, 349, 0, 0, 350, 275, 394,
	339, 404, 422, 423, 216, 302, 412, 386, 418, 433,
	187, 213, 316, 379, 409, 370, 295, 390, 391, 265,
	369, 242, 174, 273, 430, 185, 359, 201, 178, 381,
	402, 198, 362, 0, 0, 0, 180, 400, 378, 292,
	262, 263, 179, 0, 343, 220, 240, 211, 311, 397,
	398, 210, 435, 189, 417, 182, 0, 416, 304, 393,
	401, 293, 284, 181, 399, 291, 283, 268, 230, 250,
	337, 278, 338, 251, 300, 299, 301, 0, 176, 0,
	375, 410, 436, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 271, 315, 336, 334, 340, 0, 388,
	405, 413, 420, 426, 427, 431, 428, 429, 432, 303,
	190, 253, 371, 267, 276, 0, 0, 321, 352, 199,
	408, 372, 547, 558, 553, 554, 551, 552, 546, 550,
	549, 548, 561, 538, 539, 540, 541, 543, 0, 555,
	556, 542, 170, 183, 272, 0, 341, 237, 434, 415,
	411, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 255, 256, 259,
	264, 281, 286, 287, 288, 289, 305, 306, 307, 310,
	313, 314, 317, 319, 320, 323, 329, 330, 331, 332,
	333, 335, 342, 346, 354, 355, 356, 357, 358, 360,
	361, 365, 366, 367, 368, 376, 380, 395, 396, 407,
	419, 424, 246, 403, 425, 0, 280, 0, 0, 282,
	231, 248, 257, 0, 414, 377, 188, 348, 238, 177,
	205, 191, 212, 226, 228, 261, 290, 296, 325, 328,
	243, 223, 203, 345, 200, 363, 383, 384, 385, 387,
	294, 219, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 326, 0, 364, 208, 279, 277, 392, 232, 225,
	221, 207, 254, 285, 324, 382, 318, 545, 274, 0,
	0, 373, 297, 0, 0, 0, 0, 0, 536, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 206,
	175, 309, 374, 236, 71, 0, 0, 167, 168, 169,
	523, 522, 525, 526, 527, 528, 0, 0, 197, 524,
	204, 529, 530, 531, 0, 218, 258, 224, 217, 389,
	0, 0, 0, 0, 516, 0, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 0, 0,
	0, 0, 560, 0, 515, 0, 0, 508, 509, 511,
	510, 512, 517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 298, 0, 559, 0, 0, 421,
	0, 0, 557, 0, 0, 0, 0, 0, 269, 0,
	266, 171, 186, 0, 0, 308, 347, 353, 0, 0,
	0, 209, 0, 351, 322, 406, 193, 234, 344, 327,
	349, 0, 0, 350, 275, 394, 339, 404, 422, 423,
	216, 302, 412, 386, 418, 433, 187, 213, 316, 379,
	409, 370, 295, 390, 391, 265, 369, 242, 174, 273,
	430, 185, 359, 201, 178, 381, 402, 198, 362, 0,
	0, 0, 180, 400, 378, 292, 262, 263, 179, 0,
	343, 220, 240, 211, 311, 397, 398, 210, 435, 189,
	417, 182, 0, 416, 304, 393, 401, 293, 284, 181,
	399, 291, 283, 268, 230, 250, 337, 278, 338, 251,
	300, 299, 301, 0, 176, 0, 375, 410, 436, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 271,
	315, 336, 334, 340, 0, 388, 405, 413, 420, 426,
	427, 431, 428, 429, 432, 303, 190, 253, 371, 267,
	276, 0, 0, 321, 352, 199, 408, 372, 547, 558,
	553, 554, 551, 552, 546, 550, 549, 548, 561, 538,
	539, 540, 541, 543, 0, 555, 556, 542, 170, 183,
	272, 0, 341, 237, 434, 415, 411, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 255, 256, 259, 264, 281, 286, 287,
	288, 289, 305, 306, 307, 310, 313, 314, 317, 319,
	320, 323, 329, 330, 331, 332, 333, 335, 342, 346,
	354, 355, 356, 357, 358, 360, 361, 365, 366, 367,
	368, 376, 380, 395, 396, 407, 419, 424, 246, 403,
	425, 0, 280, 0, 0, 282, 231, 248, 257, 0,
	414, 377, 188, 348, 238, 177, 205, 191, 212, 226,
	228, 261, 290, 296, 325, 328, 243, 223, 203, 345,
	200, 363, 383, 384, 385, 387, 294, 219, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 326, 0, 364,
	208, 279, 277, 392, 232, 225, 221, 207, 254, 285,
	324, 382, 318, 0, 274, 0, 0, 373, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 206, 175, 309, 374, 236,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 204, 0, 0, 0,
	0, 218, 258, 224, 217, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 965, 964,
	974, 975, 967, 968, 969, 970, 971, 972, 973, 966,
	0, 0, 976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	298, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 266, 171, 186, 0,
	0, 308, 347, 353, 0, 0, 0, 209, 0, 351,
	322, 406, 193, 234, 344, 327, 349, 0, 0, 350,
	275, 394, 339, 404, 422, 423, 216, 302, 412, 386,
	418, 433, 187, 213, 316, 379, 409, 370, 295, 390,
	391, 265, 369, 242, 174, 273, 430, 185, 359, 201,
	178, 381, 402, 198, 362, 0, 0, 0, 180, 400,
	378, 292, 262, 263, 179, 0, 343, 220, 240, 211,
	311, 397, 398, 210, 435, 189, 417, 182, 0, 416,
	304, 393, 401, 293, 284, 181, 399, 291, 283, 268,
	230, 250, 337, 278, 338, 251, 300, 299, 301, 0,
	176, 0, 375, 410, 436, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 271, 315, 336, 334, 340,
	0, 388, 405, 413, 420, 426, 427, 431, 428, 429,
	432, 303, 190, 253, 371, 267, 276, 0, 0, 321,
	352, 199, 408, 372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 183, 272, 0, 341, 237,
	434, 415, 411, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 255,
	256, 259, 264, 281, 286, 287, 288, 289, 305, 306,
	307, 310, 313, 314, 317, 319, 320, 323, 329, 330,
	331, 332, 333, 335, 342, 346, 354, 355, 356, 357,
	358, 360, 361, 365, 366, 367, 368, 376, 380, 395,
	396, 407, 419, 424, 246, 403, 425, 0, 280, 0,
	0, 282, 231, 248, 257, 0, 414, 377, 188, 348,
	238, 177, 205, 191, 212, 226, 228, 261, 290, 296,
	325, 328, 243, 223, 203, 345, 200, 363, 383, 384,
	385, 387, 294, 219, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 795, 0, 0, 0, 0, 270,
	0, 0, 0, 326, 0, 364, 208, 279, 277, 392,
	232, 225, 221, 207, 254, 285, 324, 382, 318, 0,
	274, 0, 0, 373, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 206, 175, 309, 374, 236, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 204, 0, 0, 0, 0, 218, 258, 224,
	217, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 298, 0, 0, 0,
	794, 421, 0, 0, 0, 0, 0, 0, 791, 792,
	269, 757, 266, 171, 186, 785, 789, 308, 347, 353,
	0, 0, 0, 209, 0, 351, 322, 406, 193, 234,
	344, 327, 349, 0, 0, 350, 275, 394, 339, 404,
	422, 423, 216, 302, 412, 386, 418, 433, 187, 213,
	316, 379, 409, 370, 295, 390, 391, 265, 369, 242,
	174, 273, 430, 185, 359, 201, 178, 381, 402, 198,
	362, 0, 0, 0, 180, 400, 378, 292, 262, 263,
	179, 0, 343, 220, 240, 211, 311, 397, 398, 210,
	435, 189, 417, 182, 0, 416, 304, 393, 401, 293,
	284, 181, 399, 291, 283, 268, 230, 250, 337, 278,
	338, 251, 300, 299, 301, 0, 176, 0, 375, 410,
	436, 194, 195, 196, 0, 229, 233, 239, 241, 0,
	247, 271, 315, 336, 334, 340, 0, 388, 405, 413,
	420, 426, 427, 431, 428, 429, 432, 303, 190, 253,
	371, 267, 276, 0, 0, 321, 352, 199, 408, 372,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 183, 272, 0, 341, 237, 434, 415, 411, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 255, 256, 259, 264, 281,
	286, 287, 288, 289, 305, 306, 307, 310, 313, 314,
	317, 319, 320, 323, 329, 330, 331, 332, 333, 335,
	342, 346, 354, 355, 356, 357, 358, 360, 361, 365,
	366, 367, 368, 376, 380, 395, 396, 407, 419, 424,
	246, 403, 425, 0, 280, 0, 0, 282, 231, 248,
	257, 0, 414, 377, 188, 348, 238, 177, 205, 191,
	212, 226, 228, 261, 290, 296, 325, 328, 243, 223,
	203, 345, 200, 363, 383, 384, 385, 387, 294, 219,
	312, 0, 0, 0, 1068, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 326,
	0, 364, 208, 279, 277, 392, 232, 225, 221, 207,
	254, 285, 324, 382, 318, 0, 274, 0, 0, 373,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 206, 175, 309,
	374, 236, 0, 0, 0, 167, 168, 169, 0, 1070,
	0, 0, 0, 0, 0, 0, 197, 0, 204, 0,
	0, 0, 0, 218, 258, 224, 217, 389, 954, 955,
	953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 298, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 266, 171,
	186, 0, 0, 308, 347, 353, 0, 0, 0, 209,
	0, 351, 322, 406, 193, 234, 344, 327, 349, 0,
	0, 350, 275, 394, 339, 404, 422, 423, 216, 302,
	412, 386, 418, 433, 187, 213, 316, 379, 409, 370,
	295, 390, 391, 265, 369, 242, 174, 273, 430, 185,
	359, 201, 178, 381, 402, 198, 362, 0, 0, 0,
	180, 400, 378, 292, 262, 263, 179, 0, 343, 220,
	240, 211, 311, 397, 398, 210, 435, 189, 417, 182,
	0, 416, 304, 393, 401, 293, 284, 181, 399, 291,
	283, 268, 230, 250, 337, 278, 338, 251, 300, 299,
	301, 0, 176, 0, 375, 410, 436, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 271, 315, 336,
	334, 340, 0, 388, 405, 413, 420, 426, 427, 431,
	428, 429, 432, 303, 190, 253, 371, 267, 276, 0,
	0, 321, 352, 199, 408, 372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 183, 272, 0,
	341, 237, 434, 415, 411, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 255, 256, 259, 264, 281, 286, 287, 288, 289,
	305, 306, 307, 310, 313, 314, 317, 319, 320, 323,
	329, 330, 331, 332, 333, 335, 342, 346, 354, 355,
	356, 357, 358, 360, 361, 365, 366, 367, 368, 376,
	380, 395, 396, 407, 419, 424, 246, 403, 425, 0,
	280, 0, 0, 282, 231, 248, 257, 0, 414, 377,
	188, 348, 238, 177, 205, 191, 212, 226, 228, 261,
	290, 296, 325, 328, 243, 223, 203, 345, 200, 363,
	383, 384, 385, 387, 294, 219, 35, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 326, 0,
	364, 208, 279, 277, 392, 232, 225, 221, 207, 254,
	285, 324, 382, 318, 0, 274, 0, 0, 373, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 206, 175, 309, 374,
	236, 71, 0, 579, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 204, 0, 0,
	0, 0, 218, 258, 224, 217, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 298, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 266, 171, 186,
	0, 0, 308, 347, 353, 0, 0, 0, 209, 0,
	351, 322, 406, 193, 234, 344, 327, 349, 0, 0,
	350, 275, 394, 339, 404, 422, 423, 216, 302, 412,
	386, 418, 433, 187, 213, 316, 379, 409, 370, 295,
	390, 391, 265, 369, 242, 174, 273, 430, 185, 359,
	201, 178, 381, 402, 198, 362, 0, 0, 0, 180,
	400, 378, 292, 262, 263, 179, 0, 343, 220, 240,
	211, 311, 397, 398, 210, 435, 189, 417, 182, 0,
	416, 304, 393, 401, 293, 284, 181, 399, 291, 283,
	268, 230, 250, 337, 278, 338, 251, 300, 299, 301,
	0, 176, 0, 375, 410, 436, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 271, 315, 336, 334,
	340, 0, 388, 405, 413, 420, 426, 427, 431, 428,
	429, 432, 303, 190, 253, 371, 267, 276, 0, 0,
	321, 352, 199, 408, 372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 183, 272, 0, 341,
	237, 434, 415, 411, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	255, 256, 259, 264, 281, 286, 287, 288, 289, 305,
	306, 307, 310, 313, 314, 317, 319, 320, 323, 329,
	330, 331, 332, 333, 335, 342, 346, 354, 355, 356,
	357, 358, 360, 361, 365, 366, 367, 368, 376, 380,
	395, 396, 407, 419, 424, 246, 403, 425, 0, 280,
	0, 0, 282, 231, 248, 257, 0, 414, 377, 188,
	348, 238, 177, 205, 191, 212, 226, 228, 261, 290,
	296, 325, 328, 243, 223, 203, 345, 200, 363, 383,
	384, 385, 387, 294, 219, 312, 0, 0, 0, 1434,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 326, 0, 364, 208, 279, 277,
	392, 232, 225, 221, 207, 254, 285, 324, 382, 318,
	0, 274, 0, 0, 373, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 206, 175, 309, 374, 236, 0, 0, 0,
	167, 168, 169, 0, 1436, 0, 0, 0, 0, 0,
	0, 197, 0, 204, 0, 0, 0, 0, 218, 258,
	224, 217, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 298, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 266, 171, 186, 0, 0, 308, 347,
	353, 0, 0, 0, 209, 0, 351, 322, 406, 193,
	234, 344, 327, 349, 0, 1432, 350, 275, 394, 339,
	404, 422, 423, 216, 302, 412, 386, 418, 433, 187,
	213, 316, 379, 409, 370, 295, 390, 391, 265, 369,
	242, 174, 273, 430, 185, 359, 201, 178, 381, 402,
	198, 362, 0, 0, 0, 180, 400, 378, 292, 262,
	263, 179, 0, 343, 220, 240, 211, 311, 397, 398,
	210, 435, 189, 417, 182, 0, 416, 304, 393, 401,
	293, 284, 181, 399, 291, 283, 268, 230, 250, 337,
	278, 338, 251, 300, 299, 301, 0, 176, 0, 375,
	410, 436, 194, 195, 196, 0, 229, 233, 239, 241,
	0, 247, 271, 315, 336, 334, 340, 0, 388, 405,
	413, 420, 426, 427, 431, 428, 429, 432, 303, 190,
	253, 371, 267, 276, 0, 0, 321, 352, 199, 408,
	372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 183, 272, 0, 341, 237, 434, 415, 411,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 184, 192, 202,
	214, 227, 235, 245, 249, 252, 255, 256, 259, 264,
	281, 286, 287, 288, 289, 305, 306, 307, 310, 313,
	314, 317, 319, 320, 323, 329, 330, 331, 332, 333,
	335, 342, 346, 354, 355, 356, 357, 358, 360, 361,
	365, 366, 367, 368, 376, 380, 395, 396, 407, 419,
	424, 246, 403, 425, 0, 280, 0, 0, 282, 231,
	248, 257, 0, 414, 377, 188, 348, 238, 177, 205,
	191, 212, 226, 228, 261, 290, 296, 325, 328, 243,
	223, 203, 345, 200, 363, 383, 384, 385, 387, 294,
	219, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	326, 0, 364, 208, 279, 277, 392, 232, 225, 221,
	207, 254, 285, 324, 382, 318, 0, 274, 0, 0,
	373, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 206, 175,
	309, 374, 236, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 204,
	0, 0, 0, 0, 218, 258, 224, 217, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 298, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 757, 266,
	171, 186, 755, 0, 308, 347, 353, 0, 0, 0,
	209, 0, 351, 322, 406, 193, 234, 344, 327, 349,
	0, 0, 350, 275, 394, 339, 404, 422, 423, 216,
	302, 412, 386, 418, 433, 187, 213, 316, 379, 409,
	370, 295, 390, 391, 265, 369, 242, 174, 273, 430,
	185, 359, 201, 178, 381, 402, 198, 362, 0, 0,
	0, 180, 400, 378, 292, 262, 263, 179, 0, 343,
	220, 240, 211, 311, 397, 398, 210, 435, 189, 417,
	182, 0, 416, 304, 393, 401, 293, 284, 181, 399,
	291, 283, 268, 230, 250, 337, 278, 338, 251, 300,
	299, 301, 0, 176, 0, 375, 410, 436, 194, 195,
	196, 0, 229, 233, 239, 241, 0, 247, 271, 315,
	336, 334, 340, 0, 388, 405, 413, 420, 426, 427,
	431, 428, 429, 432, 303, 190, 253, 371, 267, 276,
	0, 0, 321, 352, 199, 408, 372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 183, 272,
	0, 341, 237, 434, 415, 411, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 184, 192, 202, 214, 227, 235, 245,
	249, 252, 255, 256, 259, 264, 281, 286, 287, 288,
	289, 305, 306, 307, 310, 313, 314, 317, 319, 320,
	323, 329, 330, 331, 332, 333, 335, 342, 346, 354,
	355, 356, 357, 358, 360, 361, 365, 366, 367, 368,
	376, 380, 395, 396, 407, 419, 424, 246, 403, 425,
	0, 280, 0, 0, 282, 231, 248, 257, 0, 414,
	377, 188, 348, 238, 177, 205, 191, 212, 226, 228,
	261, 290, 296, 325, 328, 243, 223, 203, 345, 200,
	363, 383, 384, 385, 387, 294, 219, 312, 0, 0,
	0, 1434, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 326, 0, 364, 208,
	279, 277, 392, 232, 225, 221, 207, 254, 285, 324,
	382, 318, 0, 274, 0, 0, 373, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 206, 175, 309, 374, 236, 0,
	0, 0, 167, 168, 169, 0, 1436, 0, 0, 0,
	0, 0, 0, 197, 0, 204, 0, 0, 0, 0,
	218, 258, 224, 217, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 298,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 266, 171, 186, 0, 0,
	308, 347, 353, 0, 0, 0, 209, 0, 351, 322,
	406, 193, 234, 344, 327, 349, 0, 0, 350, 275,
	394, 339, 404, 422, 423, 216, 302, 412, 386, 418,
	433, 187, 213, 316, 379, 409, 370, 295, 390, 391,
	265, 369, 242, 174, 273, 430, 185, 359, 201, 178,
	381, 402, 198, 362, 0, 0, 0, 180, 400, 378,
	292, 262, 263, 179, 0, 343, 220, 240, 211, 311,
	397, 398, 210, 435, 189, 417, 182, 0, 416, 304,
	393, 401, 293, 284, 181, 399, 291, 283, 268, 230,
	250, 337, 278, 338, 251, 300, 299, 301, 0, 176,
	0, 375, 410, 436, 194, 195, 196, 0, 229, 233,
	239, 241, 0, 247, 271, 315, 336, 334, 340, 0,
	388, 405, 413, 420, 426, 427, 431, 428, 429, 432,
	303, 190, 253, 371, 267, 276, 0, 0, 321, 352,
	199, 408, 372, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 183, 272, 0, 341, 237, 434,
	415, 411, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 255, 256,
	259, 264, 281, 286, 287, 288, 289, 305, 306, 307,
	310, 313, 314, 317, 319, 320, 323, 329, 330, 331,
	332, 333, 335, 342, 346, 354, 355, 356, 357, 358,
	360, 361, 365, 366, 367, 368, 376, 380, 395, 396,
	407, 419, 424, 246, 403, 425, 0, 280, 0, 0,
	282, 231, 248, 257, 0, 414, 377, 188, 348, 238,
	177, 205, 191, 212, 226, 228, 261, 290, 296, 325,
	328, 243, 223, 203, 345, 200, 363, 383, 384, 385,
	387, 294, 219, 35, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 326, 0, 364, 208, 279,
	277, 392, 232, 225, 221, 207, 254, 285, 324, 382,
	318, 0, 274, 0, 0, 373, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 206, 175, 309, 374, 236, 71, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 204, 0, 0, 0, 0, 218,
	258, 224, 217, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 298, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 266, 171, 186, 0, 0, 308,
	347, 353, 0, 0, 0, 209, 0, 351, 322, 406,
	193, 234, 344, 327, 349, 0, 0, 350, 275, 394,
	339, 404, 422, 423, 216, 302, 412, 386, 418, 433,
	187, 213, 316, 379, 409, 370, 295, 390, 391, 265,
	369, 242, 174, 273, 430, 185, 359, 201, 178, 381,
	402, 198, 362, 0, 0, 0, 180, 400, 378, 292,
	262, 263, 179, 0, 343, 220, 240, 211, 311, 397,
	398, 210, 435, 189, 417, 182, 0, 416, 304, 393,
	401, 293, 284, 181, 399, 291, 283, 268, 230, 250,
	337, 278, 338, 251, 300, 299, 301, 0, 176, 0,
	375, 410, 436, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 271, 315, 336, 334, 340, 0, 388,
	405, 413, 420, 426, 427, 431, 428, 429, 432, 303,
	190, 253, 371, 267, 276, 0, 0, 321, 352, 199,
	408, 372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 183, 272, 0, 341, 237, 434, 415,
	411, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 255, 256, 259,
	264, 281, 286, 287, 288, 289, 305, 306, 307, 310,
	313, 314, 317, 319, 320, 323, 329, 330, 331, 332,
	333, 335, 342, 346, 354, 355, 356, 357, 358, 360,
	361, 365, 366, 367, 368, 376, 380, 395, 396, 407,
	419, 424, 246, 403, 425, 0, 280, 0, 0, 282,
	231, 248, 257, 0, 414, 377, 188, 348, 238, 177,
	205, 191, 212, 226, 228, 261, 290, 296, 325, 328,
	243, 223, 203, 345, 200, 363, 383, 384, 385, 387,
	294, 219, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 326, 0, 364, 208, 279, 277, 392, 232, 225,
	221, 207, 254, 285, 324, 382, 318, 0, 274, 0,
	0, 373, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 206,
	175, 309, 374, 236, 0, 0, 0, 167, 168, 169,
	0, 0, 1455, 0, 0, 1456, 0, 0, 197, 0,
	204, 0, 0, 0, 0, 218, 258, 224, 217, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 298, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	266, 171, 186, 0, 0, 308, 347, 353, 0, 0,
	0, 209, 0, 351, 322, 406, 193, 234, 344, 327,
	349, 0, 0, 350, 275, 394, 339, 404, 422, 423,
	216, 302, 412, 386, 418, 433, 187, 213, 316, 379,
	409, 370, 295, 390, 391, 265, 369, 242, 174, 273,
	430, 185, 359, 201, 178, 381, 402, 198, 362, 0,
	0, 0, 180, 400, 378, 292, 262, 263, 179, 0,
	343, 220, 240, 211, 311, 397, 398, 210, 435, 189,
	417, 182, 0, 416, 304, 393, 401, 293, 284, 181,
	399, 291, 283, 268, 230, 250, 337, 278, 338, 251,
	300, 299, 301, 0, 176, 0, 375, 410, 436, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 271,
	315, 336, 334, 340, 0, 388, 405, 413, 420, 426,
	427, 431, 428, 429, 432, 303, 190, 253, 371, 267,
	276, 0, 0, 321, 352, 199, 408, 372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 183,
	272, 0, 341, 237, 434, 415, 411, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 255, 256, 259, 264, 281, 286, 287,
	288, 289, 305, 306, 307, 310, 313, 314, 317, 319,
	320, 323, 329, 330, 331, 332, 333, 335, 342, 346,
	354, 355, 356, 357, 358, 360, 361, 365, 366, 367,
	368, 376, 380, 395, 396, 407, 419, 424, 246, 403,
	425, 0, 280, 0, 0, 282, 231, 248, 257, 0,
	414, 377, 188, 348, 238, 177, 205, 191, 212, 226,
	228, 261, 290, 296, 325, 328, 243, 223, 203, 345,
	200, 363, 383, 384, 385, 387, 294, 219, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 1101,
	0, 0, 0, 270, 0, 0, 0, 326, 0, 364,
	208, 279, 277, 392, 232, 225, 221, 207, 254, 285,
	324, 382, 318, 0, 274, 0, 0, 373, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 206, 175, 309, 374, 236,
	0, 0, 0, 167, 168, 169, 0, 1100, 0, 0,
	0, 0, 0, 0, 197, 0, 204, 0, 0, 0,
	0, 218, 258, 224, 217, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	298, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 266, 171, 186, 0,
	0, 308, 347, 353, 0, 0, 0, 209, 0, 351,
	322, 406, 193, 234, 344, 327, 349, 0, 0, 350,
	275, 394, 339, 404, 422, 423, 216, 302, 412, 386,
	418, 433, 187, 213, 316, 379, 409, 370, 295, 390,
	391, 265, 369, 242, 174, 273, 430, 185, 359, 201,
	178, 381, 402, 198, 362, 0, 0, 0, 180, 400,
	378, 292, 262, 263, 179, 0, 343, 220, 240, 211,
	311, 397, 398, 210, 435, 189, 417, 182, 0, 416,
	304, 393, 401, 293, 284, 181, 399, 291, 283, 268,
	230, 250, 337, 278, 338, 251, 300, 299, 301, 0,
	176, 0, 375, 410, 436, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 271, 315, 336, 334, 340,
	0, 388, 405, 413, 420, 426, 427, 431, 428, 429,
	432, 303, 190, 253, 371, 267, 276, 0, 0, 321,
	352, 199, 408, 372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 183, 272, 0, 341, 237,
	434, 415, 411, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 255,
	256, 259, 264, 281, 286, 287, 288, 289, 305, 306,
	307, 310, 313, 314, 317, 319, 320, 323, 329, 330,
	331, 332, 333, 335, 342, 346, 354, 355, 356, 357,
	358, 360, 361, 365, 366, 367, 368, 376, 380, 395,
	396, 407, 419, 424, 246, 403, 425, 0, 280, 0,
	0, 282, 231, 248, 257, 0, 414, 377, 188, 348,
	238, 177, 205, 191, 212, 226, 228, 261, 290, 296,
	325, 328, 243, 223, 203, 345, 200, 363, 383, 384,
	385, 387, 294, 219, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 326, 0, 364, 208, 279, 277, 392,
	232, 225, 221, 207, 254, 285, 324, 382, 318, 0,
	274, 0, 0, 373, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 206, 175, 309, 374, 236, 0, 0, 579, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 204, 0, 0, 0, 0, 218, 258, 224,
	217, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 298, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 266, 171, 186, 0, 0, 308, 347, 353,
	0, 0, 0, 209, 0, 351, 322, 406, 193, 234,
	344, 327, 349, 0, 0, 350, 275, 394, 339, 404,
	422, 423, 216, 302, 412, 386, 418, 433, 187, 213,
	316, 379, 409, 370, 295, 390, 391, 265, 369, 242,
	174, 273, 430, 185, 359, 201, 178, 381, 402, 198,
	362, 0, 0, 0, 180, 400, 378, 292, 262, 263,
	179, 0, 343, 220, 240, 211, 311, 397, 398, 210,
	435, 189, 417, 182, 0, 416, 304, 393, 401, 293,
	284, 181, 399, 291, 283, 268, 230, 250, 337, 278,
	338, 251, 300, 299, 301, 0, 176, 0, 375, 410,
	436, 194, 195, 196, 0, 229, 233, 239, 241, 0,
	247, 271, 315, 336, 334, 340, 0, 388, 405, 413,
	420, 426, 427, 431, 428, 429, 432, 303, 190, 253,
	371, 267, 276, 0, 0, 321, 352, 199, 408, 372,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 183, 272, 0, 341, 237, 434, 415, 411, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 255, 256, 259, 264, 281,
	286, 287, 288, 289, 305, 306, 307, 310, 313, 314,
	317, 319, 320, 323, 329, 330, 331, 332, 333, 335,
	342, 346, 354, 355, 356, 357, 358, 360, 361, 365,
	366, 367, 368, 376, 380, 395, 396, 407, 419, 424,
	246, 403, 425, 0, 280, 0, 0, 282, 231, 248,
	257, 0, 414, 377, 188, 348, 238, 177, 205, 191,
	212, 226, 228, 261, 290, 296, 325, 328, 243, 223,
	203, 345, 200, 363, 383, 384, 385, 387, 294, 219,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 326,
	0, 364, 208, 279, 277, 392, 232, 225, 221, 207,
	254, 285, 324, 382, 318, 0, 274, 0, 0, 373,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 206, 175, 309,
	374, 236, 71, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 204, 0,
	0, 0, 0, 218, 258, 224, 217, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 298, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 266, 171,
	186, 0, 0, 308, 347, 353, 0, 0, 0, 209,
	0, 351, 322, 406, 193, 234, 344, 327, 349, 0,
	0, 350, 275, 394, 339, 404, 422, 423, 216, 302,
	412, 386, 418, 433, 187, 213, 316, 379, 409, 370,
	295, 390, 391, 265, 369, 242, 174, 273, 430, 185,
	359, 201, 178, 381, 402, 198, 362, 0, 0, 0,
	180, 400, 378, 292, 262, 263, 179, 0, 343, 220,
	240, 211, 311, 397, 398, 210, 435, 189, 417, 182,
	0, 416, 304, 393, 401, 293, 284, 181, 399, 291,
	283, 268, 230, 250, 337, 278, 338, 251, 300, 299,
	301, 0, 176, 0, 375, 410, 436, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 271, 315, 336,
	334, 340, 0, 388, 405, 413, 420, 426, 427, 431,
	428, 429, 432, 303, 190, 253, 371, 267, 276, 0,
	0, 321, 352, 199, 408, 372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 183, 272, 0,
	341, 237, 434, 415, 411, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 255, 256, 259, 264, 281, 286, 287, 288, 289,
	305, 306, 307, 310, 313, 314, 317, 319, 320, 323,
	329, 330, 331, 332, 333, 335, 342, 346, 354, 355,
	356, 357, 358, 360, 361, 365, 366, 367, 368, 376,
	380, 395, 396, 407, 419, 424, 246, 403, 425, 0,
	280, 0, 0, 282, 231, 248, 257, 0, 414, 377,
	188, 348, 238, 177, 205, 191, 212, 226, 228, 261,
	290, 296, 325, 328, 243, 223, 203, 345, 200, 363,
	383, 384, 385, 387, 294, 219, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 326, 0, 364, 208, 279,
	277, 392, 232, 225, 221, 207, 254, 285, 324, 382,
	318, 0, 274, 0, 0, 373, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 206, 175, 309, 374, 236, 0, 0,
	0, 167, 168, 169, 0, 1436, 0, 0, 0, 0,
	0, 0, 197, 0, 204, 0, 0, 0, 0, 218,
	258, 224, 217, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 298, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 266, 171, 186, 0, 0, 308,
	347, 353, 0, 0, 0, 209, 0, 351, 322, 406,
	193, 234, 344, 327, 349, 0, 0, 350, 275, 394,
	339, 404, 422, 423, 216, 302, 412, 386, 418, 433,
	187, 213, 316, 379, 409, 370, 295, 390, 391, 265,
	369, 242, 174, 273, 430, 185, 359, 201, 178, 381,
	402, 198, 362, 0, 0, 0, 180, 400, 378, 292,
	262, 263, 179, 0, 343, 220, 240, 211, 311, 397,
	398, 210, 435, 189, 417, 182, 0, 416, 304, 393,
	401, 293, 284, 181, 399, 291, 283, 268, 230, 250,
	337, 278, 338, 251, 300, 299, 301, 0, 176, 0,
	375, 410, 436, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 271, 315, 336, 334, 340, 0, 388,
	405, 413, 420, 426, 427, 431, 428, 429, 432, 303,
	190, 253, 371, 267, 276, 0, 0, 321, 352, 199,
	408, 372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 183, 272, 0, 341, 237, 434, 415,
	411, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 255, 256, 259,
	264, 281, 286, 287, 288, 289, 305, 306, 307, 310,
	313, 314, 317, 319, 320, 323, 329, 330, 331, 332,
	333, 335, 342, 346, 354, 355, 356, 357, 358, 360,
	361, 365, 366, 367, 368, 376, 380, 395, 396, 407,
	419, 424, 246, 403, 425, 0, 280, 0, 0, 282,
	231, 248, 257, 0, 414, 377, 188, 348, 238, 177,
	205, 191, 212, 226, 228, 261, 290, 296, 325, 328,
	243, 223, 203, 345, 200, 363, 383, 384, 385, 387,
	294, 219, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 326, 0, 364, 208, 279, 277, 392, 232, 225,
	221, 207, 254, 285, 324, 382, 318, 0, 274, 0,
	0, 373, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 206,
	175, 309, 374, 236, 0, 0, 0, 167, 168, 169,
	0, 1070, 0, 0, 0, 0, 0, 0, 197, 0,
	204, 0, 0, 0, 0, 218, 258, 224, 217, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 298, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	266, 171, 186, 0, 0, 308, 347, 353, 0, 0,
	0, 209, 0, 351, 322, 406, 193, 234, 344, 327,
	349, 0, 0, 350, 275, 394, 339, 404, 422, 423,
	216, 302, 412, 386, 418, 433, 187, 213, 316, 379,
	409, 370, 295, 390, 391, 265, 369, 242, 174, 273,
	430, 185, 359, 201, 178, 381, 402, 198, 362, 0,
	0, 0, 180, 400, 378, 292, 262, 263, 179, 0,
	343, 220, 240, 211, 311, 397, 398, 210, 435, 189,
	417, 182, 0, 416, 304, 393, 401, 293, 284, 181,
	399, 291, 283, 268, 230, 250, 337, 278, 338, 251,
	300, 299, 301, 0, 176, 0, 375, 410, 436, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 271,
	315, 336, 334, 340, 0, 388, 405, 413, 420, 426,
	427, 431, 428, 429, 432, 303, 190, 253, 371, 267,
	276, 0, 0, 321, 352, 199, 408, 372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 183,
	272, 0, 341, 237, 434, 415, 411, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 255, 256, 259, 264, 281, 286, 287,
	288, 289, 305, 306, 307, 310, 313, 314, 317, 319,
	320, 323, 329, 330, 331, 332, 333, 335, 342, 346,
	354, 355, 356, 357, 358, 360, 361, 365, 366, 367,
	368, 376, 380, 395, 396, 407, 419, 424, 246, 403,
	425, 0, 280, 0, 0, 282, 231, 248, 257, 0,
	414, 377, 188, 348, 238, 177, 205, 191, 212, 226,
	228, 261, 290, 296, 325, 328, 243, 223, 203, 345,
	200, 363, 383, 384, 385, 387, 294, 219, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 326, 0, 364,
	208, 279, 277, 392, 232, 225, 221, 207, 254, 285,
	324, 382, 318, 0, 274, 0, 0, 373, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 206, 175, 309, 374, 236,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 204, 0, 0, 0,
	0, 218, 258, 224, 217, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	298, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 266, 171, 186, 0,
	0, 308, 347, 353, 0, 0, 0, 209, 0, 351,
	322, 406, 193, 234, 344, 327, 349, 0, 0, 350,
	275, 394, 339, 404, 422, 423, 216, 302, 412, 386,
	418, 433, 187, 213, 316, 379, 409, 370, 295, 390,
	391, 265, 369, 242, 174, 273, 430, 185, 359, 201,
	178, 381, 402, 198, 362, 0, 0, 0, 180, 400,
	378, 292, 262, 263, 179, 0, 343, 220, 240, 211,
	311, 397, 398, 210, 435, 189, 417, 182, 0, 416,
	304, 393, 401, 293, 284, 181, 399, 291, 283, 268,
	230, 250, 337, 278, 338, 251, 300, 299, 301, 0,
	176, 0, 375, 410, 436, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 271, 315, 336, 334, 340,
	0, 388, 405, 413, 420, 426, 427, 431, 428, 429,
	432, 303, 190, 253, 371, 267, 276, 0, 0, 321,
	352, 199, 408, 372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 183, 272, 1339, 341, 237,
	434, 415, 411, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 255,
	256, 259, 264, 281, 286, 287, 288, 289, 305, 306,
	307, 310, 313, 314, 317, 319, 320, 323, 329, 330,
	331, 332, 333, 335, 342, 346, 354, 355, 356, 357,
	358, 360, 361, 365, 366, 367, 368, 376, 380, 395,
	396, 407, 419, 424, 246, 403, 425, 0, 280, 0,
	0, 282, 231, 248, 257, 0, 414, 377, 188, 348,
	238, 177, 205, 191, 212, 226, 228, 261, 290, 296,
	325, 328, 243, 223, 203, 345, 200, 363, 383, 384,
	385, 387, 294, 219, 312, 0, 1223, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 326, 0, 364, 208, 279, 277, 392,
	232, 225, 221, 207, 254, 285, 324, 382, 318, 0,
	274, 0, 0, 373, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 206, 175, 309, 374, 236, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 204, 0, 0, 0, 0, 218, 258, 224,
	217, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 298, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 266, 171, 186, 0, 0, 308, 347, 353,
	0, 0, 0, 209, 0, 351, 322, 406, 193, 234,
	344, 327, 349, 0, 0, 350, 275, 394, 339, 404,
	422, 423, 216, 302, 412, 386, 418, 433, 187, 213,
	316, 379, 409, 370, 295, 390, 391, 265, 369, 242,
	174, 273, 430, 185, 359, 201, 178, 381, 402, 198,
	362, 0, 0, 0, 180, 400, 378, 292, 262, 263,
	179, 0, 343, 220, 240, 211, 311, 397, 398, 210,
	435, 189, 417, 182, 0, 416, 304, 393, 401, 293,
	284, 181, 399, 291, 283, 268, 230, 250, 337, 278,
	338, 251, 300, 299, 301, 0, 176, 0, 375, 410,
	436, 194, 195, 196, 0, 229, 233, 239, 241, 0,
	247, 271, 315, 336, 334, 340, 0, 388, 405, 413,
	420, 426, 427, 431, 428, 429, 432, 303, 190, 253,
	371, 267, 276, 0, 0, 321, 352, 199, 408, 372,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 183, 272, 0, 341, 237, 434, 415, 411, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 255, 256, 259, 264, 281,
	286, 287, 288, 289, 305, 306, 307, 310, 313, 314,
	317, 319, 320, 323, 329, 330, 331, 332, 333, 335,
	342, 346, 354, 355, 356, 357, 358, 360, 361, 365,
	366, 367, 368, 376, 380, 395, 396, 407, 419, 424,
	246, 403, 425, 0, 280, 0, 0, 282, 231, 248,
	257, 0, 414, 377, 188, 348, 238, 177, 205, 191,
	212, 226, 228, 261, 290, 296, 325, 328, 243, 223,
	203, 345, 200, 363, 383, 384, 385, 387, 294, 219,
	312, 0, 1221, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 326,
	0, 364, 208, 279, 277, 392, 232, 225, 221, 207,
	254, 285, 324, 382, 318, 0, 274, 0, 0, 373,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 206, 175, 309,
	374, 236, 0, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 204, 0,
	0, 0, 0, 218, 258, 224, 217, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 298, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 266, 171,
	186, 0, 0, 308, 347, 353, 0, 0, 0, 209,
	0, 351, 322, 406, 193, 234, 344, 327, 349, 0,
	0, 350, 275, 394, 339, 404, 422, 423, 216, 302,
	412, 386, 418, 433, 187, 213, 316, 379, 409, 370,
	295, 390, 391, 265, 369, 242, 174, 273, 430, 185,
	359, 201, 178, 381, 402, 198, 362, 0, 0, 0,
	180, 400, 378, 292, 262, 263, 179, 0, 343, 220,
	240, 211, 311, 397, 398, 210, 435, 189, 417, 182,
	0, 416, 304, 393, 401, 293, 284, 181, 399, 291,
	283, 268, 230, 250, 337, 278, 338, 251, 300, 299,
	301, 0, 176, 0, 375, 410, 436, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 271, 315, 336,
	334, 340, 0, 388, 405, 413, 420, 426, 427, 431,
	428, 429, 432, 303, 190, 253, 371, 267, 276, 0,
	0, 321, 352, 199, 408, 372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 183, 272, 0,
	341, 237, 434, 415, 411, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 255, 256, 259, 264, 281, 286, 287, 288, 289,
	305, 306, 307, 310, 313, 314, 317, 319, 320, 323,
	329, 330, 331, 332, 333, 335, 342, 346, 354, 355,
	356, 357, 358, 360, 361, 365, 366, 367, 368, 376,
	380, 395, 396, 407, 419, 424, 246, 403, 425, 0,
	280, 0, 0, 282, 231, 248, 257, 0, 414, 377,
	188, 348, 238, 177, 205, 191, 212, 226, 228, 261,
	290, 296, 325, 328, 243, 223, 203, 345, 200, 363,
	383, 384, 385, 387, 294, 219, 312, 0, 1219, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 326, 0, 364, 208, 279,
	277, 392, 232, 225, 221, 207, 254, 285, 324, 382,
	318, 0, 274, 0, 0, 373, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 206, 175, 309, 374, 236, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 204, 0, 0, 0, 0, 218,
	258, 224, 217, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 298, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 266, 171, 186, 0, 0, 308,
	347, 353, 0, 0, 0, 209, 0, 351, 322, 406,
	193, 234, 344, 327, 349, 0, 0, 350, 275, 394,
	339, 404, 422, 423, 216, 302, 412, 386, 418, 433,
	187, 213, 316, 379, 409, 370, 295, 390, 391, 265,
	369, 242, 174, 273, 430, 185, 359, 201, 178, 381,
	402, 198, 362, 0, 0, 0, 180, 400, 378, 292,
	262, 263, 179, 0, 343, 220, 240, 211, 311, 397,
	398, 210, 435, 189, 417, 182, 0, 416, 304, 393,
	401, 293, 284, 181, 399, 291, 283, 268, 230, 250,
	337, 278, 338, 251, 300, 299, 301, 0, 176, 0,
	375, 410, 436, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 271, 315, 336, 334, 340, 0, 388,
	405, 413, 420, 426, 427, 431, 428, 429, 432, 303,
	190, 253, 371, 267, 276, 0, 0, 321, 352, 199,
	408, 372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 183, 272, 0, 341, 237, 434, 415,
	411, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 255, 256, 259,
	264, 281, 286, 287, 288, 289, 305, 306, 307, 310,
	313, 314, 317, 319, 320, 323, 329, 330, 331, 332,
	333, 335, 342, 346, 354, 355, 356, 357, 358, 360,
	361, 365, 366, 367, 368, 376, 380, 395, 396, 407,
	419, 424, 246, 403, 425, 0, 280, 0, 0, 282,
	231, 248, 257, 0, 414, 377, 188, 348, 238, 177,
	205, 191, 212, 226, 228, 261, 290, 296, 325, 328,
	243, 223, 203, 345, 200, 363, 383, 384, 385, 387,
	294, 219, 312, 0, 1217, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 326, 0, 364, 208, 279, 277, 392, 232, 225,
	221, 207, 254, 285, 324, 382, 318, 0, 274, 0,
	0, 373, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 206,
	175, 309, 374, 236, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	204, 0, 0, 0, 0, 218, 258, 224, 217, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 298, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	266, 171, 186, 0, 0, 308, 347, 353, 0, 0,
	0, 209, 0, 351, 322, 406, 193, 234, 344, 327,
	349, 0, 0, 350, 275, 394, 339, 404, 422, 423,
	216, 302, 412, 386, 418, 433, 187, 213, 316, 379,
	409, 370, 295, 390, 391, 265, 369, 242, 174, 273,
	430, 185, 359, 201, 178, 381, 402, 198, 362, 0,
	0, 0, 180, 400, 378, 292, 262, 263, 179, 0,
	343, 220, 240, 211, 311, 397, 398, 210, 435, 189,
	417, 182, 0, 416, 304, 393, 401, 293, 284, 181,
	399, 291, 283, 268, 230, 250, 337, 278, 338, 251,
	300, 299, 301, 0, 176, 0, 375, 410, 436, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 271,
	315, 336, 334, 340, 0, 388, 405, 413, 420, 426,
	427, 431, 428, 429, 432, 303, 190, 253, 371, 267,
	276, 0, 0, 321, 352, 199, 408, 372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 183,
	272, 0, 341, 237, 434, 415, 411, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 255, 256, 259, 264, 281, 286, 287,
	288, 289, 305, 306, 307, 310, 313, 314, 317, 319,
	320, 323, 329, 330, 331, 332, 333, 335, 342, 346,
	354, 355, 356, 357, 358, 360, 361, 365, 366, 367,
	368, 376, 380, 395, 396, 407, 419, 424, 246, 403,
	425, 0, 280, 0, 0, 282, 231, 248, 257, 0,
	414, 377, 188, 348, 238, 177, 205, 191, 212, 226,
	228, 261, 290, 296, 325, 328, 243, 223, 203, 345,
	200, 363, 383, 384, 385, 387, 294, 219, 312, 0,
	1215, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 326, 0, 364,
	208, 279, 277, 392, 232, 225, 221, 207, 254, 285,
	324, 382, 318, 0, 274, 0, 0, 373, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 206, 175, 309, 374, 236,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 204, 0, 0, 0,
	0, 218, 258, 224, 217, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	298, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 266, 171, 186, 0,
	0, 308, 347, 353, 0, 0, 0, 209, 0, 351,
	322, 406, 193, 234, 344, 327, 349, 0, 0, 350,
	275, 394, 339, 404, 422, 423, 216, 302, 412, 386,
	418, 433, 187, 213, 316, 379, 409, 370, 295, 390,
	391, 265, 369, 242, 174, 273, 430, 185, 359, 201,
	178, 381, 402, 198, 362, 0, 0, 0, 180, 400,
	378, 292, 262, 263, 179, 0, 343, 220, 240, 211,
	311, 397, 398, 210, 435, 189, 417, 182, 0, 416,
	304, 393, 401, 293, 284, 181, 399, 291, 283, 268,
	230, 250, 337, 278, 338, 251, 300, 299, 301, 0,
	176, 0, 375, 410, 436, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 271, 315, 336, 334, 340,
	0, 388, 405, 413, 420, 426, 427, 431, 428, 429,
	432, 303, 190, 253, 371, 267, 276, 0, 0, 321,
	352, 199, 408, 372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 183, 272, 0, 341, 237,
	434, 415, 411, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 255,
	256, 259, 264, 281, 286, 287, 288, 289, 305, 306,
	307, 310, 313, 314, 317, 319, 320, 323, 329, 330,
	331, 332, 333, 335, 342, 346, 354, 355, 356, 357,
	358, 360, 361, 365, 366, 367, 368, 376, 380, 395,
	396, 407, 419, 424, 246, 403, 425, 0, 280, 0,
	0, 282, 231, 248, 257, 0, 414, 377, 188, 348,
	238, 177, 205, 191, 212, 226, 228, 261, 290, 296,
	325, 328, 243, 223, 203, 345, 200, 363, 383, 384,
	385, 387, 294, 219, 312, 0, 1211, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 326, 0, 364, 208, 279, 277, 392,
	232, 225, 221, 207, 254, 285, 324, 382, 318, 0,
	274, 0, 0, 373, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 206, 175, 309, 374, 236, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 204, 0, 0, 0, 0, 218, 258, 224,
	217, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 298, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 266, 171, 186, 0, 0, 308, 347, 353,
	0, 0, 0, 209, 0, 351, 322, 406, 193, 234,
	344, 327, 349, 0, 0, 350, 275, 394, 339, 404,
	422, 423, 216, 302, 412, 386, 418, 433, 187, 213,
	316, 379, 409, 370, 295, 390, 391, 265, 369, 242,
	174, 273, 430, 185, 359, 201, 178, 381, 402, 198,
	362, 0, 0, 0, 180, 400, 378, 292, 262, 263,
	179, 0, 343, 220, 240, 211, 311, 397, 398, 210,
	435, 189, 417, 182, 0, 416, 304, 393, 401, 293,
	284, 181, 399, 291, 283, 268, 230, 250, 337, 278,
	338, 251, 300, 299, 301, 0, 176, 0, 375, 410,
	436, 194, 195, 196, 0, 229, 233, 239, 241, 0,
	247, 271, 315, 336, 334, 340, 0, 388, 405, 413,
	420, 426, 427, 431, 428, 429, 432, 303, 190, 253,
	371, 267, 276, 0, 0, 321, 352, 199, 408, 372,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 183, 272, 0, 341, 237, 434, 415, 411, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 255, 256, 259, 264, 281,
	286, 287, 288, 289, 305, 306, 307, 310, 313, 314,
	317, 319, 320, 323, 329, 330, 331, 332, 333, 335,
	342, 346, 354, 355, 356, 357, 358, 360, 361, 365,
	366, 367, 368, 376, 380, 395, 396, 407, 419, 424,
	246, 403, 425, 0, 280, 0, 0, 282, 231, 248,
	257, 0, 414, 377, 188, 348, 238, 177, 205, 191,
	212, 226, 228, 261, 290, 296, 325, 328, 243, 223,
	203, 345, 200, 363, 383, 384, 385, 387, 294, 219,
	312, 0, 1209, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 326,
	0, 364, 208, 279, 277, 392, 232, 225, 221, 207,
	254, 285, 324, 382, 318, 0, 274, 0, 0, 373,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 206, 175, 309,
	374, 236, 0, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 204, 0,
	0, 0, 0, 218, 258, 224, 217, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 298, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 266, 171,
	186, 0, 0, 308, 347, 353, 0, 0, 0, 209,
	0, 351, 322, 406, 193, 234, 344, 327, 349, 0,
	0, 350, 275, 394, 339, 404, 422, 423, 216, 302,
	412, 386, 418, 433, 187, 213, 316, 379, 409, 370,
	295, 390, 391, 265, 369, 242, 174, 273, 430, 185,
	359, 201, 178, 381, 402, 198, 362, 0, 0, 0,
	180, 400, 378, 292, 262, 263, 179, 0, 343, 220,
	240, 211, 311, 397, 398, 210, 435, 189, 417, 182,
	0, 416, 304, 393, 401, 293, 284, 181, 399, 291,
	283, 268, 230, 250, 337, 278, 338, 251, 300, 299,
	301, 0, 176, 0, 375, 410, 436, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 271, 315, 336,
	334, 340, 0, 388, 405, 413, 420, 426, 427, 431,
	428, 429, 432, 303, 190, 253, 371, 267, 276, 0,
	0, 321, 352, 199, 408, 372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 183, 272, 0,
	341, 237, 434, 415, 411, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 255, 256, 259, 264, 281, 286, 287, 288, 289,
	305, 306, 307, 310, 313, 314, 317, 319, 320, 323,
	329, 330, 331, 332, 333, 335, 342, 346, 354, 355,
	356, 357, 358, 360, 361, 365, 366, 367, 368, 376,
	380, 395, 396, 407, 419, 424, 246, 403, 425, 0,
	280, 0, 0, 282, 231, 248, 257, 0, 414, 377,
	188, 348, 238, 177, 205, 191, 212, 226, 228, 261,
	290, 296, 325, 328, 243, 223, 203, 345, 200, 363,
	383, 384, 385, 387, 294, 219, 312, 0, 1207, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 326, 0, 364, 208, 279,
	277, 392, 232, 225, 221, 207, 254, 285, 324, 382,
	318, 0, 274, 0, 0, 373, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 206, 175, 309, 374, 236, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 204, 0, 0, 0, 0, 218,
	258, 224, 217, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 298, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 266, 171, 186, 0, 0, 308,
	347, 353, 0, 0, 0, 209, 0, 351, 322, 406,
	193, 234, 344, 327, 349, 0, 0, 350, 275, 394,
	339, 404, 422, 423, 216, 302, 412, 386, 418, 433,
	187, 213, 316, 379, 409, 370, 295, 390, 391, 265,
	369, 242, 174, 273, 430, 185, 359, 201, 178, 381,
	402, 198, 362, 0, 0, 0, 180, 400, 378, 292,
	262, 263, 179, 0, 343, 220, 240, 211, 311, 397,
	398, 210, 435, 189, 417, 182, 0, 416, 304, 393,
	401, 293, 284, 181, 399, 291, 283, 268, 230, 250,
	337, 278, 338, 251, 300, 299, 301, 0, 176, 0,
	375, 410, 436, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 271, 315, 336, 334, 340, 0, 388,
	405, 413, 420, 426, 427, 431, 428, 429, 432, 303,
	190, 253, 371, 267, 276, 0, 0, 321, 352, 199,
	408, 372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 183, 272, 0, 341, 237, 434, 415,
	411, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 255, 256, 259,
	264, 281, 286, 287, 288, 289, 305, 306, 307, 310,
	313, 314, 317, 319, 320, 323, 329, 330, 331, 332,
	333, 335, 342, 346, 354, 355, 356, 357, 358, 360,
	361, 365, 366, 367, 368, 376, 380, 395, 396, 407,
	419, 424, 246, 403, 425, 0, 280, 0, 0, 282,
	231, 248, 257, 0, 414, 377, 188, 348, 238, 177,
	205, 191, 212, 226, 228, 261, 290, 296, 325, 328,
	243, 223, 203, 345, 200, 363, 383, 384, 385, 387,
	294, 219, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 326, 0, 364, 208, 279, 277, 392, 232, 225,
	221, 207, 254, 285, 324, 382, 318, 0, 274, 0,
	0, 373, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 206,
	175, 309, 374, 236, 1182, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	204, 0, 0, 0, 0, 218, 258, 224, 217, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 298, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	266, 171, 186, 0, 0, 308, 347, 353, 0, 0,
	0, 209, 0, 351, 322, 406, 193, 234, 344, 327,
	349, 0, 0, 350, 275, 394, 339, 404, 422, 423,
	216, 302, 412, 386, 418, 433, 187, 213, 316, 379,
	409, 370, 295, 390, 391, 265, 369, 242, 174, 273,
	430, 185, 359, 201, 178, 381, 402, 198, 362, 0,
	0, 0, 180, 400, 378, 292, 262, 263, 179, 0,
	343, 220, 240, 211, 311, 397, 398, 210, 435, 189,
	417, 182, 0, 416, 304, 393, 401, 293, 284, 181,
	399, 291, 283, 268, 230, 250, 337, 278, 338, 251,
	300, 299, 301, 0, 176, 0, 375, 410, 436, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 271,
	315, 336, 334, 340, 0, 388, 405, 413, 420, 426,
	427, 431, 428, 429, 432, 303, 190, 253, 371, 267,
	276, 0, 0, 321, 352, 199, 408, 372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 183,
	272, 0, 341, 237, 434, 415, 411, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 255, 256, 259, 264, 281, 286, 287,
	288, 289, 305, 306, 307, 310, 313, 314, 317, 319,
	320, 323, 329, 330, 331, 332, 333, 335, 342, 346,
	354, 355, 356, 357, 358, 360, 361, 365, 366, 367,
	368, 376, 380, 395, 396, 407, 419, 424, 246, 403,
	425, 0, 280, 0, 0, 282, 231, 248, 257, 0,
	414, 377, 188, 348, 238, 177, 205, 191, 212, 226,
	228, 261, 290, 296, 325, 328, 243, 223, 203, 345,
	200, 363, 383, 384, 385, 387, 294, 219, 1083, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 326, 0, 364, 208, 279, 277,
	392, 232, 225, 221, 207, 254, 285, 324, 382, 318,
	0, 274, 0, 0, 373, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 206, 175, 309, 374, 236, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 204, 0, 0, 0, 0, 218, 258,
	224, 217, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 298, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 266, 171, 186, 0, 0, 308, 347,
	353, 0, 0, 0, 209, 0, 351, 322, 406, 193,
	234, 344, 327, 349, 0, 0, 350, 275, 394, 339,
	404, 422, 423, 216, 302, 412, 386, 418, 433, 187,
	213, 316, 379, 409, 370, 295, 390, 391, 265, 369,
	242, 174, 273, 430, 185, 359, 201, 178, 381, 402,
	198, 362, 0, 0, 0, 180, 400, 378, 292, 262,
	263, 179, 0, 343, 220, 240, 211, 311, 397, 398,
	210, 435, 189, 417, 182, 0, 416, 304, 393, 401,
	293, 284, 181, 399, 291, 283, 268, 230, 250, 337,
	278, 338, 251, 300, 299, 301, 0, 176, 0, 375,
	410, 436, 194, 195, 196, 0, 229, 233, 239, 241,
	0, 247, 271, 315, 336, 334, 340, 0, 388, 405,
	413, 420, 426, 427, 431, 428, 429, 432, 303, 190,
	253, 371, 267, 276, 0, 0, 321, 352, 199, 408,
	372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 183, 272, 0, 341, 237, 434, 415, 411,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 184, 192, 202,
	214, 227, 235, 245, 249, 252, 255, 256, 259, 264,
	281, 286, 287, 288, 289, 305, 306, 307, 310, 313,
	314, 317, 319, 320, 323, 329, 330, 331, 332, 333,
	335, 342, 346, 354, 355, 356, 357, 358, 360, 361,
	365, 366, 367, 368, 376, 380, 395, 396, 407, 419,
	424, 246, 403, 425, 0, 280, 0, 0, 282, 231,
	248, 257, 0, 414, 377, 188, 348, 238, 177, 205,
	191, 212, 226, 228, 261, 290, 296, 325, 328, 243,
	223, 203, 345, 200, 363, 383, 384, 385, 387, 294,
	219, 312, 0, 0, 0, 0, 0, 0, 0, 1074,
	222, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	326, 0, 364, 208, 279, 277, 392, 232, 225, 221,
	207, 254, 285, 324, 382, 318, 0, 274, 0, 0,
	373, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 206, 175,
	309, 374, 236, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 204,
	0, 0, 0, 0, 218, 258, 224, 217, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 298, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 266,
	171, 186, 0, 0, 308, 347, 353, 0, 0, 0,
	209, 0, 351, 322, 406, 193, 234, 344, 327, 349,
	0, 0, 350, 275, 394, 339, 404, 422, 423, 216,
	302, 412, 386, 418, 433, 187, 213, 316, 379, 409,
	370, 295, 390, 391, 265, 369, 242, 174, 273, 430,
	185, 359, 201, 178, 381, 402, 198, 362, 0, 0,
	0, 180, 400, 378, 292, 262, 263, 179, 0, 343,
	220, 240, 211, 311, 397, 398, 210, 435, 189, 417,
	182, 0, 416, 304, 393, 401, 293, 284, 181, 399,
	291, 283, 268, 230, 250, 337, 278, 338, 251, 300,
	299, 301, 0, 176, 0, 375, 410, 436, 194, 195,
	196, 0, 229, 233, 239, 241, 0, 247, 271, 315,
	336, 334, 340, 0, 388, 405, 413, 420, 426, 427,
	431, 428, 429, 432, 303, 190, 253, 371, 267, 276,
	0, 0, 321, 352, 199, 408, 372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 183, 272,
	0, 341, 237, 434, 415, 411, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 184, 192, 202, 214, 227, 235, 245,
	249, 252, 255, 256, 259, 264, 281, 286, 287, 288,
	289, 305, 306, 307, 310, 313, 314, 317, 319, 320,
	323, 329, 330, 331, 332, 333, 335, 342, 346, 354,
	355, 356, 357, 358, 360, 361, 365, 366, 367, 368,
	376, 380, 395, 396, 407, 419, 424, 246, 403, 425,
	0, 280, 0, 0, 282, 231, 248, 257, 0, 414,
	377, 188, 348, 238, 177, 205, 191, 212, 226, 228,
	261, 290, 296, 325, 328, 243, 223, 203, 345, 200,
	363, 383, 384, 385, 387, 294, 219, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 326, 0, 364, 208,
	279, 277, 392, 232, 225, 221, 207, 254, 285, 324,
	382, 318, 0, 274, 0, 0, 373, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 206, 175, 309, 374, 236, 0,
	0, 0, 167, 168, 169, 0, 930, 0, 0, 0,
	0, 0, 0, 197, 0, 204, 0, 0, 0, 0,
	218, 258, 224, 217, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 298,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 266, 171, 186, 0, 0,
	308, 347, 353, 0, 0, 0, 209, 0, 351, 322,
	406, 193, 234, 344, 327, 349, 0, 0, 350, 275,
	394, 339, 404, 422, 423, 216, 302, 412, 386, 418,
	433, 187, 213, 316, 379, 409, 370, 295, 390, 391,
	265, 369, 242, 174, 273, 430, 185, 359, 201, 178,
	381, 402, 198, 362, 0, 0, 0, 180, 400, 378,
	292, 262, 263, 179, 0, 343, 220, 240, 211, 311,
	397, 398, 210, 435, 189, 417, 182, 0, 416, 304,
	393, 401, 293, 284, 181, 399, 291, 283, 268, 230,
	250, 337, 278, 338, 251, 300, 299, 301, 0, 176,
	0, 375, 410, 436, 194, 195, 196, 0, 229, 233,
	239, 241, 0, 247, 271, 315, 336, 334, 340, 0,
	388, 405, 413, 420, 426, 427, 431, 428, 429, 432,
	303, 190, 253, 371, 267, 276, 0, 0, 321, 352,
	199, 408, 372, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 183, 272, 0, 341, 237, 434,
	415, 411, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 255, 256,
	259, 264, 281, 286, 287, 288, 289, 305, 306, 307,
	310, 313, 314, 317, 319, 320, 323, 329, 330, 331,
	332, 333, 335, 342, 346, 354, 355, 356, 357, 358,
	360, 361, 365, 366, 367, 368, 376, 380, 395, 396,
	407, 419, 424, 246, 403, 425, 0, 280, 0, 0,
	282, 231, 248, 257, 0, 414, 377, 188, 348, 238,
	177, 205, 191, 212, 226, 228, 261, 290, 296, 325,
	328, 243, 223, 203, 345, 200, 363, 383, 384, 385,
	387, 294, 219, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 326, 0, 364, 208, 279, 277, 392, 232,
	225, 221, 207, 254, 285, 324, 382, 318, 0, 274,
	0, 0, 373, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	206, 175, 309, 374, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 0, 0, 0, 0, 218, 258, 224, 217,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 244, 0, 298, 0, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 266, 171, 186, 0, 0, 308, 347, 353, 0,
	0, 0, 209, 0, 351, 322, 406, 193, 234, 344,
	327, 349, 0, 0, 350, 275, 394, 339, 404, 422,
	423, 216, 302, 412, 386, 418, 433, 187, 213, 316,
	379, 409, 370, 295, 390, 391, 265, 369, 242, 174,
	273, 430, 185, 359, 201, 178, 381, 402, 198, 362,
	0, 0, 0, 180, 400, 378, 292, 262, 263, 179,
	0, 343, 220, 240, 211, 311, 397, 398, 210, 435,
	189, 417, 182, 0, 416, 304, 393, 401, 293, 284,
	181, 399, 291, 283, 268, 230, 250, 337, 278, 338,
	251, 300, 299, 301, 0, 176, 0, 375, 410, 436,
	194, 195, 196, 0, 229, 233, 239, 241, 0, 247,
	271, 315, 336, 334, 340, 0, 388, 405, 413, 420,
	426, 427, 431, 428, 429, 432, 303, 190, 253, 371,
	267, 276, 0, 0, 321, 352, 199, 408, 372, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	183, 272, 0, 341, 237, 434, 415, 411, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 255, 256, 259, 264, 281, 286,
	287, 288, 289, 305, 306, 307, 310, 313, 314, 317,
	319, 320, 323, 329, 330, 331, 332, 333, 335, 342,
	346, 354, 355, 356, 357, 358, 360, 361, 365, 366,
	367, 368, 376, 380, 395, 396, 407, 419, 424, 489,
	403, 425, 0, 280, 0, 0, 282, 231, 248, 257,
	0, 414, 377, 188, 348, 238, 177, 205, 191, 212,
	226, 228, 261, 290, 296, 325, 328, 243, 223, 203,
	345, 200, 363, 383, 384, 385, 387, 294, 219, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 326, 0,
	364, 208, 279, 277, 392, 232, 225, 221, 207, 254,
	285, 324, 382, 318, 0, 274, 0, 0, 373, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 206, 175, 309, 374,
	236, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 204, 0, 0,
	0, 0, 218, 258, 224, 217, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 298, 0, 0, 439, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 266, 171, 186,
	0, 0, 308, 347, 353, 0, 0, 0, 209, 0,
	351, 322, 406, 193, 234, 344, 327, 349, 0, 0,
	350, 275, 394, 339, 404, 422, 423, 216, 302, 412,
	386, 418, 433, 187, 213, 316, 379, 409, 370, 295,
	390, 391, 265, 369, 242, 174, 273, 430, 185, 359,
	201, 178, 381, 402, 198, 362, 0, 0, 0, 180,
	400, 378, 292, 262, 263, 179, 0, 343, 220, 240,
	211, 311, 397, 398, 210, 435, 189, 417, 182, 0,
	416, 304, 393, 401, 293, 284, 181, 399, 291, 283,
	268, 230, 250, 337, 278, 338, 251, 300, 299, 301,
	0, 176, 0, 375, 410, 436, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 271, 315, 336, 334,
	340, 0, 388, 405, 413, 420, 426, 427, 431, 428,
	429, 432, 303, 190, 253, 371, 267, 276, 0, 0,
	321, 352, 199, 408, 372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 183, 272, 0, 341,
	237, 434, 415, 411, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	255, 256, 259, 264, 281, 286, 287, 288, 289, 305,
	306, 307, 310, 313, 314, 317, 319, 320, 323, 329,
	330, 331, 332, 333, 335, 342, 346, 354, 355, 356,
	357, 358, 360, 361, 365, 366, 367, 368, 376, 380,
	395, 396, 407, 419, 424, 246, 403, 425, 0, 280,
	0, 0, 282, 231, 248, 257, 0, 414, 377, 188,
	348, 238, 177, 205, 191, 212, 226, 228, 261, 290,
	296, 325, 328, 243, 223, 203, 345, 200, 363, 383,
	384, 385, 387, 294, 219, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 326, 0, 364, 208, 279, 277,
	392, 232, 225, 221, 207, 254, 285, 324, 382, 318,
	0, 274, 0, 0, 373, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 206, 175, 309, 374, 236, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 204, 0, 0, 0, 0, 218, 258,
	224, 217, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 298, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 266, 171, 186, 0, 0, 308, 347,
	353, 0, 0, 0, 209, 0, 351, 322, 406, 193,
	234, 344, 327, 349, 0, 0, 350, 275, 394, 339,
	404, 422, 423, 216, 302, 412, 386, 418, 433, 187,
	213, 316, 379, 409, 370, 295, 390, 391, 265, 369,
	242, 174, 273, 430, 185, 359, 201, 178, 381, 402,
	198, 362, 0, 0, 0, 180, 400, 378, 292, 262,
	263, 179, 0, 343, 220, 240, 211, 311, 397, 398,
	210, 435, 189, 417, 182, 0, 416, 304, 393, 401,
	293, 284, 181, 399, 291, 283, 268, 230, 250, 337,
	278, 338, 251, 300, 299, 301, 0, 176, 0, 375,
	410, 436, 194, 195, 196, 0, 229, 233, 239, 241,
	0, 247, 271, 315, 336, 334, 340, 0, 388, 405,
	413, 420, 426, 427, 431, 428, 429, 432, 303, 190,
	253, 371, 267, 276, 0, 0, 321, 352, 199, 408,
	372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 183, 272, 0, 341, 237, 434, 415, 411,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 184, 192, 202,
	214, 227, 235, 245, 249, 252, 255, 256, 259, 264,
	281, 286, 287, 288, 289, 305, 306, 307, 310, 313,
	314, 317, 319, 320, 323, 329, 330, 331, 332, 333,
	335, 342, 346, 354, 355, 356, 357, 358, 360, 361,
	365, 366, 367, 368, 376, 380, 395, 396, 407, 419,
	424, 246, 403, 425, 0, 280, 0, 0, 282, 231,
	248, 257, 0, 414, 377, 188, 348, 238, 177, 205,
	191, 212, 226, 228, 261, 290, 296, 325, 328, 243,
	223, 203, 345, 200, 363, 383, 384, 385, 387, 294,
	219,
}

var yyPact = [...]int{
	4270, -1000, -351, 1589, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1565, 1239, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 657, 1256, -1000, 1463, 4013, -1000, 27826, 386,
	-1000, 27370, 385, 2234, 27826, -1000, 107, -1000, 88, 27826,
	98, 26914, -1000, -1000, -281, 12745, 1416, -25, -28, 27826,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1250,
	1516, 1526, 1562, 1032, 1631, -1000, 10908, 10908, 339, 339,
	339, 9084, -1000, -1000, 16862, 27826, 27826, 172, -1000, 1463,
	-1000, -1000, 141, -1000, 259, 1201, -1000, 1197, -1000, 461,
	410, 256, 320, 318, 238, 236, 235, 234, 233, 232,
	231, 230, 267, -1000, 538, 538, -172, -173, 2743, 312,
	312, 312, 363, 1430, 1425, -1000, 551, -1000, 538, 538,
	128, 538, 538, 538, 538, 210, 205, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 209, 1463, 185, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27826, 132, 27826,
	-1000, 471, 27826, 677, 677, 51, 677, 677, 677, 677,
	109, 475, -29, -1000, 90, 171, 80, 181, 636, 89,
	63, -1000, -1000, 175, 636, 75, -1000, 677, 7204, 7204,
	7204, -1000, 1446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 362, -1000, -1000, -1000, -1000, 27826, 26458, 255, 630,
	-1000, -1000, -1000, 2, -1000, -1000, 1058, 978, -1000, 12745,
	2282, 1153, 1153, -1000, -1000, 421, -1000, -1000, 14113, 14113,
	14113, 14113, 14113, 14113, 14113, 14113, 14113, 14113, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1153, 457, -1000, 12289, 1153, 1153, 1153, 1153,
	1153, 1153, 1153, 1153, 12745, 1153, 1153, 1153, 1153, 1153,
	1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153,
	1153, 1153, -1000, -1000, -1000, 27826, -1000, 1153, 114, 1565,
	-1000, 1239, -1000, -1000, -1000, 1456, 12745, 12745, 1565, -1000,
	1316, 10908, -1000, -1000, 1444, -1000, -1000, -1000, -1000, -1000,
	714, 1591, -1000, 15481, 448, 1588, 26002, -1000, 19611, 25546,
	1195, 8614, -79, -1000, -1000, -1000, 629, 18699, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1446, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1144, 27826, -1000, -1000, 3984, 957, -1000, 1255, -1000, 1126,
	-1000, 1223, 1262, 384, 957, 380, 379, 378, -1000, -103,
	-1000, -1000, -1000, -1000, -1000, 538, 538, 264, 4013, 2704,
	-1000, -1000, -1000, 25083, 1254, 957, -1000, 1253, -1000, 1484,
	341, 504, 504, 957, -1000, -1000, 27826, 957, 1482, 1474,
	27826, 27826, -1000, 24627, -1000, 24171, 23715, 833, 27826, 23259,
	22803, 22347, 21891, 21435, -1000, 1329, -1000, 1244, -1000, -1000,
	-1000, 27826, 27826, 27826, 19, -1000, -1000, 27826, 957, -1000,
	-1000, 831, 829, 538, 538, 810, 944, 917, 914, 538,
	538, 809, 913, 1045, 180, 807, 805, 804, 896, 911,
	104, 860, 852, 797, 27826, 1249, 27826, -1000, 161, 588,
	272, 624, 1463, 1415, 1194, 359, 383, 957, 323, 323,
	-1000, 7674, -1000, -1000, 910, 12745, -1000, 651, 636, 636,
	-1000, -1000, -1000, -1000, -1000, -1000, 677, 27826, 651, -1000,
	-1000, -1000, 636, 677, 27826, 677, 677, 677, 677, 636,
	636, 677, 27826, 27826, 27826, 27826, 27826, 27826, 27826, 27826,
	27826, 7204, 7204, 7204, 525, 677, -1000, 1294, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 97, -1000, -1000, -1000,
	-1000, -1000, 1589, -1000, -1000, -1000, -109, 1189, 20979, -1000,
	-286, -287, -288, -289, -1000, -1000, -1000, -290, -297, -1000,
	-1000, -1000, 12745, 12745, 12745, 12745, 894, 528, 14113, 746,
	710, 14113, 14113, 14113, 14113, 14113, 14113, 14113, 14113, 14113,
	14113, 14113, 14113, 14113, 14113, 14113, 703, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 957, -1000, 1607, 1018, 1018,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 14569,
	9540, 7674, 1032, 1124, 1565, 10908, 10908, 12745, 12745, 11820,
	11364, 10908, 1445, 640, 978, 27826, -1000, 953, -1000, -1000,
	13657, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27826, 27826, 10908, 10908, 10908, 10908, 10908,
	-1000, 1188, -1000, -168, 16406, 12745, 908, 1526, 1032, 1444,
	1499, 1597, 515, 915, 1187, -1000, 954, 1526, 18243, 1172,
	-1000, 1444, -1000, -1000, -1000, 27826, -1000, -1000, 20523, -1000,
	-1000, 6734, 27826, 228, 27826, -1000, 1221, 1452, -1000, -1000,
	-1000, 1513, 17787, 27826, 1139, 1120, -1000, -1000, 446, 8144,
	-79, -1000, 8144, 1160, -1000, -47, -52, 9996, 468, -1000,
	-1000, -1000, 2743, 15025, 1016, -1000, 15, -1000, -1000, -1000,
	1223, -1000, 1223, 1223, 1223, 1223, 19, 19, 19, 19,
	-1000, -1000, -1000, -1000, -1000, 1248, 1247, -1000, 1223, 1223,
	1223, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1246,
	1246, 1246, 1224, 1224, 291, -1000, 12745, 149, 27826, 1498,
	792, 161, 330, 1277, 957, 957, 957, 330, -1000, 1040,
	1012, -1000, 1185, -1000, -1000, 1560, -1000, -1000, 492, 694,
	689, 474, 27826, 123, 224, -1000, 292, -1000, 27826, 1245,
	1473, 504, 957, -1000, 957, -1000, -1000, -1000, -1000, 442,
	-1000, -1000, 957, 1180, -1000, 1190, 717, 687, 715, 644,
	1180, -1000, -1000, -124, 1180, -1000, 1180, -1000, 1180, -1000,
	1180, -1000, 1180, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 521, 27826, 123, 703, -1000, 356, -1000, -1000, 703,
	703, -1000, -1000, -1000, -1000, 907, 902, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -341, 27826, -1000, 138, 571, 215, 252,
	207, 27826, 160, 1518, 182, 189, 27826, 27826, 323, 1293,
	27826, 1508, 27826, -1000, -1000, -1000, -1000, 978, 27826, -1000,
	-1000, 677, 677, -1000, -1000, 27826, 677, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 677, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 900,
	-1000, 27826, 27826, -1000, -1000, -1000, -1000, -1000, 32, -55,
	193, -1000, -1000, -1000, -1000, 1514, -1000, 978, 528, 592,
	671, -1000, -1000, 855, -1000, -1000, 2686, -1000, -1000, -1000,
	-1000, 746, 14113, 14113, 14113, 596, 2686, 2546, 727, 1545,
	489, 623, 623, 488, 488, 488, 488, 488, 559, 559,
	-1000, -1000, -1000, -1000, 953, -1000, -1000, -1000, 953, 10908,
	10908, 1177, 1153, 436, -1000, 1250, -1000, -1000, 1526, 1090,
	1090, 767, 866, 593, 1584, 1090, 552, 1583, 1090, 1090,
	10908, -1000, -1000, 637, -1000, 12745, 953, -1000, 1178, 1173,
	1161, 1090, 953, 953, 1090, 1090, 27826, -1000, -276, -1000,
	-78, 456, 1153, -1000, 20067, -1000, -1000, 953, 1058, -1000,
	1456, -1000, -1000, 1414, -1000, 1361, 12745, 12745, 12745, -1000,
	-1000, -1000, 1456, 1547, -1000, 1377, 1370, 1577, 10908, 19611,
	1444, -1000, -1000, -1000, 435, 1577, 1192, 1153, -1000, 27826,
	19611, 19611, 19611, 19611, 19611, -1000, 1317, 1314, -1000, 1311,
	1305, 1360, 27826, -1000, 1114, 1032, 17787, 228, 1155, 19611,
	27826, -1000, -1000, 19611, 27826, 6264, -1000, 1160, -79, -62,
	-1000, -1000, -1000, -1000, 978, -1000, 943, -1000, 2522, -1000,
	305, -1000, -1000, -1000, -1000, 549, 11, -1000, -1000, 19,
	19, -1000, -1000, 468, 747, 468, 468, 468, 899, 899,
	-1000, -1000, -1000, -1000, -1000, 790, -1000, -1000, -1000, 782,
	-1000, -1000, 709, 1306, 149, -1000, -1000, 538, 882, 1417,
	27826, -1000, -1000, 1011, 138, 27826, 645, 1292, -1000, 1277,
	1277, 1277, 27826, -1000, -1000, -1000, -1000, 253, 27826, 1098,
	-1000, 118, 27826, 993, 27826, -1000, 1096, 27826, -1000, 957,
	-1000, -1000, 7674, -1000, 27826, 1153, -1000, -1000, -1000, -1000,
	382, 1462, 1459, 123, 118, 468, 957, -1000, -1000, -1000,
	-1000, -1000, -330, 1094, 366, 126, 152, 27826, 27826, 27826,
	27826, 27826, 472, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	197, 351, -1000, 27826, 27826, 431, -1000, -1000, -1000, 636,
	-1000, -1000, 636, -1000, -1000, -1000, -1000, -1000, -1000, 1453,
	-66, -315, -1000, -310, -1000, -1000, -1000, -1000, 596, 2686,
	2365, -1000, 14113, 14113, -1000, -1000, 1090, 1090, 10908, 7674,
	1565, 1456, -1000, -1000, 254, 703, 254, 14113, 14113, -1000,
	14113, 14113, -1000, -117, 1196, 632, -1000, 12745, 857, -1000,
	-1000, 14113, 14113, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 377, 375, 374, 27826, -1000, -1000, -1000, 847,
	880, 1351, 978, 978, -1000, -1000, 27826, -1000, -1000, -1000,
	-1000, 1575, 12745, -1000, 1156, -1000, 5794, 1526, 1291, 27826,
	1153, 1589, 15950, 27826, 1142, -1000, 544, 1452, 1269, 1290,
	1348, -1000, -1000, -1000, -1000, 1313, -1000, 1312, -1000, -1000,
	-1000, -1000, -1000, 1032, 1577, 19611, 1108, -1000, 1108, -1000,
	427, -1000, -1000, -1000, -75, -88, -1000, -1000, -1000, 2743,
	-1000, -1000, -1000, 659, 14113, 1596, -1000, 879, 1472, -1000,
	1468, -1000, -1000, 468, 468, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1086, -1000, 1075, 1154, 1071, 68, -1000, 1225,
	1438, 538, 538, -1000, 780, -1000, 957, -1000, -1000, 365,
	-1000, 1503, 27826, 1287, 1285, 1284, -1000, 1557, 1062, -1000,
	27826, -1000, -1000, 27826, -1000, -1000, 1366, 149, 1067, -1000,
	-1000, -1000, 224, 27826, -1000, 1018, 118, -1000, -1000, -1000,
	-1000, -1000, -1000, 27826, 188, -1000, 1238, 948, -1000, 1272,
	-1000, -1000, -1000, -1000, 116, 214, -1000, 27826, 404, 1306,
	27826, -1000, -1000, -1000, 677, 677, -1000, 1437, -1000, 957,
	-1000, 14113, 2686, 2686, -1000, -1000, 953, -1000, 1526, -1000,
	953, 1223, 1223, -1000, 1223, 1224, -1000, 1223, 59, 1223,
	58, 953, 953, 2023, 1787, 1511, 638, 1153, -108, -1000,
	978, 12745, 1309, 1263, 1153, 1153, 1153, 1035, 875, 19,
	-1000, -1000, -1000, 1568, 1556, 978, -1000, -1000, -1000, 1492,
	1128, 1031, -1000, -1000, 10452, 1053, 1315, 413, 1035, 1565,
	27826, 12745, -1000, -1000, 12745, 1220, -1000, 12745, -1000, -1000,
	-1000, 1565, 1565, 1108, -1000, -1000, 501, -1000, -1000, -1000,
	-1000, -1000, 2686, 36, -1000, -1000, -1000, -1000, -1000, 19,
	873, 19, 764, -1000, 759, -1000, -1000, -212, -1000, -1000,
	1152, 1310, -1000, -1000, 27826, -1000, -1000, 27826, 27826, 27826,
	27826, 27826, -1000, -1000, 221, -1000, 281, 1009, -1000, -167,
	-1000, -1000, 1203, -1000, -1000, -1000, 991, -1000, -131, 957,
	27826, 27826, 27826, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2686, -1000, 1456, -1000, -1000, 203, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14113, 14113, 14113, 14113, 14113,
	1526, 871, 978, 14113, 14113, 19155, 27826, 27826, 17318, 19,
	30, -1000, 12745, 12745, 1457, -1000, 1153, -1000, 1168, 27826,
	1153, 27826, -1000, 1526, -1000, 978, 978, 27826, 978, 1526,
	-1000, -1000, 468, -1000, 468, 985, 981, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1203, -1000, -1000, -1000, 1062,
	-1000, 219, 27826, -1000, 224, -1000, -175, -178, 1512, 27826,
	-1000, -1000, 7674, -1000, -1000, 1179, 1276, -1000, -1000, -1000,
	-1000, 1178, 1178, 1178, 1178, 177, 953, -1000, 1178, 1178,
	1006, -1000, 1006, 1006, 456, -270, -1000, 1411, 1384, 978,
	1058, 1595, -1000, 1153, 1589, 401, 1031, -1000, -1000, 998,
	-1000, -1000, -1000, -1000, -1000, 1510, 1153, 1046, -1000, -1000,
	-1000, 1239, 989, 1055, -1000, 536, 27826, 27826, -1000, -1000,
	-1000, -1000, 953, 156, -134, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 30, 274, -1000, 1406, 1384, -1000, 1553, 1390,
	1551, -1000, 27826, 1031, 27826, -1000, 1239, 13201, 27826, 217,
	-1000, 7674, 5324, 975, -1000, -1000, 1323, -122, -139, 1383,
	1385, 1385, 1406, -1000, 1549, 1540, -1000, 868, 1528, 863,
	1029, -1000, 217, 1178, 953, 969, -1000, -56, -1000, -1000,
	-1000, -1000, -1000, 1272, -1000, 1322, -1000, 1381, 753, -1000,
	-1000, -1000, -1000, 844, 837, -1000, 754, -1000, -1000, -1000,
	-1000, 1283, 290, -1000, -1000, -131, -132, -1000, 742, -1000,
	-1000, -1000, -1000, -1000, 1282, -1000, 1582, 159, -1000, -135,
	-1000, -1000, -1000, 1594, 441, 441, -1000, -144, -1000, -1000,
	-1000, 287, 775, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1936, 1931, 12, 82, 88, 1928, 1915, 1913, 1911,
	130, 128, 127, 1909, 1908, 1903, 1899, 1898, 1896, 1895,
	1893, 1890, 1888, 1887, 1885, 65, 123, 35, 37, 138,
	1884, 1883, 30, 1881, 1879, 1878, 121, 120, 576, 1877,
	118, 1876, 1875, 1874, 1873, 1872, 1871, 1870, 1869, 1868,
	1866, 1865, 1864, 1863, 1857, 209, 1856, 1855, 14, 1854,
	33, 1850, 1847, 1846, 1845, 1844, 91, 1840, 1839, 1838,
	116, 1833, 1832, 53, 208, 40, 84, 1831, 1830, 94,
	122, 1829, 75, 102, 1828, 93, 1825, 68, 90, 74,
	1823, 47, 1822, 1821, 50, 1820, 1819, 1818, 78, 1817,
	1816, 2708, 1815, 76, 83, 17, 63, 1804, 1802, 1798,
	1796, 36, 44, 1795, 1794, 22, 1787, 1785, 125, 1783,
	89, 21, 1781, 11, 16, 19, 1775, 100, 1774, 28,
	61, 34, 1772, 86, 1770, 1769, 1766, 1764, 25, 1760,
	81, 103, 64, 1759, 1758, 7, 15, 1757, 1755, 1754,
	1753, 1751, 1750, 10, 1749, 5, 1747, 27, 1745, 6,
	18, 77, 117, 24, 8, 1744, 135, 1743, 23, 115,
	73, 113, 1742, 1741, 1740, 856, 141, 1739, 1738, 46,
	1736, 101, 98, 1734, 167, 1733, 1731, 80, 1292, 1837,
	48, 119, 1729, 1725, 2214, 51, 79, 29, 1722, 57,
	1721, 1720, 1719, 126, 142, 45, 846, 42, 1718, 1714,
	1710, 1706, 1705, 1704, 1703, 32, 67, 26, 106, 38,
	1701, 1694, 1673, 72, 56, 1672, 112, 107, 71, 108,
	1671, 132, 104, 58, 1670, 43, 1669, 1667, 1665, 1664,
	39, 1662, 1661, 1659, 1658, 109, 105, 69, 41, 1657,
	31, 66, 111, 110, 1656, 20, 137, 9, 1639, 3,
	0, 1637, 4, 129, 175, 99, 1636, 1635, 1, 1632,
	2, 1623, 1621, 85, 1620, 1618, 1617, 1616, 3192, 367,
	114, 1615, 133,
}

//line sql.y:5206
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 276, 277, 277, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 260, 260, 260, 263, 263,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 280, 280, 96, 96, 94, 94, 95, 95,
	161, 161, 13, 14, 14, 171, 171, 170, 170, 170,
	172, 172, 172, 172, 206, 206, 15, 15, 15, 15,
	15, 71, 71, 262, 262, 261, 259, 259, 258, 258,
	257, 23, 24, 33, 33, 33, 33, 34, 35, 264,
	264, 236, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 238, 238, 225, 225, 237, 237,
	237, 237, 237, 237, 237, 224, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 208, 208, 208,
	208, 211, 211, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 210, 210, 210, 210, 210, 212, 212, 212,
	212, 212, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 214, 214, 214,
	214, 214, 214, 214, 214, 223, 223, 215, 215, 218,
	218, 219, 219, 219, 220, 220, 221, 221, 216, 216,
	216, 216, 217, 217, 217, 226, 250, 250, 249, 249,
	247, 247, 247, 247, 235, 235, 244, 244, 244, 244,
	244, 234, 234, 230, 230, 230, 231, 231, 232, 232,
	229, 229, 233, 233, 246, 246, 245, 227, 227, 228,
	228, 252, 252, 252, 252, 253, 269, 270, 268, 268,
	268, 268, 268, 60, 60, 60, 183, 183, 183, 242,
	242, 241, 241, 241, 243, 243, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 178, 178, 178, 267, 267,
	267, 267, 267, 267, 266, 266, 266, 239, 239, 239,
	265, 265, 130, 130, 131, 131, 30, 30, 30, 30,
	30, 30, 29, 29, 29, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 31, 31, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 222,
	222, 222, 254, 254, 255, 255, 17, 22, 22, 18,
	18, 18, 18, 19, 19, 41, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 271, 271, 177, 177, 185, 185, 176, 176, 199,
	199, 199, 179, 179, 179, 180, 180, 275, 275, 275,
	43, 43, 45, 45, 46, 47, 47, 201, 201, 202,
	202, 48, 49, 61, 61, 61, 61, 61, 61, 63,
	63, 63, 7, 7, 7, 7, 57, 57, 57, 6,
	6, 44, 44, 51, 272, 272, 273, 274, 274, 274,
	274, 52, 54, 20, 20, 20, 20, 20, 20, 78,
	78, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 72, 72, 72, 67, 67, 281, 55,
	56, 56, 70, 70, 70, 64, 64, 64, 69, 69,
	69, 75, 75, 77, 77, 77, 77, 77, 79, 79,
	79, 79, 79, 79, 79, 74, 74, 76, 76, 76,
	76, 192, 192, 192, 191, 191, 86, 86, 87, 87,
	88, 88, 89, 89, 89, 128, 104, 104, 160, 160,
	159, 159, 162, 162, 90, 90, 90, 90, 91, 91,
	92, 92, 93, 93, 200, 200, 197, 197, 197, 196,
	196, 97, 97, 97, 99, 98, 98, 98, 98, 100,
	100, 102, 102, 101, 101, 103, 105, 105, 105, 105,
	105, 106, 106, 85, 85, 85, 85, 85, 85, 85,
	85, 174, 174, 108, 108, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 119, 119, 119, 119, 119,
	119, 109, 109, 109, 109, 109, 109, 109, 73, 73,
	120, 120, 120, 127, 121, 121, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	116, 116, 116, 116, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 282, 282, 118, 117, 117, 117,
	117, 117, 117, 117, 68, 68, 68, 68, 68, 205,
	205, 205, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 134, 134, 65, 65, 132,
	132, 133, 135, 135, 129, 129, 129, 111, 111, 111,
	111, 111, 111, 111, 111, 113, 113, 113, 136, 136,
	137, 137, 138, 138, 139, 139, 140, 141, 141, 141,
	142, 142, 142, 142, 32, 32, 32, 32, 32, 27,
	27, 27, 27, 28, 28, 28, 80, 80, 80, 80,
	82, 82, 81, 81, 58, 58, 59, 59, 59, 83,
	83, 84, 84, 84, 84, 157, 157, 157, 143, 143,
	143, 143, 149, 149, 149, 145, 145, 147, 147, 147,
	148, 148, 148, 146, 154, 154, 156, 156, 155, 155,
	151, 151, 152, 152, 153, 153, 153, 150, 150, 110,
	110, 110, 110, 110, 158, 158, 158, 158, 163, 163,
	123, 123, 125, 125, 124, 126, 164, 164, 168, 165,
	165, 169, 169, 169, 169, 169, 166, 166, 167, 167,
	193, 193, 193, 173, 173, 184, 184, 181, 181, 182,
	182, 175, 175, 186, 186, 186, 53, 122, 122, 251,
	251, 248, 189, 189, 190, 190, 194, 194, 198, 198,
	195, 195, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 278, 279, 203, 204,
	204, 204,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 3, 3,
	4, 2, 3, 3, 2, 3, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 2,
	2, 2, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 3, 3, 5, 2, 3, 3, 3,
	3, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 3, 3, 3, 7, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 5, 4, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	4, 5, 5, 6, 4, 4, 6, 6, 6, 8,
	8, 8, 8, 9, 8, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 0, 2, 4, 0, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -276, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -278, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 153, -34, -24, 154, -35, 156,
	155, 192, 157, 185, 71, 231, 232, 234, 235, 236,
	237, -63, 190, 191, 159, 35, 42, 32, 33, 36,
	162, 81, 9, 335, 187, 186, 26, -277, 475, -70,
	5, -138, 16, -3, -55, -281, -55, -55, -55, -55,
	-55, -55, -236, -238, 81, 126, 81, -55, -39, -38,
	-37, -36, -40, 30, -30, -31, -256, -29, -26, 158,
	155, 200, 102, 103, 192, 193, 194, 157, 176, 191,
	195, 190, 209, -25, 77, 32, 348, 351, -243, 154,
	160, 161, 336, 105, 104, 72, 156, -240, 281, 452,
	-40, 454, 95, 97, 453, 41, 165, 455, 456, 457,
	458, 175, 459, 460, 461, 462, 468, 469, 470, 471,
	106, 5, -55, -198, -194, -260, -188, 84, 85, 86,
	345, 178, 379, 380, 225, 77, 281, 452, 231, 245,
	239, 266, 258, 346, 381, 228, 179, 213, 449, 256,
	313, 454, 382, 193, 286, 287, 288, 95, 234, 322,
	467, 230, 383, 465, 97, 453, 76, 48, 41, 188,
	254, 250, 455, 214, 384, 356, 207, 105, 102, 474,
	248, 47, 28, 464, 104, 46, 456, 385, 457, 290,
	271, 443, 45, 291, 194, 386, 80, 350, 451, 292,
	249, 293, 224, 463, 159, 387, 435, 295, 444, 388,
	272, 276, 389, 314, 49, 390, 391, 445, 103, 392,
	75, 458, 243, 244, 393, 222, 177, 316, 270, 175,
	34, 296, 347, 226, 55, 201, 317, 43, 274, 42,
	439, 394, 442, 269, 265, 50, 395, 396, 397, 398,
	459, 268, 242, 264, 473, 219, 460, 59, 161, 278,
	277, 279, 208, 312, 261, 399, 400, 401, 182, 78,
	402, 251, 19, 403, 404, 297, 215, 405, 53, 406,
	407, 320, 191, 408, 51, 461, 38, 196, 462, 409,
	410, 411, 412, 413, 299, 414, 298, 273, 275, 203,
	300, 349, 415, 247, 195, 466, 416, 183, 450, 197,
	200, 190, 321, 184, 417, 418, 419, 420, 421, 229,
	422, 423, 235, 468, 40, 424, 425, 426, 427, 223,
	218, 315, 324, 58, 79, 283, 428, 448, 241, 216,
	429, 232, 52, 469, 470, 471, 210, 472, 302, 106,
	220, 221, 44, 262, 202, 430, 431, 252, 253, 267,
	240, 263, 233, 436, 204, 303, 192, 432, 323, 217,
	284, 353, 209, 304, 447, 352, 260, 257, 211, 433,
	305, 166, 205, 206, 434, 437, 306, 307, 309, 310,
	227, 308, 311, 212, 351, 255, 285, 164, -55, 164,
	-101, -194, 164, -166, 287, -185, 289, 301, 296, 306,
	295, -177, 297, 299, 203, -275, 314, 164, 303, 153,
	144, 290, 298, 307, 308, 311, 212, -271, -260, 457,
	472, 313, 259, 294, 292, 315, 439, 310, 309, -194,
	233, -201, 238, -189, -260, -188, 236, -101, -61, 435,
	157, -203, -203, -72, 439, 441, -121, -85, -107, 110,
	-112, 30, 24, -111, -108, -129, -126, -127, 144, 145,
	147, 146, 148, 133, 134, 141, 111, 149, -116, -114,
	-115, -117, 88, 87, 96, 89, 90, 91, 92, 98,
	99, 100, -189, -194, -124, -278, 65, 66, 336, 337,
	338, 339, 344, 340, 113, 54, 331, 325, 334, 333,
	332, 329, 330, 327, 328, 342, 343, 169, 326, 163,
	139, 335, -260, -188, 41, 302, 302, -101, -55, -5,
	-4, -278, 6, 21, 22, -142, 18, 17, -279, 83,
	-64, -77, 60, 61, -79, 22, 37, 64, 62, 21,
	-56, -76, 135, -85, -194, -76, -175, 168, -175, -175,
	-165, -206, 233, -169, 315, 314, -190, -167, -189, -187,
	-166, 312, 158, 354, 109, 23, 25, 112, 144, 17,
	113, 36, 160, 259, 176, 143, 172, 336, 153, 69,
	355, 327, 328, 325, 331, 338, 339, 326, 289, 30,
	11, 357, 26, 186, 22, 37, 137, 155, 116, 117,
	189, 24, 187, 100, 360, 20, 72, 181, 12, 174,
	14, 361, 362, 15, 169, 168, 128, 165, 67, 9,
	149, 27, 125, 63, 363, 29, 364, 365, 366, 367,
	65, 126, 18, 329, 330, 32, 440, 368, 344, 198,
	139, 70, 56, 441, 110, 369, 370, 98, 371, 101,
	73, 446, 107, 16, 68, 39, 372, 199, 373, 171,
	374, 318, 375, 127, 156, 335, 66, 376, 163, 301,
	6, 341, 31, 185, 173, 64, 377, 164, 115, 342,
	343, 167, 99, 5, 170, 33, 10, 71, 74, 332,
	333, 334, 54, 348, 114, 13, 378, 319, 108, 313,
	-237, 126, -224, -228, -189, 180, -253, 176, -101, -246,
	-245, -189, -71, -184, 165, 174, 173, 170, -264, 107,
	220, 326, 163, -36, -37, -166, 143, 197, 82, 82,
	-228, -227, -226, -265, 199, 180, -252, -244, 172, 181,
	-234, 173, 174, -229, 165, 29, -265, -229, 171, 181,
	199, 199, 106, 199, 106, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 196, -235, 118, -235, 352, 352,
	-240, -265, -265, -265, 167, 34, 34, -186, -229, 167,
	23, -235, -235, -166, 143, -235, -235, -235, -235, 207,
	207, -235, -235, -235, -235, -235, -235, -235, -235, -235,
	-235, -235, -235, -235, -235, -235, 164, -264, -80, 311,
	227, 77, -38, 209, -22, -101, -184, 165, 166, -264,
	-101, 150, -101, -179, 126, 13, -179, -176, 302, 300,
	288, 293, -179, -179, -179, -179, 210, 286, -230, 165,
	34, 177, 302, 210, 286, 210, 211, 210, 211, 305,
	210, -199, 12, 128, 326, 291, 295, 203, 164, 204,
	166, 304, -260, 442, 211, -199, 302, 206, -179, -204,
	-278, -190, 259, -204, -204, 31, 167, -189, -57, -189,
	88, -7, -3, -11, -10, -12, 118, -78, 302, -66,
	144, 457, 443, 444, 445, 442, 299, 450, 448, 446,
	210, 447, 82, 109, 107, 108, 125, -85, -109, 128,
	110, 126, 127, 112, 130, 129, 140, 133, 134, 135,
	136, 137, 138, 139, 131, 132, 143, 118, 119, 120,
	121, 122, 123, 124, -174, -278, -127, -278, 151, 152,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-278, 150, -2, -121, -4, -278, -278, -278, -278, -278,
	-278, -278, -278, -134, -85, -278, -282, -278, -282, -118,
	-278, -282, -118, -282, -118, -282, -282, -118, -282, -118,
	-282, -282, -118, -278, -278, -278, -278, -278, -278, -278,
	-203, -272, -273, -104, -101, -278, 227, -138, -3, -55,
	-157, 20, 32, -85, -139, -140, -85, -138, 56, -74,
	-76, -79, 60, 61, 94, 12, -192, -191, 23, -189,
	88, 150, 12, -102, 27, -101, -87, -88, -89, -90,
	-104, -128, -278, 12, -94, -95, -101, -103, -194, 82,
	233, -169, -206, -171, -170, 316, 318, 118, -193, -189,
	88, 30, 83, 82, -101, -208, -211, -213, -212, -214,
	-209, -210, 256, 257, 144, 260, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 31, 188, 252, 253,
	254, 255, 272, 273, 274, 275, 276, 277, 278, 279,
	239, 258, 346, 240, 241, 242, 243, 244, 245, 247,
	248, 249, 250, 251, -263, -260, 81, 83, 82, -215,
	81, -80, 164, -260, 165, 165, 165, -55, 335, -235,
	-235, 196, -29, -26, -256, 16, -25, -26, 158, 102,
	103, 155, 81, -224, 81, -233, -263, -260, 81, 29,
	171, 170, -232, -229, -232, -233, -260, -129, -189, -194,
	-260, 29, 29, -162, -189, -162, -162, 21, -162, 21,
	-162, 21, 89, -189, -162, 21, -162, 21, -162, 21,
	-162, 21, -162, 21, 30, 75, 76, 30, 78, 79,
	80, -129, -129, -224, -166, -101, -260, 89, 89, -235,
	-235, 89, 88, 88, 88, -235, -235, 89, 88, -260,
	88, -266, 182, 224, 226, 89, 89, 89, 89, 30,
	88, -267, 30, 464, 463, 465, 466, 467, 89, 30,
	89, 30, 89, -189, 81, -101, -83, 214, 153, 155,
	158, 73, 88, 228, 118, 41, 82, 167, 164, -260,
	-181, 169, -181, -195, -194, -187, 88, -85, -231, 12,
	128, -199, -199, -179, -101, -231, -199, -179, -101, -179,
	-179, -179, -179, -199, -199, -179, -194, -194, -101, -101,
	-101, -101, -101, -101, -101, -204, -204, -204, -180, 126,
	-179, 73, -202, 236, 270, 436, 437, 438, 82, 348,
	-94, 442, 442, 442, 442, 442, 442, -85, -85, -85,
	-85, -119, 98, 110, 99, 100, -112, -120, -124, -127,
	93, 128, 126, 127, 112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-205, -260, 88, 144, -260, -111, -111, -189, -75, 22,
	37, -74, -190, -195, -187, -70, -279, -279, -138, -74,
	-74, -85, -85, -129, 88, -74, -129, 88, -74, -74,
	-69, 22, 37, -132, -133, 114, -129, -279, -112, -189,
	-189, -74, -75, -75, -74, -74, 82, -274, 318, 319,
	440, -197, 199, -196, 23, -194, 88, -122, -121, 88,
	-142, -279, -143, 27, 10, 128, 82, 19, 82, -141,
	25, 26, -142, -113, -189, 89, 92, -86, 82, 12,
	-79, -101, -191, 135, -195, -101, -161, 199, -101, 31,
	82, -97, -99, -98, -100, 63, 67, 69, 64, 65,
	66, 70, -200, 23, -87, -3, -278, -101, -94, -280,
	82, 12, 74, -280, 82, 150, -169, -171, 82, 317,
	319, 320, 73, 101, -85, -217, 143, -242, -241, -240,
	-224, -226, -227, -228, 83, -144, -220, 284, -215, -215,
	-215, -215, -215, -216, -166, -216, -216, -216, 81, 81,
	-215, -215, -215, -215, -218, 81, -218, -218, -219, 81,
	-219, -253, -85, -250, -249, -247, -248, 175, 95, 348,
	74, -245, -141, 89, -83, -182, 169, -251, -248, -260,
	-260, -260, -182, -260, 88, -260, 88, 82, 17, -225,
	-224, -130, 224, -255, 199, -252, -246, 81, 29, -232,
	-233, -233, 150, -260, 82, 27, 106, 106, 106, 106,
	348, 155, 31, -224, -130, -205, 167, -205, -205, 88,
	88, -178, 472, -94, -82, 216, 118, 205, 205, 164,
	164, 218, -101, 229, 230, 228, 21, 217, 219, 221,
	207, -101, -101, -181, 73, -96, -101, 24, -194, -101,
	-179, -179, -101, -179, -179, 88, -101, -189, -66, 318,
	348, 20, -67, 20, 98, 99, 100, -120, -112, -112,
	-112, -73, 189, 109, -279, -279, -74, -74, -278, 150,
	-5, -142, -279, -279, 82, 74, 23, 12, 12, -279,
	12, 12, -279, -279, -74, -135, -133, 116, -85, -279,
	-279, 82, 82, -279, -279, -279, -279, -279, -273, 439,
	319, -105, 71, 168, 72, -278, -196, -279, -157, 39,
	47, 58, -85, -85, -140, -157, -173, 20, 12, 54,
	54, -106, 13, -76, -87, -79, 150, -106, -110, 31,
	54, -3, -278, -278, -164, -168, -129, -88, -89, -89,
	-88, -89, 63, 63, 63, 68, 63, 68, 63, -98,
	-194, -279, -279, -3, -161, 74, -87, -101, -87, -103,
	-194, 135, -170, -172, 321, 318, 324, -260, 88, 82,
	-240, -228, 98, 110, 30, 73, 281, 95, 171, 29,
	170, -221, 285, -216, -216, -217, -260, 88, 144, -217,
	-217, -217, -223, 88, -223, 89, 89, 83, -32, -27,
	-28, 32, 77, -247, -235, 88, 38, -189, 83, -82,
	-101, 110, 73, -251, -251, -251, -194, 16, -159, -189,
	82, 83, -131, 225, -129, 83, -189, 83, -159, -233,
	-190, -189, -278, 164, 30, 30, -130, -131, -217, -260,
	474, 473, 83, 166, 223, -84, 331, 88, 84, -101,
	-101, -101, -101, -101, 158, 155, 208, 167, -94, -101,
	82, -60, 184, 179, -199, -199, 32, 318, 451, 449,
	-73, 109, -112, -112, -279, -279, -75, -190, -138, -157,
	-207, 144, 256, 188, 254, 250, 270, 261, 283, 252,
	284, -205, -207, -112, -112, -112, -112, 345, -138, 117,
	-85, 115, -112, -112, 165, 165, 165, -162, 40, 88,
	88, 59, -101, -136, 14, -85, 135, -142, -163, 73,
	-164, -123, -125, -124, -278, -158, -279, -189, -162, -106,
	82, 118, -92, -91, 73, 74, -93, 73, -91, 63,
	63, -279, -106, -87, -106, -106, 150, 318, 322, 323,
	-240, 98, -112, 10, 88, 29, 29, -217, -217, 83,
	82, 83, 82, 83, 82, -183, 385, 110, -28, -27,
	-235, -235, 89, -260, 166, 24, -101, 73, 73, 73,
	17, 82, -224, -129, 54, -250, 83, -254, -255, -101,
	-111, -131, -101, -81, 214, 222, 81, 85, -262, 74,
	205, 281, 205, -101, -60, -32, -101, -179, -179, 32,
	-260, -112, -279, -142, -279, -215, -215, -215, -219, -215,
	244, -215, 244, -279, -279, 20, 20, 20, 20, -278,
	-65, 341, -85, 82, 82, -278, -278, -278, -279, 88,
	-216, -137, 15, 17, 28, -163, 82, -279, -279, 82,
	54, 150, -279, -138, -168, -85, -85, 81, -85, -138,
	-106, -115, -216, 88, -216, 89, 89, 385, 30, 78,
	79, 80, 30, 75, 76, -101, -101, -101, -101, -159,
	-189, 201, 183, -279, 82, -222, 348, 351, -160, 81,
	83, -259, 348, -261, -260, -189, -189, -189, -157, -216,
	-260, -112, -112, -112, -112, -112, -142, 88, -112, -112,
	-159, -279, -159, -159, -197, -216, -146, -151, -176, -85,
	-121, 29, -125, 54, -3, -189, -123, -189, -142, -159,
	-142, -217, -217, 83, 83, -160, 202, -101, -255, 352,
	352, 23, -159, -258, -257, -190, 81, 74, -279, -279,
	-279, -279, -68, 128, 348, -279, -279, -279, -279, -279,
	-279, -105, -149, 435, -154, 43, -152, -153, 44, -150,
	45, 53, 10, -123, 150, 83, 23, -278, 81, -3,
	83, 82, 118, -159, -101, -279, 346, 70, 349, -146,
	48, 262, -156, -155, 52, 44, -153, 17, 46, 17,
	-164, -189, -3, -112, 198, -159, -58, 348, -257, -239,
	-190, 88, 89, 83, 59, 347, 350, -147, 50, -145,
	49, -145, -155, 17, 17, 88, 17, 88, -58, -279,
	-279, 83, -59, 213, 439, -262, 59, -148, 51, 73,
	101, 88, 88, 88, -269, -270, 73, 176, -259, 348,
	73, 101, -270, 73, 11, 10, 215, 349, -268, 184,
	179, 182, 31, -268, 350, 178, 30, 98,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 822, 0, 558, 558, 558, 558, 558,
	558, 558, 0, 0, 558, -2, -2, 558, 958, 0,
	558, 0, 0, -2, 491, 492, 0, 494, -2, 0,
	0, 503, 1368, 1368, 553, 0, 0, 0, 0, 0,
	558, 1366, 55, 56, 509, 510, 511, 1, 3, 0,
	562, 830, 0, 0, -2, 560, 0, 0, 941, 941,
	941, 0, 86, 87, 0, 0, 0, -2, 90, -2,
	114, 115, 0, 119, 368, 329, 371, 327, 357, -2,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 224, 224, 0, 0, -2, 320,
	320, 320, 0, 0, 0, 354, 943, 274, 224, 224,
	0, 224, 224, 224, 224, 0, 0, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 846, 118, 959, 956, 957, 35, 36, 37,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 0, 935, 0,
	424, 643, 0, 482, 482, 0, 482, 482, 482, 482,
	0, 0, 0, 436, 0, 0, 0, 0, 479, 0,
	0, 455, 457, 0, 479, 0, 466, 482, 1369, 1369,
	1369, 926, 0, 476, 474, 488, 489, 471, 472, 490,
	493, 0, 498, 501, 952, 953, 0, 516, 0, 1175,
	508, 521, 522, 0, 554, 555, 40, 694, 653, 0,
	659, 661, 0, 696, 697, 698, 699, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 727,
	728, 729, 807, 808, 809, 810, 811, 812, 813, 814,
	663, 664, 804, 0, 915, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 795, 0, 764, 764, 764, 764,
	764, 764, 764, 764, 764, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 1368, 0, 531, 0, 0, 822,
	51, 0, 558, 563, 564, 865, 0, 0, 822, 1367,
	0, 0, -2, -2, 574, 580, 581, 582, 583, 584,
	559, 0, 587, 591, 0, 0, 0, 942, 0, 0,
	72, 0, 1331, 919, -2, -2, 0, 0, 954, 955,
	928, -2, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, -2,
	0, 0, 128, 129, 0, 38, 250, 0, 124, 0,
	244, 197, 846, 0, 0, 0, 0, 0, 558, 0,
	936, 109, 110, 116, 117, 224, 224, 0, 118, 118,
	336, 337, 338, 0, 0, -2, 248, 0, 321, 0,
	0, 238, 238, 242, 240, 241, 0, 0, 0, 0,
	0, 0, 348, 0, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 225, 0, 366, 367,
	275, 0, 0, 0, 0, 346, 347, 0, 0, 944,
	945, 0, 0, 224, 224, 0, 0, 0, 0, 224,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 859, 0,
	0, 0, -2, 0, 416, 0, 0, 0, 937, 937,
	423, 0, 425, 426, 0, 0, 427, 0, 479, 479,
	477, 478, 429, 430, 431, 432, 482, 0, 0, 233,
	234, 235, 479, 482, 0, 482, 482, 482, 482, 479,
	479, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 1369, 1369, 485, 482, 463, 464, 467, 468,
	1370, 1371, 973, 469, 470, 927, 499, 502, 519, 517,
	518, 520, 512, 513, 514, 515, 0, 533, 534, 539,
	0, 0, 0, 0, 545, 546, 547, 0, 0, 550,
	551, 552, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 681, 682, 683,
	684, 685, 686, 687, 660, 0, 674, 0, 0, 0,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 0,
	571, 0, 0, 0, 822, 0, 0, 0, 0, 0,
	0, 0, 568, 0, 796, 0, 747, 0, 748, 756,
	0, 749, 757, 750, 758, 751, 752, 759, 753, 760,
	754, 755, 761, 0, 0, 0, 571, 571, 0, 0,
	41, 523, 524, 0, 626, 947, 0, 830, 0, 573,
	868, 0, 0, 831, 823, 824, 827, 830, 0, 596,
	585, 575, 578, 579, 561, 0, 588, 592, 0, 594,
	595, 0, 0, 70, 0, 642, 0, 598, 600, 601,
	602, 624, 0, 0, 0, 0, 66, 68, 643, 0,
	1331, 925, 0, 74, 75, 0, 0, 0, 212, 930,
	931, 932, -2, 231, 0, 136, 204, 148, 149, 150,
	197, 152, 197, 197, 197, 197, 208, 208, 208, 208,
	180, 181, 182, 183, 184, 0, 0, 167, 197, 197,
	197, 197, 187, 188, 189, 190, 191, 192, 193, 194,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 199,
	199, 199, 201, 201, 0, 39, 0, 216, 0, 827,
	0, 859, 939, 949, 0, 0, 0, 939, 92, 0,
	0, 369, 330, 358, 370, 0, 333, 334, -2, 0,
	0, 320, 0, 322, 0, 232, 0, -2, 0, 0,
	0, 238, 242, 239, 242, 230, 243, 350, 804, 0,
	351, 352, 0, 388, 612, 0, 0, 0, 0, 0,
	394, 395, 396, 0, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 322, 0, 355, 0, 276, 277, 0,
	0, 280, 281, 282, 283, 0, 0, 286, 287, 288,
	289, 290, 314, 315, 316, 291, 292, 293, 294, 295,
	296, 297, 308, 309, 310, 311, 312, 313, 298, 299,
	300, 301, 302, 305, 0, 102, 850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 937, 0,
	0, 0, 0, 644, 960, 961, 483, 484, 0, 236,
	237, 482, 482, 433, 456, 0, 482, 437, 458, 438,
	440, 439, 441, 460, 482, 444, 480, 481, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 461, 0,
	462, 0, 0, 500, 504, 505, 506, 507, 0, 0,
	536, 541, 542, 543, 544, 556, 549, 695, 654, 655,
	656, 658, 675, 0, 677, 679, 665, 666, 690, 691,
	692, 0, 0, 0, 0, 688, 670, 0, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	715, 779, 780, 781, 0, 713, 714, 725, 0, 0,
	0, 572, 805, 0, -2, 0, 693, 914, 830, 0,
	0, 0, 0, 698, 807, 0, 698, 807, 0, 0,
	0, 569, 570, 802, 799, 0, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 529,
	0, 646, 0, 627, 0, 629, 630, 0, 948, 532,
	865, 52, 42, 0, 866, 0, 0, 0, 0, 826,
	828, 829, 865, 0, 815, 0, 0, 651, 0, 0,
	576, 48, 593, 589, 0, 651, 0, 0, 641, 0,
	0, 0, 0, 0, 0, 631, 0, 0, 634, 0,
	0, 0, 0, 625, 0, 0, 0, -2, 0, 0,
	0, 62, 63, 0, 0, 0, 920, 73, 0, 0,
	78, 79, 921, 922, 923, 924, 0, 111, -2, 271,
	130, 132, 133, 134, 125, 135, 206, 205, 151, 208,
	208, 174, 175, 212, 0, 212, 212, 212, 0, 0,
	168, 169, 170, 171, 162, 0, 163, 164, 165, 0,
	166, 249, 0, 834, 217, 218, 220, 224, 0, 0,
	0, 245, 246, 0, 850, 0, 0, 0, 950, 949,
	949, 949, 0, 120, 121, 122, 123, 118, 0, 0,
	126, 324, 0, 0, 0, 247, 0, 0, 226, 242,
	227, 228, 0, 353, 0, 0, 390, 391, 392, 393,
	0, 0, 0, 322, 324, 212, 0, 278, 279, 284,
	285, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 847, 848, 849,
	0, 0, 417, 0, 0, 263, 64, 938, 422, 479,
	443, 459, 479, 435, 442, 486, 465, 496, 540, 0,
	0, 0, 548, 0, 676, 678, 680, 667, 688, 671,
	0, 668, 0, 0, 662, 730, 0, 0, 571, 0,
	822, 865, 734, 735, 0, 0, 0, 0, 0, 772,
	0, 0, 773, 0, 822, 0, 800, 0, 0, 746,
	766, 0, 0, 767, 768, 769, 770, 771, 525, 528,
	530, 606, 0, 0, 0, 0, 628, 946, 44, 0,
	0, 0, 832, 833, 825, 43, 0, 933, 934, 816,
	817, 818, 0, 586, 597, 577, 0, 830, 908, 0,
	0, 900, 0, 0, 651, 916, 0, 599, 620, 622,
	0, 617, 632, 633, 635, 0, 637, 0, 639, 640,
	603, 604, 605, 0, 651, 0, 651, 67, 651, 69,
	0, 645, 76, 77, 0, 0, 83, 213, 214, 118,
	273, 131, 137, 0, 0, 0, 141, 0, 0, 144,
	146, 147, 207, 212, 212, 176, 209, 210, 211, 177,
	178, 179, 0, 195, 0, 0, 0, 266, 88, 838,
	837, 224, 224, 219, 0, 222, 0, 951, 198, 0,
	101, 0, 0, 0, 0, 0, 107, 0, 328, 610,
	0, 339, 340, 0, 323, 387, 0, 216, 0, 229,
	805, 613, 0, 0, 341, 0, 324, 344, 345, 356,
	306, 307, 304, 0, 0, 860, 861, 0, 864, 93,
	376, 378, 377, 381, 0, 0, 374, 0, 263, 834,
	0, 421, 264, 265, 482, 482, 535, 0, 538, 0,
	669, 0, 689, 672, 731, 732, 0, 806, 830, 46,
	0, 197, 197, 785, 197, 201, 788, 197, 790, 197,
	793, 0, 0, 0, 0, 0, 0, 0, 797, 745,
	803, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	870, 867, 45, 820, 0, 652, 590, 49, 53, 0,
	908, 899, 910, 912, 0, 0, 0, 904, 0, 822,
	0, 0, 614, 621, 0, 0, 615, 0, 616, 636,
	638, -2, 822, 651, 60, 61, 0, 80, 81, 82,
	272, 138, 139, 0, 142, 143, 145, 172, 173, 208,
	0, 208, 0, 202, 0, 255, 267, 0, 835, 836,
	0, 0, 221, 223, 0, 940, 103, 0, 0, 0,
	0, 0, 127, 325, 0, 215, 0, 0, 412, 409,
	342, 343, 608, 851, 852, 853, 0, 863, 96, 0,
	0, 0, 0, 418, 419, 420, 65, 428, 434, 537,
	557, 673, 733, 865, 736, 782, 208, 786, 787, 789,
	791, 792, 794, 738, 737, 0, 0, 0, 0, 0,
	830, 0, 801, 0, 0, 0, 0, 0, 626, 208,
	890, 50, 0, 0, 0, 54, 0, 913, 0, 0,
	0, 0, 71, 830, 917, 918, 618, 0, 623, 830,
	59, 140, 212, 196, 212, 0, 0, 268, 839, 840,
	841, 842, 843, 844, 845, 608, 104, 105, 106, 331,
	611, 0, 0, 389, 0, 397, 0, 0, 0, 0,
	862, 375, 0, 94, 95, 0, 0, 380, 47, 783,
	784, 0, 0, 0, 0, 774, 0, 798, 0, 0,
	0, 648, 0, 0, 646, 872, 871, 884, 897, 821,
	819, 0, 911, 0, 903, 906, 902, 905, 57, 0,
	58, 185, 186, 200, 203, 0, 0, 0, 413, 410,
	411, 0, 0, 97, 98, 0, 0, 0, 739, 741,
	740, 742, 0, 0, 0, 744, 762, 763, 647, 649,
	650, 607, 890, 0, 883, 0, -2, 892, 0, 0,
	0, 898, 0, 901, 0, 619, 0, 0, 0, 854,
	609, 0, 0, 0, 382, 743, 0, 0, 0, 877,
	875, 875, 885, 886, 0, 0, 893, 0, 0, 0,
	909, 907, 854, 0, 0, 0, 372, 856, 99, 100,
	317, 318, 319, 93, 775, 0, 778, 880, 0, 873,
	876, 874, 887, 0, 0, 894, 0, 896, 89, 414,
	415, 251, 0, 857, 858, 96, 776, 869, 0, 878,
	879, 888, 889, 895, 252, 253, 0, 0, 379, 0,
	881, 882, 254, 0, 0, 0, 855, 0, 256, 258,
	259, 0, 0, 257, 777, 260, 261, 262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 475,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:425
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:430
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:431
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:435
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:468
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:478
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:482
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:487
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:491
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:497
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:503
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:509
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:518
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:522
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:526
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:549
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:557
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:563
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:569
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:577
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:583
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:587
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:606
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:618
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:622
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:628
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:634
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:638
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:642
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:646
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:656
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:660
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:666
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:670
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:676
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:689
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:695
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:705
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:711
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:721
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:725
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:729
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:735
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:739
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:743
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:747
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:753
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:757
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:763
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:776
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:785
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:805
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:815
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:820
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:825
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:831
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:848
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:855
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:862
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:867
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:872
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:877
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:884
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:891
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:902
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:912
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:918
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:922
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:926
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:930
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:935
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:939
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:945
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:949
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:955
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:959
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:966
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:970
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:976
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:986
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:991
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1000
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1019
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1029
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1033
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1039
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1045
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1050
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1055
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1060
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1065
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyPrimary
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1070
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1075
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUniqueKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1080
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUnique
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1153
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1233
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1237
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1241
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1284
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1312
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1317
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1321
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1329
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1339
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1347
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1356
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1360
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = ""
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1397
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1406
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1412
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1422
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1426
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1431
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1435
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1441
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1451
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1455
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1459
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1463
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1467
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1535
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1545
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1551
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1555
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1561
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1565
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1571
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1575
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1579
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnUpdate: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1583
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion(), OnUpdate: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1589
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1595
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1601
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1607
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1611
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1615
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1619
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1623
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1641
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1649
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1658
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1664
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1672
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1678
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1682
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1696
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1704
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1708
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1712
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1716
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1720
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1724
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1855
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1864
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1873
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1881
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1889
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1895
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1899
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1903
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1909
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1913
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1917
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1921
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1925
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1929
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1933
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1937
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1941
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1945
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1949
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1953
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1957
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1961
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1965
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1969
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1973
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1977
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1981
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1985
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1989
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1993
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1999
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2009
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2013
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2017
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2021
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2025
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2029
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2033
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2037
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2041
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2047
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2053
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2060
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2067
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2073
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2077
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2084
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2091
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2103
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2113
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2117
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2121
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2134
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2144
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2148
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2159
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2166
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2173
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2180
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2188
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2192
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2196
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2200
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2204
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2208
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2212
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2216
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2220
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2224
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2228
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2232
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2236
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2240
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2244
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2248
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2252
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2256
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2260
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2264
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2268
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2272
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2292
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2302
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2306
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2312
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2318
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2322
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 419:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2328
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2332
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2341
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2345
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2351
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2355
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2360
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2366
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2370
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2374
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2378
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2382
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2386
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2390
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2394
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2398
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2402
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2406
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2410
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2414
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2418
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2422
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2426
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2430
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2434
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2438
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2442
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2446
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2450
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2454
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2458
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2462
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2466
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2470
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2474
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2478
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2482
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2486
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2490
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2494
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2498
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2502
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2506
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2511
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2515
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2519
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2523
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2527
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2532
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2546
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2550
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2554
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2570
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2574
		{
			yyVAL.str = "extended "
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2584
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2600
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2618
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2622
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2632
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2638
		{
			yyVAL.empty = struct{}{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2642
		{
			yyVAL.empty = struct{}{}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.empty = struct{}{}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2652
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2656
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2662
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2666
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2672
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2678
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2682
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2687
		{
			yyVAL.empty = struct{}{}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.empty = struct{}{}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.empty = struct{}{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.empty = struct{}{}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2705
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2710
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2714
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2718
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2722
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2726
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2730
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = yyDollar[1].str
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.str = yyDollar[1].str
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = yyDollar[1].str
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2750
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2758
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2767
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2791
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2795
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2801
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2807
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2811
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2817
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2823
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2827
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2831
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2835
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2841
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2847
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2857
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2861
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2869
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2873
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2938
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2942
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2946
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2951
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2960
		{
			setAllowComments(yylex, true)
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2970
		{
			yyVAL.strs = nil
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2980
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2984
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2988
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2997
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.str = SQLCacheStr
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3023
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3028
		{
			yyVAL.strs = nil
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3036
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3040
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3044
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3054
		{
			yyVAL.str = SQLCacheStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = DistinctStr
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = DistinctStr
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = StraightJoinHint
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3080
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3090
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3094
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3098
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3102
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3107
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3111
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3115
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3122
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3127
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3131
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3137
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3141
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3151
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3155
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3159
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3165
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3171
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3175
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3184
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3190
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3200
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3204
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3217
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3221
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3225
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3229
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3237
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3241
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3247
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3252
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3257
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3265
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3272
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3278
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3282
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3286
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3292
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3298
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3302
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3306
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3310
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3316
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3320
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3330
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3334
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3359
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3363
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3367
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3371
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3380
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3386
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3390
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3394
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3398
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3402
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3406
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3410
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3414
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3420
		{
			yyVAL.str = ""
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3424
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3430
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3434
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3440
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3444
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3448
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3452
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3456
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3460
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3464
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3468
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3472
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3476
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3482
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3486
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3490
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3494
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3498
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3502
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3508
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3512
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3516
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3520
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3524
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3528
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3532
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3541
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3547
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3551
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3555
		{
			yyLOCAL = ListArg(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3562
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3568
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3572
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3578
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3582
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3586
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3594
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3598
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3602
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3606
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3610
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3614
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3618
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3622
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3626
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3630
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3634
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3638
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3642
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3646
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3650
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3654
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3658
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3662
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3666
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3670
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3674
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3678
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3682
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3686
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3690
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3694
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3712
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3716
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3720
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3724
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3742
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3746
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3750
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3754
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3758
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3762
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3766
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3770
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3774
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3778
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3782
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3786
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3796
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3800
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3804
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3809
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3814
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3819
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3825
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3830
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3835
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3839
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3843
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3848
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3853
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3858
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3862
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3866
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3886
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3890
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3894
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3898
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3902
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3906
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3910
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3916
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3920
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3924
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3928
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3932
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3952
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3956
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3960
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3964
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3968
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3972
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3978
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3990
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3994
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3998
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4002
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4011
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4016
		{
			yyVAL.str = string("")
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4026
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4036
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4045
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4051
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4055
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4059
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4065
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4069
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4073
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4077
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4081
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4085
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4089
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4094
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4100
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4109
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4113
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4123
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4132
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4141
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4147
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4151
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4157
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4162
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4166
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4170
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4179
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4183
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4187
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4196
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4200
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4204
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4208
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4215
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4219
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4223
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4227
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4233
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4237
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4241
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4246
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4250
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4254
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = yyDollar[3].str
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = yyDollar[2].str
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = "cascaded"
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = ""
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = yyDollar[3].str
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4331
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4335
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4339
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4348
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4352
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4356
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = " header"
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = " manifest on"
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = " manifest off"
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = " overwrite on"
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = " overwrite off"
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = yyDollar[1].str
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4458
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = " optionally"
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4494
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4498
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4502
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4506
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4510
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4516
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4520
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4528
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4537
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4543
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4547
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4553
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4557
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4563
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4579
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4583
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4589
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4595
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4605
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4609
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4613
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4617
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4621
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = "charset"
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4656
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4658
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4661
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4666
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4673
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4676
		{
			yyVAL.empty = struct{}{}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.empty = struct{}{}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4680
		{
			yyVAL.empty = struct{}{}
		}
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4684
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4693
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4700
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4704
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4736
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4747
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5185
		{
			decNesting(yylex)
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5190
		{
			skipToEnd(yylex)
		}
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5195
		{
			skipToEnd(yylex)
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			skipToEnd(yylex)
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
