// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const VALUES = 57376
const LAST_INSERT_ID = 57377
const NEXT = 57378
const VALUE = 57379
const SHARE = 57380
const MODE = 57381
const SQL_NO_CACHE = 57382
const SQL_CACHE = 57383
const JOIN = 57384
const STRAIGHT_JOIN = 57385
const LEFT = 57386
const RIGHT = 57387
const INNER = 57388
const OUTER = 57389
const CROSS = 57390
const NATURAL = 57391
const USE = 57392
const FORCE = 57393
const ON = 57394
const USING = 57395
const ID = 57396
const HEX = 57397
const STRING = 57398
const INTEGRAL = 57399
const FLOAT = 57400
const HEXNUM = 57401
const VALUE_ARG = 57402
const LIST_ARG = 57403
const COMMENT = 57404
const COMMENT_KEYWORD = 57405
const BIT_LITERAL = 57406
const NULL = 57407
const TRUE = 57408
const FALSE = 57409
const OFF = 57410
const OR = 57411
const AND = 57412
const NOT = 57413
const BETWEEN = 57414
const CASE = 57415
const WHEN = 57416
const THEN = 57417
const ELSE = 57418
const END = 57419
const LE = 57420
const GE = 57421
const NE = 57422
const NULL_SAFE_EQUAL = 57423
const IS = 57424
const LIKE = 57425
const REGEXP = 57426
const IN = 57427
const SHIFT_LEFT = 57428
const SHIFT_RIGHT = 57429
const DIV = 57430
const MOD = 57431
const UNARY = 57432
const COLLATE = 57433
const BINARY = 57434
const UNDERSCORE_BINARY = 57435
const UNDERSCORE_UTF8MB4 = 57436
const INTERVAL = 57437
const JSON_EXTRACT_OP = 57438
const JSON_UNQUOTE_EXTRACT_OP = 57439
const CREATE = 57440
const ALTER = 57441
const DROP = 57442
const RENAME = 57443
const ANALYZE = 57444
const ADD = 57445
const FLUSH = 57446
const SCHEMA = 57447
const TABLE = 57448
const INDEX = 57449
const VIEW = 57450
const TO = 57451
const IGNORE = 57452
const IF = 57453
const UNIQUE = 57454
const PRIMARY = 57455
const COLUMN = 57456
const SPATIAL = 57457
const FULLTEXT = 57458
const KEY_BLOCK_SIZE = 57459
const ACTION = 57460
const CASCADE = 57461
const CONSTRAINT = 57462
const FOREIGN = 57463
const NO = 57464
const REFERENCES = 57465
const RESTRICT = 57466
const SHOW = 57467
const DESCRIBE = 57468
const EXPLAIN = 57469
const DATE = 57470
const ESCAPE = 57471
const REPAIR = 57472
const OPTIMIZE = 57473
const TRUNCATE = 57474
const MAXVALUE = 57475
const PARTITION = 57476
const REORGANIZE = 57477
const LESS = 57478
const THAN = 57479
const PROCEDURE = 57480
const TRIGGER = 57481
const VINDEX = 57482
const VINDEXES = 57483
const STATUS = 57484
const VARIABLES = 57485
const WARNINGS = 57486
const BEGIN = 57487
const START = 57488
const TRANSACTION = 57489
const COMMIT = 57490
const ROLLBACK = 57491
const BIT = 57492
const TINYINT = 57493
const SMALLINT = 57494
const MEDIUMINT = 57495
const INT = 57496
const INTEGER = 57497
const BIGINT = 57498
const INTNUM = 57499
const REAL = 57500
const DOUBLE = 57501
const FLOAT_TYPE = 57502
const DECIMAL = 57503
const NUMERIC = 57504
const TIME = 57505
const TIMESTAMP = 57506
const DATETIME = 57507
const YEAR = 57508
const CHAR = 57509
const VARCHAR = 57510
const BOOL = 57511
const CHARACTER = 57512
const VARBINARY = 57513
const NCHAR = 57514
const TEXT = 57515
const TINYTEXT = 57516
const MEDIUMTEXT = 57517
const LONGTEXT = 57518
const BLOB = 57519
const TINYBLOB = 57520
const MEDIUMBLOB = 57521
const LONGBLOB = 57522
const JSON = 57523
const ENUM = 57524
const GEOMETRY = 57525
const POINT = 57526
const LINESTRING = 57527
const POLYGON = 57528
const GEOMETRYCOLLECTION = 57529
const MULTIPOINT = 57530
const MULTILINESTRING = 57531
const MULTIPOLYGON = 57532
const NULLX = 57533
const AUTO_INCREMENT = 57534
const APPROXNUM = 57535
const SIGNED = 57536
const UNSIGNED = 57537
const ZEROFILL = 57538
const COLLATION = 57539
const DATABASES = 57540
const SCHEMAS = 57541
const TABLES = 57542
const VITESS_KEYSPACES = 57543
const VITESS_SHARDS = 57544
const VITESS_TABLETS = 57545
const VSCHEMA = 57546
const VSCHEMA_TABLES = 57547
const VITESS_TARGET = 57548
const FULL = 57549
const PROCESSLIST = 57550
const COLUMNS = 57551
const FIELDS = 57552
const ENGINES = 57553
const PLUGINS = 57554
const NAMES = 57555
const CHARSET = 57556
const GLOBAL = 57557
const SESSION = 57558
const ISOLATION = 57559
const LEVEL = 57560
const READ = 57561
const WRITE = 57562
const ONLY = 57563
const REPEATABLE = 57564
const COMMITTED = 57565
const UNCOMMITTED = 57566
const SERIALIZABLE = 57567
const CURRENT_TIMESTAMP = 57568
const DATABASE = 57569
const CURRENT_DATE = 57570
const CURRENT_TIME = 57571
const LOCALTIME = 57572
const LOCALTIMESTAMP = 57573
const UTC_DATE = 57574
const UTC_TIME = 57575
const UTC_TIMESTAMP = 57576
const REPLACE = 57577
const CONVERT = 57578
const CAST = 57579
const SUBSTR = 57580
const SUBSTRING = 57581
const GROUP_CONCAT = 57582
const SEPARATOR = 57583
const TIMESTAMPADD = 57584
const TIMESTAMPDIFF = 57585
const MATCH = 57586
const AGAINST = 57587
const BOOLEAN = 57588
const LANGUAGE = 57589
const WITH = 57590
const QUERY = 57591
const EXPANSION = 57592
const UNUSED = 57593

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VSCHEMA_TABLES",
	"VITESS_TARGET",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 29,
	-2, 4,
	-1, 37,
	159, 300,
	160, 300,
	-2, 290,
	-1, 270,
	112, 645,
	-2, 641,
	-1, 271,
	112, 646,
	-2, 642,
	-1, 336,
	82, 820,
	-2, 60,
	-1, 337,
	82, 776,
	-2, 61,
	-1, 342,
	82, 755,
	-2, 607,
	-1, 344,
	82, 797,
	-2, 609,
	-1, 615,
	1, 352,
	5, 352,
	12, 352,
	13, 352,
	14, 352,
	15, 352,
	17, 352,
	19, 352,
	30, 352,
	31, 352,
	42, 352,
	43, 352,
	44, 352,
	45, 352,
	46, 352,
	48, 352,
	49, 352,
	52, 352,
	53, 352,
	55, 352,
	56, 352,
	269, 352,
	-2, 370,
	-1, 618,
	53, 43,
	55, 43,
	-2, 45,
	-1, 761,
	112, 648,
	-2, 644,
	-1, 984,
	5, 30,
	-2, 436,
	-1, 1016,
	5, 29,
	-2, 581,
	-1, 1273,
	5, 30,
	-2, 582,
	-1, 1329,
	5, 29,
	-2, 584,
	-1, 1410,
	5, 30,
	-2, 585,
}

const yyPrivate = 57344

const yyLast = 12875

var yyAct = [...]int{

	271, 1226, 1444, 1434, 1398, 1108, 571, 1293, 1306, 275,
	1019, 1341, 1166, 1037, 288, 1200, 1020, 845, 1167, 1163,
	57, 911, 864, 249, 948, 868, 442, 1043, 1062, 867,
	1173, 473, 81, 301, 877, 897, 210, 1134, 976, 210,
	1179, 786, 341, 240, 725, 570, 3, 881, 796, 628,
	793, 1088, 843, 302, 51, 1079, 832, 612, 814, 847,
	795, 763, 611, 907, 503, 509, 335, 210, 81, 627,
	515, 273, 210, 958, 210, 825, 258, 330, 332, 523,
	585, 56, 1437, 1421, 1432, 1408, 1429, 586, 241, 242,
	243, 244, 1227, 1420, 247, 1407, 1156, 248, 1265, 338,
	447, 1195, 1196, 1194, 475, 51, 859, 860, 629, 891,
	630, 858, 262, 254, 1373, 536, 535, 545, 546, 538,
	539, 540, 541, 542, 543, 544, 537, 61, 313, 547,
	319, 320, 317, 318, 316, 315, 314, 205, 201, 202,
	203, 496, 492, 1050, 321, 322, 1049, 246, 245, 1051,
	493, 490, 491, 63, 64, 65, 66, 67, 197, 1070,
	199, 890, 1296, 1312, 898, 1248, 1246, 239, 485, 486,
	477, 1113, 479, 698, 700, 1431, 1428, 1135, 1399, 1111,
	1107, 826, 1391, 277, 460, 536, 535, 545, 546, 538,
	539, 540, 541, 542, 543, 544, 537, 1112, 210, 547,
	495, 210, 476, 478, 882, 1110, 1452, 210, 699, 497,
	1095, 461, 449, 210, 1137, 1342, 81, 199, 81, 81,
	1350, 81, 81, 1104, 81, 1115, 81, 704, 1344, 1106,
	1448, 701, 691, 1038, 1040, 81, 884, 1189, 977, 1093,
	1188, 884, 1187, 445, 452, 212, 200, 1139, 942, 1143,
	930, 1138, 1380, 1136, 198, 559, 560, 1276, 1141, 204,
	1121, 994, 970, 735, 929, 81, 527, 1140, 467, 472,
	1063, 472, 472, 511, 472, 472, 865, 472, 547, 472,
	1142, 1144, 537, 770, 522, 547, 732, 1374, 472, 499,
	500, 474, 934, 898, 1212, 70, 1343, 768, 769, 767,
	512, 928, 520, 726, 1389, 1359, 1094, 950, 51, 1406,
	1039, 1099, 1096, 1089, 1097, 1092, 443, 884, 522, 1090,
	1091, 1351, 1349, 556, 1177, 1105, 558, 1103, 210, 210,
	210, 71, 883, 1098, 81, 941, 1446, 883, 940, 1447,
	81, 1445, 631, 989, 1158, 1213, 443, 817, 815, 441,
	1003, 925, 922, 923, 569, 921, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 338, 584, 587, 587, 587,
	593, 587, 587, 593, 587, 601, 602, 603, 604, 605,
	606, 610, 616, 513, 727, 949, 932, 935, 463, 464,
	465, 1268, 457, 521, 520, 588, 590, 592, 594, 596,
	598, 599, 589, 591, 815, 595, 597, 619, 600, 693,
	522, 887, 625, 883, 753, 755, 756, 888, 880, 878,
	754, 879, 927, 1453, 521, 520, 876, 882, 448, 536,
	535, 545, 546, 538, 539, 540, 541, 542, 543, 544,
	537, 522, 210, 547, 926, 1068, 988, 81, 987, 967,
	968, 969, 210, 210, 81, 454, 557, 455, 210, 54,
	456, 210, 1454, 1394, 210, 521, 520, 517, 210, 766,
	81, 81, 738, 739, 1412, 81, 81, 81, 210, 81,
	81, 1302, 522, 1301, 1083, 1082, 81, 81, 931, 535,
	545, 546, 538, 539, 540, 541, 542, 543, 544, 537,
	472, 196, 547, 933, 1071, 450, 451, 472, 22, 787,
	713, 788, 615, 1387, 1052, 81, 1053, 1414, 300, 210,
	521, 520, 1390, 472, 472, 81, 1323, 1299, 472, 472,
	472, 1118, 472, 472, 502, 740, 1080, 522, 705, 472,
	472, 711, 538, 539, 540, 541, 542, 543, 544, 537,
	79, 443, 547, 540, 541, 542, 543, 544, 537, 760,
	1229, 547, 1347, 1430, 764, 1063, 327, 328, 253, 81,
	761, 536, 535, 545, 546, 538, 539, 540, 541, 542,
	543, 544, 537, 1416, 502, 547, 340, 1058, 805, 809,
	742, 521, 520, 789, 816, 710, 501, 709, 1160, 1347,
	1402, 759, 81, 81, 757, 1347, 502, 502, 522, 210,
	1347, 1381, 51, 1347, 1346, 1291, 1290, 210, 210, 800,
	694, 210, 210, 1278, 502, 81, 734, 573, 1275, 502,
	1356, 790, 791, 1219, 1218, 801, 802, 692, 81, 1215,
	1216, 811, 545, 546, 538, 539, 540, 541, 542, 543,
	544, 537, 812, 689, 547, 822, 338, 1215, 1214, 982,
	502, 829, 502, 733, 821, 872, 823, 824, 469, 869,
	844, 798, 502, 853, 616, 638, 637, 622, 462, 1355,
	521, 520, 1164, 1209, 24, 1176, 1044, 24, 899, 900,
	901, 855, 210, 81, 851, 81, 856, 522, 1044, 81,
	81, 210, 210, 58, 210, 210, 885, 1124, 210, 81,
	913, 1014, 1328, 828, 765, 1015, 852, 998, 621, 623,
	996, 621, 993, 1176, 991, 210, 798, 210, 210, 829,
	210, 210, 54, 24, 340, 54, 340, 340, 829, 340,
	340, 1176, 340, 982, 340, 1271, 472, 1267, 472, 909,
	910, 982, 1358, 340, 829, 1217, 1054, 893, 894, 895,
	896, 997, 472, 857, 995, 1008, 992, 760, 990, 1007,
	982, 621, 624, 904, 905, 906, 736, 703, 761, 255,
	54, 54, 1422, 525, 1308, 536, 535, 545, 546, 538,
	539, 540, 541, 542, 543, 544, 537, 892, 1283, 547,
	615, 764, 959, 912, 615, 960, 1205, 1057, 966, 908,
	1180, 1181, 1439, 903, 971, 291, 290, 293, 294, 295,
	296, 902, 1109, 915, 292, 297, 1435, 54, 1207, 972,
	210, 210, 210, 210, 210, 1183, 1164, 1084, 1021, 730,
	729, 707, 210, 1031, 1186, 210, 1029, 1185, 1032, 210,
	748, 1030, 340, 210, 1033, 981, 838, 839, 633, 1028,
	741, 1027, 1426, 834, 837, 838, 839, 835, 81, 836,
	840, 1016, 1002, 1000, 259, 260, 1419, 1120, 955, 1017,
	1018, 1046, 1424, 616, 616, 616, 616, 616, 1023, 1024,
	800, 1026, 1022, 1055, 516, 1025, 965, 1034, 844, 869,
	1041, 964, 1075, 504, 636, 1045, 616, 1047, 1042, 514,
	1064, 470, 918, 1269, 1067, 505, 81, 81, 797, 799,
	1074, 1396, 1076, 1077, 1078, 1395, 1326, 1060, 1061, 1072,
	1073, 1065, 1059, 1304, 706, 842, 256, 257, 1261, 502,
	516, 963, 250, 1363, 251, 1362, 81, 58, 1310, 962,
	1044, 765, 1021, 1114, 494, 1441, 1440, 1441, 724, 1081,
	518, 1377, 210, 1297, 1087, 340, 731, 60, 62, 620,
	472, 81, 340, 55, 1100, 1, 536, 535, 545, 546,
	538, 539, 540, 541, 542, 543, 544, 537, 340, 340,
	547, 1433, 1117, 340, 340, 340, 1228, 340, 340, 472,
	1305, 924, 1126, 1397, 340, 340, 1340, 1199, 875, 866,
	69, 440, 1128, 615, 615, 615, 615, 615, 81, 81,
	68, 1157, 1127, 1388, 1021, 1165, 1151, 1146, 615, 874,
	1145, 1133, 873, 744, 1348, 1295, 615, 761, 886, 1069,
	889, 1206, 81, 525, 1066, 1393, 340, 1175, 644, 1168,
	642, 268, 643, 641, 646, 81, 645, 81, 81, 640,
	224, 333, 841, 1170, 1191, 632, 1184, 914, 519, 1169,
	72, 51, 1190, 1193, 1102, 1101, 920, 488, 471, 489,
	226, 555, 1198, 961, 1197, 210, 869, 792, 869, 1203,
	1204, 1048, 339, 1202, 1171, 1210, 1211, 807, 807, 737,
	508, 1361, 210, 807, 1309, 1001, 582, 813, 81, 276,
	752, 81, 289, 81, 81, 286, 210, 287, 743, 1013,
	819, 820, 81, 529, 274, 210, 266, 614, 607, 833,
	831, 830, 1221, 1182, 1178, 613, 1123, 979, 1231, 1264,
	1372, 980, 1235, 340, 1222, 747, 1224, 26, 984, 985,
	986, 1236, 59, 1126, 261, 19, 340, 18, 17, 999,
	20, 1244, 16, 15, 1005, 14, 1006, 458, 30, 1009,
	1010, 1011, 1012, 21, 13, 12, 11, 1237, 616, 10,
	9, 8, 7, 6, 5, 1270, 1021, 1262, 4, 252,
	23, 1036, 2, 1280, 0, 0, 1279, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	1263, 340, 0, 340, 0, 1289, 0, 936, 937, 0,
	0, 81, 0, 1055, 0, 0, 0, 340, 81, 869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 1286, 1287, 0, 1241, 1242, 0, 1243, 0,
	1298, 1245, 1300, 1247, 340, 0, 264, 0, 0, 1307,
	0, 536, 535, 545, 546, 538, 539, 540, 541, 542,
	543, 544, 537, 0, 472, 547, 81, 81, 1311, 81,
	0, 0, 0, 0, 81, 0, 81, 81, 81, 210,
	1327, 1335, 81, 1336, 1337, 1338, 480, 481, 0, 482,
	483, 0, 484, 1334, 487, 1168, 1339, 1345, 615, 81,
	0, 1292, 1352, 498, 0, 0, 1360, 0, 0, 0,
	1329, 1353, 0, 1354, 0, 1169, 0, 0, 1330, 1132,
	561, 562, 563, 564, 565, 566, 567, 568, 0, 0,
	0, 1378, 0, 0, 0, 0, 0, 807, 81, 0,
	0, 0, 1386, 1385, 0, 0, 0, 0, 1357, 81,
	81, 0, 1168, 0, 0, 0, 0, 1400, 0, 0,
	1404, 0, 0, 0, 0, 0, 1379, 0, 0, 0,
	0, 81, 1169, 0, 51, 1401, 340, 1021, 1409, 0,
	1307, 869, 210, 0, 0, 834, 837, 838, 839, 835,
	81, 836, 840, 0, 507, 1180, 1181, 0, 1418, 0,
	1258, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	1425, 1423, 0, 81, 0, 0, 0, 0, 0, 0,
	1427, 0, 0, 0, 1085, 340, 0, 1438, 0, 0,
	208, 0, 0, 238, 1449, 0, 0, 0, 536, 535,
	545, 546, 538, 539, 540, 541, 542, 543, 544, 537,
	0, 807, 547, 0, 340, 0, 0, 0, 265, 0,
	0, 208, 0, 0, 0, 1238, 208, 0, 208, 0,
	0, 0, 1240, 0, 0, 1436, 0, 0, 0, 340,
	0, 0, 0, 1249, 1250, 1251, 0, 1254, 0, 0,
	1257, 0, 1260, 0, 0, 0, 0, 506, 510, 0,
	0, 0, 0, 340, 0, 0, 0, 1272, 1273, 1274,
	0, 1277, 0, 0, 528, 690, 0, 0, 0, 0,
	0, 0, 697, 807, 0, 0, 1172, 1174, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 715,
	0, 0, 0, 716, 717, 718, 0, 720, 721, 572,
	1174, 0, 0, 0, 722, 723, 0, 0, 583, 0,
	0, 0, 0, 340, 0, 340, 1201, 0, 0, 0,
	0, 762, 0, 0, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 0,
	0, 0, 208, 1255, 502, 208, 0, 0, 0, 0,
	0, 208, 1322, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 1230,
	0, 1232, 1233, 0, 0, 0, 0, 0, 0, 818,
	340, 536, 535, 545, 546, 538, 539, 540, 541, 542,
	543, 544, 537, 0, 0, 547, 0, 0, 1252, 502,
	0, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 0,
	0, 0, 1375, 1376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 1383, 1384, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 536, 535, 545, 546,
	538, 539, 540, 541, 542, 543, 544, 537, 617, 0,
	547, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	1405, 0, 0, 0, 1294, 0, 0, 1410, 0, 0,
	0, 0, 208, 208, 208, 0, 0, 0, 1129, 340,
	0, 0, 0, 0, 207, 1415, 340, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 221, 536, 535,
	545, 546, 538, 539, 540, 541, 542, 543, 544, 537,
	0, 917, 547, 919, 0, 331, 0, 750, 751, 0,
	444, 234, 446, 0, 0, 0, 0, 946, 0, 0,
	1450, 1451, 0, 0, 1331, 1332, 0, 1333, 0, 0,
	0, 0, 1294, 0, 1294, 1294, 1294, 0, 0, 0,
	1201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	973, 974, 975, 0, 0, 0, 0, 1294, 0, 0,
	572, 0, 213, 803, 804, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 208, 225, 220, 0,
	0, 0, 0, 0, 0, 0, 208, 208, 0, 0,
	0, 0, 208, 0, 0, 208, 1392, 0, 208, 0,
	0, 0, 712, 0, 0, 0, 0, 340, 340, 223,
	0, 0, 208, 0, 1259, 233, 0, 0, 863, 0,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 453, 0, 0, 459,
	0, 214, 0, 0, 0, 466, 0, 0, 1417, 0,
	0, 468, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 227, 217,
	218, 1294, 228, 229, 230, 232, 0, 231, 237, 0,
	0, 0, 219, 222, 0, 215, 236, 235, 536, 535,
	545, 546, 538, 539, 540, 541, 542, 543, 544, 537,
	0, 0, 547, 0, 265, 0, 0, 0, 0, 265,
	265, 0, 0, 808, 808, 265, 0, 0, 0, 808,
	956, 957, 0, 510, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 265,
	265, 265, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 208, 849, 0, 1116, 208, 208, 0, 0, 1130,
	1131, 0, 0, 0, 0, 0, 609, 0, 618, 0,
	0, 0, 1147, 1148, 1149, 1150, 0, 1152, 1153, 1154,
	1155, 0, 0, 0, 0, 983, 0, 0, 0, 1161,
	1162, 0, 0, 0, 0, 531, 0, 534, 0, 0,
	0, 0, 1004, 548, 549, 550, 551, 552, 553, 554,
	0, 532, 533, 530, 536, 535, 545, 546, 538, 539,
	540, 541, 542, 543, 544, 537, 208, 0, 547, 0,
	0, 0, 0, 0, 0, 208, 208, 0, 208, 208,
	0, 0, 208, 1256, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 951, 952, 0, 208, 208, 0, 0, 0, 0,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	695, 696, 0, 0, 0, 0, 702, 0, 0, 331,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 1239, 0, 0, 0, 0, 719, 536, 535, 545,
	546, 538, 539, 540, 541, 542, 543, 544, 537, 265,
	1253, 547, 0, 0, 0, 0, 0, 1119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 749, 0, 0,
	0, 0, 0, 808, 208, 208, 208, 208, 208, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 208,
	0, 0, 0, 849, 0, 0, 0, 208, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 535, 545, 546, 538, 539,
	540, 541, 542, 543, 544, 537, 0, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 1192, 0, 0, 1313, 1314, 661, 1315, 1316, 0,
	1317, 1318, 978, 1319, 1320, 1321, 0, 827, 0, 1324,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	854, 0, 536, 535, 545, 546, 538, 539, 540, 541,
	542, 543, 544, 537, 0, 0, 547, 808, 536, 535,
	545, 546, 538, 539, 540, 541, 542, 543, 544, 537,
	0, 0, 547, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 649, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	916, 0, 0, 0, 0, 0, 0, 0, 0, 938,
	939, 0, 943, 944, 0, 0, 945, 1266, 0, 808,
	0, 662, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 0, 0, 947, 1281, 0, 0, 1282, 953, 954,
	1284, 0, 0, 675, 678, 679, 680, 681, 682, 683,
	0, 684, 685, 686, 687, 688, 663, 664, 665, 666,
	647, 648, 676, 0, 650, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 667, 668, 669, 670,
	671, 672, 673, 674, 0, 0, 0, 0, 1442, 208,
	24, 25, 52, 27, 28, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 43,
	0, 0, 0, 0, 29, 48, 49, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 38, 0, 0, 0, 54, 677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 31,
	32, 34, 33, 36, 0, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1403,
	572, 0, 0, 0, 0, 0, 37, 44, 45, 0,
	0, 46, 47, 35, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 39, 40, 0, 41,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 53, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 417, 1234, 388, 431, 366, 380, 439,
	381, 382, 410, 352, 396, 139, 378, 0, 369, 347,
	375, 348, 367, 390, 103, 393, 365, 419, 399, 430,
	120, 437, 122, 404, 0, 160, 131, 0, 0, 392,
	421, 394, 415, 387, 411, 357, 403, 432, 379, 408,
	433, 0, 0, 0, 80, 0, 870, 871, 0, 0,
	0, 0, 0, 96, 0, 406, 427, 377, 407, 409,
	346, 405, 0, 350, 353, 438, 423, 372, 373, 1056,
	0, 0, 0, 0, 0, 0, 391, 395, 412, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	402, 0, 0, 0, 354, 351, 0, 0, 389, 0,
	0, 0, 356, 0, 371, 413, 0, 345, 109, 416,
	422, 386, 211, 426, 384, 383, 429, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 420,
	368, 376, 99, 374, 153, 141, 176, 401, 142, 152,
	123, 168, 147, 175, 183, 184, 165, 182, 191, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 150, 102, 107, 101, 138, 169, 170, 100,
	194, 91, 181, 88, 92, 180, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 349, 0, 161, 178,
	195, 94, 364, 157, 166, 185, 186, 187, 188, 189,
	190, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 193, 140, 154, 98, 177, 159,
	360, 363, 358, 359, 397, 398, 434, 435, 436, 414,
	355, 0, 361, 362, 0, 418, 424, 425, 400, 82,
	89, 121, 192, 148, 106, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 417,
	1413, 388, 431, 366, 380, 439, 381, 382, 410, 352,
	396, 139, 378, 0, 369, 347, 375, 348, 367, 390,
	103, 393, 365, 419, 399, 430, 120, 437, 122, 404,
	0, 160, 131, 0, 0, 392, 421, 394, 415, 387,
	411, 357, 403, 432, 379, 408, 433, 0, 0, 0,
	80, 0, 870, 871, 0, 0, 0, 0, 0, 96,
	0, 406, 427, 377, 407, 409, 346, 405, 0, 350,
	353, 438, 423, 372, 373, 0, 0, 0, 0, 0,
	0, 0, 391, 395, 412, 385, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 402, 0, 0, 0,
	354, 351, 0, 0, 389, 0, 0, 0, 356, 0,
	371, 413, 0, 345, 109, 416, 422, 386, 211, 426,
	384, 383, 429, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 420, 368, 376, 99, 374,
	153, 141, 176, 401, 142, 152, 123, 168, 147, 175,
	183, 184, 165, 182, 191, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 150, 102,
	107, 101, 138, 169, 170, 100, 194, 91, 181, 88,
	92, 180, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 349, 0, 161, 178, 195, 94, 364, 157,
	166, 185, 186, 187, 188, 189, 190, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	193, 140, 154, 98, 177, 159, 360, 363, 358, 359,
	397, 398, 434, 435, 436, 414, 355, 0, 361, 362,
	0, 418, 424, 425, 400, 82, 89, 121, 192, 148,
	106, 179, 428, 417, 0, 388, 431, 366, 380, 439,
	381, 382, 410, 352, 396, 139, 378, 0, 369, 347,
	375, 348, 367, 390, 103, 393, 365, 419, 399, 430,
	120, 437, 122, 404, 0, 160, 131, 0, 0, 392,
	421, 394, 415, 387, 411, 357, 403, 432, 379, 408,
	433, 54, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 0, 0, 96, 0, 406, 427, 377, 407, 409,
	346, 405, 0, 350, 353, 438, 423, 372, 373, 0,
	0, 0, 0, 0, 0, 0, 391, 395, 412, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	402, 0, 0, 0, 354, 351, 0, 0, 389, 0,
	0, 0, 356, 0, 371, 413, 0, 345, 109, 416,
	422, 386, 211, 426, 384, 383, 429, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 420,
	368, 376, 99, 374, 153, 141, 176, 401, 142, 152,
	123, 168, 147, 175, 183, 184, 165, 182, 191, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 150, 102, 107, 101, 138, 169, 170, 100,
	194, 91, 181, 88, 92, 180, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 349, 0, 161, 178,
	195, 94, 364, 157, 166, 185, 186, 187, 188, 189,
	190, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 193, 140, 154, 98, 177, 159,
	360, 363, 358, 359, 397, 398, 434, 435, 436, 414,
	355, 0, 361, 362, 0, 418, 424, 425, 400, 82,
	89, 121, 192, 148, 106, 179, 428, 417, 0, 388,
	431, 366, 380, 439, 381, 382, 410, 352, 396, 139,
	378, 0, 369, 347, 375, 348, 367, 390, 103, 393,
	365, 419, 399, 430, 120, 437, 122, 404, 0, 160,
	131, 0, 0, 392, 421, 394, 415, 387, 411, 357,
	403, 432, 379, 408, 433, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 406,
	427, 377, 407, 409, 346, 405, 0, 350, 353, 438,
	423, 372, 373, 0, 0, 0, 0, 0, 0, 0,
	391, 395, 412, 385, 0, 0, 0, 0, 0, 0,
	1125, 0, 370, 0, 402, 0, 0, 0, 354, 351,
	0, 0, 389, 0, 0, 0, 356, 0, 371, 413,
	0, 345, 109, 416, 422, 386, 211, 426, 384, 383,
	429, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 420, 368, 376, 99, 374, 153, 141,
	176, 401, 142, 152, 123, 168, 147, 175, 183, 184,
	165, 182, 191, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 150, 102, 107, 101,
	138, 169, 170, 100, 194, 91, 181, 88, 92, 180,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	349, 0, 161, 178, 195, 94, 364, 157, 166, 185,
	186, 187, 188, 189, 190, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 193, 140,
	154, 98, 177, 159, 360, 363, 358, 359, 397, 398,
	434, 435, 436, 414, 355, 0, 361, 362, 0, 418,
	424, 425, 400, 82, 89, 121, 192, 148, 106, 179,
	428, 417, 0, 388, 431, 366, 380, 439, 381, 382,
	410, 352, 396, 139, 378, 0, 369, 347, 375, 348,
	367, 390, 103, 393, 365, 419, 399, 430, 120, 437,
	122, 404, 0, 160, 131, 0, 0, 392, 421, 394,
	415, 387, 411, 357, 403, 432, 379, 408, 433, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 0, 406, 427, 377, 407, 409, 346, 405,
	0, 350, 353, 438, 423, 372, 373, 0, 0, 0,
	0, 0, 0, 0, 391, 395, 412, 385, 0, 0,
	0, 0, 0, 0, 758, 0, 370, 0, 402, 0,
	0, 0, 354, 351, 0, 0, 389, 0, 0, 0,
	356, 0, 371, 413, 0, 345, 109, 416, 422, 386,
	211, 426, 384, 383, 429, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 420, 368, 376,
	99, 374, 153, 141, 176, 401, 142, 152, 123, 168,
	147, 175, 183, 184, 165, 182, 191, 84, 164, 174,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	150, 102, 107, 101, 138, 169, 170, 100, 194, 91,
	181, 88, 92, 180, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 349, 0, 161, 178, 195, 94,
	364, 157, 166, 185, 186, 187, 188, 189, 190, 0,
	0, 95, 108, 104, 143, 135, 93, 114, 158, 117,
	124, 149, 193, 140, 154, 98, 177, 159, 360, 363,
	358, 359, 397, 398, 434, 435, 436, 414, 355, 0,
	361, 362, 0, 418, 424, 425, 400, 82, 89, 121,
	192, 148, 106, 179, 428, 417, 0, 388, 431, 366,
	380, 439, 381, 382, 410, 352, 396, 139, 378, 0,
	369, 347, 375, 348, 367, 390, 103, 393, 365, 419,
	399, 430, 120, 437, 122, 404, 0, 160, 131, 0,
	0, 392, 421, 394, 415, 387, 411, 357, 403, 432,
	379, 408, 433, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 0, 406, 427, 377,
	407, 409, 346, 405, 0, 350, 353, 438, 423, 372,
	373, 0, 0, 0, 0, 0, 0, 0, 391, 395,
	412, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 402, 0, 0, 0, 354, 351, 0, 0,
	389, 0, 0, 0, 356, 0, 371, 413, 0, 345,
	109, 416, 422, 386, 211, 426, 384, 383, 429, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 420, 368, 376, 99, 374, 153, 141, 176, 401,
	142, 152, 123, 168, 147, 175, 183, 184, 165, 182,
	191, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 150, 102, 107, 101, 138, 169,
	170, 100, 194, 91, 181, 88, 92, 180, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 349, 0,
	161, 178, 195, 94, 364, 157, 166, 185, 186, 187,
	188, 189, 190, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 193, 140, 154, 98,
	177, 159, 360, 363, 358, 359, 397, 398, 434, 435,
	436, 414, 355, 0, 361, 362, 0, 418, 424, 425,
	400, 82, 89, 121, 192, 148, 106, 179, 428, 417,
	0, 388, 431, 366, 380, 439, 381, 382, 410, 352,
	396, 139, 378, 0, 369, 347, 375, 348, 367, 390,
	103, 393, 365, 419, 399, 430, 120, 437, 122, 404,
	0, 160, 131, 0, 0, 392, 421, 394, 415, 387,
	411, 357, 403, 432, 379, 408, 433, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 406, 427, 377, 407, 409, 346, 405, 0, 350,
	353, 438, 423, 372, 373, 0, 0, 0, 0, 0,
	0, 0, 391, 395, 412, 385, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 402, 0, 0, 0,
	354, 351, 0, 0, 389, 0, 0, 0, 356, 0,
	371, 413, 0, 345, 109, 416, 422, 386, 211, 426,
	384, 383, 429, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 420, 368, 376, 99, 374,
	153, 141, 176, 401, 142, 152, 123, 168, 147, 175,
	183, 184, 165, 182, 191, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 150, 102,
	107, 101, 138, 169, 170, 100, 194, 91, 181, 88,
	92, 180, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 349, 0, 161, 178, 195, 94, 364, 157,
	166, 185, 186, 187, 188, 189, 190, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	193, 140, 154, 98, 177, 159, 360, 363, 358, 359,
	397, 398, 434, 435, 436, 414, 355, 0, 361, 362,
	0, 418, 424, 425, 400, 82, 89, 121, 192, 148,
	106, 179, 428, 417, 0, 388, 431, 366, 380, 439,
	381, 382, 410, 352, 396, 139, 378, 0, 369, 347,
	375, 348, 367, 390, 103, 393, 365, 419, 399, 430,
	120, 437, 122, 404, 0, 160, 131, 0, 0, 392,
	421, 394, 415, 387, 411, 357, 403, 432, 379, 408,
	433, 0, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 0, 0, 96, 0, 406, 427, 377, 407, 409,
	346, 405, 0, 350, 353, 438, 423, 372, 373, 0,
	0, 0, 0, 0, 0, 0, 391, 395, 412, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	402, 0, 0, 0, 354, 351, 0, 0, 389, 0,
	0, 0, 356, 0, 371, 413, 0, 345, 109, 416,
	422, 386, 211, 426, 384, 383, 429, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 420,
	368, 376, 99, 374, 153, 141, 176, 401, 142, 152,
	123, 168, 147, 175, 183, 184, 165, 182, 191, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 150, 102, 107, 101, 138, 169, 170, 100,
	194, 91, 181, 88, 343, 180, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 349, 0, 161, 178,
	195, 94, 364, 157, 166, 185, 186, 187, 188, 189,
	190, 0, 0, 95, 108, 104, 143, 344, 342, 114,
	158, 117, 124, 149, 193, 140, 154, 98, 177, 159,
	360, 363, 358, 359, 397, 398, 434, 435, 436, 414,
	355, 0, 361, 362, 0, 418, 424, 425, 400, 82,
	89, 121, 192, 148, 106, 179, 428, 417, 0, 388,
	431, 366, 380, 439, 381, 382, 410, 352, 396, 139,
	378, 0, 369, 347, 375, 348, 367, 390, 103, 393,
	365, 419, 399, 430, 120, 437, 122, 404, 0, 160,
	131, 0, 0, 392, 421, 394, 415, 387, 411, 357,
	403, 432, 379, 408, 433, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 406,
	427, 377, 407, 409, 346, 405, 0, 350, 353, 438,
	423, 372, 373, 0, 0, 0, 0, 0, 0, 0,
	391, 395, 412, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 402, 0, 0, 0, 354, 351,
	0, 0, 389, 0, 0, 0, 356, 0, 371, 413,
	0, 345, 109, 416, 422, 386, 211, 426, 384, 383,
	429, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 420, 368, 376, 99, 374, 153, 141,
	176, 401, 142, 152, 123, 168, 147, 175, 183, 184,
	165, 182, 191, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 150, 102, 107, 101,
	138, 169, 170, 100, 194, 91, 181, 88, 92, 180,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	349, 0, 161, 178, 195, 94, 364, 157, 166, 185,
	186, 187, 188, 189, 190, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 193, 140,
	154, 98, 177, 159, 360, 363, 358, 359, 397, 398,
	434, 435, 436, 414, 355, 0, 361, 362, 0, 418,
	424, 425, 400, 82, 89, 121, 192, 148, 106, 179,
	428, 417, 0, 388, 431, 366, 380, 439, 381, 382,
	410, 352, 396, 139, 378, 0, 369, 347, 375, 348,
	367, 390, 103, 393, 365, 419, 399, 430, 120, 437,
	122, 404, 0, 160, 131, 0, 0, 392, 421, 394,
	415, 387, 411, 357, 403, 432, 379, 408, 433, 0,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 0, 406, 427, 377, 407, 409, 346, 405,
	0, 350, 353, 438, 423, 372, 373, 0, 0, 0,
	0, 0, 0, 0, 391, 395, 412, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 402, 0,
	0, 0, 354, 351, 0, 0, 389, 0, 0, 0,
	356, 0, 371, 413, 0, 345, 109, 416, 422, 386,
	211, 426, 384, 383, 429, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 420, 368, 376,
	99, 374, 153, 141, 176, 401, 142, 152, 123, 168,
	147, 175, 183, 184, 165, 182, 191, 84, 164, 626,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	150, 102, 107, 101, 138, 169, 170, 100, 194, 91,
	181, 88, 343, 180, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 349, 0, 161, 178, 195, 94,
	364, 157, 166, 185, 186, 187, 188, 189, 190, 0,
	0, 95, 108, 104, 143, 344, 342, 114, 158, 117,
	124, 149, 193, 140, 154, 98, 177, 159, 360, 363,
	358, 359, 397, 398, 434, 435, 436, 414, 355, 0,
	361, 362, 0, 418, 424, 425, 400, 82, 89, 121,
	192, 148, 106, 179, 428, 417, 0, 388, 431, 366,
	380, 439, 381, 382, 410, 352, 396, 139, 378, 0,
	369, 347, 375, 348, 367, 390, 103, 393, 365, 419,
	399, 430, 120, 437, 122, 404, 0, 160, 131, 0,
	0, 392, 421, 394, 415, 387, 411, 357, 403, 432,
	379, 408, 433, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 0, 406, 427, 377,
	407, 409, 346, 405, 0, 350, 353, 438, 423, 372,
	373, 0, 0, 0, 0, 0, 0, 0, 391, 395,
	412, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 402, 0, 0, 0, 354, 351, 0, 0,
	389, 0, 0, 0, 356, 0, 371, 413, 0, 345,
	109, 416, 422, 386, 211, 426, 384, 383, 429, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 420, 368, 376, 99, 374, 153, 141, 176, 401,
	142, 152, 123, 168, 147, 175, 183, 184, 165, 182,
	191, 84, 164, 334, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 150, 102, 107, 101, 138, 169,
	170, 100, 194, 91, 181, 88, 343, 180, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 349, 0,
	161, 178, 195, 94, 364, 157, 166, 185, 186, 187,
	188, 189, 190, 0, 0, 95, 108, 104, 143, 344,
	342, 337, 336, 117, 124, 149, 193, 140, 154, 98,
	177, 159, 360, 363, 358, 359, 397, 398, 434, 435,
	436, 414, 355, 0, 361, 362, 0, 418, 424, 425,
	400, 82, 89, 121, 192, 148, 106, 179, 139, 0,
	0, 0, 0, 272, 0, 0, 0, 103, 0, 269,
	0, 0, 0, 120, 312, 122, 0, 0, 160, 131,
	0, 0, 0, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 861, 0, 54, 0, 0, 270, 291, 290,
	293, 294, 295, 296, 0, 0, 96, 292, 297, 298,
	299, 862, 0, 0, 267, 284, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 282, 0,
	0, 0, 0, 325, 0, 283, 0, 0, 278, 279,
	280, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 211, 0, 0, 323, 0,
	146, 0, 163, 111, 119, 83, 90, 0, 110, 137,
	151, 155, 0, 0, 0, 99, 0, 153, 141, 176,
	0, 142, 152, 123, 168, 147, 175, 183, 184, 165,
	182, 191, 84, 164, 174, 97, 156, 86, 172, 162,
	129, 115, 116, 85, 0, 150, 102, 107, 101, 138,
	169, 170, 100, 194, 91, 181, 88, 92, 180, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 195, 94, 0, 157, 166, 185, 186,
	187, 188, 189, 190, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 193, 140, 154,
	98, 177, 159, 313, 324, 319, 320, 317, 318, 316,
	315, 314, 326, 305, 306, 307, 308, 310, 0, 321,
	322, 309, 82, 89, 121, 192, 148, 106, 179, 139,
	0, 0, 794, 0, 272, 0, 0, 0, 103, 0,
	269, 0, 0, 0, 120, 312, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 0, 0, 270, 291,
	290, 293, 294, 295, 296, 0, 0, 96, 292, 297,
	298, 299, 0, 0, 0, 267, 284, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 282,
	263, 0, 0, 0, 325, 0, 283, 0, 0, 278,
	279, 280, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 211, 0, 0, 323,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 183, 184,
	165, 182, 191, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 150, 102, 107, 101,
	138, 169, 170, 100, 194, 91, 181, 88, 92, 180,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 195, 94, 0, 157, 166, 185,
	186, 187, 188, 189, 190, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 193, 140,
	154, 98, 177, 159, 313, 324, 319, 320, 317, 318,
	316, 315, 314, 326, 305, 306, 307, 308, 310, 0,
	321, 322, 309, 82, 89, 121, 192, 148, 106, 179,
	139, 0, 0, 0, 0, 272, 0, 0, 0, 103,
	0, 269, 0, 0, 0, 120, 312, 122, 0, 0,
	160, 131, 0, 0, 0, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 502, 270,
	291, 290, 293, 294, 295, 296, 0, 0, 96, 292,
	297, 298, 299, 0, 0, 0, 267, 284, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	282, 0, 0, 0, 0, 325, 0, 283, 0, 0,
	278, 279, 280, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 211, 0, 0,
	323, 0, 146, 0, 163, 111, 119, 83, 90, 0,
	110, 137, 151, 155, 0, 0, 0, 99, 0, 153,
	141, 176, 0, 142, 152, 123, 168, 147, 175, 183,
	184, 165, 182, 191, 84, 164, 174, 97, 156, 86,
	172, 162, 129, 115, 116, 85, 0, 150, 102, 107,
	101, 138, 169, 170, 100, 194, 91, 181, 88, 92,
	180, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 0, 0, 161, 178, 195, 94, 0, 157, 166,
	185, 186, 187, 188, 189, 190, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 193,
	140, 154, 98, 177, 159, 313, 324, 319, 320, 317,
	318, 316, 315, 314, 326, 305, 306, 307, 308, 310,
	0, 321, 322, 309, 82, 89, 121, 192, 148, 106,
	179, 139, 0, 0, 0, 0, 272, 0, 0, 0,
	103, 0, 269, 0, 0, 0, 120, 312, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	270, 291, 290, 293, 294, 295, 296, 0, 0, 96,
	292, 297, 298, 299, 0, 0, 0, 267, 284, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 282, 263, 0, 0, 0, 325, 0, 283, 0,
	0, 278, 279, 280, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 211, 0,
	0, 323, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	183, 184, 165, 182, 191, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 150, 102,
	107, 101, 138, 169, 170, 100, 194, 91, 181, 88,
	92, 180, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 195, 94, 0, 157,
	166, 185, 186, 187, 188, 189, 190, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	193, 140, 154, 98, 177, 159, 313, 324, 319, 320,
	317, 318, 316, 315, 314, 326, 305, 306, 307, 308,
	310, 24, 321, 322, 309, 82, 89, 121, 192, 148,
	106, 179, 0, 139, 0, 0, 0, 0, 272, 0,
	0, 0, 103, 0, 269, 0, 0, 0, 120, 312,
	122, 0, 0, 160, 131, 0, 0, 0, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	0, 0, 270, 291, 290, 293, 294, 295, 296, 0,
	0, 96, 292, 297, 298, 299, 0, 0, 0, 267,
	284, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 282, 0, 0, 0, 0, 325, 0,
	283, 0, 0, 278, 279, 280, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	211, 0, 0, 323, 0, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 0, 0, 0,
	99, 0, 153, 141, 176, 0, 142, 152, 123, 168,
	147, 175, 183, 184, 165, 182, 191, 84, 164, 174,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	150, 102, 107, 101, 138, 169, 170, 100, 194, 91,
	181, 88, 92, 180, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 0, 0, 161, 178, 195, 94,
	0, 157, 166, 185, 186, 187, 188, 189, 190, 0,
	0, 95, 108, 104, 143, 135, 93, 114, 158, 117,
	124, 149, 193, 140, 154, 98, 177, 159, 313, 324,
	319, 320, 317, 318, 316, 315, 314, 326, 305, 306,
	307, 308, 310, 0, 321, 322, 309, 82, 89, 121,
	192, 148, 106, 179, 139, 0, 0, 0, 0, 272,
	0, 0, 0, 103, 0, 269, 0, 0, 0, 120,
	312, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 270, 291, 290, 293, 294, 295, 296,
	0, 0, 96, 292, 297, 298, 299, 0, 0, 0,
	267, 284, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 282, 0, 0, 0, 0, 325,
	0, 283, 0, 0, 278, 279, 280, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 211, 0, 0, 323, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 183, 184, 165, 182, 191, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 150, 102, 107, 101, 138, 169, 170, 100, 194,
	91, 181, 88, 92, 180, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 195,
	94, 0, 157, 166, 185, 186, 187, 188, 189, 190,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 193, 140, 154, 98, 177, 159, 313,
	324, 319, 320, 317, 318, 316, 315, 314, 326, 305,
	306, 307, 308, 310, 0, 321, 322, 309, 82, 89,
	121, 192, 148, 106, 179, 139, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	120, 312, 122, 0, 0, 160, 131, 0, 0, 0,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 270, 291, 290, 293, 294, 295,
	296, 0, 0, 96, 292, 297, 298, 299, 0, 0,
	0, 0, 284, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 282, 0, 0, 0, 0,
	325, 0, 283, 0, 0, 278, 279, 280, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 211, 0, 0, 323, 0, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 0,
	0, 0, 99, 0, 153, 141, 176, 1443, 142, 152,
	123, 168, 147, 175, 183, 184, 165, 182, 191, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 150, 102, 107, 101, 138, 169, 170, 100,
	194, 91, 181, 88, 92, 180, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	195, 94, 0, 157, 166, 185, 186, 187, 188, 189,
	190, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 193, 140, 154, 98, 177, 159,
	313, 324, 319, 320, 317, 318, 316, 315, 314, 326,
	305, 306, 307, 308, 310, 0, 321, 322, 309, 82,
	89, 121, 192, 148, 106, 179, 139, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 120, 312, 122, 0, 0, 160, 131, 0, 0,
	0, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 502, 270, 291, 290, 293, 294,
	295, 296, 0, 0, 96, 292, 297, 298, 299, 0,
	0, 0, 0, 284, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 282, 0, 0, 0,
	0, 325, 0, 283, 0, 0, 278, 279, 280, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 211, 0, 0, 323, 0, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	0, 0, 0, 99, 0, 153, 141, 176, 0, 142,
	152, 123, 168, 147, 175, 183, 184, 165, 182, 191,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 150, 102, 107, 101, 138, 169, 170,
	100, 194, 91, 181, 88, 92, 180, 136, 167, 173,
	130, 127, 87, 171, 128, 126, 118, 105, 112, 144,
	125, 145, 113, 133, 132, 134, 0, 0, 0, 161,
	178, 195, 94, 0, 157, 166, 185, 186, 187, 188,
	189, 190, 0, 0, 95, 108, 104, 143, 135, 93,
	114, 158, 117, 124, 149, 193, 140, 154, 98, 177,
	159, 313, 324, 319, 320, 317, 318, 316, 315, 314,
	326, 305, 306, 307, 308, 310, 0, 321, 322, 309,
	82, 89, 121, 192, 148, 106, 179, 139, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 120, 312, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 0, 270, 291, 290, 293,
	294, 295, 296, 0, 0, 96, 292, 297, 298, 299,
	0, 0, 0, 0, 284, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 282, 0, 0,
	0, 0, 325, 0, 283, 0, 0, 278, 279, 280,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 211, 0, 0, 323, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 183, 184, 165, 182,
	191, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 150, 102, 107, 101, 138, 169,
	170, 100, 194, 91, 181, 88, 92, 180, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 0, 0,
	161, 178, 195, 94, 0, 157, 166, 185, 186, 187,
	188, 189, 190, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 193, 140, 154, 98,
	177, 159, 313, 324, 319, 320, 317, 318, 316, 315,
	314, 326, 305, 306, 307, 308, 310, 0, 321, 322,
	309, 82, 89, 121, 192, 148, 106, 179, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 120, 0, 122, 0, 0, 160, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 535, 545, 546, 538, 539, 540,
	541, 542, 543, 544, 537, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 211, 0, 0, 0, 0,
	146, 0, 163, 111, 119, 83, 90, 0, 110, 137,
	151, 155, 0, 0, 0, 99, 0, 153, 141, 176,
	0, 142, 152, 123, 168, 147, 175, 183, 184, 165,
	182, 191, 84, 164, 174, 97, 156, 86, 172, 162,
	129, 115, 116, 85, 0, 150, 102, 107, 101, 138,
	169, 170, 100, 194, 91, 181, 88, 92, 180, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 195, 94, 0, 157, 166, 185, 186,
	187, 188, 189, 190, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 193, 140, 154,
	98, 177, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 89, 121, 192, 148, 106, 179, 139,
	0, 0, 0, 524, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 120, 0, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	526, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 521, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 211, 0, 0, 0,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 183, 184,
	165, 182, 191, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 150, 102, 107, 101,
	138, 169, 170, 100, 194, 91, 181, 88, 92, 180,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 195, 94, 0, 157, 166, 185,
	186, 187, 188, 189, 190, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 193, 140,
	154, 98, 177, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 82, 89, 121, 192, 148, 106, 179,
	103, 0, 0, 0, 0, 0, 120, 0, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 76, 77, 0, 73, 0,
	0, 0, 78, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	183, 184, 165, 182, 191, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 150, 102,
	107, 101, 138, 169, 170, 100, 194, 91, 181, 88,
	92, 180, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 195, 94, 0, 157,
	166, 185, 186, 187, 188, 189, 190, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	193, 140, 154, 98, 177, 159, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 89, 121, 192, 148,
	106, 179, 139, 0, 0, 0, 848, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 120, 0, 122,
	0, 0, 160, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 850, 0, 0, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 211,
	0, 0, 0, 0, 146, 0, 163, 111, 119, 83,
	90, 0, 110, 137, 151, 155, 0, 0, 0, 99,
	0, 153, 141, 176, 0, 142, 152, 123, 168, 147,
	175, 183, 184, 165, 182, 191, 84, 164, 174, 97,
	156, 86, 172, 162, 129, 115, 116, 85, 0, 150,
	102, 107, 101, 138, 169, 170, 100, 194, 91, 181,
	88, 92, 180, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 195, 94, 0,
	157, 166, 185, 186, 187, 188, 189, 190, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 193, 140, 154, 98, 177, 159, 0, 0, 0,
	0, 0, 24, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 82, 89, 121, 192,
	148, 106, 179, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 211, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 183, 184, 165, 182, 191, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 150, 102, 107, 101, 138, 169, 170, 100, 194,
	91, 181, 88, 92, 180, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 195,
	94, 0, 157, 166, 185, 186, 187, 188, 189, 190,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 193, 140, 154, 98, 177, 159, 0,
	0, 0, 0, 0, 24, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 82, 89,
	121, 192, 148, 106, 179, 103, 0, 0, 0, 0,
	0, 120, 0, 122, 0, 0, 160, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 211, 0, 0, 0, 0, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	0, 0, 0, 99, 0, 153, 141, 176, 0, 142,
	152, 123, 168, 147, 175, 183, 184, 165, 182, 191,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 150, 102, 107, 101, 138, 169, 170,
	100, 194, 91, 181, 88, 92, 180, 136, 167, 173,
	130, 127, 87, 171, 128, 126, 118, 105, 112, 144,
	125, 145, 113, 133, 132, 134, 0, 0, 0, 161,
	178, 195, 94, 0, 157, 166, 185, 186, 187, 188,
	189, 190, 0, 0, 95, 108, 104, 143, 135, 93,
	114, 158, 117, 124, 149, 193, 140, 154, 98, 177,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 89, 121, 192, 148, 106, 179, 139, 0, 0,
	0, 848, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 120, 0, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 850, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 211, 0, 0, 0, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	846, 152, 123, 168, 147, 175, 183, 184, 165, 182,
	191, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 150, 102, 107, 101, 138, 169,
	170, 100, 194, 91, 181, 88, 92, 180, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 0, 0,
	161, 178, 195, 94, 0, 157, 166, 185, 186, 187,
	188, 189, 190, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 193, 140, 154, 98,
	177, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 82, 89, 121, 192, 148, 106, 179, 103, 0,
	0, 0, 0, 0, 120, 0, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 745, 0, 0, 746, 0, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 211, 0, 0, 0,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 183, 184,
	165, 182, 191, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 150, 102, 107, 101,
	138, 169, 170, 100, 194, 91, 181, 88, 92, 180,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 195, 94, 0, 157, 166, 185,
	186, 187, 188, 189, 190, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 193, 140,
	154, 98, 177, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 82, 89, 121, 192, 148, 106, 179,
	103, 0, 635, 0, 0, 0, 120, 0, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 634, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 211, 0,
	0, 0, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	183, 184, 165, 182, 191, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 150, 102,
	107, 101, 138, 169, 170, 100, 194, 91, 181, 88,
	92, 180, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 195, 94, 0, 157,
	166, 185, 186, 187, 188, 189, 190, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	193, 140, 154, 98, 177, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 82, 89, 121, 192, 148,
	106, 179, 103, 0, 0, 0, 0, 0, 120, 0,
	122, 0, 0, 160, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	211, 0, 0, 0, 0, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 0, 0, 0,
	99, 0, 153, 141, 176, 0, 142, 152, 123, 168,
	147, 175, 183, 184, 165, 182, 191, 84, 164, 174,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	150, 102, 107, 101, 138, 169, 170, 100, 194, 91,
	181, 88, 92, 180, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 0, 0, 161, 178, 195, 94,
	0, 157, 166, 185, 186, 187, 188, 189, 190, 0,
	0, 95, 108, 104, 143, 135, 93, 114, 158, 117,
	124, 149, 193, 140, 154, 98, 177, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 82, 89, 121,
	192, 148, 106, 179, 103, 0, 0, 0, 0, 0,
	120, 0, 122, 0, 0, 160, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 850, 0, 0, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 211, 0, 0, 0, 0, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 0,
	0, 0, 99, 0, 153, 141, 176, 0, 142, 152,
	123, 168, 147, 175, 183, 184, 165, 182, 191, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 150, 102, 107, 101, 138, 169, 170, 100,
	194, 91, 181, 88, 92, 180, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	195, 94, 0, 157, 166, 185, 186, 187, 188, 189,
	190, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 193, 140, 154, 98, 177, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 82,
	89, 121, 192, 148, 106, 179, 103, 0, 0, 0,
	0, 0, 120, 0, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 810, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 211, 0, 0, 0, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 183, 184, 165, 182,
	191, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 150, 102, 107, 101, 138, 169,
	170, 100, 194, 91, 181, 88, 92, 180, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 0, 0,
	161, 178, 195, 94, 0, 157, 166, 185, 186, 187,
	188, 189, 190, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 193, 140, 154, 98,
	177, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 82, 89, 121, 192, 148, 106, 179, 103, 0,
	0, 0, 0, 0, 120, 0, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	806, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 211, 0, 0, 0,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 183, 184,
	165, 182, 191, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 150, 102, 107, 101,
	138, 169, 170, 100, 194, 91, 181, 88, 92, 180,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 195, 94, 0, 157, 166, 185,
	186, 187, 188, 189, 190, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 193, 140,
	154, 98, 177, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 82, 89, 121, 192, 148, 106, 179,
	103, 0, 0, 0, 0, 0, 120, 0, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 526, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 211, 0,
	0, 0, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	183, 184, 165, 182, 191, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 150, 102,
	107, 101, 138, 169, 170, 100, 194, 91, 181, 88,
	92, 180, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 195, 94, 0, 157,
	166, 185, 186, 187, 188, 189, 190, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	193, 140, 154, 98, 177, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 82, 89, 121, 192, 148,
	106, 179, 608, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 211, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 183, 184, 165, 182, 191, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 150, 102, 107, 101, 138, 169, 170, 100, 194,
	91, 181, 88, 92, 180, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 195,
	94, 0, 157, 166, 185, 186, 187, 188, 189, 190,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 193, 140, 154, 98, 177, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 139, 0, 82, 89,
	121, 192, 148, 106, 179, 103, 0, 0, 0, 0,
	0, 120, 0, 122, 0, 0, 160, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 211, 0, 0, 0, 0, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	0, 0, 0, 99, 0, 153, 141, 176, 0, 142,
	152, 123, 168, 147, 175, 183, 184, 165, 182, 191,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 150, 102, 107, 101, 138, 169, 170,
	100, 194, 91, 181, 88, 92, 180, 136, 167, 173,
	130, 127, 87, 171, 128, 126, 118, 105, 112, 144,
	125, 145, 113, 133, 132, 134, 0, 0, 0, 161,
	178, 195, 94, 0, 157, 166, 185, 186, 187, 188,
	189, 190, 0, 0, 95, 108, 104, 143, 135, 93,
	114, 158, 117, 124, 149, 193, 140, 154, 98, 177,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	82, 89, 121, 192, 148, 106, 179, 103, 0, 0,
	0, 0, 0, 120, 0, 122, 0, 0, 160, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 206, 0, 211, 0, 0, 0, 0,
	146, 0, 163, 111, 119, 83, 90, 0, 110, 137,
	151, 155, 0, 0, 0, 99, 0, 153, 141, 176,
	0, 142, 152, 123, 168, 147, 175, 183, 184, 165,
	182, 191, 84, 164, 174, 97, 156, 86, 172, 162,
	129, 115, 116, 85, 0, 150, 102, 107, 101, 138,
	169, 170, 100, 194, 91, 181, 88, 92, 180, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 195, 94, 0, 157, 166, 185, 186,
	187, 188, 189, 190, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 193, 140, 154,
	98, 177, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 82, 89, 121, 192, 148, 106, 179, 103,
	0, 0, 0, 0, 0, 120, 0, 122, 0, 0,
	160, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 211, 0, 0,
	0, 0, 146, 0, 163, 111, 119, 83, 90, 0,
	110, 137, 151, 155, 0, 0, 0, 99, 0, 153,
	141, 176, 0, 142, 152, 123, 168, 147, 175, 183,
	184, 165, 182, 191, 84, 164, 174, 97, 156, 86,
	172, 162, 129, 115, 116, 85, 0, 150, 102, 107,
	101, 138, 169, 170, 100, 194, 91, 181, 88, 92,
	180, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 0, 0, 161, 178, 195, 94, 0, 157, 166,
	185, 186, 187, 188, 189, 190, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 193,
	140, 154, 98, 177, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 82, 89, 121, 192, 148, 106,
	179, 103, 0, 0, 0, 0, 0, 120, 0, 122,
	0, 0, 160, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 211,
	0, 0, 0, 0, 146, 0, 163, 111, 119, 83,
	90, 0, 110, 137, 151, 155, 0, 0, 0, 99,
	0, 153, 141, 176, 0, 142, 152, 123, 168, 147,
	175, 183, 184, 165, 182, 191, 84, 164, 174, 97,
	156, 86, 172, 162, 129, 115, 116, 85, 0, 150,
	102, 107, 101, 138, 169, 170, 100, 194, 91, 181,
	88, 92, 180, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 195, 94, 0,
	157, 166, 185, 186, 187, 188, 189, 190, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 193, 140, 154, 98, 177, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 82, 89, 121, 192,
	148, 106, 179, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 211, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 183, 184, 165, 182, 191, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 150, 102, 107, 101, 138, 169, 170, 100, 194,
	91, 181, 88, 92, 180, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 195,
	94, 0, 157, 166, 185, 186, 187, 188, 189, 190,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 193, 140, 154, 98, 177, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 89,
	121, 192, 148, 106, 179,
}
var yyPact = [...]int{

	2484, -1000, -188, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 932, 962, -1000, -1000, -1000, -1000, -1000, -1000,
	241, 8473, 33, 123, 15, 11880, 122, 1724, 12364, -1000,
	3, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -69, -70,
	-1000, 727, -1000, -1000, -1000, -1000, -1000, 925, 928, 773,
	916, 834, -1000, 6473, 90, 90, 11638, 5469, -1000, -1000,
	259, 12364, 119, 12364, -152, 84, 84, 84, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 121, 12364, 340, -1000,
	12364, 83, 621, 83, 83, 83, 12364, -1000, 156, -1000,
	-1000, -1000, 12364, 611, 881, 3357, 47, 3357, 3357, -1000,
	3357, 3357, -1000, 3357, 9, 3357, -75, 942, -1000, -1000,
	-1000, -1000, -17, -1000, 3357, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 551, 884,
	6976, 6976, 932, -1000, 727, -1000, -1000, -1000, 873, -1000,
	-1000, 402, 949, -1000, 8231, 154, -1000, 6976, 1991, 726,
	-1000, -1000, 726, -1000, -1000, 142, -1000, -1000, 7729, 7729,
	7729, 7729, 7729, 7729, 7729, 7729, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	726, -1000, 6725, 726, 726, 726, 726, 726, 726, 726,
	726, 6976, 726, 726, 726, 726, 726, 726, 726, 726,
	726, 726, 726, 726, 726, 726, 726, 11396, 10185, 12364,
	666, -1000, 717, 5205, -126, -1000, -1000, -1000, 260, 9943,
	-1000, -1000, -1000, 874, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	620, 12364, -1000, 2276, -1000, 596, 3357, 107, 580, 335,
	563, 12364, 12364, 3357, 16, 51, 108, 12364, 722, 101,
	12364, 911, 789, 12364, 540, 538, -1000, 4941, -1000, 3357,
	3357, -1000, -1000, -1000, 3357, 3357, 3357, 12364, 3357, 3357,
	-1000, -1000, -1000, -1000, -1000, 3357, 3357, -1000, 947, 292,
	-1000, -1000, -1000, -1000, 6976, -1000, 788, 787, -1000, -1000,
	-1000, -1000, -1000, -1000, 957, 194, 608, 151, 721, -1000,
	448, 925, 551, 834, 9701, 807, -1000, -1000, 12364, -1000,
	6976, 6976, 346, -1000, 11153, -1000, -1000, 3885, 195, 7729,
	405, 207, 7729, 7729, 7729, 7729, 7729, 7729, 7729, 7729,
	7729, 7729, 7729, 7729, 7729, 7729, 7729, 452, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 536, -1000, 727, 757,
	757, 171, 171, 171, 171, 171, 171, 171, 7980, 5971,
	551, 616, 352, 6725, 6473, 6473, 6976, 6976, 10911, 10669,
	6473, 919, 326, 352, 12606, -1000, -1000, 7478, -1000, -1000,
	-1000, -1000, -1000, 551, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12122, 12122, 6473, 6473, 6473, 6473, 30, 12364, -1000,
	683, 821, -1000, -1000, -1000, 913, 9208, 9459, 30, 663,
	10185, 12364, -1000, -1000, 4677, 717, -126, 708, -1000, -124,
	-131, 5720, 169, -1000, -1000, -1000, -1000, 3093, 289, 650,
	343, -51, -1000, -1000, -1000, 743, -1000, 743, 743, 743,
	743, -23, -23, -23, -23, -1000, -1000, -1000, -1000, -1000,
	767, 759, -1000, 743, 743, 743, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 755, 755, 755, 749, 749, 770,
	-1000, 12364, 3357, 889, 3357, -1000, 235, -1000, 12122, 12122,
	12364, 12364, 218, 12364, 12364, 716, -1000, 12364, 3357, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 12364, 295, 12364, 12364, 352, 12364,
	12364, -1000, 840, 6976, 6976, 4413, 6976, -1000, -1000, -1000,
	884, -1000, 919, 930, -1000, 867, 862, 6473, -1000, -1000,
	195, 229, -1000, -1000, 381, -1000, -1000, -1000, -1000, 150,
	726, -1000, 2255, -1000, -1000, -1000, -1000, 405, 7729, 7729,
	7729, 92, 2255, 2239, 547, 395, 171, 454, 454, 178,
	178, 178, 178, 178, 445, 445, -1000, -1000, -1000, 551,
	-1000, -1000, -1000, 551, 6473, 715, -1000, -1000, 6976, -1000,
	551, 604, 604, 393, 321, 713, 711, -1000, 149, 709,
	706, 604, 6473, 270, -1000, 6976, 551, -1000, 478, 714,
	710, 604, 551, 604, 604, 681, 726, -1000, 12606, 10185,
	10185, 10185, 10185, 10185, -1000, 819, 817, -1000, 804, 801,
	812, 12364, -1000, 606, 9208, 183, 726, -1000, 10427, -1000,
	-1000, 938, 10185, 674, -1000, -1000, 708, -126, -93, -1000,
	-1000, -1000, -1000, 352, -1000, 457, 701, 2817, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 753, 530, -1000, 904, 208,
	213, 508, 903, -1000, -1000, -1000, 885, -1000, 377, -54,
	-1000, -1000, 444, -23, -23, -1000, -1000, 169, 872, 169,
	169, 169, 477, 477, -1000, -1000, -1000, -1000, 425, -1000,
	-1000, -1000, 424, -1000, 785, 12122, 3357, -1000, -1000, -1000,
	-1000, 182, 182, 201, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29, 769, -1000, -1000, -1000,
	48, 40, 12606, 99, -1000, 3357, -1000, 292, -1000, 472,
	6976, -1000, -1000, -1000, -1000, 838, 352, 352, 148, -1000,
	-1000, 12364, -1000, -1000, -1000, -1000, 696, -1000, -1000, -1000,
	3621, 6473, -1000, 92, 2255, 1665, -1000, 7729, 7729, -1000,
	-1000, 604, 6473, 352, -1000, -1000, -1000, 69, 452, 69,
	7729, 7729, 7729, 7729, 4413, 7729, 7729, 7729, 7729, -166,
	688, 263, -1000, 6976, 519, -1000, -1000, 7729, 7729, -1000,
	-1000, -1000, -1000, 784, 12606, 726, -1000, 8966, 12122, 686,
	-1000, 242, 821, 758, 783, 1353, -1000, -1000, -1000, -1000,
	805, -1000, 802, -1000, -1000, -1000, -1000, -1000, 118, 116,
	113, 12122, -1000, 932, 6976, 674, -1000, -1000, -1000, -133,
	-139, -1000, -1000, -1000, 3093, -1000, 3093, 12122, 66, -1000,
	508, 508, -1000, -1000, -1000, 752, 776, 7729, -1000, -1000,
	-1000, 627, 169, 169, -1000, 237, -1000, -1000, -1000, 602,
	-1000, 584, 700, 578, 12364, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12364, -1000, -1000, -1000, -1000, -1000, 12122, -173, 503,
	12122, 494, 12122, 12122, 668, 12364, -1000, 295, -1000, 352,
	-1000, 4149, -1000, 938, 10185, -1000, -1000, 551, -1000, 7729,
	2255, 2255, -1000, -1000, 551, 743, 743, -1000, 743, 749,
	-1000, 743, -6, 743, -7, 551, 551, 1603, 2181, 1548,
	2094, -1000, 1355, 1865, 883, 1168, 726, -160, -1000, 352,
	6976, 692, 336, -1000, 886, 630, 690, -1000, -1000, 6222,
	551, 573, 145, 568, -1000, 932, 12606, 6976, -1000, -1000,
	6976, 744, -1000, 6976, -1000, -1000, -1000, 726, 726, 726,
	568, 925, 352, -1000, -1000, -1000, -1000, 2817, -1000, 560,
	-1000, 743, -1000, -1000, -1000, 12122, -47, 954, 2255, -1000,
	-1000, -1000, -1000, -1000, -23, 468, -23, 423, -1000, 421,
	3357, -1000, -1000, -1000, -1000, 907, -1000, 4149, -1000, -1000,
	730, -1000, -1000, -1000, -1000, -1000, 935, 699, -1000, 2255,
	-1000, -1000, 106, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7729, 7729, -1000, 7729, 7729, -1000, 7729, 7729,
	-1000, 7729, 7729, 7729, 551, 467, 352, 7729, 7729, 898,
	-1000, 726, -1000, -1000, 678, 12122, 12122, -1000, 12122, 925,
	-1000, 352, 352, 12122, 352, 12122, 12122, 12122, 8724, -1000,
	162, 12122, -1000, 558, -1000, 192, -1000, -115, 169, -1000,
	169, 623, 574, -1000, 726, 697, -1000, 223, 12122, 931,
	927, -1000, -1000, 478, 478, 478, 478, 478, 478, 478,
	478, 22, -1000, -1000, 478, 478, 952, -1000, 726, -1000,
	727, 140, -1000, -1000, -1000, 555, 550, 550, 550, 183,
	162, -1000, 456, 222, 463, -1000, 42, 12122, 397, 897,
	-1000, 893, -1000, -1000, -1000, -1000, -1000, 27, 4149, 3093,
	544, -1000, 6976, 6976, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 551, 46, -181, -1000, -1000, 12606, 690, 551,
	12122, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 414, -1000,
	-1000, 12364, -1000, -1000, 458, -1000, -1000, 528, -1000, 12122,
	-1000, -1000, 769, 352, 671, -1000, 837, -171, -184, 668,
	-1000, -1000, -1000, 728, -1000, -1000, 27, 848, -173, -1000,
	823, -1000, 12122, -1000, 23, -1000, -179, 507, 21, -182,
	774, 726, -185, 760, -1000, 946, 7227, -1000, -1000, 948,
	200, 200, 478, 551, -1000, -1000, -1000, 71, 394, -1000,
	-1000, -1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1192, 45, 508, 1190, 1189, 1188, 1184, 1183, 1182,
	1181, 1180, 1179, 1176, 1175, 1174, 1173, 1168, 1167, 1165,
	1163, 1162, 1160, 1158, 1157, 1155, 127, 1154, 1152, 1147,
	70, 1145, 76, 1140, 1139, 38, 60, 50, 48, 1256,
	1136, 52, 62, 57, 1135, 40, 1134, 1133, 77, 1131,
	56, 1130, 1129, 1708, 1128, 1127, 13, 27, 1126, 1124,
	1123, 1119, 71, 1051, 1118, 1117, 14, 1115, 1112, 87,
	1110, 61, 6, 12, 33, 18, 1109, 183, 9, 1107,
	58, 1106, 1105, 1104, 1101, 20, 1100, 65, 1099, 23,
	64, 1094, 7, 75, 30, 19, 10, 78, 69, 1092,
	16, 66, 49, 1091, 1083, 501, 1081, 1080, 44, 1079,
	1077, 24, 184, 428, 1076, 1075, 1074, 1070, 42, 0,
	518, 31, 79, 1068, 1067, 1065, 1404, 73, 59, 17,
	1062, 43, 1078, 41, 1061, 1060, 37, 1059, 1056, 1054,
	1053, 1052, 1050, 1048, 109, 1045, 1044, 1041, 35, 22,
	1040, 1039, 63, 21, 1038, 1035, 1034, 55, 26, 1032,
	1029, 47, 28, 1023, 1020, 1011, 1010, 1009, 29, 25,
	1008, 15, 1007, 11, 1006, 34, 1003, 4, 1001, 8,
	1000, 1, 996, 5, 51, 2, 991, 3, 975, 973,
	53, 347, 969, 968, 80,
}
var yyR1 = [...]int{

	0, 188, 189, 189, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 6, 3, 4,
	4, 5, 5, 7, 7, 29, 29, 8, 9, 9,
	9, 192, 192, 48, 48, 93, 93, 10, 10, 10,
	10, 98, 98, 102, 102, 102, 103, 103, 103, 103,
	134, 134, 11, 11, 11, 11, 11, 11, 11, 183,
	183, 182, 181, 181, 180, 180, 179, 17, 164, 166,
	166, 165, 165, 165, 165, 158, 137, 137, 137, 137,
	140, 140, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 139, 139, 139, 139, 139, 141, 141, 141, 141,
	141, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 143, 143, 143, 143,
	143, 143, 143, 143, 157, 157, 144, 144, 152, 152,
	153, 153, 153, 150, 150, 151, 151, 154, 154, 154,
	146, 146, 147, 147, 155, 155, 148, 148, 148, 149,
	149, 149, 156, 156, 156, 156, 156, 145, 145, 159,
	159, 174, 174, 173, 173, 173, 163, 163, 170, 170,
	170, 170, 170, 161, 161, 162, 162, 172, 172, 171,
	160, 160, 175, 175, 175, 175, 186, 187, 185, 185,
	185, 185, 185, 167, 167, 167, 168, 168, 168, 169,
	169, 169, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 178,
	176, 176, 177, 177, 13, 18, 18, 14, 14, 14,
	14, 14, 15, 15, 19, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 109, 109,
	107, 107, 110, 110, 108, 108, 108, 111, 111, 111,
	135, 135, 135, 21, 21, 23, 23, 24, 25, 22,
	22, 22, 22, 22, 22, 22, 16, 193, 26, 27,
	27, 28, 28, 28, 32, 32, 32, 30, 30, 31,
	31, 37, 37, 36, 36, 38, 38, 38, 38, 123,
	123, 123, 122, 122, 40, 40, 41, 41, 42, 42,
	43, 43, 43, 43, 55, 55, 92, 92, 94, 94,
	44, 44, 44, 44, 45, 45, 46, 46, 47, 47,
	130, 130, 129, 129, 129, 128, 128, 49, 49, 49,
	51, 50, 50, 50, 50, 52, 52, 54, 54, 53,
	53, 56, 56, 56, 56, 57, 57, 39, 39, 39,
	39, 39, 39, 39, 106, 106, 59, 59, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 70, 70,
	70, 70, 70, 70, 60, 60, 60, 60, 60, 60,
	60, 35, 35, 71, 71, 71, 77, 72, 72, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 67, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 194, 194, 69, 68, 68, 68, 68, 33, 33,
	33, 33, 33, 133, 133, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 81, 81,
	34, 34, 79, 79, 80, 82, 82, 78, 78, 78,
	62, 62, 62, 62, 62, 62, 62, 62, 64, 64,
	64, 83, 83, 84, 84, 85, 85, 86, 86, 87,
	88, 88, 88, 89, 89, 89, 89, 90, 90, 90,
	61, 61, 61, 61, 61, 61, 91, 91, 91, 91,
	95, 95, 73, 73, 75, 75, 74, 76, 96, 96,
	100, 97, 97, 101, 101, 101, 101, 99, 99, 99,
	125, 125, 125, 104, 104, 112, 112, 113, 113, 105,
	105, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 115, 115, 115, 116, 116, 117, 117, 117, 124,
	124, 120, 120, 121, 121, 126, 126, 127, 127, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 190,
	191, 131, 132, 132, 132,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 6, 7, 5, 10, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 1, 1, 1, 3, 0, 4, 3, 4, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 8, 4, 6, 5, 5, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 4, 2,
	4, 1, 3, 3, 3, 8, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 2, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 0, 1, 2,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 0,
	2, 2, 0, 2, 1, 2, 1, 0, 2, 5,
	4, 1, 2, 2, 3, 2, 0, 1, 2, 3,
	3, 2, 2, 1, 1, 0, 1, 1, 3, 2,
	3, 1, 10, 11, 11, 12, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 6, 7, 7, 7, 7, 4, 5, 7,
	5, 5, 5, 12, 7, 7, 7, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 3, 8, 8, 3, 3, 5, 4, 6, 5,
	4, 4, 3, 2, 3, 4, 4, 3, 4, 4,
	4, 4, 4, 4, 3, 3, 2, 3, 3, 2,
	3, 4, 3, 7, 5, 4, 2, 4, 2, 2,
	2, 2, 3, 3, 5, 5, 2, 3, 1, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 1, 1, 2, 1, 1, 2, 1, 1, 2,
	2, 2, 2, 2, 3, 3, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 0,
	1, 0, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 1, 3, 3, 7, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 6, 4, 4, 6, 6, 6, 6,
	8, 8, 6, 8, 8, 6, 8, 8, 6, 8,
	8, 9, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 0, 2, 4,
	2, 1, 3, 5, 4, 6, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -188, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -19, -20, -21, -23, -24, -25,
	-22, -16, -3, -4, 6, 7, -29, 9, 10, 30,
	-17, 115, 116, 118, 117, 149, 119, 142, 50, 162,
	163, 165, 166, 25, 143, 144, 147, 148, 31, 32,
	121, -190, 8, 252, 54, -189, 269, -85, 15, -28,
	5, -26, -193, -26, -26, -26, -26, -26, -164, -166,
	54, 90, -117, 125, 72, 244, 122, 123, 129, -120,
	57, -119, 262, 135, 162, 173, 167, 194, 186, 263,
	136, 184, 187, 231, 214, 226, 66, 165, 240, 145,
	182, 178, 176, 27, 228, 199, 267, 177, 227, 121,
	138, 133, 200, 204, 232, 171, 172, 234, 198, 134,
	33, 264, 35, 153, 235, 202, 197, 193, 196, 170,
	192, 39, 206, 205, 207, 230, 189, 139, 179, 18,
	238, 148, 151, 229, 201, 203, 130, 155, 266, 236,
	175, 140, 152, 147, 239, 141, 166, 216, 233, 242,
	38, 211, 169, 132, 163, 159, 217, 190, 154, 180,
	181, 195, 168, 191, 164, 156, 149, 241, 212, 268,
	188, 185, 160, 157, 158, 218, 219, 220, 221, 222,
	223, 161, 265, 237, 183, 213, -105, 125, 221, 127,
	123, 123, 124, 125, 244, 122, 123, -53, -126, 57,
	-119, 125, 123, 108, 187, 231, 115, 215, 216, 228,
	124, 33, 229, 155, -135, 123, -107, 214, 218, 219,
	220, 223, 221, 161, 57, 233, 232, 224, -126, 164,
	-131, -131, -131, -131, -131, 217, 217, -131, -2, -89,
	17, 16, -5, -3, -190, 6, 20, 21, -32, 40,
	41, -27, -38, 99, -39, -126, -58, 74, -63, 29,
	57, -119, 23, -62, -59, -78, -76, -77, 108, 109,
	110, 97, 98, 105, 75, 111, -67, -65, -66, -68,
	59, 58, 67, 60, 61, 62, 63, 68, 69, 70,
	-120, -74, -190, 44, 45, 253, 254, 255, 256, 261,
	257, 77, 34, 243, 251, 250, 249, 247, 248, 245,
	246, 259, 260, 128, 244, 103, 252, -105, -105, 11,
	-48, -53, -97, -134, 164, -101, 233, 232, -121, -99,
	-120, -118, 231, 187, 230, 120, 73, 22, 24, 209,
	76, 108, 16, 77, 107, 253, 115, 48, 245, 246,
	243, 255, 256, 244, 215, 29, 10, 25, 143, 21,
	101, 117, 80, 81, 146, 23, 144, 70, 19, 51,
	11, 13, 14, 128, 127, 92, 124, 46, 8, 111,
	26, 89, 42, 28, 44, 90, 17, 247, 248, 31,
	261, 150, 103, 49, 36, 74, 68, 71, 52, 72,
	15, 47, 91, 118, 252, 45, 122, 6, 258, 30,
	142, 43, 123, 79, 259, 260, 126, 69, 5, 129,
	32, 9, 50, 53, 249, 250, 251, 34, 78, 12,
	-165, 90, -158, 57, -53, 124, -53, 252, -113, 128,
	-113, -113, 123, -53, 115, 117, 120, 52, -18, -53,
	-112, 128, 57, -112, -112, -112, -53, 112, -53, 57,
	30, -132, -190, -121, 244, 57, 155, 123, 156, 125,
	-132, -132, -132, -132, -132, 159, 160, -132, -110, -109,
	226, 227, 217, 225, 12, 217, 158, 226, -132, -131,
	-131, -191, 56, -90, 19, 31, -39, -126, -86, -87,
	-39, -85, -2, -26, 36, -30, 21, 65, 11, -123,
	73, 72, 89, -122, 22, -120, 59, 112, -39, -60,
	92, 74, 90, 91, 76, 94, 93, 104, 97, 98,
	99, 100, 101, 102, 103, 95, 96, 107, 82, 83,
	84, 85, 86, 87, 88, -106, -190, -77, -190, 113,
	114, -63, -63, -63, -63, -63, -63, -63, -63, -190,
	-2, -72, -39, -190, -190, -190, -190, -190, -190, -190,
	-190, -190, -81, -39, -190, -194, -69, -190, -194, -69,
	-194, -69, -194, -190, -194, -69, -194, -69, -194, -194,
	-69, -190, -190, -190, -190, -190, -190, -54, 26, -53,
	-41, -42, -43, -44, -55, -77, -190, -53, -53, -48,
	-192, 55, 11, 53, 55, -97, 164, -98, -102, 234,
	236, 82, -125, -120, 59, 29, 30, 56, 55, -53,
	-137, -140, -142, -141, -143, -138, -139, 184, 185, 108,
	188, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 30, 145, 180, 181, 182, 183, 200, 201, 202,
	203, 204, 205, 206, 207, 167, 186, 263, 168, 169,
	170, 171, 172, 173, 175, 176, 177, 178, 179, 57,
	-132, 125, 57, 74, 57, -53, -53, -132, 157, 157,
	123, 123, -53, 55, 126, -48, 23, 52, -53, 57,
	57, -127, -126, -118, -132, -132, -132, -132, -132, -53,
	-132, -132, -132, -132, 11, -108, 11, 92, -39, 52,
	52, 9, 92, 55, 18, 112, 55, -88, 24, 25,
	-89, -191, -32, -64, -120, 60, 63, -31, 43, -53,
	-39, -39, -70, 68, 74, 69, 70, -122, 99, -127,
	-121, -118, -63, -71, -74, -77, 64, 92, 90, 91,
	76, -63, -63, -63, -63, -63, -63, -63, -63, -63,
	-63, -63, -63, -63, -63, -63, -133, 57, 59, 57,
	-62, -62, -120, -37, 21, -36, -38, -191, 55, -191,
	-2, -36, -36, -39, -39, -78, 59, -120, -126, -78,
	59, -36, -30, -79, -80, 78, -78, -191, -63, -120,
	-120, -36, -37, -36, -36, -93, 151, -53, 30, 55,
	-49, -51, -50, -52, 42, 46, 48, 43, 44, 45,
	49, -130, 22, -41, -190, -129, 151, -128, 22, -126,
	59, -93, 53, -41, -53, -101, -98, 55, 235, 237,
	238, 52, 71, -39, -149, 107, -167, -168, -169, -121,
	59, 60, -158, -159, -160, -170, 137, -175, 130, 132,
	129, -161, 138, 124, 28, 56, -154, 68, 74, -150,
	212, -144, 54, -144, -144, -144, -144, -148, 187, -148,
	-148, -148, 54, 54, -144, -144, -144, -152, 54, -152,
	-152, -153, 54, -153, -124, 53, -53, -132, 23, -132,
	-114, 120, 117, 118, -178, 116, 209, 187, 66, 29,
	15, 253, 151, 268, 57, 152, -120, -120, -53, -53,
	120, 117, 30, -53, -53, -53, -132, -53, -111, 90,
	12, -126, -126, -53, -53, 38, -39, -39, -127, -87,
	-90, -104, 19, 11, 34, 34, -36, 68, 69, 70,
	112, -190, -71, -63, -63, -63, -35, 146, 73, -191,
	-191, -36, 55, -39, -191, -191, -191, 55, 53, 22,
	55, 11, 55, 11, 112, 55, 11, 55, 11, -191,
	-36, -82, -80, 80, -39, -191, -191, 55, 55, -191,
	-191, -191, -191, -61, 30, 34, -2, -190, -190, -96,
	-100, -78, -42, -43, -43, -42, -43, 42, 42, 42,
	47, 42, 47, 42, -50, -126, -191, -56, 50, 127,
	51, -190, -128, -57, 12, -41, -57, -102, -103, 239,
	236, 242, 57, 59, 55, -169, 82, 54, 57, 28,
	-161, -161, -162, 57, -162, 28, -146, 29, 68, -151,
	213, 60, -148, -148, -149, 30, -149, -149, -149, -157,
	59, -157, 60, 60, 52, -120, -132, -131, -184, 131,
	137, 138, 133, 57, 124, 28, 130, 132, 151, 129,
	-184, -115, -116, 126, 22, 124, 28, 151, -183, 53,
	157, 131, 157, 131, -96, 126, -132, -108, 59, -39,
	39, 112, -53, -40, 11, 99, -121, -37, -35, 73,
	-63, -63, -191, -38, -136, 108, 184, 145, 182, 178,
	198, 189, 211, 180, 212, -133, -136, -63, -63, -63,
	-63, -121, -63, -63, -63, -63, 262, -85, 81, -39,
	79, -63, -63, -95, 52, -96, -73, -75, -74, -190,
	-2, -91, -120, -94, -120, -57, 55, 82, -46, -45,
	52, 53, -47, 52, -45, 42, 42, 124, 124, 124,
	-94, -85, -39, -57, 236, 240, 241, -168, -169, -172,
	-171, -120, -175, -162, -162, 54, -147, 52, -63, 56,
	-149, -149, 57, 108, 56, 55, 56, 55, 56, 55,
	-53, -131, -131, -53, -131, -120, -181, 265, -182, 57,
	-120, -158, -120, -120, -53, -111, -57, -41, -191, -63,
	-191, -144, -144, -144, -153, -144, 172, -144, 172, -191,
	-191, -191, 55, 19, -191, 55, 19, -191, 55, 19,
	-191, 55, 19, -190, -34, 258, -39, 55, 55, 27,
	-95, 55, -191, -191, -191, 55, 112, -191, 55, -85,
	-100, -39, -39, 54, -39, -190, -190, -190, -191, -89,
	56, 55, -144, -92, -120, -155, 209, 9, -148, 59,
	-148, 60, 60, -132, 26, -180, -179, -121, 54, -83,
	13, -148, 57, -63, -63, -63, -63, -63, -63, -63,
	-63, -63, -191, 59, -63, -63, 28, -75, 34, -2,
	-190, -120, -120, -120, -89, -92, -92, -92, -92, -129,
	-174, -173, 53, 134, 66, -171, 56, 55, -156, 130,
	28, 129, -66, -149, -149, 56, 56, -190, 55, 82,
	-92, -84, 14, 16, -191, -191, -191, -191, -191, -191,
	-191, -191, -33, 92, 265, -191, -191, 9, -73, -2,
	112, 56, -191, -191, -191, -56, -173, 57, -163, 82,
	59, 140, -120, -145, 66, 28, 28, -176, -177, 151,
	-179, -169, 56, -39, -72, -191, 263, 49, 266, -96,
	-191, -120, 60, -53, 59, -191, 55, -120, -183, 39,
	264, 267, 54, -177, 34, -181, 39, -92, 153, 265,
	56, 154, 266, -186, -187, 52, -190, 267, -187, 52,
	10, 9, -63, 150, -185, 141, 136, 139, 30, -185,
	-191, -191, 135, 29, 68,
}
var yyDef = [...]int{

	23, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 565, 0, 317, 317, 317, 317, 317, 317,
	0, 636, 619, 0, 0, 0, 0, -2, 304, 305,
	0, 307, 308, 861, 861, 861, 861, 861, 0, 0,
	861, 0, 35, 36, 859, 1, 3, 573, 0, 0,
	321, 324, 319, 0, 619, 619, 0, 0, 62, 63,
	0, 0, 0, 845, 0, 617, 617, 617, 637, 638,
	641, 642, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 0, 0, 0, 620,
	0, 615, 0, 615, 615, 615, 0, 253, 389, 645,
	646, 845, 0, 0, 0, 862, 0, 862, 862, 266,
	862, 862, 269, 862, 0, 862, 0, 276, 278, 279,
	280, 281, 0, 286, 862, 301, 302, 291, 303, 306,
	309, 310, 311, 312, 313, 861, 861, 316, 29, 577,
	0, 0, 565, 31, 0, 317, 322, 323, 327, 325,
	326, 318, 0, 335, 339, 0, 397, 0, 402, 404,
	-2, -2, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 468, 469, 470,
	550, 551, 552, 553, 554, 555, 556, 557, 406, 407,
	547, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 538, 0, 511, 511, 511, 511, 511, 511, 511,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 47, 0, 836, 601, -2, -2, 0, 0,
	643, 644, -2, 754, -2, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	0, 0, 81, 0, 79, 0, 862, 0, 0, 0,
	0, 0, 0, 862, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 254, 862,
	862, 257, 863, 864, 862, 862, 862, 0, 862, 862,
	264, 265, 267, 268, 270, 862, 862, 272, 0, 294,
	292, 293, 288, 289, 0, 282, 283, 0, 287, 314,
	315, 30, 860, 24, 0, 0, 574, 0, 566, 567,
	570, 573, 29, 324, 0, 329, 328, 320, 0, 336,
	0, 0, 0, 340, 0, 342, 343, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 427, 428, 429, 430, 403, 0, 417, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 465, 0, 331,
	29, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 539, 0, 495, 503, 0, 496, 504,
	497, 505, 498, 0, 499, 506, 500, 507, 501, 502,
	508, 0, 0, 0, 331, 0, 0, 45, 0, 388,
	0, 346, 348, 349, 350, -2, 0, 372, -2, 0,
	0, 0, 41, 42, 0, 48, 836, 50, 51, 0,
	0, 0, 159, 610, 611, 612, 608, 203, 0, 0,
	147, 143, 87, 88, 89, 136, 91, 136, 136, 136,
	136, 156, 156, 156, 156, 119, 120, 121, 122, 123,
	0, 0, 106, 136, 136, 136, 110, 126, 127, 128,
	129, 130, 131, 132, 133, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 138, 138, 138, 140, 140, 639,
	65, 0, 862, 0, 862, 77, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 247, 616, 0, 862, 250,
	251, 390, 647, 648, 255, 256, 258, 259, 260, 261,
	262, 263, 271, 275, 0, 297, 0, 0, 277, 0,
	0, 578, 0, 0, 0, 0, 0, 569, 571, 572,
	577, 32, 327, 0, 558, 0, 0, 0, 330, 27,
	398, 399, 401, 418, 0, 420, 422, 341, 337, 0,
	548, -2, 408, 409, 433, 434, 435, 0, 0, 0,
	0, 431, 413, 0, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 523, 524, 0,
	456, 457, 466, 0, 0, 332, 333, 436, 0, 596,
	29, 0, 0, 0, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 545, 542, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 380, 0, 0,
	0, 0, 371, 0, 0, 391, 804, 373, 0, 375,
	376, 395, 0, 395, 44, 602, 49, 0, 0, 54,
	55, 603, 604, 605, 606, 0, 78, 204, 206, 209,
	210, 211, 82, 83, 84, 0, 0, 191, 0, 0,
	185, 185, 0, 183, 184, 80, 150, 148, 0, 145,
	144, 90, 0, 156, 156, 113, 114, 159, 0, 159,
	159, 159, 0, 0, 107, 108, 109, 101, 0, 102,
	103, 104, 0, 105, 0, 0, 862, 67, 618, 68,
	861, 0, 0, 631, 218, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 0, 69, 220, 222, 221,
	0, 0, 0, 0, 245, 862, 249, 294, 274, 0,
	0, 295, 296, 284, 285, 0, 575, 576, 0, 568,
	25, 0, 613, 614, 559, 560, 344, 419, 421, 423,
	0, 331, 410, 431, 414, 0, 411, 0, 0, 405,
	471, 0, 0, 438, -2, 474, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 0, 543, 0, 0, 494, 513, 0, 0, 514,
	515, 516, 517, 590, 0, 0, -2, 0, 0, 395,
	598, 0, 347, 366, 368, 0, 363, 378, 379, 381,
	0, 383, 0, 385, 386, 351, 353, 354, 0, 0,
	0, 0, 374, 565, 0, 395, 40, 52, 53, 0,
	0, 59, 160, 161, 0, 207, 0, 0, 0, 178,
	185, 185, 181, 186, 182, 0, 152, 0, 149, 86,
	146, 0, 159, 159, 115, 0, 116, 117, 118, 0,
	134, 0, 0, 0, 0, 640, 66, 212, 861, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	861, 0, 861, 632, 633, 634, 635, 0, 72, 0,
	0, 0, 0, 0, 227, 0, 248, 297, 298, 299,
	579, 0, 26, 395, 0, 338, 549, 0, 412, 0,
	432, 415, 472, 334, 0, 136, 136, 528, 136, 140,
	531, 136, 533, 136, 536, 0, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 0, 540, 493, 546,
	0, 0, 0, 33, 0, 590, 580, 592, 594, 0,
	29, 0, 586, 0, 358, 565, 0, 0, 360, 367,
	0, 0, 361, 0, 362, 382, 384, 0, 0, 0,
	0, 573, 396, 39, 56, 57, 58, 205, 208, 0,
	187, 136, 190, 179, 180, 0, 154, 0, 151, 137,
	111, 112, 157, 158, 156, 0, 156, 0, 141, 0,
	862, 213, 214, 215, 216, 0, 219, 0, 70, 71,
	0, 225, 224, 226, 246, 273, 561, 345, 473, 416,
	476, 525, 156, 529, 530, 532, 534, 535, 537, 478,
	477, 479, 0, 0, 485, 0, 0, 482, 0, 0,
	488, 0, 0, 0, 0, 0, 544, 0, 0, 0,
	34, 0, 595, -2, 0, 0, 0, 46, 0, 573,
	599, 600, 364, 0, 369, 0, 0, 0, 372, 38,
	170, 0, 189, 0, 356, 162, 155, 0, 159, 135,
	159, 0, 0, 64, 0, 73, 74, 0, 0, 563,
	0, 526, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 492, 541, 0, 0, 0, 593, 0, -2,
	0, 588, 587, 359, 37, 0, 0, 0, 0, 391,
	169, 171, 0, 176, 0, 188, 0, 0, 167, 0,
	164, 166, 153, 124, 125, 139, 142, 0, 0, 0,
	0, 28, 0, 0, 480, 481, 486, 487, 483, 484,
	489, 490, 0, 0, 0, 509, 510, 0, 583, 29,
	0, 365, 392, 393, 394, 355, 172, 173, 0, 177,
	175, 0, 357, 85, 0, 163, 165, 0, 240, 0,
	75, 76, 69, 564, 562, 491, 0, 0, 0, 591,
	-2, 589, 174, 0, 168, 239, 0, 0, 72, 519,
	0, 522, 0, 241, 0, 223, 520, 0, 0, 0,
	192, 0, 0, 193, 194, 0, 0, 521, 195, 0,
	0, 0, 0, 0, 196, 198, 199, 0, 0, 197,
	242, 243, 200, 201, 202,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 75, 3, 3, 3, 102, 94, 3,
	54, 56, 99, 97, 55, 98, 112, 100, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 269,
	83, 82, 84, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 104, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 93, 3, 105,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	76, 77, 78, 79, 80, 81, 85, 86, 87, 88,
	89, 90, 91, 92, 95, 96, 101, 103, 106, 107,
	108, 109, 110, 111, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:316
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:321
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:322
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:326
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:348
		{
			setParseTree(yylex, nil)
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:354
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 25:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:362
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 26:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:366
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 27:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:372
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 28:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:379
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:385
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:389
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:395
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:399
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:406
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:418
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:430
		{
			yyVAL.str = InsertStr
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:434
		{
			yyVAL.str = ReplaceStr
		}
	case 37:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:440
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:446
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:450
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:454
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:459
		{
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:460
		{
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:464
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:468
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:473
		{
			yyVAL.partitions = nil
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:477
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:483
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:487
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:491
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:495
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:501
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:505
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:511
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:515
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:519
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:525
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:529
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:533
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:537
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.str = SessionStr
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
			yyVAL.str = GlobalStr
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:553
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:558
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:564
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:569
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:573
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:577
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:581
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:601
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:606
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:617
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:629
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:636
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:643
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:647
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:653
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:658
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:662
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:672
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:694
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 125:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:894
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:904
		{
			yyVAL.sqlVal = nil
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:908
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:913
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:917
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:925
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:935
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:943
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:947
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:952
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:962
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:970
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:975
		{
			yyVAL.optVal = nil
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:979
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:984
		{
			yyVAL.optVal = nil
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:993
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1002
		{
			yyVAL.str = ""
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1006
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1015
		{
			yyVAL.str = ""
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1019
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1023
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1028
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1032
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1036
		{
			yyVAL.colKeyOpt = colKey
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1044
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1049
		{
			yyVAL.sqlVal = nil
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 169:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1059
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1063
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1069
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1094
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1112
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1135
		{
			yyVAL.str = ""
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1155
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1161
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 192:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1172
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 193:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1176
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 194:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1180
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 195:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1184
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1218
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1223
		{
			yyVAL.str = ""
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1227
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1239
		{
			yyVAL.str = yyDollar[1].str
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1243
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1267
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1271
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1275
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 215:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1279
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1284
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1289
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1293
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 219:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1297
		{
			yyVAL.statement = &DDL{Action: CreateVindexStr, VindexSpec: &VindexSpec{
				Name:   yyDollar[5].colIdent,
				Type:   yyDollar[6].colIdent,
				Params: yyDollar[7].vindexParams,
			}}
		}
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1305
		{
			yyVAL.statement = &DDL{Action: DropVindexStr, VindexSpec: &VindexSpec{
				Name: yyDollar[5].colIdent,
			}}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1311
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1315
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 223:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1319
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 224:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1332
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 225:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1342
		{
			yyVAL.statement = &DDL{
				Action:     AddVschemaColStr,
				Table:      yyDollar[4].tableName,
				VschemaCol: yyDollar[7].columnDefinition,
			}
		}
	case 226:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1350
		{
			yyVAL.statement = &DDL{
				Action:     DropVschemaColStr,
				Table:      yyDollar[4].tableName,
				VschemaCol: &ColumnDefinition{Name: yyDollar[7].colIdent},
			}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1358
		{
			yyVAL.statement = &DDL{
				Action:         SetVschemaUpdatesStr,
				Table:          yyDollar[4].tableName,
				VschemaUpdates: yyDollar[6].updateExprs,
			}
		}
	case 239:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1381
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1387
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1391
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 242:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1397
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 243:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1401
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1417
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1425
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 248:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1433
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1438
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1446
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1450
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1456
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1460
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1465
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1471
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1476
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1480
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1484
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1489
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1493
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1497
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1501
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1505
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1529
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1537
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1545
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1550
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1560
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1564
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1568
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1594
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1598
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1602
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1606
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = ""
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = "full "
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = ""
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1666
		{
			yyVAL.showFilter = nil
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = ""
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = SessionStr
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = GlobalStr
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1694
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.statement = &Begin{}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1708
		{
			yyVAL.statement = &Begin{}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.statement = &Commit{}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.statement = &Rollback{}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			yyVAL.statement = &OtherRead{}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.statement = &OtherRead{}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.statement = &OtherRead{}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1738
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1760
		{
			setAllowComments(yylex, true)
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1770
		{
			yyVAL.bytes2 = nil
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = UnionStr
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = UnionAllStr
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = UnionDistinctStr
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = SQLCacheStr
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = ""
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = DistinctStr
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = StraightJoinHint
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1824
		{
			yyVAL.selectExprs = nil
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1838
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1852
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1856
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1861
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1881
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1895
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1919
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 355:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1929
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1962
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1966
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1970
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1982
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1986
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1992
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1997
		{
			yyVAL.empty = struct{}{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.empty = struct{}{}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2002
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = JoinStr
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.str = JoinStr
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = JoinStr
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = StraightJoinStr
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = LeftJoinStr
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2047
		{
			yyVAL.str = LeftJoinStr
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.str = RightJoinStr
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yyVAL.str = RightJoinStr
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = NaturalJoinStr
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2089
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2094
		{
			yyVAL.indexHints = nil
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2098
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2102
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2106
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2111
		{
			yyVAL.expr = nil
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2171
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2175
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2179
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2183
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2187
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2191
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2195
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2199
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2203
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.str = IsNullStr
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2217
		{
			yyVAL.str = IsNotNullStr
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.str = IsTrueStr
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2225
		{
			yyVAL.str = IsNotTrueStr
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.str = IsFalseStr
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = IsNotFalseStr
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = EqualStr
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = LessThanStr
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.str = GreaterThanStr
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.str = LessEqualStr
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.str = GreaterEqualStr
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2259
		{
			yyVAL.str = NotEqualStr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2268
		{
			yyVAL.expr = nil
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2272
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2340
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2376
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2400
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2422
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2426
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2448
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2452
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2456
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2466
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2470
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 476:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2474
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 477:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2478
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 478:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2482
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2486
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: nil}
		}
	case 480:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2490
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 481:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2494
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 482:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2498
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: nil}
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2502
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 484:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2506
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2510
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: nil}
		}
	case 486:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2514
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 487:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2518
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 488:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2522
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: nil}
		}
	case 489:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2526
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 490:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2530
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 491:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2534
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2538
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2542
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2546
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2585
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2590
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2618
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2622
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 510:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2626
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2646
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2650
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2654
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2658
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yyVAL.str = BooleanModeStr
		}
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 521:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2676
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = QueryExpansionStr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2700
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2704
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2751
		{
			yyVAL.expr = nil
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2760
		{
			yyVAL.str = string("")
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2780
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			yyVAL.expr = nil
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2795
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2799
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2803
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.expr = &NullVal{}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2856
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2861
		{
			yyVAL.exprs = nil
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2870
		{
			yyVAL.expr = nil
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2879
		{
			yyVAL.orderBy = nil
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2893
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = AscScr
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = AscScr
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = DescScr
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2917
		{
			yyVAL.limit = nil
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2921
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2925
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2929
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.str = ForUpdateStr
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2942
		{
			yyVAL.str = ShareModeStr
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2955
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2968
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2972
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2976
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2995
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3000
		{
			yyVAL.updateExprs = nil
		}
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3004
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3014
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3020
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3030
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3056
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3072
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3076
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3080
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.bytes = []byte("charset")
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3098
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.expr = &Default{}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3115
		{
			yyVAL.byt = 0
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			yyVAL.byt = 1
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3120
		{
			yyVAL.empty = struct{}{}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3125
		{
			yyVAL.str = ""
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = IgnoreStr
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.empty = struct{}{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3133
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3135
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3137
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3152
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3154
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3156
		{
			yyVAL.empty = struct{}{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.empty = struct{}{}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3165
		{
			yyVAL.empty = struct{}{}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3172
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3174
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3195
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			decNesting(yylex)
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3456
		{
			skipToEnd(yylex)
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3461
		{
			skipToEnd(yylex)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			skipToEnd(yylex)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
