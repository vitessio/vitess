// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTrees(yylex yyLexer, stmts []Statement) {
	if len(stmts) > 1 && stmts[len(stmts)-1] == nil {
		stmts = stmts[:len(stmts)-1]
	}
	yylex.(*Tokenizer).ParseTrees = stmts
}

func resetTokenizer(yylex yyLexer) {
	yylex.(*Tokenizer).reset()
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const ELSEIF = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const SHIFT_LEFT = 57513
const SHIFT_RIGHT = 57514
const DIV = 57515
const MOD = 57516
const UNARY = 57517
const COLLATE = 57518
const BINARY = 57519
const UNDERSCORE_ARMSCII8 = 57520
const UNDERSCORE_ASCII = 57521
const UNDERSCORE_BIG5 = 57522
const UNDERSCORE_BINARY = 57523
const UNDERSCORE_CP1250 = 57524
const UNDERSCORE_CP1251 = 57525
const UNDERSCORE_CP1256 = 57526
const UNDERSCORE_CP1257 = 57527
const UNDERSCORE_CP850 = 57528
const UNDERSCORE_CP852 = 57529
const UNDERSCORE_CP866 = 57530
const UNDERSCORE_CP932 = 57531
const UNDERSCORE_DEC8 = 57532
const UNDERSCORE_EUCJPMS = 57533
const UNDERSCORE_EUCKR = 57534
const UNDERSCORE_GB18030 = 57535
const UNDERSCORE_GB2312 = 57536
const UNDERSCORE_GBK = 57537
const UNDERSCORE_GEOSTD8 = 57538
const UNDERSCORE_GREEK = 57539
const UNDERSCORE_HEBREW = 57540
const UNDERSCORE_HP8 = 57541
const UNDERSCORE_KEYBCS2 = 57542
const UNDERSCORE_KOI8R = 57543
const UNDERSCORE_KOI8U = 57544
const UNDERSCORE_LATIN1 = 57545
const UNDERSCORE_LATIN2 = 57546
const UNDERSCORE_LATIN5 = 57547
const UNDERSCORE_LATIN7 = 57548
const UNDERSCORE_MACCE = 57549
const UNDERSCORE_MACROMAN = 57550
const UNDERSCORE_SJIS = 57551
const UNDERSCORE_SWE7 = 57552
const UNDERSCORE_TIS620 = 57553
const UNDERSCORE_UCS2 = 57554
const UNDERSCORE_UJIS = 57555
const UNDERSCORE_UTF16 = 57556
const UNDERSCORE_UTF16LE = 57557
const UNDERSCORE_UTF32 = 57558
const UNDERSCORE_UTF8 = 57559
const UNDERSCORE_UTF8MB4 = 57560
const UNDERSCORE_UTF8MB3 = 57561
const INTERVAL = 57562
const WINDOW_EXPR = 57563
const JSON_EXTRACT_OP = 57564
const JSON_UNQUOTE_EXTRACT_OP = 57565
const CREATE = 57566
const ALTER = 57567
const DROP = 57568
const RENAME = 57569
const ANALYZE = 57570
const ADD = 57571
const FLUSH = 57572
const CHANGE = 57573
const MODIFY = 57574
const DEALLOCATE = 57575
const REVERT = 57576
const QUERIES = 57577
const DECLARE = 57578
const FOUND = 57579
const HANDLER = 57580
const CONTINUE = 57581
const EXIT = 57582
const UNDO = 57583
const SQLEXCEPTION = 57584
const SQLSTATE = 57585
const SQLWARNING = 57586
const CONDITION = 57587
const SCHEMA = 57588
const TABLE = 57589
const INDEX = 57590
const VIEW = 57591
const TO = 57592
const IGNORE = 57593
const IF = 57594
const PRIMARY = 57595
const COLUMN = 57596
const SPATIAL = 57597
const FULLTEXT = 57598
const KEY_BLOCK_SIZE = 57599
const CHECK = 57600
const INDEXES = 57601
const ACTION = 57602
const CASCADE = 57603
const CONSTRAINT = 57604
const FOREIGN = 57605
const NO = 57606
const REFERENCES = 57607
const RESTRICT = 57608
const SIGNAL = 57609
const SHOW = 57610
const DESCRIBE = 57611
const EXPLAIN = 57612
const DATE = 57613
const ESCAPE = 57614
const REPAIR = 57615
const OPTIMIZE = 57616
const TRUNCATE = 57617
const COALESCE = 57618
const EXCHANGE = 57619
const REBUILD = 57620
const PARTITIONING = 57621
const REMOVE = 57622
const PREPARE = 57623
const EXECUTE = 57624
const MAXVALUE = 57625
const PARTITION = 57626
const REORGANIZE = 57627
const LESS = 57628
const THAN = 57629
const PROCEDURE = 57630
const TRIGGER = 57631
const VINDEX = 57632
const VINDEXES = 57633
const DIRECTORY = 57634
const NAME = 57635
const UPGRADE = 57636
const STATUS = 57637
const VARIABLES = 57638
const WARNINGS = 57639
const CASCADED = 57640
const DEFINER = 57641
const OPTION = 57642
const SQL = 57643
const UNDEFINED = 57644
const SEQUENCE = 57645
const MERGE = 57646
const TEMPORARY = 57647
const TEMPTABLE = 57648
const INVOKER = 57649
const SECURITY = 57650
const FIRST = 57651
const AFTER = 57652
const LAST = 57653
const VITESS_MIGRATION = 57654
const CANCEL = 57655
const RETRY = 57656
const LAUNCH = 57657
const COMPLETE = 57658
const CLEANUP = 57659
const THROTTLE = 57660
const UNTHROTTLE = 57661
const FORCE_CUTOVER = 57662
const CUTOVER_THRESHOLD = 57663
const EXPIRE = 57664
const RATIO = 57665
const VITESS_THROTTLER = 57666
const BEGIN = 57667
const START = 57668
const TRANSACTION = 57669
const COMMIT = 57670
const ROLLBACK = 57671
const SAVEPOINT = 57672
const RELEASE = 57673
const WORK = 57674
const CONSISTENT = 57675
const SNAPSHOT = 57676
const UNRESOLVED = 57677
const TRANSACTIONS = 57678
const BIT = 57679
const TINYINT = 57680
const SMALLINT = 57681
const MEDIUMINT = 57682
const INT = 57683
const INTEGER = 57684
const BIGINT = 57685
const INTNUM = 57686
const REAL = 57687
const DOUBLE = 57688
const FLOAT_TYPE = 57689
const FLOAT4_TYPE = 57690
const FLOAT8_TYPE = 57691
const DECIMAL_TYPE = 57692
const NUMERIC = 57693
const TIME = 57694
const TIMESTAMP = 57695
const DATETIME = 57696
const YEAR = 57697
const CHAR = 57698
const VARCHAR = 57699
const BOOL = 57700
const CHARACTER = 57701
const VARBINARY = 57702
const NCHAR = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const JSON_SCHEMA_VALID = 57713
const JSON_SCHEMA_VALIDATION_REPORT = 57714
const ENUM = 57715
const GEOMETRY = 57716
const POINT = 57717
const LINESTRING = 57718
const POLYGON = 57719
const GEOMCOLLECTION = 57720
const GEOMETRYCOLLECTION = 57721
const MULTIPOINT = 57722
const MULTILINESTRING = 57723
const MULTIPOLYGON = 57724
const ASCII = 57725
const UNICODE = 57726
const VECTOR = 57727
const NULLX = 57728
const AUTO_INCREMENT = 57729
const APPROXNUM = 57730
const SIGNED = 57731
const UNSIGNED = 57732
const ZEROFILL = 57733
const PURGE = 57734
const BEFORE = 57735
const CODE = 57736
const COLLATION = 57737
const COLUMNS = 57738
const DATABASES = 57739
const ENGINES = 57740
const EVENT = 57741
const EXTENDED = 57742
const FIELDS = 57743
const FULL = 57744
const FUNCTION = 57745
const GTID_EXECUTED = 57746
const KEYSPACES = 57747
const OPEN = 57748
const PLUGINS = 57749
const PRIVILEGES = 57750
const PROCESSLIST = 57751
const SCHEMAS = 57752
const TABLES = 57753
const TRIGGERS = 57754
const USER = 57755
const VGTID_EXECUTED = 57756
const VITESS_KEYSPACES = 57757
const VITESS_METADATA = 57758
const VITESS_MIGRATIONS = 57759
const VITESS_REPLICATION_STATUS = 57760
const VITESS_SHARDS = 57761
const VITESS_TABLETS = 57762
const VITESS_TARGET = 57763
const VSCHEMA = 57764
const VITESS_THROTTLED_APPS = 57765
const NAMES = 57766
const GLOBAL = 57767
const SESSION = 57768
const ISOLATION = 57769
const LEVEL = 57770
const READ = 57771
const WRITE = 57772
const ONLY = 57773
const REPEATABLE = 57774
const COMMITTED = 57775
const UNCOMMITTED = 57776
const SERIALIZABLE = 57777
const CLASS_ORIGIN = 57778
const SUBCLASS_ORIGIN = 57779
const MESSAGE_TEXT = 57780
const MYSQL_ERRNO = 57781
const CONSTRAINT_CATALOG = 57782
const CONSTRAINT_SCHEMA = 57783
const CONSTRAINT_NAME = 57784
const CATALOG_NAME = 57785
const SCHEMA_NAME = 57786
const TABLE_NAME = 57787
const COLUMN_NAME = 57788
const CURSOR_NAME = 57789
const ADDDATE = 57790
const CURRENT_TIMESTAMP = 57791
const DATABASE = 57792
const CURRENT_DATE = 57793
const CURDATE = 57794
const DATE_ADD = 57795
const DATE_SUB = 57796
const NOW = 57797
const SUBDATE = 57798
const CURTIME = 57799
const CURRENT_TIME = 57800
const LOCALTIME = 57801
const LOCALTIMESTAMP = 57802
const CURRENT_USER = 57803
const UTC_DATE = 57804
const UTC_TIME = 57805
const UTC_TIMESTAMP = 57806
const SYSDATE = 57807
const DAY = 57808
const DAY_HOUR = 57809
const DAY_MICROSECOND = 57810
const DAY_MINUTE = 57811
const DAY_SECOND = 57812
const HOUR = 57813
const HOUR_MICROSECOND = 57814
const HOUR_MINUTE = 57815
const HOUR_SECOND = 57816
const MICROSECOND = 57817
const MINUTE = 57818
const MINUTE_MICROSECOND = 57819
const MINUTE_SECOND = 57820
const MONTH = 57821
const QUARTER = 57822
const SECOND = 57823
const SECOND_MICROSECOND = 57824
const YEAR_MONTH = 57825
const WEEK = 57826
const SQL_TSI_DAY = 57827
const SQL_TSI_WEEK = 57828
const SQL_TSI_HOUR = 57829
const SQL_TSI_MINUTE = 57830
const SQL_TSI_MONTH = 57831
const SQL_TSI_QUARTER = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MICROSECOND = 57834
const SQL_TSI_YEAR = 57835
const REPLACE = 57836
const CONVERT = 57837
const CAST = 57838
const SUBSTR = 57839
const SUBSTRING = 57840
const MID = 57841
const SEPARATOR = 57842
const TIMESTAMPADD = 57843
const TIMESTAMPDIFF = 57844
const WEIGHT_STRING = 57845
const LTRIM = 57846
const RTRIM = 57847
const TRIM = 57848
const JSON_ARRAY = 57849
const JSON_OBJECT = 57850
const JSON_QUOTE = 57851
const JSON_DEPTH = 57852
const JSON_TYPE = 57853
const JSON_LENGTH = 57854
const JSON_VALID = 57855
const JSON_ARRAY_APPEND = 57856
const JSON_ARRAY_INSERT = 57857
const JSON_INSERT = 57858
const JSON_MERGE = 57859
const JSON_MERGE_PATCH = 57860
const JSON_MERGE_PRESERVE = 57861
const JSON_REMOVE = 57862
const JSON_REPLACE = 57863
const JSON_SET = 57864
const JSON_UNQUOTE = 57865
const COUNT = 57866
const AVG = 57867
const MAX = 57868
const MIN = 57869
const SUM = 57870
const GROUP_CONCAT = 57871
const BIT_AND = 57872
const BIT_OR = 57873
const BIT_XOR = 57874
const STD = 57875
const STDDEV = 57876
const STDDEV_POP = 57877
const STDDEV_SAMP = 57878
const VAR_POP = 57879
const VAR_SAMP = 57880
const VARIANCE = 57881
const ANY_VALUE = 57882
const REGEXP_INSTR = 57883
const REGEXP_LIKE = 57884
const REGEXP_REPLACE = 57885
const REGEXP_SUBSTR = 57886
const ExtractValue = 57887
const UpdateXML = 57888
const GET_LOCK = 57889
const RELEASE_LOCK = 57890
const RELEASE_ALL_LOCKS = 57891
const IS_FREE_LOCK = 57892
const IS_USED_LOCK = 57893
const LOCATE = 57894
const POSITION = 57895
const ST_GeometryCollectionFromText = 57896
const ST_GeometryFromText = 57897
const ST_LineStringFromText = 57898
const ST_MultiLineStringFromText = 57899
const ST_MultiPointFromText = 57900
const ST_MultiPolygonFromText = 57901
const ST_PointFromText = 57902
const ST_PolygonFromText = 57903
const ST_GeometryCollectionFromWKB = 57904
const ST_GeometryFromWKB = 57905
const ST_LineStringFromWKB = 57906
const ST_MultiLineStringFromWKB = 57907
const ST_MultiPointFromWKB = 57908
const ST_MultiPolygonFromWKB = 57909
const ST_PointFromWKB = 57910
const ST_PolygonFromWKB = 57911
const ST_AsBinary = 57912
const ST_AsText = 57913
const ST_Dimension = 57914
const ST_Envelope = 57915
const ST_IsSimple = 57916
const ST_IsEmpty = 57917
const ST_GeometryType = 57918
const ST_X = 57919
const ST_Y = 57920
const ST_Latitude = 57921
const ST_Longitude = 57922
const ST_EndPoint = 57923
const ST_IsClosed = 57924
const ST_Length = 57925
const ST_NumPoints = 57926
const ST_StartPoint = 57927
const ST_PointN = 57928
const ST_Area = 57929
const ST_Centroid = 57930
const ST_ExteriorRing = 57931
const ST_InteriorRingN = 57932
const ST_NumInteriorRings = 57933
const ST_NumGeometries = 57934
const ST_GeometryN = 57935
const ST_LongFromGeoHash = 57936
const ST_PointFromGeoHash = 57937
const ST_LatFromGeoHash = 57938
const ST_GeoHash = 57939
const ST_AsGeoJSON = 57940
const ST_GeomFromGeoJSON = 57941
const MATCH = 57942
const AGAINST = 57943
const BOOLEAN = 57944
const LANGUAGE = 57945
const WITH = 57946
const QUERY = 57947
const EXPANSION = 57948
const WITHOUT = 57949
const VALIDATION = 57950
const ROLLUP = 57951
const UNUSED = 57952
const ARRAY = 57953
const BYTE = 57954
const CUME_DIST = 57955
const DESCRIPTION = 57956
const DENSE_RANK = 57957
const EMPTY = 57958
const EXCEPT = 57959
const FIRST_VALUE = 57960
const GROUPING = 57961
const GROUPS = 57962
const JSON_TABLE = 57963
const LAG = 57964
const LAST_VALUE = 57965
const LATERAL = 57966
const LEAD = 57967
const NTH_VALUE = 57968
const NTILE = 57969
const OF = 57970
const OVER = 57971
const PERCENT_RANK = 57972
const RANK = 57973
const RECURSIVE = 57974
const ROW_NUMBER = 57975
const SYSTEM = 57976
const WINDOW = 57977
const ACTIVE = 57978
const ADMIN = 57979
const AUTOEXTEND_SIZE = 57980
const BUCKETS = 57981
const CLONE = 57982
const COLUMN_FORMAT = 57983
const COMPONENT = 57984
const DEFINITION = 57985
const ENFORCED = 57986
const ENGINE_ATTRIBUTE = 57987
const EXCLUDE = 57988
const FOLLOWING = 57989
const GET_MASTER_PUBLIC_KEY = 57990
const HISTOGRAM = 57991
const HISTORY = 57992
const INACTIVE = 57993
const INVISIBLE = 57994
const LOCKED = 57995
const MASTER_COMPRESSION_ALGORITHMS = 57996
const MASTER_PUBLIC_KEY_PATH = 57997
const MASTER_TLS_CIPHERSUITES = 57998
const MASTER_ZSTD_COMPRESSION_LEVEL = 57999
const NESTED = 58000
const NETWORK_NAMESPACE = 58001
const NOWAIT = 58002
const NULLS = 58003
const OJ = 58004
const OLD = 58005
const OPTIONAL = 58006
const ORDINALITY = 58007
const ORGANIZATION = 58008
const OTHERS = 58009
const PARTIAL = 58010
const PATH = 58011
const PERSIST = 58012
const PERSIST_ONLY = 58013
const PRECEDING = 58014
const PRIVILEGE_CHECKS_USER = 58015
const PROCESS = 58016
const RANDOM = 58017
const REFERENCE = 58018
const REQUIRE_ROW_FORMAT = 58019
const RESOURCE = 58020
const RESPECT = 58021
const RESTART = 58022
const RETAIN = 58023
const REUSE = 58024
const ROLE = 58025
const SECONDARY = 58026
const SECONDARY_ENGINE = 58027
const SECONDARY_ENGINE_ATTRIBUTE = 58028
const SECONDARY_LOAD = 58029
const SECONDARY_UNLOAD = 58030
const SIMPLE = 58031
const SKIP = 58032
const SRID = 58033
const THREAD_PRIORITY = 58034
const TIES = 58035
const UNBOUNDED = 58036
const VCPU = 58037
const VISIBLE = 58038
const RETURNING = 58039
const MANUAL = 58040
const PARALLEL = 58041
const QUALIFY = 58042
const TABLESAMPLE = 58043
const OUT = 58044
const INOUT = 58045
const FORMAT_BYTES = 58046
const FORMAT_PICO_TIME = 58047
const PS_CURRENT_THREAD_ID = 58048
const PS_THREAD_ID = 58049
const GTID_SUBSET = 58050
const GTID_SUBTRACT = 58051
const WAIT_FOR_EXECUTED_GTID_SET = 58052
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58053
const FORMAT = 58054
const TREE = 58055
const VITESS = 58056
const TRADITIONAL = 58057
const VTEXPLAIN = 58058
const VEXPLAIN = 58059
const PLAN = 58060
const LOCAL = 58061
const LOW_PRIORITY = 58062
const NO_WRITE_TO_BINLOG = 58063
const LOGS = 58064
const ERROR = 58065
const GENERAL = 58066
const HOSTS = 58067
const OPTIMIZER_COSTS = 58068
const USER_RESOURCES = 58069
const SLOW = 58070
const CHANNEL = 58071
const RELAY = 58072
const EXPORT = 58073
const CURRENT = 58074
const ROW = 58075
const ROWS = 58076
const AVG_ROW_LENGTH = 58077
const CONNECTION = 58078
const CHECKSUM = 58079
const DELAY_KEY_WRITE = 58080
const ENCRYPTION = 58081
const ENGINE = 58082
const INSERT_METHOD = 58083
const MAX_ROWS = 58084
const MIN_ROWS = 58085
const PACK_KEYS = 58086
const PASSWORD = 58087
const FIXED = 58088
const DYNAMIC = 58089
const COMPRESSED = 58090
const REDUNDANT = 58091
const COMPACT = 58092
const ROW_FORMAT = 58093
const STATS_AUTO_RECALC = 58094
const STATS_PERSISTENT = 58095
const STATS_SAMPLE_PAGES = 58096
const STORAGE = 58097
const MEMORY = 58098
const DISK = 58099
const PARTITIONS = 58100
const LINEAR = 58101
const RANGE = 58102
const LIST = 58103
const SUBPARTITION = 58104
const SUBPARTITIONS = 58105
const HASH = 58106

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"DECLARE",
	"FOUND",
	"HANDLER",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"SQLEXCEPTION",
	"SQLSTATE",
	"SQLWARNING",
	"CONDITION",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SIGNAL",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	16, 110,
	17, 110,
	-2, 6,
	-1, 57,
	1, 225,
	782, 225,
	-2, 233,
	-1, 58,
	149, 233,
	192, 233,
	376, 233,
	-2, 593,
	-1, 66,
	38, 854,
	265, 854,
	276, 854,
	312, 868,
	313, 868,
	-2, 856,
	-1, 71,
	267, 892,
	-2, 890,
	-1, 132,
	1, 226,
	782, 226,
	-2, 233,
	-1, 143,
	150, 478,
	270, 478,
	-2, 582,
	-1, 162,
	149, 233,
	192, 233,
	376, 233,
	-2, 602,
	-1, 775,
	178, 102,
	-2, 104,
	-1, 984,
	95, 1730,
	-2, 1552,
	-1, 985,
	95, 1731,
	237, 1735,
	-2, 1553,
	-1, 986,
	237, 1734,
	-2, 103,
	-1, 1072,
	65, 966,
	-2, 979,
	-1, 1077,
	264, 1713,
	-2, 1622,
	-1, 1159,
	275, 1179,
	280, 1179,
	-2, 489,
	-1, 1247,
	1, 650,
	782, 650,
	-2, 233,
	-1, 1571,
	237, 1735,
	-2, 1553,
	-1, 1784,
	65, 967,
	-2, 983,
	-1, 1785,
	65, 968,
	-2, 984,
	-1, 1862,
	149, 233,
	192, 233,
	376, 233,
	-2, 528,
	-1, 1939,
	150, 478,
	270, 478,
	-2, 582,
	-1, 1948,
	275, 1180,
	280, 1180,
	-2, 490,
	-1, 2395,
	237, 1739,
	-2, 1733,
	-1, 2396,
	237, 1735,
	-2, 1731,
	-1, 2514,
	149, 233,
	192, 233,
	376, 233,
	-2, 529,
	-1, 2521,
	28, 254,
	-2, 256,
	-1, 2995,
	86, 160,
	96, 160,
	-2, 1046,
	-1, 3059,
	757, 772,
	-2, 746,
	-1, 3293,
	55, 1672,
	-2, 1666,
	-1, 3612,
	97, 1613,
	-2, 1618,
	-1, 4137,
	757, 772,
	-2, 760,
	-1, 4177,
	16, 110,
	17, 110,
	165, 91,
	-2, 880,
	-1, 4234,
	165, 92,
	-2, 110,
	-1, 4254,
	98, 704,
	104, 704,
	114, 704,
	194, 704,
	195, 704,
	196, 704,
	197, 704,
	198, 704,
	199, 704,
	200, 704,
	201, 704,
	202, 704,
	203, 704,
	204, 704,
	205, 704,
	206, 704,
	207, 704,
	208, 704,
	209, 704,
	210, 704,
	211, 704,
	212, 704,
	213, 704,
	214, 704,
	215, 704,
	216, 704,
	217, 704,
	218, 704,
	219, 704,
	220, 704,
	221, 704,
	222, 704,
	223, 704,
	224, 704,
	225, 704,
	226, 704,
	227, 704,
	228, 704,
	229, 704,
	230, 704,
	231, 704,
	232, 704,
	233, 704,
	234, 704,
	235, 704,
	-2, 2135,
	-1, 4327,
	163, 97,
	165, 97,
	-2, 110,
	-1, 4411,
	165, 96,
	-2, 110,
	-1, 4417,
	16, 110,
	17, 110,
	-2, 101,
}

const yyPrivate = 57344

const yyLast = 61473

var yyAct = [...]int{
	1000, 3776, 3777, 3775, 995, 92, 4369, 987, 2189, 4358,
	4235, 4234, 4374, 4236, 948, 4387, 4119, 949, 807, 4375,
	3420, 4304, 4216, 2511, 4305, 4332, 4252, 2201, 3570, 1316,
	2068, 3725, 4169, 4376, 3434, 3345, 4381, 1865, 3352, 3398,
	90, 4021, 9, 2424, 4098, 2570, 2426, 3403, 3400, 3229,
	3418, 3360, 1314, 3399, 3713, 3417, 3397, 3402, 3401, 3306,
	2580, 3818, 779, 3310, 1191, 3307, 3624, 3610, 3829, 3389,
	3118, 3143, 2968, 4096, 2465, 129, 988, 953, 2485, 3646,
	2482, 3304, 46, 3294, 2955, 3600, 774, 773, 3029, 3441,
	2549, 1070, 3100, 92, 3056, 2940, 2554, 1129, 3030, 2611,
	3031, 171, 2499, 2980, 1097, 2486, 47, 2961, 2444, 1104,
	1067, 2487, 2929, 2913, 1070, 2381, 2349, 2185, 2223, 45,
	2939, 2135, 3091, 2589, 1964, 2474, 2556, 2348, 1167, 1139,
	1922, 3022, 157, 1076, 1149, 1946, 1854, 2997, 1154, 1834,
	776, 1096, 3635, 1002, 2453, 1819, 2489, 950, 3309, 1802,
	3144, 111, 2229, 1765, 1584, 2160, 2149, 112, 1509, 107,
	1492, 2064, 1953, 1136, 1133, 1137, 777, 2546, 1069, 1160,
	1073, 789, 1155, 1157, 1156, 2545, 784, 1853, 2466, 1092,
	3813, 1114, 1116, 2911, 1839, 1080, 1240, 1787, 106, 2256,
	2237, 1099, 3805, 1304, 1567, 1543, 2126, 2076, 1093, 1075,
	135, 133, 14, 13, 12, 3571, 114, 1065, 134, 175,
	1938, 140, 1074, 141, 1109, 1251, 1078, 1588, 113, 1290,
	1245, 4232, 99, 89, 1193, 766, 6, 4359, 3714, 1108,
	2582, 2583, 2584, 2582, 3386, 1593, 3047, 1210, 1211, 1212,
	2626, 1215, 1216, 1217, 1218, 709, 1312, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1196, 1130, 1084, 136, 1239, 142,
	3706, 2224, 2030, 1171, 1064, 4153, 3079, 3078, 4276, 1821,
	3108, 3109, 4148, 4149, 3408, 2142, 3408, 3671, 2141, 2140,
	2139, 2138, 3780, 2137, 2107, 1204, 1085, 3405, 1261, 1260,
	1123, 4154, 1124, 767, 3780, 3044, 1082, 4, 1066, 4127,
	706, 3049, 707, 4, 1068, 1146, 1817, 2909, 1170, 2421,
	2422, 2678, 3290, 1824, 2615, 751, 2957, 4308, 1822, 101,
	3233, 1141, 4349, 1145, 1144, 4363, 1098, 1197, 1200, 1201,
	4406, 1143, 136, 4303, 3406, 1526, 3406, 4280, 198, 4278,
	3574, 769, 3573, 1825, 1213, 118, 119, 120, 1823, 123,
	4362, 745, 2462, 2461, 3072, 3069, 199, 1798, 2614, 701,
	4099, 137, 4279, 3412, 4277, 3412, 2874, 1001, 2147, 3460,
	4231, 764, 765, 1506, 4017, 4016, 1503, 180, 3779, 4149,
	1195, 1058, 1059, 1060, 1061, 1122, 1126, 952, 1072, 1194,
	3779, 4318, 1077, 4027, 1147, 1063, 1052, 4274, 3737, 3726,
	136, 990, 1053, 1004, 1005, 1006, 991, 4213, 3719, 992,
	993, 3720, 994, 1122, 1126, 952, 1494, 2571, 1111, 1112,
	2685, 2608, 4026, 3011, 2194, 4257, 3486, 2455, 2910, 2613,
	1007, 1008, 1522, 3341, 745, 3342, 3343, 177, 4262, 1052,
	178, 2506, 2507, 3107, 990, 1053, 1004, 1005, 1006, 991,
	3736, 2682, 992, 993, 1855, 994, 1856, 4217, 4260, 2119,
	2120, 3006, 745, 2505, 3005, 3090, 197, 3007, 4267, 4268,
	3820, 1280, 1056, 1007, 1008, 1285, 1286, 1055, 3362, 3363,
	3050, 1505, 1309, 1268, 1523, 4261, 1524, 1525, 1269, 3409,
	2683, 3409, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 4221, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 4221, 746, 2565,
	91, 4120, 91, 4309, 1287, 1281, 3429, 1504, 1544, 91,
	3018, 1493, 181, 2072, 1288, 1274, 1308, 2949, 3361, 2950,
	2423, 187, 1307, 2559, 4310, 2971, 2524, 2523, 3438, 91,
	3364, 3457, 93, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1553, 1552, 1554, 1555, 3436, 2964, 2965, 3468, 3466, 3429,
	1487, 103, 2676, 2972, 2118, 759, 2122, 763, 757, 3442,
	3843, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342,
	4343, 4344, 4345, 3092, 2679, 2935, 2680, 1115, 1769, 2020,
	103, 746, 2633, 101, 1268, 101, 3057, 3430, 3431, 1269,
	2590, 4069, 101, 4070, 3276, 2443, 2652, 1267, 2653, 1266,
	2654, 2631, 3277, 3621, 1282, 2445, 3693, 1813, 2445, 746,
	1301, 1486, 101, 1306, 1275, 2640, 2636, 2638, 2639, 2637,
	2641, 2642, 2643, 2644, 2021, 3439, 2022, 1283, 1284, 1289,
	3430, 3431, 1248, 745, 3095, 3708, 3045, 3707, 2634, 2655,
	1220, 3437, 1219, 2629, 2630, 4001, 1125, 1119, 1117, 745,
	1313, 172, 1313, 1313, 1150, 3364, 2073, 2632, 1151, 2593,
	3784, 2483, 1151, 1189, 1188, 1187, 1186, 1185, 3232, 1184,
	1183, 1182, 1177, 1772, 1125, 1119, 1117, 1931, 1190, 1134,
	4407, 1134, 1199, 3384, 1163, 1132, 1851, 2558, 1162, 1134,
	4416, 1162, 1198, 2469, 2454, 2065, 1110, 3096, 2619, 3165,
	2618, 2061, 1070, 1568, 1573, 1574, 1495, 1577, 1579, 1580,
	1581, 1582, 1583, 1207, 1586, 1587, 1589, 1589, 3051, 1589,
	1589, 1594, 1594, 1594, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1578, 4126,
	1569, 3048, 1721, 2612, 1723, 1724, 1725, 1726, 1727, 1302,
	746, 1821, 1561, 1562, 1563, 1564, 1594, 1594, 1594, 1594,
	1594, 1594, 1575, 1565, 1483, 1510, 746, 4172, 1148, 3166,
	1254, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1510, 3704, 2947, 1484, 1485,
	2467, 2468, 173, 3410, 3411, 3410, 3411, 3735, 3778, 185,
	3071, 2032, 2031, 2033, 2034, 2035, 3414, 4266, 3414, 1264,
	3778, 1270, 1271, 1272, 1273, 3622, 3669, 3670, 3672, 4219,
	1852, 1169, 3822, 3821, 1590, 2684, 1591, 1592, 3613, 1952,
	745, 1118, 101, 1169, 1558, 1310, 1311, 1558, 1265, 3280,
	193, 1076, 1180, 1178, 3070, 2683, 4264, 1595, 1596, 3099,
	1169, 4265, 1762, 3081, 2934, 3558, 2452, 4218, 1768, 1118,
	2451, 2450, 4219, 3067, 2446, 3458, 2062, 1070, 2914, 2916,
	1259, 1070, 700, 1214, 4292, 4291, 4391, 1070, 1758, 4404,
	1502, 745, 3089, 1246, 1520, 3088, 1246, 4380, 4272, 174,
	179, 176, 182, 183, 184, 186, 188, 189, 190, 191,
	4218, 1278, 4115, 3660, 1520, 192, 194, 195, 196, 3642,
	3002, 1076, 3703, 2610, 2265, 1559, 1560, 1297, 94, 1299,
	1759, 2050, 2967, 2886, 2562, 2469, 1244, 2197, 1252, 1253,
	1843, 3112, 1722, 1258, 2700, 1168, 3241, 3240, 2962, 132,
	708, 92, 2512, 1809, 1776, 1206, 1812, 1168, 1780, 1951,
	1558, 1555, 3340, 2711, 1069, 1538, 1088, 1816, 1296, 1298,
	1305, 1255, 1263, 4383, 1168, 2563, 4140, 1192, 3699, 3634,
	2456, 2131, 2561, 2058, 1778, 1291, 1798, 3260, 111, 1857,
	1779, 1076, 2077, 1925, 112, 1256, 4410, 4287, 4370, 3258,
	1759, 1728, 1729, 1730, 1731, 1732, 1733, 1516, 126, 100,
	1508, 100, 1766, 3139, 1181, 1179, 2564, 1774, 100, 4398,
	2230, 1928, 1929, 1930, 2049, 2945, 2560, 1516, 46, 3020,
	2230, 4319, 2720, 1169, 2238, 2257, 1820, 3102, 100, 1525,
	2259, 3102, 3101, 114, 2264, 2260, 3101, 4132, 2261, 2262,
	2263, 2239, 4247, 2258, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2915, 2607, 1944, 1244, 746, 1806, 1244,
	1238, 2711, 1526, 1800, 3838, 1808, 1807, 3119, 1169, 1294,
	2015, 3677, 1760, 1295, 1524, 1525, 1777, 127, 2005, 2006,
	1763, 2221, 3676, 1300, 2011, 2012, 1937, 1066, 2070, 1775,
	2597, 1961, 1960, 1803, 1954, 1954, 1815, 1950, 1805, 1997,
	1068, 1313, 1966, 1956, 1967, 1169, 1969, 1971, 746, 1813,
	1975, 1977, 1979, 1981, 1983, 1256, 2605, 1262, 1958, 4389,
	1293, 2609, 4390, 1180, 4388, 1242, 1848, 1849, 1277, 1955,
	1243, 2602, 2467, 2468, 1292, 1178, 2602, 1168, 1917, 1279,
	1247, 2078, 1172, 1162, 1169, 1993, 1810, 1174, 1996, 4311,
	1998, 1175, 1173, 2054, 4408, 2052, 2053, 2051, 2055, 2056,
	2057, 3661, 3121, 1934, 1935, 1947, 1933, 101, 1083, 3732,
	2046, 3733, 2047, 1176, 2606, 2048, 4393, 1169, 1781, 2604,
	2040, 2236, 1168, 4183, 1205, 4313, 2001, 2163, 1202, 4009,
	2045, 1526, 2213, 2202, 2203, 2204, 2205, 2215, 2206, 2207,
	2208, 2220, 2216, 2209, 2210, 2217, 2218, 2219, 2211, 2212,
	2214, 1523, 4008, 1524, 1525, 3999, 2066, 2475, 2476, 1168,
	4412, 2153, 2154, 2690, 2691, 1162, 1165, 1166, 4107, 1134,
	3749, 3748, 4184, 1159, 1163, 1241, 3131, 3130, 3129, 1526,
	1095, 3123, 3684, 3127, 2383, 3122, 1798, 3120, 1145, 1144,
	4409, 2039, 3125, 2385, 2235, 1158, 1143, 136, 1168, 198,
	1243, 3124, 3683, 1243, 1162, 1165, 1166, 3673, 1134, 999,
	3387, 3380, 1159, 1163, 2083, 2038, 3348, 4108, 3027, 2027,
	3126, 3128, 137, 1313, 1313, 3026, 2079, 2080, 1004, 1005,
	1006, 1168, 1095, 3025, 2568, 2105, 1172, 1162, 180, 92,
	2084, 1174, 92, 2041, 2025, 1175, 1173, 2091, 2092, 2093,
	2024, 1515, 1512, 1513, 1514, 1519, 1521, 1518, 2023, 1517,
	1550, 1551, 1553, 1552, 1554, 1555, 2013, 3349, 3288, 1511,
	2007, 1515, 1512, 1513, 1514, 1519, 1521, 1518, 2165, 1517,
	1523, 2127, 1524, 1525, 2127, 2004, 2037, 2104, 2003, 1511,
	2026, 2002, 3351, 2166, 1556, 1557, 2164, 1973, 177, 1773,
	1489, 178, 1094, 1095, 2192, 2192, 1089, 2190, 2190, 2193,
	751, 1851, 3346, 2081, 1090, 4347, 46, 1544, 4312, 46,
	2085, 4135, 2087, 2088, 2089, 2090, 1526, 197, 1523, 2094,
	1524, 1525, 3362, 3363, 3666, 4134, 751, 4289, 1544, 3347,
	2761, 2106, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553,
	1552, 1554, 1555, 1827, 4111, 1526, 2155, 4110, 1094, 1095,
	1076, 1544, 4109, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1553, 1552, 1554, 1555, 3353, 3009, 4004, 751, 1544, 3989,
	2578, 1540, 2577, 1541, 2276, 3988, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1553, 1552, 1554, 1555, 1758, 1542, 1556,
	1557, 1539, 1828, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1553, 1552, 1554, 1555, 1548, 1549, 1550, 1551, 1553, 1552,
	1554, 1555, 2168, 3837, 2170, 2171, 2172, 2173, 2174, 2175,
	2177, 2179, 2180, 2181, 2182, 2183, 2184, 108, 2132, 1759,
	2225, 2130, 2128, 2129, 2130, 2128, 2129, 109, 2576, 2169,
	2575, 2162, 3361, 181, 3835, 1544, 1569, 3111, 2574, 1526,
	2573, 3745, 187, 1757, 3364, 1798, 1526, 1927, 4360, 2112,
	2113, 1526, 2382, 1756, 2231, 1523, 2167, 1524, 1525, 1755,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1552, 1554,
	1555, 3681, 2395, 2394, 3665, 2300, 4299, 1798, 4128, 117,
	1927, 1798, 1586, 2196, 1523, 3443, 1524, 1525, 1798, 2292,
	116, 4036, 115, 3141, 3440, 2393, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1553, 1552, 1554, 1555, 1522, 1798, 2240,
	2241, 2242, 2243, 1532, 1533, 1534, 1535, 1536, 1537, 1531,
	1528, 3383, 2384, 2254, 1544, 2275, 2699, 1526, 1927, 4212,
	4035, 4324, 1798, 3993, 1526, 2759, 2221, 3382, 4322, 1798,
	3992, 1526, 2460, 4227, 1798, 1522, 1798, 1797, 3093, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1553, 1552, 1554, 1555,
	2392, 1927, 4193, 2398, 2399, 1798, 3350, 1927, 4189, 2491,
	3036, 1760, 172, 1546, 1547, 1548, 1549, 1550, 1551, 1553,
	1552, 1554, 1555, 111, 4089, 1798, 3717, 4125, 1523, 112,
	1524, 1525, 3023, 2395, 2480, 1523, 1754, 1524, 1525, 1748,
	1523, 2673, 1524, 1525, 2665, 111, 2664, 2428, 2624, 2521,
	2623, 112, 2464, 2440, 1526, 2429, 2393, 110, 2290, 4225,
	1798, 1526, 4012, 1798, 3305, 1526, 4223, 1798, 1927, 4000,
	3717, 1798, 3619, 4082, 1798, 3633, 1526, 2161, 1093, 2434,
	751, 2435, 1139, 1927, 3715, 3058, 2493, 2213, 2202, 2203,
	2204, 2205, 2215, 2206, 2207, 2208, 2220, 2216, 2209, 2210,
	2217, 2218, 2219, 2211, 2212, 2214, 2108, 1526, 2416, 2074,
	1139, 2530, 2531, 2532, 2533, 2448, 1523, 2036, 1524, 1525,
	1084, 2516, 1798, 1523, 2515, 1524, 1525, 2602, 1798, 745,
	1523, 2497, 1524, 1525, 2441, 3640, 1798, 1526, 2373, 2374,
	2375, 2376, 2377, 2028, 1526, 2018, 4080, 1798, 2841, 1798,
	1526, 2447, 2014, 4077, 1798, 2397, 2591, 4031, 2400, 2401,
	2457, 2525, 2519, 2526, 2527, 2528, 2529, 2551, 4059, 1798,
	2470, 2010, 3475, 740, 3373, 3372, 2557, 2535, 3370, 3371,
	2537, 2538, 2539, 2540, 2009, 2478, 2008, 1123, 1829, 1124,
	2503, 1303, 2502, 2501, 2418, 1526, 2518, 3335, 2517, 3599,
	1798, 2588, 1526, 1523, 116, 1524, 1525, 2683, 2567, 2716,
	1523, 3041, 1524, 1525, 1523, 2520, 1524, 1525, 3368, 3369,
	3633, 725, 3368, 3367, 1522, 1523, 2747, 1524, 1525, 3592,
	1798, 1171, 2977, 1798, 1526, 2998, 3589, 1798, 2541, 2543,
	2544, 1954, 2552, 1798, 723, 2976, 2596, 2566, 3637, 2599,
	2548, 2600, 2683, 3080, 2616, 4167, 1523, 4139, 1524, 1525,
	3354, 1921, 3061, 173, 3358, 2153, 2154, 2151, 2152, 1927,
	185, 3357, 2552, 2595, 2998, 2598, 1170, 2594, 1522, 2620,
	1526, 2617, 2969, 2621, 2622, 720, 1523, 2715, 1524, 1525,
	3054, 3055, 2150, 1523, 735, 1524, 1525, 1526, 4103, 1523,
	2977, 1524, 1525, 2999, 2969, 3359, 2977, 1526, 2688, 730,
	3355, 193, 3578, 3001, 2628, 3356, 3636, 1070, 1070, 1070,
	2932, 733, 2195, 1798, 743, 2627, 3587, 1798, 1927, 1926,
	108, 2707, 744, 1526, 110, 3370, 110, 1579, 3263, 1579,
	109, 2504, 2999, 1526, 1523, 1071, 1524, 1525, 1526, 1921,
	1920, 1523, 2683, 1524, 1525, 2703, 746, 2841, 1526, 2977,
	174, 179, 176, 182, 183, 184, 186, 188, 189, 190,
	191, 1526, 3550, 1798, 1863, 1862, 192, 194, 195, 196,
	1526, 3633, 2744, 1523, 2658, 1524, 1525, 2395, 2394, 3548,
	1798, 2603, 710, 2743, 712, 726, 103, 748, 2930, 747,
	716, 1798, 714, 718, 727, 719, 2602, 713, 1526, 724,
	2706, 2585, 715, 728, 729, 732, 736, 737, 738, 734,
	731, 1526, 722, 749, 2473, 3544, 1798, 2459, 101, 1523,
	1814, 1524, 1525, 1526, 2419, 3541, 1798, 2195, 2675, 2133,
	3539, 1798, 2117, 2060, 1850, 1526, 1523, 3685, 1524, 1525,
	3537, 1798, 2681, 1526, 1830, 2602, 1523, 1526, 1524, 1525,
	1989, 1153, 1152, 3535, 1798, 101, 2696, 2689, 2698, 1526,
	117, 3435, 3533, 1798, 1526, 4270, 4195, 2701, 4023, 2702,
	2695, 116, 1523, 115, 1524, 1525, 1526, 3990, 2692, 2693,
	2694, 110, 1523, 2697, 1524, 1525, 2162, 1523, 3850, 1524,
	1525, 1798, 130, 2704, 3686, 3687, 3688, 1523, 3390, 1524,
	1525, 1526, 3033, 3531, 1798, 3698, 3695, 1990, 1991, 1992,
	1523, 1246, 1524, 1525, 1826, 3529, 1798, 2709, 3679, 1523,
	3491, 1524, 1525, 3490, 1923, 2550, 4024, 2708, 2667, 2668,
	3392, 2719, 3388, 2670, 1526, 3527, 1798, 3286, 2565, 3525,
	1798, 3062, 2671, 2547, 2885, 1526, 1798, 1523, 2542, 1524,
	1525, 3523, 1798, 2536, 2534, 1832, 3521, 1798, 2043, 1949,
	1523, 1945, 1524, 1525, 1919, 128, 1526, 3032, 3519, 1798,
	3647, 3648, 1523, 2432, 1524, 1525, 2917, 2110, 91, 48,
	49, 93, 3653, 4355, 1523, 2192, 1524, 1525, 2190, 2920,
	2755, 4353, 1523, 3655, 1524, 1525, 1523, 98, 1524, 1525,
	4306, 52, 81, 82, 4147, 79, 83, 1526, 1523, 1070,
	1524, 1525, 3689, 1523, 4064, 1524, 1525, 80, 3650, 3618,
	1526, 3033, 3617, 3616, 2918, 1523, 1831, 1524, 1525, 103,
	3305, 3281, 1526, 2974, 2975, 2659, 1526, 3517, 1798, 3652,
	3324, 1526, 2491, 3323, 2111, 1070, 2994, 1086, 1985, 67,
	1523, 1526, 1524, 1525, 3329, 3327, 2986, 2987, 3594, 2726,
	3328, 101, 4403, 4143, 3325, 3690, 3691, 3692, 2921, 3326,
	2923, 4297, 1526, 1076, 1754, 2973, 2741, 4025, 705, 1752,
	2873, 2463, 1076, 1523, 1750, 1524, 1525, 1751, 1749, 2954,
	1753, 3804, 2161, 3803, 1523, 2438, 1524, 1525, 1087, 3515,
	1798, 1986, 1987, 1988, 3641, 3268, 750, 2938, 3267, 4106,
	46, 88, 3513, 1798, 3828, 1523, 1766, 1524, 1525, 2991,
	2992, 3830, 2993, 2908, 3511, 1798, 2963, 741, 3497, 1798,
	3295, 3297, 3626, 3473, 1798, 3629, 1526, 3292, 2933, 3298,
	3625, 2936, 742, 2906, 1798, 1526, 3802, 2937, 2059, 2928,
	1526, 3019, 3021, 1820, 3066, 2952, 1523, 768, 1524, 1525,
	1054, 1759, 3366, 2966, 2904, 1798, 3012, 3016, 2996, 1523,
	3037, 1524, 1525, 3035, 1526, 2158, 2156, 2157, 3038, 3039,
	2951, 1523, 1526, 1524, 1525, 1523, 3000, 1524, 1525, 2238,
	1523, 3003, 1524, 1525, 3077, 2651, 2650, 2649, 3010, 1526,
	1523, 2557, 1524, 1525, 2648, 3013, 2239, 95, 59, 62,
	61, 64, 1103, 78, 1526, 2647, 87, 84, 3024, 4179,
	2646, 1523, 2645, 1524, 1525, 1209, 1102, 1526, 2879, 1798,
	1208, 108, 3034, 3451, 1526, 4178, 3032, 2856, 1798, 1526,
	3105, 109, 2848, 1798, 4295, 3042, 1526, 1488, 2757, 4329,
	4180, 66, 97, 96, 1526, 3068, 76, 77, 63, 137,
	1526, 3631, 3074, 108, 85, 86, 2839, 1798, 1937, 110,
	110, 1526, 4385, 109, 2837, 1798, 3285, 1526, 2662, 3115,
	3116, 4230, 2418, 3063, 3064, 1523, 4019, 1524, 1525, 1526,
	3073, 2824, 1798, 3365, 1523, 4331, 1524, 1525, 2990, 1523,
	2458, 1524, 1525, 1140, 2475, 2476, 2822, 1798, 4177, 69,
	3266, 70, 71, 72, 73, 1526, 3075, 4330, 3265, 2820,
	1798, 1526, 3094, 1523, 117, 1524, 1525, 1798, 3601, 3132,
	3097, 1523, 4314, 1524, 1525, 116, 3113, 115, 2818, 1798,
	2687, 1526, 2116, 115, 2115, 110, 2816, 1798, 1523, 1526,
	1524, 1525, 3590, 3150, 3151, 3152, 3153, 3154, 3155, 3156,
	3157, 3158, 3159, 1523, 4124, 1524, 1525, 1526, 116, 2814,
	1798, 4088, 4087, 3167, 4067, 65, 1523, 3133, 1524, 1525,
	3836, 2812, 1798, 1523, 3834, 1524, 1525, 3833, 1523, 3815,
	1524, 1525, 3696, 3630, 3117, 1523, 3628, 1524, 1525, 3393,
	2586, 1932, 3134, 1523, 1526, 1524, 1525, 2810, 1798, 1523,
	117, 1524, 1525, 2808, 1798, 1526, 1101, 3114, 3814, 117,
	1523, 116, 1524, 1525, 3611, 3227, 1523, 3171, 1524, 1525,
	116, 2969, 115, 2806, 1798, 3788, 3103, 2932, 1523, 3104,
	1524, 1525, 3996, 4357, 4356, 2382, 3169, 2382, 1526, 2745,
	2430, 1844, 1799, 1801, 1836, 121, 122, 4356, 4357, 2804,
	1798, 4112, 3664, 5, 1523, 1, 1524, 1525, 3053, 3,
	1523, 1062, 1524, 1525, 4176, 1491, 105, 94, 3236, 8,
	1490, 3668, 4259, 2491, 721, 2420, 1764, 4307, 4255, 3245,
	1523, 4256, 1524, 1525, 2029, 2019, 2802, 1798, 1523, 3160,
	1524, 1525, 3727, 4300, 2347, 4020, 3816, 3556, 3207, 3817,
	1526, 3819, 1887, 3396, 2592, 2384, 1523, 2384, 1524, 1525,
	3694, 2555, 1161, 3312, 162, 92, 2513, 2514, 2491, 2491,
	2491, 2491, 2491, 4207, 3135, 3217, 3218, 3219, 3220, 3221,
	2800, 1798, 125, 3235, 1127, 3237, 124, 1526, 2491, 1164,
	1276, 2491, 3270, 1523, 3244, 1524, 1525, 2587, 3718, 3017,
	2493, 3272, 2522, 1526, 1523, 1076, 1524, 1525, 1869, 1867,
	3245, 1868, 1526, 1866, 1871, 1870, 3256, 3234, 4171, 1526,
	3459, 2746, 2070, 3557, 1526, 2121, 3317, 100, 758, 3334,
	3271, 3269, 3262, 3257, 3259, 3261, 3279, 1523, 1526, 1524,
	1525, 2989, 1073, 3700, 752, 2493, 2493, 2493, 2493, 2493,
	3413, 1526, 3282, 3283, 3284, 200, 3299, 3300, 1858, 1837,
	3421, 2114, 1203, 711, 1526, 2493, 3336, 3374, 2493, 3337,
	1526, 1075, 2625, 3318, 3426, 1526, 3321, 3425, 3422, 3552,
	3319, 3320, 3330, 3322, 1074, 717, 111, 3378, 3379, 1576,
	3316, 2109, 112, 1526, 3338, 2798, 1798, 3264, 3004, 1523,
	3302, 1524, 1525, 3344, 2796, 1798, 3209, 1526, 3211, 3308,
	1874, 2794, 1798, 1121, 3308, 1113, 2792, 1798, 3375, 1091,
	3377, 3376, 2431, 2922, 3222, 3223, 3224, 3225, 1120, 3997,
	2790, 1798, 3313, 3623, 3291, 3293, 1523, 2956, 1524, 1525,
	75, 3296, 3394, 2785, 1798, 3289, 4105, 2557, 3415, 3827,
	4328, 4194, 1523, 3014, 1524, 1525, 2781, 1798, 3432, 1833,
	3577, 1523, 3488, 1524, 1525, 2718, 2228, 3487, 1523, 1526,
	1524, 1525, 1566, 1523, 3444, 1524, 1525, 3447, 1526, 783,
	3446, 2490, 954, 1818, 3783, 2779, 1798, 1523, 3454, 1524,
	1525, 2148, 781, 780, 778, 3395, 2924, 2970, 1530, 3479,
	1523, 1529, 1524, 1525, 3464, 1888, 989, 3480, 3481, 3482,
	3483, 3484, 2912, 1523, 1526, 1524, 1525, 1845, 2981, 1523,
	2979, 1524, 1525, 2978, 1523, 2660, 1524, 1525, 2498, 1579,
	1526, 3649, 3645, 1579, 4251, 2492, 2488, 2931, 1526, 940,
	3461, 3462, 1523, 3463, 1524, 1525, 3465, 939, 3467, 3602,
	3469, 3604, 790, 782, 772, 1003, 1523, 1526, 1524, 1525,
	938, 2772, 1798, 937, 3612, 3423, 1526, 3424, 2946, 3455,
	3477, 1901, 1904, 1905, 1906, 1907, 1908, 1909, 1811, 1910,
	1911, 1913, 1914, 1912, 1915, 1916, 1889, 1890, 1891, 1892,
	1872, 1873, 1902, 1526, 1875, 4296, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 3287, 2902, 1885, 1893, 1894,
	1895, 1896, 2948, 1897, 1898, 1899, 1900, 3015, 1523, 1886,
	1524, 1525, 2770, 1798, 1526, 3275, 2491, 1523, 1526, 1524,
	1525, 3028, 3609, 1526, 1507, 3603, 1783, 3605, 1526, 3662,
	3311, 3607, 1786, 2439, 1804, 3456, 4130, 2686, 3485, 2901,
	1782, 1526, 4137, 3426, 3404, 1526, 3425, 3422, 2897, 3663,
	1526, 3712, 3385, 1523, 3620, 1524, 1525, 3627, 1526, 3579,
	3572, 3581, 3582, 3583, 3059, 2579, 74, 3576, 3632, 1523,
	3644, 1524, 1525, 50, 3416, 2896, 1526, 1523, 4097, 1524,
	1525, 3651, 3449, 3450, 1526, 4168, 932, 3654, 929, 3658,
	3659, 1526, 3785, 2493, 3657, 3656, 1523, 2233, 1524, 1525,
	3786, 3787, 2234, 3674, 3675, 1523, 2895, 1524, 1525, 3230,
	2894, 1526, 3231, 4150, 4151, 2893, 928, 4152, 2285, 1501,
	2892, 1526, 3680, 1498, 3682, 3043, 1526, 2123, 104, 40,
	39, 1526, 1523, 2883, 1524, 1525, 38, 2882, 37, 36,
	2296, 30, 2881, 29, 28, 1526, 27, 26, 33, 1526,
	2880, 3705, 23, 1526, 25, 3709, 3710, 3711, 24, 22,
	4367, 1526, 4368, 1523, 4397, 1524, 1525, 1523, 2877, 1524,
	1525, 4233, 1523, 4173, 1524, 1525, 2872, 1523, 3407, 1524,
	1525, 4302, 1526, 2865, 3722, 3723, 4384, 1526, 131, 3724,
	1523, 4333, 1524, 1525, 1523, 4294, 1524, 1525, 4293, 1523,
	1526, 1524, 1525, 2864, 4244, 4373, 4239, 1523, 60, 1524,
	1525, 57, 55, 2863, 1526, 139, 138, 3739, 2862, 58,
	2379, 56, 54, 2861, 1526, 1523, 1903, 1524, 1525, 53,
	1249, 51, 1526, 1523, 102, 1524, 1525, 2860, 35, 34,
	1523, 2859, 1524, 1525, 3750, 2858, 21, 20, 19, 1526,
	2410, 18, 17, 2857, 16, 15, 11, 10, 43, 42,
	1523, 41, 1524, 1525, 1760, 32, 1526, 1799, 2417, 31,
	1523, 44, 1524, 1525, 2851, 1523, 1526, 1524, 1525, 2850,
	1523, 3801, 1524, 1525, 3808, 7, 3810, 3791, 2, 3792,
	3793, 3794, 2849, 3046, 1523, 2581, 1524, 1525, 1523, 0,
	1524, 1525, 1523, 0, 1524, 1525, 2846, 3744, 2442, 3781,
	1523, 1526, 1524, 1525, 0, 0, 2845, 3312, 0, 0,
	92, 0, 3312, 0, 2844, 0, 0, 1526, 0, 0,
	3811, 1523, 1526, 1524, 1525, 0, 1523, 1526, 1524, 1525,
	2192, 2842, 1526, 2190, 3852, 0, 0, 1526, 0, 1523,
	0, 1524, 1525, 0, 1526, 0, 0, 3812, 2835, 0,
	1076, 0, 3844, 1523, 3842, 1524, 1525, 0, 2832, 0,
	3832, 3831, 0, 1523, 0, 1524, 1525, 0, 0, 3839,
	3841, 1523, 1526, 1524, 1525, 4003, 2982, 2985, 2986, 2987,
	2983, 0, 2984, 2988, 0, 0, 0, 46, 1523, 0,
	1524, 1525, 0, 2830, 3701, 3702, 0, 3856, 0, 3853,
	3854, 0, 0, 0, 0, 1523, 0, 1524, 1525, 2828,
	0, 0, 0, 0, 2787, 1523, 0, 1524, 1525, 2767,
	0, 3994, 2569, 0, 2766, 0, 0, 3995, 4010, 2762,
	0, 0, 0, 0, 0, 0, 2760, 4014, 4015, 0,
	0, 4005, 4006, 4007, 0, 0, 0, 4061, 4062, 4022,
	1523, 3308, 1524, 1525, 0, 2192, 0, 0, 2190, 4065,
	3846, 0, 0, 0, 2752, 0, 1523, 3809, 1524, 1525,
	0, 1523, 0, 1524, 1525, 0, 1523, 0, 1524, 1525,
	0, 1523, 0, 1524, 1525, 0, 1523, 0, 1524, 1525,
	0, 0, 0, 1523, 3772, 1524, 1525, 2982, 2985, 2986,
	2987, 2983, 0, 2984, 2988, 4068, 0, 3647, 3648, 4071,
	0, 0, 0, 4113, 3312, 0, 0, 0, 0, 0,
	0, 1523, 3848, 1524, 1525, 0, 0, 0, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1717, 1718, 1719, 1720, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 4116,
	4117, 4066, 4114, 4095, 4085, 4094, 1788, 0, 0, 0,
	0, 4091, 4131, 4093, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 1789, 3311, 0, 0, 0, 0, 3311,
	92, 0, 0, 0, 2705, 0, 0, 0, 2710, 0,
	3998, 0, 0, 0, 0, 0, 0, 0, 2436, 2437,
	1795, 1793, 1794, 1790, 0, 1791, 0, 0, 0, 0,
	0, 2713, 4133, 2714, 0, 0, 0, 0, 0, 2722,
	1076, 4121, 4138, 2724, 2725, 0, 0, 4136, 1792, 0,
	0, 0, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 4002, 2742, 0, 0, 0, 4101, 0, 0,
	0, 770, 0, 0, 0, 0, 0, 46, 0, 0,
	0, 0, 0, 92, 0, 0, 2748, 2749, 2750, 2751,
	0, 2753, 2754, 4175, 2756, 0, 4174, 0, 2758, 0,
	0, 4191, 2763, 2764, 0, 2765, 0, 0, 2768, 2769,
	2771, 2773, 2774, 2775, 2776, 2777, 2778, 2780, 2782, 2783,
	2784, 2786, 4182, 2788, 2789, 2791, 2793, 2795, 2797, 2799,
	2801, 2803, 2805, 2807, 2809, 2811, 2813, 2815, 2817, 2819,
	2821, 2823, 2825, 2826, 2827, 4181, 2829, 4220, 2831, 4166,
	2833, 2834, 4185, 2836, 2838, 2840, 0, 4199, 92, 2843,
	46, 4206, 4118, 2847, 4205, 4204, 4201, 2852, 2853, 2854,
	2855, 4200, 4022, 4209, 4198, 4203, 4202, 4196, 0, 0,
	2866, 2867, 2868, 2869, 2870, 2871, 0, 1100, 2875, 2876,
	1106, 1106, 4228, 0, 4246, 2878, 0, 4245, 0, 4156,
	2884, 3311, 4157, 0, 0, 2887, 2888, 2889, 2890, 2891,
	4258, 4286, 4220, 4263, 4250, 92, 2898, 2899, 0, 2900,
	4275, 1526, 2903, 2905, 2442, 4288, 2907, 4273, 0, 0,
	0, 1788, 0, 0, 0, 46, 2919, 4187, 0, 0,
	3308, 0, 4285, 4192, 0, 1796, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 1760, 4290, 0, 0, 0,
	1526, 0, 0, 0, 1887, 1526, 0, 0, 2953, 0,
	92, 4301, 0, 1784, 1785, 1795, 1793, 1794, 1790, 0,
	1791, 4327, 2070, 4316, 0, 4317, 0, 2192, 0, 4320,
	2190, 4351, 46, 0, 0, 4326, 0, 0, 0, 0,
	0, 4346, 4123, 1792, 0, 4350, 4348, 4354, 92, 4352,
	4371, 4145, 0, 2723, 4220, 0, 0, 0, 4288, 4155,
	0, 0, 4361, 0, 3426, 1927, 0, 3425, 3422, 0,
	4372, 4382, 0, 0, 0, 4141, 0, 0, 0, 0,
	0, 0, 4281, 0, 0, 0, 0, 46, 4386, 0,
	4394, 0, 2717, 4392, 92, 4399, 0, 2712, 0, 4129,
	0, 0, 0, 0, 0, 0, 0, 4402, 0, 0,
	1523, 0, 1524, 1525, 0, 0, 0, 0, 4405, 92,
	0, 0, 0, 1760, 0, 46, 0, 0, 0, 0,
	4411, 2192, 92, 92, 2190, 4415, 4414, 4419, 92, 4418,
	4420, 4062, 4288, 0, 4417, 198, 0, 0, 4288, 1523,
	0, 1524, 1525, 0, 1523, 0, 1524, 1525, 0, 0,
	0, 0, 1874, 0, 0, 4186, 0, 0, 137, 0,
	159, 46, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	46, 0, 0, 0, 0, 46, 0, 0, 170, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 4238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1888, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	147, 169, 168, 197, 3145, 3146, 3147, 3148, 3149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4315, 1901, 1904, 1905, 1906, 1907, 1908, 1909,
	0, 1910, 1911, 1913, 1914, 1912, 1915, 1916, 1889, 1890,
	1891, 1892, 1872, 1873, 1902, 0, 1875, 0, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 0, 0, 1885,
	1893, 1894, 1895, 1896, 0, 1897, 1898, 1899, 1900, 0,
	0, 1886, 0, 0, 0, 0, 163, 144, 166, 151,
	143, 0, 164, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 155, 153, 148, 149, 150, 154,
	3052, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 137, 0, 159, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 178, 3314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	3332, 0, 0, 1940, 1941, 169, 168, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 1903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	163, 1942, 166, 0, 1939, 0, 164, 165, 3453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	3470, 3471, 187, 3472, 3474, 3476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3489, 0, 0, 0, 0, 3492, 0, 3494, 3495,
	3496, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506,
	3507, 3508, 3509, 3510, 3512, 3514, 3516, 3518, 3520, 3522,
	3524, 3526, 3528, 3530, 3532, 3534, 3536, 3538, 3540, 3542,
	3543, 3545, 3546, 3547, 3549, 160, 0, 3551, 161, 3553,
	3554, 3555, 0, 0, 3559, 3560, 3561, 3562, 3563, 3564,
	3565, 3566, 3567, 3568, 3569, 0, 0, 0, 0, 0,
	0, 0, 0, 3575, 0, 0, 0, 3580, 0, 173,
	0, 3584, 3585, 0, 3586, 3588, 185, 3591, 3593, 0,
	3595, 3596, 3597, 3598, 0, 0, 0, 0, 0, 0,
	3606, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3638, 3639, 0, 0, 3643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 179, 176, 182,
	183, 184, 186, 188, 189, 190, 191, 0, 0, 0,
	0, 0, 192, 194, 195, 196, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 985, 0, 0, 3734, 0, 0, 3738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 3751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 173, 0, 203, 0, 0, 0, 756,
	185, 0, 0, 0, 762, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 1052, 0, 0,
	0, 0, 990, 1053, 1004, 1005, 1006, 991, 0, 0,
	992, 993, 203, 994, 0, 3774, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 3782, 0,
	0, 1007, 1008, 0, 0, 3789, 0, 0, 762, 203,
	762, 0, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 179, 176, 182, 183, 184, 186, 188, 189, 190,
	191, 0, 0, 0, 0, 0, 192, 194, 195, 196,
	0, 0, 0, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4011, 0, 0, 0, 0, 0, 0, 0, 0, 4018,
	0, 0, 0, 0, 0, 0, 0, 3429, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4028, 4029,
	4030, 0, 4032, 0, 4033, 4034, 0, 0, 0, 0,
	4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046,
	4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056,
	4057, 4058, 0, 4060, 4063, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2143, 2144, 2145, 2146, 0, 4072,
	4073, 4074, 4075, 4076, 4078, 4079, 4081, 4083, 4084, 4086,
	2159, 0, 0, 4090, 0, 0, 0, 4092, 3430, 3431,
	0, 0, 0, 0, 4102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2198, 2199, 0, 0, 0,
	0, 2222, 0, 0, 2226, 2227, 0, 0, 0, 2232,
	0, 0, 0, 4122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 0, 2255, 0, 0, 0, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2286, 0, 2291,
	0, 2293, 2294, 2295, 0, 2297, 2298, 2299, 0, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 0, 0,
	0, 0, 0, 2378, 0, 2380, 0, 2386, 2387, 2388,
	2389, 2390, 2391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 0, 2411, 2412, 2413, 2414, 2415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4161, 0, 0, 0, 0, 0, 4164,
	0, 4165, 0, 2471, 2472, 0, 0, 0, 0, 91,
	48, 49, 93, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4190, 98, 2510,
	0, 0, 52, 81, 82, 0, 79, 83, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 4214, 4215, 0, 0, 0, 0, 0, 0,
	103, 0, 203, 0, 203, 0, 4222, 4224, 4226, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	67, 0, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 2553, 101, 0, 4249, 0, 137, 0, 159, 0,
	0, 762, 0, 762, 762, 4271, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 762, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 158, 0, 1571, 0, 0, 0, 0, 4298,
	0, 4370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4321, 4323, 4325, 0, 0, 0, 0, 1940, 1941, 169,
	168, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4366, 0, 0, 0, 95, 59,
	62, 61, 64, 0, 78, 0, 0, 87, 84, 0,
	4179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4178, 0, 0, 0,
	0, 0, 4395, 4396, 0, 0, 0, 0, 0, 0,
	0, 4180, 66, 97, 96, 0, 0, 76, 77, 63,
	0, 0, 0, 0, 0, 85, 86, 0, 0, 0,
	0, 0, 0, 0, 163, 1942, 166, 0, 1939, 4413,
	164, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 4177,
	69, 0, 70, 71, 72, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2721, 0, 0, 0, 65, 0, 1057, 0,
	0, 0, 2727, 2728, 2729, 2730, 0, 203, 0, 0,
	0, 762, 762, 0, 1887, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1135, 0, 0, 0, 0, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 762, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 762, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 762,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 762,
	0, 0, 1571, 762, 0, 0, 762, 762, 762, 762,
	0, 762, 0, 762, 762, 0, 762, 762, 762, 762,
	762, 762, 0, 0, 0, 0, 0, 0, 0, 1571,
	762, 762, 1571, 762, 1571, 203, 762, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 762, 0, 0, 762, 100, 0,
	203, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 203, 1835, 0, 0, 0, 0,
	0, 0, 0, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1888, 0, 0,
	0, 0, 0, 160, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 75, 0, 0, 984, 0, 0, 0, 0, 0,
	0, 0, 0, 1901, 1904, 1905, 1906, 1907, 1908, 1909,
	0, 1910, 1911, 1913, 1914, 1912, 1915, 1916, 1889, 1890,
	1891, 1892, 1872, 1873, 1902, 193, 1875, 0, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 0, 0, 1885,
	1893, 1894, 1895, 1896, 0, 1897, 1898, 1899, 1900, 0,
	0, 1886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 0, 0, 761, 0, 0,
	0, 0, 0, 0, 174, 179, 176, 182, 183, 184,
	186, 188, 189, 190, 191, 0, 0, 0, 0, 0,
	192, 194, 195, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 762, 762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 762,
	3110, 761, 0, 761, 0, 761, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3136, 3137, 3138,
	0, 0, 3140, 0, 0, 3142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3161, 3162, 3163, 0, 0,
	762, 0, 0, 0, 3168, 0, 0, 0, 0, 3170,
	1571, 0, 3172, 3173, 3174, 0, 0, 0, 3175, 3176,
	0, 0, 3177, 0, 3178, 0, 0, 0, 1571, 0,
	0, 3179, 0, 3180, 0, 0, 0, 3181, 0, 3182,
	0, 0, 3183, 0, 3184, 0, 3185, 0, 3186, 0,
	3187, 0, 3188, 0, 3189, 0, 3190, 0, 3191, 0,
	3192, 0, 3193, 0, 3194, 0, 3195, 0, 3196, 0,
	3197, 0, 3198, 0, 3199, 0, 3200, 0, 0, 0,
	3201, 0, 3202, 0, 3203, 0, 0, 3204, 1903, 3205,
	0, 3206, 0, 2350, 3208, 0, 0, 3210, 0, 0,
	3212, 3213, 3214, 3215, 0, 1250, 0, 1257, 3216, 2350,
	2350, 2350, 2350, 2350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3226, 0, 0, 0, 0, 0,
	0, 0, 3239, 0, 0, 3243, 0, 0, 0, 0,
	0, 0, 0, 0, 3246, 3247, 3248, 3249, 3250, 3251,
	0, 0, 0, 3252, 3253, 0, 3254, 0, 3255, 0,
	0, 0, 0, 0, 2396, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 762, 0, 0, 0, 0, 0,
	0, 3303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3333, 0, 762, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 762, 0, 0, 2396, 203, 0, 203, 0,
	203, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3391, 0, 0, 762, 0, 0, 0, 0,
	0, 91, 48, 49, 93, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 52, 81, 82, 0, 79, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 762, 0, 0, 0, 0, 0, 762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 0, 0, 762, 0, 0, 0, 0,
	0, 762, 762, 3478, 101, 762, 0, 762, 0, 0,
	0, 0, 0, 762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	0, 0, 0, 762, 88, 0, 0, 762, 762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 203, 0, 0, 203, 0, 203, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	95, 59, 62, 61, 64, 0, 78, 0, 0, 87,
	84, 203, 4179, 0, 761, 1482, 761, 761, 203, 0,
	0, 0, 0, 762, 0, 0, 0, 0, 4178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 4180, 66, 97, 96, 0, 0, 76,
	77, 63, 0, 0, 0, 0, 0, 85, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 1570, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1571, 0, 2396,
	3697, 4177, 69, 2044, 70, 71, 72, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2071, 0, 0, 0, 0, 0,
	0, 0, 0, 3721, 0, 0, 0, 0, 0, 0,
	2082, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 0, 0, 0, 65, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3740, 0, 3741, 0, 3742,
	0, 3743, 0, 0, 0, 0, 0, 0, 0, 3746,
	3747, 0, 0, 0, 0, 0, 0, 0, 0, 3752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3753, 0, 3754, 0, 3755, 0, 3756,
	0, 3757, 0, 3758, 0, 3759, 0, 3760, 0, 3761,
	0, 3762, 0, 3763, 0, 3764, 0, 3765, 0, 3766,
	0, 3767, 0, 3768, 0, 0, 3769, 0, 0, 0,
	3770, 0, 3771, 0, 0, 0, 0, 0, 3773, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3790, 0, 0, 0, 0, 0, 0, 0, 0, 3795,
	0, 3796, 3797, 0, 3798, 0, 3799, 0, 0, 0,
	0, 3800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 761, 761, 0, 0, 0, 0,
	762, 0, 0, 0, 0, 0, 3840, 0, 0, 0,
	0, 0, 762, 762, 762, 203, 0, 0, 0, 3849,
	0, 0, 3851, 0, 0, 0, 0, 0, 762, 0,
	0, 0, 0, 2136, 3855, 0, 0, 0, 0, 0,
	100, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3991, 0, 203, 0, 0, 761, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 0, 1570, 761, 0, 0, 761,
	761, 761, 761, 0, 761, 0, 761, 761, 0, 761,
	761, 761, 761, 761, 761, 0, 0, 762, 0, 0,
	0, 0, 1570, 761, 761, 1570, 761, 1570, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	0, 0, 0, 75, 760, 762, 0, 0, 0, 762,
	762, 0, 0, 0, 762, 0, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	1571, 762, 1052, 0, 0, 1095, 4100, 761, 1053, 0,
	761, 203, 203, 203, 203, 203, 203, 0, 2191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1131, 0,
	1138, 0, 1142, 0, 0, 0, 0, 0, 0, 0,
	203, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 0, 0, 0, 0, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2477, 0, 0, 0, 0, 0, 0, 0, 2481,
	0, 2484, 0, 0, 2136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 0, 0, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 4158,
	0, 0, 4159, 0, 4160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 203, 203, 203, 0, 203, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 2200, 0, 0, 0, 0, 0, 0, 0,
	0, 1570, 0, 0, 0, 0, 0, 0, 0, 762,
	0, 0, 0, 1571, 0, 0, 762, 762, 1571, 203,
	203, 203, 203, 203, 0, 0, 0, 0, 0, 0,
	4237, 203, 0, 0, 0, 0, 0, 203, 0, 203,
	0, 0, 203, 203, 203, 0, 0, 4269, 2136, 0,
	0, 0, 0, 0, 2635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2656, 2657, 0, 0, 2661,
	0, 0, 0, 0, 0, 4282, 0, 4283, 0, 4284,
	0, 2666, 0, 0, 0, 0, 0, 0, 2669, 0,
	0, 0, 0, 0, 0, 0, 762, 0, 0, 1571,
	0, 0, 0, 0, 762, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 2672, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 203, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 48,
	49, 93, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4364, 0, 4365, 98, 0, 0,
	0, 52, 81, 82, 0, 79, 83, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 4400, 4401, 0, 0, 0, 0, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 762,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1315, 0, 1315, 1315, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 203, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 761, 761, 0, 0, 761, 0,
	761, 0, 0, 0, 0, 0, 761, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 59, 62,
	61, 64, 0, 78, 0, 0, 87, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 761, 0, 0, 0,
	761, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 97, 96, 762, 762, 76, 77, 63, 0,
	0, 0, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 762, 762, 762,
	762, 0, 0, 0, 0, 0, 0, 0, 68, 69,
	0, 70, 71, 72, 73, 942, 0, 0, 0, 0,
	0, 2995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 65, 201, 0, 0, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1570, 0, 761, 0, 1107, 1107, 0, 0, 0, 0,
	0, 1770, 1771, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3082, 3083, 3084, 3085, 3086, 3087,
	0, 0, 0, 0, 762, 0, 762, 0, 203, 0,
	0, 0, 0, 0, 0, 203, 0, 94, 203, 203,
	203, 0, 0, 2136, 3098, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 1571, 0, 0, 0, 203,
	0, 0, 762, 1859, 762, 0, 0, 0, 3106, 0,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1131,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 0, 0, 1959, 0, 0, 1962, 1963, 1965, 1965,
	762, 1965, 0, 1965, 1965, 0, 1974, 1965, 1965, 1965,
	1965, 1965, 0, 203, 0, 0, 762, 0, 0, 0,
	1994, 1995, 0, 1131, 0, 0, 2000, 100, 762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 762, 0, 0, 0, 0, 0, 0,
	762, 0, 762, 761, 0, 0, 0, 0, 0, 0,
	0, 762, 1315, 0, 0, 761, 761, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3273, 3274,
	0, 3278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 761, 761, 0, 0, 0, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 762, 1570, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 1315, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2124,
	0, 0, 0, 0, 0, 762, 203, 0, 0, 0,
	0, 0, 3419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3445, 0, 0, 3448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2186, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 762, 0, 762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 762, 2396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 3608,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 3614, 3615, 0, 1572, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 762, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	0, 0, 761, 0, 2433, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2449, 3678,
	0, 0, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 0, 0, 1570, 0, 0, 761,
	761, 1570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 762, 0, 0, 0, 0,
	0, 0, 3381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	0, 0, 1570, 0, 0, 0, 0, 761, 0, 0,
	0, 0, 0, 1138, 0, 0, 0, 0, 0, 2572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1131, 0, 0, 0, 0,
	0, 1138, 1957, 0, 0, 1957, 0, 1957, 0, 0,
	0, 0, 0, 2601, 3452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 0, 0, 0, 0, 0, 0, 1131, 0,
	0, 0, 0, 2186, 0, 0, 0, 2186, 2186, 0,
	0, 0, 0, 0, 0, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3823, 0,
	0, 3824, 3825, 3826, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 1572, 0, 1572, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 704, 0, 0, 0, 1315,
	0, 0, 0, 0, 0, 0, 0, 0, 3667, 0,
	0, 704, 0, 0, 0, 0, 0, 0, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 2095, 2096, 704,
	704, 704, 704, 704, 704, 704, 0, 0, 0, 0,
	0, 101, 0, 0, 1052, 0, 0, 761, 761, 990,
	1053, 1004, 1005, 1006, 991, 0, 0, 992, 993, 0,
	994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 999, 0, 1007, 1008,
	0, 0, 0, 0, 0, 0, 0, 0, 1052, 0,
	761, 761, 761, 761, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3427, 3428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 0, 0, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 0, 0, 0, 0,
	0, 0, 0, 0, 3429, 0, 0, 0, 0, 0,
	2925, 0, 0, 0, 704, 0, 0, 0, 0, 0,
	0, 0, 2941, 2942, 2943, 0, 0, 761, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 2958, 4142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1570, 0,
	0, 0, 0, 0, 0, 761, 0, 761, 0, 0,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3430, 3431, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3040, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 1142, 0,
	0, 0, 0, 0, 0, 3060, 0, 0, 0, 1957,
	1957, 0, 0, 0, 3065, 0, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 0, 0, 0, 959, 0,
	0, 3076, 956, 957, 0, 0, 0, 958, 960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 0, 2069, 0,
	0, 0, 0, 761, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 761, 0, 0, 0, 0,
	0, 2186, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 0, 0, 2069,
	704, 0, 704, 0, 704, 2500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3228, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1570, 761, 1315,
	761, 0, 0, 0, 0, 0, 3315, 1965, 0, 704,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 761, 704, 704, 0, 0,
	704, 0, 2663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 0, 0, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 761, 0, 0, 0,
	0, 0, 2674, 0, 0, 0, 1131, 0, 0, 0,
	0, 0, 0, 0, 1142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 0, 0,
	0, 1572, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2944,
	0, 0, 0, 0, 1142, 1142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 704, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 3728, 3729, 3730,
	3731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 704, 704, 704, 704,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 3806, 0, 3806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3845, 0, 3847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3806, 0, 0, 0, 0, 0, 0,
	3806, 0, 3806, 0, 0, 0, 0, 0, 0, 0,
	0, 4104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1107, 0, 704, 704,
	704, 0, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1572, 0, 0,
	0, 0, 1572, 704, 704, 704, 704, 704, 0, 0,
	0, 0, 0, 0, 0, 3331, 0, 0, 0, 0,
	0, 2016, 0, 704, 0, 0, 704, 3339, 2069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1142, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 704, 0, 0,
	0, 0, 0, 0, 0, 1142, 0, 0, 0, 0,
	0, 0, 704, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1142, 0, 4188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1315, 1315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4240, 4248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4253, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3877, 3879, 3878,
	3944, 3945, 3946, 3947, 3948, 3949, 3950, 3880, 3881, 832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 1142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 4253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3893, 3894,
	0, 0, 3969, 3968, 3967, 0, 0, 3965, 3966, 3964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 0, 704,
	0, 0, 704, 704, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3970, 955, 0, 808, 809,
	3971, 3972, 959, 3973, 811, 812, 956, 957, 0, 806,
	810, 958, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2016, 3874, 3875,
	3876, 3882, 3883, 3884, 3895, 3942, 3943, 3951, 3953, 911,
	3952, 3954, 3955, 3956, 3959, 3960, 3961, 3962, 3957, 3958,
	3963, 3857, 3861, 3858, 3859, 3860, 3872, 3862, 3863, 3864,
	3865, 3866, 3867, 3868, 3869, 3870, 3871, 3873, 3974, 3975,
	3976, 3977, 3978, 3979, 3888, 3892, 3891, 3889, 3890, 3886,
	3887, 3914, 3913, 3915, 3916, 3917, 3918, 3919, 3920, 3922,
	3921, 3923, 3924, 3925, 3926, 3927, 3928, 3896, 3897, 3900,
	3901, 3899, 3898, 3902, 3911, 3912, 3903, 3904, 3905, 3906,
	3907, 3908, 3910, 3909, 3929, 3930, 3931, 3932, 3933, 3935,
	3934, 3938, 3939, 3937, 3936, 3941, 3940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	961, 0, 962, 0, 0, 966, 0, 0, 0, 968,
	967, 0, 969, 931, 930, 0, 0, 963, 964, 0,
	965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	1465, 1444, 552, 0, 1385, 1468, 1350, 1371, 1478, 1374,
	1377, 1422, 1325, 1400, 437, 1368, 1354, 1320, 1362, 1321,
	1352, 1387, 286, 1349, 1446, 1404, 1467, 384, 283, 1327,
	1318, 212, 529, 1355, 452, 1373, 211, 1425, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 1474, 388, 1410, 0, 521, 421, 1572, 0,
	0, 1451, 1450, 1378, 1389, 1456, 1398, 1437, 1383, 1424,
	1337, 1409, 1469, 1369, 1419, 1470, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 4208, 4210, 531, 986,
	0, 0, 0, 0, 4211, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 1365, 1416,
	636, 1463, 1366, 1418, 281, 339, 288, 280, 607, 1475,
	1455, 1324, 1397, 1462, 1392, 623, 2016, 0, 238, 1466,
	1391, 0, 1421, 0, 1481, 1319, 1412, 0, 1322, 1326,
	1477, 1460, 1358, 1359, 291, 0, 0, 0, 0, 0,
	0, 0, 1388, 1399, 1434, 1438, 1381, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 1408, 0, 0,
	0, 1331, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	0, 0, 0, 0, 0, 1386, 0, 0, 0, 0,
	1336, 0, 1357, 1435, 0, 1317, 313, 1328, 422, 273,
	0, 476, 1348, 319, 333, 1334, 1363, 1464, 1452, 1453,
	1454, 1333, 1442, 1459, 1382, 656, 1461, 1380, 1379, 1429,
	1332, 1449, 1372, 383, 1330, 348, 205, 233, 0, 1370,
	433, 484, 496, 1448, 1447, 1353, 1364, 269, 1361, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 1407,
	1427, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 1329, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 1347, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 1443, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 1432, 1480, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 1341, 1346, 1339, 0, 270,
	271, 1413, 600, 1342, 1340, 1402, 1403, 1343, 1471, 1472,
	1473, 1457, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	1436, 1335, 0, 1344, 1345, 418, 1445, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 1406, 204, 229, 386,
	1476, 477, 304, 677, 645, 507, 640, 214, 231, 1338,
	278, 1351, 1360, 0, 1367, 1375, 1376, 1390, 1393, 1394,
	1395, 1396, 1414, 1415, 1417, 1426, 1428, 1431, 1433, 1440,
	1458, 1479, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 1423, 1384,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 1405, 1411, 399, 297,
	322, 338, 1420, 644, 526, 236, 489, 306, 265, 1439,
	1441, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 1401, 1430, 394, 601, 602,
	334, 415, 0, 0, 0, 0, 0, 0, 1465, 1444,
	552, 0, 1385, 1468, 1350, 1371, 1478, 1374, 1377, 1422,
	1325, 1400, 437, 1368, 1354, 1320, 1362, 1321, 1352, 1387,
	286, 1349, 1446, 1404, 1467, 384, 283, 1327, 1318, 212,
	529, 1355, 452, 1373, 211, 1425, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	1474, 388, 1410, 0, 521, 421, 0, 0, 0, 1451,
	1450, 1378, 1389, 1456, 1398, 1437, 1383, 1424, 1337, 1409,
	1469, 1369, 1419, 1470, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 0, 0, 531, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 1365, 1416, 636, 1463,
	1366, 1418, 281, 339, 288, 280, 607, 1475, 1455, 1324,
	1397, 1462, 1392, 623, 0, 0, 238, 1466, 1391, 0,
	1421, 0, 1481, 1319, 1412, 0, 1322, 1326, 1477, 1460,
	1358, 1359, 291, 0, 0, 0, 0, 0, 0, 0,
	1388, 1399, 1434, 1438, 1381, 0, 0, 0, 0, 0,
	0, 3340, 0, 1356, 0, 1408, 0, 0, 0, 1331,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1386, 0, 0, 0, 0, 1336, 0,
	1357, 1435, 0, 1317, 313, 1328, 422, 273, 0, 476,
	1348, 319, 333, 1334, 1363, 1464, 1452, 1453, 1454, 1333,
	1442, 1459, 1382, 656, 1461, 1380, 1379, 1429, 1332, 1449,
	1372, 383, 1330, 348, 205, 233, 0, 1370, 433, 484,
	496, 1448, 1447, 1353, 1364, 269, 1361, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 1407, 1427, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 1329, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 1347, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 1443, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 1432, 1480, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 1341, 1346, 1339, 0, 270, 271, 1413,
	600, 1342, 1340, 1402, 1403, 1343, 1471, 1472, 1473, 1457,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 1436, 1335,
	0, 1344, 1345, 418, 1445, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 1406, 204, 229, 386, 1476, 477,
	304, 677, 645, 507, 640, 214, 231, 1338, 278, 1351,
	1360, 0, 1367, 1375, 1376, 1390, 1393, 1394, 1395, 1396,
	1414, 1415, 1417, 1426, 1428, 1431, 1433, 1440, 1458, 1479,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 1423, 1384, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 1405, 1411, 399, 297, 322, 338,
	1420, 644, 526, 236, 489, 306, 265, 1439, 1441, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 1401, 1430, 394, 601, 602, 334, 415,
	0, 0, 0, 0, 0, 0, 1465, 1444, 552, 0,
	1385, 1468, 1350, 1371, 1478, 1374, 1377, 1422, 1325, 1400,
	437, 1368, 1354, 1320, 1362, 1321, 1352, 1387, 286, 1349,
	1446, 1404, 1467, 384, 283, 1327, 1318, 212, 529, 1355,
	452, 1373, 211, 1425, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 1474, 388,
	1410, 0, 521, 421, 0, 0, 0, 1451, 1450, 1378,
	1389, 1456, 1398, 1437, 1383, 1424, 1337, 1409, 1469, 1369,
	1419, 1470, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 0, 531, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 1365, 1416, 636, 1463, 1366, 1418,
	281, 339, 288, 280, 607, 1475, 1455, 1324, 1397, 1462,
	1392, 623, 0, 0, 238, 1466, 1391, 0, 1421, 0,
	1481, 1319, 1412, 0, 1322, 1326, 1477, 1460, 1358, 1359,
	291, 0, 0, 0, 0, 0, 0, 0, 1388, 1399,
	1434, 1438, 1381, 0, 0, 0, 0, 0, 0, 3301,
	0, 1356, 0, 1408, 0, 0, 0, 1331, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 0, 0, 1336, 0, 1357, 1435,
	0, 1317, 313, 1328, 422, 273, 0, 476, 1348, 319,
	333, 1334, 1363, 1464, 1452, 1453, 1454, 1333, 1442, 1459,
	1382, 656, 1461, 1380, 1379, 1429, 1332, 1449, 1372, 383,
	1330, 348, 205, 233, 0, 1370, 433, 484, 496, 1448,
	1447, 1353, 1364, 269, 1361, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 1407, 1427, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 1329, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 1347,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 1443, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 1432, 1480, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 1341, 1346, 1339, 0, 270, 271, 1413, 600, 1342,
	1340, 1402, 1403, 1343, 1471, 1472, 1473, 1457, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 1436, 1335, 0, 1344,
	1345, 418, 1445, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 1406, 204, 229, 386, 1476, 477, 304, 677,
	645, 507, 640, 214, 231, 1338, 278, 1351, 1360, 0,
	1367, 1375, 1376, 1390, 1393, 1394, 1395, 1396, 1414, 1415,
	1417, 1426, 1428, 1431, 1433, 1440, 1458, 1479, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 1423, 1384, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 1405, 1411, 399, 297, 322, 338, 1420, 644,
	526, 236, 489, 306, 265, 1439, 1441, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 1401, 1430, 394, 601, 602, 334, 415, 0, 0,
	0, 0, 0, 0, 1465, 1444, 552, 0, 1385, 1468,
	1350, 1371, 1478, 1374, 1377, 1422, 1325, 1400, 437, 1368,
	1354, 1320, 1362, 1321, 1352, 1387, 286, 1349, 1446, 1404,
	1467, 384, 283, 1327, 1318, 212, 529, 1355, 452, 1373,
	211, 1425, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 1474, 388, 1410, 0,
	521, 421, 0, 0, 0, 1451, 1450, 1378, 1389, 1456,
	1398, 1437, 1383, 1424, 1337, 1409, 1469, 1369, 1419, 1470,
	341, 262, 343, 210, 434, 522, 302, 0, 0, 0,
	0, 0, 531, 986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 1365, 1416, 636, 1463, 1366, 1418, 281, 339,
	288, 280, 607, 1475, 1455, 1324, 1397, 1462, 1392, 623,
	0, 0, 238, 1466, 1391, 0, 1421, 0, 1481, 1319,
	1412, 0, 1322, 1326, 1477, 1460, 1358, 1359, 291, 0,
	0, 0, 0, 0, 0, 0, 1388, 1399, 1434, 1438,
	1381, 0, 0, 0, 0, 0, 0, 2479, 0, 1356,
	0, 1408, 0, 0, 0, 1331, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 0, 0, 1336, 0, 1357, 1435, 0, 1317,
	313, 1328, 422, 273, 0, 476, 1348, 319, 333, 1334,
	1363, 1464, 1452, 1453, 1454, 1333, 1442, 1459, 1382, 656,
	1461, 1380, 1379, 1429, 1332, 1449, 1372, 383, 1330, 348,
	205, 233, 0, 1370, 433, 484, 496, 1448, 1447, 1353,
	1364, 269, 1361, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 1407, 1427, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 1329,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 1347, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	1443, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 1432,
	1480, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 1341,
	1346, 1339, 0, 270, 271, 1413, 600, 1342, 1340, 1402,
	1403, 1343, 1471, 1472, 1473, 1457, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 1436, 1335, 0, 1344, 1345, 418,
	1445, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	1406, 204, 229, 386, 1476, 477, 304, 677, 645, 507,
	640, 214, 231, 1338, 278, 1351, 1360, 0, 1367, 1375,
	1376, 1390, 1393, 1394, 1395, 1396, 1414, 1415, 1417, 1426,
	1428, 1431, 1433, 1440, 1458, 1479, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 1423, 1384, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	1405, 1411, 399, 297, 322, 338, 1420, 644, 526, 236,
	489, 306, 265, 1439, 1441, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 1401,
	1430, 394, 601, 602, 334, 415, 0, 0, 0, 0,
	0, 0, 1465, 1444, 552, 0, 1385, 1468, 1350, 1371,
	1478, 1374, 1377, 1422, 1325, 1400, 437, 1368, 1354, 1320,
	1362, 1321, 1352, 1387, 286, 1349, 1446, 1404, 1467, 384,
	283, 1327, 1318, 212, 529, 1355, 452, 1373, 211, 1425,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 1474, 388, 1410, 0, 521, 421,
	0, 0, 0, 1451, 1450, 1378, 1389, 1456, 1398, 1437,
	1383, 1424, 1337, 1409, 1469, 1369, 1419, 1470, 341, 262,
	343, 210, 434, 522, 302, 0, 101, 0, 0, 0,
	531, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	1365, 1416, 636, 1463, 1366, 1418, 281, 339, 288, 280,
	607, 1475, 1455, 1324, 1397, 1462, 1392, 623, 0, 0,
	238, 1466, 1391, 0, 1421, 0, 1481, 1319, 1412, 0,
	1322, 1326, 1477, 1460, 1358, 1359, 291, 0, 0, 0,
	0, 0, 0, 0, 1388, 1399, 1434, 1438, 1381, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 1408,
	0, 0, 0, 1331, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1386, 0, 0,
	0, 0, 1336, 0, 1357, 1435, 0, 1317, 313, 1328,
	422, 273, 0, 476, 1348, 319, 333, 1334, 1363, 1464,
	1452, 1453, 1454, 1333, 1442, 1459, 1382, 656, 1461, 1380,
	1379, 1429, 1332, 1449, 1372, 383, 1330, 348, 205, 233,
	0, 1370, 433, 484, 496, 1448, 1447, 1353, 1364, 269,
	1361, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 1407, 1427, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 1329, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 1347, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 1443, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 1432, 1480, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 1341, 1346, 1339,
	0, 270, 271, 1413, 600, 1342, 1340, 1402, 1403, 1343,
	1471, 1472, 1473, 1457, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 1436, 1335, 0, 1344, 1345, 418, 1445, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 1406, 204,
	229, 386, 1476, 477, 304, 677, 645, 507, 640, 214,
	231, 1338, 278, 1351, 1360, 0, 1367, 1375, 1376, 1390,
	1393, 1394, 1395, 1396, 1414, 1415, 1417, 1426, 1428, 1431,
	1433, 1440, 1458, 1479, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	1423, 1384, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 1405, 1411,
	399, 297, 322, 338, 1420, 644, 526, 236, 489, 306,
	265, 1439, 1441, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 1401, 1430, 394,
	601, 602, 334, 415, 0, 0, 0, 0, 0, 0,
	1465, 1444, 552, 0, 1385, 1468, 1350, 1371, 1478, 1374,
	1377, 1422, 1325, 1400, 437, 1368, 1354, 1320, 1362, 1321,
	1352, 1387, 286, 1349, 1446, 1404, 1467, 384, 283, 1327,
	1318, 212, 529, 1355, 452, 1373, 211, 1425, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 1474, 388, 1410, 0, 521, 421, 0, 0,
	0, 1451, 1450, 1378, 1389, 1456, 1398, 1437, 1383, 1424,
	1337, 1409, 1469, 1369, 1419, 1470, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 0, 0, 531, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 1365, 1416,
	636, 1463, 1366, 1418, 281, 339, 288, 280, 607, 1475,
	1455, 1324, 1397, 1462, 1392, 623, 0, 0, 238, 1466,
	1391, 0, 1421, 0, 1481, 1319, 1412, 0, 1322, 1326,
	1477, 1460, 1358, 1359, 291, 0, 0, 0, 0, 0,
	0, 0, 1388, 1399, 1434, 1438, 1381, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 1408, 0, 0,
	0, 1331, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1386, 0, 0, 0, 0,
	1336, 0, 1357, 1435, 0, 1317, 313, 1328, 422, 273,
	0, 476, 1348, 319, 333, 1334, 1363, 1464, 1452, 1453,
	1454, 1333, 1442, 1459, 1382, 656, 1461, 1380, 1379, 1429,
	1332, 1449, 1372, 383, 1330, 348, 205, 233, 0, 1370,
	433, 484, 496, 1448, 1447, 1353, 1364, 269, 1361, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 1407,
	1427, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 1329, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 1347, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 1443, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 1432, 1480, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 1341, 1346, 1339, 0, 270,
	271, 1413, 600, 1342, 1340, 1402, 1403, 1343, 1471, 1472,
	1473, 1457, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	1436, 1335, 0, 1344, 1345, 418, 1445, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 1406, 204, 229, 386,
	1476, 477, 304, 677, 645, 507, 640, 214, 231, 1338,
	278, 1351, 1360, 0, 1367, 1375, 1376, 1390, 1393, 1394,
	1395, 1396, 1414, 1415, 1417, 1426, 1428, 1431, 1433, 1440,
	1458, 1479, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 1423, 1384,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 1405, 1411, 399, 297,
	322, 338, 1420, 644, 526, 236, 489, 306, 265, 1439,
	1441, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 1401, 1430, 394, 601, 602,
	334, 415, 0, 0, 0, 0, 0, 0, 1465, 1444,
	552, 0, 1385, 1468, 1350, 1371, 1478, 1374, 1377, 1422,
	1325, 1400, 437, 1368, 1354, 1320, 1362, 1321, 1352, 1387,
	286, 1349, 1446, 1404, 1467, 384, 283, 1327, 1318, 212,
	529, 1355, 452, 1373, 211, 1425, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	1474, 388, 1410, 0, 521, 421, 0, 0, 0, 1451,
	1450, 1378, 1389, 1456, 1398, 1437, 1383, 1424, 1337, 1409,
	1469, 1369, 1419, 1470, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 0, 0, 531, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 1365, 1416, 636, 1463,
	1366, 1418, 281, 339, 288, 280, 607, 1475, 1455, 1324,
	1397, 1462, 1392, 623, 0, 0, 238, 1466, 1391, 0,
	1421, 0, 1481, 1319, 1412, 0, 1322, 1326, 1477, 1460,
	1358, 1359, 291, 0, 0, 0, 0, 0, 0, 0,
	1388, 1399, 1434, 1438, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 1408, 0, 0, 0, 1331,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1386, 0, 0, 0, 0, 1336, 0,
	1357, 1435, 0, 1317, 313, 1328, 422, 273, 0, 476,
	1348, 319, 333, 1334, 1363, 1464, 1452, 1453, 1454, 1333,
	1442, 1459, 1382, 656, 1461, 1380, 1379, 1429, 1332, 1449,
	1372, 383, 1330, 348, 205, 233, 0, 1370, 433, 484,
	496, 1448, 1447, 1353, 1364, 269, 1361, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 1407, 1427, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 1329, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 1347, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 1443, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 1432, 1480, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 1341, 1346, 1339, 0, 270, 271, 1413,
	600, 1342, 1340, 1402, 1403, 1343, 1471, 1472, 1473, 1457,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 1436, 1335,
	0, 1344, 1345, 418, 1445, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 1406, 204, 229, 386, 1476, 477,
	304, 677, 645, 507, 640, 214, 231, 1338, 278, 1351,
	1360, 0, 1367, 1375, 1376, 1390, 1393, 1394, 1395, 1396,
	1414, 1415, 1417, 1426, 1428, 1431, 1433, 1440, 1458, 1479,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 1423, 1384, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 1405, 1411, 399, 297, 322, 338,
	1420, 644, 526, 236, 489, 306, 265, 1439, 1441, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 1401, 1430, 394, 601, 602, 334, 415,
	0, 0, 0, 0, 0, 0, 1465, 1444, 552, 0,
	1385, 1468, 1350, 1371, 1478, 1374, 1377, 1422, 1325, 1400,
	437, 1368, 1354, 1320, 1362, 1321, 1352, 1387, 286, 1349,
	1446, 1404, 1467, 384, 283, 1327, 1318, 212, 529, 1355,
	452, 1373, 211, 1425, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 1474, 388,
	1410, 0, 521, 421, 0, 0, 0, 1451, 1450, 1378,
	1389, 1456, 1398, 1437, 1383, 1424, 1337, 1409, 1469, 1369,
	1419, 1470, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 0, 531, 986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 1365, 1416, 636, 1463, 1366, 1418,
	281, 339, 288, 280, 607, 1475, 1455, 1324, 1397, 1462,
	1392, 623, 0, 0, 238, 1466, 1391, 0, 1421, 0,
	1481, 1319, 1412, 0, 1322, 1326, 1477, 1460, 1358, 1359,
	291, 0, 0, 0, 0, 0, 0, 0, 1388, 1399,
	1434, 1438, 1381, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 1408, 0, 0, 0, 1331, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 0, 0, 1336, 0, 1357, 1435,
	0, 1317, 313, 1328, 422, 273, 0, 476, 1348, 319,
	333, 1334, 1363, 1464, 1452, 1453, 1454, 1333, 1442, 1459,
	1382, 656, 1461, 1380, 1379, 1429, 1332, 1449, 1372, 383,
	1330, 348, 205, 233, 0, 1370, 433, 484, 496, 1448,
	1447, 1353, 1364, 269, 1361, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 1407, 1427, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 1329, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 1347,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 1443, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 1432, 1480, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 1341, 1346, 1339, 0, 270, 271, 1413, 600, 1342,
	1340, 1402, 1403, 1343, 1471, 1472, 1473, 1457, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 1436, 1335, 0, 1344,
	1345, 418, 1445, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 1406, 204, 229, 386, 1476, 477, 304, 677,
	645, 507, 640, 214, 231, 1338, 278, 1351, 1360, 0,
	1367, 1375, 1376, 1390, 1393, 1394, 1395, 1396, 1414, 1415,
	1417, 1426, 1428, 1431, 1433, 1440, 1458, 1479, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 1423, 1384, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 1405, 1411, 399, 297, 322, 338, 1420, 644,
	526, 236, 489, 306, 265, 1439, 1441, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 1401, 1430, 394, 601, 602, 334, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 791, 0, 0, 0, 286, 796, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 803, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	798, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 101, 0,
	0, 1052, 531, 986, 775, 952, 990, 1053, 1004, 1005,
	1006, 991, 0, 249, 992, 993, 256, 994, 0, 951,
	834, 836, 835, 901, 902, 903, 904, 905, 906, 907,
	837, 838, 832, 999, 636, 1007, 1008, 0, 281, 339,
	288, 280, 607, 0, 0, 2287, 2288, 2289, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	771, 788, 0, 802, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 786, 0, 0, 0,
	0, 946, 0, 787, 0, 0, 795, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 945, 0, 0, 656,
	0, 0, 943, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 996, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 997, 998, 272, 679, 842, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 850, 851, 296, 324, 927, 926, 925, 323, 325,
	923, 924, 922, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 933, 955,
	944, 808, 809, 934, 935, 959, 936, 811, 812, 956,
	957, 805, 806, 810, 958, 960, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 947, 794, 793, 0, 800, 801,
	0, 830, 831, 833, 839, 840, 841, 852, 899, 900,
	908, 910, 911, 909, 912, 913, 914, 917, 918, 919,
	920, 915, 916, 921, 813, 817, 814, 815, 816, 828,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	829, 970, 971, 972, 973, 974, 975, 845, 849, 848,
	846, 847, 843, 844, 871, 870, 872, 873, 874, 875,
	876, 877, 879, 878, 880, 881, 882, 883, 884, 885,
	853, 854, 857, 858, 856, 855, 859, 868, 869, 860,
	861, 862, 863, 864, 865, 867, 866, 886, 887, 888,
	889, 890, 892, 891, 895, 896, 894, 893, 898, 897,
	792, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 961, 278, 962, 0, 0, 966, 0,
	0, 0, 968, 967, 0, 969, 931, 930, 0, 0,
	963, 964, 0, 965, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 976, 977, 978, 979, 980, 981,
	982, 983, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 1051, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 791, 0, 0, 0, 286, 796,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 803, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 799, 0, 0, 0, 0, 0, 0,
	2508, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	101, 0, 0, 1052, 531, 986, 775, 952, 990, 1053,
	1004, 1005, 1006, 991, 0, 249, 992, 993, 256, 994,
	0, 951, 834, 836, 835, 901, 902, 903, 904, 905,
	906, 907, 837, 838, 832, 999, 636, 1007, 1008, 2509,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 771, 788, 0, 802, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 785, 786, 0,
	0, 0, 0, 946, 0, 787, 0, 0, 795, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 945, 0,
	0, 656, 0, 0, 943, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 996, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 997, 998, 272, 679, 842, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 850, 851, 296, 324, 927, 926, 925,
	323, 325, 923, 924, 922, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	933, 955, 944, 808, 809, 934, 935, 959, 936, 811,
	812, 956, 957, 805, 806, 810, 958, 960, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 947, 794, 793, 0,
	800, 801, 0, 830, 831, 833, 839, 840, 841, 852,
	899, 900, 908, 910, 911, 909, 912, 913, 914, 917,
	918, 919, 920, 915, 916, 921, 813, 817, 814, 815,
	816, 828, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 829, 970, 971, 972, 973, 974, 975, 845,
	849, 848, 846, 847, 843, 844, 871, 870, 872, 873,
	874, 875, 876, 877, 879, 878, 880, 881, 882, 883,
	884, 885, 853, 854, 857, 858, 856, 855, 859, 868,
	869, 860, 861, 862, 863, 864, 865, 867, 866, 886,
	887, 888, 889, 890, 892, 891, 895, 896, 894, 893,
	898, 897, 792, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 961, 278, 962, 0, 0,
	966, 0, 0, 0, 968, 967, 0, 969, 931, 930,
	0, 0, 963, 964, 0, 965, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 976, 977, 978, 979,
	980, 981, 982, 983, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 1051, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 91,
	552, 0, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 791, 0, 0, 0,
	286, 796, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	1761, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 798, 799, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 101, 0, 0, 1052, 531, 986, 775, 952,
	990, 1053, 1004, 1005, 1006, 991, 0, 249, 992, 993,
	256, 994, 0, 951, 834, 836, 835, 901, 902, 903,
	904, 905, 906, 907, 837, 838, 832, 999, 636, 1007,
	1008, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 771, 788, 0, 802, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	786, 0, 0, 0, 0, 946, 0, 787, 0, 0,
	795, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	945, 0, 0, 656, 0, 0, 943, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 996, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 997, 998, 272, 679,
	842, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 850, 851, 296, 324, 927,
	926, 925, 323, 325, 923, 924, 922, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 933, 955, 944, 808, 809, 934, 935, 959,
	936, 811, 812, 956, 957, 805, 806, 810, 958, 960,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 947, 794,
	793, 0, 800, 801, 0, 830, 831, 833, 839, 840,
	841, 852, 899, 900, 908, 910, 911, 909, 912, 913,
	914, 917, 918, 919, 920, 915, 916, 921, 813, 817,
	814, 815, 816, 828, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 829, 970, 971, 972, 973, 974,
	975, 845, 849, 848, 846, 847, 843, 844, 871, 870,
	872, 873, 874, 875, 876, 877, 879, 878, 880, 881,
	882, 883, 884, 885, 853, 854, 857, 858, 856, 855,
	859, 868, 869, 860, 861, 862, 863, 864, 865, 867,
	866, 886, 887, 888, 889, 890, 892, 891, 895, 896,
	894, 893, 898, 897, 792, 204, 229, 386, 100, 477,
	304, 677, 645, 507, 640, 214, 231, 961, 278, 962,
	0, 0, 966, 0, 0, 0, 968, 967, 0, 969,
	931, 930, 0, 0, 963, 964, 0, 965, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 976, 977,
	978, 979, 980, 981, 982, 983, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 1051, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 791, 0,
	0, 0, 286, 796, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 803, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 798, 799, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 101, 0, 0, 1052, 531, 986,
	775, 952, 990, 1053, 1004, 1005, 1006, 991, 0, 249,
	992, 993, 256, 994, 0, 951, 834, 836, 835, 901,
	902, 903, 904, 905, 906, 907, 837, 838, 832, 999,
	636, 1007, 1008, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 771, 788, 0, 802,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 785, 786, 0, 0, 0, 0, 946, 0, 787,
	0, 0, 795, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 945, 0, 0, 656, 0, 0, 943, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 996, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 4197,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 997, 998,
	272, 679, 842, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 850, 851, 296,
	324, 927, 926, 925, 323, 325, 923, 924, 922, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 933, 955, 944, 808, 809, 934,
	935, 959, 936, 811, 812, 956, 957, 805, 806, 810,
	958, 960, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	947, 794, 793, 0, 800, 801, 0, 830, 831, 833,
	839, 840, 841, 852, 899, 900, 908, 910, 911, 909,
	912, 913, 914, 917, 918, 919, 920, 915, 916, 921,
	813, 817, 814, 815, 816, 828, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 829, 970, 971, 972,
	973, 974, 975, 845, 849, 848, 846, 847, 843, 844,
	871, 870, 872, 873, 874, 875, 876, 877, 879, 878,
	880, 881, 882, 883, 884, 885, 853, 854, 857, 858,
	856, 855, 859, 868, 869, 860, 861, 862, 863, 864,
	865, 867, 866, 886, 887, 888, 889, 890, 892, 891,
	895, 896, 894, 893, 898, 897, 792, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 961,
	278, 962, 0, 0, 966, 0, 0, 0, 968, 967,
	0, 969, 931, 930, 0, 0, 963, 964, 0, 965,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	976, 977, 978, 979, 980, 981, 982, 983, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 1051,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	791, 0, 0, 0, 286, 796, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 803, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 798, 799,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 101, 0, 1798, 1052,
	531, 986, 775, 952, 990, 1053, 1004, 1005, 1006, 991,
	0, 249, 992, 993, 256, 994, 0, 951, 834, 836,
	835, 901, 902, 903, 904, 905, 906, 907, 837, 838,
	832, 999, 636, 1007, 1008, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 788,
	0, 802, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 785, 786, 0, 0, 0, 0, 946,
	0, 787, 0, 0, 795, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 945, 0, 0, 656, 0, 0,
	943, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 996,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	997, 998, 272, 679, 842, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 850,
	851, 296, 324, 927, 926, 925, 323, 325, 923, 924,
	922, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 933, 955, 944, 808,
	809, 934, 935, 959, 936, 811, 812, 956, 957, 805,
	806, 810, 958, 960, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 947, 794, 793, 0, 800, 801, 0, 830,
	831, 833, 839, 840, 841, 852, 899, 900, 908, 910,
	911, 909, 912, 913, 914, 917, 918, 919, 920, 915,
	916, 921, 813, 817, 814, 815, 816, 828, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 829, 970,
	971, 972, 973, 974, 975, 845, 849, 848, 846, 847,
	843, 844, 871, 870, 872, 873, 874, 875, 876, 877,
	879, 878, 880, 881, 882, 883, 884, 885, 853, 854,
	857, 858, 856, 855, 859, 868, 869, 860, 861, 862,
	863, 864, 865, 867, 866, 886, 887, 888, 889, 890,
	892, 891, 895, 896, 894, 893, 898, 897, 792, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 961, 278, 962, 0, 0, 966, 0, 0, 0,
	968, 967, 0, 969, 931, 930, 0, 0, 963, 964,
	0, 965, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 976, 977, 978, 979, 980, 981, 982, 983,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 1051, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 791, 0, 0, 0, 286, 796, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 803, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	798, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 101, 0,
	0, 1052, 531, 986, 775, 952, 990, 1053, 1004, 1005,
	1006, 991, 0, 249, 992, 993, 256, 994, 0, 951,
	834, 836, 835, 901, 902, 903, 904, 905, 906, 907,
	837, 838, 832, 999, 636, 1007, 1008, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	771, 788, 0, 802, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 786, 1105, 0, 0,
	0, 946, 0, 787, 0, 0, 795, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 945, 0, 0, 656,
	0, 0, 943, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 996, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 997, 998, 272, 679, 842, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 850, 851, 296, 324, 927, 926, 925, 323, 325,
	923, 924, 922, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 933, 955,
	944, 808, 809, 934, 935, 959, 936, 811, 812, 956,
	957, 805, 806, 810, 958, 960, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 947, 794, 793, 0, 800, 801,
	0, 830, 831, 833, 839, 840, 841, 852, 899, 900,
	908, 910, 911, 909, 912, 913, 914, 917, 918, 919,
	920, 915, 916, 921, 813, 817, 814, 815, 816, 828,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	829, 970, 971, 972, 973, 974, 975, 845, 849, 848,
	846, 847, 843, 844, 871, 870, 872, 873, 874, 875,
	876, 877, 879, 878, 880, 881, 882, 883, 884, 885,
	853, 854, 857, 858, 856, 855, 859, 868, 869, 860,
	861, 862, 863, 864, 865, 867, 866, 886, 887, 888,
	889, 890, 892, 891, 895, 896, 894, 893, 898, 897,
	792, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 961, 278, 962, 0, 0, 966, 0,
	0, 0, 968, 967, 0, 969, 931, 930, 0, 0,
	963, 964, 0, 965, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 976, 977, 978, 979, 980, 981,
	982, 983, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 1051, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 791, 0, 0, 0, 286, 796,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 803, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 799, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	101, 0, 0, 1052, 531, 986, 775, 952, 990, 1053,
	1004, 1005, 1006, 991, 0, 249, 992, 993, 256, 994,
	0, 951, 834, 836, 835, 901, 902, 903, 904, 905,
	906, 907, 837, 838, 832, 999, 636, 1007, 1008, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 771, 788, 0, 802, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 785, 786, 0,
	0, 0, 0, 946, 0, 787, 0, 0, 795, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 945, 0,
	0, 656, 0, 0, 943, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 996, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 997, 998, 272, 679, 842, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 850, 851, 296, 324, 927, 926, 925,
	323, 325, 923, 924, 922, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	933, 955, 944, 808, 809, 934, 935, 959, 936, 811,
	812, 956, 957, 805, 806, 810, 958, 960, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 947, 794, 793, 0,
	800, 801, 0, 830, 831, 833, 839, 840, 841, 852,
	899, 900, 908, 910, 911, 909, 912, 913, 914, 917,
	918, 919, 920, 915, 916, 921, 813, 817, 814, 815,
	816, 828, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 829, 970, 971, 972, 973, 974, 975, 845,
	849, 848, 846, 847, 843, 844, 871, 870, 872, 873,
	874, 875, 876, 877, 879, 878, 880, 881, 882, 883,
	884, 885, 853, 854, 857, 858, 856, 855, 859, 868,
	869, 860, 861, 862, 863, 864, 865, 867, 866, 886,
	887, 888, 889, 890, 892, 891, 895, 896, 894, 893,
	898, 897, 792, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 961, 278, 962, 0, 0,
	966, 0, 0, 0, 968, 967, 0, 969, 931, 930,
	0, 0, 963, 964, 0, 965, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 976, 977, 978, 979,
	980, 981, 982, 983, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 1051, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 791, 0, 0, 0,
	286, 796, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	803, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 798, 799, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 101, 0, 0, 1052, 531, 986, 775, 952,
	990, 1053, 1004, 1005, 1006, 991, 0, 249, 992, 993,
	256, 994, 0, 951, 834, 836, 835, 901, 902, 903,
	904, 905, 906, 907, 837, 838, 832, 999, 636, 1007,
	1008, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 771, 788, 0, 802, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	786, 0, 0, 0, 0, 946, 0, 787, 0, 0,
	795, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 3242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	945, 0, 0, 656, 0, 0, 943, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 996, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 997, 998, 272, 679,
	842, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 850, 851, 296, 324, 927,
	926, 925, 323, 325, 923, 924, 922, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 933, 955, 944, 808, 809, 934, 935, 959,
	936, 811, 812, 956, 957, 805, 806, 810, 958, 960,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 947, 794,
	793, 0, 800, 801, 0, 830, 831, 833, 839, 840,
	841, 852, 899, 900, 908, 910, 911, 909, 912, 913,
	914, 917, 918, 919, 920, 915, 916, 921, 813, 817,
	814, 815, 816, 828, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 829, 970, 971, 972, 973, 974,
	975, 845, 849, 848, 846, 847, 843, 844, 871, 870,
	872, 873, 874, 875, 876, 877, 879, 878, 880, 881,
	882, 883, 884, 885, 853, 854, 857, 858, 856, 855,
	859, 868, 869, 860, 861, 862, 863, 864, 865, 867,
	866, 886, 887, 888, 889, 890, 892, 891, 895, 896,
	894, 893, 898, 897, 792, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 961, 278, 962,
	0, 0, 966, 0, 0, 0, 968, 967, 0, 969,
	931, 930, 0, 0, 963, 964, 0, 965, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 976, 977,
	978, 979, 980, 981, 982, 983, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 1051, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 791, 0,
	0, 0, 286, 796, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 803, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 798, 799, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 101, 0, 0, 1052, 531, 986,
	775, 952, 990, 1053, 1004, 1005, 1006, 991, 0, 249,
	992, 993, 256, 994, 0, 951, 834, 836, 835, 901,
	902, 903, 904, 905, 906, 907, 837, 838, 832, 999,
	636, 1007, 1008, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 771, 788, 0, 802,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 785, 786, 0, 0, 0, 0, 946, 0, 787,
	0, 0, 795, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 3238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 945, 0, 0, 656, 0, 0, 943, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 996, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 997, 998,
	272, 679, 842, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 850, 851, 296,
	324, 927, 926, 925, 323, 325, 923, 924, 922, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 933, 955, 944, 808, 809, 934,
	935, 959, 936, 811, 812, 956, 957, 805, 806, 810,
	958, 960, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	947, 794, 793, 0, 800, 801, 0, 830, 831, 833,
	839, 840, 841, 852, 899, 900, 908, 910, 911, 909,
	912, 913, 914, 917, 918, 919, 920, 915, 916, 921,
	813, 817, 814, 815, 816, 828, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 829, 970, 971, 972,
	973, 974, 975, 845, 849, 848, 846, 847, 843, 844,
	871, 870, 872, 873, 874, 875, 876, 877, 879, 878,
	880, 881, 882, 883, 884, 885, 853, 854, 857, 858,
	856, 855, 859, 868, 869, 860, 861, 862, 863, 864,
	865, 867, 866, 886, 887, 888, 889, 890, 892, 891,
	895, 896, 894, 893, 898, 897, 792, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 961,
	278, 962, 0, 0, 966, 0, 0, 0, 968, 967,
	0, 969, 931, 930, 0, 0, 963, 964, 0, 965,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	976, 977, 978, 979, 980, 981, 982, 983, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 1051,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	791, 0, 0, 0, 286, 796, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 803, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 798, 799,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 101, 0, 0, 1052,
	531, 986, 1126, 952, 990, 1053, 1004, 1005, 1006, 991,
	0, 249, 992, 993, 256, 994, 0, 951, 834, 836,
	835, 901, 902, 903, 904, 905, 906, 907, 837, 838,
	832, 999, 636, 1007, 1008, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 788,
	0, 802, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 785, 786, 0, 0, 0, 0, 946,
	0, 787, 0, 0, 795, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 945, 0, 0, 656, 0, 0,
	943, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 996,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	997, 998, 272, 679, 842, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 850,
	851, 296, 324, 927, 926, 925, 323, 325, 923, 924,
	922, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 933, 955, 944, 808,
	809, 934, 935, 959, 936, 811, 812, 956, 957, 805,
	806, 810, 958, 960, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 947, 794, 793, 0, 800, 801, 0, 830,
	831, 833, 839, 840, 841, 852, 899, 900, 908, 910,
	911, 909, 912, 913, 914, 917, 918, 919, 920, 915,
	916, 921, 813, 817, 814, 815, 816, 828, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 829, 970,
	971, 972, 973, 974, 975, 845, 849, 848, 846, 847,
	843, 844, 871, 870, 872, 873, 874, 875, 876, 877,
	879, 878, 880, 881, 882, 883, 884, 885, 853, 854,
	857, 858, 856, 855, 859, 868, 869, 860, 861, 862,
	863, 864, 865, 867, 866, 886, 887, 888, 889, 890,
	892, 891, 895, 896, 894, 893, 898, 897, 792, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 961, 278, 962, 0, 0, 966, 0, 0, 0,
	968, 967, 0, 969, 931, 930, 0, 0, 963, 964,
	0, 965, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 976, 977, 978, 979, 980, 981, 982, 983,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 1051, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 791, 0, 0, 0, 286, 796, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 803, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	798, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 101, 0,
	0, 1052, 531, 986, 1126, 952, 990, 1053, 1004, 1005,
	1006, 991, 0, 249, 992, 993, 256, 994, 0, 951,
	834, 836, 835, 901, 902, 903, 904, 905, 906, 907,
	837, 838, 832, 999, 636, 1007, 1008, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 788, 0, 802, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 786, 0, 0, 0,
	0, 946, 0, 787, 0, 0, 795, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 2178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 945, 0, 0, 656,
	0, 0, 943, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 996, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 997, 998, 272, 679, 842, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 850, 851, 296, 324, 927, 926, 925, 323, 325,
	923, 924, 922, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 933, 955,
	944, 808, 809, 934, 935, 959, 936, 811, 812, 956,
	957, 805, 806, 810, 958, 960, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 947, 794, 793, 0, 800, 801,
	0, 830, 831, 833, 839, 840, 841, 852, 899, 900,
	908, 910, 911, 909, 912, 913, 914, 917, 918, 919,
	920, 915, 916, 921, 813, 817, 814, 815, 816, 828,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	829, 970, 971, 972, 973, 974, 975, 845, 849, 848,
	846, 847, 843, 844, 871, 870, 872, 873, 874, 875,
	876, 877, 879, 878, 880, 881, 882, 883, 884, 885,
	853, 854, 857, 858, 856, 855, 859, 868, 869, 860,
	861, 862, 863, 864, 865, 867, 866, 886, 887, 888,
	889, 890, 892, 891, 895, 896, 894, 893, 898, 897,
	792, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 961, 278, 962, 0, 0, 966, 0,
	0, 0, 968, 967, 0, 969, 931, 930, 0, 0,
	963, 964, 0, 965, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 976, 977, 978, 979, 980, 981,
	982, 983, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 1051, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 791, 0, 0, 0, 286, 796,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 803, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 799, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	101, 0, 0, 1052, 531, 986, 1126, 952, 990, 1053,
	1004, 1005, 1006, 991, 0, 249, 992, 993, 256, 994,
	0, 951, 834, 836, 835, 901, 902, 903, 904, 905,
	906, 907, 837, 838, 832, 999, 636, 1007, 1008, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 788, 0, 802, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 785, 786, 0,
	0, 0, 0, 946, 0, 787, 0, 0, 795, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 2176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 945, 0,
	0, 656, 0, 0, 943, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 996, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 997, 998, 272, 679, 842, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 850, 851, 296, 324, 927, 926, 925,
	323, 325, 923, 924, 922, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	933, 955, 944, 808, 809, 934, 935, 959, 936, 811,
	812, 956, 957, 805, 806, 810, 958, 960, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 947, 794, 793, 0,
	800, 801, 0, 830, 831, 833, 839, 840, 841, 852,
	899, 900, 908, 910, 911, 909, 912, 913, 914, 917,
	918, 919, 920, 915, 916, 921, 813, 817, 814, 815,
	816, 828, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 829, 970, 971, 972, 973, 974, 975, 845,
	849, 848, 846, 847, 843, 844, 871, 870, 872, 873,
	874, 875, 876, 877, 879, 878, 880, 881, 882, 883,
	884, 885, 853, 854, 857, 858, 856, 855, 859, 868,
	869, 860, 861, 862, 863, 864, 865, 867, 866, 886,
	887, 888, 889, 890, 892, 891, 895, 896, 894, 893,
	898, 897, 792, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 961, 278, 962, 0, 0,
	966, 0, 0, 0, 968, 967, 0, 969, 931, 930,
	0, 0, 963, 964, 0, 965, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 976, 977, 978, 979,
	980, 981, 982, 983, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 1051, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 0, 0, 531, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 656, 0, 0, 0, 0, 0, 1165,
	1166, 383, 1134, 348, 205, 233, 1159, 1163, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 91, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 103, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 101, 0, 0, 0, 531, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	100, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 2495, 0, 0,
	2494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 0,
	531, 751, 0, 0, 0, 0, 4380, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 4378, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	4379, 4247, 4377, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 91, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 103, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 101, 0,
	1798, 0, 531, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 0, 0, 636, 0, 0, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 0, 0, 0, 0, 0, 418,
	0, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	0, 204, 229, 386, 100, 477, 304, 677, 645, 507,
	640, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 1838,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 1840, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 0, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 1842, 531, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 0, 0, 636, 0, 0, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 1523, 0,
	1524, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 0, 0, 0, 0,
	0, 418, 0, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 0, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 0, 0, 531, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 4241, 4242, 4243, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 0, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 101, 0, 0, 0, 531, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 2495, 0, 0,
	2494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 2427,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 2017,
	531, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 2425, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 0, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 0, 0,
	0, 0, 531, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 0, 0, 636, 0, 0, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 1128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 383, 1134, 348,
	205, 233, 1132, 0, 433, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 0, 0, 0, 0, 0, 418,
	0, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	0, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 2427, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 0, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 2017, 531, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 0, 0, 636, 0, 0, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 0, 0, 0, 0,
	0, 418, 0, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 0, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 1798, 0, 531, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 3807, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 0, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 0, 2187, 531, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 2959,
	531, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 0, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 0, 0,
	0, 0, 531, 751, 0, 0, 0, 0, 2926, 0,
	0, 0, 0, 249, 0, 0, 256, 2927, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 0, 0, 636, 0, 0, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 0, 0, 0, 0, 0, 418,
	0, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	0, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 286, 1861,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 0, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 1860, 531, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 0, 0, 636, 0, 0, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 0, 0, 0, 0,
	0, 418, 0, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 0, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 0, 0, 531, 753, 754, 755,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 0, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 0, 0, 531, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 4247,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 0,
	531, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 4163, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 0, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 0, 0,
	0, 2017, 531, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 0, 0, 636, 0, 0, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 0, 0, 0, 0, 0, 418,
	0, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	0, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 0, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 0, 531, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 0, 0, 636, 0, 0, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 3807, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 0, 0, 0, 0,
	0, 418, 0, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 0, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 101, 0, 0, 0, 531, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 0, 0, 0, 2496, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 0, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 0, 0, 531, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 1842,
	531, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 0, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 0, 0,
	0, 0, 531, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 0, 0, 636, 0, 0, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 0, 0, 0, 0, 0, 418,
	0, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	0, 204, 229, 386, 2134, 477, 304, 677, 645, 507,
	640, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 0, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 2125, 531, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 0, 0, 636, 0, 0, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 0, 0, 0, 0,
	0, 418, 0, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 0, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 1984, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 0, 0, 531, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	1982, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 0, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 0, 0, 531, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 1980, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 0,
	531, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 384, 283, 0, 1978, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 0, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 0, 0,
	0, 0, 531, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 0, 0, 636, 0, 0, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 0, 0, 0, 0, 0, 418,
	0, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	0, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 384, 283, 0, 1976, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 0, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 0, 531, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 0, 0, 636, 0, 0, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 0, 0, 0, 0,
	0, 418, 0, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 0, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 1972, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 0, 0, 531, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	1970, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 0, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 0, 0, 531, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 1968, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 0,
	531, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 0, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 1943, 0,
	0, 0, 531, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 0, 0, 636, 0, 0, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 0, 0, 0, 0, 0, 418,
	0, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	0, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 1846, 286, 0,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 0, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 0, 531, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 0, 0, 636, 0, 0, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 0, 0, 0, 0,
	0, 418, 0, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 0, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	430, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 101, 0, 0, 0, 531, 986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 0, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 0, 0, 531, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 1499, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 0,
	531, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1079, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 415, 0, 394,
	601, 602, 334, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 384, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 395, 392, 610, 298, 289, 285,
	264, 335, 404, 449, 542, 443, 0, 388, 0, 0,
	521, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 262, 343, 210, 434, 522, 302, 0, 0, 0,
	0, 0, 531, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	369, 378, 377, 357, 358, 360, 362, 368, 375, 381,
	354, 363, 0, 0, 636, 0, 0, 0, 281, 339,
	288, 280, 607, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 422, 273, 0, 476, 0, 319, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 702, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 348,
	205, 233, 0, 0, 433, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 447, 631, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 390, 612, 472, 628,
	657, 658, 279, 427, 642, 546, 650, 675, 234, 276,
	441, 530, 634, 518, 416, 608, 609, 347, 517, 311,
	209, 387, 663, 232, 502, 389, 253, 241, 614, 639,
	315, 267, 305, 479, 670, 221, 541, 625, 250, 506,
	0, 0, 678, 258, 528, 637, 626, 223, 621, 527,
	412, 344, 345, 222, 0, 480, 284, 309, 0, 0,
	274, 436, 616, 617, 272, 679, 237, 649, 228, 0,
	648, 429, 611, 622, 413, 401, 227, 620, 411, 400,
	352, 373, 374, 296, 324, 469, 393, 470, 323, 325,
	424, 423, 425, 215, 635, 653, 0, 216, 0, 523,
	638, 680, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 330, 385, 440, 468, 464, 473,
	0, 605, 629, 643, 655, 661, 662, 664, 665, 666,
	667, 668, 671, 669, 428, 328, 519, 351, 391, 0,
	0, 446, 495, 251, 633, 520, 240, 599, 417, 426,
	259, 261, 260, 235, 511, 604, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 676, 532, 538, 533, 534, 535,
	536, 537, 0, 539, 0, 0, 0, 0, 0, 418,
	0, 618, 619, 699, 402, 509, 630, 353, 367, 370,
	359, 379, 0, 380, 355, 356, 361, 364, 365, 366,
	371, 372, 376, 382, 263, 218, 409, 419, 603, 329,
	224, 225, 226, 548, 549, 550, 551, 646, 647, 651,
	213, 485, 486, 487, 488, 308, 641, 326, 491, 490,
	349, 350, 397, 471, 564, 566, 577, 581, 583, 585,
	591, 594, 565, 567, 578, 582, 584, 586, 592, 595,
	554, 556, 558, 560, 573, 572, 569, 597, 598, 575,
	580, 559, 571, 576, 589, 596, 593, 553, 557, 561,
	570, 588, 587, 568, 579, 590, 574, 562, 555, 563,
	0, 204, 229, 386, 0, 477, 304, 677, 645, 507,
	640, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 336,
	337, 340, 346, 398, 405, 406, 407, 408, 430, 431,
	432, 435, 438, 439, 442, 444, 445, 448, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 540, 613, 615, 632, 652, 659, 503, 403, 451,
	475, 606, 0, 0, 317, 318, 466, 467, 331, 332,
	673, 674, 316, 627, 660, 624, 672, 654, 460, 396,
	0, 0, 399, 297, 322, 338, 0, 644, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 342, 410, 420, 450, 456, 312, 287, 255, 482,
	252, 508, 543, 544, 545, 547, 414, 282, 455, 415,
	0, 394, 601, 602, 334, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 384, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 395, 392, 610, 298,
	289, 285, 264, 335, 404, 449, 542, 443, 0, 388,
	0, 0, 521, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 262, 343, 210, 434, 522, 302, 0,
	0, 0, 0, 0, 531, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 369, 378, 377, 357, 358, 360, 362, 368,
	375, 381, 354, 363, 0, 0, 636, 0, 0, 0,
	281, 339, 288, 280, 607, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 422, 273, 0, 476, 0, 319,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 348, 205, 233, 0, 0, 433, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 447, 631, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 390, 612,
	472, 628, 657, 658, 279, 427, 642, 546, 650, 675,
	234, 276, 441, 530, 634, 518, 416, 608, 609, 347,
	517, 311, 209, 387, 663, 232, 502, 389, 253, 241,
	614, 639, 315, 267, 305, 479, 670, 221, 541, 625,
	250, 506, 0, 0, 678, 258, 528, 637, 626, 223,
	621, 527, 412, 344, 345, 222, 0, 480, 284, 309,
	0, 0, 274, 436, 616, 617, 272, 679, 237, 649,
	228, 0, 648, 429, 611, 622, 413, 401, 227, 620,
	411, 400, 352, 373, 374, 296, 324, 469, 393, 470,
	323, 325, 424, 423, 425, 215, 635, 653, 0, 216,
	0, 523, 638, 680, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 330, 385, 440, 468,
	464, 473, 0, 605, 629, 643, 655, 661, 662, 664,
	665, 666, 667, 668, 671, 669, 428, 328, 519, 351,
	391, 0, 0, 446, 495, 251, 633, 520, 240, 599,
	417, 426, 259, 261, 260, 235, 511, 604, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 676, 532, 538, 533,
	534, 535, 536, 537, 0, 539, 0, 0, 0, 0,
	0, 418, 0, 618, 619, 699, 402, 509, 630, 353,
	367, 370, 359, 379, 0, 380, 355, 356, 361, 364,
	365, 366, 371, 372, 376, 382, 263, 218, 409, 419,
	603, 329, 224, 225, 226, 548, 549, 550, 551, 646,
	647, 651, 213, 485, 486, 487, 488, 308, 641, 326,
	491, 490, 349, 350, 397, 471, 564, 566, 577, 581,
	583, 585, 591, 594, 565, 567, 578, 582, 584, 586,
	592, 595, 554, 556, 558, 560, 573, 572, 569, 597,
	598, 575, 580, 559, 571, 576, 589, 596, 593, 553,
	557, 561, 570, 588, 587, 568, 579, 590, 574, 562,
	555, 563, 0, 204, 229, 386, 0, 477, 304, 677,
	645, 507, 640, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 336, 337, 340, 346, 398, 405, 406, 407, 408,
	4254, 431, 432, 435, 438, 439, 442, 444, 445, 448,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 540, 613, 615, 632, 652, 659, 503,
	403, 451, 475, 606, 0, 0, 317, 318, 466, 467,
	331, 332, 673, 674, 316, 627, 660, 624, 672, 654,
	460, 396, 0, 0, 399, 297, 322, 338, 0, 644,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 342, 410, 420, 450, 456, 312, 287,
	255, 482, 252, 508, 543, 544, 545, 547, 414, 282,
	455, 415, 0, 394, 601, 602, 334, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 384, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 395, 392,
	610, 298, 289, 285, 264, 335, 404, 449, 542, 443,
	0, 388, 0, 0, 521, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 262, 343, 210, 434, 522,
	302, 0, 0, 0, 0, 0, 531, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 369, 378, 377, 357, 358, 360,
	362, 368, 375, 381, 354, 363, 0, 0, 636, 0,
	0, 0, 281, 339, 288, 280, 607, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 422, 273, 0, 476,
	0, 319, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 348, 205, 233, 0, 0, 433, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 447, 631,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	390, 612, 472, 628, 657, 658, 279, 427, 642, 546,
	650, 675, 234, 276, 441, 530, 634, 518, 416, 608,
	609, 347, 517, 311, 209, 387, 663, 232, 502, 389,
	253, 241, 614, 639, 315, 267, 305, 479, 670, 221,
	541, 625, 250, 506, 0, 0, 678, 258, 528, 637,
	626, 223, 621, 527, 412, 344, 345, 222, 0, 480,
	284, 309, 0, 0, 274, 436, 616, 617, 272, 679,
	237, 649, 228, 0, 648, 429, 611, 622, 413, 401,
	227, 620, 411, 400, 352, 373, 374, 296, 324, 469,
	393, 470, 323, 325, 424, 423, 425, 215, 635, 653,
	0, 216, 0, 523, 638, 680, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 330, 385,
	440, 468, 464, 473, 0, 605, 629, 643, 655, 661,
	662, 664, 665, 666, 667, 668, 671, 669, 428, 328,
	519, 351, 391, 0, 0, 446, 495, 251, 633, 520,
	240, 599, 417, 426, 259, 261, 260, 235, 511, 604,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 676, 532,
	538, 533, 534, 535, 536, 537, 0, 539, 0, 0,
	0, 0, 0, 418, 0, 618, 619, 699, 402, 509,
	630, 353, 367, 370, 359, 379, 0, 380, 355, 356,
	361, 364, 365, 366, 371, 372, 376, 382, 263, 218,
	409, 419, 603, 329, 224, 225, 226, 548, 549, 550,
	551, 646, 647, 651, 213, 485, 486, 487, 488, 308,
	641, 326, 491, 490, 349, 350, 397, 471, 564, 566,
	577, 581, 583, 585, 591, 594, 565, 567, 578, 582,
	584, 586, 592, 595, 554, 556, 558, 560, 573, 572,
	569, 597, 598, 575, 580, 559, 571, 576, 589, 596,
	593, 553, 557, 561, 570, 588, 587, 568, 579, 590,
	574, 562, 555, 563, 0, 204, 229, 386, 0, 477,
	304, 677, 645, 507, 640, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 336, 337, 340, 346, 398, 405, 406,
	407, 408, 430, 431, 432, 435, 438, 439, 442, 444,
	445, 448, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 540, 613, 615, 632, 652,
	659, 503, 403, 451, 475, 606, 0, 0, 317, 318,
	466, 467, 331, 332, 673, 674, 316, 627, 660, 624,
	672, 654, 460, 396, 0, 0, 399, 297, 322, 338,
	0, 644, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 342, 410, 420, 450, 456,
	312, 287, 255, 482, 252, 508, 543, 544, 545, 547,
	414, 282, 455, 415, 0, 394, 601, 602, 334, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 384, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	395, 392, 610, 298, 289, 285, 264, 335, 404, 449,
	542, 443, 0, 388, 0, 0, 521, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 262, 343, 210,
	434, 522, 302, 0, 0, 0, 0, 0, 531, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 369, 378, 377, 357,
	358, 360, 362, 368, 375, 381, 354, 363, 0, 0,
	636, 0, 0, 0, 281, 339, 288, 280, 607, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 422, 273,
	0, 476, 0, 319, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 348, 205, 233, 0, 0,
	433, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	447, 631, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 390, 612, 472, 628, 657, 658, 279, 427,
	642, 546, 650, 675, 234, 276, 441, 530, 634, 518,
	416, 608, 609, 347, 517, 311, 209, 387, 663, 232,
	502, 389, 253, 241, 614, 639, 315, 267, 305, 479,
	670, 221, 541, 625, 250, 506, 0, 0, 678, 258,
	528, 637, 626, 223, 621, 527, 412, 344, 345, 222,
	0, 480, 284, 309, 0, 0, 274, 436, 616, 617,
	272, 679, 237, 649, 228, 0, 648, 429, 611, 622,
	413, 401, 227, 620, 411, 400, 352, 373, 374, 296,
	324, 469, 393, 470, 323, 325, 424, 423, 425, 215,
	635, 653, 0, 216, 0, 523, 638, 680, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	330, 385, 440, 468, 464, 473, 0, 605, 629, 643,
	655, 661, 662, 664, 665, 666, 667, 668, 671, 669,
	428, 328, 519, 351, 391, 0, 0, 446, 495, 251,
	633, 520, 240, 599, 417, 426, 259, 261, 260, 235,
	511, 604, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	676, 532, 538, 533, 534, 535, 536, 537, 0, 539,
	0, 0, 0, 0, 0, 418, 0, 618, 619, 699,
	402, 509, 630, 353, 367, 370, 359, 379, 0, 380,
	355, 356, 361, 364, 365, 366, 371, 372, 376, 382,
	263, 218, 409, 419, 603, 329, 224, 225, 226, 548,
	549, 550, 551, 646, 647, 651, 213, 485, 486, 487,
	488, 308, 641, 326, 491, 490, 349, 350, 397, 471,
	564, 566, 577, 581, 583, 585, 591, 594, 565, 567,
	578, 582, 584, 586, 592, 595, 554, 556, 558, 560,
	573, 572, 569, 597, 598, 575, 580, 559, 571, 576,
	589, 596, 593, 553, 557, 561, 570, 588, 587, 568,
	579, 590, 574, 562, 555, 563, 0, 204, 229, 386,
	0, 477, 304, 677, 645, 507, 640, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 336, 337, 340, 346, 398,
	405, 406, 407, 408, 430, 431, 432, 435, 438, 439,
	442, 444, 445, 448, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 540, 613, 615,
	632, 652, 659, 503, 403, 451, 475, 606, 0, 0,
	317, 318, 466, 467, 331, 332, 673, 674, 316, 627,
	660, 624, 672, 654, 460, 396, 0, 0, 399, 297,
	322, 338, 0, 644, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 342, 410, 420,
	450, 456, 312, 287, 255, 482, 252, 508, 543, 544,
	545, 547, 414, 282, 455, 415, 0, 394, 601, 602,
	334, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 384,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 395, 392, 610, 298, 289, 285, 264, 335,
	404, 449, 542, 443, 0, 388, 0, 0, 521, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 262,
	343, 210, 434, 522, 302, 0, 0, 0, 0, 0,
	531, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 369, 378,
	377, 357, 358, 360, 362, 368, 375, 381, 354, 363,
	0, 0, 636, 0, 0, 0, 281, 339, 288, 280,
	607, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	422, 273, 0, 476, 0, 319, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 348, 205, 233,
	0, 0, 433, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 447, 631, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 390, 612, 472, 628, 657, 658,
	279, 427, 642, 546, 650, 675, 234, 276, 441, 530,
	634, 518, 416, 608, 609, 347, 517, 311, 209, 387,
	663, 232, 502, 389, 253, 241, 614, 639, 315, 267,
	305, 479, 670, 221, 541, 625, 250, 506, 0, 0,
	678, 258, 528, 637, 626, 223, 621, 527, 412, 344,
	345, 222, 0, 480, 284, 309, 0, 0, 274, 436,
	616, 617, 272, 679, 237, 649, 228, 0, 648, 429,
	611, 622, 413, 401, 227, 620, 411, 400, 352, 373,
	374, 296, 324, 469, 393, 470, 323, 325, 424, 423,
	425, 215, 635, 653, 0, 216, 0, 523, 638, 680,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 330, 385, 440, 468, 464, 473, 0, 605,
	629, 643, 655, 661, 662, 664, 665, 666, 667, 668,
	671, 669, 428, 328, 519, 351, 391, 0, 0, 446,
	495, 251, 633, 520, 240, 599, 417, 426, 259, 261,
	260, 235, 511, 604, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 676, 532, 538, 533, 534, 535, 536, 537,
	0, 539, 0, 0, 0, 0, 0, 418, 0, 618,
	619, 699, 402, 509, 630, 353, 367, 370, 359, 379,
	0, 380, 355, 356, 361, 364, 365, 366, 371, 372,
	376, 382, 263, 218, 409, 419, 603, 329, 224, 225,
	226, 548, 549, 550, 551, 646, 647, 651, 213, 485,
	486, 487, 488, 308, 641, 326, 491, 490, 349, 350,
	397, 471, 564, 566, 577, 581, 583, 585, 591, 594,
	565, 567, 578, 582, 584, 586, 592, 595, 554, 556,
	558, 560, 573, 572, 569, 597, 598, 575, 580, 559,
	571, 576, 589, 596, 593, 553, 557, 561, 570, 588,
	587, 568, 579, 590, 574, 562, 555, 563, 0, 204,
	229, 386, 0, 477, 304, 677, 645, 507, 640, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 336, 337, 340,
	346, 398, 405, 406, 407, 408, 430, 431, 432, 435,
	438, 439, 442, 444, 445, 448, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 540,
	613, 615, 632, 652, 659, 503, 403, 451, 475, 606,
	0, 0, 317, 318, 466, 467, 331, 332, 673, 674,
	316, 627, 660, 624, 672, 654, 460, 396, 0, 0,
	399, 297, 322, 338, 0, 644, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 342,
	410, 420, 450, 456, 312, 287, 255, 482, 252, 508,
	543, 544, 545, 547, 414, 282, 455, 0, 0, 394,
	601, 602, 334,
}

var yyPact = [...]int{
	-1000, -1000, -556, -1000, 8386, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2687, 2763, -1000, -1000, -1000,
	-1000, 2889, -1000, 1103, -1000, 2320, 2247, 2675, 4414, -1000,
	60691, 808, -1000, 57603, -426, 947, 1820, 39847, -1000, 304,
	-1000, 296, 59147, 300, -1000, -1000, -1000, -1000, -426, 23635,
	2560, 59, 54, 60691, -1000, -1000, -1000, -1000, -348, 2849,
	2173, -1000, 578, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	56831, -1000, -1000, -1000, 1259, -1000, 2688, 2655, 2481, 979,
	1518, -1000, 2769, 2173, -1000, 23635, 2843, 2635, 22863, 22863,
	518, -1000, -1000, 323, -1000, -1000, 34443, 60691, 43707, 2725,
	59147, -1000, 2675, -1000, -1000, -1000, 212, -1000, 447, 2206,
	-1000, 2205, -1000, 1154, 1072, 461, 904, 903, 460, 459,
	458, 456, 455, 454, 453, 452, 472, -1000, 1001, 1001,
	-226, -235, 1448, 507, 510, 510, 1117, 536, 2642, 2637,
	-1000, -1000, 1001, 1001, 1001, 881, 1001, 1001, 1001, 1001,
	423, 421, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001,
	1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 996,
	2675, 411, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	60691, 863, 60691, -1000, 896, 806, -1000, -1000, -440, 1143,
	1143, 261, 1143, 1143, 1143, 1143, 293, 1063, 53, -1000,
	283, 405, 173, 407, 1157, 853, -1000, -1000, 387, 1157,
	1933, -1000, 986, 391, 184, -1000, 1143, 1143, -1000, 15891,
	225, 15891, 15891, 389, 287, -1000, 2662, -1000, -1000, -1000,
	-1000, -1000, 1459, -1000, -1000, -1000, -1000, -20, 529, -1000,
	-1000, -1000, -1000, 59147, 56059, 345, -1000, -1000, 772, 1968,
	1582, 23635, 1627, 977, -1000, -1000, 1484, 958, -1000, -1000,
	-1000, -1000, -1000, 876, -1000, 25951, 25951, 25951, 25951, -1000,
	-1000, 2210, 55287, 2210, 2210, 25951, 2210, 25951, 2210, 2210,
	2210, 2210, 23635, 2210, 2210, 2210, 2210, -1000, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, -1000, -1000, -1000,
	-1000, 2210, 895, 2210, 2210, 2210, 2210, 2210, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2210, 2210, 2210, 2210, 2210,
	2210, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, -1000, -1000, -1000, 1781, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2426, 1641, 1635, 1625, -1000,
	20547, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2210, -1000, -1000, -1000, 60691, -1000, 2210, 339, 59147,
	59147, 465, 1454, -1000, -1000, 2769, 2173, -1000, 2849, 2858,
	578, -1000, 4224, 2299, 2144, 1628, 2173, 993, 2174, 60691,
	-1000, 2247, 201, -1000, -1000, -1000, -349, -354, 2297, 1564,
	1930, 2198, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2380, 23635, -1000, -1000, 2886, -1000, 31355, 893, 2883, 54515,
	-1000, 518, 518, 2188, 676, 20, -1000, -1000, -1000, -1000,
	1013, 39075, -1000, -1000, -1000, -1000, -1000, 2118, 60691, -1000,
	-1000, 6309, 59147, -1000, 2319, -1000, 2093, -1000, 2279, 23635,
	578, 2072, -1000, -1000, -1000, -1000, 1001, 1001, 1001, -1000,
	471, 2828, 4414, 5982, -1000, -1000, -1000, 53743, 2316, 59147,
	-1000, 2314, -1000, 1146, 879, 899, 899, 59147, -1000, -1000,
	59919, 59147, 1141, 1140, 59147, 59147, 59147, 59147, -1000, 52971,
	-1000, 52199, 51427, 1452, 59147, 50655, 49883, 49111, 48339, 47567,
	-1000, 2464, -1000, 2266, -1000, -1000, -1000, 59919, 59147, 59147,
	59919, 59147, 59919, 60691, 59147, -1000, -1000, 574, -1000, -1000,
	1446, 1443, 1440, 1001, 1001, 1425, 1928, 1926, 1913, 1001,
	1001, 1421, 1894, 42163, 1887, 388, 1413, 1405, 1399, 1445,
	1885, 238, 1859, 1441, 1346, 1398, 59147, 2313, 60691, -1000,
	381, 1129, 1023, -1000, -1000, -1000, 1007, 2675, 2548, 2187,
	524, 802, 59147, 516, 516, 59147, -1000, -1000, 16669, 60691,
	336, -1000, 1851, 23635, -1000, 1164, 1157, 1157, -1000, -1000,
	-1000, -1000, -1000, -1000, 1143, 60691, 1164, -1000, -1000, -1000,
	1157, 1143, 60691, 1143, 1143, 1143, 1143, 1157, 1157, 1157,
	1143, 60691, 60691, 60691, 60691, 60691, 60691, 60691, 60691, 60691,
	15891, 986, 1143, -445, -1000, 1848, -1000, -1000, -1000, 2409,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 15891, 15891, -1000, -1000, 2768, 2766, -1000, -1000,
	-1000, 2186, -1000, 294, 22, 299, -1000, 46795, 607, 1005,
	-1000, 607, -1000, -1000, -1000, -1000, -1000, 2183, 46023, -1000,
	-446, -448, -449, -450, -1000, -1000, -1000, -451, -454, -1000,
	-1000, -1000, 23635, 23635, 23635, 23635, -267, -1000, 1975, 25951,
	2584, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23635, 1272,
	1379, 25951, 25951, 25951, 25951, 25951, 25951, 25951, 27495, 26723,
	25951, 25951, 25951, 25951, 25951, 25951, -1000, -1000, 36759, 9990,
	9990, 958, 958, 958, 958, -1000, -184, 2181, 59919, -1000,
	-1000, -1000, 890, 23635, 23635, 958, -1000, 1470, 1444, 20547,
	23635, 23635, 23635, 23635, 1049, 1582, 59919, 23635, -1000, 1628,
	-1000, -1000, -1000, -1000, 1349, -1000, -1000, 1197, 2612, 2612,
	2612, 2612, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 2612, 23635, 742, 742, 909, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 19003, 23635, 23635, 25951, 23635,
	23635, 23635, 1628, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 1628, 23635, 1339, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 18225, 23635, 23635, 23635, 23635, 23635, -1000, -1000,
	-1000, -1000, -1000, -1000, 23635, 23635, 23635, 23635, 23635, 23635,
	23635, 23635, 1628, 23635, 23635, 23635, 23635, 23635, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1748, 1671,
	1691, 2210, 23635, -1000, 2178, -1000, -127, 33671, 23635, 1797,
	2882, 2337, 59147, -1000, -1000, -1000, -1000, 2769, -1000, 2769,
	1748, 3969, 2480, 22863, -1000, -1000, 3969, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1865, -1000, 380, 800, 2271, 381, 59147, 796, 795, 791,
	515, -1000, -74, 1004, 60691, 2174, 2722, -1000, 2171, -1000,
	-1000, 2210, -1000, -307, -1000, -308, 2463, 1794, 932, -1000,
	1462, 23635, 23635, 2168, -1000, 1387, 60691, -1000, -267, -1000,
	45251, -1000, -1000, 15113, 60691, 450, 60691, -1000, 32899, 44479,
	295, -1000, 20, 2085, -1000, 28, 4, 19775, 950, -1000,
	-1000, -1000, 1448, 28267, 1958, 950, 210, -1000, -1000, -1000,
	2279, -1000, 2279, 2279, 2279, 2279, 932, 932, 932, 932,
	-1000, -1000, -1000, -1000, -1000, 2309, 2279, 2308, -1000, 2279,
	2279, 2279, 2279, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2303, 2303, 2303, 2298, 2298, 2280, 2280, 504, -1000, 23635,
	503, 43707, 2724, 1389, 2244, -194, -1000, 59147, 1620, 1610,
	1542, -1000, -546, 2155, -1000, -1000, 2827, -1000, -1000, 1193,
	1196, 1184, 1226, 59147, 354, 448, -1000, 494, -1000, 43707,
	59147, 1139, 899, 59147, -1000, 59147, -1000, -1000, -1000, -1000,
	-1000, 59147, -1000, -1000, 2150, -1000, 2199, 1240, 1177, 1235,
	1115, 2150, -1000, -1000, -190, 2150, -1000, 2150, -1000, 2150,
	-1000, 2150, -1000, 2150, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1078, 282, -345, 59147, 354, 523, -1000,
	521, 36759, -1000, -1000, -1000, 36759, 36759, -1000, -1000, -1000,
	-1000, 1792, 1790, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -532, 60691, -1000, 377, 426, 427, 408, 60691,
	375, 2631, 2629, 2624, 2613, 2606, 2605, 2604, 367, 420,
	60691, 60691, 516, 2400, 60691, 2699, 60691, -1000, -1000, -1000,
	-1000, -1000, 1788, 1786, -1000, 1582, 60691, -1000, -1000, 1143,
	1143, -1000, -1000, 60691, 1143, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1143, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60691,
	-1000, -1000, -1000, -1000, 1783, -1000, 60691, -20, 291, -1000,
	-1000, 59147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -66, -1000, 792, 15, 404, -1000, -1000, -1000, -1000,
	-1000, 2764, -1000, 1582, 1119, 1073, -1000, 2210, -1000, -1000,
	1291, -1000, -1000, -1000, -1000, -1000, 2210, 2210, 2210, -1000,
	-1000, -1000, -1000, -1000, 1272, 25951, 25951, 25951, 1650, 845,
	1467, 1597, 1673, 1492, 1492, 1336, 25951, 1336, 25951, 962,
	962, 962, 962, 962, -1000, -1000, -1000, -1000, -1000, -1000,
	1781, -1000, 1778, -1000, 2210, 59919, 2066, 18225, 2143, 2281,
	1628, 971, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4281, 1628, 1968, 1628, 2031, 4276, 1059, -1000,
	23635, 1628, 4237, -1000, -1000, 1628, 1628, 23635, -1000, -1000,
	23635, 23635, 23635, 23635, 2244, 2244, 2244, 2244, 2244, 2244,
	2244, 2244, 2244, 2244, 23635, 2244, 2137, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2126, 2881, 2038, 2244, 2244,
	2244, 2244, 3698, 2244, 2244, 23635, 2680, -1000, -1000, -1000,
	1729, 3670, 1423, 3663, 2244, 2244, -1000, 2244, 3658, 3653,
	1628, 3236, 3175, 2244, 2244, 2244, 2244, 2244, 3099, 3070,
	2244, 2244, 3057, 2244, 3648, 2244, 3044, 3030, 3025, 3018,
	3009, 2894, 2850, 2813, 2787, 2767, 2761, 2735, 2723, 2700,
	2692, 2673, 2660, 2645, 2244, 2244, 2244, 3643, 2244, 3627,
	2244, 3592, 2244, 2244, 3582, 2628, 2620, 1628, 2101, -1000,
	3565, 2244, 3548, 3540, 3530, 2596, 3516, 3503, 3498, 2244,
	2244, 2244, 2591, 3477, 3469, 3465, 3461, 3447, 3442, 3437,
	3427, 3407, 2244, 1691, 1691, 1691, 1691, 1691, 3400, -270,
	2244, 1628, -1000, -1000, -1000, -1000, 3392, 2582, 3374, 3366,
	3361, 3357, 1628, 2210, 886, -1000, -1000, 1691, 1628, 1628,
	1691, 1691, 3344, 3339, 3334, 3330, 3299, 3272, 2244, 2244,
	-1000, 2244, 3263, 3220, 2518, 2497, 1628, -1000, 1691, 60691,
	-1000, -419, -1000, -9, 985, 2210, -1000, 42163, 1628, -1000,
	7804, -1000, 1391, -1000, -1000, -1000, -1000, -1000, 38303, 2142,
	-1000, -1000, -1000, 515, 788, 340, 515, 381, 377, 2302,
	59147, 59147, 59147, 60691, 1058, -1000, 509, -1000, 2210, -471,
	22091, -1000, -1000, -1000, 932, 80, 37531, 945, 945, 235,
	-1000, 1582, 1582, 23635, -1000, -1000, -1000, -1000, -1000, -1000,
	885, 2862, 580, 2210, -1000, 2050, 3631, -1000, -1000, -1000,
	2720, 29039, -1000, -1000, 2210, 2210, 60691, 2096, 2057, -1000,
	873, -1000, 1471, 2085, 20, 25, -1000, -1000, -1000, -1000,
	1582, -1000, 1537, 451, 337, -1000, 496, -1000, -1000, -1000,
	-1000, 2571, 192, -1000, -1000, -1000, 590, 932, -1000, -1000,
	-1000, -1000, -1000, -1000, 1774, -1000, 1774, -1000, -1000, -1000,
	-1000, -1000, 1388, -1000, -1000, -1000, -1000, 1380, -1000, -1000,
	1373, -1000, -1000, 3244, 2381, 503, -1000, -1000, 1001, 1752,
	-1000, -1000, 2575, 1001, 1001, 59147, -1000, -1000, 1954, 2724,
	-1000, -10, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -539,
	160, 395, -1000, -1000, -1000, 4688, 59147, 2034, -1000, 349,
	-1000, 1828, -1000, 59147, -1000, 2005, 2296, 59147, 59147, -1000,
	-1000, -1000, 59147, 2210, -1000, -1000, -1000, -1000, 799, 2671,
	331, -1000, -1000, -297, -1000, -1000, 354, 349, 59919, 59147,
	950, -1000, -1000, -1000, -1000, -1000, -497, 1996, 787, 60691,
	60691, 60691, 60691, 60691, 60691, 839, -1000, -1000, 39, -1000,
	-1000, 324, -1000, -1000, 1730, -1000, -1000, -1000, -1000, 324,
	-1000, -1000, -1000, -1000, -1000, 414, 520, -1000, 60691, 60691,
	953, -1000, -1000, -1000, -1000, -1000, 1157, -1000, -1000, 1157,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2654, 60691, 7, -468, -1000, -465, 23635, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1561, 842, 1467, 25951,
	25951, 1444, 1444, 25951, -1000, -1000, -1000, 1074, 1074, 36759,
	-1000, 25951, 23635, -1000, -1000, 23635, 23635, 23635, 1038, -1000,
	23635, 1611, -1000, 23635, -1000, -270, 1691, 2244, 2244, 2244,
	2244, -270, -270, -270, -270, -270, -270, -270, -270, -270,
	-270, 2022, -1000, 23635, 23635, 23635, 1628, 596, -1000, -1000,
	-1000, -270, 23635, -1000, -1000, 2878, -1000, 23635, -1000, 36759,
	23635, 23635, 23635, -1000, -1000, -1000, 23635, 23635, -1000, -1000,
	23635, -1000, 23635, -1000, -1000, -1000, -1000, -1000, -1000, 23635,
	-1000, 23635, -1000, -1000, -1000, 23635, -1000, 23635, -1000, -1000,
	23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000,
	23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000,
	23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000,
	23635, -1000, 23635, -1000, 23635, -1000, -1000, -1000, 23635, -1000,
	23635, -1000, 23635, -1000, -1000, 23635, -1000, 23635, -1000, 23635,
	-1000, 23635, 23635, -1000, 23635, 23635, 23635, -1000, 23635, 23635,
	23635, 23635, -1000, -1000, -1000, -1000, 23635, 23635, 23635, 23635,
	23635, 23635, 23635, 23635, 23635, 23635, -1000, -1000, -1000, -1000,
	-1000, -1000, 23635, -1000, 43707, 62, -270, 1339, 62, 1339,
	25179, 901, 900, 24407, -1000, 23635, 17447, -1000, -1000, -1000,
	-1000, -1000, 23635, 23635, 23635, 23635, 23635, 23635, -1000, -1000,
	-1000, 23635, 23635, -1000, 23635, -1000, 23635, -1000, -1000, -1000,
	-1000, -1000, 985, -1000, 882, 870, 899, 59147, -1000, -1000,
	-1000, -1000, 2082, -1000, 2742, -1000, 2495, 2492, 2869, 2862,
	22863, -1000, 32899, 60691, 60691, 368, 60691, 377, 773, 2396,
	-1000, 2302, 2302, 2302, -1000, 2697, -1000, 2292, 1427, -1000,
	-1000, -1000, -1000, -1000, -407, -1000, 2535, 2527, 945, 945,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14335, 2769, 23635,
	2395, 59919, 2210, -1000, 30583, 59147, 59919, 32899, 32899, 32899,
	32899, 32899, -1000, 2418, 2415, -1000, 2439, 2430, 2429, 60691,
	-1000, 1748, 1976, -1000, 23635, 35215, 1951, 32899, -1000, -1000,
	32899, 60691, 13557, -1000, -1000, -3, -5, -1000, -1000, -1000,
	-1000, 1448, -1000, -1000, 1442, 2715, 2565, -1000, -1000, -1000,
	-1000, -1000, 1966, -1000, 1962, 2079, 1922, 1918, 282, -1000,
	2262, 2650, 1001, 1001, -1000, 1366, -1000, 1470, 1719, 1703,
	-1000, -1000, -1000, 498, -1000, -1000, -545, 1365, 2287, 2258,
	23635, 2285, 2826, 2013, 59147, -1000, -1000, 59919, -1000, 234,
	-1000, 503, 59147, -1000, -1000, -1000, 448, 60691, -1000, 9946,
	-1000, -1000, -1000, 349, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 60691, 2225, -1000, -1000, -1000, -1000, -1000, 327, 311,
	1676, 309, 1667, -1000, 309, -1000, 60691, 949, 2381, 60691,
	-1000, -1000, -1000, 1143, 1143, -1000, -1000, 2647, -1000, 1470,
	2244, 25951, 25951, -1000, 958, -1000, -1000, 444, -249, 2279,
	2279, -1000, 2279, 2280, -1000, 2279, 279, 2279, 278, 2279,
	-1000, -1000, 1628, 1628, -1000, 1691, 2487, 1986, 3184, -1000,
	1582, 23635, 3113, -1000, -1000, -270, -270, -270, -270, -270,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-81, 3081, 3076, 2244, -1000, 2278, 2275, -1000, 2244, 23635,
	2244, 1628, 2482, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
	2244, 2244, 2244, 2244, 2244, 2478, 2466, 2453, 2391, 2322,
	2310, 2305, 2293, 2289, 2269, 2257, 2216, 2207, 2194, 2184,
	2179, 2244, 2244, 2169, 2244, 2133, 2116, -1000, 1582, 1691,
	2993, 1691, 2244, 2244, 2861, 341, 2244, 1892, 1892, 1892,
	1892, 1892, 1691, 1691, 1691, 1691, 2244, 59147, -1000, -270,
	-1000, -1000, -326, -328, -1000, 1628, -270, 2056, 25951, 2244,
	25951, 25951, 25951, 2244, 1628, -1000, 2070, 1980, 2706, 1973,
	2244, 2412, 2244, 2244, 2244, 1943, -1000, 2752, 2210, 2752,
	2210, 2752, 1871, 1391, 60691, -1000, -1000, -1000, -1000, 2862,
	2854, -1000, 2044, 2210, -1000, -1000, -1000, -1000, -1000, 762,
	60691, 60691, 2388, 2387, 2384, -1000, 1815, -1000, -1000, 80,
	636, -1000, 2529, 2527, -1000, 2823, 2530, 2820, -1000, -1000,
	-1000, -1000, -1000, 1582, -1000, 2678, 1819, -1000, 1003, 2060,
	-1000, -1000, 22091, 1879, 2491, 872, 1871, 2125, 3631, 2335,
	2383, 3752, -1000, -1000, -1000, -1000, 2414, -1000, 2357, -1000,
	-1000, 2247, -1000, 2347, 450, 32899, 2103, 2103, -1000, 866,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1231, 9946, 2896,
	-1000, 1656, -1000, 1496, 253, 1362, -1000, -1000, 1001, 1001,
	-1000, 1131, 1120, -1000, 60691, 2273, -1000, 932, 1653, 932,
	1357, -1000, -1000, 1337, -1000, -1000, -1000, -1000, 2253, 2428,
	-1000, -1000, -1000, -1000, 379, 2261, 2819, -1000, 23635, 2260,
	1002, 2956, 59147, 59147, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 809, 1001, -487, 418, 416,
	1001, 1001, 1001, -551, -1000, -1000, 1827, 1814, -1000, -203,
	-1000, 23635, -1000, -1000, -1000, -1000, -1000, 1383, 1383, 1641,
	1635, 1625, -1000, 2247, -212, 59147, 59147, 59147, 59147, -1000,
	-1000, -1000, 1264, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 958, 1628, 378, -214, 1628,
	-1000, -1000, 932, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 23635, -1000, 23635, -1000, 23635, 1582, 23635,
	-1000, -1000, -1000, -1000, -1000, 2769, 1623, 23635, 23635, -1000,
	1326, 1325, -270, 2244, -1000, -1000, -1000, 23635, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635,
	-1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635,
	-1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635, -1000, 23635,
	-1000, 23635, -1000, -1000, 23635, -1000, -1000, -1000, 23635, -1000,
	23635, -1000, 23635, -1000, -1000, -1000, 23635, 270, 1074, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1628, 449, -1000, -1000, -1000, 2867, -1000, 1628, 23635, 1444,
	-1000, 1444, 1444, 1444, -1000, -1000, -1000, 23635, -1000, 23635,
	23635, -1000, 23635, -1000, 23635, -1000, -1000, -1000, -1000, 23635,
	2210, 2521, 42935, 2210, 42935, 2210, 35215, -1000, -1000, 2854,
	2847, 2816, 303, 60691, -1000, -1000, 60691, 60691, 60691, -1000,
	2505, 2513, 2513, 2529, -1000, 2814, 2811, -1000, 1616, 2807,
	1585, 1113, -1000, 59919, 23635, -1000, 2210, 42163, -1000, 587,
	59147, 2210, 59147, -1000, 2796, -1000, -1000, 23635, 2243, -1000,
	23635, -1000, -1000, -1000, -1000, 9990, 2862, 2103, -1000, -1000,
	968, -1000, 23635, -1000, 11930, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1547, 1541, -1000, -1000, 2232, 23635,
	-1000, -1000, -1000, 1723, 1716, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 448, -543, 2795, 59147, 1310,
	-1000, 1812, 2013, 431, 2210, 1538, 1001, 1001, 1001, 1307,
	1284, 42163, 1806, -1000, 59147, 463, -1000, 448, -1000, -240,
	-241, 2244, -1000, -1000, 2708, -1000, 17447, -1000, -1000, 2223,
	2290, -1000, -1000, -1000, -1000, 2459, -188, -220, -1000, -1000,
	2244, 2244, 2244, 1901, 1628, -1000, 2244, 2244, 1713, 1674,
	-1000, -1000, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
	2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
	2244, 2244, 1691, 1912, -1000, 270, 1628, 2379, -1000, -1000,
	9990, -1000, -1000, 2796, 2801, 62, -1000, -1000, 355, 62,
	1582, 1079, 1628, 1628, 1079, 1897, 2244, 1890, 1817, 2244,
	2244, 35987, -1000, 2799, 2798, 1768, -1000, -1000, 42935, 1768,
	42935, 985, 2847, -282, 23635, 23635, 1628, 2042, -1000, 59147,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2499, 1343, -1000,
	-1000, -1000, -1000, 1524, 1519, -1000, 1516, -1000, 2895, -1000,
	1582, -1000, 2210, 2210, -1000, 865, 2060, -1000, 2769, 1582,
	59147, 1582, 178, 2796, -1000, 2244, -1000, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, -1000, -1000,
	59147, 2717, -1000, -1000, 1770, 158, -1000, 1661, 2013, -1000,
	-1000, 937, -1000, 23635, -1000, 42163, 1497, 1483, -1000, -1000,
	-1000, -1000, -551, -1000, -1000, -1000, -1000, -1000, -1000, 578,
	2001, -1000, 1000, 59147, 60691, -1000, 2445, -1000, -1000, -1000,
	-1000, 23635, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23635,
	-1000, 1628, 2369, -1000, -351, -1000, -476, 23635, -270, -1000,
	-1000, -270, -1000, -1000, -1000, -1000, -1000, 23635, -1000, -1000,
	23635, -1000, 23635, -1000, -1000, 1768, -1000, -1000, -1000, 41391,
	-1000, 1768, -1000, 1768, -1000, -282, -1000, 1999, -1000, 59147,
	1582, 346, 7139, 303, 6309, -1000, 1298, -1000, -1000, -1000,
	-1000, -1000, 59919, 59147, 2060, 59147, -1000, -1000, 1751, 1628,
	2210, 2769, -1000, 1745, -1000, -1000, 2221, 2258, -1000, -1000,
	-1000, 21319, -1000, -1000, -1000, -1000, -1000, 236, -194, 17447,
	12779, 1712, -1000, -204, 2244, 1691, -1000, -457, -1000, -1000,
	-1000, -1000, 308, -1000, -1000, 1968, -1000, -1000, 1810, 1803,
	1727, -1000, -1000, -1000, -1000, -1000, -1000, -282, -1000, -1000,
	2703, -1000, -246, -1000, -561, -1000, -1000, 7139, 23635, 32127,
	40619, -1000, -1000, -1000, -1000, 1964, 1664, -1000, -1000, -1000,
	35215, 58375, -1000, -182, 338, 23635, 2220, 1628, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 851, -1000,
	-1000, -1000, 2225, -215, -1000, -1000, -1000, 351, -472, -315,
	-317, 25951, -1000, 23635, -1000, 23635, -1000, 23635, -1000, 59147,
	2210, -1000, -1000, 1022, 7139, -1000, -561, 1435, 4249, 820,
	812, -1000, -1000, -1000, 2659, -1000, -1000, 2455, -1000, -1000,
	-1000, 1660, -1000, 2927, -343, 2365, -1000, -92, -1000, -1000,
	-1000, 1219, 1480, -1000, 1280, -1000, -1000, -1000, -1000, 2685,
	59147, -1000, 16669, -212, -222, 1065, -1000, -1000, -1000, -1000,
	-1000, 1444, 1722, 1715, 2244, -1000, 59147, -1000, -1000, 7139,
	2665, 2741, 2719, -1000, 198, 198, 1477, -1000, -1000, 58375,
	-350, 950, 9990, -1000, 2356, 2348, 2877, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -553, 1631, -1000, -1000, -1000, 351,
	-329, -1000, 23635, -1000, 23635, -1000, 1628, 5917, -1000, 9946,
	29811, 982, -1000, 997, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2693, 178, -1000, 2892, -1000, 2890, 1041, 1041, -1000, 1271,
	-553, -1000, -1000, -1000, 2244, 2244, -1000, 1046, 1024, -1000,
	23635, 23635, -1000, 2416, -1000, -1000, -1000, -1000, 825, -1000,
	-1000, -1000, -1000, 5269, -346, -1000, -1000, -1000, -1000, -1000,
	493, 1320, -1000, -1000, -1000, -1000, -1000, 1021, 7139, -1000,
	1258, 2244, -1000, 29811, -1000, -1000, 9990, -1000, -1000, -1000,
	511, 7139, 7139, -1000, -1000, 258, -1000, 7139, 258, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 3615, 3613, 69, 9, 58, 57, 3608, 2924, 3605,
	3591, 2919, 3589, 196, 3585, 3581, 3579, 3578, 3577, 3576,
	204, 203, 202, 3575, 3574, 3572, 3571, 3568, 3567, 3566,
	3559, 3558, 42, 106, 77, 119, 223, 222, 3554, 3551,
	40, 185, 216, 3550, 3549, 3542, 3541, 3539, 132, 210,
	98, 100, 213, 3536, 3535, 88, 3532, 3531, 3528, 3526,
	3525, 12, 19, 36, 33, 3524, 3518, 3515, 25, 3511,
	208, 201, 200, 1139, 3508, 209, 123, 60, 3506, 3501,
	3498, 3493, 13, 10, 3491, 11, 3484, 6, 3482, 3480,
	3479, 3478, 3474, 3472, 3468, 3467, 3466, 3464, 3463, 3461,
	3459, 3458, 3456, 3450, 3449, 306, 3448, 3447, 45, 3445,
	92, 3443, 3439, 3438, 3437, 3436, 22, 3434, 3433, 28,
	150, 71, 3432, 3429, 49, 3421, 3420, 3412, 3408, 3406,
	32, 3405, 44, 3398, 73, 3393, 3386, 134, 3385, 3384,
	3372, 54, 3371, 3364, 3362, 27, 189, 3360, 3358, 158,
	3357, 3356, 3355, 190, 218, 3354, 2528, 3353, 109, 3352,
	3346, 3344, 187, 186, 220, 3335, 108, 3327, 3322, 3315,
	3305, 149, 3288, 3278, 4091, 3277, 3275, 17, 20, 140,
	3273, 3270, 166, 14, 76, 3265, 7, 8, 3264, 3263,
	18, 86, 3262, 115, 3257, 3249, 112, 78, 3247, 105,
	111, 3246, 3245, 26, 16, 3244, 1, 3, 2, 79,
	3242, 3241, 121, 3238, 3235, 3233, 103, 3230, 3228, 6244,
	3227, 102, 146, 113, 85, 3222, 183, 72, 3216, 3211,
	3208, 3207, 3206, 3204, 62, 3203, 3202, 3201, 155, 271,
	118, 3194, 3193, 148, 377, 143, 63, 145, 3192, 171,
	3191, 147, 94, 3189, 194, 3182, 3176, 152, 154, 3175,
	3170, 67, 180, 207, 3169, 110, 139, 125, 141, 104,
	159, 3163, 3161, 3160, 68, 84, 3159, 3156, 3155, 3151,
	195, 3147, 3145, 83, 3144, 66, 3143, 188, 3142, 331,
	75, 3139, 192, 176, 3138, 87, 179, 3133, 3132, 3129,
	80, 124, 81, 59, 3125, 177, 182, 136, 178, 3123,
	3108, 65, 3107, 3101, 3099, 214, 326, 3095, 3082, 298,
	193, 161, 144, 99, 3077, 215, 3073, 3072, 3071, 29,
	5281, 7801, 205, 52, 184, 3069, 3068, 8735, 30, 46,
	43, 3065, 219, 3054, 142, 3051, 3038, 3035, 225, 246,
	117, 181, 70, 3033, 3031, 3030, 3028, 37, 3025, 3024,
	3023, 3021, 3019, 3018, 56, 53, 48, 130, 235, 74,
	23, 107, 167, 175, 90, 3012, 3009, 3008, 131, 97,
	3007, 174, 172, 138, 128, 3000, 197, 162, 135, 2999,
	64, 47, 2996, 2994, 2992, 2983, 101, 2977, 2976, 2974,
	2972, 165, 163, 126, 95, 2971, 96, 120, 169, 164,
	55, 2970, 50, 2964, 2963, 39, 211, 61, 2961, 2959,
	2956, 41, 2955, 31, 116, 127, 2954, 6654, 2952, 34,
	268, 173, 2945, 2944, 15, 21, 24, 2941, 2938, 2937,
	2936, 153, 2935, 2934, 2932, 2931, 38, 51, 35, 4,
	122, 156, 89, 2930, 2925, 160, 2921, 2915, 0, 1827,
	137, 2913, 217,
}

//line sql.y:9270
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) compoundStatementsUnion() CompoundStatements {
	v, _ := st.union.(CompoundStatements)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) elseIfUnion() *ElseIfBlock {
	v, _ := st.union.(*ElseIfBlock)
	return v
}

func (st *yySymType) elseIfsUnion() []*ElseIfBlock {
	v, _ := st.union.([]*ElseIfBlock)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) handlerActionUnion() HandlerAction {
	v, _ := st.union.(HandlerAction)
	return v
}

func (st *yySymType) handlerConditionUnion() HandlerCondition {
	v, _ := st.union.(HandlerCondition)
	return v
}

func (st *yySymType) handlerConditionsUnion() []HandlerCondition {
	v, _ := st.union.([]HandlerCondition)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) signalConditionNameUnion() SignalConditionName {
	v, _ := st.union.(SignalConditionName)
	return v
}

func (st *yySymType) signalSetUnion() *SignalSet {
	v, _ := st.union.(*SignalSet)
	return v
}

func (st *yySymType) signalSetsUnion() []*SignalSet {
	v, _ := st.union.([]*SignalSet)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) statementsUnion() []Statement {
	v, _ := st.union.([]Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 457, 7, 7, 11, 9, 9, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 82, 82, 82, 82, 82, 82, 82,
	66, 66, 67, 67, 68, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 59, 59, 59,
	60, 60, 62, 62, 65, 65, 63, 64, 61, 61,
	61, 61, 61, 170, 170, 273, 273, 273, 83, 81,
	81, 84, 84, 85, 85, 86, 86, 89, 89, 88,
	88, 87, 295, 427, 293, 293, 31, 100, 40, 40,
	39, 39, 42, 42, 41, 34, 34, 34, 35, 35,
	35, 35, 35, 35, 35, 35, 36, 36, 36, 36,
	36, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	38, 38, 18, 19, 37, 37, 37, 20, 20, 135,
	135, 21, 22, 22, 22, 22, 460, 460, 214, 214,
	212, 212, 213, 213, 300, 300, 23, 304, 304, 306,
	306, 306, 306, 294, 294, 294, 24, 24, 305, 305,
	307, 307, 307, 310, 310, 310, 310, 351, 351, 351,
	25, 25, 25, 25, 25, 25, 155, 429, 429, 428,
	423, 423, 422, 422, 421, 426, 426, 425, 425, 424,
	45, 44, 46, 46, 46, 47, 56, 56, 56, 56,
	57, 58, 430, 430, 392, 74, 74, 73, 73, 73,
	73, 73, 73, 75, 75, 71, 71, 70, 70, 72,
	72, 394, 394, 380, 380, 393, 393, 393, 393, 393,
	393, 393, 379, 379, 167, 167, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 445, 445, 445, 445, 444, 444, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 178, 178,
	190, 190, 190, 190, 190, 190, 176, 176, 177, 175,
	175, 175, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	189, 189, 184, 184, 184, 186, 186, 185, 185, 185,
	187, 187, 446, 446, 446, 446, 357, 357, 357, 357,
	360, 360, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 359, 359, 359, 359, 359, 359, 359, 361, 361,
	361, 361, 361, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	363, 363, 363, 363, 363, 363, 363, 363, 378, 378,
	367, 367, 372, 372, 373, 373, 374, 374, 374, 375,
	375, 375, 376, 376, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 371, 371, 370, 370, 370, 381, 406,
	406, 405, 405, 403, 403, 403, 403, 403, 403, 403,
	403, 390, 390, 400, 400, 400, 400, 400, 389, 389,
	385, 385, 385, 386, 386, 387, 387, 384, 384, 388,
	388, 402, 402, 401, 401, 382, 382, 383, 383, 408,
	447, 447, 447, 447, 447, 448, 448, 409, 437, 439,
	439, 439, 438, 438, 435, 436, 434, 434, 434, 434,
	434, 110, 110, 110, 323, 323, 324, 324, 398, 398,
	397, 397, 397, 399, 399, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 318, 318, 318, 433,
	433, 433, 433, 433, 433, 432, 432, 432, 395, 395,
	395, 395, 431, 431, 76, 76, 252, 252, 450, 450,
	452, 452, 452, 53, 53, 53, 53, 53, 53, 52,
	52, 52, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 54, 54, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 137,
	137, 138, 138, 138, 138, 140, 140, 140, 411, 411,
	77, 77, 3, 3, 202, 204, 205, 205, 203, 203,
	203, 203, 203, 203, 79, 79, 78, 78, 207, 206,
	208, 208, 208, 1, 1, 2, 2, 4, 4, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 377, 377, 377, 410, 410, 412, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 143, 142, 142,
	141, 144, 144, 144, 144, 144, 144, 144, 144, 414,
	414, 414, 80, 80, 415, 364, 365, 366, 5, 6,
	391, 413, 151, 151, 27, 43, 43, 28, 28, 28,
	28, 29, 29, 90, 93, 93, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 328, 328, 317, 317, 326, 326, 316, 316,
	342, 342, 342, 319, 319, 319, 320, 320, 443, 443,
	443, 313, 313, 92, 92, 92, 343, 343, 343, 343,
	95, 95, 453, 453, 454, 454, 455, 455, 455, 96,
	97, 97, 346, 346, 347, 347, 98, 99, 111, 111,
	111, 111, 111, 112, 112, 112, 112, 112, 112, 136,
	136, 136, 13, 13, 13, 13, 107, 107, 107, 12,
	12, 14, 94, 94, 101, 440, 440, 441, 442, 442,
	442, 442, 102, 104, 30, 30, 30, 30, 30, 30,
	161, 161, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 156, 156, 156, 150, 150, 461,
	105, 106, 106, 154, 154, 154, 147, 147, 147, 153,
	153, 153, 15, 15, 16, 298, 298, 17, 17, 160,
	160, 159, 159, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 157, 157, 158, 158, 158, 158,
	335, 335, 335, 334, 334, 196, 196, 198, 197, 197,
	199, 199, 200, 200, 200, 200, 250, 250, 222, 222,
	290, 290, 291, 291, 289, 289, 297, 297, 292, 292,
	292, 292, 301, 301, 201, 201, 201, 201, 209, 209,
	210, 210, 211, 211, 345, 345, 340, 340, 340, 339,
	339, 215, 215, 215, 217, 216, 216, 216, 216, 218,
	218, 220, 220, 219, 219, 221, 226, 226, 225, 225,
	223, 223, 223, 223, 223, 223, 224, 224, 224, 224,
	227, 227, 174, 174, 174, 174, 174, 174, 174, 174,
	451, 451, 188, 188, 188, 188, 188, 188, 188, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	280, 280, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 255, 255, 254, 254, 113, 113, 113, 114,
	114, 115, 115, 115, 115, 115, 116, 116, 116, 116,
	116, 116, 116, 118, 118, 117, 117, 241, 241, 332,
	332, 119, 120, 120, 121, 121, 124, 124, 123, 122,
	122, 128, 128, 125, 125, 127, 127, 126, 129, 129,
	130, 131, 131, 314, 314, 228, 228, 237, 237, 237,
	237, 229, 229, 230, 230, 230, 230, 230, 230, 238,
	238, 238, 249, 239, 239, 235, 235, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 193, 193, 193, 193, 260, 260, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 181, 181, 194, 194, 194, 194, 195, 195,
	195, 195, 195, 195, 195, 353, 353, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 462, 462, 368, 368, 368,
	236, 236, 236, 236, 236, 152, 152, 152, 152, 152,
	350, 350, 350, 354, 354, 354, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 355, 355, 258, 258, 148, 148, 256, 256, 257,
	259, 259, 251, 251, 251, 251, 253, 253, 232, 232,
	232, 261, 261, 356, 356, 262, 262, 132, 133, 133,
	134, 134, 263, 263, 265, 264, 264, 266, 267, 267,
	267, 268, 268, 269, 269, 269, 55, 55, 55, 55,
	55, 50, 50, 50, 50, 51, 51, 51, 51, 163,
	163, 164, 164, 164, 166, 166, 165, 165, 108, 108,
	109, 109, 109, 420, 420, 419, 419, 417, 418, 418,
	418, 418, 171, 171, 172, 173, 173, 173, 168, 168,
	169, 169, 287, 287, 287, 287, 287, 287, 287, 270,
	270, 270, 270, 299, 299, 296, 296, 278, 278, 278,
	274, 274, 276, 276, 276, 277, 277, 277, 275, 284,
	284, 286, 286, 285, 285, 281, 281, 282, 282, 283,
	283, 283, 279, 279, 231, 231, 231, 231, 231, 288,
	288, 288, 288, 344, 344, 344, 302, 302, 242, 242,
	243, 243, 247, 247, 246, 246, 244, 245, 248, 248,
	192, 303, 303, 311, 308, 308, 309, 309, 336, 336,
	336, 312, 312, 325, 325, 321, 321, 322, 322, 315,
	315, 327, 327, 327, 103, 240, 240, 407, 407, 404,
	331, 331, 333, 333, 337, 337, 341, 341, 338, 338,
	10, 456, 456, 456, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 458, 459, 348, 349, 349,
	349,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 2, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 8, 4, 6, 5, 3,
	0, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 4, 2, 2, 1,
	1, 0, 1, 1, 2, 0, 2, 0, 1, 2,
	1, 4, 1, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	3, 3, 5, 7, 10, 9, 1, 7, 8, 1,
	1, 10, 11, 9, 8, 8, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 1, 3, 3,
	3, 3, 3, 1, 1, 2, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 6, 5, 2, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 0, 1, 1, 3, 3,
	10, 6, 6, 8, 7, 4, 7, 8, 8, 8,
	5, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 1, 0,
	2, 2, 3, 3, 2, 3, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 2, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 5, 5, 6, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 4, 5, 5, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 2, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 5,
	3, 5, 0, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 1, 1, 2, 1, 3, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 3, 2, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 4,
	4, 4, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 1, 2, 3, 7,
	0, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 5, 5, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 3, 6,
	1, 1, 3, 4, 3, 4, 4, 4, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 5, 5,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 5, 6,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	4, 2, 4, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 1, 0, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	8, 6, 8, 6, 5, 4, 10, 2, 2, 1,
	2, 2, 2, 2, 2, 5, 6, 6, 6, 6,
	6, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 8, 4, 8, 8, 6, 5, 4, 4, 4,
	5, 7, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 6, 4, 6, 4, 4, 4, 4, 4, 4,
	6, 4, 6, 4, 4, 4, 6, 4, 6, 4,
	4, 6, 4, 6, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 4, 4, 6, 4, 6, 4, 8,
	6, 4, 4, 6, 4, 6, 8, 4, 6, 8,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 4, 4, 6, 4, 6, 5, 9, 6,
	9, 8, 6, 8, 8, 8, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 6, 8, 10,
	12, 14, 6, 8, 8, 10, 12, 14, 6, 8,
	10, 12, 6, 8, 4, 4, 3, 4, 6, 6,
	4, 6, 4, 6, 8, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 5, 1, 1, 1, 2,
	2, 0, 4, 0, 2, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	1, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 1, 1, 3, 3, 0, 1,
	1, 1, 0, 1, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 3, 4, 2, 3, 4, 4, 9,
	3, 5, 2, 3, 1, 1, 1, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 3, 1, 6, 5, 4, 1,
	3, 3, 5, 0, 2, 5, 0, 5, 1, 3,
	1, 3, 1, 3, 1, 2, 3, 4, 1, 1,
	1, 1, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -457, -7, -11, -105, -461, 782, -9, -8, -32,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -27,
	-28, -29, -90, -93, -91, -92, -95, -96, -97, -98,
	-99, -12, -14, -94, -30, -31, -100, -101, -102, -103,
	-104, -15, -16, -17, -10, -35, -34, -33, 13, 14,
	-135, -39, 35, -44, -45, -56, -46, -57, -47, 242,
	-58, 244, 243, 292, 245, 409, 285, 83, 342, 343,
	345, 346, 347, 348, -136, 734, 290, 291, 247, 39,
	51, 36, 37, 40, 251, 298, 299, 250, 145, -36,
	-40, 12, -458, 15, 511, 241, 287, 286, 31, -37,
	621, 95, -38, 63, -106, -11, -287, -270, 26, 36,
	32, -269, -265, -154, -270, 24, 22, 11, -105, -105,
	-105, 16, 17, -105, -392, -394, 95, 174, 95, -290,
	95, -74, -73, -71, -70, -72, -75, 34, -53, -54,
	-416, -52, -49, 246, 243, 302, 135, 136, 292, 293,
	294, 245, 275, 291, 295, 290, 311, -48, 90, 36,
	621, 624, -399, 242, 248, 249, 244, 512, 138, 137,
	84, -396, 404, 655, 752, -75, 754, 110, 113, 753,
	50, 265, 755, 756, 757, 662, 758, 274, 759, 760,
	761, 762, 768, 703, 769, 770, 771, 139, 11, -105,
	-341, -337, 100, -330, 618, 277, 653, 465, 654, 327,
	90, 47, 42, 557, 628, 400, 404, 655, 542, 752,
	410, 342, 360, 354, 547, 548, 549, 383, 375, 619,
	656, 629, 330, 278, 315, 460, 746, 373, 149, 754,
	453, 334, 657, 293, 411, 412, 463, 658, 413, 110,
	345, 450, 767, 333, 659, 765, 113, 753, 350, 457,
	459, 458, 88, 541, 57, 749, 464, 338, 50, 288,
	470, 471, 371, 250, 367, 755, 316, 660, 631, 309,
	138, 135, 774, 39, 363, 56, 33, 764, 137, 55,
	756, 165, 661, 757, 662, 415, 390, 740, 54, 416,
	294, 663, 93, 299, 623, 339, 748, 417, 562, 364,
	418, 326, 763, 247, 664, 337, 729, 721, 722, 254,
	419, 420, 741, 395, 391, 396, 564, 665, 442, 546,
	421, 725, 726, 255, 781, 58, 666, 667, 742, 136,
	668, 87, 758, 89, 358, 359, 669, 324, 276, 567,
	568, 444, 387, 524, 127, 531, 532, 120, 121, 527,
	122, 533, 123, 128, 534, 535, 536, 525, 124, 117,
	526, 537, 538, 388, 389, 125, 539, 119, 118, 528,
	530, 126, 540, 274, 38, 422, 620, 328, 64, 332,
	303, 445, 52, 393, 778, 51, 736, 569, 670, 739,
	386, 382, 521, 715, 59, 671, 672, 673, 674, 543,
	759, 385, 357, 381, 773, 4, 321, 455, 516, 544,
	760, 68, 249, 398, 397, 399, 456, 310, 441, 378,
	675, 676, 677, 281, 91, 678, 368, 25, 679, 680,
	423, 317, 681, 62, 682, 683, 448, 291, 684, 60,
	761, 716, 45, 685, 296, 775, 762, 686, 687, 688,
	735, 689, 298, 690, 425, 691, 723, 724, 424, 392,
	394, 570, 305, 426, 409, 717, 252, 622, 692, 340,
	362, 295, 766, 693, 282, 558, 559, 560, 561, 747,
	566, 565, 297, 302, 290, 449, 283, 694, 695, 696,
	697, 698, 331, 714, 699, 700, 346, 626, 768, 522,
	49, 461, 701, 702, 703, 704, 705, 325, 320, 443,
	452, 67, 92, 406, 706, 707, 745, 356, 351, 43,
	318, 99, 502, 504, 505, 506, 507, 508, 503, 510,
	708, 343, 61, 769, 770, 771, 312, 772, 550, 551,
	552, 553, 13, 604, 587, 615, 588, 605, 589, 598,
	590, 606, 614, 616, 571, 579, 572, 580, 610, 593,
	607, 599, 592, 591, 613, 596, 600, 573, 581, 611,
	597, 574, 582, 575, 583, 576, 584, 609, 608, 601,
	612, 577, 585, 603, 578, 586, 602, 594, 595, 454,
	473, 779, 780, 545, 462, 428, 718, 139, 322, 323,
	53, 379, 304, 709, 335, 710, 369, 370, 518, 519,
	384, 355, 380, 146, 732, 344, 353, 730, 306, 429,
	523, 292, 711, 451, 319, 401, 131, 352, 407, 336,
	627, 563, 311, 430, 744, 625, 554, 555, 377, 374,
	313, 556, 712, 402, 734, 431, 266, 307, 308, 713,
	731, 432, 433, 329, 434, 435, 436, 437, 438, 440,
	341, 439, 733, 727, 728, 314, 501, 624, 349, 372,
	408, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 520,
	264, -105, 264, -219, -337, -156, 736, 738, 193, -308,
	412, -326, 414, 427, 422, 432, 420, -317, 423, 425,
	305, -443, 442, 264, 429, 241, 415, 424, 433, 434,
	329, 440, 435, 341, 439, 314, 436, 437, 438, -427,
	193, 757, 772, 344, 352, 149, 376, 419, 417, 443,
	736, 100, -343, 100, 101, 102, -330, 344, -346, 349,
	-331, -427, -330, 347, -105, -105, -348, -348, -156, -239,
	-174, 157, -188, -295, -191, 101, -179, -182, -233, -234,
	-235, -236, -189, -253, -293, 182, 183, 190, 158, -249,
	-192, 29, 617, 513, 512, 193, 34, 236, 77, 78,
	515, 516, 160, 63, 15, 478, 479, -190, 468, 469,
	480, 474, 475, 541, 543, 544, 545, 542, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 546, 557,
	518, 519, 129, 520, 117, 119, 118, 127, 128, 521,
	522, 523, 373, 569, 570, 564, 567, 568, 566, 565,
	388, 389, 524, 587, 588, 592, 591, 589, 590, 593,
	596, 597, 598, 599, 600, 601, 603, 602, 594, 595,
	572, 571, 573, 574, 575, 576, 577, 578, 580, 579,
	581, 582, 583, 584, 585, 586, 604, 605, 606, 607,
	608, 610, 609, 614, 613, 611, 612, 616, 615, 525,
	526, 120, 121, 122, 123, 124, 125, 126, 527, 530,
	528, 529, 531, 532, 533, 538, 539, 534, 535, 536,
	537, 540, 399, 397, 398, 394, 393, 392, -115, -128,
	644, 643, -129, 465, 470, 471, 473, -180, -181, -194,
	-195, -331, -337, 269, 467, 263, 188, 511, -183, -177,
	-251, 116, 102, -34, -248, 466, 476, 477, 481, 472,
	482, 630, 632, 647, 648, 650, 635, 640, 639, 642,
	558, 559, 560, 561, 562, 563, 721, 722, 723, 724,
	725, 726, 727, 728, -427, -330, 100, -186, -184, -228,
	103, 108, 111, 112, 114, -449, 288, 369, 370, 130,
	-458, -244, -245, -185, 105, 106, 107, 132, 133, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 750, 98, 104, 50, 428, 428, -219, -105, -105,
	-105, -105, -456, 753, 622, -263, -154, -265, -36, -34,
	-458, 12, -105, -34, -35, -33, -40, -105, -42, 649,
	-41, -337, -105, 109, -270, -287, 16, 67, 177, 48,
	56, -299, -296, -295, 100, 101, -268, -269, -37, -34,
	-174, 23, 41, 27, -158, 184, -174, -337, -158, -315,
	268, -105, -105, -304, -351, 344, -306, 443, 736, 442,
	-294, -309, 100, -293, -308, 441, 101, -393, 174, -379,
	-383, -331, 279, -409, 275, -219, -402, -401, -331, -458,
	28, -289, -331, -70, -71, -72, -308, 192, 756, -137,
	297, 301, 96, 96, -383, -382, -381, -431, 301, 279,
	-408, -400, 271, 280, -389, 272, 273, -384, 265, 151,
	-431, -384, 270, 280, 275, 279, 301, 301, 139, 301,
	139, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	296, -390, 166, -390, 625, 625, -396, -431, 275, 265,
	-431, -431, 271, -327, -384, 267, 28, 267, 38, 38,
	-390, -390, -390, -308, 192, -390, -390, -390, -390, 309,
	309, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, 264, -430,
	-163, 439, 329, 467, 263, -164, 90, -73, 311, -43,
	-219, -325, 265, 266, -430, 298, 322, -219, 237, 264,
	739, -319, 174, 19, -319, -316, 428, 426, 413, 418,
	-319, -319, -319, -319, 312, 411, -385, 265, 38, 276,
	428, 312, 411, 312, 313, 312, 313, 421, 431, 312,
	-342, 18, 177, 467, 416, 420, 305, 264, 306, 266,
	430, 313, -342, 98, -320, 174, 312, 428, 422, 308,
	-319, -319, -349, -458, -333, -331, -329, 246, 41, 156,
	28, 30, 159, 193, 142, 23, 160, 40, 248, 376,
	275, 192, 271, 262, 256, 512, 241, 81, 630, 468,
	475, 466, 474, 478, 514, 515, 467, 414, 253, 34,
	17, 632, 31, 286, 27, 44, 186, 243, 163, 164,
	633, 289, 29, 257, 287, 129, 133, 635, 26, 84,
	280, 18, 273, 46, 20, 636, 637, 21, 74, 269,
	268, 177, 265, 79, 720, 15, 236, 32, 173, 75,
	638, 151, 145, 639, 640, 641, 642, 143, 77, 174,
	24, 776, 476, 477, 36, 737, 617, 300, 188, 82,
	65, 738, 157, 472, 643, 644, 130, 645, 134, 85,
	743, 153, 22, 719, 80, 48, 646, 301, 647, 270,
	777, 648, 446, 649, 175, 244, 511, 78, 176, 750,
	650, 751, 263, 427, 12, 517, 35, 285, 284, 272,
	73, 72, 259, 260, 261, 141, 76, 482, 651, 264,
	162, 267, 144, 132, 258, 11, 150, 37, 16, 83,
	86, 479, 480, 481, 63, 140, 621, 161, 19, 652,
	447, 155, -427, 739, -349, -349, 312, 353, 35, 101,
	-453, -454, -455, 621, 446, 267, -331, -219, -111, 729,
	245, -112, 735, 41, 252, 146, 38, -161, 428, -149,
	193, 757, 740, 741, 742, 739, 425, 747, 745, 743,
	312, 744, 96, 153, 155, 156, 4, -174, 173, -229,
	-230, 172, 166, 167, 168, 169, 170, 171, 178, 177,
	157, 159, 174, -280, 154, 179, 180, 181, 182, 183,
	184, 185, 187, 186, 188, 189, 175, 176, 192, 239,
	240, -182, -182, -182, -182, -249, -255, -254, -458, -251,
	-427, -330, -337, -458, -458, -182, -314, -458, -179, -458,
	-458, -458, -458, -458, -258, -174, -458, -458, -462, -458,
	-462, -462, -462, -368, -458, -368, -368, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, 237, -458, -458, -458, -458, -458, -368, -368,
	-368, -368, -368, -368, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, 98, 112,
	108, 111, 103, 114, 98, 98, 98, 98, -34, -35,
	-239, 63, -458, -348, -440, -441, -222, -219, -458, 329,
	-331, -331, 298, 105, -268, -37, -34, -263, -269, -265,
	-34, -105, -147, -160, 69, 70, -159, -162, 27, 44,
	74, 76, 99, 72, 73, 71, 41, -459, 97, -459,
	-287, -459, -171, -325, -155, -164, 265, 273, 272, 150,
	-430, -172, 153, 316, 96, -42, -290, 115, -242, -247,
	-245, 750, 677, 707, 677, 707, 67, 49, 98, 98,
	96, 96, 25, -264, -266, -174, 18, -335, 4, -334,
	28, -331, 98, 237, 18, -220, 32, -219, -315, -315,
	96, 100, 344, -305, -307, 444, 446, 166, -336, -331,
	98, 34, 97, 96, -219, -357, -360, -362, -361, -363,
	-358, -359, 373, 374, 193, 377, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 390, 402, 35, 288, 369,
	370, 371, 372, 391, 392, 393, 394, 396, 397, 398,
	399, 354, 375, 619, 355, 356, 357, 358, 359, 360,
	362, 363, 366, 364, 365, 367, 368, -332, -331, 95,
	97, 96, -367, 95, -174, -32, 97, 96, -390, -390,
	-390, 296, 23, -52, -49, -416, 22, -48, -49, 246,
	135, 136, 243, 95, -379, 95, -388, -332, -331, 95,
	151, 270, 150, -387, -384, -387, -388, -331, -251, -331,
	151, 151, -331, -331, -301, -331, -301, -301, 41, -301,
	41, -301, 41, 105, -331, -301, 41, -301, 41, -301,
	41, -301, 41, -301, 41, 34, 87, 88, 89, 34,
	91, 92, 93, -251, -331, -331, -251, -379, -251, -219,
	-331, -308, 105, 105, 105, -390, -390, 105, 98, 98,
	98, -390, -390, 105, 98, -339, -337, 98, 98, -432,
	281, 326, 328, 105, 105, 105, 105, 34, 98, -433,
	34, 764, 763, 765, 766, 767, 98, 105, 34, 105,
	34, 105, -331, 95, -219, -171, 241, 243, 246, 85,
	98, 334, 332, 333, 330, 335, 336, 337, 166, 50,
	96, 267, 264, -331, -321, 269, -321, -331, -338, -337,
	-329, -219, 267, 410, 98, -174, -386, 18, 177, -342,
	-342, -319, -219, -386, -342, -319, -219, -319, -319, -319,
	-319, -342, -342, -342, -319, -337, -337, -219, -219, -219,
	-219, -219, -219, -219, -349, -320, -319, 739, 98, -313,
	18, 85, -349, -349, -328, 26, 26, 96, 350, 447,
	448, -347, 347, -107, -331, 98, -13, -32, -21, -20,
	-22, 166, -13, 96, 621, -212, -219, 739, 739, 739,
	739, 739, 739, -174, -174, -174, -174, 645, -237, -451,
	157, 132, 133, 130, 131, -191, 42, 43, 41, -174,
	-238, -244, -249, 115, 177, 159, 174, -280, -179, -182,
	-179, -179, -179, -179, -179, -179, 236, -179, 236, -179,
	-179, -179, -179, -179, -179, -350, -331, 98, 193, -187,
	-186, 114, -449, -187, 618, 96, -254, 237, -174, -174,
	-427, -145, 484, 485, 486, 487, 489, 490, 491, 494,
	495, 499, 500, 483, 501, 488, 493, 496, 497, 498,
	492, 372, -174, -240, -239, -240, -174, -174, -256, -257,
	161, -251, -174, -459, -459, 105, 184, -153, 27, 44,
	-153, -153, -153, -153, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -153, -174, -146, 483, 501, 488,
	493, 496, 497, 498, 492, 372, 502, 503, 504, 505,
	506, 507, 508, 509, 510, -146, -145, -174, -174, -174,
	-174, -174, -174, -174, -174, -113, -174, 142, 143, 144,
	-239, -174, -179, -174, -174, -174, -459, -174, -174, -174,
	-240, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -426, -425, -424,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -239, -239, -239, -239, -239, -174, -459,
	-174, -193, -177, 105, -295, 114, -174, -174, -174, -174,
	-174, -174, -240, -333, -338, -329, -330, -239, -240, -240,
	-239, -239, -174, -174, -174, -174, -174, -174, -174, -174,
	-459, -174, -174, -174, -174, -174, -287, -459, -239, 96,
	-442, 446, 447, 737, -340, 301, -339, 28, -240, 98,
	18, -298, 86, -331, -268, -268, 69, 70, 65, -157,
	-158, -162, -459, 305, -166, 318, 264, -163, -171, -331,
	265, 265, 265, -322, 269, 511, 166, -41, 28, 96,
	-458, 670, 670, 68, 98, -369, -308, 400, 401, 193,
	-296, -174, -174, 96, -267, 30, 31, -219, -334, 184,
	-338, -219, -300, 301, -219, -197, -199, -200, -201, -222,
	-250, -458, -202, -34, 641, 638, 18, -212, -213, -221,
	-337, -306, -351, -305, 96, 445, 447, 448, 85, 134,
	-174, -370, 192, -398, -397, -396, -379, -381, -382, -383,
	97, -370, -375, 407, 406, -367, -367, -367, -367, -367,
	-369, -369, -369, -369, 95, -367, 95, -367, -367, -367,
	-367, -372, 95, -372, -372, -373, -372, 95, -373, -374,
	95, -374, -409, -174, -406, -405, -403, -404, 274, 110,
	713, 669, 621, 662, 703, 86, -401, -267, 105, -459,
	-108, 621, -331, 100, 98, 100, 98, 100, 98, -138,
	-77, -1, 776, 777, 778, 96, 23, -380, -379, -76,
	326, -412, -413, 301, -408, -402, -388, 151, -387, -388,
	-388, -331, 96, 32, 139, 139, 139, 139, 621, 243,
	35, -323, 661, 157, 713, 669, -379, -76, 267, 267,
	-350, -350, -350, 98, 98, -318, 772, -212, -166, 307,
	307, 264, 320, 264, 320, -219, 331, 334, 332, 333,
	330, 335, 336, 337, 338, 41, 41, 41, 41, 41,
	41, 41, 319, 321, 323, 309, -219, -219, -321, 85,
	-214, -219, 29, -337, 98, 98, -219, -319, -319, -219,
	-319, -319, -219, 98, -337, -455, 351, -331, 387, 730,
	732, -149, 446, 96, 621, 26, -150, 26, -458, -451,
	132, 133, -249, -249, -249, -238, -179, -182, -179, 156,
	289, -179, -179, -458, -251, -459, -333, 28, 96, 86,
	-459, 182, 96, -459, -459, 96, 18, 96, -259, -257,
	163, -174, -459, 96, -459, -459, -239, -174, -174, -174,
	-174, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -239, -459, 96, 96, 18, -354, 28, -459, -459,
	-459, -459, 96, -459, -459, -258, -459, 18, -459, 86,
	96, 177, 96, -459, -459, -459, 96, 96, -459, -459,
	96, -459, 96, -459, -459, -459, -459, -459, -459, 96,
	-459, 96, -459, -459, -459, 96, -459, 96, -459, -459,
	96, -459, 96, -459, 96, -459, 96, -459, 96, -459,
	96, -459, 96, -459, 96, -459, 96, -459, 96, -459,
	96, -459, 96, -459, 96, -459, 96, -459, 96, -459,
	96, -459, 96, -459, 96, -459, -459, -459, 96, -459,
	96, -459, 96, -459, -459, 96, -459, 96, -459, 96,
	-459, 96, 96, -459, 96, 96, 96, -459, 96, 96,
	96, 96, -459, -459, -459, -459, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, -459, -459, -459, -459,
	-459, -459, 96, -120, 646, -459, -459, 96, -459, 96,
	96, 96, 96, 96, -459, -458, 237, -459, -459, -459,
	-459, -459, 96, 96, 96, 96, 96, 96, -459, -459,
	-459, 96, 96, -459, 96, -459, 96, -459, -441, 736,
	447, -226, -225, -223, 83, 268, 84, -458, -339, -459,
	-187, -295, -297, -295, -232, -331, 105, 114, -270, -196,
	96, -198, 18, -322, 266, 325, -322, -171, -166, -407,
	-404, -331, -331, -331, -337, 157, -173, 478, -168, 98,
	100, -249, -247, -459, -369, -275, -281, -316, -331, 98,
	193, -371, 193, -371, 400, 401, -266, 237, -227, 19,
	-231, 35, 63, -32, -458, -458, 35, 96, -215, -217,
	-216, -218, 75, 79, 81, 76, 77, 78, 82, -345,
	28, -34, -197, -34, -458, -219, -212, -460, 18, 86,
	-460, 96, 237, -307, -310, 449, 446, 452, -427, 98,
	-137, 96, -396, -383, -271, -167, 46, -376, 408, -369,
	629, -369, -378, 98, -378, 105, 105, 105, 97, -55,
	-50, -51, 36, 90, -403, -390, 98, 45, -390, -390,
	-331, 97, -267, -109, 315, 736, -2, 775, 781, 151,
	95, 413, 22, -289, 96, 97, -252, 327, 97, -139,
	-331, 97, 95, -388, -388, -331, -458, 264, 34, 34,
	713, 669, 661, -76, -252, -251, -331, -370, 774, 773,
	97, 266, -219, -219, -219, -219, -219, -219, 246, 243,
	436, -450, 339, 98, -450, 310, 267, -212, -219, 96,
	-110, 283, 278, -342, -342, 36, -219, 446, 748, 746,
	-174, 156, 289, -191, -182, -145, -145, -179, -352, 193,
	373, 288, 371, 367, 387, 378, 406, 369, 407, 364,
	363, 362, -352, -350, -179, -239, -174, -174, -174, 165,
	-174, 162, -174, -121, -120, -459, -459, -459, -459, -459,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-263, -174, -174, -174, -459, 193, 373, -121, -174, 18,
	-174, -350, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -424, -174, -239,
	-174, -239, -174, -174, -174, -174, -174, -425, -425, -425,
	-425, -425, -239, -239, -239, -239, -174, -458, -331, -124,
	-123, -122, 696, 268, -120, -193, -124, -193, 236, -174,
	236, 236, 236, -174, -240, -333, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -223, -384, 307, -384,
	307, -384, -301, 96, -312, 26, 18, 63, 63, -196,
	-227, -158, -197, -219, -219, -165, 316, 324, -219, -166,
	266, 85, -407, -407, -407, 29, 95, -169, 101, -278,
	729, -284, 52, -282, -283, 53, -279, 54, 62, -371,
	-371, 184, -268, -174, -302, 85, -303, -311, -251, -243,
	-246, -244, -458, -288, -459, -331, -301, -303, -199, -200,
	-200, -199, -200, 75, 75, 75, 80, 75, 80, 75,
	-216, -337, -459, -174, -340, 86, -197, -197, -221, -337,
	184, 446, 450, 451, -396, -448, 130, 157, 34, 85,
	404, 110, -446, 192, 658, 708, 713, 669, 662, 703,
	-447, 270, 150, 151, 282, 28, 47, 97, 96, 97,
	96, 97, 97, 96, -324, -323, -51, -50, -390, -390,
	105, -427, 98, 98, 275, -140, 779, 105, 95, -3,
	90, -174, 95, 23, -379, -251, -414, -364, -415, -365,
	-366, -5, -6, -391, -143, 63, 110, -80, 50, 265,
	759, 760, 139, -458, 772, -406, -289, -410, -412, -219,
	-178, -458, -190, -176, -175, -177, -183, 182, 183, 288,
	369, 370, -252, -219, -429, 86, 307, 404, 307, 404,
	98, -452, 340, 98, -452, -219, -110, -55, -219, -319,
	-319, 36, -427, -459, -191, -182, -152, 177, 621, -355,
	628, -367, -367, -367, -374, -367, 359, -367, 359, -367,
	-459, -459, -459, 96, -459, 26, -459, 96, -174, 96,
	-121, -121, -121, -121, -121, -148, 517, 96, 96, -459,
	95, 95, -459, -174, -459, -459, -459, 96, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, 96, -459, 96, -459, 96, -459, 96, -459, 96,
	-459, 96, -459, 96, -459, 96, -459, 96, -459, 96,
	-459, 96, -459, 96, -459, 96, -459, 96, -459, 96,
	-459, 96, -459, -459, 96, -459, -459, -459, 96, -459,
	96, -459, 96, -459, -459, -459, 96, -353, 714, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-119, -332, -120, 678, 678, -459, -120, -260, 96, -179,
	-459, -179, -179, -179, -459, -459, -459, 96, -459, 96,
	96, -459, 96, -459, 96, -459, -459, -459, -459, 96,
	-224, 26, -458, -224, -458, -224, -459, -295, -219, -227,
	-261, 20, -458, 266, -219, -219, 85, 85, 85, 97,
	-275, 57, 379, -286, -285, 61, 53, -283, 23, 55,
	23, 33, -302, 96, 166, -344, 96, 28, -459, -459,
	96, 63, 237, -459, -227, -210, -209, 85, 86, -211,
	85, -209, 75, 75, -290, 96, -300, -197, -227, -227,
	237, 130, -458, -178, 16, 98, 98, -427, -445, 763,
	764, 34, 765, 105, -390, -390, 151, 151, -219, 95,
	-369, 98, -369, 105, 105, 34, 91, 92, 93, 34,
	87, 88, 89, 317, -411, 95, 23, -174, 95, 166,
	97, -289, -289, 303, 177, -390, 757, 309, 309, -390,
	-390, -390, -142, -141, 779, 97, -459, 96, -377, 621,
	624, -174, -184, -184, -290, -423, 621, -428, -331, -331,
	-331, -331, 105, 107, -459, 619, 82, 622, -459, -369,
	-174, -174, -174, -174, -268, 98, -174, -174, 105, 105,
	-121, -459, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -239, -174, -459, -207, -206, -208, 740, 130,
	34, -352, -459, -241, 301, -127, -126, -125, 18, -459,
	-174, -145, -145, -145, -145, -174, -174, -174, -174, -174,
	-174, -458, 75, 22, 20, -292, -331, 270, -458, -292,
	-458, -340, -261, -262, 21, 23, -420, -419, -417, -418,
	177, 720, 719, -219, -219, -219, -219, -276, 59, -274,
	58, -274, -285, 23, 23, 98, 23, 98, 151, -311,
	-174, -246, -339, 63, -32, -331, -243, -331, -263, -174,
	95, -174, -187, -227, -227, -174, -234, 541, 543, 544,
	545, 542, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 546, 557, 518, 519, 520, 117, 119, 118,
	127, 128, 521, 522, 523, 373, 569, 570, 564, 567,
	568, 566, 565, 388, 389, 524, 587, 588, 592, 591,
	589, 590, 593, 596, 597, 598, 599, 600, 601, 603,
	602, 594, 595, 572, 571, 573, 574, 575, 576, 577,
	578, 580, 579, 581, 582, 583, 584, 585, 586, 604,
	605, 606, 607, 608, 610, 609, 614, 613, 611, 612,
	616, 615, 525, 526, 120, 121, 122, 123, 124, 125,
	126, 527, 530, 528, 531, 532, 533, 538, 539, 534,
	535, 536, 537, 540, 399, 397, 398, 394, 393, 392,
	465, 470, 471, 473, 558, 559, 560, 561, 562, 563,
	721, 722, 723, 724, 725, 726, 727, 728, 98, 98,
	95, -174, 97, 97, -410, -77, 97, -291, -289, 105,
	97, 304, -244, -458, 98, -390, -390, -390, 105, 105,
	-339, -459, 96, -331, -447, -412, 625, 625, -459, 28,
	-422, -421, -333, 95, 86, 68, 620, 623, -459, -459,
	-459, 96, -459, -459, -459, 97, 97, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, 96,
	-459, -206, -208, -459, 85, -187, -263, 23, -124, 326,
	328, -124, -459, -459, -459, -459, -459, 96, -459, -459,
	96, -459, 96, -459, -459, -292, -459, 23, 23, 96,
	-459, -292, -459, -292, -226, -262, -134, -133, -132, 652,
	-174, -239, -459, 96, -331, -277, 60, 85, 134, 98,
	98, 98, 16, -458, -243, 237, -344, -268, -289, -204,
	413, -263, -459, -289, 97, 97, 781, 151, 97, -244,
	-151, -458, 300, -339, 98, 98, -141, -144, -32, 96,
	166, -289, -219, 68, -174, -239, -459, 85, 633, 740,
	-118, -117, -114, 751, 777, -239, -120, -120, -174, -174,
	-174, -459, -331, 270, -459, -459, -134, 96, -131, -130,
	-331, -356, 621, -81, -82, -83, -8, 342, 269, 253,
	284, -417, -357, 85, 134, -303, -289, -344, -331, 97,
	-459, -458, -268, 97, -272, 95, -3, 300, -364, -415,
	-365, -366, -5, -6, -391, -108, -421, -395, -337, -333,
	98, 105, 97, 621, -459, -459, -116, 159, 749, 711,
	-183, 236, -459, 96, -459, 96, -459, 96, -132, 96,
	28, 626, 782, -84, -85, -83, -82, -174, -289, -59,
	-331, 256, 257, 258, -65, -63, -64, 260, -331, -459,
	-340, -205, -203, -331, 675, -438, -437, 617, -448, -444,
	130, 157, 110, -446, 708, 713, 669, 140, 141, -174,
	95, -459, 237, -429, 622, -116, 750, 689, 664, 689,
	664, -179, -174, -174, -174, -130, -458, 165, -83, 162,
	-357, 255, 262, -66, -67, 35, -170, 66, -459, 96,
	26, -357, -79, 686, -435, -436, 85, -439, 419, 685,
	706, 130, 98, 105, 97, -289, -338, -423, 623, 156,
	-145, -459, 96, -459, 96, -459, -119, -85, -273, 34,
	26, 26, -68, -69, 453, 454, 455, 456, 457, 458,
	459, 460, 461, 462, 463, 464, -68, 98, -203, 682,
	-370, -187, -436, 85, -435, 85, 17, 16, -4, 780,
	97, -116, 689, 664, -174, -174, -459, -89, -88, -87,
	164, -458, -178, -60, -61, -62, -64, 261, 157, 259,
	105, -63, -62, 166, -78, 29, -204, -434, 283, 278,
	281, 35, -434, 105, -4, -459, -459, -86, 163, -87,
	-174, -174, -82, 96, 254, -183, 686, 277, 34, 130,
	165, -85, 162, -459, -61, -187, 269, -85, -207, -206,
	-206,
}

var yyDef = [...]int{
	959, -2, 1, 2, -2, 961, 959, 4, 5, 7,
	8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 131, 133, 134, 959, 959,
	959, 0, 959, 0, 192, 0, 1020, -2, -2, 959,
	1736, 0, 959, 0, 954, 0, -2, 874, 880, 0,
	889, -2, 0, 0, 959, 959, 2407, 2407, 954, 0,
	0, 0, 0, 0, 959, 959, 959, 959, 1741, 1572,
	111, 959, 0, 149, 150, 959, 909, 910, 911, 126,
	0, 2405, 146, 959, 960, 3, 132, 136, 0, 0,
	0, 119, 1581, 0, 139, 0, 0, 963, 0, 0,
	1719, 959, 959, 0, 190, 191, 0, 0, 0, 0,
	0, 195, -2, 227, 228, 229, 0, 234, 679, 596,
	648, 594, 633, -2, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 471, 471,
	0, 0, -2, 582, 582, 582, 1721, 0, 0, 0,
	630, 533, 471, 471, 471, 0, 471, 471, 471, 471,
	0, 0, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 1599,
	233, 1737, 1734, 1735, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	0, 1713, 0, 792, 1063, 0, 955, 956, 0, 863,
	863, 0, 863, 863, 863, 863, 0, 0, 0, 806,
	0, 0, 0, 0, 860, 0, 822, 823, 0, 860,
	0, 829, 866, 0, 0, 836, 863, 863, 839, 2408,
	0, 2408, 2408, 0, 0, 1704, 0, 857, 855, 869,
	870, 103, 873, 876, 877, 878, 879, 882, 0, 893,
	896, 1730, 1731, 0, 898, 903, 922, 923, 0, 106,
	1223, 0, 1087, 0, 1098, -2, 1109, 1126, 1127, 1128,
	1129, 1130, 1132, 1133, 1134, 0, 0, 0, 0, 1139,
	1140, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 2123, 1543, 0, 0, 1505, 1505, 1239, 1505, 1505,
	1507, 1507, 1507, 1968, 2114, 2124, 2308, 1923, 1929, 1930,
	1931, 2253, 2254, 2255, 2256, 2351, 2352, 2356, 2034, 1918,
	2323, 2324, 0, 2404, 2074, 2082, 2083, 2059, 2068, 2107,
	2214, 2335, 1942, 2102, 2176, 2031, 2054, 2055, 2195, 2196,
	2078, 2079, 2058, 2259, 2261, 2277, 2278, 2263, 2265, 2274,
	2280, 2285, 2264, 2276, 2281, 2294, 2298, 2301, 2302, 2303,
	2271, 2269, 2282, 2286, 2288, 2290, 2296, 2299, 2272, 2270,
	2283, 2287, 2289, 2291, 2297, 2300, 2258, 2262, 2266, 2275,
	2293, 2273, 2292, 2267, 2279, 2284, 2295, 2268, 2260, 2072,
	2075, 2062, 2063, 2065, 2067, 2073, 2080, 2086, 2064, 2085,
	2084, 0, 2060, 2061, 2066, 2077, 2081, 2069, 2070, 2071,
	2076, 2087, 2130, 2129, 2128, 2175, 2098, 2174, 0, 0,
	0, 0, 0, 1912, 1975, 1976, 2305, 1427, 1428, 1429,
	1430, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	1556, 1557, 105, 1222, 1700, 1507, 1507, 1507, 1507, 1507,
	1507, 1161, 1162, 1163, 1164, 1165, 1191, 1192, 1198, 1199,
	2190, 2191, 2192, 2193, 2013, 2346, 2022, 2023, 2171, 2172,
	2036, 2037, 2378, 2379, -2, -2, -2, 302, 303, 304,
	305, 306, 307, 308, 309, 0, 1974, 2321, 2322, 298,
	0, 1698, 1699, 365, 362, 363, 364, 1205, 1206, 318,
	319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 332, 333, 334, 335, 336, 337, 338,
	339, 340, 341, 342, 343, 344, 345, 346, 347, 348,
	349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 367, 368, 2407, 0, 932, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1581, 0, 1573, 1572, 124,
	0, 959, -2, 0, 0, 0, 0, -2, 108, 0,
	113, 1020, 0, 962, 138, 137, 1632, 1635, 0, 0,
	0, 1642, 1644, 1645, 1646, 102, 120, 1582, 128, 130,
	1583, 0, 964, 965, 0, 996, 1000, 0, 0, 0,
	1720, 1719, 1719, 166, 0, 0, 167, 187, 188, 189,
	0, 0, 173, 174, 1706, 1707, 104, 0, 0, 245,
	246, 0, 1179, 498, 0, 241, 0, 491, 430, 0,
	0, 0, 1024, 230, 231, 232, 471, 471, 471, 645,
	0, 0, 233, 233, 603, 604, 605, 0, 0, -2,
	496, 0, 583, 0, 0, 485, 485, 489, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 622, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 472, 0, 643, 644, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 1723, 0, 620, 621,
	0, 0, 0, 471, 471, 0, 0, 0, 0, 471,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	1622, 0, 0, 222, 223, 1600, 0, -2, 0, 784,
	0, 0, 0, 1715, 1715, 0, 1714, 791, 0, 0,
	0, 796, 0, 0, 797, 0, 860, 860, 858, 859,
	799, 800, 801, 802, 863, 0, 0, 480, 481, 482,
	860, 863, 0, 863, 863, 863, 863, 860, 860, 860,
	863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2408, 866, 863, 0, 830, 0, 831, 832, 833, 834,
	837, 838, 840, 2409, 2410, 1732, 1733, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 2408, 2408, 844, 848, 852, 850, 1705, 875,
	881, 883, 884, 0, 0, 894, 897, 916, 110, 2021,
	902, 110, 904, 905, 906, 907, 908, 934, 935, 940,
	0, 0, 0, 0, 946, 947, 948, 0, 0, 951,
	952, 953, 0, 0, 0, 0, 0, 1085, 0, 0,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 1111, 0, 0,
	0, 1135, 1136, 1137, 1138, 1141, 0, 1152, 0, 1154,
	1552, -2, 0, 0, 0, 1146, 1147, 0, 0, 0,
	1725, 1725, 0, 0, 0, 1544, 0, 0, 1237, 0,
	1238, 1240, 1241, 1242, 0, 1243, 1244, 969, 969, 969,
	969, 969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 1725, 1725, 0, 0, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 310,
	311, 312, 313, 314, 369, 315, 316, 317, 1222, 0,
	0, 959, 0, 107, 924, 925, 0, 1046, 1725, 0,
	0, 975, 0, 1740, 118, 127, 129, 1581, 122, 1581,
	0, 979, 0, 0, -2, -2, 980, 981, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 115, 2406, 116,
	0, 135, 1604, 0, 1599, 1622, 0, 0, 0, 0,
	1717, 1623, 0, 0, 0, 109, 0, 140, 141, 1688,
	1692, 0, 1633, 0, 1636, 0, 0, 0, 444, 1640,
	0, 0, 0, 1574, 1575, 1578, 0, 997, 2120, 1001,
	0, 1003, 1004, 0, 0, 164, 0, 1062, 0, 0,
	0, 175, 0, 177, 178, 0, 0, 0, 455, 1708,
	1709, 1710, -2, 478, 0, 455, 439, 377, 378, 379,
	430, 381, 430, 430, 430, 430, 444, 444, 444, 444,
	412, 413, 414, 415, 416, 0, 430, 0, 398, 430,
	430, 430, 430, 420, 421, 422, 423, 424, 425, 426,
	427, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	432, 432, 432, 432, 432, 436, 436, 0, 1180, 0,
	459, 0, 1578, 0, 0, 1608, 1021, 0, 0, 0,
	0, 646, 690, 597, 634, 647, 0, 600, 601, -2,
	0, 0, 582, 0, 584, 0, 479, 0, -2, 0,
	489, 0, 485, 489, 486, 489, 477, 490, 624, 625,
	626, 0, 628, 629, 720, 1032, 0, 0, 0, 0,
	0, 726, 727, 728, 0, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 635, 636, 637, 638, 639,
	640, 641, 642, 0, 0, 0, 0, 584, 0, 631,
	0, 0, 535, 536, 537, 0, 0, 540, 541, 542,
	543, 0, 0, 546, 547, 548, 1049, 1050, 549, 550,
	575, 576, 577, 551, 552, 553, 554, 555, 556, 557,
	569, 570, 571, 572, 573, 574, 558, 559, 560, 561,
	562, 563, 566, 0, 215, 1604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 978, 1064, 1738,
	1739, 793, 0, 0, 864, 865, 0, 483, 484, 863,
	863, 803, 845, 0, 863, 807, 846, 808, 810, 809,
	811, 824, 825, 863, 814, 861, 862, 815, 816, 817,
	818, 819, 820, 821, 841, 826, 827, 828, 867, 0,
	871, 872, 842, 843, 0, 853, 0, 0, 0, 887,
	888, 0, 895, 919, 917, 918, 920, 912, 913, 914,
	915, 0, 921, 0, 0, 937, 160, 942, 943, 944,
	945, 957, 950, 1224, 1082, 1083, 1084, 0, 1086, 1092,
	0, 1207, 1209, 1090, 1091, 1094, 0, 0, 0, 1088,
	1099, 1219, 1220, 1221, 0, 0, 0, 0, 0, 1103,
	1107, 1112, 1113, 1114, 1115, 1116, 0, 1117, 0, 1120,
	1121, 1122, 1123, 1124, 1125, 1131, 1520, 1521, 1522, 1150,
	370, 371, 0, 1151, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1223, 0, 1726, 0, 0, 0, 1550, 1547,
	0, 0, 0, 1506, 1508, 0, 0, 0, 970, 971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 0, 0, 1523, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 1156, 1157, 1158,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1431, 1432, 1433, 1434, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1456, 0, 0, 0, 0, 0, 0, 1696, 0, 0,
	927, 928, 930, 0, 1066, 0, 1047, 0, 0, 933,
	0, 974, 0, 977, 121, 123, 983, 984, 0, 1005,
	994, 982, 117, 1717, 0, 0, 1717, 1622, 1604, 1727,
	0, 0, 0, 0, 0, 196, 0, 112, 0, 0,
	0, 1634, 1637, 1638, 444, 1665, 0, 453, 453, 450,
	1643, 1584, 1585, 0, 1577, 1579, 1580, 142, 1002, 998,
	0, 1080, 0, 0, 1061, 0, 1008, 1010, 1011, 1012,
	1044, 0, 1015, 1016, 0, 0, 0, 0, 0, 162,
	1063, 168, 0, 176, 0, 0, 181, 182, 169, 170,
	171, 172, 0, 679, -2, 530, 247, 249, 250, 251,
	242, -2, 442, 440, 441, 380, 444, 444, 406, 407,
	408, 409, 410, 411, 0, 418, 0, 399, 400, 401,
	402, 391, 0, 392, 393, 394, 434, 0, 395, 396,
	0, 397, 497, 0, 1586, 460, 461, 463, 471, 0,
	466, 467, 0, 471, 471, 0, 492, 493, 0, 1578,
	194, 1610, 1025, 235, 236, 237, 238, 239, 240, 715,
	0, 0, 691, 713, 714, 233, 0, 0, 243, 586,
	585, 0, 747, 0, 495, 0, 0, 489, 489, 474,
	475, 627, 0, 0, 722, 723, 724, 725, 0, 0,
	0, 613, 524, 0, 614, 615, 584, 586, 0, 0,
	455, 538, 539, 544, 545, 564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 663, 665, 668,
	670, 588, 674, 676, 0, 664, 667, 669, 671, 588,
	675, 677, 1601, 1602, 1603, 0, 0, 785, 0, 0,
	521, 158, 1716, 790, 794, 795, 860, 813, 847, 860,
	805, 812, 835, 849, 851, 885, 886, 891, 899, 900,
	901, 941, 0, 0, 0, 0, 949, 0, 0, 1093,
	1208, 1210, 1095, 1096, 1097, 1100, 0, 1104, 1108, 0,
	0, 0, 0, 0, 1155, 1153, 1554, 0, 0, 0,
	1204, 0, 0, 1227, 1228, 0, 0, 0, 0, 1548,
	0, 0, 1235, 0, 1509, 1185, 0, 0, 0, 0,
	0, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
	1185, 1572, 1262, 0, 0, 0, 0, 0, 1267, 1268,
	1269, 1185, 0, 1272, 1273, 0, 1275, 0, 1276, 0,
	0, 0, 0, 1283, 1284, 1286, 0, 0, 1289, 1290,
	0, 1292, 0, 1294, 1295, 1296, 1297, 1298, 1299, 0,
	1301, 0, 1303, 1304, 1305, 0, 1307, 0, 1309, 1310,
	0, 1312, 0, 1314, 0, 1317, 0, 1320, 0, 1323,
	0, 1326, 0, 1329, 0, 1332, 0, 1335, 0, 1338,
	0, 1341, 0, 1344, 0, 1347, 0, 1350, 0, 1353,
	0, 1356, 0, 1359, 0, 1362, 1363, 1364, 0, 1366,
	0, 1368, 0, 1371, 1372, 0, 1374, 0, 1377, 0,
	1380, 0, 0, 1381, 0, 0, 0, 1385, 0, 0,
	0, 0, 1394, 1395, 1396, 1397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 1409, 1410, 1411,
	1412, 1413, 0, 1415, 0, 1186, 0, 0, 1186, 0,
	0, 0, 0, 0, 1225, 1725, 0, 1510, 1511, 1512,
	1513, 1514, 0, 0, 0, 0, 0, 0, 1454, 1455,
	1457, 0, 0, 1460, 0, 1462, 0, 1697, 926, 929,
	931, 1018, 1067, 1068, 0, 0, 0, 0, 1048, 1724,
	972, 973, 976, 1026, 0, 1558, 0, 0, 1005, 1080,
	0, 1006, 0, 0, 0, 0, 0, 1604, 0, 0,
	1728, 1727, 1727, 1727, 220, 0, 1624, 1625, 1630, 1628,
	1629, 114, 1689, 1693, 1647, 1641, 1659, 1672, 453, 453,
	447, 448, 454, 449, 451, 452, 1576, 0, 1581, 0,
	1686, 0, 959, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 1054, 0, 0, 0, 0,
	1045, 1016, 0, 1017, 0, -2, 0, 0, 156, 157,
	0, 0, 0, 179, 180, 0, 0, 186, 456, 457,
	224, 233, 532, 248, 505, 0, 0, 376, 443, 403,
	404, 405, 0, 428, 0, 0, 0, 0, 526, 193,
	1590, 1589, 471, 471, 462, 0, 465, 0, 0, 0,
	1729, 431, 494, 0, 1611, 1612, 685, 0, 0, 692,
	0, 0, 0, 595, 0, 606, 607, 0, 719, -2,
	781, 459, 0, 473, 476, 1033, 0, 0, 608, 0,
	611, 612, 525, 586, 617, 618, 632, 619, 567, 568,
	565, 0, 197, 653, 655, 659, 654, 658, 0, 0,
	0, 590, 0, 678, 590, 651, 0, 521, 1586, 0,
	789, 522, 523, 863, 863, 936, 161, 0, 939, 0,
	0, 0, 0, 1101, 1105, 1118, 1119, 1515, 1541, 430,
	430, 1528, 430, 436, 1531, 430, 1533, 430, 1536, 430,
	1539, 1540, 0, 0, 1148, 0, 0, 0, 0, 1234,
	1551, 0, 0, 1245, 1184, 1185, 1185, 1185, 1185, 1185,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1545, 0, 0, 0, 1266, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 209, 0,
	0, 0, 0, 0, 0, 1465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1179, 1183, 0,
	1187, 1188, 0, 0, 1417, 0, 0, 1435, 0, 0,
	0, 0, 0, 0, 0, 1555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1069, 1076, 0, 1076,
	0, 1076, 0, 0, 0, 1711, 1712, 1559, 1560, 1080,
	1561, 995, 1007, 0, 212, 1605, 1606, 1607, 211, 0,
	0, 0, 0, 0, 0, 1718, 0, 1627, 1631, 1665,
	0, 1658, 0, -2, 1667, 0, 0, 0, 1673, 445,
	446, 999, 143, 1081, 147, 0, 1686, 1701, 0, 1683,
	1690, 1694, 0, 0, 0, 1679, 0, 1080, 1009, 1040,
	1042, 0, 1037, 1052, 1053, 1055, 0, 1057, 0, 1059,
	1060, 1020, 1014, 0, 164, 0, 1080, 1080, 163, 0,
	1065, 183, 184, 185, 531, 252, 257, 0, 0, 0,
	262, 0, 264, 0, 0, 0, 269, 270, 471, 471,
	506, 0, 373, 375, 0, 0, 255, 444, 0, 444,
	0, 435, 437, 0, 507, 527, 1587, 1588, 0, 0,
	464, 468, 469, 470, 0, 688, 0, 716, 0, 0,
	0, 0, 0, 0, 244, 587, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 0, 471, 0, 0, 0,
	471, 471, 471, 0, 773, 458, 0, 0, 744, 741,
	609, 0, 288, 289, 296, 297, 299, 0, 0, 0,
	0, 0, 616, 1020, 200, 0, 0, 0, 0, 661,
	666, 672, 0, 589, 673, 786, 787, 788, 159, 798,
	804, 938, 958, 1089, 1102, 1106, 0, 0, 0, 0,
	1542, 1526, 444, 1529, 1530, 1532, 1534, 1535, 1537, 1538,
	1144, 1145, 1149, 0, 1231, 0, 1233, 0, 1549, 0,
	1246, 1247, 1248, 1249, 1250, 1581, 0, 0, 0, 1265,
	0, 0, 1185, 0, 1278, 1277, 1279, 0, 1281, 1282,
	1287, 1288, 1291, 1293, 1300, 1302, 1306, 1308, 1311, 1313,
	1315, 0, 1318, 0, 1321, 0, 1324, 0, 1327, 0,
	1330, 0, 1333, 0, 1336, 0, 1339, 0, 1342, 0,
	1345, 0, 1348, 0, 1351, 0, 1354, 0, 1357, 0,
	1360, 0, 1365, 1367, 0, 1370, 1373, 1375, 0, 1378,
	0, 1382, 0, 1384, 1386, 1387, 0, 0, 0, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1414,
	0, 1177, 1416, 1189, 1190, 1195, 1419, 0, 0, 0,
	1422, 0, 0, 0, 1426, 1226, 1437, 0, 1442, 0,
	0, 1448, 0, 1452, 0, 1458, 1459, 1461, 1463, 0,
	0, 0, 0, 0, 0, 0, 1046, 1027, 125, 1561,
	1565, 0, -2, 0, 214, 216, 0, 0, 0, 1626,
	1652, 1650, 1650, 1660, 1661, 0, 0, 1668, 0, 0,
	0, 0, 148, 0, 0, 1674, 0, 0, 1695, 0,
	0, 0, 0, 165, 1572, 1034, 1041, 0, 0, 1035,
	0, 1036, 1056, 1058, 1013, 0, 1080, 1080, 154, 155,
	0, 258, 0, 260, 0, 263, 265, 266, 267, 273,
	274, 275, 276, 268, 0, 0, 372, 374, 0, 0,
	417, 429, 419, 0, 0, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1609, 680, 0, 690, 0, 1022, 0,
	683, 0, 598, 0, 0, 0, 471, 471, 471, 0,
	0, 0, 0, 758, 0, 0, 721, 0, 729, 0,
	0, 0, 300, 301, 0, 652, 0, 198, 199, 0,
	0, 657, 591, 592, 1142, 0, 0, 0, 1143, 1527,
	0, 0, 0, 0, 0, 1546, 0, 0, 0, 0,
	1271, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 710, 711,
	0, 1466, 1182, 1572, 0, 1186, 1196, 1197, 0, 1186,
	1436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1077, 0, 0, 0, 1028, 1029, 0, 0,
	0, 1066, 1565, 1570, 0, 0, 0, 1614, 1615, 0,
	1619, 1620, 1621, 213, 217, 218, 219, 1655, 0, 1648,
	1651, 1649, 1662, 0, 0, 1669, 0, 1671, 0, 1702,
	1703, 1691, 1684, 959, 1678, 1681, 1683, 1680, 1581, 1038,
	0, 1043, 0, 1572, 153, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 272,
	0, 0, 433, 438, 0, 0, 681, 0, 1023, 693,
	684, 0, 771, 0, 775, 0, 0, 0, 778, 779,
	780, 757, 0, 761, 499, 745, 742, 743, 610, 0,
	201, 202, 0, 0, 0, 1516, 0, 1519, 1229, 1232,
	1230, 0, 1261, 1263, 1264, 1524, 1525, 1280, 1316, 1319,
	1322, 1325, 1328, 1331, 1334, 1337, 1340, 1343, 1346, 1349,
	1352, 1355, 1358, 1361, 1369, 1376, 1379, 1383, 1388, 0,
	1391, 0, 0, 1392, 0, 712, 1173, 0, 0, 1193,
	1194, 0, 1421, 1423, 1424, 1425, 1438, 0, 1443, 1444,
	0, 1449, 0, 1453, 1464, 0, 1071, 1078, 1079, 0,
	1074, 0, 1075, 0, 1019, 1570, 145, 1571, 1568, 0,
	1566, 1563, 110, 1618, 0, 1639, 0, 1653, 1654, 1663,
	1664, 1670, 0, 0, 1683, 0, 1677, 151, 0, 0,
	0, 1581, 259, 0, 279, 689, 0, 692, 682, 769,
	770, 0, 782, 774, 776, 777, 759, -2, 1608, 0,
	0, 0, 660, 1517, 0, 0, 1393, 0, 708, 709,
	1181, 1174, 0, 1159, 1160, 1178, 1418, 1420, 0, 0,
	0, 1070, 1030, 1031, 1072, 1073, 144, 0, 1567, 1201,
	0, 1562, 0, 210, 89, 90, 43, -2, 0, 0,
	0, 1616, 1617, 1656, 1657, 1687, 0, 1676, 1682, 1039,
	1046, 0, 152, 512, 505, 0, 0, 0, 762, 763,
	764, 765, 766, 767, 768, 649, 203, 204, 0, 579,
	580, 581, 197, 0, 1236, 1389, 1175, 0, 0, 0,
	0, 0, 1439, 0, 1445, 0, 1450, 0, 1569, 0,
	0, 1564, 88, 0, -2, 93, 0, 0, 0, 0,
	1024, 67, 68, 69, 50, 74, 75, 83, 77, 1685,
	694, 0, 696, 0, -2, 500, 513, 0, 253, 280,
	281, 0, 0, 284, 0, 286, 287, 277, 278, 0,
	0, 783, 0, 200, 0, 0, 1166, 1167, 1168, 1169,
	1171, 0, 0, 0, 0, 1202, 1179, 44, 94, 110,
	85, 0, 0, 49, 51, 0, 0, 84, 695, 0,
	0, 455, 0, 705, 501, 502, 0, 508, 509, 510,
	511, 282, 283, 285, 717, 0, 578, 656, 1518, 0,
	0, 1440, 0, 1446, 0, 1451, 0, -2, 46, 0,
	0, 0, 52, 0, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 53, 76, 697, 698,
	706, 0, 503, 0, 504, 0, 0, 0, 686, 0,
	717, 1176, 1170, 1172, 0, 0, 1200, 95, 98, 100,
	0, 0, 87, 110, 71, 78, 79, 80, 0, 82,
	72, 73, 48, 0, 0, 707, 703, 514, 516, 517,
	0, 0, 515, 718, 687, 1441, 1447, 0, 110, 99,
	0, 0, 47, 0, 81, 54, 0, 518, 519, 520,
	0, -2, 110, 86, 70, 699, 45, -2, 700, 701,
	702,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 187, 179, 3,
	95, 97, 184, 182, 96, 183, 237, 185, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 782,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 189, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 190,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 180,
	181, 186, 188, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 58083, 758, 58084, 759,
	58085, 760, 58086, 761, 58087, 762, 58088, 763, 58089, 764,
	58090, 765, 58091, 766, 58092, 767, 58093, 768, 58094, 769,
	58095, 770, 58096, 771, 58097, 772, 58098, 773, 58099, 774,
	58100, 775, 58101, 776, 58102, 777, 58103, 778, 58104, 779,
	58105, 780, 58106, 781, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:675
		{
			setParseTrees(yylex, yyDollar[1].statementsUnion())
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Statement
//line sql.y:681
		{
			yyLOCAL = []Statement{yyDollar[1].statementUnion()}
			resetTokenizer(yylex)
		}
		yyVAL.union = yyLOCAL
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:686
		{
			yySLICE := (*[]Statement)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].statementUnion())
			resetTokenizer(yylex)
		}
	case 4:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:693
		{
			yyLOCAL = yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if yyLOCAL == nil && yyDollar[1].strs != nil {
				yyLOCAL = &CommentOnly{Comments: yyDollar[1].strs}
			}
		}
		yyVAL.union = yyLOCAL
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:706
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Statement
//line sql.y:710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:716
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:757
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:761
		{
			yyLOCAL = &BeginEndStatement{Statements: yyDollar[2].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:765
		{
			yyLOCAL = &IfStatement{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion(), ElseIfBlocks: yyDollar[5].elseIfsUnion(), ElseStatements: yyDollar[6].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:769
		{
			yyDollar[3].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			yyLOCAL = &DeclareVar{VarNames: yyDollar[2].columnsUnion(), Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:774
		{
			yyLOCAL = &DeclareHandler{Action: yyDollar[2].handlerActionUnion(), Conditions: yyDollar[5].handlerConditionsUnion(), Statement: yyDollar[6].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:778
		{
			yyLOCAL = &DeclareCondition{Name: yyDollar[2].identifierCI, Condition: yyDollar[5].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:782
		{
			yyLOCAL = &Signal{Condition: yyDollar[2].handlerConditionUnion(), SetValues: yyDollar[3].signalSetsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*SignalSet
//line sql.y:787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:794
		{
			yySLICE := (*[]*SignalSet)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].signalSetUnion())
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*SignalSet
//line sql.y:798
		{
			yyLOCAL = []*SignalSet{yyDollar[2].signalSetUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SignalSet
//line sql.y:804
		{
			yyLOCAL = &SignalSet{ConditionName: yyDollar[1].signalConditionNameUnion(), Value: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:810
		{
			yyLOCAL = ClassOriginType
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:814
		{
			yyLOCAL = SubclassOriginType
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:818
		{
			yyLOCAL = MessageTextType
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:822
		{
			yyLOCAL = MySQLErrNoType
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:826
		{
			yyLOCAL = ConstraintCatalogType
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:830
		{
			yyLOCAL = ConstraintSchemaType
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:834
		{
			yyLOCAL = ConstraintNameType
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:838
		{
			yyLOCAL = CatalogNameType
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:842
		{
			yyLOCAL = SchemaNameType
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:846
		{
			yyLOCAL = TableNameType
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:850
		{
			yyLOCAL = ColumnNameType
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:854
		{
			yyLOCAL = CursorNameType
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:860
		{
			yyLOCAL = ContinueAction
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:864
		{
			yyLOCAL = ExitAction
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:868
		{
			yyLOCAL = UndoAction
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:874
		{
			yySLICE := (*[]HandlerCondition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].handlerConditionUnion())
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []HandlerCondition
//line sql.y:878
		{
			yyLOCAL = []HandlerCondition{yyDollar[1].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:884
		{
			yyLOCAL = &HandlerConditionErrorCode{ErrorCode: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:888
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:898
		{
			yyLOCAL = &HandlerConditionSQLState{SQLStateValue: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:904
		{
			yyLOCAL = &HandlerConditionNamed{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:910
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:914
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:918
		{
			yyLOCAL = &HandlerConditionSQLWarning{}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:922
		{
			yyLOCAL = &HandlerConditionNotFound{}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:926
		{
			yyLOCAL = &HandlerConditionSQLException{}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:931
		{
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:939
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:943
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[2].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:949
		{
			yyLOCAL = yyDollar[1].compoundStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:962
		{
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:968
		{
			yyLOCAL = CompoundStatements{yyDollar[1].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yySLICE := (*CompoundStatements)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].compoundStatementUnion())
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:981
		{
			yyLOCAL = yyDollar[2].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:986
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:990
		{
			yyLOCAL = yyDollar[1].elseIfsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:996
		{
			yySLICE := (*[]*ElseIfBlock)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].elseIfUnion())
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:1000
		{
			yyLOCAL = []*ElseIfBlock{yyDollar[1].elseIfUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ElseIfBlock
//line sql.y:1006
		{
			yyLOCAL = &ElseIfBlock{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1012
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1024
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1028
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1040
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:1046
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:1050
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:1055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:1059
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1065
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:1069
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:1075
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1081
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1085
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1089
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1112
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1118
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1123
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1129
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1136
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1142
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1149
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 125:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1153
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1159
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1163
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1167
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1171
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1175
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1181
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1185
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1190
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1194
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1200
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1204
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1209
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1215
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1221
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1228
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1232
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1238
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1244
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1252
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1256
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1260
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1266
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1278
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1290
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1294
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1300
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1306
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1310
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1314
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1318
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1328
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1338
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1348
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1352
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1361
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1367
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1373
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1377
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1383
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1387
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1391
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1395
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1401
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), NoScope)
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1405
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1409
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1415
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1419
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1425
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1435
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1439
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1443
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = RepeatableReadStr
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = ReadCommittedStr
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = SerializableStr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1467
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1471
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1475
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1481
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1487
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1494
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1498
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1507
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1514
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1527
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1542
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1547
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1553
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1564
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1573
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1579
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 210:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1595
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Statement: yyDollar[10].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1601
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1617
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1621
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1625
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1632
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1639
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1644
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1649
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1654
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1661
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1668
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1679
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1690
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1696
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1700
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1704
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1708
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1716
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1722
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1726
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1732
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1736
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1742
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1746
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1752
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1756
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1762
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1766
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1772
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1782
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1787
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1796
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1805
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1820
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1829
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1851
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1855
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1860
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1865
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1870
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1876
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1881
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1886
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1891
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1896
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1900
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1905
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1909
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1914
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1919
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1924
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1928
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1934
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1938
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1942
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1946
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1952
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1956
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1961
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1965
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1970
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1975
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1980
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1985
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1990
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1995
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2000
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2007
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2014
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2018
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2022
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2026
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2030
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2034
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2044
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2051
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2055
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2061
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2065
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2069
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2073
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2077
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2081
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2085
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2089
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2093
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2097
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2101
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2105
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2109
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2114
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2118
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2122
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = Armscii8Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = ASCIIStr
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = Big5Str
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = UBinaryStr
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.str = Cp1250Str
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.str = Cp1251Str
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.str = Cp1256Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.str = Cp1257Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = Cp850Str
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = Cp852Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = Cp866Str
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = Cp932Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = Dec8Str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.str = EucjpmsStr
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.str = EuckrStr
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.str = Gb18030Str
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = Gb2312Str
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = GbkStr
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = Geostd8Str
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = GreekStr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.str = HebrewStr
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.str = Hp8Str
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2216
		{
			yyVAL.str = Keybcs2Str
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = Koi8rStr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.str = Koi8uStr
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2228
		{
			yyVAL.str = Latin1Str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.str = Latin2Str
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = Latin5Str
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = Latin7Str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.str = MacceStr
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.str = MacromanStr
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.str = SjisStr
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.str = Swe7Str
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.str = Tis620Str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.str = Ucs2Str
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = UjisStr
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = Utf16Str
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = Utf16leStr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = Utf32Str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.str = Utf8mb3Str
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.str = Utf8mb4Str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.str = Utf8mb3Str
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2302
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2306
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2310
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2316
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2320
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2326
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2330
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2334
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2340
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2344
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2350
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2354
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2358
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2362
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2561
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2606
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2615
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2624
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2644
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2654
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2662
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2666
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2684
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2688
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2700
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2715
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2726
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2730
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2735
		{
			yyVAL.str = ""
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2749
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2758
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2764
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2774
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2778
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2783
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2787
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2791
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2795
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2799
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2803
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2809
		{
			yyVAL.str = ""
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2819
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2823
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2827
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2831
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2835
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = ""
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = yyDollar[2].str
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = ""
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = yyDollar[1].str
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = ""
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2902
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2912
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2916
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2922
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2926
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2932
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2936
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2942
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2948
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2952
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2956
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2960
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2964
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2973
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2979
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2985
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2991
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2995
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2999
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3004
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3008
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3014
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3020
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3026
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3030
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3034
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3038
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3042
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3047
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3051
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3061
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3070
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3074
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3083
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3089
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3093
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3097
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3103
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3107
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3113
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3117
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3121
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3125
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3129
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3133
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3137
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3141
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3145
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3149
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3153
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3157
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3161
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3165
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3169
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3173
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3177
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3181
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3185
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3189
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3193
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3197
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3201
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3205
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3209
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3213
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3217
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3221
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3225
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3229
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3233
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3238
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3242
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3246
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3269
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = ""
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3301
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3306
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3319
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3323
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3332
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3336
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3340
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3348
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3354
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3358
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3362
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3368
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3372
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3376
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3380
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3384
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3388
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3392
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3396
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3400
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3404
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3408
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3412
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3416
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3420
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3424
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3428
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3432
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3436
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3440
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3444
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3448
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3452
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3456
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3460
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3464
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3468
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3472
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3476
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3480
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3484
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3488
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3494
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3498
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3504
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3508
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3512
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3516
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3520
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3524
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3528
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3532
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3536
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3540
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3553
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3583
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3590
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3619
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3640
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3650
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3669
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3676
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3683
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3690
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3696
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3724
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3743
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3752
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3799
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3808
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3816
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3825
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3832
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3844
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3853
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3868
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3873
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3877
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3882
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3886
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3892
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3898
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3904
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3914
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3918
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3924
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3930
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3936
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3942
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3948
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3952
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3960
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3966
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3972
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3978
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3982
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3986
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3992
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3996
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4001
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4005
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4010
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4014
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4020
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4024
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4028
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4032
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4036
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4040
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4044
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4048
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4052
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4056
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4060
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4064
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4068
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4072
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4076
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4080
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4084
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4088
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4092
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4096
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4100
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4104
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4109
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4113
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4117
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4123
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4127
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4133
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4138
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4142
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4147
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4152
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4157
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4162
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4167
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4172
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4177
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4182
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4188
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4194
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4198
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4204
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4209
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4213
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4218
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4223
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4228
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4233
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4238
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4243
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4250
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4257
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4264
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4282
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4288
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4294
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4300
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4306
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4312
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4324
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4340
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4346
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4350
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4356
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4379
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4413
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4417
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4421
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4425
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4429
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4433
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4437
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4449
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4453
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4477
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4497
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4501
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4529
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4533
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4537
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4541
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4545
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4549
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4553
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4557
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4569
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4573
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4584
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4588
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4592
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4596
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4600
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4604
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4612
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4616
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4620
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4624
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4628
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4633
		{
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = "extended "
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4649
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4653
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4669
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4687
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4691
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4701
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4707
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.empty = struct{}{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4731
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4735
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4739
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4765
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4769
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4778
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4784
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4788
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4794
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4798
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4802
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4809
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4815
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4819
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4824
		{
			yyVAL.empty = struct{}{}
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.empty = struct{}{}
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4829
		{
			yyVAL.empty = struct{}{}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.empty = struct{}{}
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4835
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4841
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4846
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4850
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4854
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4858
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4862
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4867
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4871
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4875
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4879
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4883
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4887
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = yyDollar[1].str
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = yyDollar[1].str
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = yyDollar[1].str
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4907
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4911
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4915
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4919
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4924
		{
			yyVAL.str = ""
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4928
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4932
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4938
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4942
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4948
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4954
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4958
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4964
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4970
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4980
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4986
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4990
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4994
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4998
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5004
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5010
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5016
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5020
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5024
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5028
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5032
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5036
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5052
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5060
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5080
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5084
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5096
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5101
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5105
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5109
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5114
		{
			yyVAL.str = ""
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5118
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5123
		{
			setAllowComments(yylex, true)
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5127
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5133
		{
			yyVAL.strs = nil
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5137
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5156
		{
			yyVAL.str = ""
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5160
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.str = SQLCacheStr
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5169
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5173
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5177
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5183
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5187
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5197
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5206
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5212
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5216
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5221
		{
			yyVAL.strs = nil
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5235
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5241
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5245
		{
			yyVAL.str = SQLCacheStr
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5249
		{
			yyVAL.str = DistinctStr
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5253
		{
			yyVAL.str = DistinctStr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = HighPriorityStr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.str = StraightJoinHint
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
			yyVAL.str = SQLBigResultStr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5287
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5291
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5299
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5303
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5307
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5311
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5316
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5320
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5324
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5336
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5340
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5346
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5352
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5356
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5366
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5370
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5374
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5378
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5384
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5388
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5394
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5398
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5407
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5416
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5422
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5426
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5432
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5436
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5442
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5446
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5450
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5454
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5460
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5464
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5477
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5481
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5485
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5489
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5495
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5497
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5501
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5503
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5507
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5509
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5512
		{
			yyVAL.empty = struct{}{}
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.empty = struct{}{}
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5517
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5521
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5525
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5532
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5538
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5542
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5546
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5552
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5558
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5562
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5566
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5570
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5576
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5580
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5590
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5604
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5610
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5619
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5625
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5629
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5635
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5639
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5643
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5647
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5651
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5655
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5660
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5664
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5668
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5672
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5693
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5723
		{
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5731
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5797
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5801
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5807
		{
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5820
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5984
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5988
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5994
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6004
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6008
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6012
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6018
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6022
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6029
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6033
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6037
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6041
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6045
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6051
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6055
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6059
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6063
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6067
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6071
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6075
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6084
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6090
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6094
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6103
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6108
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6112
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6118
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6124
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6128
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6134
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6150
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6156
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6160
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6166
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6170
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6176
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6180
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6192
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6198
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6202
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6208
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6214
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6218
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6224
		{
			yyVAL.str = ""
		}
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6228
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6234
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6238
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6245
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6249
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6253
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6257
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6263
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6267
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6273
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6277
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6281
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6285
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6289
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6293
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6299
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6303
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6307
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6314
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6320
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6324
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6843
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6855
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6859
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6887
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6891
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6895
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6899
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6903
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6907
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6915
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6919
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6923
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6927
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6931
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6935
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6939
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6943
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6947
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6951
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6955
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6959
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6963
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6967
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6971
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6975
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6979
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6983
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6987
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6991
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6995
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6999
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7003
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7007
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7011
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7015
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7019
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7023
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7027
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7031
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7035
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7039
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7043
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7047
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7051
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7055
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7059
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7063
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7067
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7071
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7075
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7079
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7083
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7087
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7091
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7095
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7099
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7103
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7107
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7111
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7115
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7119
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7123
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7127
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7131
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7135
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7139
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7143
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7147
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7151
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7155
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7165
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7169
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7173
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7177
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7186
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7192
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7196
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7200
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7204
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7208
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7213
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7217
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7221
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7225
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7229
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7233
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7238
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7242
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7246
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7250
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7257
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7261
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7267
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7271
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7275
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7279
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7285
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7289
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7293
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7297
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7301
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7305
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7309
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7314
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7318
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7324
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7328
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7332
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7336
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7340
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7344
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7348
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7352
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7356
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7360
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7364
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7368
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7372
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7376
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7380
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7384
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7388
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7392
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7396
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7400
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7406
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7410
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7414
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7418
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7422
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7426
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7430
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7434
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7438
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7442
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7446
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7450
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7454
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7458
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7462
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7466
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7470
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7474
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7484
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7488
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7492
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7502
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7506
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7510
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7514
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7518
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7524
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7528
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7532
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7536
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7540
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7546
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7550
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7554
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7564
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7568
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7574
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7578
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7596
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7600
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7604
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7608
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7612
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7616
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7620
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7624
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7628
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7632
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7638
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7642
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7651
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7656
		{
			yyVAL.str = string("")
		}
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7660
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7666
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7670
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7676
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7685
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7691
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7695
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7699
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7703
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7709
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7713
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7719
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7728
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7732
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7741
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7746
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7760
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7766
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7772
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7776
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7785
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7794
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7800
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7806
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7810
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7816
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7821
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7825
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7829
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7838
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7844
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7848
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7852
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7861
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7865
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7869
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7873
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7880
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7884
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7888
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7892
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7898
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7902
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7906
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7910
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7915
		{
			yyVAL.str = ""
		}
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7922
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7926
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7930
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7935
		{
			yyVAL.str = ""
		}
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7939
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7945
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7949
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7954
		{
			yyVAL.str = ""
		}
	case 1609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7958
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7963
		{
			yyVAL.str = "cascaded"
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7967
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7971
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7980
		{
			yyLOCAL = yyDollar[1].procParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7986
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7990
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:7996
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8001
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8005
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8009
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8013
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8025
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8031
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8037
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8043
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8052
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8056
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8061
		{
			yyVAL.str = ""
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8065
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8071
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8075
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8079
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8083
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8087
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8091
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8095
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8101
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8105
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8109
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8113
		{
			yyLOCAL = &SelectInto{Type: IntoVariables, VarList: yyDollar[2].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8119
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:8123
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:8129
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:8133
		{
			yyLOCAL = &Variable{Name: createIdentifierCI(yyDollar[1].str), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8138
		{
			yyVAL.str = ""
		}
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8142
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8146
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8151
		{
			yyVAL.str = ""
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8155
		{
			yyVAL.str = " header"
		}
	case 1652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8160
		{
			yyVAL.str = ""
		}
	case 1653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8164
		{
			yyVAL.str = " manifest on"
		}
	case 1654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8168
		{
			yyVAL.str = " manifest off"
		}
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8173
		{
			yyVAL.str = ""
		}
	case 1656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8177
		{
			yyVAL.str = " overwrite on"
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8181
		{
			yyVAL.str = " overwrite off"
		}
	case 1658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8187
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8192
		{
			yyVAL.str = ""
		}
	case 1660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8196
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8202
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8206
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8212
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8216
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8221
		{
			yyVAL.str = ""
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8225
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8231
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8235
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8241
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8245
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8249
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8254
		{
			yyVAL.str = ""
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8258
		{
			yyVAL.str = " optionally"
		}
	case 1674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8271
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8275
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8279
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8283
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8287
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8293
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8297
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8301
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8305
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8314
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8318
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8327
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8333
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8337
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8343
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8347
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8353
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8357
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8363
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8367
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8373
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8379
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8389
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8399
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8403
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8409
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8416
		{
			yyVAL.str = "charset"
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8426
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8430
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8434
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8443
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8445
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8448
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8450
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8463
		{
			yyVAL.empty = struct{}{}
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8465
		{
			yyVAL.empty = struct{}{}
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8467
		{
			yyVAL.empty = struct{}{}
		}
	case 1724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8471
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8480
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8487
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8491
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8497
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8501
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8508
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8514
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8518
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8524
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8528
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8535
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8541
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8547
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8551
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8555
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9245
		{
		}
	case 2406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9250
		{
		}
	case 2407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9254
		{
			skipToEnd(yylex)
		}
	case 2408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9259
		{
			skipToEnd(yylex)
		}
	case 2409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9263
		{
			skipToEnd(yylex)
		}
	case 2410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9267
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
