// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTrees(yylex yyLexer, stmts []Statement) {
	if len(stmts) > 1 && stmts[len(stmts)-1] == nil {
		stmts = stmts[:len(stmts)-1]
	}
	yylex.(*Tokenizer).ParseTrees = stmts
}

func resetTokenizer(yylex yyLexer) {
	yylex.(*Tokenizer).reset()
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const ELSEIF = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const SHIFT_LEFT = 57513
const SHIFT_RIGHT = 57514
const DIV = 57515
const MOD = 57516
const UNARY = 57517
const COLLATE = 57518
const BINARY = 57519
const UNDERSCORE_ARMSCII8 = 57520
const UNDERSCORE_ASCII = 57521
const UNDERSCORE_BIG5 = 57522
const UNDERSCORE_BINARY = 57523
const UNDERSCORE_CP1250 = 57524
const UNDERSCORE_CP1251 = 57525
const UNDERSCORE_CP1256 = 57526
const UNDERSCORE_CP1257 = 57527
const UNDERSCORE_CP850 = 57528
const UNDERSCORE_CP852 = 57529
const UNDERSCORE_CP866 = 57530
const UNDERSCORE_CP932 = 57531
const UNDERSCORE_DEC8 = 57532
const UNDERSCORE_EUCJPMS = 57533
const UNDERSCORE_EUCKR = 57534
const UNDERSCORE_GB18030 = 57535
const UNDERSCORE_GB2312 = 57536
const UNDERSCORE_GBK = 57537
const UNDERSCORE_GEOSTD8 = 57538
const UNDERSCORE_GREEK = 57539
const UNDERSCORE_HEBREW = 57540
const UNDERSCORE_HP8 = 57541
const UNDERSCORE_KEYBCS2 = 57542
const UNDERSCORE_KOI8R = 57543
const UNDERSCORE_KOI8U = 57544
const UNDERSCORE_LATIN1 = 57545
const UNDERSCORE_LATIN2 = 57546
const UNDERSCORE_LATIN5 = 57547
const UNDERSCORE_LATIN7 = 57548
const UNDERSCORE_MACCE = 57549
const UNDERSCORE_MACROMAN = 57550
const UNDERSCORE_SJIS = 57551
const UNDERSCORE_SWE7 = 57552
const UNDERSCORE_TIS620 = 57553
const UNDERSCORE_UCS2 = 57554
const UNDERSCORE_UJIS = 57555
const UNDERSCORE_UTF16 = 57556
const UNDERSCORE_UTF16LE = 57557
const UNDERSCORE_UTF32 = 57558
const UNDERSCORE_UTF8 = 57559
const UNDERSCORE_UTF8MB4 = 57560
const UNDERSCORE_UTF8MB3 = 57561
const INTERVAL = 57562
const WINDOW_EXPR = 57563
const JSON_EXTRACT_OP = 57564
const JSON_UNQUOTE_EXTRACT_OP = 57565
const CREATE = 57566
const ALTER = 57567
const DROP = 57568
const RENAME = 57569
const ANALYZE = 57570
const ADD = 57571
const FLUSH = 57572
const CHANGE = 57573
const MODIFY = 57574
const DEALLOCATE = 57575
const REVERT = 57576
const QUERIES = 57577
const DECLARE = 57578
const FOUND = 57579
const HANDLER = 57580
const CONTINUE = 57581
const EXIT = 57582
const UNDO = 57583
const SQLEXCEPTION = 57584
const SQLSTATE = 57585
const SQLWARNING = 57586
const CONDITION = 57587
const SCHEMA = 57588
const TABLE = 57589
const INDEX = 57590
const VIEW = 57591
const TO = 57592
const IGNORE = 57593
const IF = 57594
const PRIMARY = 57595
const COLUMN = 57596
const SPATIAL = 57597
const FULLTEXT = 57598
const KEY_BLOCK_SIZE = 57599
const CHECK = 57600
const INDEXES = 57601
const ACTION = 57602
const CASCADE = 57603
const CONSTRAINT = 57604
const FOREIGN = 57605
const NO = 57606
const REFERENCES = 57607
const RESTRICT = 57608
const SIGNAL = 57609
const SHOW = 57610
const DESCRIBE = 57611
const EXPLAIN = 57612
const DATE = 57613
const ESCAPE = 57614
const REPAIR = 57615
const OPTIMIZE = 57616
const TRUNCATE = 57617
const COALESCE = 57618
const EXCHANGE = 57619
const REBUILD = 57620
const PARTITIONING = 57621
const REMOVE = 57622
const PREPARE = 57623
const EXECUTE = 57624
const MAXVALUE = 57625
const PARTITION = 57626
const REORGANIZE = 57627
const LESS = 57628
const THAN = 57629
const PROCEDURE = 57630
const TRIGGER = 57631
const VINDEX = 57632
const VINDEXES = 57633
const DIRECTORY = 57634
const NAME = 57635
const UPGRADE = 57636
const STATUS = 57637
const VARIABLES = 57638
const WARNINGS = 57639
const CASCADED = 57640
const DEFINER = 57641
const OPTION = 57642
const SQL = 57643
const UNDEFINED = 57644
const SEQUENCE = 57645
const MERGE = 57646
const TEMPORARY = 57647
const TEMPTABLE = 57648
const INVOKER = 57649
const SECURITY = 57650
const FIRST = 57651
const AFTER = 57652
const LAST = 57653
const VITESS_MIGRATION = 57654
const CANCEL = 57655
const RETRY = 57656
const LAUNCH = 57657
const COMPLETE = 57658
const CLEANUP = 57659
const THROTTLE = 57660
const UNTHROTTLE = 57661
const FORCE_CUTOVER = 57662
const CUTOVER_THRESHOLD = 57663
const EXPIRE = 57664
const RATIO = 57665
const VITESS_THROTTLER = 57666
const BEGIN = 57667
const START = 57668
const TRANSACTION = 57669
const COMMIT = 57670
const ROLLBACK = 57671
const SAVEPOINT = 57672
const RELEASE = 57673
const WORK = 57674
const CONSISTENT = 57675
const SNAPSHOT = 57676
const UNRESOLVED = 57677
const TRANSACTIONS = 57678
const BIT = 57679
const TINYINT = 57680
const SMALLINT = 57681
const MEDIUMINT = 57682
const INT = 57683
const INTEGER = 57684
const BIGINT = 57685
const INTNUM = 57686
const REAL = 57687
const DOUBLE = 57688
const FLOAT_TYPE = 57689
const FLOAT4_TYPE = 57690
const FLOAT8_TYPE = 57691
const DECIMAL_TYPE = 57692
const NUMERIC = 57693
const TIME = 57694
const TIMESTAMP = 57695
const DATETIME = 57696
const YEAR = 57697
const CHAR = 57698
const VARCHAR = 57699
const BOOL = 57700
const CHARACTER = 57701
const VARBINARY = 57702
const NCHAR = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const JSON_SCHEMA_VALID = 57713
const JSON_SCHEMA_VALIDATION_REPORT = 57714
const ENUM = 57715
const GEOMETRY = 57716
const POINT = 57717
const LINESTRING = 57718
const POLYGON = 57719
const GEOMCOLLECTION = 57720
const GEOMETRYCOLLECTION = 57721
const MULTIPOINT = 57722
const MULTILINESTRING = 57723
const MULTIPOLYGON = 57724
const ASCII = 57725
const UNICODE = 57726
const VECTOR = 57727
const NULLX = 57728
const AUTO_INCREMENT = 57729
const APPROXNUM = 57730
const SIGNED = 57731
const UNSIGNED = 57732
const ZEROFILL = 57733
const PURGE = 57734
const BEFORE = 57735
const CODE = 57736
const COLLATION = 57737
const COLUMNS = 57738
const DATABASES = 57739
const ENGINES = 57740
const EVENT = 57741
const EXTENDED = 57742
const FIELDS = 57743
const FULL = 57744
const FUNCTION = 57745
const GTID_EXECUTED = 57746
const KEYSPACES = 57747
const OPEN = 57748
const PLUGINS = 57749
const PRIVILEGES = 57750
const PROCESSLIST = 57751
const SCHEMAS = 57752
const TABLES = 57753
const TRIGGERS = 57754
const USER = 57755
const VGTID_EXECUTED = 57756
const VITESS_KEYSPACES = 57757
const VITESS_METADATA = 57758
const VITESS_MIGRATIONS = 57759
const VITESS_REPLICATION_STATUS = 57760
const VITESS_SHARDS = 57761
const VITESS_TABLETS = 57762
const VITESS_TARGET = 57763
const VSCHEMA = 57764
const VITESS_THROTTLED_APPS = 57765
const NAMES = 57766
const GLOBAL = 57767
const SESSION = 57768
const ISOLATION = 57769
const LEVEL = 57770
const READ = 57771
const WRITE = 57772
const ONLY = 57773
const REPEATABLE = 57774
const COMMITTED = 57775
const UNCOMMITTED = 57776
const SERIALIZABLE = 57777
const CLASS_ORIGIN = 57778
const SUBCLASS_ORIGIN = 57779
const MESSAGE_TEXT = 57780
const MYSQL_ERRNO = 57781
const CONSTRAINT_CATALOG = 57782
const CONSTRAINT_SCHEMA = 57783
const CONSTRAINT_NAME = 57784
const CATALOG_NAME = 57785
const SCHEMA_NAME = 57786
const TABLE_NAME = 57787
const COLUMN_NAME = 57788
const CURSOR_NAME = 57789
const ADDDATE = 57790
const CURRENT_TIMESTAMP = 57791
const DATABASE = 57792
const CURRENT_DATE = 57793
const CURDATE = 57794
const DATE_ADD = 57795
const DATE_SUB = 57796
const NOW = 57797
const SUBDATE = 57798
const CURTIME = 57799
const CURRENT_TIME = 57800
const LOCALTIME = 57801
const LOCALTIMESTAMP = 57802
const CURRENT_USER = 57803
const UTC_DATE = 57804
const UTC_TIME = 57805
const UTC_TIMESTAMP = 57806
const SYSDATE = 57807
const DAY = 57808
const DAY_HOUR = 57809
const DAY_MICROSECOND = 57810
const DAY_MINUTE = 57811
const DAY_SECOND = 57812
const HOUR = 57813
const HOUR_MICROSECOND = 57814
const HOUR_MINUTE = 57815
const HOUR_SECOND = 57816
const MICROSECOND = 57817
const MINUTE = 57818
const MINUTE_MICROSECOND = 57819
const MINUTE_SECOND = 57820
const MONTH = 57821
const QUARTER = 57822
const SECOND = 57823
const SECOND_MICROSECOND = 57824
const YEAR_MONTH = 57825
const WEEK = 57826
const SQL_TSI_DAY = 57827
const SQL_TSI_WEEK = 57828
const SQL_TSI_HOUR = 57829
const SQL_TSI_MINUTE = 57830
const SQL_TSI_MONTH = 57831
const SQL_TSI_QUARTER = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MICROSECOND = 57834
const SQL_TSI_YEAR = 57835
const REPLACE = 57836
const CONVERT = 57837
const CAST = 57838
const SUBSTR = 57839
const SUBSTRING = 57840
const MID = 57841
const SEPARATOR = 57842
const TIMESTAMPADD = 57843
const TIMESTAMPDIFF = 57844
const WEIGHT_STRING = 57845
const LTRIM = 57846
const RTRIM = 57847
const TRIM = 57848
const JSON_ARRAY = 57849
const JSON_OBJECT = 57850
const JSON_QUOTE = 57851
const JSON_DEPTH = 57852
const JSON_TYPE = 57853
const JSON_LENGTH = 57854
const JSON_VALID = 57855
const JSON_ARRAY_APPEND = 57856
const JSON_ARRAY_INSERT = 57857
const JSON_INSERT = 57858
const JSON_MERGE = 57859
const JSON_MERGE_PATCH = 57860
const JSON_MERGE_PRESERVE = 57861
const JSON_REMOVE = 57862
const JSON_REPLACE = 57863
const JSON_SET = 57864
const JSON_UNQUOTE = 57865
const COUNT = 57866
const AVG = 57867
const MAX = 57868
const MIN = 57869
const SUM = 57870
const GROUP_CONCAT = 57871
const BIT_AND = 57872
const BIT_OR = 57873
const BIT_XOR = 57874
const STD = 57875
const STDDEV = 57876
const STDDEV_POP = 57877
const STDDEV_SAMP = 57878
const VAR_POP = 57879
const VAR_SAMP = 57880
const VARIANCE = 57881
const ANY_VALUE = 57882
const REGEXP_INSTR = 57883
const REGEXP_LIKE = 57884
const REGEXP_REPLACE = 57885
const REGEXP_SUBSTR = 57886
const ExtractValue = 57887
const UpdateXML = 57888
const GET_LOCK = 57889
const RELEASE_LOCK = 57890
const RELEASE_ALL_LOCKS = 57891
const IS_FREE_LOCK = 57892
const IS_USED_LOCK = 57893
const LOCATE = 57894
const POSITION = 57895
const ST_GeometryCollectionFromText = 57896
const ST_GeometryFromText = 57897
const ST_LineStringFromText = 57898
const ST_MultiLineStringFromText = 57899
const ST_MultiPointFromText = 57900
const ST_MultiPolygonFromText = 57901
const ST_PointFromText = 57902
const ST_PolygonFromText = 57903
const ST_GeometryCollectionFromWKB = 57904
const ST_GeometryFromWKB = 57905
const ST_LineStringFromWKB = 57906
const ST_MultiLineStringFromWKB = 57907
const ST_MultiPointFromWKB = 57908
const ST_MultiPolygonFromWKB = 57909
const ST_PointFromWKB = 57910
const ST_PolygonFromWKB = 57911
const ST_AsBinary = 57912
const ST_AsText = 57913
const ST_Dimension = 57914
const ST_Envelope = 57915
const ST_IsSimple = 57916
const ST_IsEmpty = 57917
const ST_GeometryType = 57918
const ST_X = 57919
const ST_Y = 57920
const ST_Latitude = 57921
const ST_Longitude = 57922
const ST_EndPoint = 57923
const ST_IsClosed = 57924
const ST_Length = 57925
const ST_NumPoints = 57926
const ST_StartPoint = 57927
const ST_PointN = 57928
const ST_Area = 57929
const ST_Centroid = 57930
const ST_ExteriorRing = 57931
const ST_InteriorRingN = 57932
const ST_NumInteriorRings = 57933
const ST_NumGeometries = 57934
const ST_GeometryN = 57935
const ST_LongFromGeoHash = 57936
const ST_PointFromGeoHash = 57937
const ST_LatFromGeoHash = 57938
const ST_GeoHash = 57939
const ST_AsGeoJSON = 57940
const ST_GeomFromGeoJSON = 57941
const MATCH = 57942
const AGAINST = 57943
const BOOLEAN = 57944
const LANGUAGE = 57945
const WITH = 57946
const QUERY = 57947
const EXPANSION = 57948
const WITHOUT = 57949
const VALIDATION = 57950
const ROLLUP = 57951
const UNUSED = 57952
const ARRAY = 57953
const BYTE = 57954
const CUME_DIST = 57955
const DESCRIPTION = 57956
const DENSE_RANK = 57957
const EMPTY = 57958
const EXCEPT = 57959
const FIRST_VALUE = 57960
const GROUPING = 57961
const GROUPS = 57962
const JSON_TABLE = 57963
const LAG = 57964
const LAST_VALUE = 57965
const LATERAL = 57966
const LEAD = 57967
const NTH_VALUE = 57968
const NTILE = 57969
const OF = 57970
const OVER = 57971
const PERCENT_RANK = 57972
const RANK = 57973
const RECURSIVE = 57974
const ROW_NUMBER = 57975
const SYSTEM = 57976
const WINDOW = 57977
const ACTIVE = 57978
const ADMIN = 57979
const AUTOEXTEND_SIZE = 57980
const BUCKETS = 57981
const CLONE = 57982
const COLUMN_FORMAT = 57983
const COMPONENT = 57984
const DEFINITION = 57985
const ENFORCED = 57986
const ENGINE_ATTRIBUTE = 57987
const EXCLUDE = 57988
const FOLLOWING = 57989
const GET_MASTER_PUBLIC_KEY = 57990
const GET_SOURCE_PUBLIC_KEY = 57991
const HISTOGRAM = 57992
const HISTORY = 57993
const INACTIVE = 57994
const INVISIBLE = 57995
const LOCKED = 57996
const MASTER_COMPRESSION_ALGORITHMS = 57997
const MASTER_PUBLIC_KEY_PATH = 57998
const MASTER_TLS_CIPHERSUITES = 57999
const MASTER_ZSTD_COMPRESSION_LEVEL = 58000
const NESTED = 58001
const NETWORK_NAMESPACE = 58002
const NOWAIT = 58003
const NULLS = 58004
const OJ = 58005
const OLD = 58006
const OPTIONAL = 58007
const ORDINALITY = 58008
const ORGANIZATION = 58009
const OTHERS = 58010
const PARTIAL = 58011
const PATH = 58012
const PERSIST = 58013
const PERSIST_ONLY = 58014
const PRECEDING = 58015
const PRIVILEGE_CHECKS_USER = 58016
const PROCESS = 58017
const RANDOM = 58018
const REFERENCE = 58019
const REQUIRE_ROW_FORMAT = 58020
const RESOURCE = 58021
const RESPECT = 58022
const RESTART = 58023
const RETAIN = 58024
const REUSE = 58025
const ROLE = 58026
const SECONDARY = 58027
const SECONDARY_ENGINE = 58028
const SECONDARY_ENGINE_ATTRIBUTE = 58029
const SECONDARY_LOAD = 58030
const SECONDARY_UNLOAD = 58031
const SIMPLE = 58032
const SKIP = 58033
const SOURCE_COMPRESSION_ALGORITHMS = 58034
const SOURCE_PUBLIC_KEY_PATH = 58035
const SOURCE_TLS_CIPHERSUITES = 58036
const SOURCE_ZSTD_COMPRESSION_LEVEL = 58037
const SRID = 58038
const THREAD_PRIORITY = 58039
const TIES = 58040
const UNBOUNDED = 58041
const VCPU = 58042
const VISIBLE = 58043
const RETURNING = 58044
const MANUAL = 58045
const PARALLEL = 58046
const QUALIFY = 58047
const TABLESAMPLE = 58048
const OUT = 58049
const INOUT = 58050
const FORMAT_BYTES = 58051
const FORMAT_PICO_TIME = 58052
const PS_CURRENT_THREAD_ID = 58053
const PS_THREAD_ID = 58054
const GTID_SUBSET = 58055
const GTID_SUBTRACT = 58056
const WAIT_FOR_EXECUTED_GTID_SET = 58057
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58058
const FORMAT = 58059
const TREE = 58060
const VITESS = 58061
const TRADITIONAL = 58062
const VTEXPLAIN = 58063
const VEXPLAIN = 58064
const PLAN = 58065
const LOCAL = 58066
const LOW_PRIORITY = 58067
const NO_WRITE_TO_BINLOG = 58068
const LOGS = 58069
const ERROR = 58070
const GENERAL = 58071
const HOSTS = 58072
const OPTIMIZER_COSTS = 58073
const USER_RESOURCES = 58074
const SLOW = 58075
const CHANNEL = 58076
const RELAY = 58077
const EXPORT = 58078
const CURRENT = 58079
const ROW = 58080
const ROWS = 58081
const AVG_ROW_LENGTH = 58082
const CONNECTION = 58083
const CHECKSUM = 58084
const DELAY_KEY_WRITE = 58085
const ENCRYPTION = 58086
const ENGINE = 58087
const INSERT_METHOD = 58088
const MAX_ROWS = 58089
const MIN_ROWS = 58090
const PACK_KEYS = 58091
const PASSWORD = 58092
const FIXED = 58093
const DYNAMIC = 58094
const COMPRESSED = 58095
const REDUNDANT = 58096
const COMPACT = 58097
const ROW_FORMAT = 58098
const STATS_AUTO_RECALC = 58099
const STATS_PERSISTENT = 58100
const STATS_SAMPLE_PAGES = 58101
const STORAGE = 58102
const MEMORY = 58103
const DISK = 58104
const PARTITIONS = 58105
const LINEAR = 58106
const RANGE = 58107
const LIST = 58108
const SUBPARTITION = 58109
const SUBPARTITIONS = 58110
const HASH = 58111

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"DECLARE",
	"FOUND",
	"HANDLER",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"SQLEXCEPTION",
	"SQLSTATE",
	"SQLWARNING",
	"CONDITION",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SIGNAL",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"GET_SOURCE_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SOURCE_COMPRESSION_ALGORITHMS",
	"SOURCE_PUBLIC_KEY_PATH",
	"SOURCE_TLS_CIPHERSUITES",
	"SOURCE_ZSTD_COMPRESSION_LEVEL",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	16, 110,
	17, 110,
	-2, 6,
	-1, 57,
	1, 225,
	787, 225,
	-2, 233,
	-1, 58,
	149, 233,
	192, 233,
	376, 233,
	-2, 593,
	-1, 66,
	38, 855,
	265, 855,
	276, 855,
	312, 869,
	313, 869,
	-2, 857,
	-1, 71,
	267, 893,
	-2, 891,
	-1, 132,
	1, 226,
	787, 226,
	-2, 233,
	-1, 143,
	150, 478,
	270, 478,
	-2, 582,
	-1, 162,
	149, 233,
	192, 233,
	376, 233,
	-2, 602,
	-1, 781,
	178, 102,
	-2, 104,
	-1, 990,
	95, 1733,
	-2, 1553,
	-1, 991,
	95, 1734,
	237, 1738,
	-2, 1554,
	-1, 992,
	237, 1737,
	-2, 103,
	-1, 1078,
	65, 967,
	-2, 980,
	-1, 1083,
	264, 1716,
	-2, 1623,
	-1, 1165,
	275, 1180,
	280, 1180,
	-2, 489,
	-1, 1253,
	1, 650,
	787, 650,
	-2, 233,
	-1, 1578,
	237, 1738,
	-2, 1554,
	-1, 1791,
	65, 968,
	-2, 984,
	-1, 1792,
	65, 969,
	-2, 985,
	-1, 1869,
	149, 233,
	192, 233,
	376, 233,
	-2, 528,
	-1, 1946,
	150, 478,
	270, 478,
	-2, 582,
	-1, 1955,
	275, 1181,
	280, 1181,
	-2, 490,
	-1, 2403,
	237, 1742,
	-2, 1736,
	-1, 2404,
	237, 1738,
	-2, 1734,
	-1, 2522,
	149, 233,
	192, 233,
	376, 233,
	-2, 529,
	-1, 2529,
	28, 254,
	-2, 256,
	-1, 2986,
	95, 1681,
	-2, 960,
	-1, 3007,
	86, 160,
	96, 160,
	-2, 1047,
	-1, 3072,
	762, 772,
	-2, 746,
	-1, 3306,
	55, 1673,
	-2, 1667,
	-1, 3625,
	97, 1614,
	-2, 1619,
	-1, 4151,
	762, 772,
	-2, 760,
	-1, 4191,
	16, 110,
	17, 110,
	165, 91,
	-2, 881,
	-1, 4248,
	165, 92,
	-2, 110,
	-1, 4268,
	98, 704,
	104, 704,
	114, 704,
	194, 704,
	195, 704,
	196, 704,
	197, 704,
	198, 704,
	199, 704,
	200, 704,
	201, 704,
	202, 704,
	203, 704,
	204, 704,
	205, 704,
	206, 704,
	207, 704,
	208, 704,
	209, 704,
	210, 704,
	211, 704,
	212, 704,
	213, 704,
	214, 704,
	215, 704,
	216, 704,
	217, 704,
	218, 704,
	219, 704,
	220, 704,
	221, 704,
	222, 704,
	223, 704,
	224, 704,
	225, 704,
	226, 704,
	227, 704,
	228, 704,
	229, 704,
	230, 704,
	231, 704,
	232, 704,
	233, 704,
	234, 704,
	235, 704,
	-2, 2139,
	-1, 4341,
	163, 97,
	165, 97,
	-2, 110,
	-1, 4425,
	165, 96,
	-2, 110,
	-1, 4431,
	16, 110,
	17, 110,
	-2, 101,
}

const yyPrivate = 57344

const yyLast = 61952

var yyAct = [...]int{
	1006, 3789, 3791, 954, 4249, 92, 4248, 3790, 4250, 4383,
	4388, 4372, 4401, 4133, 955, 813, 4389, 3433, 4230, 4318,
	2519, 4319, 4346, 3583, 4266, 2209, 1323, 2076, 3739, 1872,
	4183, 3447, 3358, 3365, 2432, 4390, 4395, 4112, 2579, 4035,
	3402, 959, 3411, 1321, 3416, 3832, 46, 3413, 3412, 3410,
	3415, 1001, 3414, 3727, 993, 4110, 3319, 3157, 2197, 3242,
	3373, 3431, 2589, 3156, 90, 3430, 785, 129, 3131, 994,
	2490, 2493, 2978, 2473, 3660, 3307, 2982, 2965, 1197, 9,
	3323, 3317, 2558, 2434, 779, 3613, 3320, 780, 3042, 3454,
	3113, 1076, 2950, 92, 3069, 2563, 3043, 1929, 1135, 3637,
	3044, 3843, 2507, 2620, 1103, 2992, 2923, 1073, 2495, 2949,
	47, 2494, 1110, 2939, 1076, 3623, 2452, 2389, 45, 2971,
	2231, 2193, 171, 2357, 3104, 2143, 2598, 2356, 157, 1145,
	1971, 2482, 1075, 1953, 1079, 2565, 3035, 1155, 1841, 1147,
	1861, 782, 3648, 1102, 2497, 2461, 1008, 3322, 3009, 1826,
	1809, 111, 1160, 1772, 112, 1105, 1591, 1082, 956, 2237,
	2168, 2157, 1516, 1499, 2071, 1960, 783, 1173, 1139, 1142,
	1143, 795, 1163, 1166, 1161, 2554, 107, 1162, 2474, 1860,
	790, 1846, 3827, 1120, 1122, 2921, 2555, 1098, 1086, 1246,
	2245, 2264, 1794, 1550, 3819, 1099, 1574, 106, 2084, 2134,
	135, 14, 2232, 1081, 1311, 13, 12, 133, 134, 3584,
	1071, 1080, 1115, 140, 141, 1084, 1257, 1595, 1251, 1297,
	175, 1945, 772, 114, 4246, 6, 4373, 1600, 3728, 89,
	99, 3399, 1114, 4167, 113, 2591, 1245, 3060, 1199, 2591,
	2592, 2593, 2635, 1088, 4, 715, 3720, 1319, 3092, 3091,
	4, 1216, 1217, 1218, 1070, 1221, 1222, 1223, 1224, 4168,
	4290, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 136, 1136,
	142, 1268, 775, 1090, 2037, 1202, 1828, 3121, 3122, 4163,
	4162, 2150, 118, 119, 120, 3794, 123, 2429, 2430, 3421,
	773, 2149, 1130, 199, 1129, 1091, 707, 3685, 2148, 2147,
	2146, 4141, 1177, 2145, 3062, 1152, 1824, 1176, 770, 771,
	1074, 2115, 1267, 712, 1072, 713, 3057, 757, 1064, 1065,
	1066, 1067, 2919, 1151, 1210, 1078, 1203, 1206, 1207, 1083,
	1150, 1149, 3794, 3303, 1104, 1513, 4322, 1831, 1510, 3246,
	2967, 3421, 2688, 136, 1219, 2624, 3082, 1007, 751, 3419,
	4420, 4317, 1829, 4363, 3418, 1117, 1118, 1533, 3587, 3586,
	2470, 2469, 3085, 1058, 757, 4113, 2884, 1832, 996, 1059,
	1010, 1011, 1012, 997, 4377, 3473, 998, 999, 3425, 1000,
	1069, 3793, 1830, 1128, 1132, 958, 101, 1128, 1132, 958,
	4294, 1153, 4163, 2623, 4292, 1805, 2155, 1013, 1014, 4245,
	4376, 3419, 4031, 4030, 3733, 1201, 1200, 3734, 4332, 4041,
	4288, 136, 3751, 751, 1501, 3834, 4293, 3740, 4227, 2580,
	4291, 2617, 4040, 2202, 4231, 4271, 3499, 2463, 3793, 3750,
	3425, 3018, 751, 2622, 3017, 2920, 751, 3019, 3354, 1529,
	3355, 3356, 1862, 1512, 1863, 2695, 2514, 2515, 2513, 2127,
	2128, 3120, 2692, 3103, 1316, 1287, 91, 746, 1062, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 4235, 1061, 4134, 3422, 731, 1530, 103, 1531, 1532,
	4276, 91, 91, 1288, 751, 2693, 1275, 1292, 1293, 1281,
	1275, 1276, 2574, 1517, 2080, 1276, 91, 3030, 729, 93,
	4274, 3451, 1517, 1274, 2981, 1273, 2532, 2531, 3481, 101,
	4281, 4282, 3449, 2974, 2975, 3479, 2568, 3178, 1494, 1511,
	3375, 3376, 2126, 3442, 751, 2686, 3422, 4275, 2477, 751,
	765, 2130, 2986, 2986, 3105, 2985, 2985, 769, 1315, 726,
	763, 3455, 1776, 3070, 1314, 752, 2599, 103, 741, 1304,
	4083, 1306, 4084, 2431, 2027, 2959, 2945, 2960, 1250, 1500,
	1258, 1259, 2642, 736, 101, 101, 3289, 1220, 2661, 2453,
	2662, 2640, 2663, 4323, 3290, 739, 2451, 3707, 749, 101,
	1820, 1493, 1289, 1308, 1290, 1291, 750, 1313, 1282, 2453,
	1303, 1305, 1296, 1262, 4324, 1254, 1294, 1121, 3452, 2028,
	1261, 2029, 3108, 3722, 3443, 3444, 1295, 4015, 3721, 3450,
	752, 2664, 1527, 1175, 2639, 1226, 1156, 1263, 2643, 1225,
	1157, 1527, 2638, 2602, 3718, 4421, 3798, 2641, 2491, 752,
	1157, 1195, 3634, 752, 1194, 3063, 3397, 2081, 1193, 1192,
	3374, 1191, 1190, 1189, 1188, 1183, 716, 1779, 718, 732,
	1938, 754, 3377, 753, 722, 1196, 720, 724, 733, 725,
	2689, 719, 2690, 730, 3377, 1140, 721, 734, 735, 738,
	742, 743, 744, 740, 737, 1140, 728, 755, 1168, 1138,
	2567, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356,
	4357, 4358, 4359, 4430, 1131, 1125, 1123, 3179, 1131, 1125,
	1123, 1301, 1140, 2462, 2072, 1302, 1320, 1169, 1320, 1320,
	1116, 752, 3058, 1858, 1551, 1307, 2649, 2645, 2647, 2648,
	2646, 2650, 2651, 2652, 2653, 1523, 3109, 1174, 1515, 4306,
	2628, 2627, 2068, 2057, 1523, 2475, 2476, 3470, 3245, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1560, 1559, 1561, 1562,
	3717, 752, 1300, 1502, 101, 1213, 752, 3626, 1076, 1575,
	1580, 1581, 1249, 1584, 1586, 1587, 1588, 1589, 1590, 3273,
	1593, 1594, 1596, 1596, 4405, 1596, 1596, 1601, 1601, 1601,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1260, 1585, 4140, 2621, 1728, 3061,
	1730, 1731, 1732, 1733, 1734, 1309, 1828, 1576, 1568, 1569,
	1570, 1571, 1601, 1601, 1601, 1601, 1601, 1601, 1582, 1572,
	1154, 1490, 3836, 3835, 4186, 2957, 3749, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 4233, 3084, 3064, 3635, 1491, 1492, 1859, 1271, 4146,
	1277, 1278, 1279, 1280, 3032, 2061, 3792, 2059, 2060, 2058,
	2062, 2063, 2064, 3423, 3424, 756, 1186, 2693, 2039, 2038,
	2040, 2041, 2042, 1175, 1317, 1318, 3427, 1252, 3293, 4232,
	1597, 3112, 1598, 1599, 1124, 94, 747, 2273, 1124, 1565,
	3083, 3683, 3684, 3686, 3094, 1602, 1603, 1509, 1765, 1565,
	2694, 748, 1184, 3792, 2944, 1285, 2460, 4403, 1769, 751,
	4404, 1959, 4402, 1175, 1775, 3423, 3424, 2571, 1272, 2459,
	2458, 1082, 3080, 1076, 2454, 100, 2069, 1076, 3427, 1266,
	4280, 706, 3571, 1076, 1522, 1519, 1520, 1521, 1526, 1528,
	1525, 4305, 1524, 1522, 1519, 1520, 1521, 1526, 1528, 1525,
	1205, 1524, 1518, 2477, 2924, 2926, 1168, 4418, 2572, 2619,
	1204, 1518, 4394, 4286, 1783, 4129, 2570, 3102, 1787, 2056,
	3101, 1566, 1567, 4278, 1075, 1766, 2229, 3674, 4279, 3656,
	100, 100, 3014, 2977, 2896, 2205, 3125, 1174, 1850, 1729,
	1265, 1082, 3254, 3253, 1175, 100, 2710, 92, 2265, 2972,
	2573, 714, 132, 2267, 2520, 1823, 1565, 2272, 2268, 1252,
	1562, 2269, 2270, 2271, 2569, 3353, 2266, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 3132, 1174, 1187, 3271,
	1785, 1958, 2721, 1786, 111, 1805, 2246, 112, 46, 1735,
	1736, 1737, 1738, 1739, 1740, 1766, 1298, 1545, 2085, 3115,
	1250, 1244, 1094, 2247, 3114, 1270, 1773, 1312, 4397, 1767,
	1212, 1082, 2173, 3115, 1185, 1781, 126, 4154, 3114, 1816,
	1198, 3471, 1819, 3713, 3647, 2464, 1932, 2174, 1563, 1564,
	2172, 1935, 1936, 1937, 2139, 1827, 2065, 2221, 2210, 2211,
	2212, 2213, 2223, 2214, 2215, 2216, 2228, 2224, 2217, 2218,
	2225, 2226, 2227, 2219, 2220, 2222, 114, 1864, 1174, 4424,
	4301, 3152, 1951, 1178, 1168, 4384, 1248, 4261, 1180, 1533,
	2721, 3134, 1181, 1179, 1175, 2053, 4412, 2054, 1807, 2238,
	2055, 2730, 1284, 1770, 2955, 1784, 752, 1175, 1944, 2925,
	2238, 4333, 2078, 1286, 1182, 127, 1531, 1532, 2012, 2013,
	1810, 1822, 1812, 1782, 2018, 2019, 2004, 1963, 1320, 1072,
	2475, 2476, 1074, 2022, 1973, 1175, 1974, 2618, 1976, 1978,
	1817, 1788, 1982, 1984, 1986, 1988, 1990, 1532, 1533, 2616,
	1855, 1856, 1250, 1175, 1813, 1965, 3852, 4197, 1962, 1961,
	1961, 1815, 1814, 2244, 3691, 3144, 3143, 3142, 1924, 3690,
	3136, 1533, 3140, 1253, 3135, 1299, 3133, 2086, 2606, 1533,
	1269, 3138, 2000, 1968, 1967, 2003, 1957, 2005, 2614, 1533,
	3137, 1804, 1942, 1940, 1186, 1954, 1247, 2483, 2484, 1184,
	1941, 2161, 2162, 2700, 2701, 1820, 4198, 2611, 1174, 3139,
	3141, 1263, 2008, 2757, 1168, 1171, 1172, 2052, 1140, 198,
	1533, 1174, 1165, 1169, 1249, 1533, 4325, 1168, 1171, 1172,
	3065, 1140, 3675, 101, 2726, 1165, 1169, 1533, 1530, 1089,
	1531, 1532, 137, 2611, 159, 2073, 2074, 4426, 2047, 1174,
	2615, 4407, 1533, 2171, 1178, 1168, 4121, 1164, 180, 1180,
	3746, 2717, 3747, 1181, 1179, 4327, 4023, 1174, 2045, 1211,
	4022, 2034, 4422, 1208, 1151, 1557, 1558, 1560, 1559, 1561,
	1562, 1150, 1149, 4013, 3763, 198, 2613, 1805, 2161, 2162,
	2159, 2160, 170, 3762, 136, 2243, 3698, 1530, 158, 1531,
	1532, 3697, 2091, 3687, 3400, 4122, 4303, 2719, 137, 3393,
	1320, 1320, 2725, 2087, 2088, 2158, 3040, 2718, 177, 2046,
	1530, 178, 1531, 1532, 180, 3039, 92, 2092, 1530, 92,
	1531, 1532, 3038, 2113, 2099, 2100, 2101, 3154, 1530, 2044,
	1531, 1532, 2033, 1947, 1948, 169, 168, 197, 1555, 1556,
	1557, 1558, 1560, 1559, 1561, 1562, 1249, 1553, 1554, 1555,
	1556, 1557, 1558, 1560, 1559, 1561, 1562, 46, 4423, 1530,
	46, 1531, 1532, 2577, 1530, 2112, 1531, 1532, 1010, 1011,
	1012, 2048, 2032, 2089, 177, 2031, 1530, 178, 1531, 1532,
	2093, 1533, 2095, 2096, 2097, 2098, 2030, 1551, 1533, 2102,
	1547, 1530, 1548, 1531, 1532, 2135, 2020, 2014, 2135, 2011,
	2010, 2114, 2009, 197, 1533, 1980, 1780, 1549, 1563, 1564,
	1546, 1101, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560,
	1559, 1561, 1562, 1551, 3301, 3124, 1100, 1101, 2200, 2200,
	1496, 2198, 2198, 3680, 2163, 757, 2201, 3021, 1765, 757,
	163, 1949, 166, 2587, 1946, 2586, 164, 165, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1560, 1559, 1561, 1562, 2284,
	1551, 1082, 757, 181, 1539, 1540, 1541, 1542, 1543, 1544,
	1538, 1535, 187, 4338, 1805, 1858, 1533, 2585, 4361, 2584,
	4336, 1805, 1805, 2771, 1533, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1560, 1559, 1561, 1562, 4241, 1805, 3646, 2583,
	2176, 2582, 2178, 2179, 2180, 2181, 2182, 2183, 2185, 2187,
	2188, 2189, 2190, 2191, 2192, 1766, 4326, 2138, 2140, 2233,
	2138, 2136, 2137, 1101, 2136, 2137, 2177, 2391, 2170, 181,
	1530, 2769, 1531, 1532, 4149, 3361, 2393, 1530, 187, 1531,
	1532, 1529, 1805, 4142, 1576, 1533, 2390, 2120, 2121, 1533,
	4148, 2175, 1005, 1530, 1834, 1531, 1532, 1934, 4374, 4050,
	1533, 108, 2239, 1551, 4125, 2709, 2403, 2402, 4239, 1805,
	1095, 109, 4313, 1805, 2308, 4124, 4237, 1805, 1096, 1593,
	1934, 1805, 2204, 2401, 1529, 1805, 3362, 2300, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1560, 1559, 1561, 1562, 1767,
	1533, 4123, 172, 1835, 117, 4018, 2248, 2249, 2250, 2251,
	4003, 3364, 1934, 4226, 4049, 116, 2392, 115, 4002, 3851,
	2262, 1839, 1100, 1101, 2283, 1530, 3849, 1531, 1532, 1934,
	4207, 3359, 1805, 1530, 4007, 1531, 1532, 4096, 1805, 2468,
	3759, 4094, 1805, 4006, 1551, 1764, 2298, 1934, 4203, 4103,
	1805, 3375, 3376, 1805, 3731, 4139, 4026, 1805, 3360, 2400,
	1763, 1533, 2406, 2407, 1934, 4014, 2499, 1762, 172, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1560, 1559, 1561, 1562,
	111, 3731, 1805, 112, 3695, 1533, 3679, 2403, 2488, 3456,
	1805, 3632, 1838, 3366, 1530, 3453, 1531, 1532, 1530, 3396,
	1531, 1532, 111, 2529, 2401, 112, 2436, 2501, 3395, 1530,
	167, 1531, 1532, 2448, 2169, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1560, 1559, 1561, 1562, 2381, 2382, 2383, 2384,
	2385, 1551, 1099, 1533, 1934, 3729, 2611, 1805, 2442, 1145,
	2443, 3653, 1805, 2405, 2851, 1805, 2408, 2409, 1533, 1530,
	3106, 1531, 1532, 4091, 1805, 3071, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1560, 1559, 1561, 1562, 1145, 2539, 2540,
	2541, 3374, 1533, 2456, 2424, 3386, 3385, 4073, 1805, 2524,
	3383, 3384, 2426, 3377, 3049, 2533, 3036, 2534, 2535, 2536,
	2537, 2538, 2505, 1761, 1090, 2542, 2449, 3381, 3382, 1533,
	1755, 2544, 2523, 2683, 2546, 2547, 2548, 2549, 3381, 3380,
	1530, 2455, 1531, 1532, 2989, 1805, 2560, 108, 1533, 160,
	2465, 2675, 161, 110, 2600, 3612, 1805, 109, 2674, 1533,
	2566, 2693, 3093, 2527, 1530, 2478, 1531, 1532, 1533, 2486,
	3605, 1805, 3054, 2767, 1928, 3074, 1130, 2633, 1129, 2511,
	1533, 2510, 2509, 173, 1533, 2526, 1761, 2632, 2525, 2597,
	185, 1759, 3067, 3068, 3602, 1805, 1757, 2472, 117, 1758,
	1756, 2576, 1760, 2203, 1805, 3448, 2437, 2116, 2082, 116,
	2043, 115, 1530, 2035, 1531, 1532, 2025, 110, 1805, 110,
	2021, 3600, 1805, 3403, 2017, 2016, 2015, 1530, 1533, 1531,
	1532, 2605, 193, 2561, 2608, 3363, 2609, 2557, 1836, 2575,
	3563, 1805, 2625, 1310, 2550, 2552, 2553, 1934, 1933, 173,
	3488, 1530, 1805, 1531, 1532, 2528, 185, 1177, 1928, 1927,
	3561, 1805, 1176, 2561, 2979, 2607, 2604, 1961, 2603, 1533,
	2629, 2626, 3557, 1805, 2630, 2631, 3554, 1805, 1530, 2229,
	1531, 1532, 1805, 1533, 1805, 174, 179, 176, 182, 183,
	184, 186, 188, 189, 190, 191, 2698, 1530, 193, 1531,
	1532, 192, 194, 195, 196, 1076, 1076, 1076, 1530, 2637,
	1531, 1532, 1870, 1869, 3650, 3318, 2636, 1530, 1533, 1531,
	1532, 1805, 2988, 1533, 2612, 1586, 3646, 1586, 3348, 1530,
	1529, 1531, 1532, 1530, 1533, 1531, 1532, 4181, 2693, 116,
	2979, 2989, 4153, 2713, 1934, 1533, 3010, 4117, 2989, 3591,
	3383, 174, 179, 176, 182, 183, 184, 186, 188, 189,
	190, 191, 4328, 3010, 3276, 2512, 1533, 192, 194, 195,
	196, 2942, 2403, 2402, 2667, 3552, 1805, 1530, 1533, 1531,
	1532, 2851, 3649, 2989, 2754, 110, 2753, 2611, 2611, 2716,
	2221, 2210, 2211, 2212, 2213, 2223, 2214, 2215, 2216, 2228,
	2224, 2217, 2218, 2225, 2226, 2227, 2219, 2220, 2222, 2594,
	3550, 1805, 1533, 1529, 3011, 3548, 1805, 3646, 1530, 1533,
	1531, 1532, 2481, 2467, 3013, 1821, 3546, 1805, 1533, 2685,
	2427, 3011, 1530, 2203, 1531, 1532, 2141, 3544, 1805, 2125,
	2067, 2693, 1857, 1837, 2691, 1533, 1159, 1158, 4369, 2940,
	101, 1533, 4284, 4209, 4037, 2706, 1077, 2708, 3542, 1805,
	2699, 1533, 4004, 3864, 130, 1533, 2711, 1530, 2712, 1531,
	1532, 4138, 1530, 2705, 1531, 1532, 2702, 2703, 2704, 3712,
	3709, 2707, 3693, 1530, 2170, 1531, 1532, 3504, 3699, 3367,
	1533, 3503, 1930, 3371, 1530, 2559, 1531, 1532, 3405, 3401,
	3299, 3370, 2714, 3046, 3540, 1805, 1533, 103, 1996, 2677,
	2678, 3538, 1805, 3075, 2680, 1530, 2556, 1531, 1532, 3045,
	3536, 1805, 2551, 2681, 2545, 2543, 1533, 1530, 2050, 1531,
	1532, 1533, 1956, 1952, 1926, 3372, 2729, 3534, 1805, 101,
	128, 1533, 2895, 4045, 3368, 3700, 3701, 3702, 1252, 3369,
	3661, 3662, 4038, 3532, 1805, 2574, 1533, 3530, 1805, 2440,
	4367, 1530, 2118, 1531, 1532, 1997, 1998, 1999, 1530, 4320,
	1531, 1532, 3703, 3046, 2927, 1533, 4161, 1530, 4078, 1531,
	1532, 1533, 3528, 1805, 3664, 2883, 3631, 711, 2736, 3630,
	2765, 3629, 1806, 1808, 1530, 3318, 1531, 1532, 3526, 1805,
	1530, 3294, 1531, 1532, 2668, 2751, 3340, 1076, 3667, 3666,
	1530, 3341, 1531, 1532, 1530, 3338, 1531, 1532, 3524, 1805,
	3339, 3337, 1533, 3510, 1805, 3704, 3705, 3706, 3336, 2119,
	2200, 2984, 2987, 2198, 4010, 4157, 3818, 2930, 3817, 1530,
	2499, 1531, 1532, 1076, 3006, 1992, 4039, 2471, 3486, 1805,
	3342, 1533, 2998, 2999, 1833, 1530, 4311, 1531, 1532, 2928,
	2446, 3655, 3281, 2931, 2985, 2933, 774, 2916, 1805, 1533,
	2169, 1092, 46, 2914, 1805, 1530, 1533, 1531, 1532, 4120,
	1530, 3003, 1531, 1532, 3005, 3280, 2964, 1533, 3308, 3310,
	1530, 3816, 1531, 1532, 3639, 1082, 1533, 3311, 1993, 1994,
	1995, 3842, 3638, 3844, 1082, 1530, 3642, 1531, 1532, 3305,
	2983, 3004, 1773, 2948, 2889, 1805, 1533, 2066, 1060, 3028,
	1533, 2918, 1093, 3379, 1530, 3050, 1531, 1532, 2246, 2660,
	1530, 2659, 1531, 1532, 2658, 2657, 2973, 2943, 1533, 2656,
	2946, 1109, 1533, 2866, 1805, 2247, 2947, 2655, 3031, 3033,
	1533, 2654, 3034, 3079, 1827, 1108, 1215, 2962, 1766, 1533,
	2976, 2858, 1805, 1533, 2938, 1214, 108, 1533, 2849, 1805,
	3008, 1530, 110, 1531, 1532, 3464, 109, 3045, 2961, 2847,
	1805, 3118, 4309, 1533, 108, 3024, 3048, 1533, 2834, 1805,
	3090, 3051, 3052, 3015, 109, 3012, 1495, 2566, 3644, 3022,
	1530, 4343, 1531, 1532, 3081, 2166, 2164, 2165, 2832, 1805,
	137, 2426, 2830, 1805, 2483, 2484, 4244, 3025, 1530, 110,
	1531, 1532, 3037, 4399, 3298, 1530, 2671, 1531, 1532, 4033,
	2828, 1805, 3378, 1533, 2826, 1805, 1530, 1533, 1531, 1532,
	3047, 3002, 2824, 1805, 2466, 1530, 1146, 1531, 1532, 1533,
	3055, 2822, 1805, 4345, 3279, 2820, 1805, 4344, 3614, 2818,
	1805, 3087, 3278, 1944, 1533, 1530, 2697, 1531, 1532, 1530,
	1533, 1531, 1532, 2124, 2123, 3066, 3714, 3128, 3129, 3669,
	3076, 3077, 115, 1533, 117, 4102, 4101, 1530, 4081, 1531,
	1532, 1530, 3086, 1531, 1532, 116, 117, 115, 1533, 1530,
	3850, 1531, 1532, 3848, 1533, 110, 3847, 116, 1530, 115,
	1531, 1532, 1530, 3829, 1531, 1532, 1530, 1533, 1531, 1532,
	3710, 3643, 1533, 3107, 3641, 3607, 3088, 3145, 3406, 2816,
	1805, 2595, 1530, 3110, 1531, 1532, 1530, 3126, 1531, 1532,
	1533, 2814, 1805, 1939, 117, 3163, 3164, 3165, 3166, 3167,
	3168, 3169, 3170, 3171, 3172, 116, 2812, 1805, 1107, 116,
	3828, 3624, 2810, 1805, 2979, 3180, 3802, 1533, 4371, 4370,
	5, 2942, 3182, 2755, 2438, 2808, 1805, 1851, 1843, 4370,
	4371, 3146, 1530, 4126, 1531, 1532, 1530, 3678, 1531, 1532,
	2806, 1805, 121, 122, 4190, 3130, 2804, 1805, 1530, 8,
	1531, 1532, 1, 3147, 1068, 3, 1533, 1498, 1497, 2802,
	1805, 1533, 105, 1530, 3603, 1531, 1532, 3127, 3682, 1530,
	4273, 1531, 1532, 727, 2428, 3240, 1771, 4321, 1533, 4269,
	4270, 3184, 1530, 3041, 1531, 1532, 3116, 2036, 2026, 3117,
	3741, 2355, 2390, 4034, 2390, 3830, 3831, 1530, 3833, 1531,
	1532, 3409, 2601, 1530, 3708, 1531, 1532, 2564, 1167, 2800,
	1805, 162, 2521, 2522, 4221, 3148, 1530, 125, 1531, 1532,
	1133, 1530, 124, 1531, 1532, 2994, 2997, 2998, 2999, 2995,
	3258, 2996, 3000, 2499, 3247, 3661, 3662, 1170, 3249, 1530,
	1283, 1531, 1532, 2596, 3732, 3029, 2530, 1876, 2795, 1805,
	1874, 1875, 3173, 2791, 1805, 1873, 1878, 1877, 2241, 4185,
	3472, 2756, 2392, 2242, 2392, 3220, 1530, 1533, 1531, 1532,
	2789, 1805, 3570, 3325, 2501, 92, 2129, 764, 3001, 758,
	2499, 2499, 2499, 2499, 2499, 3230, 3231, 3232, 3233, 3234,
	200, 1865, 1844, 2122, 1533, 3248, 1209, 3250, 717, 3387,
	2499, 2304, 3283, 2499, 3285, 1530, 3257, 1531, 1532, 2634,
	1530, 3258, 1531, 1532, 723, 1533, 1079, 1583, 2117, 3269,
	3277, 2501, 2501, 2501, 2501, 2501, 3016, 1530, 1533, 1531,
	1532, 2078, 3347, 1533, 1127, 3330, 1119, 1097, 2439, 1082,
	2932, 2501, 3282, 3284, 2501, 1126, 1533, 3222, 3275, 3224,
	4011, 3295, 3296, 3297, 3292, 1533, 3326, 3636, 3304, 2782,
	1805, 3306, 2966, 3426, 3309, 3235, 3236, 3237, 3238, 3302,
	4119, 3349, 3841, 3434, 3350, 4342, 3439, 4208, 3312, 3313,
	1533, 2387, 3270, 3272, 3274, 1081, 3569, 3438, 3435, 3332,
	3333, 3331, 3335, 1080, 3334, 3026, 3343, 1840, 111, 3590,
	1533, 112, 2728, 2236, 1533, 1573, 3351, 3565, 3329, 1533,
	789, 2418, 3315, 2498, 3391, 3392, 1530, 960, 1531, 1532,
	2780, 1805, 1825, 3797, 2156, 3501, 787, 786, 1806, 2425,
	3321, 3390, 1533, 784, 3389, 3388, 3357, 3321, 3500, 2934,
	2980, 1537, 1536, 1530, 995, 1531, 1532, 3492, 2922, 1533,
	1852, 2993, 2991, 1533, 2990, 2669, 3407, 2566, 1533, 2506,
	3428, 3663, 1533, 3659, 1530, 4265, 1531, 1532, 2500, 2450,
	2496, 3445, 3490, 1533, 2941, 946, 945, 1530, 796, 1531,
	1532, 788, 1530, 1533, 1531, 1532, 778, 3457, 1009, 944,
	3460, 3459, 2912, 943, 3436, 1530, 2911, 1531, 1532, 3437,
	2956, 2907, 3467, 1818, 1530, 3429, 1531, 1532, 4310, 3477,
	3300, 1533, 3493, 3494, 3495, 3496, 3497, 2958, 3027, 3408,
	3474, 3475, 3288, 3476, 2906, 1533, 3478, 1514, 3480, 1530,
	3482, 1531, 1532, 1790, 1793, 2447, 1811, 3469, 4144, 2696,
	3498, 2905, 1586, 1789, 4151, 2904, 1586, 3417, 3726, 1530,
	2903, 1531, 1532, 1530, 2902, 1531, 1532, 3398, 1530, 3072,
	1531, 1532, 3615, 2588, 3617, 2893, 1533, 2994, 2997, 2998,
	2999, 2995, 1533, 2996, 3000, 2892, 1533, 3625, 74, 50,
	4111, 1530, 3468, 1531, 1532, 4182, 1533, 938, 935, 3799,
	3585, 3800, 3801, 2578, 3243, 3244, 4164, 3589, 1530, 4165,
	1531, 1532, 1530, 2891, 1531, 1532, 1533, 1530, 934, 1531,
	1532, 1530, 1533, 1531, 1532, 4166, 2293, 2890, 1508, 1533,
	1505, 3056, 1530, 2131, 1531, 1532, 104, 1533, 40, 39,
	3324, 38, 1530, 37, 1531, 1532, 36, 30, 1533, 2499,
	29, 28, 27, 26, 33, 3622, 23, 1533, 3616, 25,
	3618, 3620, 3676, 24, 22, 3439, 1533, 4381, 2887, 4382,
	1530, 1533, 1531, 1532, 2882, 4411, 3438, 3435, 2875, 3677,
	3633, 4247, 3640, 1533, 1530, 4187, 1531, 1532, 2874, 3420,
	2501, 1533, 4316, 3592, 4398, 3594, 3595, 3596, 3462, 3463,
	131, 3645, 1533, 3658, 3654, 4347, 4308, 4307, 2873, 3665,
	4258, 4387, 3668, 1533, 2872, 4253, 60, 57, 3670, 55,
	3671, 2871, 3672, 3673, 139, 1530, 138, 1531, 1532, 2870,
	58, 1530, 1533, 1531, 1532, 1530, 56, 1531, 1532, 1533,
	2869, 54, 53, 1255, 1533, 1530, 51, 1531, 1532, 2868,
	3688, 3689, 102, 35, 3694, 1533, 3696, 34, 2867, 21,
	20, 19, 18, 2861, 17, 1530, 16, 1531, 1532, 15,
	11, 1530, 10, 1531, 1532, 2860, 43, 42, 1530, 41,
	1531, 1532, 32, 2859, 31, 1533, 1530, 44, 1531, 1532,
	7, 2, 3059, 2590, 2856, 1533, 0, 1530, 3719, 1531,
	1532, 0, 3723, 3724, 3725, 2855, 1530, 0, 1531, 1532,
	3736, 3737, 0, 0, 3738, 1530, 1533, 1531, 1532, 0,
	1530, 0, 1531, 1532, 2854, 0, 0, 0, 1767, 0,
	0, 2852, 1530, 0, 1531, 1532, 2845, 0, 0, 0,
	1530, 0, 1531, 1532, 0, 3715, 3716, 2842, 0, 3753,
	0, 1530, 0, 1531, 1532, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 1531, 1532, 0, 0, 0, 3764,
	0, 0, 0, 0, 0, 0, 2715, 2840, 0, 0,
	2720, 1530, 0, 1531, 1532, 0, 0, 2838, 1530, 0,
	1531, 1532, 0, 1530, 0, 1531, 1532, 0, 0, 0,
	0, 0, 0, 2723, 1530, 2724, 1531, 1532, 2797, 0,
	0, 2732, 0, 0, 3815, 2734, 2735, 3822, 3805, 3824,
	3806, 3807, 3808, 0, 2741, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 1530, 2752, 1531, 1532, 0, 0,
	3795, 0, 3758, 776, 1530, 0, 1531, 1532, 0, 0,
	3325, 0, 0, 92, 3825, 3325, 0, 0, 2758, 2759,
	2760, 2761, 0, 2763, 2764, 1530, 2766, 1531, 1532, 0,
	2768, 0, 1533, 0, 2773, 2774, 0, 2775, 1533, 0,
	2778, 2779, 2781, 2783, 2784, 2785, 2786, 2787, 2788, 2790,
	2792, 2793, 2794, 2796, 46, 2798, 2799, 2801, 2803, 2805,
	2807, 2809, 2811, 2813, 2815, 2817, 2819, 2821, 2823, 2825,
	2827, 2829, 2831, 2833, 2835, 2836, 2837, 1082, 2839, 4017,
	2841, 2200, 2843, 2844, 2198, 2846, 2848, 2850, 3866, 3857,
	3855, 2853, 3858, 3853, 3856, 2857, 3846, 3845, 3826, 2862,
	2863, 2864, 2865, 3867, 3868, 3870, 0, 0, 0, 0,
	0, 0, 2876, 2877, 2878, 2879, 2880, 2881, 0, 1106,
	2885, 2886, 1112, 1112, 2777, 0, 0, 2888, 3786, 0,
	2776, 0, 2894, 4009, 0, 4008, 0, 2897, 2898, 2899,
	2900, 2901, 0, 0, 4036, 0, 0, 0, 2908, 2909,
	4028, 2910, 4076, 4029, 2913, 2915, 2450, 4075, 2917, 4019,
	4020, 4021, 3860, 0, 0, 3321, 0, 0, 2929, 4024,
	0, 0, 3823, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 1531, 1532, 0, 0, 1530, 0, 1531,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2963, 0, 0, 0, 0, 0, 2200, 0, 0, 2198,
	0, 0, 4012, 4079, 0, 0, 0, 4127, 3325, 4082,
	0, 0, 0, 4085, 0, 0, 0, 0, 0, 3862,
	0, 0, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1724, 1725, 1726, 1727, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 4130, 4132, 4128, 4131, 3324, 4080, 4109,
	4099, 4108, 3324, 0, 0, 1533, 4145, 4105, 0, 4107,
	0, 0, 1533, 1795, 0, 0, 0, 1533, 0, 0,
	0, 0, 4115, 0, 92, 1533, 0, 1803, 0, 0,
	1796, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 1803, 1533, 0,
	1796, 0, 0, 0, 0, 2444, 2445, 1802, 1800, 1801,
	1797, 0, 1798, 0, 0, 46, 4016, 0, 4135, 0,
	4150, 0, 0, 0, 0, 1791, 1792, 1802, 1800, 1801,
	1797, 0, 1798, 0, 0, 1799, 0, 0, 1082, 0,
	0, 0, 0, 4147, 0, 0, 0, 2772, 3158, 3159,
	3160, 3161, 3162, 4152, 2770, 1799, 0, 92, 0, 2762,
	0, 4189, 0, 0, 0, 4188, 0, 2733, 3177, 0,
	0, 0, 0, 0, 0, 4205, 0, 0, 0, 0,
	4170, 0, 0, 4171, 4137, 0, 2727, 0, 4196, 0,
	2722, 0, 0, 0, 0, 0, 0, 0, 46, 0,
	0, 0, 0, 4195, 1530, 4180, 1531, 1532, 0, 0,
	4234, 1530, 0, 1531, 1532, 0, 1530, 4155, 1531, 1532,
	0, 0, 4210, 4199, 1530, 0, 1531, 1532, 0, 0,
	0, 4219, 92, 4220, 4213, 0, 4218, 4036, 4223, 4215,
	4214, 4212, 4217, 1530, 4216, 1531, 1532, 1530, 0, 1531,
	1532, 0, 0, 0, 0, 3324, 0, 0, 0, 4242,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4260, 4259, 0, 46, 0, 4234, 0, 0, 0, 4264,
	0, 4272, 4277, 0, 0, 4300, 0, 0, 0, 92,
	4289, 0, 0, 4302, 0, 0, 0, 0, 4287, 0,
	0, 0, 0, 0, 0, 0, 0, 4200, 0, 0,
	0, 4201, 0, 0, 4299, 0, 4159, 0, 0, 4206,
	0, 0, 4304, 0, 4169, 3321, 0, 0, 0, 0,
	46, 0, 0, 0, 0, 0, 0, 4315, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	4341, 0, 0, 2078, 4330, 0, 4331, 0, 0, 0,
	0, 4334, 0, 0, 4340, 0, 0, 0, 0, 0,
	0, 0, 4360, 4252, 0, 0, 4364, 4234, 4362, 4368,
	4366, 0, 92, 0, 4385, 46, 4302, 3439, 1767, 0,
	0, 0, 4375, 0, 0, 0, 3327, 0, 3438, 3435,
	0, 4386, 4396, 0, 0, 0, 0, 0, 2200, 0,
	0, 2198, 0, 4143, 0, 4365, 3345, 4295, 0, 4400,
	0, 0, 4314, 46, 4406, 0, 4408, 0, 92, 0,
	0, 1894, 4413, 0, 0, 0, 4416, 0, 0, 0,
	0, 4419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 4425,
	0, 1534, 0, 0, 4329, 0, 92, 92, 4428, 46,
	4302, 4432, 92, 4431, 0, 4076, 4302, 4433, 0, 0,
	4434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 46, 46, 0,
	0, 0, 2200, 46, 0, 2198, 0, 0, 0, 4429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3483, 3484, 0,
	3485, 3487, 3489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3502, 1881,
	0, 0, 0, 3505, 0, 3507, 3508, 3509, 3511, 3512,
	3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522,
	3523, 3525, 3527, 3529, 3531, 3533, 3535, 3537, 3539, 3541,
	3543, 3545, 3547, 3549, 3551, 3553, 3555, 3556, 3558, 3559,
	3560, 3562, 0, 0, 3564, 0, 3566, 3567, 3568, 0,
	0, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580,
	3581, 3582, 0, 0, 0, 0, 0, 0, 0, 0,
	3588, 0, 0, 0, 3593, 0, 0, 0, 3597, 3598,
	0, 3599, 3601, 0, 3604, 3606, 0, 3608, 3609, 3610,
	3611, 0, 0, 0, 1895, 0, 0, 3619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3651, 3652, 0,
	0, 3657, 0, 0, 0, 0, 0, 0, 0, 0,
	1908, 1911, 1912, 1913, 1914, 1915, 1916, 0, 1917, 1918,
	1920, 1921, 1919, 1922, 1923, 1896, 1897, 1898, 1899, 1879,
	1880, 1909, 0, 1882, 0, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 0, 0, 1892, 1900, 1901, 1902,
	1903, 1842, 1904, 1905, 1906, 1907, 0, 0, 1893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3748, 0, 0, 3752, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 996, 1059, 1010,
	1011, 1012, 997, 0, 0, 998, 999, 0, 1000, 0,
	0, 0, 0, 0, 2083, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1013, 1014, 0, 0,
	0, 0, 0, 0, 0, 1063, 0, 1058, 0, 0,
	1101, 0, 3788, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2199, 0, 3796, 0, 0, 0, 0,
	0, 0, 3803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1910, 0, 0, 0, 1141,
	0, 0, 0, 0, 0, 0, 0, 0, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	4235, 0, 0, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 0, 0, 0, 0, 0,
	0, 0, 3442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4025, 0,
	0, 0, 0, 0, 0, 0, 0, 4032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4042, 4043, 4044, 0,
	4046, 0, 4047, 4048, 0, 0, 0, 0, 4051, 4052,
	4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4062,
	4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072,
	0, 4074, 4077, 3443, 3444, 0, 0, 0, 0, 0,
	0, 0, 0, 2151, 2152, 2153, 2154, 4086, 4087, 4088,
	4089, 4090, 4092, 4093, 4095, 4097, 4098, 4100, 0, 2167,
	0, 4104, 0, 0, 0, 4106, 0, 0, 0, 0,
	0, 0, 4116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2206, 2207, 0, 0, 0, 0,
	2230, 0, 0, 2234, 2235, 0, 0, 0, 2240, 0,
	0, 4136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 2260, 2261, 0, 2263, 0, 0, 0, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2294, 0, 2299, 0,
	2301, 2302, 2303, 0, 2305, 2306, 2307, 0, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 0, 0, 0,
	0, 0, 2386, 0, 2388, 0, 2394, 2395, 2396, 2397,
	2398, 2399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 0, 2419, 2420, 2421, 2422, 2423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4160, 0, 0,
	137, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 4175, 0, 0, 0, 0, 0, 4178, 0, 4179,
	0, 0, 2479, 2480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 4204, 158, 0, 2518, 0,
	4233, 0, 0, 1894, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 178,
	4228, 4229, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 4236, 4238, 4240, 991, 4232, 0,
	0, 146, 147, 169, 168, 197, 180, 0, 1256, 0,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2562, 0, 4263, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 4285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3023, 0, 0, 0, 0, 0, 203, 0,
	0, 203, 0, 0, 0, 762, 177, 0, 0, 178,
	768, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 4312, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 144,
	166, 151, 143, 0, 164, 165, 0, 0, 4335, 4337,
	4339, 1881, 0, 0, 768, 203, 768, 0, 768, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 153, 148, 149,
	150, 154, 4380, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4409, 4410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1895, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 4427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 0,
	1917, 1918, 1920, 1921, 1919, 1922, 1923, 1896, 1897, 1898,
	1899, 1879, 1880, 1909, 0, 1882, 0, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 0, 0, 1892, 1900,
	1901, 1902, 1903, 0, 1904, 1905, 1906, 1907, 0, 0,
	1893, 0, 2731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2737, 2738, 2739, 2740, 0, 0, 1058, 0,
	0, 0, 0, 996, 1059, 1010, 1011, 1012, 997, 0,
	172, 998, 999, 0, 1000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 1013, 1014, 0, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 0, 160, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3442, 0,
	0, 0, 0, 0, 0, 0, 2051, 1910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	193, 0, 0, 0, 198, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 1943, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 137, 0, 159,
	0, 0, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 0,
	0, 173, 0, 180, 0, 0, 0, 0, 185, 3443,
	3444, 0, 0, 174, 179, 176, 182, 183, 184, 186,
	188, 189, 190, 191, 0, 0, 0, 0, 0, 192,
	194, 195, 196, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 1948,
	169, 168, 197, 0, 203, 0, 203, 0, 0, 0,
	0, 0, 0, 174, 179, 176, 182, 183, 184, 186,
	188, 189, 190, 191, 0, 0, 0, 0, 0, 192,
	194, 195, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 0, 768, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3123, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 1949, 166, 0, 1946,
	0, 164, 165, 0, 0, 0, 0, 2144, 0, 3149,
	3150, 3151, 0, 0, 3153, 0, 0, 3155, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3174, 3175, 3176,
	0, 0, 0, 0, 0, 0, 3181, 0, 0, 0,
	0, 3183, 0, 0, 3185, 3186, 3187, 0, 0, 0,
	3188, 3189, 0, 0, 3190, 0, 3191, 0, 0, 0,
	0, 0, 0, 3192, 0, 3193, 0, 0, 0, 3194,
	0, 3195, 0, 0, 3196, 0, 3197, 0, 3198, 0,
	3199, 0, 3200, 0, 3201, 0, 3202, 0, 3203, 0,
	3204, 0, 3205, 0, 3206, 0, 3207, 0, 3208, 0,
	3209, 0, 3210, 0, 3211, 0, 3212, 0, 3213, 0,
	0, 0, 3214, 0, 3215, 0, 3216, 0, 0, 3217,
	0, 3218, 0, 3219, 0, 2358, 3221, 0, 0, 3223,
	0, 0, 3225, 3226, 3227, 3228, 0, 0, 0, 0,
	3229, 2358, 2358, 2358, 2358, 2358, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 3239, 0, 0, 0,
	0, 0, 0, 0, 3252, 0, 0, 3256, 0, 0,
	0, 0, 0, 0, 0, 0, 3259, 3260, 3261, 3262,
	3263, 3264, 0, 0, 0, 3265, 3266, 0, 3267, 0,
	3268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 768, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 3316, 0, 167, 0, 0, 1894, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 2485, 0, 0, 0, 0,
	0, 0, 0, 2489, 0, 2492, 0, 3404, 2144, 0,
	0, 768, 0, 768, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 1578, 768, 0, 0, 768, 768,
	768, 768, 0, 768, 160, 768, 768, 161, 768, 768,
	768, 768, 768, 768, 0, 0, 0, 0, 0, 0,
	0, 1578, 768, 768, 1578, 768, 1578, 203, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 185, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	768, 0, 203, 0, 0, 0, 0, 0, 3491, 0,
	0, 0, 0, 0, 0, 0, 768, 0, 0, 0,
	768, 0, 0, 203, 203, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 3506, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 179, 176, 182, 183, 184, 186, 188, 189, 190,
	191, 1895, 0, 0, 0, 0, 192, 194, 195, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2144, 0, 0, 0, 0, 0, 2644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2665,
	2666, 0, 0, 2670, 0, 0, 2673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2676, 0, 0, 0,
	0, 0, 0, 2679, 0, 0, 0, 1908, 1911, 1912,
	1913, 1914, 1915, 1916, 0, 1917, 1918, 1920, 1921, 1919,
	1922, 1923, 1896, 1897, 1898, 1899, 1879, 1880, 1909, 2682,
	1882, 0, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 0, 0, 1892, 1900, 1901, 1902, 1903, 0, 1904,
	1905, 1906, 1907, 0, 0, 1893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 768, 0,
	0, 0, 0, 0, 0, 3711, 0, 0, 0, 0,
	0, 0, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 0, 0, 0, 0, 0, 0,
	3754, 0, 3755, 0, 3756, 0, 3757, 0, 0, 0,
	0, 1578, 0, 0, 3760, 3761, 0, 0, 0, 0,
	0, 0, 0, 0, 3766, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 3767, 767,
	3768, 0, 3769, 0, 3770, 0, 3771, 0, 3772, 0,
	3773, 0, 3774, 0, 3775, 0, 3776, 0, 3777, 0,
	3778, 0, 3779, 0, 3780, 0, 3781, 0, 3782, 0,
	0, 3783, 0, 0, 0, 3784, 0, 3785, 0, 0,
	0, 0, 1910, 3787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 0, 767, 0, 767, 0, 0,
	0, 0, 0, 0, 0, 3804, 0, 0, 0, 0,
	0, 0, 0, 0, 3809, 0, 3810, 3811, 0, 3812,
	0, 3813, 0, 0, 0, 0, 3814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3863, 0, 0, 3865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3869, 0, 203, 0, 0, 0, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 48, 49, 93, 0, 3007, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 203,
	98, 0, 0, 0, 52, 81, 82, 0, 79, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 203, 0, 0, 0, 768, 0, 0, 2404, 203,
	0, 203, 103, 203, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 0,
	0, 0, 67, 0, 0, 0, 0, 0, 0, 91,
	48, 49, 93, 0, 101, 4417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 0,
	0, 0, 52, 81, 82, 0, 79, 83, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 4114, 0, 0, 0, 768, 0, 0, 0,
	103, 0, 768, 0, 88, 0, 0, 0, 0, 0,
	3095, 3096, 3097, 3098, 3099, 3100, 0, 0, 768, 0,
	67, 0, 0, 0, 768, 768, 0, 0, 768, 0,
	768, 0, 101, 0, 0, 0, 768, 0, 0, 2144,
	3111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3119, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 768, 0, 0, 0,
	768, 768, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 59, 62, 61, 64, 0, 78, 0, 0, 87,
	84, 0, 4193, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 4192, 0,
	0, 0, 0, 0, 0, 203, 203, 0, 0, 203,
	0, 203, 203, 4194, 66, 97, 96, 0, 0, 76,
	77, 63, 203, 0, 0, 0, 0, 85, 86, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 59,
	62, 61, 64, 0, 78, 203, 0, 87, 84, 0,
	0, 0, 203, 0, 0, 0, 0, 768, 0, 0,
	0, 4191, 69, 0, 70, 71, 72, 73, 0, 4158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 97, 96, 0, 0, 76, 77, 63,
	0, 0, 0, 0, 0, 85, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4172, 0, 0, 4173, 0,
	4174, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	0, 1578, 0, 2404, 0, 0, 0, 0, 0, 68,
	69, 0, 70, 71, 72, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3286, 3287, 0, 3291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4251, 0, 0, 0,
	0, 0, 767, 1489, 767, 767, 0, 0, 0, 0,
	94, 0, 0, 4283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4296, 0, 4297, 0, 4298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 3432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3446, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	100, 3458, 0, 0, 3461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	4378, 0, 4379, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 768, 768, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 0, 0, 0, 766, 0, 4414, 4415,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	1137, 0, 1144, 0, 1148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 0, 0, 0, 0, 0, 0, 3621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 0, 3627, 3628, 0, 0, 0,
	768, 0, 0, 0, 768, 768, 75, 0, 0, 768,
	0, 0, 767, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1578, 768, 0, 0, 0,
	91, 48, 49, 93, 0, 0, 203, 203, 203, 203,
	203, 203, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 0, 0, 52, 81, 82, 0, 79, 83, 767,
	0, 0, 0, 0, 0, 203, 203, 0, 0, 80,
	0, 0, 0, 0, 767, 0, 0, 0, 0, 3692,
	0, 103, 0, 0, 0, 767, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 767, 101, 0, 1058, 0, 768, 0, 0,
	767, 1059, 0, 1577, 767, 0, 0, 767, 767, 767,
	767, 2199, 767, 0, 767, 767, 0, 767, 767, 767,
	767, 767, 767, 0, 0, 0, 0, 0, 0, 0,
	1577, 767, 767, 1577, 767, 1577, 0, 767, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4384, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 0, 0, 0, 767,
	0, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 0, 767, 0, 0, 0, 0, 95,
	59, 62, 61, 64, 0, 78, 0, 0, 87, 84,
	0, 4193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 0, 0, 0, 0, 4192, 0, 0,
	0, 0, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 4194, 66, 97, 96, 0, 0, 76, 77,
	63, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 0, 0, 0, 0, 768, 0, 0, 3837, 0,
	0, 3838, 3839, 3840, 0, 0, 0, 0, 0, 0,
	203, 203, 203, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4191, 69, 0, 70, 71, 72, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 0, 0, 0, 1578,
	0, 0, 768, 0, 0, 768, 1578, 203, 203, 203,
	203, 203, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 203, 0, 203, 0, 0,
	203, 203, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 65, 0, 0,
	0, 91, 48, 49, 93, 0, 767, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 767, 0, 0, 52, 81, 82, 0, 79, 83,
	0, 0, 0, 0, 0, 768, 0, 0, 1578, 0,
	80, 0, 0, 768, 0, 0, 0, 0, 203, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 0, 203, 0, 0,
	203, 0, 767, 0, 101, 0, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 0, 94,
	0, 2208, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 1322,
	0, 1322, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 59, 62, 61, 64, 0, 78, 0, 0, 87,
	84, 0, 4193, 0, 0, 203, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4192, 0,
	0, 203, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4194, 66, 97, 96, 0, 0, 76,
	77, 63, 0, 0, 0, 0, 0, 85, 86, 0,
	0, 0, 0, 0, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	4156, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	767, 4191, 69, 0, 70, 71, 72, 73, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 767, 0, 201, 767, 0, 710,
	0, 0, 0, 768, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	0, 0, 0, 0, 0, 0, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 768, 768, 768,
	0, 0, 0, 0, 1113, 1113, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 1777,
	1778, 0, 0, 0, 0, 767, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 0, 0,
	0, 0, 0, 767, 767, 0, 0, 767, 0, 767,
	0, 0, 0, 0, 0, 767, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1925, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 767, 0, 0, 0, 767,
	767, 0, 0, 0, 0, 0, 0, 1137, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 1966, 0, 0, 1969, 1970, 1972, 1972, 0, 1972,
	0, 1972, 1972, 0, 1981, 1972, 1972, 1972, 1972, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 2001, 2002,
	0, 1137, 0, 768, 2007, 768, 0, 203, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 203, 203, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 1578, 0, 2049, 0, 203, 0,
	0, 768, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 2070, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 1322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 0, 767, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 0, 0, 0, 0, 0, 0,
	768, 0, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1322, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 0, 0, 767, 767, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 203, 0, 0, 0,
	0, 0, 710, 0, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 710, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 1578, 768, 0, 768, 0, 0,
	0, 0, 0, 1322, 1579, 0, 0, 0, 0, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 767,
	0, 768, 2404, 767, 767, 0, 0, 0, 767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 767, 0, 0, 0, 0,
	0, 0, 0, 2441, 0, 0, 0, 0, 0, 0,
	0, 768, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 0, 1137, 0, 0, 0, 0, 0,
	0, 0, 768, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1144, 0, 0, 0, 0, 0, 2581, 0,
	0, 0, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1137, 0, 0, 0, 0, 0,
	1144, 1964, 0, 0, 1964, 0, 1964, 0, 0, 0,
	0, 0, 2610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1137, 0, 0,
	0, 0, 2194, 0, 0, 768, 2194, 2194, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 0, 0, 0, 0, 0, 0,
	0, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	710, 0, 0, 0, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 767, 0, 0, 0, 1577, 0,
	0, 767, 0, 2687, 767, 1577, 0, 0, 0, 1579,
	0, 0, 1579, 0, 1579, 710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 0, 1058, 0, 0, 0,
	710, 996, 1059, 1010, 1011, 1012, 997, 0, 0, 998,
	999, 0, 1000, 0, 0, 0, 0, 3394, 0, 0,
	0, 2077, 710, 0, 0, 0, 0, 0, 1005, 1322,
	1013, 1014, 0, 0, 767, 0, 0, 1577, 710, 0,
	0, 0, 767, 0, 0, 710, 0, 0, 0, 0,
	0, 0, 0, 0, 2103, 2104, 710, 710, 710, 710,
	710, 710, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3440, 3441, 0, 0, 0, 0, 0, 0, 0, 3465,
	0, 0, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3443, 3444, 0,
	2935, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2951, 2952, 2953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1579, 0, 3681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 961, 0, 0, 0, 0, 0,
	965, 0, 767, 767, 962, 963, 0, 0, 0, 964,
	966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 767, 767, 767, 1148,
	0, 0, 0, 0, 0, 0, 3073, 0, 0, 0,
	1964, 1964, 0, 0, 0, 3078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2194, 0, 0, 1113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 767, 0, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 2194, 0, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 2077, 710, 0, 710,
	0, 710, 2508, 1577, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 3241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 767,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 1322, 0, 0, 0, 0, 710, 0, 3328, 0,
	0, 1972, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 710, 0, 0, 710, 0, 2672,
	710, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	2684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1137, 0, 0, 0, 0, 0, 0, 0, 1148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1579,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1577, 767, 0, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 0, 0, 2954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1148,
	1148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 710, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 767, 0, 0,
	0, 0, 3742, 3743, 3744, 3745, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 710, 710, 710, 710, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3820,
	0, 3820, 0, 0, 0, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3859, 0, 0,
	3861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3820,
	0, 0, 0, 0, 0, 0, 3820, 0, 3820, 0,
	0, 0, 0, 0, 0, 0, 0, 4118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1148, 0,
	0, 0, 0, 0, 0, 0, 1113, 0, 710, 710,
	710, 0, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1579, 0, 0,
	0, 0, 0, 0, 1579, 710, 710, 710, 710, 710,
	0, 0, 0, 0, 0, 0, 0, 3344, 0, 0,
	0, 0, 0, 2023, 0, 710, 0, 0, 710, 3352,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1579, 0, 1148, 0,
	0, 0, 0, 0, 0, 0, 710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1148, 0, 0, 0, 710, 0, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1148, 0, 4202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1322, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4254, 4262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4267,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 710,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3891, 3893, 3892, 3958, 3959, 3960, 3961, 3962, 3963,
	3964, 3894, 3895, 838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 1148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 4267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3907, 3908, 0, 0, 3983, 3982, 3981, 0,
	0, 3979, 3980, 3978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 710, 0, 0, 710, 710, 710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1579, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3984,
	961, 0, 814, 815, 3985, 3986, 965, 3987, 817, 818,
	962, 963, 0, 812, 816, 964, 966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 3888, 3889, 3890, 3896, 3897, 3898, 3909, 3956,
	3957, 3965, 3967, 917, 3966, 3968, 3969, 3970, 3973, 3974,
	3975, 3976, 3971, 3972, 3977, 3871, 3875, 3872, 3873, 3874,
	3886, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884,
	3885, 3887, 3988, 3989, 3990, 3991, 3992, 3993, 3902, 3906,
	3905, 3903, 3904, 3900, 3901, 3928, 3927, 3929, 3930, 3931,
	3932, 3933, 3934, 3936, 3935, 3937, 3938, 3939, 3940, 3941,
	3942, 3910, 3911, 3914, 3915, 3913, 3912, 3916, 3925, 3926,
	3917, 3918, 3919, 3920, 3921, 3922, 3924, 3923, 3943, 3944,
	3945, 3946, 3947, 3949, 3948, 3952, 3953, 3951, 3950, 3955,
	3954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 967, 0, 968, 0, 0, 972,
	0, 0, 0, 974, 973, 0, 975, 937, 936, 0,
	0, 969, 970, 0, 971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 1472, 1451, 557, 0, 1392, 1475,
	1357, 1378, 1485, 1381, 1384, 1429, 1332, 1407, 438, 1375,
	1361, 1327, 1369, 1328, 1359, 1394, 286, 1356, 1453, 1411,
	1474, 385, 283, 1334, 1325, 212, 530, 1362, 453, 1380,
	211, 1432, 511, 268, 396, 393, 615, 298, 289, 285,
	264, 336, 405, 450, 547, 444, 1481, 389, 1417, 651,
	522, 422, 1579, 0, 0, 1458, 1457, 1385, 1396, 1463,
	1405, 1444, 1390, 1431, 1344, 1416, 1476, 1376, 1426, 1477,
	342, 262, 344, 210, 435, 523, 302, 0, 0, 0,
	4222, 4224, 536, 992, 0, 0, 0, 0, 4225, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 1372, 1423, 641, 1470, 1373, 1425, 281, 340,
	288, 280, 612, 1482, 1462, 1331, 1404, 1469, 1399, 628,
	2023, 0, 238, 1473, 1398, 0, 1428, 0, 1488, 1326,
	1419, 0, 1329, 1333, 1484, 1467, 1365, 1366, 291, 0,
	0, 0, 0, 0, 0, 0, 1395, 1406, 1441, 1445,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 1415, 0, 0, 0, 1338, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 0, 1393,
	0, 0, 0, 0, 1343, 0, 1364, 1442, 0, 1324,
	313, 1335, 423, 273, 0, 477, 1355, 319, 334, 1341,
	1370, 1471, 1459, 1460, 1461, 1340, 1449, 1466, 1389, 662,
	1468, 1387, 1386, 1436, 1339, 1456, 1379, 384, 1337, 349,
	205, 233, 0, 1377, 434, 485, 497, 1455, 1454, 1360,
	1371, 269, 1368, 495, 448, 636, 243, 300, 482, 455,
	493, 463, 303, 1414, 1434, 494, 391, 617, 473, 633,
	663, 664, 279, 428, 647, 551, 656, 681, 234, 276,
	442, 535, 639, 519, 417, 613, 614, 348, 518, 311,
	209, 388, 669, 232, 503, 390, 253, 241, 619, 644,
	315, 267, 305, 480, 676, 221, 546, 630, 250, 507,
	0, 0, 684, 258, 529, 642, 631, 223, 626, 528,
	413, 345, 346, 222, 0, 481, 284, 309, 0, 0,
	274, 437, 621, 622, 272, 685, 237, 655, 228, 1336,
	654, 430, 616, 627, 414, 402, 227, 625, 412, 401,
	353, 374, 375, 296, 324, 470, 394, 471, 323, 325,
	425, 424, 426, 215, 640, 659, 0, 216, 0, 524,
	643, 686, 475, 220, 244, 245, 248, 1354, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 469, 465, 474,
	1450, 610, 634, 648, 661, 667, 668, 670, 671, 672,
	673, 674, 677, 675, 429, 329, 520, 352, 392, 1439,
	1487, 447, 496, 251, 638, 521, 240, 604, 418, 427,
	259, 261, 260, 235, 512, 609, 246, 266, 207, 1348,
	1353, 1346, 0, 270, 271, 1420, 605, 1349, 1347, 1409,
	1410, 1350, 1478, 1479, 1480, 1464, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 682, 537, 543, 538, 539, 540,
	541, 542, 0, 544, 1443, 1342, 0, 1351, 1352, 419,
	1452, 623, 624, 705, 403, 510, 635, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 608, 330,
	224, 225, 226, 553, 554, 555, 556, 652, 653, 657,
	213, 486, 487, 488, 489, 308, 646, 326, 492, 491,
	350, 351, 398, 472, 569, 571, 582, 586, 588, 590,
	596, 599, 570, 572, 583, 587, 589, 591, 597, 600,
	559, 561, 563, 565, 578, 577, 574, 602, 603, 580,
	585, 564, 576, 581, 594, 601, 598, 558, 562, 566,
	575, 593, 592, 573, 584, 595, 579, 567, 560, 568,
	1413, 204, 229, 387, 1483, 478, 304, 683, 650, 508,
	645, 214, 231, 1345, 278, 1358, 1367, 0, 1374, 1382,
	1383, 1397, 1400, 1401, 1402, 1403, 1421, 1422, 1424, 1433,
	1435, 1438, 1440, 1447, 1465, 1486, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 454,
	458, 459, 460, 462, 464, 466, 479, 484, 498, 499,
	500, 501, 502, 505, 506, 513, 514, 515, 516, 517,
	525, 526, 531, 532, 533, 534, 545, 618, 620, 637,
	658, 665, 504, 404, 452, 476, 611, 1430, 1391, 317,
	318, 467, 468, 332, 333, 679, 680, 316, 632, 666,
	629, 678, 660, 461, 397, 1412, 1418, 400, 297, 322,
	339, 1427, 649, 527, 236, 490, 306, 265, 1446, 1448,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	457, 312, 287, 255, 483, 252, 509, 548, 549, 550,
	552, 415, 282, 456, 1408, 1437, 395, 606, 607, 335,
	416, 0, 0, 0, 0, 0, 0, 1472, 1451, 557,
	0, 1392, 1475, 1357, 1378, 1485, 1381, 1384, 1429, 1332,
	1407, 438, 1375, 1361, 1327, 1369, 1328, 1359, 1394, 286,
	1356, 1453, 1411, 1474, 385, 283, 1334, 1325, 212, 530,
	1362, 453, 1380, 211, 1432, 511, 268, 396, 393, 615,
	298, 289, 285, 264, 336, 405, 450, 547, 444, 1481,
	389, 1417, 651, 522, 422, 0, 0, 0, 1458, 1457,
	1385, 1396, 1463, 1405, 1444, 1390, 1431, 1344, 1416, 1476,
	1376, 1426, 1477, 342, 262, 344, 210, 435, 523, 302,
	0, 0, 0, 0, 0, 536, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 1372, 1423, 641, 1470, 1373,
	1425, 281, 340, 288, 280, 612, 1482, 1462, 1331, 1404,
	1469, 1399, 628, 0, 0, 238, 1473, 1398, 0, 1428,
	0, 1488, 1326, 1419, 0, 1329, 1333, 1484, 1467, 1365,
	1366, 291, 0, 0, 0, 0, 0, 0, 0, 1395,
	1406, 1441, 1445, 1388, 0, 0, 0, 0, 0, 0,
	3353, 0, 1363, 0, 1415, 0, 0, 0, 1338, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1393, 0, 0, 0, 0, 1343, 0, 1364,
	1442, 0, 1324, 313, 1335, 423, 273, 0, 477, 1355,
	319, 334, 1341, 1370, 1471, 1459, 1460, 1461, 1340, 1449,
	1466, 1389, 662, 1468, 1387, 1386, 1436, 1339, 1456, 1379,
	384, 1337, 349, 205, 233, 0, 1377, 434, 485, 497,
	1455, 1454, 1360, 1371, 269, 1368, 495, 448, 636, 243,
	300, 482, 455, 493, 463, 303, 1414, 1434, 494, 391,
	617, 473, 633, 663, 664, 279, 428, 647, 551, 656,
	681, 234, 276, 442, 535, 639, 519, 417, 613, 614,
	348, 518, 311, 209, 388, 669, 232, 503, 390, 253,
	241, 619, 644, 315, 267, 305, 480, 676, 221, 546,
	630, 250, 507, 0, 0, 684, 258, 529, 642, 631,
	223, 626, 528, 413, 345, 346, 222, 0, 481, 284,
	309, 0, 0, 274, 437, 621, 622, 272, 685, 237,
	655, 228, 1336, 654, 430, 616, 627, 414, 402, 227,
	625, 412, 401, 353, 374, 375, 296, 324, 470, 394,
	471, 323, 325, 425, 424, 426, 215, 640, 659, 0,
	216, 0, 524, 643, 686, 475, 220, 244, 245, 248,
	1354, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	469, 465, 474, 1450, 610, 634, 648, 661, 667, 668,
	670, 671, 672, 673, 674, 677, 675, 429, 329, 520,
	352, 392, 1439, 1487, 447, 496, 251, 638, 521, 240,
	604, 418, 427, 259, 261, 260, 235, 512, 609, 246,
	266, 207, 1348, 1353, 1346, 0, 270, 271, 1420, 605,
	1349, 1347, 1409, 1410, 1350, 1478, 1479, 1480, 1464, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 682, 537, 543,
	538, 539, 540, 541, 542, 0, 544, 1443, 1342, 0,
	1351, 1352, 419, 1452, 623, 624, 705, 403, 510, 635,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 608, 330, 224, 225, 226, 553, 554, 555, 556,
	652, 653, 657, 213, 486, 487, 488, 489, 308, 646,
	326, 492, 491, 350, 351, 398, 472, 569, 571, 582,
	586, 588, 590, 596, 599, 570, 572, 583, 587, 589,
	591, 597, 600, 559, 561, 563, 565, 578, 577, 574,
	602, 603, 580, 585, 564, 576, 581, 594, 601, 598,
	558, 562, 566, 575, 593, 592, 573, 584, 595, 579,
	567, 560, 568, 1413, 204, 229, 387, 1483, 478, 304,
	683, 650, 508, 645, 214, 231, 1345, 278, 1358, 1367,
	0, 1374, 1382, 1383, 1397, 1400, 1401, 1402, 1403, 1421,
	1422, 1424, 1433, 1435, 1438, 1440, 1447, 1465, 1486, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 454, 458, 459, 460, 462, 464, 466, 479,
	484, 498, 499, 500, 501, 502, 505, 506, 513, 514,
	515, 516, 517, 525, 526, 531, 532, 533, 534, 545,
	618, 620, 637, 658, 665, 504, 404, 452, 476, 611,
	1430, 1391, 317, 318, 467, 468, 332, 333, 679, 680,
	316, 632, 666, 629, 678, 660, 461, 397, 1412, 1418,
	400, 297, 322, 339, 1427, 649, 527, 236, 490, 306,
	265, 1446, 1448, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 457, 312, 287, 255, 483, 252, 509,
	548, 549, 550, 552, 415, 282, 456, 1408, 1437, 395,
	606, 607, 335, 416, 0, 0, 0, 0, 0, 0,
	1472, 1451, 557, 0, 1392, 1475, 1357, 1378, 1485, 1381,
	1384, 1429, 1332, 1407, 438, 1375, 1361, 1327, 1369, 1328,
	1359, 1394, 286, 1356, 1453, 1411, 1474, 385, 283, 1334,
	1325, 212, 530, 1362, 453, 1380, 211, 1432, 511, 268,
	396, 393, 615, 298, 289, 285, 264, 336, 405, 450,
	547, 444, 1481, 389, 1417, 651, 522, 422, 0, 0,
	0, 1458, 1457, 1385, 1396, 1463, 1405, 1444, 1390, 1431,
	1344, 1416, 1476, 1376, 1426, 1477, 342, 262, 344, 210,
	435, 523, 302, 0, 0, 0, 0, 0, 536, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 1372, 1423,
	641, 1470, 1373, 1425, 281, 340, 288, 280, 612, 1482,
	1462, 1331, 1404, 1469, 1399, 628, 0, 0, 238, 1473,
	1398, 0, 1428, 0, 1488, 1326, 1419, 0, 1329, 1333,
	1484, 1467, 1365, 1366, 291, 0, 0, 0, 0, 0,
	0, 0, 1395, 1406, 1441, 1445, 1388, 0, 0, 0,
	0, 0, 0, 3314, 0, 1363, 0, 1415, 0, 0,
	0, 1338, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1393, 0, 0, 0, 0,
	1343, 0, 1364, 1442, 0, 1324, 313, 1335, 423, 273,
	0, 477, 1355, 319, 334, 1341, 1370, 1471, 1459, 1460,
	1461, 1340, 1449, 1466, 1389, 662, 1468, 1387, 1386, 1436,
	1339, 1456, 1379, 384, 1337, 349, 205, 233, 0, 1377,
	434, 485, 497, 1455, 1454, 1360, 1371, 269, 1368, 495,
	448, 636, 243, 300, 482, 455, 493, 463, 303, 1414,
	1434, 494, 391, 617, 473, 633, 663, 664, 279, 428,
	647, 551, 656, 681, 234, 276, 442, 535, 639, 519,
	417, 613, 614, 348, 518, 311, 209, 388, 669, 232,
	503, 390, 253, 241, 619, 644, 315, 267, 305, 480,
	676, 221, 546, 630, 250, 507, 0, 0, 684, 258,
	529, 642, 631, 223, 626, 528, 413, 345, 346, 222,
	0, 481, 284, 309, 0, 0, 274, 437, 621, 622,
	272, 685, 237, 655, 228, 1336, 654, 430, 616, 627,
	414, 402, 227, 625, 412, 401, 353, 374, 375, 296,
	324, 470, 394, 471, 323, 325, 425, 424, 426, 215,
	640, 659, 0, 216, 0, 524, 643, 686, 475, 220,
	244, 245, 248, 1354, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 469, 465, 474, 1450, 610, 634, 648,
	661, 667, 668, 670, 671, 672, 673, 674, 677, 675,
	429, 329, 520, 352, 392, 1439, 1487, 447, 496, 251,
	638, 521, 240, 604, 418, 427, 259, 261, 260, 235,
	512, 609, 246, 266, 207, 1348, 1353, 1346, 0, 270,
	271, 1420, 605, 1349, 1347, 1409, 1410, 1350, 1478, 1479,
	1480, 1464, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	682, 537, 543, 538, 539, 540, 541, 542, 0, 544,
	1443, 1342, 0, 1351, 1352, 419, 1452, 623, 624, 705,
	403, 510, 635, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 608, 330, 224, 225, 226, 553,
	554, 555, 556, 652, 653, 657, 213, 486, 487, 488,
	489, 308, 646, 326, 492, 491, 350, 351, 398, 472,
	569, 571, 582, 586, 588, 590, 596, 599, 570, 572,
	583, 587, 589, 591, 597, 600, 559, 561, 563, 565,
	578, 577, 574, 602, 603, 580, 585, 564, 576, 581,
	594, 601, 598, 558, 562, 566, 575, 593, 592, 573,
	584, 595, 579, 567, 560, 568, 1413, 204, 229, 387,
	1483, 478, 304, 683, 650, 508, 645, 214, 231, 1345,
	278, 1358, 1367, 0, 1374, 1382, 1383, 1397, 1400, 1401,
	1402, 1403, 1421, 1422, 1424, 1433, 1435, 1438, 1440, 1447,
	1465, 1486, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 454, 458, 459, 460, 462,
	464, 466, 479, 484, 498, 499, 500, 501, 502, 505,
	506, 513, 514, 515, 516, 517, 525, 526, 531, 532,
	533, 534, 545, 618, 620, 637, 658, 665, 504, 404,
	452, 476, 611, 1430, 1391, 317, 318, 467, 468, 332,
	333, 679, 680, 316, 632, 666, 629, 678, 660, 461,
	397, 1412, 1418, 400, 297, 322, 339, 1427, 649, 527,
	236, 490, 306, 265, 1446, 1448, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 457, 312, 287, 255,
	483, 252, 509, 548, 549, 550, 552, 415, 282, 456,
	1408, 1437, 395, 606, 607, 335, 416, 0, 0, 0,
	0, 0, 0, 1472, 1451, 557, 0, 1392, 1475, 1357,
	1378, 1485, 1381, 1384, 1429, 1332, 1407, 438, 1375, 1361,
	1327, 1369, 1328, 1359, 1394, 286, 1356, 1453, 1411, 1474,
	385, 283, 1334, 1325, 212, 530, 1362, 453, 1380, 211,
	1432, 511, 268, 396, 393, 615, 298, 289, 285, 264,
	336, 405, 450, 547, 444, 1481, 389, 1417, 651, 522,
	422, 0, 0, 0, 1458, 1457, 1385, 1396, 1463, 1405,
	1444, 1390, 1431, 1344, 1416, 1476, 1376, 1426, 1477, 342,
	262, 344, 210, 435, 523, 302, 0, 0, 0, 0,
	0, 536, 992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 1372, 1423, 641, 1470, 1373, 1425, 281, 340, 288,
	280, 612, 1482, 1462, 1331, 1404, 1469, 1399, 628, 0,
	0, 238, 1473, 1398, 0, 1428, 0, 1488, 1326, 1419,
	0, 1329, 1333, 1484, 1467, 1365, 1366, 291, 0, 0,
	0, 0, 0, 0, 0, 1395, 1406, 1441, 1445, 1388,
	0, 0, 0, 0, 0, 0, 2487, 0, 1363, 0,
	1415, 0, 0, 0, 1338, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1393, 0,
	0, 0, 0, 1343, 0, 1364, 1442, 0, 1324, 313,
	1335, 423, 273, 0, 477, 1355, 319, 334, 1341, 1370,
	1471, 1459, 1460, 1461, 1340, 1449, 1466, 1389, 662, 1468,
	1387, 1386, 1436, 1339, 1456, 1379, 384, 1337, 349, 205,
	233, 0, 1377, 434, 485, 497, 1455, 1454, 1360, 1371,
	269, 1368, 495, 448, 636, 243, 300, 482, 455, 493,
	463, 303, 1414, 1434, 494, 391, 617, 473, 633, 663,
	664, 279, 428, 647, 551, 656, 681, 234, 276, 442,
	535, 639, 519, 417, 613, 614, 348, 518, 311, 209,
	388, 669, 232, 503, 390, 253, 241, 619, 644, 315,
	267, 305, 480, 676, 221, 546, 630, 250, 507, 0,
	0, 684, 258, 529, 642, 631, 223, 626, 528, 413,
	345, 346, 222, 0, 481, 284, 309, 0, 0, 274,
	437, 621, 622, 272, 685, 237, 655, 228, 1336, 654,
	430, 616, 627, 414, 402, 227, 625, 412, 401, 353,
	374, 375, 296, 324, 470, 394, 471, 323, 325, 425,
	424, 426, 215, 640, 659, 0, 216, 0, 524, 643,
	686, 475, 220, 244, 245, 248, 1354, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 469, 465, 474, 1450,
	610, 634, 648, 661, 667, 668, 670, 671, 672, 673,
	674, 677, 675, 429, 329, 520, 352, 392, 1439, 1487,
	447, 496, 251, 638, 521, 240, 604, 418, 427, 259,
	261, 260, 235, 512, 609, 246, 266, 207, 1348, 1353,
	1346, 0, 270, 271, 1420, 605, 1349, 1347, 1409, 1410,
	1350, 1478, 1479, 1480, 1464, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 682, 537, 543, 538, 539, 540, 541,
	542, 0, 544, 1443, 1342, 0, 1351, 1352, 419, 1452,
	623, 624, 705, 403, 510, 635, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 608, 330, 224,
	225, 226, 553, 554, 555, 556, 652, 653, 657, 213,
	486, 487, 488, 489, 308, 646, 326, 492, 491, 350,
	351, 398, 472, 569, 571, 582, 586, 588, 590, 596,
	599, 570, 572, 583, 587, 589, 591, 597, 600, 559,
	561, 563, 565, 578, 577, 574, 602, 603, 580, 585,
	564, 576, 581, 594, 601, 598, 558, 562, 566, 575,
	593, 592, 573, 584, 595, 579, 567, 560, 568, 1413,
	204, 229, 387, 1483, 478, 304, 683, 650, 508, 645,
	214, 231, 1345, 278, 1358, 1367, 0, 1374, 1382, 1383,
	1397, 1400, 1401, 1402, 1403, 1421, 1422, 1424, 1433, 1435,
	1438, 1440, 1447, 1465, 1486, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 454, 458,
	459, 460, 462, 464, 466, 479, 484, 498, 499, 500,
	501, 502, 505, 506, 513, 514, 515, 516, 517, 525,
	526, 531, 532, 533, 534, 545, 618, 620, 637, 658,
	665, 504, 404, 452, 476, 611, 1430, 1391, 317, 318,
	467, 468, 332, 333, 679, 680, 316, 632, 666, 629,
	678, 660, 461, 397, 1412, 1418, 400, 297, 322, 339,
	1427, 649, 527, 236, 490, 306, 265, 1446, 1448, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 457,
	312, 287, 255, 483, 252, 509, 548, 549, 550, 552,
	415, 282, 456, 1408, 1437, 395, 606, 607, 335, 416,
	0, 0, 0, 0, 0, 0, 1472, 1451, 557, 0,
	1392, 1475, 1357, 1378, 1485, 1381, 1384, 1429, 1332, 1407,
	438, 1375, 1361, 1327, 1369, 1328, 1359, 1394, 286, 1356,
	1453, 1411, 1474, 385, 283, 1334, 1325, 212, 530, 1362,
	453, 1380, 211, 1432, 511, 268, 396, 393, 615, 298,
	289, 285, 264, 336, 405, 450, 547, 444, 1481, 389,
	1417, 651, 522, 422, 0, 0, 0, 1458, 1457, 1385,
	1396, 1463, 1405, 1444, 1390, 1431, 1344, 1416, 1476, 1376,
	1426, 1477, 342, 262, 344, 210, 435, 523, 302, 0,
	101, 0, 0, 0, 536, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 1372, 1423, 641, 1470, 1373, 1425,
	281, 340, 288, 280, 612, 1482, 1462, 1331, 1404, 1469,
	1399, 628, 0, 0, 238, 1473, 1398, 0, 1428, 0,
	1488, 1326, 1419, 0, 1329, 1333, 1484, 1467, 1365, 1366,
	291, 0, 0, 0, 0, 0, 0, 0, 1395, 1406,
	1441, 1445, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 1363, 0, 1415, 0, 0, 0, 1338, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1393, 0, 0, 0, 0, 1343, 0, 1364, 1442,
	0, 1324, 313, 1335, 423, 273, 0, 477, 1355, 319,
	334, 1341, 1370, 1471, 1459, 1460, 1461, 1340, 1449, 1466,
	1389, 662, 1468, 1387, 1386, 1436, 1339, 1456, 1379, 384,
	1337, 349, 205, 233, 0, 1377, 434, 485, 497, 1455,
	1454, 1360, 1371, 269, 1368, 495, 448, 636, 243, 300,
	482, 455, 493, 463, 303, 1414, 1434, 494, 391, 617,
	473, 633, 663, 664, 279, 428, 647, 551, 656, 681,
	234, 276, 442, 535, 639, 519, 417, 613, 614, 348,
	518, 311, 209, 388, 669, 232, 503, 390, 253, 241,
	619, 644, 315, 267, 305, 480, 676, 221, 546, 630,
	250, 507, 0, 0, 684, 258, 529, 642, 631, 223,
	626, 528, 413, 345, 346, 222, 0, 481, 284, 309,
	0, 0, 274, 437, 621, 622, 272, 685, 237, 655,
	228, 1336, 654, 430, 616, 627, 414, 402, 227, 625,
	412, 401, 353, 374, 375, 296, 324, 470, 394, 471,
	323, 325, 425, 424, 426, 215, 640, 659, 0, 216,
	0, 524, 643, 686, 475, 220, 244, 245, 248, 1354,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 469,
	465, 474, 1450, 610, 634, 648, 661, 667, 668, 670,
	671, 672, 673, 674, 677, 675, 429, 329, 520, 352,
	392, 1439, 1487, 447, 496, 251, 638, 521, 240, 604,
	418, 427, 259, 261, 260, 235, 512, 609, 246, 266,
	207, 1348, 1353, 1346, 0, 270, 271, 1420, 605, 1349,
	1347, 1409, 1410, 1350, 1478, 1479, 1480, 1464, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 682, 537, 543, 538,
	539, 540, 541, 542, 0, 544, 1443, 1342, 0, 1351,
	1352, 419, 1452, 623, 624, 705, 403, 510, 635, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	608, 330, 224, 225, 226, 553, 554, 555, 556, 652,
	653, 657, 213, 486, 487, 488, 489, 308, 646, 326,
	492, 491, 350, 351, 398, 472, 569, 571, 582, 586,
	588, 590, 596, 599, 570, 572, 583, 587, 589, 591,
	597, 600, 559, 561, 563, 565, 578, 577, 574, 602,
	603, 580, 585, 564, 576, 581, 594, 601, 598, 558,
	562, 566, 575, 593, 592, 573, 584, 595, 579, 567,
	560, 568, 1413, 204, 229, 387, 1483, 478, 304, 683,
	650, 508, 645, 214, 231, 1345, 278, 1358, 1367, 0,
	1374, 1382, 1383, 1397, 1400, 1401, 1402, 1403, 1421, 1422,
	1424, 1433, 1435, 1438, 1440, 1447, 1465, 1486, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 454, 458, 459, 460, 462, 464, 466, 479, 484,
	498, 499, 500, 501, 502, 505, 506, 513, 514, 515,
	516, 517, 525, 526, 531, 532, 533, 534, 545, 618,
	620, 637, 658, 665, 504, 404, 452, 476, 611, 1430,
	1391, 317, 318, 467, 468, 332, 333, 679, 680, 316,
	632, 666, 629, 678, 660, 461, 397, 1412, 1418, 400,
	297, 322, 339, 1427, 649, 527, 236, 490, 306, 265,
	1446, 1448, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 457, 312, 287, 255, 483, 252, 509, 548,
	549, 550, 552, 415, 282, 456, 1408, 1437, 395, 606,
	607, 335, 416, 0, 0, 0, 0, 0, 0, 1472,
	1451, 557, 0, 1392, 1475, 1357, 1378, 1485, 1381, 1384,
	1429, 1332, 1407, 438, 1375, 1361, 1327, 1369, 1328, 1359,
	1394, 286, 1356, 1453, 1411, 1474, 385, 283, 1334, 1325,
	212, 530, 1362, 453, 1380, 211, 1432, 511, 268, 396,
	393, 615, 298, 289, 285, 264, 336, 405, 450, 547,
	444, 1481, 389, 1417, 651, 522, 422, 0, 0, 0,
	1458, 1457, 1385, 1396, 1463, 1405, 1444, 1390, 1431, 1344,
	1416, 1476, 1376, 1426, 1477, 342, 262, 344, 210, 435,
	523, 302, 0, 0, 0, 0, 0, 536, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 1372, 1423, 641,
	1470, 1373, 1425, 281, 340, 288, 280, 612, 1482, 1462,
	1331, 1404, 1469, 1399, 628, 0, 0, 238, 1473, 1398,
	0, 1428, 0, 1488, 1326, 1419, 0, 1329, 1333, 1484,
	1467, 1365, 1366, 291, 0, 0, 0, 0, 0, 0,
	0, 1395, 1406, 1441, 1445, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 0, 1415, 0, 0, 0,
	1338, 1330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1393, 0, 0, 0, 0, 1343,
	0, 1364, 1442, 0, 1324, 313, 1335, 423, 273, 0,
	477, 1355, 319, 334, 1341, 1370, 1471, 1459, 1460, 1461,
	1340, 1449, 1466, 1389, 662, 1468, 1387, 1386, 1436, 1339,
	1456, 1379, 384, 1337, 349, 205, 233, 0, 1377, 434,
	485, 497, 1455, 1454, 1360, 1371, 269, 1368, 495, 448,
	636, 243, 300, 482, 455, 493, 463, 303, 1414, 1434,
	494, 391, 617, 473, 633, 663, 664, 279, 428, 647,
	551, 656, 681, 234, 276, 442, 535, 639, 519, 417,
	613, 614, 348, 518, 311, 209, 388, 669, 232, 503,
	390, 253, 241, 619, 644, 315, 267, 305, 480, 676,
	221, 546, 630, 250, 507, 0, 0, 684, 258, 529,
	642, 631, 223, 626, 528, 413, 345, 346, 222, 0,
	481, 284, 309, 0, 0, 274, 437, 621, 622, 272,
	685, 237, 655, 228, 1336, 654, 430, 616, 627, 414,
	402, 227, 625, 412, 401, 353, 374, 375, 296, 324,
	470, 394, 471, 323, 325, 425, 424, 426, 215, 640,
	659, 0, 216, 0, 524, 643, 686, 475, 220, 244,
	245, 248, 1354, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 469, 465, 474, 1450, 610, 634, 648, 661,
	667, 668, 670, 671, 672, 673, 674, 677, 675, 429,
	329, 520, 352, 392, 1439, 1487, 447, 496, 251, 638,
	521, 240, 604, 418, 427, 259, 261, 260, 235, 512,
	609, 246, 266, 207, 1348, 1353, 1346, 0, 270, 271,
	1420, 605, 1349, 1347, 1409, 1410, 1350, 1478, 1479, 1480,
	1464, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 682,
	537, 543, 538, 539, 540, 541, 542, 0, 544, 1443,
	1342, 0, 1351, 1352, 419, 1452, 623, 624, 705, 403,
	510, 635, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 608, 330, 224, 225, 226, 553, 554,
	555, 556, 652, 653, 657, 213, 486, 487, 488, 489,
	308, 646, 326, 492, 491, 350, 351, 398, 472, 569,
	571, 582, 586, 588, 590, 596, 599, 570, 572, 583,
	587, 589, 591, 597, 600, 559, 561, 563, 565, 578,
	577, 574, 602, 603, 580, 585, 564, 576, 581, 594,
	601, 598, 558, 562, 566, 575, 593, 592, 573, 584,
	595, 579, 567, 560, 568, 1413, 204, 229, 387, 1483,
	478, 304, 683, 650, 508, 645, 214, 231, 1345, 278,
	1358, 1367, 0, 1374, 1382, 1383, 1397, 1400, 1401, 1402,
	1403, 1421, 1422, 1424, 1433, 1435, 1438, 1440, 1447, 1465,
	1486, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 454, 458, 459, 460, 462, 464,
	466, 479, 484, 498, 499, 500, 501, 502, 505, 506,
	513, 514, 515, 516, 517, 525, 526, 531, 532, 533,
	534, 545, 618, 620, 637, 658, 665, 504, 404, 452,
	476, 611, 1430, 1391, 317, 318, 467, 468, 332, 333,
	679, 680, 316, 632, 666, 629, 678, 660, 461, 397,
	1412, 1418, 400, 297, 322, 339, 1427, 649, 527, 236,
	490, 306, 265, 1446, 1448, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 457, 312, 287, 255, 483,
	252, 509, 548, 549, 550, 552, 415, 282, 456, 1408,
	1437, 395, 606, 607, 335, 416, 0, 0, 0, 0,
	0, 0, 1472, 1451, 557, 0, 1392, 1475, 1357, 1378,
	1485, 1381, 1384, 1429, 1332, 1407, 438, 1375, 1361, 1327,
	1369, 1328, 1359, 1394, 286, 1356, 1453, 1411, 1474, 385,
	283, 1334, 1325, 212, 530, 1362, 453, 1380, 211, 1432,
	511, 268, 396, 393, 615, 298, 289, 285, 264, 336,
	405, 450, 547, 444, 1481, 389, 1417, 651, 522, 422,
	0, 0, 0, 1458, 1457, 1385, 1396, 1463, 1405, 1444,
	1390, 1431, 1344, 1416, 1476, 1376, 1426, 1477, 342, 262,
	344, 210, 435, 523, 302, 0, 0, 0, 0, 0,
	536, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	1372, 1423, 641, 1470, 1373, 1425, 281, 340, 288, 280,
	612, 1482, 1462, 1331, 1404, 1469, 1399, 628, 0, 0,
	238, 1473, 1398, 0, 1428, 0, 1488, 1326, 1419, 0,
	1329, 1333, 1484, 1467, 1365, 1366, 291, 0, 0, 0,
	0, 0, 0, 0, 1395, 1406, 1441, 1445, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 1363, 0, 1415,
	0, 0, 0, 1338, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1393, 0, 0,
	0, 0, 1343, 0, 1364, 1442, 0, 1324, 313, 1335,
	423, 273, 0, 477, 1355, 319, 334, 1341, 1370, 1471,
	1459, 1460, 1461, 1340, 1449, 1466, 1389, 662, 1468, 1387,
	1386, 1436, 1339, 1456, 1379, 384, 1337, 349, 205, 233,
	0, 1377, 434, 485, 497, 1455, 1454, 1360, 1371, 269,
	1368, 495, 448, 636, 243, 300, 482, 455, 493, 463,
	303, 1414, 1434, 494, 391, 617, 473, 633, 663, 664,
	279, 428, 647, 551, 656, 681, 234, 276, 442, 535,
	639, 519, 417, 613, 614, 348, 518, 311, 209, 388,
	669, 232, 503, 390, 253, 241, 619, 644, 315, 267,
	305, 480, 676, 221, 546, 630, 250, 507, 0, 0,
	684, 258, 529, 642, 631, 223, 626, 528, 413, 345,
	346, 222, 0, 481, 284, 309, 0, 0, 274, 437,
	621, 622, 272, 685, 237, 655, 228, 1336, 654, 430,
	616, 627, 414, 402, 227, 625, 412, 401, 353, 374,
	375, 296, 324, 470, 394, 471, 323, 325, 425, 424,
	426, 215, 640, 659, 0, 216, 0, 524, 643, 686,
	475, 220, 244, 245, 248, 1354, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 469, 465, 474, 1450, 610,
	634, 648, 661, 667, 668, 670, 671, 672, 673, 674,
	677, 675, 429, 329, 520, 352, 392, 1439, 1487, 447,
	496, 251, 638, 521, 240, 604, 418, 427, 259, 261,
	260, 235, 512, 609, 246, 266, 207, 1348, 1353, 1346,
	0, 270, 271, 1420, 605, 1349, 1347, 1409, 1410, 1350,
	1478, 1479, 1480, 1464, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 682, 537, 543, 538, 539, 540, 541, 542,
	0, 544, 1443, 1342, 0, 1351, 1352, 419, 1452, 623,
	624, 705, 403, 510, 635, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 608, 330, 224, 225,
	226, 553, 554, 555, 556, 652, 653, 657, 213, 486,
	487, 488, 489, 308, 646, 326, 492, 491, 350, 351,
	398, 472, 569, 571, 582, 586, 588, 590, 596, 599,
	570, 572, 583, 587, 589, 591, 597, 600, 559, 561,
	563, 565, 578, 577, 574, 602, 603, 580, 585, 564,
	576, 581, 594, 601, 598, 558, 562, 566, 575, 593,
	592, 573, 584, 595, 579, 567, 560, 568, 1413, 204,
	229, 387, 1483, 478, 304, 683, 650, 508, 645, 214,
	231, 1345, 278, 1358, 1367, 0, 1374, 1382, 1383, 1397,
	1400, 1401, 1402, 1403, 1421, 1422, 1424, 1433, 1435, 1438,
	1440, 1447, 1465, 1486, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 454, 458, 459,
	460, 462, 464, 466, 479, 484, 498, 499, 500, 501,
	502, 505, 506, 513, 514, 515, 516, 517, 525, 526,
	531, 532, 533, 534, 545, 618, 620, 637, 658, 665,
	504, 404, 452, 476, 611, 1430, 1391, 317, 318, 467,
	468, 332, 333, 679, 680, 316, 632, 666, 629, 678,
	660, 461, 397, 1412, 1418, 400, 297, 322, 339, 1427,
	649, 527, 236, 490, 306, 265, 1446, 1448, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 457, 312,
	287, 255, 483, 252, 509, 548, 549, 550, 552, 415,
	282, 456, 1408, 1437, 395, 606, 607, 335, 416, 0,
	0, 0, 0, 0, 0, 1472, 1451, 557, 0, 1392,
	1475, 1357, 1378, 1485, 1381, 1384, 1429, 1332, 1407, 438,
	1375, 1361, 1327, 1369, 1328, 1359, 1394, 286, 1356, 1453,
	1411, 1474, 385, 283, 1334, 1325, 212, 530, 1362, 453,
	1380, 211, 1432, 511, 268, 396, 393, 615, 298, 289,
	285, 264, 336, 405, 450, 547, 444, 1481, 389, 1417,
	651, 522, 422, 0, 0, 0, 1458, 1457, 1385, 1396,
	1463, 1405, 1444, 1390, 1431, 1344, 1416, 1476, 1376, 1426,
	1477, 342, 262, 344, 210, 435, 523, 302, 0, 0,
	0, 0, 0, 536, 992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 1372, 1423, 641, 1470, 1373, 1425, 281,
	340, 288, 280, 612, 1482, 1462, 1331, 1404, 1469, 1399,
	628, 0, 0, 238, 1473, 1398, 0, 1428, 0, 1488,
	1326, 1419, 0, 1329, 1333, 1484, 1467, 1365, 1366, 291,
	0, 0, 0, 0, 0, 0, 0, 1395, 1406, 1441,
	1445, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	1363, 0, 1415, 0, 0, 0, 1338, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1393, 0, 0, 0, 0, 1343, 0, 1364, 1442, 0,
	1324, 313, 1335, 423, 273, 0, 477, 1355, 319, 334,
	1341, 1370, 1471, 1459, 1460, 1461, 1340, 1449, 1466, 1389,
	662, 1468, 1387, 1386, 1436, 1339, 1456, 1379, 384, 1337,
	349, 205, 233, 0, 1377, 434, 485, 497, 1455, 1454,
	1360, 1371, 269, 1368, 495, 448, 636, 243, 300, 482,
	455, 493, 463, 303, 1414, 1434, 494, 391, 617, 473,
	633, 663, 664, 279, 428, 647, 551, 656, 681, 234,
	276, 442, 535, 639, 519, 417, 613, 614, 348, 518,
	311, 209, 388, 669, 232, 503, 390, 253, 241, 619,
	644, 315, 267, 305, 480, 676, 221, 546, 630, 250,
	507, 0, 0, 684, 258, 529, 642, 631, 223, 626,
	528, 413, 345, 346, 222, 0, 481, 284, 309, 0,
	0, 274, 437, 621, 622, 272, 685, 237, 655, 228,
	1336, 654, 430, 616, 627, 414, 402, 227, 625, 412,
	401, 353, 374, 375, 296, 324, 470, 394, 471, 323,
	325, 425, 424, 426, 215, 640, 659, 0, 216, 0,
	524, 643, 686, 475, 220, 244, 245, 248, 1354, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 469, 465,
	474, 1450, 610, 634, 648, 661, 667, 668, 670, 671,
	672, 673, 674, 677, 675, 429, 329, 520, 352, 392,
	1439, 1487, 447, 496, 251, 638, 521, 240, 604, 418,
	427, 259, 261, 260, 235, 512, 609, 246, 266, 207,
	1348, 1353, 1346, 0, 270, 271, 1420, 605, 1349, 1347,
	1409, 1410, 1350, 1478, 1479, 1480, 1464, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 682, 537, 543, 538, 539,
	540, 541, 542, 0, 544, 1443, 1342, 0, 1351, 1352,
	419, 1452, 623, 624, 705, 403, 510, 635, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 608,
	330, 224, 225, 226, 553, 554, 555, 556, 652, 653,
	657, 213, 486, 487, 488, 489, 308, 646, 326, 492,
	491, 350, 351, 398, 472, 569, 571, 582, 586, 588,
	590, 596, 599, 570, 572, 583, 587, 589, 591, 597,
	600, 559, 561, 563, 565, 578, 577, 574, 602, 603,
	580, 585, 564, 576, 581, 594, 601, 598, 558, 562,
	566, 575, 593, 592, 573, 584, 595, 579, 567, 560,
	568, 1413, 204, 229, 387, 1483, 478, 304, 683, 650,
	508, 645, 214, 231, 1345, 278, 1358, 1367, 0, 1374,
	1382, 1383, 1397, 1400, 1401, 1402, 1403, 1421, 1422, 1424,
	1433, 1435, 1438, 1440, 1447, 1465, 1486, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	454, 458, 459, 460, 462, 464, 466, 479, 484, 498,
	499, 500, 501, 502, 505, 506, 513, 514, 515, 516,
	517, 525, 526, 531, 532, 533, 534, 545, 618, 620,
	637, 658, 665, 504, 404, 452, 476, 611, 1430, 1391,
	317, 318, 467, 468, 332, 333, 679, 680, 316, 632,
	666, 629, 678, 660, 461, 397, 1412, 1418, 400, 297,
	322, 339, 1427, 649, 527, 236, 490, 306, 265, 1446,
	1448, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 457, 312, 287, 255, 483, 252, 509, 548, 549,
	550, 552, 415, 282, 456, 1408, 1437, 395, 606, 607,
	335, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 0, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 797, 0, 0, 0,
	286, 802, 0, 0, 0, 385, 283, 0, 0, 212,
	530, 0, 453, 0, 211, 0, 511, 268, 396, 393,
	615, 298, 289, 285, 264, 336, 405, 450, 547, 444,
	809, 389, 0, 651, 522, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 523,
	302, 0, 101, 0, 0, 1058, 536, 992, 781, 958,
	996, 1059, 1010, 1011, 1012, 997, 0, 249, 998, 999,
	256, 1000, 0, 957, 840, 842, 841, 907, 908, 909,
	910, 911, 912, 913, 843, 844, 838, 1005, 641, 1013,
	1014, 0, 281, 340, 288, 280, 612, 0, 0, 2295,
	2296, 2297, 0, 628, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 777, 794, 0, 808, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	792, 0, 0, 0, 0, 952, 0, 793, 0, 0,
	801, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 477,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	951, 0, 0, 662, 0, 0, 949, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 485,
	497, 0, 0, 0, 0, 1002, 0, 495, 448, 636,
	243, 300, 482, 455, 493, 463, 303, 0, 0, 494,
	391, 617, 473, 633, 663, 664, 279, 428, 647, 551,
	656, 681, 234, 276, 442, 535, 639, 519, 417, 613,
	614, 348, 518, 311, 209, 388, 669, 232, 503, 390,
	253, 241, 619, 644, 315, 267, 305, 480, 676, 221,
	546, 630, 250, 507, 0, 0, 684, 258, 529, 642,
	631, 223, 626, 528, 413, 345, 346, 222, 0, 481,
	284, 309, 0, 0, 274, 437, 1003, 1004, 272, 685,
	848, 655, 228, 0, 654, 430, 616, 627, 414, 402,
	227, 625, 412, 401, 353, 856, 857, 296, 324, 933,
	932, 931, 323, 325, 929, 930, 928, 215, 640, 659,
	0, 216, 0, 524, 643, 686, 475, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 469, 465, 474, 0, 610, 634, 648, 661, 667,
	668, 670, 671, 672, 673, 674, 677, 675, 429, 329,
	520, 352, 392, 0, 0, 447, 496, 251, 638, 521,
	240, 604, 418, 427, 259, 261, 260, 235, 512, 609,
	246, 266, 939, 961, 950, 814, 815, 940, 941, 965,
	942, 817, 818, 962, 963, 811, 812, 816, 964, 966,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 682, 537,
	543, 538, 539, 540, 541, 542, 0, 544, 953, 800,
	799, 0, 806, 807, 0, 836, 837, 839, 845, 846,
	847, 858, 905, 906, 914, 916, 917, 915, 918, 919,
	920, 923, 924, 925, 926, 921, 922, 927, 819, 823,
	820, 821, 822, 834, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 835, 976, 977, 978, 979, 980,
	981, 851, 855, 854, 852, 853, 849, 850, 877, 876,
	878, 879, 880, 881, 882, 883, 885, 884, 886, 887,
	888, 889, 890, 891, 859, 860, 863, 864, 862, 861,
	865, 874, 875, 866, 867, 868, 869, 870, 871, 873,
	872, 892, 893, 894, 895, 896, 898, 897, 901, 902,
	900, 899, 904, 903, 798, 204, 229, 387, 0, 478,
	304, 683, 650, 508, 645, 214, 231, 967, 278, 968,
	0, 0, 972, 0, 0, 0, 974, 973, 0, 975,
	937, 936, 0, 0, 969, 970, 0, 971, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 454, 458, 459, 460, 462, 464, 466,
	479, 484, 498, 499, 500, 501, 502, 505, 506, 513,
	514, 515, 516, 517, 525, 526, 531, 532, 533, 534,
	545, 618, 620, 637, 658, 665, 504, 404, 452, 476,
	611, 0, 0, 982, 983, 984, 985, 986, 987, 988,
	989, 316, 632, 666, 629, 678, 660, 461, 397, 0,
	0, 400, 297, 322, 339, 0, 649, 527, 236, 490,
	306, 265, 1057, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 457, 312, 287, 255, 483, 252,
	509, 548, 549, 550, 552, 415, 282, 456, 416, 0,
	395, 606, 607, 335, 0, 0, 0, 557, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 797, 0, 0, 0, 286, 802, 0,
	0, 0, 385, 283, 0, 0, 212, 530, 0, 453,
	0, 211, 0, 511, 268, 396, 393, 615, 298, 289,
	285, 264, 336, 405, 450, 547, 444, 809, 389, 0,
	651, 522, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 805, 0, 0, 0, 0, 0, 0, 2516,
	0, 342, 262, 344, 210, 435, 523, 302, 0, 101,
	0, 0, 1058, 536, 992, 781, 958, 996, 1059, 1010,
	1011, 1012, 997, 0, 249, 998, 999, 256, 1000, 0,
	957, 840, 842, 841, 907, 908, 909, 910, 911, 912,
	913, 843, 844, 838, 1005, 641, 1013, 1014, 2517, 281,
	340, 288, 280, 612, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 777, 794, 0, 808, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 791, 792, 0, 0,
	0, 0, 952, 0, 793, 0, 0, 801, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 477, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 951, 0, 0,
	662, 0, 0, 949, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 485, 497, 0, 0,
	0, 0, 1002, 0, 495, 448, 636, 243, 300, 482,
	455, 493, 463, 303, 0, 0, 494, 391, 617, 473,
	633, 663, 664, 279, 428, 647, 551, 656, 681, 234,
	276, 442, 535, 639, 519, 417, 613, 614, 348, 518,
	311, 209, 388, 669, 232, 503, 390, 253, 241, 619,
	644, 315, 267, 305, 480, 676, 221, 546, 630, 250,
	507, 0, 0, 684, 258, 529, 642, 631, 223, 626,
	528, 413, 345, 346, 222, 0, 481, 284, 309, 0,
	0, 274, 437, 1003, 1004, 272, 685, 848, 655, 228,
	0, 654, 430, 616, 627, 414, 402, 227, 625, 412,
	401, 353, 856, 857, 296, 324, 933, 932, 931, 323,
	325, 929, 930, 928, 215, 640, 659, 0, 216, 0,
	524, 643, 686, 475, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 469, 465,
	474, 0, 610, 634, 648, 661, 667, 668, 670, 671,
	672, 673, 674, 677, 675, 429, 329, 520, 352, 392,
	0, 0, 447, 496, 251, 638, 521, 240, 604, 418,
	427, 259, 261, 260, 235, 512, 609, 246, 266, 939,
	961, 950, 814, 815, 940, 941, 965, 942, 817, 818,
	962, 963, 811, 812, 816, 964, 966, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 682, 537, 543, 538, 539,
	540, 541, 542, 0, 544, 953, 800, 799, 0, 806,
	807, 0, 836, 837, 839, 845, 846, 847, 858, 905,
	906, 914, 916, 917, 915, 918, 919, 920, 923, 924,
	925, 926, 921, 922, 927, 819, 823, 820, 821, 822,
	834, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 835, 976, 977, 978, 979, 980, 981, 851, 855,
	854, 852, 853, 849, 850, 877, 876, 878, 879, 880,
	881, 882, 883, 885, 884, 886, 887, 888, 889, 890,
	891, 859, 860, 863, 864, 862, 861, 865, 874, 875,
	866, 867, 868, 869, 870, 871, 873, 872, 892, 893,
	894, 895, 896, 898, 897, 901, 902, 900, 899, 904,
	903, 798, 204, 229, 387, 0, 478, 304, 683, 650,
	508, 645, 214, 231, 967, 278, 968, 0, 0, 972,
	0, 0, 0, 974, 973, 0, 975, 937, 936, 0,
	0, 969, 970, 0, 971, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	454, 458, 459, 460, 462, 464, 466, 479, 484, 498,
	499, 500, 501, 502, 505, 506, 513, 514, 515, 516,
	517, 525, 526, 531, 532, 533, 534, 545, 618, 620,
	637, 658, 665, 504, 404, 452, 476, 611, 0, 0,
	982, 983, 984, 985, 986, 987, 988, 989, 316, 632,
	666, 629, 678, 660, 461, 397, 0, 0, 400, 297,
	322, 339, 0, 649, 527, 236, 490, 306, 265, 1057,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 457, 312, 287, 255, 483, 252, 509, 548, 549,
	550, 552, 415, 282, 456, 416, 0, 395, 606, 607,
	335, 0, 0, 91, 557, 0, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	797, 0, 0, 0, 286, 802, 0, 0, 0, 385,
	283, 0, 0, 212, 530, 0, 453, 0, 211, 0,
	511, 268, 396, 393, 615, 298, 289, 285, 264, 336,
	405, 450, 547, 444, 1768, 389, 0, 651, 522, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 805,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 523, 302, 0, 101, 0, 0, 1058,
	536, 992, 781, 958, 996, 1059, 1010, 1011, 1012, 997,
	0, 249, 998, 999, 256, 1000, 0, 957, 840, 842,
	841, 907, 908, 909, 910, 911, 912, 913, 843, 844,
	838, 1005, 641, 1013, 1014, 0, 281, 340, 288, 280,
	612, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 777, 794,
	0, 808, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 791, 792, 0, 0, 0, 0, 952,
	0, 793, 0, 0, 801, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 477, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 951, 0, 0, 662, 0, 0,
	949, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 485, 497, 0, 0, 0, 0, 1002,
	0, 495, 448, 636, 243, 300, 482, 455, 493, 463,
	303, 0, 0, 494, 391, 617, 473, 633, 663, 664,
	279, 428, 647, 551, 656, 681, 234, 276, 442, 535,
	639, 519, 417, 613, 614, 348, 518, 311, 209, 388,
	669, 232, 503, 390, 253, 241, 619, 644, 315, 267,
	305, 480, 676, 221, 546, 630, 250, 507, 0, 0,
	684, 258, 529, 642, 631, 223, 626, 528, 413, 345,
	346, 222, 0, 481, 284, 309, 0, 0, 274, 437,
	1003, 1004, 272, 685, 848, 655, 228, 0, 654, 430,
	616, 627, 414, 402, 227, 625, 412, 401, 353, 856,
	857, 296, 324, 933, 932, 931, 323, 325, 929, 930,
	928, 215, 640, 659, 0, 216, 0, 524, 643, 686,
	475, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 469, 465, 474, 0, 610,
	634, 648, 661, 667, 668, 670, 671, 672, 673, 674,
	677, 675, 429, 329, 520, 352, 392, 0, 0, 447,
	496, 251, 638, 521, 240, 604, 418, 427, 259, 261,
	260, 235, 512, 609, 246, 266, 939, 961, 950, 814,
	815, 940, 941, 965, 942, 817, 818, 962, 963, 811,
	812, 816, 964, 966, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 682, 537, 543, 538, 539, 540, 541, 542,
	0, 544, 953, 800, 799, 0, 806, 807, 0, 836,
	837, 839, 845, 846, 847, 858, 905, 906, 914, 916,
	917, 915, 918, 919, 920, 923, 924, 925, 926, 921,
	922, 927, 819, 823, 820, 821, 822, 834, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 835, 976,
	977, 978, 979, 980, 981, 851, 855, 854, 852, 853,
	849, 850, 877, 876, 878, 879, 880, 881, 882, 883,
	885, 884, 886, 887, 888, 889, 890, 891, 859, 860,
	863, 864, 862, 861, 865, 874, 875, 866, 867, 868,
	869, 870, 871, 873, 872, 892, 893, 894, 895, 896,
	898, 897, 901, 902, 900, 899, 904, 903, 798, 204,
	229, 387, 100, 478, 304, 683, 650, 508, 645, 214,
	231, 967, 278, 968, 0, 0, 972, 0, 0, 0,
	974, 973, 0, 975, 937, 936, 0, 0, 969, 970,
	0, 971, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 454, 458, 459,
	460, 462, 464, 466, 479, 484, 498, 499, 500, 501,
	502, 505, 506, 513, 514, 515, 516, 517, 525, 526,
	531, 532, 533, 534, 545, 618, 620, 637, 658, 665,
	504, 404, 452, 476, 611, 0, 0, 982, 983, 984,
	985, 986, 987, 988, 989, 316, 632, 666, 629, 678,
	660, 461, 397, 0, 0, 400, 297, 322, 339, 0,
	649, 527, 236, 490, 306, 265, 1057, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 457, 312,
	287, 255, 483, 252, 509, 548, 549, 550, 552, 415,
	282, 456, 416, 0, 395, 606, 607, 335, 0, 0,
	0, 557, 0, 810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 797, 0, 0,
	0, 286, 802, 0, 0, 0, 385, 283, 0, 0,
	212, 530, 0, 453, 0, 211, 0, 511, 268, 396,
	393, 615, 298, 289, 285, 264, 336, 405, 450, 547,
	444, 809, 389, 0, 651, 522, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 805, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	523, 302, 0, 101, 0, 0, 1058, 536, 992, 781,
	958, 996, 1059, 1010, 1011, 1012, 997, 0, 249, 998,
	999, 256, 1000, 0, 957, 840, 842, 841, 907, 908,
	909, 910, 911, 912, 913, 843, 844, 838, 1005, 641,
	1013, 1014, 0, 281, 340, 288, 280, 612, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 777, 794, 0, 808, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	791, 792, 0, 0, 0, 0, 952, 0, 793, 0,
	0, 801, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	477, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 951, 0, 0, 662, 0, 0, 949, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	485, 497, 0, 0, 0, 0, 1002, 0, 495, 448,
	636, 243, 300, 482, 455, 493, 463, 303, 4211, 0,
	494, 391, 617, 473, 633, 663, 664, 279, 428, 647,
	551, 656, 681, 234, 276, 442, 535, 639, 519, 417,
	613, 614, 348, 518, 311, 209, 388, 669, 232, 503,
	390, 253, 241, 619, 644, 315, 267, 305, 480, 676,
	221, 546, 630, 250, 507, 0, 0, 684, 258, 529,
	642, 631, 223, 626, 528, 413, 345, 346, 222, 0,
	481, 284, 309, 0, 0, 274, 437, 1003, 1004, 272,
	685, 848, 655, 228, 0, 654, 430, 616, 627, 414,
	402, 227, 625, 412, 401, 353, 856, 857, 296, 324,
	933, 932, 931, 323, 325, 929, 930, 928, 215, 640,
	659, 0, 216, 0, 524, 643, 686, 475, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 469, 465, 474, 0, 610, 634, 648, 661,
	667, 668, 670, 671, 672, 673, 674, 677, 675, 429,
	329, 520, 352, 392, 0, 0, 447, 496, 251, 638,
	521, 240, 604, 418, 427, 259, 261, 260, 235, 512,
	609, 246, 266, 939, 961, 950, 814, 815, 940, 941,
	965, 942, 817, 818, 962, 963, 811, 812, 816, 964,
	966, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 682,
	537, 543, 538, 539, 540, 541, 542, 0, 544, 953,
	800, 799, 0, 806, 807, 0, 836, 837, 839, 845,
	846, 847, 858, 905, 906, 914, 916, 917, 915, 918,
	919, 920, 923, 924, 925, 926, 921, 922, 927, 819,
	823, 820, 821, 822, 834, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 835, 976, 977, 978, 979,
	980, 981, 851, 855, 854, 852, 853, 849, 850, 877,
	876, 878, 879, 880, 881, 882, 883, 885, 884, 886,
	887, 888, 889, 890, 891, 859, 860, 863, 864, 862,
	861, 865, 874, 875, 866, 867, 868, 869, 870, 871,
	873, 872, 892, 893, 894, 895, 896, 898, 897, 901,
	902, 900, 899, 904, 903, 798, 204, 229, 387, 0,
	478, 304, 683, 650, 508, 645, 214, 231, 967, 278,
	968, 0, 0, 972, 0, 0, 0, 974, 973, 0,
	975, 937, 936, 0, 0, 969, 970, 0, 971, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 454, 458, 459, 460, 462, 464,
	466, 479, 484, 498, 499, 500, 501, 502, 505, 506,
	513, 514, 515, 516, 517, 525, 526, 531, 532, 533,
	534, 545, 618, 620, 637, 658, 665, 504, 404, 452,
	476, 611, 0, 0, 982, 983, 984, 985, 986, 987,
	988, 989, 316, 632, 666, 629, 678, 660, 461, 397,
	0, 0, 400, 297, 322, 339, 0, 649, 527, 236,
	490, 306, 265, 1057, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 457, 312, 287, 255, 483,
	252, 509, 548, 549, 550, 552, 415, 282, 456, 416,
	0, 395, 606, 607, 335, 0, 0, 0, 557, 0,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 797, 0, 0, 0, 286, 802,
	0, 0, 0, 385, 283, 0, 0, 212, 530, 0,
	453, 0, 211, 0, 511, 268, 396, 393, 615, 298,
	289, 285, 264, 336, 405, 450, 547, 444, 809, 389,
	0, 651, 522, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 805, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 523, 302, 0,
	101, 0, 1805, 1058, 536, 992, 781, 958, 996, 1059,
	1010, 1011, 1012, 997, 0, 249, 998, 999, 256, 1000,
	0, 957, 840, 842, 841, 907, 908, 909, 910, 911,
	912, 913, 843, 844, 838, 1005, 641, 1013, 1014, 0,
	281, 340, 288, 280, 612, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 777, 794, 0, 808, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 791, 792, 0,
	0, 0, 0, 952, 0, 793, 0, 0, 801, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 477, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 951, 0,
	0, 662, 0, 0, 949, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 485, 497, 0,
	0, 0, 0, 1002, 0, 495, 448, 636, 243, 300,
	482, 455, 493, 463, 303, 0, 0, 494, 391, 617,
	473, 633, 663, 664, 279, 428, 647, 551, 656, 681,
	234, 276, 442, 535, 639, 519, 417, 613, 614, 348,
	518, 311, 209, 388, 669, 232, 503, 390, 253, 241,
	619, 644, 315, 267, 305, 480, 676, 221, 546, 630,
	250, 507, 0, 0, 684, 258, 529, 642, 631, 223,
	626, 528, 413, 345, 346, 222, 0, 481, 284, 309,
	0, 0, 274, 437, 1003, 1004, 272, 685, 848, 655,
	228, 0, 654, 430, 616, 627, 414, 402, 227, 625,
	412, 401, 353, 856, 857, 296, 324, 933, 932, 931,
	323, 325, 929, 930, 928, 215, 640, 659, 0, 216,
	0, 524, 643, 686, 475, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 469,
	465, 474, 0, 610, 634, 648, 661, 667, 668, 670,
	671, 672, 673, 674, 677, 675, 429, 329, 520, 352,
	392, 0, 0, 447, 496, 251, 638, 521, 240, 604,
	418, 427, 259, 261, 260, 235, 512, 609, 246, 266,
	939, 961, 950, 814, 815, 940, 941, 965, 942, 817,
	818, 962, 963, 811, 812, 816, 964, 966, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 682, 537, 543, 538,
	539, 540, 541, 542, 0, 544, 953, 800, 799, 0,
	806, 807, 0, 836, 837, 839, 845, 846, 847, 858,
	905, 906, 914, 916, 917, 915, 918, 919, 920, 923,
	924, 925, 926, 921, 922, 927, 819, 823, 820, 821,
	822, 834, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 835, 976, 977, 978, 979, 980, 981, 851,
	855, 854, 852, 853, 849, 850, 877, 876, 878, 879,
	880, 881, 882, 883, 885, 884, 886, 887, 888, 889,
	890, 891, 859, 860, 863, 864, 862, 861, 865, 874,
	875, 866, 867, 868, 869, 870, 871, 873, 872, 892,
	893, 894, 895, 896, 898, 897, 901, 902, 900, 899,
	904, 903, 798, 204, 229, 387, 0, 478, 304, 683,
	650, 508, 645, 214, 231, 967, 278, 968, 0, 0,
	972, 0, 0, 0, 974, 973, 0, 975, 937, 936,
	0, 0, 969, 970, 0, 971, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 454, 458, 459, 460, 462, 464, 466, 479, 484,
	498, 499, 500, 501, 502, 505, 506, 513, 514, 515,
	516, 517, 525, 526, 531, 532, 533, 534, 545, 618,
	620, 637, 658, 665, 504, 404, 452, 476, 611, 0,
	0, 982, 983, 984, 985, 986, 987, 988, 989, 316,
	632, 666, 629, 678, 660, 461, 397, 0, 0, 400,
	297, 322, 339, 0, 649, 527, 236, 490, 306, 265,
	1057, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 457, 312, 287, 255, 483, 252, 509, 548,
	549, 550, 552, 415, 282, 456, 416, 0, 395, 606,
	607, 335, 0, 0, 0, 557, 0, 810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 797, 0, 0, 0, 286, 802, 0, 0, 0,
	385, 283, 0, 0, 212, 530, 0, 453, 0, 211,
	0, 511, 268, 396, 393, 615, 298, 289, 285, 264,
	336, 405, 450, 547, 444, 809, 389, 0, 651, 522,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	805, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 523, 302, 0, 101, 0, 0,
	1058, 536, 992, 781, 958, 996, 1059, 1010, 1011, 1012,
	997, 0, 249, 998, 999, 256, 1000, 0, 957, 840,
	842, 841, 907, 908, 909, 910, 911, 912, 913, 843,
	844, 838, 1005, 641, 1013, 1014, 0, 281, 340, 288,
	280, 612, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 777,
	794, 0, 808, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 792, 1111, 0, 0, 0,
	952, 0, 793, 0, 0, 801, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 477, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 951, 0, 0, 662, 0,
	0, 949, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 485, 497, 0, 0, 0, 0,
	1002, 0, 495, 448, 636, 243, 300, 482, 455, 493,
	463, 303, 0, 0, 494, 391, 617, 473, 633, 663,
	664, 279, 428, 647, 551, 656, 681, 234, 276, 442,
	535, 639, 519, 417, 613, 614, 348, 518, 311, 209,
	388, 669, 232, 503, 390, 253, 241, 619, 644, 315,
	267, 305, 480, 676, 221, 546, 630, 250, 507, 0,
	0, 684, 258, 529, 642, 631, 223, 626, 528, 413,
	345, 346, 222, 0, 481, 284, 309, 0, 0, 274,
	437, 1003, 1004, 272, 685, 848, 655, 228, 0, 654,
	430, 616, 627, 414, 402, 227, 625, 412, 401, 353,
	856, 857, 296, 324, 933, 932, 931, 323, 325, 929,
	930, 928, 215, 640, 659, 0, 216, 0, 524, 643,
	686, 475, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 469, 465, 474, 0,
	610, 634, 648, 661, 667, 668, 670, 671, 672, 673,
	674, 677, 675, 429, 329, 520, 352, 392, 0, 0,
	447, 496, 251, 638, 521, 240, 604, 418, 427, 259,
	261, 260, 235, 512, 609, 246, 266, 939, 961, 950,
	814, 815, 940, 941, 965, 942, 817, 818, 962, 963,
	811, 812, 816, 964, 966, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 682, 537, 543, 538, 539, 540, 541,
	542, 0, 544, 953, 800, 799, 0, 806, 807, 0,
	836, 837, 839, 845, 846, 847, 858, 905, 906, 914,
	916, 917, 915, 918, 919, 920, 923, 924, 925, 926,
	921, 922, 927, 819, 823, 820, 821, 822, 834, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 835,
	976, 977, 978, 979, 980, 981, 851, 855, 854, 852,
	853, 849, 850, 877, 876, 878, 879, 880, 881, 882,
	883, 885, 884, 886, 887, 888, 889, 890, 891, 859,
	860, 863, 864, 862, 861, 865, 874, 875, 866, 867,
	868, 869, 870, 871, 873, 872, 892, 893, 894, 895,
	896, 898, 897, 901, 902, 900, 899, 904, 903, 798,
	204, 229, 387, 0, 478, 304, 683, 650, 508, 645,
	214, 231, 967, 278, 968, 0, 0, 972, 0, 0,
	0, 974, 973, 0, 975, 937, 936, 0, 0, 969,
	970, 0, 971, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 454, 458,
	459, 460, 462, 464, 466, 479, 484, 498, 499, 500,
	501, 502, 505, 506, 513, 514, 515, 516, 517, 525,
	526, 531, 532, 533, 534, 545, 618, 620, 637, 658,
	665, 504, 404, 452, 476, 611, 0, 0, 982, 983,
	984, 985, 986, 987, 988, 989, 316, 632, 666, 629,
	678, 660, 461, 397, 0, 0, 400, 297, 322, 339,
	0, 649, 527, 236, 490, 306, 265, 1057, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 457,
	312, 287, 255, 483, 252, 509, 548, 549, 550, 552,
	415, 282, 456, 416, 0, 395, 606, 607, 335, 0,
	0, 0, 557, 0, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 797, 0,
	0, 0, 286, 802, 0, 0, 0, 385, 283, 0,
	0, 212, 530, 0, 453, 0, 211, 0, 511, 268,
	396, 393, 615, 298, 289, 285, 264, 336, 405, 450,
	547, 444, 809, 389, 0, 651, 522, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 805, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 523, 302, 0, 101, 0, 0, 1058, 536, 992,
	781, 958, 996, 1059, 1010, 1011, 1012, 997, 0, 249,
	998, 999, 256, 1000, 0, 957, 840, 842, 841, 907,
	908, 909, 910, 911, 912, 913, 843, 844, 838, 1005,
	641, 1013, 1014, 0, 281, 340, 288, 280, 612, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 794, 0, 808,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 792, 0, 0, 0, 0, 952, 0, 793,
	0, 0, 801, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 477, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 951, 0, 0, 662, 0, 0, 949, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 485, 497, 0, 0, 0, 0, 1002, 0, 495,
	448, 636, 243, 300, 482, 455, 493, 463, 303, 0,
	0, 494, 391, 617, 473, 633, 663, 664, 279, 428,
	647, 551, 656, 681, 234, 276, 442, 535, 639, 519,
	417, 613, 614, 348, 518, 311, 209, 388, 669, 232,
	503, 390, 253, 241, 619, 644, 315, 267, 305, 480,
	676, 221, 546, 630, 250, 507, 0, 0, 684, 258,
	529, 642, 631, 223, 626, 528, 413, 345, 346, 222,
	0, 481, 284, 309, 0, 0, 274, 437, 1003, 1004,
	272, 685, 848, 655, 228, 0, 654, 430, 616, 627,
	414, 402, 227, 625, 412, 401, 353, 856, 857, 296,
	324, 933, 932, 931, 323, 325, 929, 930, 928, 215,
	640, 659, 0, 216, 0, 524, 643, 686, 475, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 469, 465, 474, 0, 610, 634, 648,
	661, 667, 668, 670, 671, 672, 673, 674, 677, 675,
	429, 329, 520, 352, 392, 0, 0, 447, 496, 251,
	638, 521, 240, 604, 418, 427, 259, 261, 260, 235,
	512, 609, 246, 266, 939, 961, 950, 814, 815, 940,
	941, 965, 942, 817, 818, 962, 963, 811, 812, 816,
	964, 966, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	682, 537, 543, 538, 539, 540, 541, 542, 0, 544,
	953, 800, 799, 0, 806, 807, 0, 836, 837, 839,
	845, 846, 847, 858, 905, 906, 914, 916, 917, 915,
	918, 919, 920, 923, 924, 925, 926, 921, 922, 927,
	819, 823, 820, 821, 822, 834, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 835, 976, 977, 978,
	979, 980, 981, 851, 855, 854, 852, 853, 849, 850,
	877, 876, 878, 879, 880, 881, 882, 883, 885, 884,
	886, 887, 888, 889, 890, 891, 859, 860, 863, 864,
	862, 861, 865, 874, 875, 866, 867, 868, 869, 870,
	871, 873, 872, 892, 893, 894, 895, 896, 898, 897,
	901, 902, 900, 899, 904, 903, 798, 204, 229, 387,
	0, 478, 304, 683, 650, 508, 645, 214, 231, 967,
	278, 968, 0, 0, 972, 0, 0, 0, 974, 973,
	0, 975, 937, 936, 0, 0, 969, 970, 0, 971,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 454, 458, 459, 460, 462,
	464, 466, 479, 484, 498, 499, 500, 501, 502, 505,
	506, 513, 514, 515, 516, 517, 525, 526, 531, 532,
	533, 534, 545, 618, 620, 637, 658, 665, 504, 404,
	452, 476, 611, 0, 0, 982, 983, 984, 985, 986,
	987, 988, 989, 316, 632, 666, 629, 678, 660, 461,
	397, 0, 0, 400, 297, 322, 339, 0, 649, 527,
	236, 490, 306, 265, 1057, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 457, 312, 287, 255,
	483, 252, 509, 548, 549, 550, 552, 415, 282, 456,
	416, 0, 395, 606, 607, 335, 0, 0, 0, 557,
	0, 810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 797, 0, 0, 0, 286,
	802, 0, 0, 0, 385, 283, 0, 0, 212, 530,
	0, 453, 0, 211, 0, 511, 268, 396, 393, 615,
	298, 289, 285, 264, 336, 405, 450, 547, 444, 809,
	389, 0, 651, 522, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 805, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 523, 302,
	0, 101, 0, 0, 1058, 536, 992, 781, 958, 996,
	1059, 1010, 1011, 1012, 997, 0, 249, 998, 999, 256,
	1000, 0, 957, 840, 842, 841, 907, 908, 909, 910,
	911, 912, 913, 843, 844, 838, 1005, 641, 1013, 1014,
	0, 281, 340, 288, 280, 612, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 777, 794, 0, 808, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 791, 792,
	0, 0, 0, 0, 952, 0, 793, 0, 0, 801,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 3255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 477, 0,
	319, 334, 0, 0, 0, 0, 0, 0, 0, 951,
	0, 0, 662, 0, 0, 949, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 485, 497,
	0, 0, 0, 0, 1002, 0, 495, 448, 636, 243,
	300, 482, 455, 493, 463, 303, 0, 0, 494, 391,
	617, 473, 633, 663, 664, 279, 428, 647, 551, 656,
	681, 234, 276, 442, 535, 639, 519, 417, 613, 614,
	348, 518, 311, 209, 388, 669, 232, 503, 390, 253,
	241, 619, 644, 315, 267, 305, 480, 676, 221, 546,
	630, 250, 507, 0, 0, 684, 258, 529, 642, 631,
	223, 626, 528, 413, 345, 346, 222, 0, 481, 284,
	309, 0, 0, 274, 437, 1003, 1004, 272, 685, 848,
	655, 228, 0, 654, 430, 616, 627, 414, 402, 227,
	625, 412, 401, 353, 856, 857, 296, 324, 933, 932,
	931, 323, 325, 929, 930, 928, 215, 640, 659, 0,
	216, 0, 524, 643, 686, 475, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	469, 465, 474, 0, 610, 634, 648, 661, 667, 668,
	670, 671, 672, 673, 674, 677, 675, 429, 329, 520,
	352, 392, 0, 0, 447, 496, 251, 638, 521, 240,
	604, 418, 427, 259, 261, 260, 235, 512, 609, 246,
	266, 939, 961, 950, 814, 815, 940, 941, 965, 942,
	817, 818, 962, 963, 811, 812, 816, 964, 966, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 682, 537, 543,
	538, 539, 540, 541, 542, 0, 544, 953, 800, 799,
	0, 806, 807, 0, 836, 837, 839, 845, 846, 847,
	858, 905, 906, 914, 916, 917, 915, 918, 919, 920,
	923, 924, 925, 926, 921, 922, 927, 819, 823, 820,
	821, 822, 834, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 835, 976, 977, 978, 979, 980, 981,
	851, 855, 854, 852, 853, 849, 850, 877, 876, 878,
	879, 880, 881, 882, 883, 885, 884, 886, 887, 888,
	889, 890, 891, 859, 860, 863, 864, 862, 861, 865,
	874, 875, 866, 867, 868, 869, 870, 871, 873, 872,
	892, 893, 894, 895, 896, 898, 897, 901, 902, 900,
	899, 904, 903, 798, 204, 229, 387, 0, 478, 304,
	683, 650, 508, 645, 214, 231, 967, 278, 968, 0,
	0, 972, 0, 0, 0, 974, 973, 0, 975, 937,
	936, 0, 0, 969, 970, 0, 971, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 454, 458, 459, 460, 462, 464, 466, 479,
	484, 498, 499, 500, 501, 502, 505, 506, 513, 514,
	515, 516, 517, 525, 526, 531, 532, 533, 534, 545,
	618, 620, 637, 658, 665, 504, 404, 452, 476, 611,
	0, 0, 982, 983, 984, 985, 986, 987, 988, 989,
	316, 632, 666, 629, 678, 660, 461, 397, 0, 0,
	400, 297, 322, 339, 0, 649, 527, 236, 490, 306,
	265, 1057, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 457, 312, 287, 255, 483, 252, 509,
	548, 549, 550, 552, 415, 282, 456, 416, 0, 395,
	606, 607, 335, 0, 0, 0, 557, 0, 810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 797, 0, 0, 0, 286, 802, 0, 0,
	0, 385, 283, 0, 0, 212, 530, 0, 453, 0,
	211, 0, 511, 268, 396, 393, 615, 298, 289, 285,
	264, 336, 405, 450, 547, 444, 809, 389, 0, 651,
	522, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 805, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 523, 302, 0, 101, 0,
	0, 1058, 536, 992, 781, 958, 996, 1059, 1010, 1011,
	1012, 997, 0, 249, 998, 999, 256, 1000, 0, 957,
	840, 842, 841, 907, 908, 909, 910, 911, 912, 913,
	843, 844, 838, 1005, 641, 1013, 1014, 0, 281, 340,
	288, 280, 612, 0, 0, 0, 0, 0, 0, 628,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	777, 794, 0, 808, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 791, 792, 0, 0, 0,
	0, 952, 0, 793, 0, 0, 801, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 3251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 477, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 951, 0, 0, 662,
	0, 0, 949, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 485, 497, 0, 0, 0,
	0, 1002, 0, 495, 448, 636, 243, 300, 482, 455,
	493, 463, 303, 0, 0, 494, 391, 617, 473, 633,
	663, 664, 279, 428, 647, 551, 656, 681, 234, 276,
	442, 535, 639, 519, 417, 613, 614, 348, 518, 311,
	209, 388, 669, 232, 503, 390, 253, 241, 619, 644,
	315, 267, 305, 480, 676, 221, 546, 630, 250, 507,
	0, 0, 684, 258, 529, 642, 631, 223, 626, 528,
	413, 345, 346, 222, 0, 481, 284, 309, 0, 0,
	274, 437, 1003, 1004, 272, 685, 848, 655, 228, 0,
	654, 430, 616, 627, 414, 402, 227, 625, 412, 401,
	353, 856, 857, 296, 324, 933, 932, 931, 323, 325,
	929, 930, 928, 215, 640, 659, 0, 216, 0, 524,
	643, 686, 475, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 469, 465, 474,
	0, 610, 634, 648, 661, 667, 668, 670, 671, 672,
	673, 674, 677, 675, 429, 329, 520, 352, 392, 0,
	0, 447, 496, 251, 638, 521, 240, 604, 418, 427,
	259, 261, 260, 235, 512, 609, 246, 266, 939, 961,
	950, 814, 815, 940, 941, 965, 942, 817, 818, 962,
	963, 811, 812, 816, 964, 966, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 682, 537, 543, 538, 539, 540,
	541, 542, 0, 544, 953, 800, 799, 0, 806, 807,
	0, 836, 837, 839, 845, 846, 847, 858, 905, 906,
	914, 916, 917, 915, 918, 919, 920, 923, 924, 925,
	926, 921, 922, 927, 819, 823, 820, 821, 822, 834,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	835, 976, 977, 978, 979, 980, 981, 851, 855, 854,
	852, 853, 849, 850, 877, 876, 878, 879, 880, 881,
	882, 883, 885, 884, 886, 887, 888, 889, 890, 891,
	859, 860, 863, 864, 862, 861, 865, 874, 875, 866,
	867, 868, 869, 870, 871, 873, 872, 892, 893, 894,
	895, 896, 898, 897, 901, 902, 900, 899, 904, 903,
	798, 204, 229, 387, 0, 478, 304, 683, 650, 508,
	645, 214, 231, 967, 278, 968, 0, 0, 972, 0,
	0, 0, 974, 973, 0, 975, 937, 936, 0, 0,
	969, 970, 0, 971, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 454,
	458, 459, 460, 462, 464, 466, 479, 484, 498, 499,
	500, 501, 502, 505, 506, 513, 514, 515, 516, 517,
	525, 526, 531, 532, 533, 534, 545, 618, 620, 637,
	658, 665, 504, 404, 452, 476, 611, 0, 0, 982,
	983, 984, 985, 986, 987, 988, 989, 316, 632, 666,
	629, 678, 660, 461, 397, 0, 0, 400, 297, 322,
	339, 0, 649, 527, 236, 490, 306, 265, 1057, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	457, 312, 287, 255, 483, 252, 509, 548, 549, 550,
	552, 415, 282, 456, 416, 0, 395, 606, 607, 335,
	0, 0, 0, 557, 0, 810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 797,
	0, 0, 0, 286, 802, 0, 0, 0, 385, 283,
	0, 0, 212, 530, 0, 453, 0, 211, 0, 511,
	268, 396, 393, 615, 298, 289, 285, 264, 336, 405,
	450, 547, 444, 809, 389, 0, 651, 522, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 804, 805, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 523, 302, 0, 101, 0, 0, 1058, 536,
	992, 1132, 958, 996, 1059, 1010, 1011, 1012, 997, 0,
	249, 998, 999, 256, 1000, 0, 957, 840, 842, 841,
	907, 908, 909, 910, 911, 912, 913, 843, 844, 838,
	1005, 641, 1013, 1014, 0, 281, 340, 288, 280, 612,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 794, 0,
	808, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 791, 792, 0, 0, 0, 0, 952, 0,
	793, 0, 0, 801, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 477, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 951, 0, 0, 662, 0, 0, 949,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 485, 497, 0, 0, 0, 0, 1002, 0,
	495, 448, 636, 243, 300, 482, 455, 493, 463, 303,
	0, 0, 494, 391, 617, 473, 633, 663, 664, 279,
	428, 647, 551, 656, 681, 234, 276, 442, 535, 639,
	519, 417, 613, 614, 348, 518, 311, 209, 388, 669,
	232, 503, 390, 253, 241, 619, 644, 315, 267, 305,
	480, 676, 221, 546, 630, 250, 507, 0, 0, 684,
	258, 529, 642, 631, 223, 626, 528, 413, 345, 346,
	222, 0, 481, 284, 309, 0, 0, 274, 437, 1003,
	1004, 272, 685, 848, 655, 228, 0, 654, 430, 616,
	627, 414, 402, 227, 625, 412, 401, 353, 856, 857,
	296, 324, 933, 932, 931, 323, 325, 929, 930, 928,
	215, 640, 659, 0, 216, 0, 524, 643, 686, 475,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 469, 465, 474, 0, 610, 634,
	648, 661, 667, 668, 670, 671, 672, 673, 674, 677,
	675, 429, 329, 520, 352, 392, 0, 0, 447, 496,
	251, 638, 521, 240, 604, 418, 427, 259, 261, 260,
	235, 512, 609, 246, 266, 939, 961, 950, 814, 815,
	940, 941, 965, 942, 817, 818, 962, 963, 811, 812,
	816, 964, 966, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 682, 537, 543, 538, 539, 540, 541, 542, 0,
	544, 953, 800, 799, 0, 806, 807, 0, 836, 837,
	839, 845, 846, 847, 858, 905, 906, 914, 916, 917,
	915, 918, 919, 920, 923, 924, 925, 926, 921, 922,
	927, 819, 823, 820, 821, 822, 834, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 835, 976, 977,
	978, 979, 980, 981, 851, 855, 854, 852, 853, 849,
	850, 877, 876, 878, 879, 880, 881, 882, 883, 885,
	884, 886, 887, 888, 889, 890, 891, 859, 860, 863,
	864, 862, 861, 865, 874, 875, 866, 867, 868, 869,
	870, 871, 873, 872, 892, 893, 894, 895, 896, 898,
	897, 901, 902, 900, 899, 904, 903, 798, 204, 229,
	387, 0, 478, 304, 683, 650, 508, 645, 214, 231,
	967, 278, 968, 0, 0, 972, 0, 0, 0, 974,
	973, 0, 975, 937, 936, 0, 0, 969, 970, 0,
	971, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 454, 458, 459, 460,
	462, 464, 466, 479, 484, 498, 499, 500, 501, 502,
	505, 506, 513, 514, 515, 516, 517, 525, 526, 531,
	532, 533, 534, 545, 618, 620, 637, 658, 665, 504,
	404, 452, 476, 611, 0, 0, 982, 983, 984, 985,
	986, 987, 988, 989, 316, 632, 666, 629, 678, 660,
	461, 397, 0, 0, 400, 297, 322, 339, 0, 649,
	527, 236, 490, 306, 265, 1057, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 457, 312, 287,
	255, 483, 252, 509, 548, 549, 550, 552, 415, 282,
	456, 416, 0, 395, 606, 607, 335, 0, 0, 0,
	557, 0, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 797, 0, 0, 0,
	286, 802, 0, 0, 0, 385, 283, 0, 0, 212,
	530, 0, 453, 0, 211, 0, 511, 268, 396, 393,
	615, 298, 289, 285, 264, 336, 405, 450, 547, 444,
	809, 389, 0, 651, 522, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 523,
	302, 0, 101, 0, 0, 1058, 536, 992, 1132, 958,
	996, 1059, 1010, 1011, 1012, 997, 0, 249, 998, 999,
	256, 1000, 0, 957, 840, 842, 841, 907, 908, 909,
	910, 911, 912, 913, 843, 844, 838, 1005, 641, 1013,
	1014, 0, 281, 340, 288, 280, 612, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 794, 0, 808, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	792, 0, 0, 0, 0, 952, 0, 793, 0, 0,
	801, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 2186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 477,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	951, 0, 0, 662, 0, 0, 949, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 485,
	497, 0, 0, 0, 0, 1002, 0, 495, 448, 636,
	243, 300, 482, 455, 493, 463, 303, 0, 0, 494,
	391, 617, 473, 633, 663, 664, 279, 428, 647, 551,
	656, 681, 234, 276, 442, 535, 639, 519, 417, 613,
	614, 348, 518, 311, 209, 388, 669, 232, 503, 390,
	253, 241, 619, 644, 315, 267, 305, 480, 676, 221,
	546, 630, 250, 507, 0, 0, 684, 258, 529, 642,
	631, 223, 626, 528, 413, 345, 346, 222, 0, 481,
	284, 309, 0, 0, 274, 437, 1003, 1004, 272, 685,
	848, 655, 228, 0, 654, 430, 616, 627, 414, 402,
	227, 625, 412, 401, 353, 856, 857, 296, 324, 933,
	932, 931, 323, 325, 929, 930, 928, 215, 640, 659,
	0, 216, 0, 524, 643, 686, 475, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 469, 465, 474, 0, 610, 634, 648, 661, 667,
	668, 670, 671, 672, 673, 674, 677, 675, 429, 329,
	520, 352, 392, 0, 0, 447, 496, 251, 638, 521,
	240, 604, 418, 427, 259, 261, 260, 235, 512, 609,
	246, 266, 939, 961, 950, 814, 815, 940, 941, 965,
	942, 817, 818, 962, 963, 811, 812, 816, 964, 966,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 682, 537,
	543, 538, 539, 540, 541, 542, 0, 544, 953, 800,
	799, 0, 806, 807, 0, 836, 837, 839, 845, 846,
	847, 858, 905, 906, 914, 916, 917, 915, 918, 919,
	920, 923, 924, 925, 926, 921, 922, 927, 819, 823,
	820, 821, 822, 834, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 835, 976, 977, 978, 979, 980,
	981, 851, 855, 854, 852, 853, 849, 850, 877, 876,
	878, 879, 880, 881, 882, 883, 885, 884, 886, 887,
	888, 889, 890, 891, 859, 860, 863, 864, 862, 861,
	865, 874, 875, 866, 867, 868, 869, 870, 871, 873,
	872, 892, 893, 894, 895, 896, 898, 897, 901, 902,
	900, 899, 904, 903, 798, 204, 229, 387, 0, 478,
	304, 683, 650, 508, 645, 214, 231, 967, 278, 968,
	0, 0, 972, 0, 0, 0, 974, 973, 0, 975,
	937, 936, 0, 0, 969, 970, 0, 971, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 454, 458, 459, 460, 462, 464, 466,
	479, 484, 498, 499, 500, 501, 502, 505, 506, 513,
	514, 515, 516, 517, 525, 526, 531, 532, 533, 534,
	545, 618, 620, 637, 658, 665, 504, 404, 452, 476,
	611, 0, 0, 982, 983, 984, 985, 986, 987, 988,
	989, 316, 632, 666, 629, 678, 660, 461, 397, 0,
	0, 400, 297, 322, 339, 0, 649, 527, 236, 490,
	306, 265, 1057, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 457, 312, 287, 255, 483, 252,
	509, 548, 549, 550, 552, 415, 282, 456, 416, 0,
	395, 606, 607, 335, 0, 0, 0, 557, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 797, 0, 0, 0, 286, 802, 0,
	0, 0, 385, 283, 0, 0, 212, 530, 0, 453,
	0, 211, 0, 511, 268, 396, 393, 615, 298, 289,
	285, 264, 336, 405, 450, 547, 444, 809, 389, 0,
	651, 522, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 805, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 523, 302, 0, 101,
	0, 0, 1058, 536, 992, 1132, 958, 996, 1059, 1010,
	1011, 1012, 997, 0, 249, 998, 999, 256, 1000, 0,
	957, 840, 842, 841, 907, 908, 909, 910, 911, 912,
	913, 843, 844, 838, 1005, 641, 1013, 1014, 0, 281,
	340, 288, 280, 612, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 0, 808, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 791, 792, 0, 0,
	0, 0, 952, 0, 793, 0, 0, 801, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	2184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 477, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 951, 0, 0,
	662, 0, 0, 949, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 485, 497, 0, 0,
	0, 0, 1002, 0, 495, 448, 636, 243, 300, 482,
	455, 493, 463, 303, 0, 0, 494, 391, 617, 473,
	633, 663, 664, 279, 428, 647, 551, 656, 681, 234,
	276, 442, 535, 639, 519, 417, 613, 614, 348, 518,
	311, 209, 388, 669, 232, 503, 390, 253, 241, 619,
	644, 315, 267, 305, 480, 676, 221, 546, 630, 250,
	507, 0, 0, 684, 258, 529, 642, 631, 223, 626,
	528, 413, 345, 346, 222, 0, 481, 284, 309, 0,
	0, 274, 437, 1003, 1004, 272, 685, 848, 655, 228,
	0, 654, 430, 616, 627, 414, 402, 227, 625, 412,
	401, 353, 856, 857, 296, 324, 933, 932, 931, 323,
	325, 929, 930, 928, 215, 640, 659, 0, 216, 0,
	524, 643, 686, 475, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 469, 465,
	474, 0, 610, 634, 648, 661, 667, 668, 670, 671,
	672, 673, 674, 677, 675, 429, 329, 520, 352, 392,
	0, 0, 447, 496, 251, 638, 521, 240, 604, 418,
	427, 259, 261, 260, 235, 512, 609, 246, 266, 939,
	961, 950, 814, 815, 940, 941, 965, 942, 817, 818,
	962, 963, 811, 812, 816, 964, 966, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 682, 537, 543, 538, 539,
	540, 541, 542, 0, 544, 953, 800, 799, 0, 806,
	807, 0, 836, 837, 839, 845, 846, 847, 858, 905,
	906, 914, 916, 917, 915, 918, 919, 920, 923, 924,
	925, 926, 921, 922, 927, 819, 823, 820, 821, 822,
	834, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 835, 976, 977, 978, 979, 980, 981, 851, 855,
	854, 852, 853, 849, 850, 877, 876, 878, 879, 880,
	881, 882, 883, 885, 884, 886, 887, 888, 889, 890,
	891, 859, 860, 863, 864, 862, 861, 865, 874, 875,
	866, 867, 868, 869, 870, 871, 873, 872, 892, 893,
	894, 895, 896, 898, 897, 901, 902, 900, 899, 904,
	903, 798, 204, 229, 387, 0, 478, 304, 683, 650,
	508, 645, 214, 231, 967, 278, 968, 0, 0, 972,
	0, 0, 0, 974, 973, 0, 975, 937, 936, 0,
	0, 969, 970, 0, 971, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	454, 458, 459, 460, 462, 464, 466, 479, 484, 498,
	499, 500, 501, 502, 505, 506, 513, 514, 515, 516,
	517, 525, 526, 531, 532, 533, 534, 545, 618, 620,
	637, 658, 665, 504, 404, 452, 476, 611, 0, 0,
	982, 983, 984, 985, 986, 987, 988, 989, 316, 632,
	666, 629, 678, 660, 461, 397, 0, 0, 400, 297,
	322, 339, 0, 649, 527, 236, 490, 306, 265, 1057,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 457, 312, 287, 255, 483, 252, 509, 548, 549,
	550, 552, 415, 282, 456, 416, 0, 395, 606, 607,
	335, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 0, 212, 530, 0, 453, 0, 211, 0,
	511, 268, 396, 393, 615, 298, 289, 285, 264, 336,
	405, 450, 547, 444, 0, 389, 0, 651, 522, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 523, 302, 0, 0, 0, 0, 0,
	536, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 641, 0, 0, 0, 281, 340, 288, 280,
	612, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	238, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 477, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 662, 0, 0,
	0, 0, 0, 1171, 1172, 384, 1140, 349, 205, 233,
	1165, 1169, 434, 485, 497, 0, 0, 0, 0, 269,
	0, 495, 448, 636, 243, 300, 482, 455, 493, 463,
	303, 0, 0, 494, 391, 617, 473, 633, 663, 664,
	279, 428, 647, 551, 656, 681, 234, 276, 442, 535,
	639, 519, 417, 613, 614, 348, 518, 311, 209, 388,
	669, 232, 503, 390, 253, 241, 619, 644, 315, 267,
	305, 480, 676, 221, 546, 630, 250, 507, 0, 0,
	684, 258, 529, 642, 631, 223, 626, 528, 413, 345,
	346, 222, 0, 481, 284, 309, 0, 0, 274, 437,
	621, 622, 272, 685, 237, 655, 228, 0, 654, 430,
	616, 627, 414, 402, 227, 625, 412, 401, 353, 374,
	375, 296, 324, 470, 394, 471, 323, 325, 425, 424,
	426, 215, 640, 659, 0, 216, 0, 524, 643, 686,
	475, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 469, 465, 474, 0, 610,
	634, 648, 661, 667, 668, 670, 671, 672, 673, 674,
	677, 675, 429, 329, 520, 352, 392, 0, 0, 447,
	496, 251, 638, 521, 240, 604, 418, 427, 259, 261,
	260, 235, 512, 609, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 682, 537, 543, 538, 539, 540, 541, 542,
	0, 544, 0, 0, 0, 0, 0, 419, 0, 623,
	624, 705, 403, 510, 635, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 608, 330, 224, 225,
	226, 553, 554, 555, 556, 652, 653, 657, 213, 486,
	487, 488, 489, 308, 646, 326, 492, 491, 350, 351,
	398, 472, 569, 571, 582, 586, 588, 590, 596, 599,
	570, 572, 583, 587, 589, 591, 597, 600, 559, 561,
	563, 565, 578, 577, 574, 602, 603, 580, 585, 564,
	576, 581, 594, 601, 598, 558, 562, 566, 575, 593,
	592, 573, 584, 595, 579, 567, 560, 568, 0, 204,
	229, 387, 0, 478, 304, 683, 650, 508, 645, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 454, 458, 459,
	460, 462, 464, 466, 479, 484, 498, 499, 500, 501,
	502, 505, 506, 513, 514, 515, 516, 517, 525, 526,
	531, 532, 533, 534, 545, 618, 620, 637, 658, 665,
	504, 404, 452, 476, 611, 0, 0, 317, 318, 467,
	468, 332, 333, 679, 680, 316, 632, 666, 629, 678,
	660, 461, 397, 0, 0, 400, 297, 322, 339, 0,
	649, 527, 236, 490, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 457, 312,
	287, 255, 483, 252, 509, 548, 549, 550, 552, 415,
	282, 456, 416, 0, 395, 606, 607, 335, 0, 0,
	91, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 385, 283, 0, 0,
	212, 530, 0, 453, 0, 211, 0, 511, 268, 396,
	393, 615, 298, 289, 285, 264, 336, 405, 450, 547,
	444, 103, 389, 0, 651, 522, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	523, 302, 0, 101, 0, 0, 0, 536, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 641,
	0, 0, 0, 281, 340, 288, 280, 612, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	477, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	485, 497, 0, 0, 0, 0, 269, 0, 495, 448,
	636, 243, 300, 482, 455, 493, 463, 303, 0, 0,
	494, 391, 617, 473, 633, 663, 664, 279, 428, 647,
	551, 656, 681, 234, 276, 442, 535, 639, 519, 417,
	613, 614, 348, 518, 311, 209, 388, 669, 232, 503,
	390, 253, 241, 619, 644, 315, 267, 305, 480, 676,
	221, 546, 630, 250, 507, 0, 0, 684, 258, 529,
	642, 631, 223, 626, 528, 413, 345, 346, 222, 0,
	481, 284, 309, 0, 0, 274, 437, 621, 622, 272,
	685, 237, 655, 228, 0, 654, 430, 616, 627, 414,
	402, 227, 625, 412, 401, 353, 374, 375, 296, 324,
	470, 394, 471, 323, 325, 425, 424, 426, 215, 640,
	659, 0, 216, 0, 524, 643, 686, 475, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 469, 465, 474, 0, 610, 634, 648, 661,
	667, 668, 670, 671, 672, 673, 674, 677, 675, 429,
	329, 520, 352, 392, 0, 0, 447, 496, 251, 638,
	521, 240, 604, 418, 427, 259, 261, 260, 235, 512,
	609, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 682,
	537, 543, 538, 539, 540, 541, 542, 0, 544, 0,
	0, 0, 0, 0, 419, 0, 623, 624, 705, 403,
	510, 635, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 608, 330, 224, 225, 226, 553, 554,
	555, 556, 652, 653, 657, 213, 486, 487, 488, 489,
	308, 646, 326, 492, 491, 350, 351, 398, 472, 569,
	571, 582, 586, 588, 590, 596, 599, 570, 572, 583,
	587, 589, 591, 597, 600, 559, 561, 563, 565, 578,
	577, 574, 602, 603, 580, 585, 564, 576, 581, 594,
	601, 598, 558, 562, 566, 575, 593, 592, 573, 584,
	595, 579, 567, 560, 568, 0, 204, 229, 387, 100,
	478, 304, 683, 650, 508, 645, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 2503, 0, 0, 2502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 454, 458, 459, 460, 462, 464,
	466, 479, 484, 498, 499, 500, 501, 502, 505, 506,
	513, 514, 515, 516, 517, 525, 526, 531, 532, 533,
	534, 545, 618, 620, 637, 658, 665, 504, 404, 452,
	476, 611, 0, 0, 317, 318, 467, 468, 332, 333,
	679, 680, 316, 632, 666, 629, 678, 660, 461, 397,
	0, 0, 400, 297, 322, 339, 0, 649, 527, 236,
	490, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 457, 312, 287, 255, 483,
	252, 509, 548, 549, 550, 552, 415, 282, 456, 416,
	0, 395, 606, 607, 335, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 0, 212, 530, 0,
	453, 0, 211, 0, 511, 268, 396, 393, 615, 298,
	289, 285, 264, 336, 405, 450, 547, 444, 0, 389,
	0, 651, 522, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 523, 302, 0,
	0, 0, 0, 0, 536, 757, 0, 0, 0, 0,
	4394, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 641, 0, 0, 0,
	281, 340, 288, 280, 612, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 4392, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 477, 0, 319,
	334, 0, 0, 0, 4393, 4261, 4391, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 485, 497, 0,
	0, 0, 0, 269, 0, 495, 448, 636, 243, 300,
	482, 455, 493, 463, 303, 0, 0, 494, 391, 617,
	473, 633, 663, 664, 279, 428, 647, 551, 656, 681,
	234, 276, 442, 535, 639, 519, 417, 613, 614, 348,
	518, 311, 209, 388, 669, 232, 503, 390, 253, 241,
	619, 644, 315, 267, 305, 480, 676, 221, 546, 630,
	250, 507, 0, 0, 684, 258, 529, 642, 631, 223,
	626, 528, 413, 345, 346, 222, 0, 481, 284, 309,
	0, 0, 274, 437, 621, 622, 272, 685, 237, 655,
	228, 0, 654, 430, 616, 627, 414, 402, 227, 625,
	412, 401, 353, 374, 375, 296, 324, 470, 394, 471,
	323, 325, 425, 424, 426, 215, 640, 659, 0, 216,
	0, 524, 643, 686, 475, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 469,
	465, 474, 0, 610, 634, 648, 661, 667, 668, 670,
	671, 672, 673, 674, 677, 675, 429, 329, 520, 352,
	392, 0, 0, 447, 496, 251, 638, 521, 240, 604,
	418, 427, 259, 261, 260, 235, 512, 609, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 682, 537, 543, 538,
	539, 540, 541, 542, 0, 544, 0, 0, 0, 0,
	0, 419, 0, 623, 624, 705, 403, 510, 635, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	608, 330, 224, 225, 226, 553, 554, 555, 556, 652,
	653, 657, 213, 486, 487, 488, 489, 308, 646, 326,
	492, 491, 350, 351, 398, 472, 569, 571, 582, 586,
	588, 590, 596, 599, 570, 572, 583, 587, 589, 591,
	597, 600, 559, 561, 563, 565, 578, 577, 574, 602,
	603, 580, 585, 564, 576, 581, 594, 601, 598, 558,
	562, 566, 575, 593, 592, 573, 584, 595, 579, 567,
	560, 568, 0, 204, 229, 387, 0, 478, 304, 683,
	650, 508, 645, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 454, 458, 459, 460, 462, 464, 466, 479, 484,
	498, 499, 500, 501, 502, 505, 506, 513, 514, 515,
	516, 517, 525, 526, 531, 532, 533, 534, 545, 618,
	620, 637, 658, 665, 504, 404, 452, 476, 611, 0,
	0, 317, 318, 467, 468, 332, 333, 679, 680, 316,
	632, 666, 629, 678, 660, 461, 397, 0, 0, 400,
	297, 322, 339, 0, 649, 527, 236, 490, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 457, 312, 287, 255, 483, 252, 509, 548,
	549, 550, 552, 415, 282, 456, 416, 0, 395, 606,
	607, 335, 0, 0, 91, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	385, 283, 0, 0, 212, 530, 0, 453, 0, 211,
	0, 511, 268, 396, 393, 615, 298, 289, 285, 264,
	336, 405, 450, 547, 444, 103, 389, 0, 651, 522,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 523, 302, 0, 101, 0, 1805,
	0, 536, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 641, 0, 0, 0, 281, 340, 288,
	280, 612, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 477, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 485, 497, 0, 0, 0, 0,
	269, 0, 495, 448, 636, 243, 300, 482, 455, 493,
	463, 303, 0, 0, 494, 391, 617, 473, 633, 663,
	664, 279, 428, 647, 551, 656, 681, 234, 276, 442,
	535, 639, 519, 417, 613, 614, 348, 518, 311, 209,
	388, 669, 232, 503, 390, 253, 241, 619, 644, 315,
	267, 305, 480, 676, 221, 546, 630, 250, 507, 0,
	0, 684, 258, 529, 642, 631, 223, 626, 528, 413,
	345, 346, 222, 0, 481, 284, 309, 0, 0, 274,
	437, 621, 622, 272, 685, 237, 655, 228, 0, 654,
	430, 616, 627, 414, 402, 227, 625, 412, 401, 353,
	374, 375, 296, 324, 470, 394, 471, 323, 325, 425,
	424, 426, 215, 640, 659, 0, 216, 0, 524, 643,
	686, 475, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 469, 465, 474, 0,
	610, 634, 648, 661, 667, 668, 670, 671, 672, 673,
	674, 677, 675, 429, 329, 520, 352, 392, 0, 0,
	447, 496, 251, 638, 521, 240, 604, 418, 427, 259,
	261, 260, 235, 512, 609, 246, 266, 207, 0, 0,
	0, 0, 270, 271, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 682, 537, 543, 538, 539, 540, 541,
	542, 0, 544, 0, 0, 0, 0, 0, 419, 0,
	623, 624, 705, 403, 510, 635, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 608, 330, 224,
	225, 226, 553, 554, 555, 556, 652, 653, 657, 213,
	486, 487, 488, 489, 308, 646, 326, 492, 491, 350,
	351, 398, 472, 569, 571, 582, 586, 588, 590, 596,
	599, 570, 572, 583, 587, 589, 591, 597, 600, 559,
	561, 563, 565, 578, 577, 574, 602, 603, 580, 585,
	564, 576, 581, 594, 601, 598, 558, 562, 566, 575,
	593, 592, 573, 584, 595, 579, 567, 560, 568, 0,
	204, 229, 387, 100, 478, 304, 683, 650, 508, 645,
	214, 231, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 454, 458,
	459, 460, 462, 464, 466, 479, 484, 498, 499, 500,
	501, 502, 505, 506, 513, 514, 515, 516, 517, 525,
	526, 531, 532, 533, 534, 545, 618, 620, 637, 658,
	665, 504, 404, 452, 476, 611, 0, 0, 317, 318,
	467, 468, 332, 333, 679, 680, 316, 632, 666, 629,
	678, 660, 461, 397, 0, 0, 400, 297, 322, 339,
	0, 649, 527, 236, 490, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 457,
	312, 287, 255, 483, 252, 509, 548, 549, 550, 552,
	415, 282, 456, 1845, 0, 395, 606, 607, 335, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 1847, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 385, 283, 0,
	0, 212, 530, 0, 453, 0, 211, 0, 511, 268,
	396, 393, 615, 298, 289, 285, 264, 336, 405, 450,
	547, 444, 0, 389, 0, 651, 522, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 523, 302, 0, 0, 0, 0, 1849, 536, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 0, 0,
	641, 0, 0, 0, 281, 340, 288, 280, 612, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 238, 0,
	0, 0, 1530, 0, 1531, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 477, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 485, 497, 0, 0, 0, 0, 269, 0, 495,
	448, 636, 243, 300, 482, 455, 493, 463, 303, 0,
	0, 494, 391, 617, 473, 633, 663, 664, 279, 428,
	647, 551, 656, 681, 234, 276, 442, 535, 639, 519,
	417, 613, 614, 348, 518, 311, 209, 388, 669, 232,
	503, 390, 253, 241, 619, 644, 315, 267, 305, 480,
	676, 221, 546, 630, 250, 507, 0, 0, 684, 258,
	529, 642, 631, 223, 626, 528, 413, 345, 346, 222,
	0, 481, 284, 309, 0, 0, 274, 437, 621, 622,
	272, 685, 237, 655, 228, 0, 654, 430, 616, 627,
	414, 402, 227, 625, 412, 401, 353, 374, 375, 296,
	324, 470, 394, 471, 323, 325, 425, 424, 426, 215,
	640, 659, 0, 216, 0, 524, 643, 686, 475, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 469, 465, 474, 0, 610, 634, 648,
	661, 667, 668, 670, 671, 672, 673, 674, 677, 675,
	429, 329, 520, 352, 392, 0, 0, 447, 496, 251,
	638, 521, 240, 604, 418, 427, 259, 261, 260, 235,
	512, 609, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	682, 537, 543, 538, 539, 540, 541, 542, 0, 544,
	0, 0, 0, 0, 0, 419, 0, 623, 624, 705,
	403, 510, 635, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 608, 330, 224, 225, 226, 553,
	554, 555, 556, 652, 653, 657, 213, 486, 487, 488,
	489, 308, 646, 326, 492, 491, 350, 351, 398, 472,
	569, 571, 582, 586, 588, 590, 596, 599, 570, 572,
	583, 587, 589, 591, 597, 600, 559, 561, 563, 565,
	578, 577, 574, 602, 603, 580, 585, 564, 576, 581,
	594, 601, 598, 558, 562, 566, 575, 593, 592, 573,
	584, 595, 579, 567, 560, 568, 0, 204, 229, 387,
	0, 478, 304, 683, 650, 508, 645, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 454, 458, 459, 460, 462,
	464, 466, 479, 484, 498, 499, 500, 501, 502, 505,
	506, 513, 514, 515, 516, 517, 525, 526, 531, 532,
	533, 534, 545, 618, 620, 637, 658, 665, 504, 404,
	452, 476, 611, 0, 0, 317, 318, 467, 468, 332,
	333, 679, 680, 316, 632, 666, 629, 678, 660, 461,
	397, 0, 0, 400, 297, 322, 339, 0, 649, 527,
	236, 490, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 457, 312, 287, 255,
	483, 252, 509, 548, 549, 550, 552, 415, 282, 456,
	416, 0, 395, 606, 607, 335, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 0, 212, 530,
	0, 453, 0, 211, 0, 511, 268, 396, 393, 615,
	298, 289, 285, 264, 336, 405, 450, 547, 444, 0,
	389, 0, 651, 522, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 523, 302,
	0, 0, 0, 0, 0, 536, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 0, 0, 641, 0, 0,
	0, 281, 340, 288, 280, 612, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 477, 0,
	319, 334, 4255, 4256, 4257, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 485, 497,
	0, 0, 0, 0, 269, 0, 495, 448, 636, 243,
	300, 482, 455, 493, 463, 303, 0, 0, 494, 391,
	617, 473, 633, 663, 664, 279, 428, 647, 551, 656,
	681, 234, 276, 442, 535, 639, 519, 417, 613, 614,
	348, 518, 311, 209, 388, 669, 232, 503, 390, 253,
	241, 619, 644, 315, 267, 305, 480, 676, 221, 546,
	630, 250, 507, 0, 0, 684, 258, 529, 642, 631,
	223, 626, 528, 413, 345, 346, 222, 0, 481, 284,
	309, 0, 0, 274, 437, 621, 622, 272, 685, 237,
	655, 228, 0, 654, 430, 616, 627, 414, 402, 227,
	625, 412, 401, 353, 374, 375, 296, 324, 470, 394,
	471, 323, 325, 425, 424, 426, 215, 640, 659, 0,
	216, 0, 524, 643, 686, 475, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	469, 465, 474, 0, 610, 634, 648, 661, 667, 668,
	670, 671, 672, 673, 674, 677, 675, 429, 329, 520,
	352, 392, 0, 0, 447, 496, 251, 638, 521, 240,
	604, 418, 427, 259, 261, 260, 235, 512, 609, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 682, 537, 543,
	538, 539, 540, 541, 542, 0, 544, 0, 0, 0,
	0, 0, 419, 0, 623, 624, 705, 403, 510, 635,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 608, 330, 224, 225, 226, 553, 554, 555, 556,
	652, 653, 657, 213, 486, 487, 488, 489, 308, 646,
	326, 492, 491, 350, 351, 398, 472, 569, 571, 582,
	586, 588, 590, 596, 599, 570, 572, 583, 587, 589,
	591, 597, 600, 559, 561, 563, 565, 578, 577, 574,
	602, 603, 580, 585, 564, 576, 581, 594, 601, 598,
	558, 562, 566, 575, 593, 592, 573, 584, 595, 579,
	567, 560, 568, 0, 204, 229, 387, 0, 478, 304,
	683, 650, 508, 645, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 454, 458, 459, 460, 462, 464, 466, 479,
	484, 498, 499, 500, 501, 502, 505, 506, 513, 514,
	515, 516, 517, 525, 526, 531, 532, 533, 534, 545,
	618, 620, 637, 658, 665, 504, 404, 452, 476, 611,
	0, 0, 317, 318, 467, 468, 332, 333, 679, 680,
	316, 632, 666, 629, 678, 660, 461, 397, 0, 0,
	400, 297, 322, 339, 0, 649, 527, 236, 490, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 457, 312, 287, 255, 483, 252, 509,
	548, 549, 550, 552, 415, 282, 456, 416, 0, 395,
	606, 607, 335, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 0, 212, 530, 0, 453, 0,
	211, 0, 511, 268, 396, 393, 615, 298, 289, 285,
	264, 336, 405, 450, 547, 444, 0, 389, 0, 651,
	522, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 523, 302, 0, 101, 0,
	0, 0, 536, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 0, 0, 641, 0, 0, 0, 281, 340,
	288, 280, 612, 0, 0, 0, 0, 0, 0, 628,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 477, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 485, 497, 0, 0, 0,
	0, 269, 0, 495, 448, 636, 243, 300, 482, 455,
	493, 463, 303, 0, 0, 494, 391, 617, 473, 633,
	663, 664, 279, 428, 647, 551, 656, 681, 234, 276,
	442, 535, 639, 519, 417, 613, 614, 348, 518, 311,
	209, 388, 669, 232, 503, 390, 253, 241, 619, 644,
	315, 267, 305, 480, 676, 221, 546, 630, 250, 507,
	0, 0, 684, 258, 529, 642, 631, 223, 626, 528,
	413, 345, 346, 222, 0, 481, 284, 309, 0, 0,
	274, 437, 621, 622, 272, 685, 237, 655, 228, 0,
	654, 430, 616, 627, 414, 402, 227, 625, 412, 401,
	353, 374, 375, 296, 324, 470, 394, 471, 323, 325,
	425, 424, 426, 215, 640, 659, 0, 216, 0, 524,
	643, 686, 475, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 469, 465, 474,
	0, 610, 634, 648, 661, 667, 668, 670, 671, 672,
	673, 674, 677, 675, 429, 329, 520, 352, 392, 0,
	0, 447, 496, 251, 638, 521, 240, 604, 418, 427,
	259, 261, 260, 235, 512, 609, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 682, 537, 543, 538, 539, 540,
	541, 542, 0, 544, 0, 0, 0, 0, 0, 419,
	0, 623, 624, 705, 403, 510, 635, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 608, 330,
	224, 225, 226, 553, 554, 555, 556, 652, 653, 657,
	213, 486, 487, 488, 489, 308, 646, 326, 492, 491,
	350, 351, 398, 472, 569, 571, 582, 586, 588, 590,
	596, 599, 570, 572, 583, 587, 589, 591, 597, 600,
	559, 561, 563, 565, 578, 577, 574, 602, 603, 580,
	585, 564, 576, 581, 594, 601, 598, 558, 562, 566,
	575, 593, 592, 573, 584, 595, 579, 567, 560, 568,
	0, 204, 229, 387, 0, 478, 304, 683, 650, 508,
	645, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 2503, 0, 0, 2502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 454,
	458, 459, 460, 462, 464, 466, 479, 484, 498, 499,
	500, 501, 502, 505, 506, 513, 514, 515, 516, 517,
	525, 526, 531, 532, 533, 534, 545, 618, 620, 637,
	658, 665, 504, 404, 452, 476, 611, 0, 0, 317,
	318, 467, 468, 332, 333, 679, 680, 316, 632, 666,
	629, 678, 660, 461, 397, 0, 0, 400, 297, 322,
	339, 0, 649, 527, 236, 490, 306, 265, 0, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	457, 312, 287, 255, 483, 252, 509, 548, 549, 550,
	552, 415, 282, 456, 416, 0, 395, 606, 607, 335,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 2435, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 385, 283,
	0, 0, 212, 530, 0, 453, 0, 211, 0, 511,
	268, 396, 393, 615, 298, 289, 285, 264, 336, 405,
	450, 547, 444, 0, 389, 0, 651, 522, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 523, 302, 0, 0, 0, 0, 2024, 536,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 0,
	0, 641, 0, 0, 0, 281, 340, 288, 280, 612,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 477, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 485, 497, 0, 0, 0, 0, 269, 0,
	495, 448, 636, 243, 300, 482, 455, 493, 463, 303,
	0, 2433, 494, 391, 617, 473, 633, 663, 664, 279,
	428, 647, 551, 656, 681, 234, 276, 442, 535, 639,
	519, 417, 613, 614, 348, 518, 311, 209, 388, 669,
	232, 503, 390, 253, 241, 619, 644, 315, 267, 305,
	480, 676, 221, 546, 630, 250, 507, 0, 0, 684,
	258, 529, 642, 631, 223, 626, 528, 413, 345, 346,
	222, 0, 481, 284, 309, 0, 0, 274, 437, 621,
	622, 272, 685, 237, 655, 228, 0, 654, 430, 616,
	627, 414, 402, 227, 625, 412, 401, 353, 374, 375,
	296, 324, 470, 394, 471, 323, 325, 425, 424, 426,
	215, 640, 659, 0, 216, 0, 524, 643, 686, 475,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 469, 465, 474, 0, 610, 634,
	648, 661, 667, 668, 670, 671, 672, 673, 674, 677,
	675, 429, 329, 520, 352, 392, 0, 0, 447, 496,
	251, 638, 521, 240, 604, 418, 427, 259, 261, 260,
	235, 512, 609, 246, 266, 207, 0, 0, 0, 0,
	270, 271, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 682, 537, 543, 538, 539, 540, 541, 542, 0,
	544, 0, 0, 0, 0, 0, 419, 0, 623, 624,
	705, 403, 510, 635, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 608, 330, 224, 225, 226,
	553, 554, 555, 556, 652, 653, 657, 213, 486, 487,
	488, 489, 308, 646, 326, 492, 491, 350, 351, 398,
	472, 569, 571, 582, 586, 588, 590, 596, 599, 570,
	572, 583, 587, 589, 591, 597, 600, 559, 561, 563,
	565, 578, 577, 574, 602, 603, 580, 585, 564, 576,
	581, 594, 601, 598, 558, 562, 566, 575, 593, 592,
	573, 584, 595, 579, 567, 560, 568, 0, 204, 229,
	387, 0, 478, 304, 683, 650, 508, 645, 214, 231,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 454, 458, 459, 460,
	462, 464, 466, 479, 484, 498, 499, 500, 501, 502,
	505, 506, 513, 514, 515, 516, 517, 525, 526, 531,
	532, 533, 534, 545, 618, 620, 637, 658, 665, 504,
	404, 452, 476, 611, 0, 0, 317, 318, 467, 468,
	332, 333, 679, 680, 316, 632, 666, 629, 678, 660,
	461, 397, 0, 0, 400, 297, 322, 339, 0, 649,
	527, 236, 490, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 457, 312, 287,
	255, 483, 252, 509, 548, 549, 550, 552, 415, 282,
	456, 416, 0, 395, 606, 607, 335, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 385, 283, 0, 0, 212,
	530, 0, 453, 0, 211, 0, 511, 268, 396, 393,
	615, 298, 289, 285, 264, 336, 405, 450, 547, 444,
	0, 389, 0, 651, 522, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 523,
	302, 0, 0, 0, 0, 0, 536, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 641, 0,
	0, 0, 281, 340, 288, 280, 612, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 477,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 384, 1140, 349, 205, 233, 1138, 0, 434, 485,
	497, 0, 0, 0, 0, 269, 0, 495, 448, 636,
	243, 300, 482, 455, 493, 463, 303, 0, 0, 494,
	391, 617, 473, 633, 663, 664, 279, 428, 647, 551,
	656, 681, 234, 276, 442, 535, 639, 519, 417, 613,
	614, 348, 518, 311, 209, 388, 669, 232, 503, 390,
	253, 241, 619, 644, 315, 267, 305, 480, 676, 221,
	546, 630, 250, 507, 0, 0, 684, 258, 529, 642,
	631, 223, 626, 528, 413, 345, 346, 222, 0, 481,
	284, 309, 0, 0, 274, 437, 621, 622, 272, 685,
	237, 655, 228, 0, 654, 430, 616, 627, 414, 402,
	227, 625, 412, 401, 353, 374, 375, 296, 324, 470,
	394, 471, 323, 325, 425, 424, 426, 215, 640, 659,
	0, 216, 0, 524, 643, 686, 475, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 469, 465, 474, 0, 610, 634, 648, 661, 667,
	668, 670, 671, 672, 673, 674, 677, 675, 429, 329,
	520, 352, 392, 0, 0, 447, 496, 251, 638, 521,
	240, 604, 418, 427, 259, 261, 260, 235, 512, 609,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 682, 537,
	543, 538, 539, 540, 541, 542, 0, 544, 0, 0,
	0, 0, 0, 419, 0, 623, 624, 705, 403, 510,
	635, 354, 368, 371, 360, 380, 0, 381, 356, 357,
	362, 365, 366, 367, 372, 373, 377, 383, 263, 218,
	410, 420, 608, 330, 224, 225, 226, 553, 554, 555,
	556, 652, 653, 657, 213, 486, 487, 488, 489, 308,
	646, 326, 492, 491, 350, 351, 398, 472, 569, 571,
	582, 586, 588, 590, 596, 599, 570, 572, 583, 587,
	589, 591, 597, 600, 559, 561, 563, 565, 578, 577,
	574, 602, 603, 580, 585, 564, 576, 581, 594, 601,
	598, 558, 562, 566, 575, 593, 592, 573, 584, 595,
	579, 567, 560, 568, 0, 204, 229, 387, 0, 478,
	304, 683, 650, 508, 645, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 454, 458, 459, 460, 462, 464, 466,
	479, 484, 498, 499, 500, 501, 502, 505, 506, 513,
	514, 515, 516, 517, 525, 526, 531, 532, 533, 534,
	545, 618, 620, 637, 658, 665, 504, 404, 452, 476,
	611, 0, 0, 317, 318, 467, 468, 332, 333, 679,
	680, 316, 632, 666, 629, 678, 660, 461, 397, 0,
	0, 400, 297, 322, 339, 0, 649, 527, 236, 490,
	306, 265, 0, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 457, 312, 287, 255, 483, 252,
	509, 548, 549, 550, 552, 415, 282, 456, 416, 0,
	395, 606, 607, 335, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 2435, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 385, 283, 0, 0, 212, 530, 0, 453,
	0, 211, 0, 511, 268, 396, 393, 615, 298, 289,
	285, 264, 336, 405, 450, 547, 444, 0, 389, 0,
	651, 522, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 523, 302, 0, 0,
	0, 0, 2024, 536, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 641, 0, 0, 0, 281,
	340, 288, 280, 612, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 477, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 485, 497, 0, 0,
	0, 0, 269, 0, 495, 448, 636, 243, 300, 482,
	455, 493, 463, 303, 0, 0, 494, 391, 617, 473,
	633, 663, 664, 279, 428, 647, 551, 656, 681, 234,
	276, 442, 535, 639, 519, 417, 613, 614, 348, 518,
	311, 209, 388, 669, 232, 503, 390, 253, 241, 619,
	644, 315, 267, 305, 480, 676, 221, 546, 630, 250,
	507, 0, 0, 684, 258, 529, 642, 631, 223, 626,
	528, 413, 345, 346, 222, 0, 481, 284, 309, 0,
	0, 274, 437, 621, 622, 272, 685, 237, 655, 228,
	0, 654, 430, 616, 627, 414, 402, 227, 625, 412,
	401, 353, 374, 375, 296, 324, 470, 394, 471, 323,
	325, 425, 424, 426, 215, 640, 659, 0, 216, 0,
	524, 643, 686, 475, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 469, 465,
	474, 0, 610, 634, 648, 661, 667, 668, 670, 671,
	672, 673, 674, 677, 675, 429, 329, 520, 352, 392,
	0, 0, 447, 496, 251, 638, 521, 240, 604, 418,
	427, 259, 261, 260, 235, 512, 609, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 682, 537, 543, 538, 539,
	540, 541, 542, 0, 544, 0, 0, 0, 0, 0,
	419, 0, 623, 624, 705, 403, 510, 635, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 608,
	330, 224, 225, 226, 553, 554, 555, 556, 652, 653,
	657, 213, 486, 487, 488, 489, 308, 646, 326, 492,
	491, 350, 351, 398, 472, 569, 571, 582, 586, 588,
	590, 596, 599, 570, 572, 583, 587, 589, 591, 597,
	600, 559, 561, 563, 565, 578, 577, 574, 602, 603,
	580, 585, 564, 576, 581, 594, 601, 598, 558, 562,
	566, 575, 593, 592, 573, 584, 595, 579, 567, 560,
	568, 0, 204, 229, 387, 0, 478, 304, 683, 650,
	508, 645, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	454, 458, 459, 460, 462, 464, 466, 479, 484, 498,
	499, 500, 501, 502, 505, 506, 513, 514, 515, 516,
	517, 525, 526, 531, 532, 533, 534, 545, 618, 620,
	637, 658, 665, 504, 404, 452, 476, 611, 0, 0,
	317, 318, 467, 468, 332, 333, 679, 680, 316, 632,
	666, 629, 678, 660, 461, 397, 0, 0, 400, 297,
	322, 339, 0, 649, 527, 236, 490, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 457, 312, 287, 255, 483, 252, 509, 548, 549,
	550, 552, 415, 282, 456, 416, 0, 395, 606, 607,
	335, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 0, 212, 530, 0, 453, 0, 211, 0,
	511, 268, 396, 393, 615, 298, 289, 285, 264, 336,
	405, 450, 547, 444, 0, 389, 0, 651, 522, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 523, 302, 0, 0, 0, 1805, 0,
	536, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 641, 0, 0, 0, 281, 340, 288, 280,
	612, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 477, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 3821, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 485, 497, 0, 0, 0, 0, 269,
	0, 495, 448, 636, 243, 300, 482, 455, 493, 463,
	303, 0, 0, 494, 391, 617, 473, 633, 663, 664,
	279, 428, 647, 551, 656, 681, 234, 276, 442, 535,
	639, 519, 417, 613, 614, 348, 518, 311, 209, 388,
	669, 232, 503, 390, 253, 241, 619, 644, 315, 267,
	305, 480, 676, 221, 546, 630, 250, 507, 0, 0,
	684, 258, 529, 642, 631, 223, 626, 528, 413, 345,
	346, 222, 0, 481, 284, 309, 0, 0, 274, 437,
	621, 622, 272, 685, 237, 655, 228, 0, 654, 430,
	616, 627, 414, 402, 227, 625, 412, 401, 353, 374,
	375, 296, 324, 470, 394, 471, 323, 325, 425, 424,
	426, 215, 640, 659, 0, 216, 0, 524, 643, 686,
	475, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 469, 465, 474, 0, 610,
	634, 648, 661, 667, 668, 670, 671, 672, 673, 674,
	677, 675, 429, 329, 520, 352, 392, 0, 0, 447,
	496, 251, 638, 521, 240, 604, 418, 427, 259, 261,
	260, 235, 512, 609, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 682, 537, 543, 538, 539, 540, 541, 542,
	0, 544, 0, 0, 0, 0, 0, 419, 0, 623,
	624, 705, 403, 510, 635, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 608, 330, 224, 225,
	226, 553, 554, 555, 556, 652, 653, 657, 213, 486,
	487, 488, 489, 308, 646, 326, 492, 491, 350, 351,
	398, 472, 569, 571, 582, 586, 588, 590, 596, 599,
	570, 572, 583, 587, 589, 591, 597, 600, 559, 561,
	563, 565, 578, 577, 574, 602, 603, 580, 585, 564,
	576, 581, 594, 601, 598, 558, 562, 566, 575, 593,
	592, 573, 584, 595, 579, 567, 560, 568, 0, 204,
	229, 387, 0, 478, 304, 683, 650, 508, 645, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 454, 458, 459,
	460, 462, 464, 466, 479, 484, 498, 499, 500, 501,
	502, 505, 506, 513, 514, 515, 516, 517, 525, 526,
	531, 532, 533, 534, 545, 618, 620, 637, 658, 665,
	504, 404, 452, 476, 611, 0, 0, 317, 318, 467,
	468, 332, 333, 679, 680, 316, 632, 666, 629, 678,
	660, 461, 397, 0, 0, 400, 297, 322, 339, 0,
	649, 527, 236, 490, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 457, 312,
	287, 255, 483, 252, 509, 548, 549, 550, 552, 415,
	282, 456, 416, 0, 395, 606, 607, 335, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 385, 283, 0, 0,
	212, 530, 0, 453, 0, 211, 0, 511, 268, 396,
	393, 615, 298, 289, 285, 264, 336, 405, 450, 547,
	444, 0, 389, 0, 651, 522, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	523, 302, 0, 0, 0, 0, 2195, 536, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 641,
	0, 0, 0, 281, 340, 288, 280, 612, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	477, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	485, 497, 0, 0, 0, 0, 269, 0, 495, 448,
	636, 243, 300, 482, 455, 493, 463, 303, 0, 0,
	494, 391, 617, 473, 633, 663, 664, 279, 428, 647,
	551, 656, 681, 234, 276, 442, 535, 639, 519, 417,
	613, 614, 348, 518, 311, 209, 388, 669, 232, 503,
	390, 253, 241, 619, 644, 315, 267, 305, 480, 676,
	221, 546, 630, 250, 507, 0, 0, 684, 258, 529,
	642, 631, 223, 626, 528, 413, 345, 346, 222, 0,
	481, 284, 309, 0, 0, 274, 437, 621, 622, 272,
	685, 237, 655, 228, 0, 654, 430, 616, 627, 414,
	402, 227, 625, 412, 401, 353, 374, 375, 296, 324,
	470, 394, 471, 323, 325, 425, 424, 426, 215, 640,
	659, 0, 216, 0, 524, 643, 686, 475, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 469, 465, 474, 0, 610, 634, 648, 661,
	667, 668, 670, 671, 672, 673, 674, 677, 675, 429,
	329, 520, 352, 392, 0, 0, 447, 496, 251, 638,
	521, 240, 604, 418, 427, 259, 261, 260, 235, 512,
	609, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 682,
	537, 543, 538, 539, 540, 541, 542, 0, 544, 0,
	0, 0, 0, 0, 419, 0, 623, 624, 705, 403,
	510, 635, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 608, 330, 224, 225, 226, 553, 554,
	555, 556, 652, 653, 657, 213, 486, 487, 488, 489,
	308, 646, 326, 492, 491, 350, 351, 398, 472, 569,
	571, 582, 586, 588, 590, 596, 599, 570, 572, 583,
	587, 589, 591, 597, 600, 559, 561, 563, 565, 578,
	577, 574, 602, 603, 580, 585, 564, 576, 581, 594,
	601, 598, 558, 562, 566, 575, 593, 592, 573, 584,
	595, 579, 567, 560, 568, 0, 204, 229, 387, 0,
	478, 304, 683, 650, 508, 645, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 454, 458, 459, 460, 462, 464,
	466, 479, 484, 498, 499, 500, 501, 502, 505, 506,
	513, 514, 515, 516, 517, 525, 526, 531, 532, 533,
	534, 545, 618, 620, 637, 658, 665, 504, 404, 452,
	476, 611, 0, 0, 317, 318, 467, 468, 332, 333,
	679, 680, 316, 632, 666, 629, 678, 660, 461, 397,
	0, 0, 400, 297, 322, 339, 0, 649, 527, 236,
	490, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 457, 312, 287, 255, 483,
	252, 509, 548, 549, 550, 552, 415, 282, 456, 416,
	0, 395, 606, 607, 335, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 0, 212, 530, 0,
	453, 0, 211, 0, 511, 268, 396, 393, 615, 298,
	289, 285, 264, 336, 405, 450, 547, 444, 0, 389,
	0, 651, 522, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 523, 302, 0,
	0, 0, 0, 2969, 536, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 641, 0, 0, 0,
	281, 340, 288, 280, 612, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 477, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 485, 497, 0,
	0, 0, 0, 269, 0, 495, 448, 636, 243, 300,
	482, 455, 493, 463, 303, 0, 0, 494, 391, 617,
	473, 633, 663, 664, 279, 428, 647, 551, 656, 681,
	234, 276, 442, 535, 639, 519, 417, 613, 614, 348,
	518, 311, 209, 388, 669, 232, 503, 390, 253, 241,
	619, 644, 315, 267, 305, 480, 676, 221, 546, 630,
	250, 507, 0, 0, 684, 258, 529, 642, 631, 223,
	626, 528, 413, 345, 346, 222, 0, 481, 284, 309,
	0, 0, 274, 437, 621, 622, 272, 685, 237, 655,
	228, 0, 654, 430, 616, 627, 414, 402, 227, 625,
	412, 401, 353, 374, 375, 296, 324, 470, 394, 471,
	323, 325, 425, 424, 426, 215, 640, 659, 0, 216,
	0, 524, 643, 686, 475, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 469,
	465, 474, 0, 610, 634, 648, 661, 667, 668, 670,
	671, 672, 673, 674, 677, 675, 429, 329, 520, 352,
	392, 0, 0, 447, 496, 251, 638, 521, 240, 604,
	418, 427, 259, 261, 260, 235, 512, 609, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 682, 537, 543, 538,
	539, 540, 541, 542, 0, 544, 0, 0, 0, 0,
	0, 419, 0, 623, 624, 705, 403, 510, 635, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	608, 330, 224, 225, 226, 553, 554, 555, 556, 652,
	653, 657, 213, 486, 487, 488, 489, 308, 646, 326,
	492, 491, 350, 351, 398, 472, 569, 571, 582, 586,
	588, 590, 596, 599, 570, 572, 583, 587, 589, 591,
	597, 600, 559, 561, 563, 565, 578, 577, 574, 602,
	603, 580, 585, 564, 576, 581, 594, 601, 598, 558,
	562, 566, 575, 593, 592, 573, 584, 595, 579, 567,
	560, 568, 0, 204, 229, 387, 0, 478, 304, 683,
	650, 508, 645, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 454, 458, 459, 460, 462, 464, 466, 479, 484,
	498, 499, 500, 501, 502, 505, 506, 513, 514, 515,
	516, 517, 525, 526, 531, 532, 533, 534, 545, 618,
	620, 637, 658, 665, 504, 404, 452, 476, 611, 0,
	0, 317, 318, 467, 468, 332, 333, 679, 680, 316,
	632, 666, 629, 678, 660, 461, 397, 0, 0, 400,
	297, 322, 339, 0, 649, 527, 236, 490, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 457, 312, 287, 255, 483, 252, 509, 548,
	549, 550, 552, 415, 282, 456, 416, 0, 395, 606,
	607, 335, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	385, 283, 0, 0, 212, 530, 0, 453, 0, 211,
	0, 511, 268, 396, 393, 615, 298, 289, 285, 264,
	336, 405, 450, 547, 444, 0, 389, 0, 651, 522,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 523, 302, 0, 0, 0, 0,
	0, 536, 757, 0, 0, 0, 0, 2936, 0, 0,
	0, 0, 249, 0, 0, 256, 2937, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 641, 0, 0, 0, 281, 340, 288,
	280, 612, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 477, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 485, 497, 0, 0, 0, 0,
	269, 0, 495, 448, 636, 243, 300, 482, 455, 493,
	463, 303, 0, 0, 494, 391, 617, 473, 633, 663,
	664, 279, 428, 647, 551, 656, 681, 234, 276, 442,
	535, 639, 519, 417, 613, 614, 348, 518, 311, 209,
	388, 669, 232, 503, 390, 253, 241, 619, 644, 315,
	267, 305, 480, 676, 221, 546, 630, 250, 507, 0,
	0, 684, 258, 529, 642, 631, 223, 626, 528, 413,
	345, 346, 222, 0, 481, 284, 309, 0, 0, 274,
	437, 621, 622, 272, 685, 237, 655, 228, 0, 654,
	430, 616, 627, 414, 402, 227, 625, 412, 401, 353,
	374, 375, 296, 324, 470, 394, 471, 323, 325, 425,
	424, 426, 215, 640, 659, 0, 216, 0, 524, 643,
	686, 475, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 469, 465, 474, 0,
	610, 634, 648, 661, 667, 668, 670, 671, 672, 673,
	674, 677, 675, 429, 329, 520, 352, 392, 0, 0,
	447, 496, 251, 638, 521, 240, 604, 418, 427, 259,
	261, 260, 235, 512, 609, 246, 266, 207, 0, 0,
	0, 0, 270, 271, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 682, 537, 543, 538, 539, 540, 541,
	542, 0, 544, 0, 0, 0, 0, 0, 419, 0,
	623, 624, 705, 403, 510, 635, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 608, 330, 224,
	225, 226, 553, 554, 555, 556, 652, 653, 657, 213,
	486, 487, 488, 489, 308, 646, 326, 492, 491, 350,
	351, 398, 472, 569, 571, 582, 586, 588, 590, 596,
	599, 570, 572, 583, 587, 589, 591, 597, 600, 559,
	561, 563, 565, 578, 577, 574, 602, 603, 580, 585,
	564, 576, 581, 594, 601, 598, 558, 562, 566, 575,
	593, 592, 573, 584, 595, 579, 567, 560, 568, 0,
	204, 229, 387, 0, 478, 304, 683, 650, 508, 645,
	214, 231, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 454, 458,
	459, 460, 462, 464, 466, 479, 484, 498, 499, 500,
	501, 502, 505, 506, 513, 514, 515, 516, 517, 525,
	526, 531, 532, 533, 534, 545, 618, 620, 637, 658,
	665, 504, 404, 452, 476, 611, 0, 0, 317, 318,
	467, 468, 332, 333, 679, 680, 316, 632, 666, 629,
	678, 660, 461, 397, 0, 0, 400, 297, 322, 339,
	0, 649, 527, 236, 490, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 457,
	312, 287, 255, 483, 252, 509, 548, 549, 550, 552,
	415, 282, 456, 416, 0, 395, 606, 607, 335, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 286, 1868, 0, 0, 0, 385, 283, 0,
	0, 212, 530, 0, 453, 0, 211, 0, 511, 268,
	396, 393, 615, 298, 289, 285, 264, 336, 405, 450,
	547, 444, 0, 389, 0, 651, 522, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 523, 302, 0, 0, 0, 0, 1867, 536, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 0, 0,
	641, 0, 0, 0, 281, 340, 288, 280, 612, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 477, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 485, 497, 0, 0, 0, 0, 269, 0, 495,
	448, 636, 243, 300, 482, 455, 493, 463, 303, 0,
	0, 494, 391, 617, 473, 633, 663, 664, 279, 428,
	647, 551, 656, 681, 234, 276, 442, 535, 639, 519,
	417, 613, 614, 348, 518, 311, 209, 388, 669, 232,
	503, 390, 253, 241, 619, 644, 315, 267, 305, 480,
	676, 221, 546, 630, 250, 507, 0, 0, 684, 258,
	529, 642, 631, 223, 626, 528, 413, 345, 346, 222,
	0, 481, 284, 309, 0, 0, 274, 437, 621, 622,
	272, 685, 237, 655, 228, 0, 654, 430, 616, 627,
	414, 402, 227, 625, 412, 401, 353, 374, 375, 296,
	324, 470, 394, 471, 323, 325, 425, 424, 426, 215,
	640, 659, 0, 216, 0, 524, 643, 686, 475, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 469, 465, 474, 0, 610, 634, 648,
	661, 667, 668, 670, 671, 672, 673, 674, 677, 675,
	429, 329, 520, 352, 392, 0, 0, 447, 496, 251,
	638, 521, 240, 604, 418, 427, 259, 261, 260, 235,
	512, 609, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	682, 537, 543, 538, 539, 540, 541, 542, 0, 544,
	0, 0, 0, 0, 0, 419, 0, 623, 624, 705,
	403, 510, 635, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 608, 330, 224, 225, 226, 553,
	554, 555, 556, 652, 653, 657, 213, 486, 487, 488,
	489, 308, 646, 326, 492, 491, 350, 351, 398, 472,
	569, 571, 582, 586, 588, 590, 596, 599, 570, 572,
	583, 587, 589, 591, 597, 600, 559, 561, 563, 565,
	578, 577, 574, 602, 603, 580, 585, 564, 576, 581,
	594, 601, 598, 558, 562, 566, 575, 593, 592, 573,
	584, 595, 579, 567, 560, 568, 0, 204, 229, 387,
	0, 478, 304, 683, 650, 508, 645, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 454, 458, 459, 460, 462,
	464, 466, 479, 484, 498, 499, 500, 501, 502, 505,
	506, 513, 514, 515, 516, 517, 525, 526, 531, 532,
	533, 534, 545, 618, 620, 637, 658, 665, 504, 404,
	452, 476, 611, 0, 0, 317, 318, 467, 468, 332,
	333, 679, 680, 316, 632, 666, 629, 678, 660, 461,
	397, 0, 0, 400, 297, 322, 339, 0, 649, 527,
	236, 490, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 457, 312, 287, 255,
	483, 252, 509, 548, 549, 550, 552, 415, 282, 456,
	416, 0, 395, 606, 607, 335, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 0, 212, 530,
	0, 453, 0, 211, 0, 511, 268, 396, 393, 615,
	298, 289, 285, 264, 336, 405, 450, 547, 444, 0,
	389, 0, 651, 522, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 523, 302,
	0, 0, 0, 0, 0, 536, 759, 760, 761, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 0, 0, 641, 0, 0,
	0, 281, 340, 288, 280, 612, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 477, 0,
	319, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 485, 497,
	0, 0, 0, 0, 269, 0, 495, 448, 636, 243,
	300, 482, 455, 493, 463, 303, 0, 0, 494, 391,
	617, 473, 633, 663, 664, 279, 428, 647, 551, 656,
	681, 234, 276, 442, 535, 639, 519, 417, 613, 614,
	348, 518, 311, 209, 388, 669, 232, 503, 390, 253,
	241, 619, 644, 315, 267, 305, 480, 676, 221, 546,
	630, 250, 507, 0, 0, 684, 258, 529, 642, 631,
	223, 626, 528, 413, 345, 346, 222, 0, 481, 284,
	309, 0, 0, 274, 437, 621, 622, 272, 685, 237,
	655, 228, 0, 654, 430, 616, 627, 414, 402, 227,
	625, 412, 401, 353, 374, 375, 296, 324, 470, 394,
	471, 323, 325, 425, 424, 426, 215, 640, 659, 0,
	216, 0, 524, 643, 686, 475, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	469, 465, 474, 0, 610, 634, 648, 661, 667, 668,
	670, 671, 672, 673, 674, 677, 675, 429, 329, 520,
	352, 392, 0, 0, 447, 496, 251, 638, 521, 240,
	604, 418, 427, 259, 261, 260, 235, 512, 609, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 682, 537, 543,
	538, 539, 540, 541, 542, 0, 544, 0, 0, 0,
	0, 0, 419, 0, 623, 624, 705, 403, 510, 635,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 608, 330, 224, 225, 226, 553, 554, 555, 556,
	652, 653, 657, 213, 486, 487, 488, 489, 308, 646,
	326, 492, 491, 350, 351, 398, 472, 569, 571, 582,
	586, 588, 590, 596, 599, 570, 572, 583, 587, 589,
	591, 597, 600, 559, 561, 563, 565, 578, 577, 574,
	602, 603, 580, 585, 564, 576, 581, 594, 601, 598,
	558, 562, 566, 575, 593, 592, 573, 584, 595, 579,
	567, 560, 568, 0, 204, 229, 387, 0, 478, 304,
	683, 650, 508, 645, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 454, 458, 459, 460, 462, 464, 466, 479,
	484, 498, 499, 500, 501, 502, 505, 506, 513, 514,
	515, 516, 517, 525, 526, 531, 532, 533, 534, 545,
	618, 620, 637, 658, 665, 504, 404, 452, 476, 611,
	0, 0, 317, 318, 467, 468, 332, 333, 679, 680,
	316, 632, 666, 629, 678, 660, 461, 397, 0, 0,
	400, 297, 322, 339, 0, 649, 527, 236, 490, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 457, 312, 287, 255, 483, 252, 509,
	548, 549, 550, 552, 415, 282, 456, 416, 0, 395,
	606, 607, 335, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 0, 212, 530, 0, 453, 0,
	211, 0, 511, 268, 396, 393, 615, 298, 289, 285,
	264, 336, 405, 450, 547, 444, 0, 389, 0, 651,
	522, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 523, 302, 0, 0, 0,
	0, 0, 536, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 0, 0, 641, 0, 0, 0, 281, 340,
	288, 280, 612, 0, 0, 0, 0, 0, 0, 628,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 477, 0, 319, 334, 0,
	0, 0, 0, 4261, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 485, 497, 0, 0, 0,
	0, 269, 0, 495, 448, 636, 243, 300, 482, 455,
	493, 463, 303, 0, 0, 494, 391, 617, 473, 633,
	663, 664, 279, 428, 647, 551, 656, 681, 234, 276,
	442, 535, 639, 519, 417, 613, 614, 348, 518, 311,
	209, 388, 669, 232, 503, 390, 253, 241, 619, 644,
	315, 267, 305, 480, 676, 221, 546, 630, 250, 507,
	0, 0, 684, 258, 529, 642, 631, 223, 626, 528,
	413, 345, 346, 222, 0, 481, 284, 309, 0, 0,
	274, 437, 621, 622, 272, 685, 237, 655, 228, 0,
	654, 430, 616, 627, 414, 402, 227, 625, 412, 401,
	353, 374, 375, 296, 324, 470, 394, 471, 323, 325,
	425, 424, 426, 215, 640, 659, 0, 216, 0, 524,
	643, 686, 475, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 469, 465, 474,
	0, 610, 634, 648, 661, 667, 668, 670, 671, 672,
	673, 674, 677, 675, 429, 329, 520, 352, 392, 0,
	0, 447, 496, 251, 638, 521, 240, 604, 418, 427,
	259, 261, 260, 235, 512, 609, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 682, 537, 543, 538, 539, 540,
	541, 542, 0, 544, 0, 0, 0, 0, 0, 419,
	0, 623, 624, 705, 403, 510, 635, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 608, 330,
	224, 225, 226, 553, 554, 555, 556, 652, 653, 657,
	213, 486, 487, 488, 489, 308, 646, 326, 492, 491,
	350, 351, 398, 472, 569, 571, 582, 586, 588, 590,
	596, 599, 570, 572, 583, 587, 589, 591, 597, 600,
	559, 561, 563, 565, 578, 577, 574, 602, 603, 580,
	585, 564, 576, 581, 594, 601, 598, 558, 562, 566,
	575, 593, 592, 573, 584, 595, 579, 567, 560, 568,
	0, 204, 229, 387, 0, 478, 304, 683, 650, 508,
	645, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 454,
	458, 459, 460, 462, 464, 466, 479, 484, 498, 499,
	500, 501, 502, 505, 506, 513, 514, 515, 516, 517,
	525, 526, 531, 532, 533, 534, 545, 618, 620, 637,
	658, 665, 504, 404, 452, 476, 611, 0, 0, 317,
	318, 467, 468, 332, 333, 679, 680, 316, 632, 666,
	629, 678, 660, 461, 397, 0, 0, 400, 297, 322,
	339, 0, 649, 527, 236, 490, 306, 265, 0, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	457, 312, 287, 255, 483, 252, 509, 548, 549, 550,
	552, 415, 282, 456, 416, 0, 395, 606, 607, 335,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 385, 283,
	0, 0, 212, 530, 0, 453, 0, 211, 0, 511,
	268, 396, 393, 615, 298, 289, 285, 264, 336, 405,
	450, 547, 444, 0, 389, 0, 651, 522, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 523, 302, 0, 0, 0, 0, 0, 536,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 0,
	0, 641, 0, 0, 0, 281, 340, 288, 280, 612,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 477, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	4177, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 485, 497, 0, 0, 0, 0, 269, 0,
	495, 448, 636, 243, 300, 482, 455, 493, 463, 303,
	0, 0, 494, 391, 617, 473, 633, 663, 664, 279,
	428, 647, 551, 656, 681, 234, 276, 442, 535, 639,
	519, 417, 613, 614, 348, 518, 311, 209, 388, 669,
	232, 503, 390, 253, 241, 619, 644, 315, 267, 305,
	480, 676, 221, 546, 630, 250, 507, 0, 0, 684,
	258, 529, 642, 631, 223, 626, 528, 413, 345, 346,
	222, 0, 481, 284, 309, 0, 0, 274, 437, 621,
	622, 272, 685, 237, 655, 228, 0, 654, 430, 616,
	627, 414, 402, 227, 625, 412, 401, 353, 374, 375,
	296, 324, 470, 394, 471, 323, 325, 425, 424, 426,
	215, 640, 659, 0, 216, 0, 524, 643, 686, 475,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 469, 465, 474, 0, 610, 634,
	648, 661, 667, 668, 670, 671, 672, 673, 674, 677,
	675, 429, 329, 520, 352, 392, 0, 0, 447, 496,
	251, 638, 521, 240, 604, 418, 427, 259, 261, 260,
	235, 512, 609, 246, 266, 207, 0, 0, 0, 0,
	270, 271, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 682, 537, 543, 538, 539, 540, 541, 542, 0,
	544, 0, 0, 0, 0, 0, 419, 0, 623, 624,
	705, 403, 510, 635, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 608, 330, 224, 225, 226,
	553, 554, 555, 556, 652, 653, 657, 213, 486, 487,
	488, 489, 308, 646, 326, 492, 491, 350, 351, 398,
	472, 569, 571, 582, 586, 588, 590, 596, 599, 570,
	572, 583, 587, 589, 591, 597, 600, 559, 561, 563,
	565, 578, 577, 574, 602, 603, 580, 585, 564, 576,
	581, 594, 601, 598, 558, 562, 566, 575, 593, 592,
	573, 584, 595, 579, 567, 560, 568, 0, 204, 229,
	387, 0, 478, 304, 683, 650, 508, 645, 214, 231,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 454, 458, 459, 460,
	462, 464, 466, 479, 484, 498, 499, 500, 501, 502,
	505, 506, 513, 514, 515, 516, 517, 525, 526, 531,
	532, 533, 534, 545, 618, 620, 637, 658, 665, 504,
	404, 452, 476, 611, 0, 0, 317, 318, 467, 468,
	332, 333, 679, 680, 316, 632, 666, 629, 678, 660,
	461, 397, 0, 0, 400, 297, 322, 339, 0, 649,
	527, 236, 490, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 457, 312, 287,
	255, 483, 252, 509, 548, 549, 550, 552, 415, 282,
	456, 416, 0, 395, 606, 607, 335, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 385, 283, 0, 0, 212,
	530, 0, 453, 0, 211, 0, 511, 268, 396, 393,
	615, 298, 289, 285, 264, 336, 405, 450, 547, 444,
	0, 389, 0, 651, 522, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 523,
	302, 0, 0, 0, 0, 2024, 536, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 641, 0,
	0, 0, 281, 340, 288, 280, 612, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 477,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 485,
	497, 0, 0, 0, 0, 269, 0, 495, 448, 636,
	243, 300, 482, 455, 493, 463, 303, 0, 0, 494,
	391, 617, 473, 633, 663, 664, 279, 428, 647, 551,
	656, 681, 234, 276, 442, 535, 639, 519, 417, 613,
	614, 348, 518, 311, 209, 388, 669, 232, 503, 390,
	253, 241, 619, 644, 315, 267, 305, 480, 676, 221,
	546, 630, 250, 507, 0, 0, 684, 258, 529, 642,
	631, 223, 626, 528, 413, 345, 346, 222, 0, 481,
	284, 309, 0, 0, 274, 437, 621, 622, 272, 685,
	237, 655, 228, 0, 654, 430, 616, 627, 414, 402,
	227, 625, 412, 401, 353, 374, 375, 296, 324, 470,
	394, 471, 323, 325, 425, 424, 426, 215, 640, 659,
	0, 216, 0, 524, 643, 686, 475, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 469, 465, 474, 0, 610, 634, 648, 661, 667,
	668, 670, 671, 672, 673, 674, 677, 675, 429, 329,
	520, 352, 392, 0, 0, 447, 496, 251, 638, 521,
	240, 604, 418, 427, 259, 261, 260, 235, 512, 609,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 682, 537,
	543, 538, 539, 540, 541, 542, 0, 544, 0, 0,
	0, 0, 0, 419, 0, 623, 624, 705, 403, 510,
	635, 354, 368, 371, 360, 380, 0, 381, 356, 357,
	362, 365, 366, 367, 372, 373, 377, 383, 263, 218,
	410, 420, 608, 330, 224, 225, 226, 553, 554, 555,
	556, 652, 653, 657, 213, 486, 487, 488, 489, 308,
	646, 326, 492, 491, 350, 351, 398, 472, 569, 571,
	582, 586, 588, 590, 596, 599, 570, 572, 583, 587,
	589, 591, 597, 600, 559, 561, 563, 565, 578, 577,
	574, 602, 603, 580, 585, 564, 576, 581, 594, 601,
	598, 558, 562, 566, 575, 593, 592, 573, 584, 595,
	579, 567, 560, 568, 0, 204, 229, 387, 0, 478,
	304, 683, 650, 508, 645, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 454, 458, 459, 460, 462, 464, 466,
	479, 484, 498, 499, 500, 501, 502, 505, 506, 513,
	514, 515, 516, 517, 525, 526, 531, 532, 533, 534,
	545, 618, 620, 637, 658, 665, 504, 404, 452, 476,
	611, 0, 0, 317, 318, 467, 468, 332, 333, 679,
	680, 316, 632, 666, 629, 678, 660, 461, 397, 0,
	0, 400, 297, 322, 339, 0, 649, 527, 236, 490,
	306, 265, 0, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 457, 312, 287, 255, 483, 252,
	509, 548, 549, 550, 552, 415, 282, 456, 416, 0,
	395, 606, 607, 335, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 385, 283, 0, 0, 212, 530, 0, 453,
	0, 211, 0, 511, 268, 396, 393, 615, 298, 289,
	285, 264, 336, 405, 450, 547, 444, 0, 389, 0,
	651, 522, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 523, 302, 0, 0,
	0, 0, 0, 536, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 641, 0, 0, 0, 281,
	340, 288, 280, 612, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 477, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 3821, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 485, 497, 0, 0,
	0, 0, 269, 0, 495, 448, 636, 243, 300, 482,
	455, 493, 463, 303, 0, 0, 494, 391, 617, 473,
	633, 663, 664, 279, 428, 647, 551, 656, 681, 234,
	276, 442, 535, 639, 519, 417, 613, 614, 348, 518,
	311, 209, 388, 669, 232, 503, 390, 253, 241, 619,
	644, 315, 267, 305, 480, 676, 221, 546, 630, 250,
	507, 0, 0, 684, 258, 529, 642, 631, 223, 626,
	528, 413, 345, 346, 222, 0, 481, 284, 309, 0,
	0, 274, 437, 621, 622, 272, 685, 237, 655, 228,
	0, 654, 430, 616, 627, 414, 402, 227, 625, 412,
	401, 353, 374, 375, 296, 324, 470, 394, 471, 323,
	325, 425, 424, 426, 215, 640, 659, 0, 216, 0,
	524, 643, 686, 475, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 469, 465,
	474, 0, 610, 634, 648, 661, 667, 668, 670, 671,
	672, 673, 674, 677, 675, 429, 329, 520, 352, 392,
	0, 0, 447, 496, 251, 638, 521, 240, 604, 418,
	427, 259, 261, 260, 235, 512, 609, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 682, 537, 543, 538, 539,
	540, 541, 542, 0, 544, 0, 0, 0, 0, 0,
	419, 0, 623, 624, 705, 403, 510, 635, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 608,
	330, 224, 225, 226, 553, 554, 555, 556, 652, 653,
	657, 213, 486, 487, 488, 489, 308, 646, 326, 492,
	491, 350, 351, 398, 472, 569, 571, 582, 586, 588,
	590, 596, 599, 570, 572, 583, 587, 589, 591, 597,
	600, 559, 561, 563, 565, 578, 577, 574, 602, 603,
	580, 585, 564, 576, 581, 594, 601, 598, 558, 562,
	566, 575, 593, 592, 573, 584, 595, 579, 567, 560,
	568, 0, 204, 229, 387, 0, 478, 304, 683, 650,
	508, 645, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	454, 458, 459, 460, 462, 464, 466, 479, 484, 498,
	499, 500, 501, 502, 505, 506, 513, 514, 515, 516,
	517, 525, 526, 531, 532, 533, 534, 545, 618, 620,
	637, 658, 665, 504, 404, 452, 476, 611, 0, 0,
	317, 318, 467, 468, 332, 333, 679, 680, 316, 632,
	666, 629, 678, 660, 461, 397, 0, 0, 400, 297,
	322, 339, 0, 649, 527, 236, 490, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 457, 312, 287, 255, 483, 252, 509, 548, 549,
	550, 552, 415, 282, 456, 416, 0, 395, 606, 607,
	335, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 0, 212, 530, 0, 453, 0, 211, 0,
	511, 268, 396, 393, 615, 298, 289, 285, 264, 336,
	405, 450, 547, 444, 0, 389, 0, 651, 522, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 523, 302, 0, 101, 0, 0, 0,
	536, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 641, 0, 0, 0, 281, 340, 288, 280,
	612, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 477, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 485, 497, 0, 0, 0, 0, 269,
	0, 495, 448, 636, 243, 300, 482, 455, 493, 463,
	303, 0, 0, 494, 391, 617, 473, 633, 663, 664,
	279, 428, 647, 551, 656, 681, 234, 276, 442, 535,
	639, 519, 417, 613, 614, 348, 518, 311, 209, 388,
	669, 232, 503, 390, 253, 241, 619, 644, 315, 267,
	305, 480, 676, 221, 546, 630, 250, 507, 0, 0,
	684, 258, 529, 642, 631, 223, 626, 528, 413, 345,
	346, 222, 0, 481, 284, 309, 0, 0, 274, 437,
	621, 622, 272, 685, 237, 655, 228, 0, 654, 430,
	616, 627, 414, 402, 227, 625, 412, 401, 353, 374,
	375, 296, 324, 470, 394, 471, 323, 325, 425, 424,
	426, 215, 640, 659, 0, 216, 0, 524, 643, 686,
	475, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 469, 465, 474, 0, 610,
	634, 648, 661, 667, 668, 670, 671, 672, 673, 674,
	677, 675, 429, 329, 520, 352, 392, 0, 0, 447,
	496, 251, 638, 521, 240, 604, 418, 427, 259, 261,
	260, 235, 512, 609, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 682, 537, 543, 538, 539, 540, 541, 542,
	0, 544, 0, 0, 0, 0, 0, 419, 0, 623,
	624, 705, 403, 510, 635, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 608, 330, 224, 225,
	226, 553, 554, 555, 556, 652, 653, 657, 213, 486,
	487, 488, 489, 308, 646, 326, 492, 491, 350, 351,
	398, 472, 569, 571, 582, 586, 588, 590, 596, 599,
	570, 572, 583, 587, 589, 591, 597, 600, 559, 561,
	563, 565, 578, 577, 574, 602, 603, 580, 585, 564,
	576, 581, 594, 601, 598, 558, 562, 566, 575, 593,
	592, 573, 584, 595, 579, 567, 560, 568, 0, 204,
	229, 387, 0, 478, 304, 683, 650, 508, 645, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 454, 458, 459,
	460, 462, 464, 466, 479, 484, 498, 499, 500, 501,
	502, 505, 506, 513, 514, 515, 516, 517, 525, 526,
	531, 532, 533, 534, 545, 618, 620, 637, 658, 665,
	504, 404, 452, 476, 611, 0, 0, 317, 318, 467,
	468, 332, 333, 679, 680, 316, 632, 666, 629, 678,
	660, 461, 397, 0, 0, 400, 297, 322, 339, 0,
	649, 527, 236, 490, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 457, 312,
	287, 255, 483, 252, 509, 548, 549, 550, 552, 415,
	282, 456, 416, 0, 395, 606, 607, 335, 0, 0,
	0, 557, 0, 0, 0, 0, 2504, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 385, 283, 0, 0,
	212, 530, 0, 453, 0, 211, 0, 511, 268, 396,
	393, 615, 298, 289, 285, 264, 336, 405, 450, 547,
	444, 0, 389, 0, 651, 522, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	523, 302, 0, 0, 0, 0, 0, 536, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 641,
	0, 0, 0, 281, 340, 288, 280, 612, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	477, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	485, 497, 0, 0, 0, 0, 269, 0, 495, 448,
	636, 243, 300, 482, 455, 493, 463, 303, 0, 0,
	494, 391, 617, 473, 633, 663, 664, 279, 428, 647,
	551, 656, 681, 234, 276, 442, 535, 639, 519, 417,
	613, 614, 348, 518, 311, 209, 388, 669, 232, 503,
	390, 253, 241, 619, 644, 315, 267, 305, 480, 676,
	221, 546, 630, 250, 507, 0, 0, 684, 258, 529,
	642, 631, 223, 626, 528, 413, 345, 346, 222, 0,
	481, 284, 309, 0, 0, 274, 437, 621, 622, 272,
	685, 237, 655, 228, 0, 654, 430, 616, 627, 414,
	402, 227, 625, 412, 401, 353, 374, 375, 296, 324,
	470, 394, 471, 323, 325, 425, 424, 426, 215, 640,
	659, 0, 216, 0, 524, 643, 686, 475, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 469, 465, 474, 0, 610, 634, 648, 661,
	667, 668, 670, 671, 672, 673, 674, 677, 675, 429,
	329, 520, 352, 392, 0, 0, 447, 496, 251, 638,
	521, 240, 604, 418, 427, 259, 261, 260, 235, 512,
	609, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 682,
	537, 543, 538, 539, 540, 541, 542, 0, 544, 0,
	0, 0, 0, 0, 419, 0, 623, 624, 705, 403,
	510, 635, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 608, 330, 224, 225, 226, 553, 554,
	555, 556, 652, 653, 657, 213, 486, 487, 488, 489,
	308, 646, 326, 492, 491, 350, 351, 398, 472, 569,
	571, 582, 586, 588, 590, 596, 599, 570, 572, 583,
	587, 589, 591, 597, 600, 559, 561, 563, 565, 578,
	577, 574, 602, 603, 580, 585, 564, 576, 581, 594,
	601, 598, 558, 562, 566, 575, 593, 592, 573, 584,
	595, 579, 567, 560, 568, 0, 204, 229, 387, 0,
	478, 304, 683, 650, 508, 645, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 454, 458, 459, 460, 462, 464,
	466, 479, 484, 498, 499, 500, 501, 502, 505, 506,
	513, 514, 515, 516, 517, 525, 526, 531, 532, 533,
	534, 545, 618, 620, 637, 658, 665, 504, 404, 452,
	476, 611, 0, 0, 317, 318, 467, 468, 332, 333,
	679, 680, 316, 632, 666, 629, 678, 660, 461, 397,
	0, 0, 400, 297, 322, 339, 0, 649, 527, 236,
	490, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 457, 312, 287, 255, 483,
	252, 509, 548, 549, 550, 552, 415, 282, 456, 416,
	0, 395, 606, 607, 335, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 0, 212, 530, 0,
	453, 0, 211, 0, 511, 268, 396, 393, 615, 298,
	289, 285, 264, 336, 405, 450, 547, 444, 0, 389,
	0, 651, 522, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 523, 302, 0,
	0, 0, 0, 1849, 536, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 641, 0, 0, 0,
	281, 340, 288, 280, 612, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 477, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 485, 497, 0,
	0, 0, 0, 269, 0, 495, 448, 636, 243, 300,
	482, 455, 493, 463, 303, 0, 0, 494, 391, 617,
	473, 633, 663, 664, 279, 428, 647, 551, 656, 681,
	234, 276, 442, 535, 639, 519, 417, 613, 614, 348,
	518, 311, 209, 388, 669, 232, 503, 390, 253, 241,
	619, 644, 315, 267, 305, 480, 676, 221, 546, 630,
	250, 507, 0, 0, 684, 258, 529, 642, 631, 223,
	626, 528, 413, 345, 346, 222, 0, 481, 284, 309,
	0, 0, 274, 437, 621, 622, 272, 685, 237, 655,
	228, 0, 654, 430, 616, 627, 414, 402, 227, 625,
	412, 401, 353, 374, 375, 296, 324, 470, 394, 471,
	323, 325, 425, 424, 426, 215, 640, 659, 0, 216,
	0, 524, 643, 686, 475, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 469,
	465, 474, 0, 610, 634, 648, 661, 667, 668, 670,
	671, 672, 673, 674, 677, 675, 429, 329, 520, 352,
	392, 0, 0, 447, 496, 251, 638, 521, 240, 604,
	418, 427, 259, 261, 260, 235, 512, 609, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 682, 537, 543, 538,
	539, 540, 541, 542, 0, 544, 0, 0, 0, 0,
	0, 419, 0, 623, 624, 705, 403, 510, 635, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	608, 330, 224, 225, 226, 553, 554, 555, 556, 652,
	653, 657, 213, 486, 487, 488, 489, 308, 646, 326,
	492, 491, 350, 351, 398, 472, 569, 571, 582, 586,
	588, 590, 596, 599, 570, 572, 583, 587, 589, 591,
	597, 600, 559, 561, 563, 565, 578, 577, 574, 602,
	603, 580, 585, 564, 576, 581, 594, 601, 598, 558,
	562, 566, 575, 593, 592, 573, 584, 595, 579, 567,
	560, 568, 0, 204, 229, 387, 0, 478, 304, 683,
	650, 508, 645, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 454, 458, 459, 460, 462, 464, 466, 479, 484,
	498, 499, 500, 501, 502, 505, 506, 513, 514, 515,
	516, 517, 525, 526, 531, 532, 533, 534, 545, 618,
	620, 637, 658, 665, 504, 404, 452, 476, 611, 0,
	0, 317, 318, 467, 468, 332, 333, 679, 680, 316,
	632, 666, 629, 678, 660, 461, 397, 0, 0, 400,
	297, 322, 339, 0, 649, 527, 236, 490, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 457, 312, 287, 255, 483, 252, 509, 548,
	549, 550, 552, 415, 282, 456, 416, 0, 395, 606,
	607, 335, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	385, 283, 0, 0, 212, 530, 0, 453, 0, 211,
	0, 511, 268, 396, 393, 615, 298, 289, 285, 264,
	336, 405, 450, 547, 444, 0, 389, 0, 651, 522,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 523, 302, 0, 0, 0, 0,
	0, 536, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 641, 0, 0, 0, 281, 340, 288,
	280, 612, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 477, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 485, 497, 0, 0, 0, 0,
	269, 0, 495, 448, 636, 243, 300, 482, 455, 493,
	463, 303, 0, 0, 494, 391, 617, 473, 633, 663,
	664, 279, 428, 647, 551, 656, 681, 234, 276, 442,
	535, 639, 519, 417, 613, 614, 348, 518, 311, 209,
	388, 669, 232, 503, 390, 253, 241, 619, 644, 315,
	267, 305, 480, 676, 221, 546, 630, 250, 507, 0,
	0, 684, 258, 529, 642, 631, 223, 626, 528, 413,
	345, 346, 222, 0, 481, 284, 309, 0, 0, 274,
	437, 621, 622, 272, 685, 237, 655, 228, 0, 654,
	430, 616, 627, 414, 402, 227, 625, 412, 401, 353,
	374, 375, 296, 324, 470, 394, 471, 323, 325, 425,
	424, 426, 215, 640, 659, 0, 216, 0, 524, 643,
	686, 475, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 469, 465, 474, 0,
	610, 634, 648, 661, 667, 668, 670, 671, 672, 673,
	674, 677, 675, 429, 329, 520, 352, 392, 0, 0,
	447, 496, 251, 638, 521, 240, 604, 418, 427, 259,
	261, 260, 235, 512, 609, 246, 266, 207, 0, 0,
	0, 0, 270, 271, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 682, 537, 543, 538, 539, 540, 541,
	542, 0, 544, 0, 0, 0, 0, 0, 419, 0,
	623, 624, 705, 403, 510, 635, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 608, 330, 224,
	225, 226, 553, 554, 555, 556, 652, 653, 657, 213,
	486, 487, 488, 489, 308, 646, 326, 492, 491, 350,
	351, 398, 472, 569, 571, 582, 586, 588, 590, 596,
	599, 570, 572, 583, 587, 589, 591, 597, 600, 559,
	561, 563, 565, 578, 577, 574, 602, 603, 580, 585,
	564, 576, 581, 594, 601, 598, 558, 562, 566, 575,
	593, 592, 573, 584, 595, 579, 567, 560, 568, 0,
	204, 229, 387, 2142, 478, 304, 683, 650, 508, 645,
	214, 231, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 454, 458,
	459, 460, 462, 464, 466, 479, 484, 498, 499, 500,
	501, 502, 505, 506, 513, 514, 515, 516, 517, 525,
	526, 531, 532, 533, 534, 545, 618, 620, 637, 658,
	665, 504, 404, 452, 476, 611, 0, 0, 317, 318,
	467, 468, 332, 333, 679, 680, 316, 632, 666, 629,
	678, 660, 461, 397, 0, 0, 400, 297, 322, 339,
	0, 649, 527, 236, 490, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 457,
	312, 287, 255, 483, 252, 509, 548, 549, 550, 552,
	415, 282, 456, 416, 0, 395, 606, 607, 335, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 385, 283, 0,
	0, 212, 530, 0, 453, 0, 211, 0, 511, 268,
	396, 393, 615, 298, 289, 285, 264, 336, 405, 450,
	547, 444, 0, 389, 0, 651, 522, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 523, 302, 0, 0, 0, 0, 2133, 536, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 0, 0,
	641, 0, 0, 0, 281, 340, 288, 280, 612, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 477, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 485, 497, 0, 0, 0, 0, 269, 0, 495,
	448, 636, 243, 300, 482, 455, 493, 463, 303, 0,
	0, 494, 391, 617, 473, 633, 663, 664, 279, 428,
	647, 551, 656, 681, 234, 276, 442, 535, 639, 519,
	417, 613, 614, 348, 518, 311, 209, 388, 669, 232,
	503, 390, 253, 241, 619, 644, 315, 267, 305, 480,
	676, 221, 546, 630, 250, 507, 0, 0, 684, 258,
	529, 642, 631, 223, 626, 528, 413, 345, 346, 222,
	0, 481, 284, 309, 0, 0, 274, 437, 621, 622,
	272, 685, 237, 655, 228, 0, 654, 430, 616, 627,
	414, 402, 227, 625, 412, 401, 353, 374, 375, 296,
	324, 470, 394, 471, 323, 325, 425, 424, 426, 215,
	640, 659, 0, 216, 0, 524, 643, 686, 475, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 469, 465, 474, 0, 610, 634, 648,
	661, 667, 668, 670, 671, 672, 673, 674, 677, 675,
	429, 329, 520, 352, 392, 0, 0, 447, 496, 251,
	638, 521, 240, 604, 418, 427, 259, 261, 260, 235,
	512, 609, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	682, 537, 543, 538, 539, 540, 541, 542, 0, 544,
	0, 0, 0, 0, 0, 419, 0, 623, 624, 705,
	403, 510, 635, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 608, 330, 224, 225, 226, 553,
	554, 555, 556, 652, 653, 657, 213, 486, 487, 488,
	489, 308, 646, 326, 492, 491, 350, 351, 398, 472,
	569, 571, 582, 586, 588, 590, 596, 599, 570, 572,
	583, 587, 589, 591, 597, 600, 559, 561, 563, 565,
	578, 577, 574, 602, 603, 580, 585, 564, 576, 581,
	594, 601, 598, 558, 562, 566, 575, 593, 592, 573,
	584, 595, 579, 567, 560, 568, 0, 204, 229, 387,
	0, 478, 304, 683, 650, 508, 645, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 454, 458, 459, 460, 462,
	464, 466, 479, 484, 498, 499, 500, 501, 502, 505,
	506, 513, 514, 515, 516, 517, 525, 526, 531, 532,
	533, 534, 545, 618, 620, 637, 658, 665, 504, 404,
	452, 476, 611, 0, 0, 317, 318, 467, 468, 332,
	333, 679, 680, 316, 632, 666, 629, 678, 660, 461,
	397, 0, 0, 400, 297, 322, 339, 0, 649, 527,
	236, 490, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 457, 312, 287, 255,
	483, 252, 509, 548, 549, 550, 552, 415, 282, 456,
	416, 0, 395, 606, 607, 335, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 1991, 212, 530,
	0, 453, 0, 211, 0, 511, 268, 396, 393, 615,
	298, 289, 285, 264, 336, 405, 450, 547, 444, 0,
	389, 0, 651, 522, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 523, 302,
	0, 0, 0, 0, 0, 536, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 0, 0, 641, 0, 0,
	0, 281, 340, 288, 280, 612, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 477, 0,
	319, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 485, 497,
	0, 0, 0, 0, 269, 0, 495, 448, 636, 243,
	300, 482, 455, 493, 463, 303, 0, 0, 494, 391,
	617, 473, 633, 663, 664, 279, 428, 647, 551, 656,
	681, 234, 276, 442, 535, 639, 519, 417, 613, 614,
	348, 518, 311, 209, 388, 669, 232, 503, 390, 253,
	241, 619, 644, 315, 267, 305, 480, 676, 221, 546,
	630, 250, 507, 0, 0, 684, 258, 529, 642, 631,
	223, 626, 528, 413, 345, 346, 222, 0, 481, 284,
	309, 0, 0, 274, 437, 621, 622, 272, 685, 237,
	655, 228, 0, 654, 430, 616, 627, 414, 402, 227,
	625, 412, 401, 353, 374, 375, 296, 324, 470, 394,
	471, 323, 325, 425, 424, 426, 215, 640, 659, 0,
	216, 0, 524, 643, 686, 475, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	469, 465, 474, 0, 610, 634, 648, 661, 667, 668,
	670, 671, 672, 673, 674, 677, 675, 429, 329, 520,
	352, 392, 0, 0, 447, 496, 251, 638, 521, 240,
	604, 418, 427, 259, 261, 260, 235, 512, 609, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 682, 537, 543,
	538, 539, 540, 541, 542, 0, 544, 0, 0, 0,
	0, 0, 419, 0, 623, 624, 705, 403, 510, 635,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 608, 330, 224, 225, 226, 553, 554, 555, 556,
	652, 653, 657, 213, 486, 487, 488, 489, 308, 646,
	326, 492, 491, 350, 351, 398, 472, 569, 571, 582,
	586, 588, 590, 596, 599, 570, 572, 583, 587, 589,
	591, 597, 600, 559, 561, 563, 565, 578, 577, 574,
	602, 603, 580, 585, 564, 576, 581, 594, 601, 598,
	558, 562, 566, 575, 593, 592, 573, 584, 595, 579,
	567, 560, 568, 0, 204, 229, 387, 0, 478, 304,
	683, 650, 508, 645, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 454, 458, 459, 460, 462, 464, 466, 479,
	484, 498, 499, 500, 501, 502, 505, 506, 513, 514,
	515, 516, 517, 525, 526, 531, 532, 533, 534, 545,
	618, 620, 637, 658, 665, 504, 404, 452, 476, 611,
	0, 0, 317, 318, 467, 468, 332, 333, 679, 680,
	316, 632, 666, 629, 678, 660, 461, 397, 0, 0,
	400, 297, 322, 339, 0, 649, 527, 236, 490, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 457, 312, 287, 255, 483, 252, 509,
	548, 549, 550, 552, 415, 282, 456, 416, 0, 395,
	606, 607, 335, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 1989, 212, 530, 0, 453, 0,
	211, 0, 511, 268, 396, 393, 615, 298, 289, 285,
	264, 336, 405, 450, 547, 444, 0, 389, 0, 651,
	522, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 523, 302, 0, 0, 0,
	0, 0, 536, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 0, 0, 641, 0, 0, 0, 281, 340,
	288, 280, 612, 0, 0, 0, 0, 0, 0, 628,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 477, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 485, 497, 0, 0, 0,
	0, 269, 0, 495, 448, 636, 243, 300, 482, 455,
	493, 463, 303, 0, 0, 494, 391, 617, 473, 633,
	663, 664, 279, 428, 647, 551, 656, 681, 234, 276,
	442, 535, 639, 519, 417, 613, 614, 348, 518, 311,
	209, 388, 669, 232, 503, 390, 253, 241, 619, 644,
	315, 267, 305, 480, 676, 221, 546, 630, 250, 507,
	0, 0, 684, 258, 529, 642, 631, 223, 626, 528,
	413, 345, 346, 222, 0, 481, 284, 309, 0, 0,
	274, 437, 621, 622, 272, 685, 237, 655, 228, 0,
	654, 430, 616, 627, 414, 402, 227, 625, 412, 401,
	353, 374, 375, 296, 324, 470, 394, 471, 323, 325,
	425, 424, 426, 215, 640, 659, 0, 216, 0, 524,
	643, 686, 475, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 469, 465, 474,
	0, 610, 634, 648, 661, 667, 668, 670, 671, 672,
	673, 674, 677, 675, 429, 329, 520, 352, 392, 0,
	0, 447, 496, 251, 638, 521, 240, 604, 418, 427,
	259, 261, 260, 235, 512, 609, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 682, 537, 543, 538, 539, 540,
	541, 542, 0, 544, 0, 0, 0, 0, 0, 419,
	0, 623, 624, 705, 403, 510, 635, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 608, 330,
	224, 225, 226, 553, 554, 555, 556, 652, 653, 657,
	213, 486, 487, 488, 489, 308, 646, 326, 492, 491,
	350, 351, 398, 472, 569, 571, 582, 586, 588, 590,
	596, 599, 570, 572, 583, 587, 589, 591, 597, 600,
	559, 561, 563, 565, 578, 577, 574, 602, 603, 580,
	585, 564, 576, 581, 594, 601, 598, 558, 562, 566,
	575, 593, 592, 573, 584, 595, 579, 567, 560, 568,
	0, 204, 229, 387, 0, 478, 304, 683, 650, 508,
	645, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 454,
	458, 459, 460, 462, 464, 466, 479, 484, 498, 499,
	500, 501, 502, 505, 506, 513, 514, 515, 516, 517,
	525, 526, 531, 532, 533, 534, 545, 618, 620, 637,
	658, 665, 504, 404, 452, 476, 611, 0, 0, 317,
	318, 467, 468, 332, 333, 679, 680, 316, 632, 666,
	629, 678, 660, 461, 397, 0, 0, 400, 297, 322,
	339, 0, 649, 527, 236, 490, 306, 265, 0, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	457, 312, 287, 255, 483, 252, 509, 548, 549, 550,
	552, 415, 282, 456, 416, 0, 395, 606, 607, 335,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 385, 283,
	0, 1987, 212, 530, 0, 453, 0, 211, 0, 511,
	268, 396, 393, 615, 298, 289, 285, 264, 336, 405,
	450, 547, 444, 0, 389, 0, 651, 522, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 523, 302, 0, 0, 0, 0, 0, 536,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 0,
	0, 641, 0, 0, 0, 281, 340, 288, 280, 612,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 477, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 485, 497, 0, 0, 0, 0, 269, 0,
	495, 448, 636, 243, 300, 482, 455, 493, 463, 303,
	0, 0, 494, 391, 617, 473, 633, 663, 664, 279,
	428, 647, 551, 656, 681, 234, 276, 442, 535, 639,
	519, 417, 613, 614, 348, 518, 311, 209, 388, 669,
	232, 503, 390, 253, 241, 619, 644, 315, 267, 305,
	480, 676, 221, 546, 630, 250, 507, 0, 0, 684,
	258, 529, 642, 631, 223, 626, 528, 413, 345, 346,
	222, 0, 481, 284, 309, 0, 0, 274, 437, 621,
	622, 272, 685, 237, 655, 228, 0, 654, 430, 616,
	627, 414, 402, 227, 625, 412, 401, 353, 374, 375,
	296, 324, 470, 394, 471, 323, 325, 425, 424, 426,
	215, 640, 659, 0, 216, 0, 524, 643, 686, 475,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 469, 465, 474, 0, 610, 634,
	648, 661, 667, 668, 670, 671, 672, 673, 674, 677,
	675, 429, 329, 520, 352, 392, 0, 0, 447, 496,
	251, 638, 521, 240, 604, 418, 427, 259, 261, 260,
	235, 512, 609, 246, 266, 207, 0, 0, 0, 0,
	270, 271, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 682, 537, 543, 538, 539, 540, 541, 542, 0,
	544, 0, 0, 0, 0, 0, 419, 0, 623, 624,
	705, 403, 510, 635, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 608, 330, 224, 225, 226,
	553, 554, 555, 556, 652, 653, 657, 213, 486, 487,
	488, 489, 308, 646, 326, 492, 491, 350, 351, 398,
	472, 569, 571, 582, 586, 588, 590, 596, 599, 570,
	572, 583, 587, 589, 591, 597, 600, 559, 561, 563,
	565, 578, 577, 574, 602, 603, 580, 585, 564, 576,
	581, 594, 601, 598, 558, 562, 566, 575, 593, 592,
	573, 584, 595, 579, 567, 560, 568, 0, 204, 229,
	387, 0, 478, 304, 683, 650, 508, 645, 214, 231,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 454, 458, 459, 460,
	462, 464, 466, 479, 484, 498, 499, 500, 501, 502,
	505, 506, 513, 514, 515, 516, 517, 525, 526, 531,
	532, 533, 534, 545, 618, 620, 637, 658, 665, 504,
	404, 452, 476, 611, 0, 0, 317, 318, 467, 468,
	332, 333, 679, 680, 316, 632, 666, 629, 678, 660,
	461, 397, 0, 0, 400, 297, 322, 339, 0, 649,
	527, 236, 490, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 457, 312, 287,
	255, 483, 252, 509, 548, 549, 550, 552, 415, 282,
	456, 416, 0, 395, 606, 607, 335, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 385, 283, 0, 1985, 212,
	530, 0, 453, 0, 211, 0, 511, 268, 396, 393,
	615, 298, 289, 285, 264, 336, 405, 450, 547, 444,
	0, 389, 0, 651, 522, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 523,
	302, 0, 0, 0, 0, 0, 536, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 641, 0,
	0, 0, 281, 340, 288, 280, 612, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 477,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 485,
	497, 0, 0, 0, 0, 269, 0, 495, 448, 636,
	243, 300, 482, 455, 493, 463, 303, 0, 0, 494,
	391, 617, 473, 633, 663, 664, 279, 428, 647, 551,
	656, 681, 234, 276, 442, 535, 639, 519, 417, 613,
	614, 348, 518, 311, 209, 388, 669, 232, 503, 390,
	253, 241, 619, 644, 315, 267, 305, 480, 676, 221,
	546, 630, 250, 507, 0, 0, 684, 258, 529, 642,
	631, 223, 626, 528, 413, 345, 346, 222, 0, 481,
	284, 309, 0, 0, 274, 437, 621, 622, 272, 685,
	237, 655, 228, 0, 654, 430, 616, 627, 414, 402,
	227, 625, 412, 401, 353, 374, 375, 296, 324, 470,
	394, 471, 323, 325, 425, 424, 426, 215, 640, 659,
	0, 216, 0, 524, 643, 686, 475, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 469, 465, 474, 0, 610, 634, 648, 661, 667,
	668, 670, 671, 672, 673, 674, 677, 675, 429, 329,
	520, 352, 392, 0, 0, 447, 496, 251, 638, 521,
	240, 604, 418, 427, 259, 261, 260, 235, 512, 609,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 682, 537,
	543, 538, 539, 540, 541, 542, 0, 544, 0, 0,
	0, 0, 0, 419, 0, 623, 624, 705, 403, 510,
	635, 354, 368, 371, 360, 380, 0, 381, 356, 357,
	362, 365, 366, 367, 372, 373, 377, 383, 263, 218,
	410, 420, 608, 330, 224, 225, 226, 553, 554, 555,
	556, 652, 653, 657, 213, 486, 487, 488, 489, 308,
	646, 326, 492, 491, 350, 351, 398, 472, 569, 571,
	582, 586, 588, 590, 596, 599, 570, 572, 583, 587,
	589, 591, 597, 600, 559, 561, 563, 565, 578, 577,
	574, 602, 603, 580, 585, 564, 576, 581, 594, 601,
	598, 558, 562, 566, 575, 593, 592, 573, 584, 595,
	579, 567, 560, 568, 0, 204, 229, 387, 0, 478,
	304, 683, 650, 508, 645, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 454, 458, 459, 460, 462, 464, 466,
	479, 484, 498, 499, 500, 501, 502, 505, 506, 513,
	514, 515, 516, 517, 525, 526, 531, 532, 533, 534,
	545, 618, 620, 637, 658, 665, 504, 404, 452, 476,
	611, 0, 0, 317, 318, 467, 468, 332, 333, 679,
	680, 316, 632, 666, 629, 678, 660, 461, 397, 0,
	0, 400, 297, 322, 339, 0, 649, 527, 236, 490,
	306, 265, 0, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 457, 312, 287, 255, 483, 252,
	509, 548, 549, 550, 552, 415, 282, 456, 416, 0,
	395, 606, 607, 335, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 385, 283, 0, 1983, 212, 530, 0, 453,
	0, 211, 0, 511, 268, 396, 393, 615, 298, 289,
	285, 264, 336, 405, 450, 547, 444, 0, 389, 0,
	651, 522, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 523, 302, 0, 0,
	0, 0, 0, 536, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 641, 0, 0, 0, 281,
	340, 288, 280, 612, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 477, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 485, 497, 0, 0,
	0, 0, 269, 0, 495, 448, 636, 243, 300, 482,
	455, 493, 463, 303, 0, 0, 494, 391, 617, 473,
	633, 663, 664, 279, 428, 647, 551, 656, 681, 234,
	276, 442, 535, 639, 519, 417, 613, 614, 348, 518,
	311, 209, 388, 669, 232, 503, 390, 253, 241, 619,
	644, 315, 267, 305, 480, 676, 221, 546, 630, 250,
	507, 0, 0, 684, 258, 529, 642, 631, 223, 626,
	528, 413, 345, 346, 222, 0, 481, 284, 309, 0,
	0, 274, 437, 621, 622, 272, 685, 237, 655, 228,
	0, 654, 430, 616, 627, 414, 402, 227, 625, 412,
	401, 353, 374, 375, 296, 324, 470, 394, 471, 323,
	325, 425, 424, 426, 215, 640, 659, 0, 216, 0,
	524, 643, 686, 475, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 469, 465,
	474, 0, 610, 634, 648, 661, 667, 668, 670, 671,
	672, 673, 674, 677, 675, 429, 329, 520, 352, 392,
	0, 0, 447, 496, 251, 638, 521, 240, 604, 418,
	427, 259, 261, 260, 235, 512, 609, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 682, 537, 543, 538, 539,
	540, 541, 542, 0, 544, 0, 0, 0, 0, 0,
	419, 0, 623, 624, 705, 403, 510, 635, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 608,
	330, 224, 225, 226, 553, 554, 555, 556, 652, 653,
	657, 213, 486, 487, 488, 489, 308, 646, 326, 492,
	491, 350, 351, 398, 472, 569, 571, 582, 586, 588,
	590, 596, 599, 570, 572, 583, 587, 589, 591, 597,
	600, 559, 561, 563, 565, 578, 577, 574, 602, 603,
	580, 585, 564, 576, 581, 594, 601, 598, 558, 562,
	566, 575, 593, 592, 573, 584, 595, 579, 567, 560,
	568, 0, 204, 229, 387, 0, 478, 304, 683, 650,
	508, 645, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	454, 458, 459, 460, 462, 464, 466, 479, 484, 498,
	499, 500, 501, 502, 505, 506, 513, 514, 515, 516,
	517, 525, 526, 531, 532, 533, 534, 545, 618, 620,
	637, 658, 665, 504, 404, 452, 476, 611, 0, 0,
	317, 318, 467, 468, 332, 333, 679, 680, 316, 632,
	666, 629, 678, 660, 461, 397, 0, 0, 400, 297,
	322, 339, 0, 649, 527, 236, 490, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 457, 312, 287, 255, 483, 252, 509, 548, 549,
	550, 552, 415, 282, 456, 416, 0, 395, 606, 607,
	335, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 1979, 212, 530, 0, 453, 0, 211, 0,
	511, 268, 396, 393, 615, 298, 289, 285, 264, 336,
	405, 450, 547, 444, 0, 389, 0, 651, 522, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 523, 302, 0, 0, 0, 0, 0,
	536, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 641, 0, 0, 0, 281, 340, 288, 280,
	612, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 477, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 485, 497, 0, 0, 0, 0, 269,
	0, 495, 448, 636, 243, 300, 482, 455, 493, 463,
	303, 0, 0, 494, 391, 617, 473, 633, 663, 664,
	279, 428, 647, 551, 656, 681, 234, 276, 442, 535,
	639, 519, 417, 613, 614, 348, 518, 311, 209, 388,
	669, 232, 503, 390, 253, 241, 619, 644, 315, 267,
	305, 480, 676, 221, 546, 630, 250, 507, 0, 0,
	684, 258, 529, 642, 631, 223, 626, 528, 413, 345,
	346, 222, 0, 481, 284, 309, 0, 0, 274, 437,
	621, 622, 272, 685, 237, 655, 228, 0, 654, 430,
	616, 627, 414, 402, 227, 625, 412, 401, 353, 374,
	375, 296, 324, 470, 394, 471, 323, 325, 425, 424,
	426, 215, 640, 659, 0, 216, 0, 524, 643, 686,
	475, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 469, 465, 474, 0, 610,
	634, 648, 661, 667, 668, 670, 671, 672, 673, 674,
	677, 675, 429, 329, 520, 352, 392, 0, 0, 447,
	496, 251, 638, 521, 240, 604, 418, 427, 259, 261,
	260, 235, 512, 609, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 682, 537, 543, 538, 539, 540, 541, 542,
	0, 544, 0, 0, 0, 0, 0, 419, 0, 623,
	624, 705, 403, 510, 635, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 608, 330, 224, 225,
	226, 553, 554, 555, 556, 652, 653, 657, 213, 486,
	487, 488, 489, 308, 646, 326, 492, 491, 350, 351,
	398, 472, 569, 571, 582, 586, 588, 590, 596, 599,
	570, 572, 583, 587, 589, 591, 597, 600, 559, 561,
	563, 565, 578, 577, 574, 602, 603, 580, 585, 564,
	576, 581, 594, 601, 598, 558, 562, 566, 575, 593,
	592, 573, 584, 595, 579, 567, 560, 568, 0, 204,
	229, 387, 0, 478, 304, 683, 650, 508, 645, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 454, 458, 459,
	460, 462, 464, 466, 479, 484, 498, 499, 500, 501,
	502, 505, 506, 513, 514, 515, 516, 517, 525, 526,
	531, 532, 533, 534, 545, 618, 620, 637, 658, 665,
	504, 404, 452, 476, 611, 0, 0, 317, 318, 467,
	468, 332, 333, 679, 680, 316, 632, 666, 629, 678,
	660, 461, 397, 0, 0, 400, 297, 322, 339, 0,
	649, 527, 236, 490, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 457, 312,
	287, 255, 483, 252, 509, 548, 549, 550, 552, 415,
	282, 456, 416, 0, 395, 606, 607, 335, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 385, 283, 0, 1977,
	212, 530, 0, 453, 0, 211, 0, 511, 268, 396,
	393, 615, 298, 289, 285, 264, 336, 405, 450, 547,
	444, 0, 389, 0, 651, 522, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	523, 302, 0, 0, 0, 0, 0, 536, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 641,
	0, 0, 0, 281, 340, 288, 280, 612, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	477, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	485, 497, 0, 0, 0, 0, 269, 0, 495, 448,
	636, 243, 300, 482, 455, 493, 463, 303, 0, 0,
	494, 391, 617, 473, 633, 663, 664, 279, 428, 647,
	551, 656, 681, 234, 276, 442, 535, 639, 519, 417,
	613, 614, 348, 518, 311, 209, 388, 669, 232, 503,
	390, 253, 241, 619, 644, 315, 267, 305, 480, 676,
	221, 546, 630, 250, 507, 0, 0, 684, 258, 529,
	642, 631, 223, 626, 528, 413, 345, 346, 222, 0,
	481, 284, 309, 0, 0, 274, 437, 621, 622, 272,
	685, 237, 655, 228, 0, 654, 430, 616, 627, 414,
	402, 227, 625, 412, 401, 353, 374, 375, 296, 324,
	470, 394, 471, 323, 325, 425, 424, 426, 215, 640,
	659, 0, 216, 0, 524, 643, 686, 475, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 469, 465, 474, 0, 610, 634, 648, 661,
	667, 668, 670, 671, 672, 673, 674, 677, 675, 429,
	329, 520, 352, 392, 0, 0, 447, 496, 251, 638,
	521, 240, 604, 418, 427, 259, 261, 260, 235, 512,
	609, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 682,
	537, 543, 538, 539, 540, 541, 542, 0, 544, 0,
	0, 0, 0, 0, 419, 0, 623, 624, 705, 403,
	510, 635, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 608, 330, 224, 225, 226, 553, 554,
	555, 556, 652, 653, 657, 213, 486, 487, 488, 489,
	308, 646, 326, 492, 491, 350, 351, 398, 472, 569,
	571, 582, 586, 588, 590, 596, 599, 570, 572, 583,
	587, 589, 591, 597, 600, 559, 561, 563, 565, 578,
	577, 574, 602, 603, 580, 585, 564, 576, 581, 594,
	601, 598, 558, 562, 566, 575, 593, 592, 573, 584,
	595, 579, 567, 560, 568, 0, 204, 229, 387, 0,
	478, 304, 683, 650, 508, 645, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 454, 458, 459, 460, 462, 464,
	466, 479, 484, 498, 499, 500, 501, 502, 505, 506,
	513, 514, 515, 516, 517, 525, 526, 531, 532, 533,
	534, 545, 618, 620, 637, 658, 665, 504, 404, 452,
	476, 611, 0, 0, 317, 318, 467, 468, 332, 333,
	679, 680, 316, 632, 666, 629, 678, 660, 461, 397,
	0, 0, 400, 297, 322, 339, 0, 649, 527, 236,
	490, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 457, 312, 287, 255, 483,
	252, 509, 548, 549, 550, 552, 415, 282, 456, 416,
	0, 395, 606, 607, 335, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 1975, 212, 530, 0,
	453, 0, 211, 0, 511, 268, 396, 393, 615, 298,
	289, 285, 264, 336, 405, 450, 547, 444, 0, 389,
	0, 651, 522, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 523, 302, 0,
	0, 0, 0, 0, 536, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 641, 0, 0, 0,
	281, 340, 288, 280, 612, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 477, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 485, 497, 0,
	0, 0, 0, 269, 0, 495, 448, 636, 243, 300,
	482, 455, 493, 463, 303, 0, 0, 494, 391, 617,
	473, 633, 663, 664, 279, 428, 647, 551, 656, 681,
	234, 276, 442, 535, 639, 519, 417, 613, 614, 348,
	518, 311, 209, 388, 669, 232, 503, 390, 253, 241,
	619, 644, 315, 267, 305, 480, 676, 221, 546, 630,
	250, 507, 0, 0, 684, 258, 529, 642, 631, 223,
	626, 528, 413, 345, 346, 222, 0, 481, 284, 309,
	0, 0, 274, 437, 621, 622, 272, 685, 237, 655,
	228, 0, 654, 430, 616, 627, 414, 402, 227, 625,
	412, 401, 353, 374, 375, 296, 324, 470, 394, 471,
	323, 325, 425, 424, 426, 215, 640, 659, 0, 216,
	0, 524, 643, 686, 475, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 469,
	465, 474, 0, 610, 634, 648, 661, 667, 668, 670,
	671, 672, 673, 674, 677, 675, 429, 329, 520, 352,
	392, 0, 0, 447, 496, 251, 638, 521, 240, 604,
	418, 427, 259, 261, 260, 235, 512, 609, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 682, 537, 543, 538,
	539, 540, 541, 542, 0, 544, 0, 0, 0, 0,
	0, 419, 0, 623, 624, 705, 403, 510, 635, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	608, 330, 224, 225, 226, 553, 554, 555, 556, 652,
	653, 657, 213, 486, 487, 488, 489, 308, 646, 326,
	492, 491, 350, 351, 398, 472, 569, 571, 582, 586,
	588, 590, 596, 599, 570, 572, 583, 587, 589, 591,
	597, 600, 559, 561, 563, 565, 578, 577, 574, 602,
	603, 580, 585, 564, 576, 581, 594, 601, 598, 558,
	562, 566, 575, 593, 592, 573, 584, 595, 579, 567,
	560, 568, 0, 204, 229, 387, 0, 478, 304, 683,
	650, 508, 645, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 454, 458, 459, 460, 462, 464, 466, 479, 484,
	498, 499, 500, 501, 502, 505, 506, 513, 514, 515,
	516, 517, 525, 526, 531, 532, 533, 534, 545, 618,
	620, 637, 658, 665, 504, 404, 452, 476, 611, 0,
	0, 317, 318, 467, 468, 332, 333, 679, 680, 316,
	632, 666, 629, 678, 660, 461, 397, 0, 0, 400,
	297, 322, 339, 0, 649, 527, 236, 490, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 457, 312, 287, 255, 483, 252, 509, 548,
	549, 550, 552, 415, 282, 456, 416, 0, 395, 606,
	607, 335, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	385, 283, 0, 0, 212, 530, 0, 453, 0, 211,
	0, 511, 268, 396, 393, 615, 298, 289, 285, 264,
	336, 405, 450, 547, 444, 0, 389, 0, 651, 522,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 523, 302, 0, 1950, 0, 0,
	0, 536, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 641, 0, 0, 0, 281, 340, 288,
	280, 612, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 477, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 485, 497, 0, 0, 0, 0,
	269, 0, 495, 448, 636, 243, 300, 482, 455, 493,
	463, 303, 0, 0, 494, 391, 617, 473, 633, 663,
	664, 279, 428, 647, 551, 656, 681, 234, 276, 442,
	535, 639, 519, 417, 613, 614, 348, 518, 311, 209,
	388, 669, 232, 503, 390, 253, 241, 619, 644, 315,
	267, 305, 480, 676, 221, 546, 630, 250, 507, 0,
	0, 684, 258, 529, 642, 631, 223, 626, 528, 413,
	345, 346, 222, 0, 481, 284, 309, 0, 0, 274,
	437, 621, 622, 272, 685, 237, 655, 228, 0, 654,
	430, 616, 627, 414, 402, 227, 625, 412, 401, 353,
	374, 375, 296, 324, 470, 394, 471, 323, 325, 425,
	424, 426, 215, 640, 659, 0, 216, 0, 524, 643,
	686, 475, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 469, 465, 474, 0,
	610, 634, 648, 661, 667, 668, 670, 671, 672, 673,
	674, 677, 675, 429, 329, 520, 352, 392, 0, 0,
	447, 496, 251, 638, 521, 240, 604, 418, 427, 259,
	261, 260, 235, 512, 609, 246, 266, 207, 0, 0,
	0, 0, 270, 271, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 682, 537, 543, 538, 539, 540, 541,
	542, 0, 544, 0, 0, 0, 0, 0, 419, 0,
	623, 624, 705, 403, 510, 635, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 608, 330, 224,
	225, 226, 553, 554, 555, 556, 652, 653, 657, 213,
	486, 487, 488, 489, 308, 646, 326, 492, 491, 350,
	351, 398, 472, 569, 571, 582, 586, 588, 590, 596,
	599, 570, 572, 583, 587, 589, 591, 597, 600, 559,
	561, 563, 565, 578, 577, 574, 602, 603, 580, 585,
	564, 576, 581, 594, 601, 598, 558, 562, 566, 575,
	593, 592, 573, 584, 595, 579, 567, 560, 568, 0,
	204, 229, 387, 0, 478, 304, 683, 650, 508, 645,
	214, 231, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 454, 458,
	459, 460, 462, 464, 466, 479, 484, 498, 499, 500,
	501, 502, 505, 506, 513, 514, 515, 516, 517, 525,
	526, 531, 532, 533, 534, 545, 618, 620, 637, 658,
	665, 504, 404, 452, 476, 611, 0, 0, 317, 318,
	467, 468, 332, 333, 679, 680, 316, 632, 666, 629,
	678, 660, 461, 397, 0, 0, 400, 297, 322, 339,
	0, 649, 527, 236, 490, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 457,
	312, 287, 255, 483, 252, 509, 548, 549, 550, 552,
	415, 282, 456, 416, 0, 395, 606, 607, 335, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 1853, 286, 0, 0, 0, 0, 385, 283, 0,
	0, 212, 530, 0, 453, 0, 211, 0, 511, 268,
	396, 393, 615, 298, 289, 285, 264, 336, 405, 450,
	547, 444, 0, 389, 0, 651, 522, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 523, 302, 0, 0, 0, 0, 0, 536, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 0, 0,
	641, 0, 0, 0, 281, 340, 288, 280, 612, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 477, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 485, 497, 0, 0, 0, 0, 269, 0, 495,
	448, 636, 243, 300, 482, 455, 493, 463, 303, 0,
	0, 494, 391, 617, 473, 633, 663, 664, 279, 428,
	647, 551, 656, 681, 234, 276, 442, 535, 639, 519,
	417, 613, 614, 348, 518, 311, 209, 388, 669, 232,
	503, 390, 253, 241, 619, 644, 315, 267, 305, 480,
	676, 221, 546, 630, 250, 507, 0, 0, 684, 258,
	529, 642, 631, 223, 626, 528, 413, 345, 346, 222,
	0, 481, 284, 309, 0, 0, 274, 437, 621, 622,
	272, 685, 237, 655, 228, 0, 654, 430, 616, 627,
	414, 402, 227, 625, 412, 401, 353, 374, 375, 296,
	324, 470, 394, 471, 323, 325, 425, 424, 426, 215,
	640, 659, 0, 216, 0, 524, 643, 686, 475, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 469, 465, 474, 0, 610, 634, 648,
	661, 667, 668, 670, 671, 672, 673, 674, 677, 675,
	429, 329, 520, 352, 392, 0, 0, 447, 496, 251,
	638, 521, 240, 604, 418, 427, 259, 261, 260, 235,
	512, 609, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	682, 537, 543, 538, 539, 540, 541, 542, 0, 544,
	0, 0, 0, 0, 0, 419, 0, 623, 624, 705,
	403, 510, 635, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 608, 330, 224, 225, 226, 553,
	554, 555, 556, 652, 653, 657, 213, 486, 487, 488,
	489, 308, 646, 326, 492, 491, 350, 351, 398, 472,
	569, 571, 582, 586, 588, 590, 596, 599, 570, 572,
	583, 587, 589, 591, 597, 600, 559, 561, 563, 565,
	578, 577, 574, 602, 603, 580, 585, 564, 576, 581,
	594, 601, 598, 558, 562, 566, 575, 593, 592, 573,
	584, 595, 579, 567, 560, 568, 0, 204, 229, 387,
	0, 478, 304, 683, 650, 508, 645, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 454, 458, 459, 460, 462,
	464, 466, 479, 484, 498, 499, 500, 501, 502, 505,
	506, 513, 514, 515, 516, 517, 525, 526, 531, 532,
	533, 534, 545, 618, 620, 637, 658, 665, 504, 404,
	452, 476, 611, 0, 0, 317, 318, 467, 468, 332,
	333, 679, 680, 316, 632, 666, 629, 678, 660, 461,
	397, 0, 0, 400, 297, 322, 339, 0, 649, 527,
	236, 490, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 457, 312, 287, 255,
	483, 252, 509, 548, 549, 550, 552, 415, 282, 456,
	416, 0, 395, 606, 607, 335, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 0, 212, 530,
	0, 453, 0, 211, 0, 511, 268, 396, 393, 615,
	298, 289, 285, 264, 336, 405, 450, 547, 444, 0,
	389, 0, 651, 522, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 523, 302,
	0, 101, 0, 0, 0, 536, 992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 0, 0, 641, 0, 0,
	0, 281, 340, 288, 280, 612, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 477, 0,
	319, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 485, 497,
	0, 0, 0, 0, 269, 0, 495, 448, 636, 243,
	300, 482, 455, 493, 463, 303, 0, 0, 494, 391,
	617, 473, 633, 663, 664, 279, 428, 647, 551, 656,
	681, 234, 276, 442, 535, 639, 519, 417, 613, 614,
	348, 518, 311, 209, 388, 669, 232, 503, 390, 253,
	241, 619, 644, 315, 267, 305, 480, 676, 221, 546,
	630, 250, 507, 0, 0, 684, 258, 529, 642, 631,
	223, 626, 528, 413, 345, 346, 222, 0, 481, 284,
	309, 0, 0, 274, 437, 621, 622, 272, 685, 237,
	655, 228, 0, 654, 430, 616, 627, 414, 402, 227,
	625, 412, 401, 353, 374, 375, 296, 324, 470, 394,
	471, 323, 325, 425, 424, 426, 215, 640, 659, 0,
	216, 0, 524, 643, 686, 475, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	469, 465, 474, 0, 610, 634, 648, 661, 667, 668,
	670, 671, 672, 673, 674, 677, 675, 429, 329, 520,
	352, 392, 0, 0, 447, 496, 251, 638, 521, 240,
	604, 418, 427, 259, 261, 260, 235, 512, 609, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 682, 537, 543,
	538, 539, 540, 541, 542, 0, 544, 0, 0, 0,
	0, 0, 419, 0, 623, 624, 705, 403, 510, 635,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 608, 330, 224, 225, 226, 553, 554, 555, 556,
	652, 653, 657, 213, 486, 487, 488, 489, 308, 646,
	326, 492, 491, 350, 351, 398, 472, 569, 571, 582,
	586, 588, 590, 596, 599, 570, 572, 583, 587, 589,
	591, 597, 600, 559, 561, 563, 565, 578, 577, 574,
	602, 603, 580, 585, 564, 576, 581, 594, 601, 598,
	558, 562, 566, 575, 593, 592, 573, 584, 595, 579,
	567, 560, 568, 0, 204, 229, 387, 0, 478, 304,
	683, 650, 508, 645, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 454, 458, 459, 460, 462, 464, 466, 479,
	484, 498, 499, 500, 501, 502, 505, 506, 513, 514,
	515, 516, 517, 525, 526, 531, 532, 533, 534, 545,
	618, 620, 637, 658, 665, 504, 404, 452, 476, 611,
	0, 0, 317, 318, 467, 468, 332, 333, 679, 680,
	316, 632, 666, 629, 678, 660, 461, 397, 0, 0,
	400, 297, 322, 339, 0, 649, 527, 236, 490, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 457, 312, 287, 255, 483, 252, 509,
	548, 549, 550, 552, 415, 282, 456, 416, 0, 395,
	606, 607, 335, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 0, 212, 530, 0, 453, 0,
	211, 0, 511, 268, 396, 393, 615, 298, 289, 285,
	264, 336, 405, 450, 547, 444, 0, 389, 0, 651,
	522, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 523, 302, 0, 0, 0,
	0, 0, 536, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 0, 0, 641, 0, 0, 0, 281, 340,
	288, 280, 612, 0, 0, 0, 0, 0, 0, 628,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	313, 0, 423, 273, 0, 477, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 485, 497, 0, 0, 0,
	0, 269, 0, 495, 448, 636, 243, 300, 482, 455,
	493, 463, 303, 0, 0, 494, 391, 617, 473, 633,
	663, 664, 279, 428, 647, 551, 656, 681, 234, 276,
	442, 535, 639, 519, 417, 613, 614, 348, 518, 311,
	209, 388, 669, 232, 503, 390, 253, 241, 619, 644,
	315, 267, 305, 480, 676, 221, 546, 630, 250, 507,
	0, 0, 684, 258, 529, 642, 631, 223, 626, 528,
	413, 345, 346, 222, 0, 481, 284, 309, 0, 0,
	274, 437, 621, 622, 272, 685, 237, 655, 228, 0,
	654, 430, 616, 627, 414, 402, 227, 625, 412, 401,
	353, 374, 375, 296, 324, 470, 394, 471, 323, 325,
	425, 424, 426, 215, 640, 659, 0, 216, 0, 524,
	643, 686, 475, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 469, 465, 474,
	0, 610, 634, 648, 661, 667, 668, 670, 671, 672,
	673, 674, 677, 675, 429, 329, 520, 352, 392, 0,
	0, 447, 496, 251, 638, 521, 240, 604, 418, 427,
	259, 261, 260, 235, 512, 609, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 682, 537, 543, 538, 539, 540,
	541, 542, 0, 544, 0, 0, 0, 0, 0, 419,
	0, 623, 624, 705, 403, 510, 635, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 608, 330,
	224, 225, 226, 553, 554, 555, 556, 652, 653, 657,
	213, 486, 487, 488, 489, 308, 646, 326, 492, 491,
	350, 351, 398, 472, 569, 571, 582, 586, 588, 590,
	596, 599, 570, 572, 583, 587, 589, 591, 597, 600,
	559, 561, 563, 565, 578, 577, 574, 602, 603, 580,
	585, 564, 576, 581, 594, 601, 598, 558, 562, 566,
	575, 593, 592, 573, 584, 595, 579, 567, 560, 568,
	0, 204, 229, 387, 0, 478, 304, 683, 650, 508,
	645, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 454,
	458, 459, 460, 462, 464, 466, 479, 484, 498, 499,
	500, 501, 502, 505, 506, 513, 514, 515, 516, 517,
	525, 526, 531, 532, 533, 534, 545, 618, 620, 637,
	658, 665, 504, 404, 452, 476, 611, 0, 0, 317,
	318, 467, 468, 332, 333, 679, 680, 1506, 632, 666,
	629, 678, 660, 461, 397, 0, 0, 400, 297, 322,
	339, 0, 649, 527, 236, 490, 306, 265, 0, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	457, 312, 287, 255, 483, 252, 509, 548, 549, 550,
	552, 415, 282, 456, 416, 0, 395, 606, 607, 335,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 385, 283,
	0, 0, 212, 530, 0, 453, 0, 211, 0, 511,
	268, 396, 393, 615, 298, 289, 285, 264, 336, 405,
	450, 547, 444, 0, 389, 0, 651, 522, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 523, 302, 0, 0, 0, 0, 0, 536,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 0,
	0, 641, 0, 0, 0, 281, 340, 288, 280, 612,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 477, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 485, 497, 0, 0, 0, 0, 269, 0,
	495, 448, 636, 243, 300, 482, 455, 493, 463, 303,
	0, 0, 494, 391, 617, 473, 633, 663, 664, 279,
	428, 647, 551, 656, 681, 234, 276, 442, 535, 639,
	519, 417, 613, 614, 348, 518, 311, 209, 388, 669,
	232, 503, 390, 253, 241, 619, 644, 315, 267, 305,
	480, 676, 221, 546, 630, 250, 507, 0, 0, 684,
	258, 529, 642, 631, 223, 626, 528, 413, 345, 346,
	222, 0, 481, 284, 309, 0, 0, 274, 437, 621,
	622, 272, 685, 237, 655, 228, 0, 654, 430, 616,
	627, 414, 402, 227, 625, 412, 401, 353, 374, 375,
	296, 324, 470, 394, 471, 323, 325, 425, 424, 426,
	215, 640, 659, 0, 216, 0, 524, 643, 686, 475,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 469, 465, 474, 0, 610, 634,
	648, 661, 667, 668, 670, 671, 672, 673, 674, 677,
	675, 429, 329, 520, 352, 392, 0, 0, 447, 496,
	251, 638, 521, 240, 604, 418, 427, 259, 261, 260,
	235, 512, 609, 246, 266, 207, 0, 0, 0, 0,
	270, 271, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 682, 537, 543, 538, 539, 540, 541, 542, 0,
	544, 0, 0, 0, 0, 0, 419, 0, 623, 624,
	705, 403, 510, 635, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 608, 330, 224, 225, 226,
	553, 554, 555, 556, 652, 653, 657, 213, 486, 487,
	488, 489, 308, 646, 326, 492, 491, 350, 351, 398,
	472, 569, 571, 582, 586, 588, 590, 596, 599, 570,
	572, 583, 587, 589, 591, 597, 600, 559, 561, 563,
	565, 578, 577, 574, 602, 603, 580, 585, 564, 576,
	581, 594, 601, 598, 558, 562, 566, 575, 593, 592,
	573, 584, 595, 579, 567, 560, 568, 0, 204, 229,
	387, 0, 478, 304, 683, 650, 508, 645, 214, 231,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 454, 458, 459, 460,
	462, 464, 466, 479, 484, 498, 499, 500, 501, 502,
	505, 506, 513, 514, 515, 516, 517, 525, 526, 531,
	532, 533, 534, 545, 618, 620, 637, 658, 665, 504,
	404, 452, 476, 611, 0, 0, 317, 318, 467, 468,
	332, 333, 679, 680, 316, 632, 666, 629, 678, 660,
	461, 397, 0, 0, 400, 297, 322, 339, 0, 649,
	527, 236, 490, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 457, 312, 287,
	255, 483, 252, 509, 548, 549, 550, 552, 415, 282,
	456, 416, 0, 395, 606, 607, 335, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 385, 283, 0, 0, 212,
	530, 0, 453, 0, 211, 0, 511, 268, 396, 393,
	615, 298, 289, 285, 264, 336, 405, 450, 547, 444,
	0, 389, 0, 651, 522, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 523,
	302, 0, 0, 0, 0, 0, 536, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 641, 0,
	0, 0, 281, 340, 288, 280, 612, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 477,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 485,
	497, 0, 0, 0, 0, 269, 0, 495, 448, 636,
	243, 300, 482, 455, 493, 463, 303, 0, 0, 494,
	391, 617, 473, 633, 663, 664, 279, 428, 647, 551,
	656, 681, 234, 276, 442, 535, 639, 519, 417, 613,
	614, 348, 518, 311, 209, 388, 669, 232, 503, 390,
	253, 241, 619, 644, 315, 267, 305, 480, 676, 221,
	546, 630, 250, 507, 0, 0, 684, 258, 529, 642,
	631, 223, 626, 528, 413, 345, 346, 222, 0, 481,
	284, 309, 0, 0, 274, 437, 621, 622, 272, 685,
	237, 655, 228, 0, 654, 430, 616, 627, 414, 402,
	227, 625, 412, 401, 353, 374, 375, 296, 324, 470,
	394, 471, 323, 325, 425, 424, 426, 215, 640, 659,
	0, 216, 0, 524, 643, 686, 475, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 469, 465, 474, 0, 610, 634, 648, 661, 667,
	668, 670, 671, 672, 673, 674, 677, 675, 429, 329,
	520, 352, 392, 0, 0, 447, 496, 251, 638, 521,
	240, 604, 418, 427, 259, 261, 260, 235, 512, 609,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 682, 537,
	543, 538, 539, 540, 541, 542, 0, 544, 0, 0,
	0, 0, 0, 419, 0, 623, 624, 705, 403, 510,
	635, 354, 368, 371, 360, 380, 0, 381, 356, 357,
	362, 365, 366, 367, 372, 373, 377, 383, 263, 218,
	410, 420, 608, 330, 224, 225, 226, 553, 554, 555,
	556, 652, 653, 657, 213, 486, 487, 488, 489, 308,
	646, 326, 492, 491, 350, 351, 398, 472, 569, 571,
	582, 586, 588, 590, 596, 599, 570, 572, 583, 587,
	589, 591, 597, 600, 559, 561, 563, 565, 578, 577,
	574, 602, 603, 580, 585, 564, 576, 581, 594, 601,
	598, 558, 562, 566, 575, 593, 592, 573, 584, 595,
	579, 567, 560, 568, 0, 204, 229, 387, 0, 478,
	304, 683, 650, 508, 645, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 454, 458, 459, 460, 462, 464, 466,
	479, 484, 498, 499, 500, 501, 502, 505, 506, 513,
	514, 515, 516, 517, 525, 526, 531, 532, 533, 534,
	545, 618, 620, 637, 658, 665, 504, 404, 452, 476,
	611, 0, 0, 317, 318, 467, 468, 332, 333, 679,
	680, 316, 632, 666, 629, 678, 660, 461, 397, 0,
	0, 400, 297, 322, 339, 0, 649, 527, 236, 490,
	306, 265, 0, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 457, 312, 287, 255, 483, 252,
	509, 548, 549, 550, 552, 415, 282, 456, 416, 0,
	395, 606, 607, 335, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 385, 283, 0, 0, 212, 530, 0, 453,
	0, 211, 0, 511, 268, 396, 393, 615, 298, 289,
	285, 264, 336, 405, 450, 547, 444, 0, 389, 0,
	651, 522, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 523, 302, 0, 0,
	0, 0, 0, 536, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 641, 0, 0, 0, 281,
	340, 288, 280, 612, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 477, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 485, 497, 0, 0,
	0, 0, 269, 0, 495, 448, 636, 243, 300, 482,
	455, 493, 463, 303, 0, 0, 494, 391, 617, 473,
	633, 663, 664, 279, 428, 647, 551, 656, 681, 234,
	276, 442, 535, 639, 519, 417, 613, 614, 348, 518,
	311, 209, 388, 669, 232, 503, 390, 253, 241, 619,
	644, 315, 267, 305, 480, 676, 221, 546, 630, 250,
	507, 0, 0, 684, 258, 529, 642, 631, 223, 626,
	528, 413, 345, 346, 222, 0, 481, 284, 309, 0,
	0, 274, 437, 621, 622, 272, 685, 237, 655, 228,
	0, 654, 430, 616, 627, 414, 402, 227, 625, 412,
	401, 353, 374, 375, 296, 324, 470, 394, 471, 323,
	325, 425, 424, 426, 215, 640, 659, 0, 216, 0,
	524, 643, 686, 475, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 469, 465,
	474, 0, 610, 634, 648, 661, 667, 668, 670, 671,
	672, 673, 674, 677, 675, 429, 329, 520, 352, 392,
	0, 0, 447, 496, 251, 638, 521, 240, 604, 418,
	427, 259, 261, 260, 235, 512, 609, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 682, 537, 543, 538, 539,
	540, 541, 542, 0, 544, 0, 0, 0, 0, 0,
	419, 0, 623, 624, 705, 403, 510, 635, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 608,
	330, 224, 225, 226, 553, 554, 555, 556, 652, 653,
	657, 213, 486, 487, 488, 489, 308, 646, 326, 492,
	491, 350, 351, 398, 472, 569, 571, 582, 586, 588,
	590, 596, 599, 570, 572, 583, 587, 589, 591, 597,
	600, 559, 561, 563, 565, 578, 577, 574, 602, 603,
	580, 585, 564, 576, 581, 594, 601, 598, 558, 562,
	566, 575, 593, 592, 573, 584, 595, 579, 567, 560,
	568, 0, 204, 229, 387, 0, 478, 304, 683, 650,
	508, 645, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	4268, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	454, 458, 459, 460, 462, 464, 466, 479, 484, 498,
	499, 500, 501, 502, 505, 506, 513, 514, 515, 516,
	517, 525, 526, 531, 532, 533, 534, 545, 618, 620,
	637, 658, 665, 504, 404, 452, 476, 611, 0, 0,
	317, 318, 467, 468, 332, 333, 679, 680, 316, 632,
	666, 629, 678, 660, 461, 397, 0, 0, 400, 297,
	322, 339, 0, 649, 527, 236, 490, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 457, 312, 287, 255, 483, 252, 509, 548, 549,
	550, 552, 415, 282, 456, 416, 0, 395, 606, 607,
	335, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 0, 212, 530, 0, 453, 0, 211, 0,
	511, 268, 396, 393, 615, 298, 289, 285, 264, 336,
	405, 450, 547, 444, 0, 389, 0, 651, 522, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 523, 302, 0, 0, 0, 0, 0,
	536, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 641, 0, 0, 0, 281, 340, 288, 280,
	612, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 477, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 485, 497, 0, 0, 0, 0, 269,
	0, 495, 448, 636, 243, 300, 482, 455, 493, 463,
	303, 0, 0, 494, 391, 617, 473, 633, 663, 664,
	279, 428, 647, 551, 656, 681, 234, 276, 442, 535,
	639, 519, 417, 613, 614, 348, 518, 311, 209, 388,
	669, 232, 503, 390, 253, 241, 619, 644, 315, 267,
	305, 480, 676, 221, 546, 630, 250, 507, 0, 0,
	684, 258, 529, 642, 631, 223, 626, 528, 413, 345,
	346, 222, 0, 481, 284, 309, 0, 0, 274, 437,
	621, 622, 272, 685, 237, 655, 228, 0, 654, 430,
	616, 627, 414, 402, 227, 625, 412, 401, 353, 374,
	375, 296, 324, 470, 394, 471, 323, 325, 425, 424,
	426, 215, 640, 659, 0, 216, 0, 524, 643, 686,
	475, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 469, 465, 474, 0, 610,
	634, 648, 661, 667, 668, 670, 671, 672, 673, 674,
	677, 675, 429, 329, 520, 352, 392, 0, 0, 447,
	496, 251, 638, 521, 240, 604, 418, 427, 259, 261,
	260, 235, 512, 609, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 682, 537, 543, 538, 539, 540, 541, 542,
	0, 544, 0, 0, 0, 0, 0, 419, 0, 623,
	624, 705, 403, 510, 635, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 608, 330, 224, 225,
	226, 553, 554, 555, 556, 652, 653, 657, 213, 486,
	487, 488, 489, 308, 646, 326, 492, 491, 350, 351,
	398, 472, 569, 571, 582, 586, 588, 590, 596, 599,
	570, 572, 583, 587, 589, 591, 597, 600, 559, 561,
	563, 565, 578, 577, 574, 602, 603, 580, 585, 564,
	576, 581, 594, 601, 598, 558, 562, 566, 575, 593,
	592, 573, 584, 595, 579, 567, 560, 568, 0, 204,
	229, 387, 0, 478, 304, 683, 650, 508, 645, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 454, 458, 459,
	460, 462, 464, 466, 479, 484, 498, 499, 500, 501,
	502, 505, 506, 513, 514, 515, 516, 517, 525, 526,
	531, 532, 533, 534, 545, 618, 620, 637, 658, 665,
	504, 404, 452, 476, 611, 0, 0, 317, 318, 467,
	468, 332, 333, 679, 680, 316, 632, 666, 629, 678,
	660, 461, 397, 0, 0, 400, 297, 322, 339, 0,
	649, 527, 236, 490, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 457, 312,
	287, 255, 483, 252, 509, 548, 549, 550, 552, 415,
	282, 456, 416, 0, 395, 606, 607, 335, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 385, 283, 0, 0,
	212, 530, 0, 453, 0, 211, 0, 511, 268, 396,
	393, 615, 298, 289, 285, 264, 336, 405, 450, 547,
	444, 0, 389, 0, 651, 522, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	523, 302, 0, 0, 0, 0, 0, 536, 992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 641,
	0, 0, 0, 281, 340, 288, 280, 612, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	477, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	485, 497, 0, 0, 0, 0, 269, 0, 495, 448,
	636, 243, 300, 482, 455, 493, 463, 303, 0, 0,
	494, 391, 617, 473, 633, 663, 664, 279, 428, 647,
	551, 656, 681, 234, 276, 442, 535, 639, 519, 417,
	613, 614, 348, 518, 311, 209, 388, 669, 232, 503,
	390, 253, 241, 619, 644, 315, 267, 305, 480, 676,
	221, 546, 630, 250, 507, 0, 0, 684, 258, 529,
	642, 631, 223, 626, 528, 413, 345, 346, 222, 0,
	481, 284, 309, 0, 0, 274, 437, 621, 622, 272,
	685, 237, 655, 228, 0, 654, 430, 616, 627, 414,
	402, 227, 625, 412, 401, 353, 374, 375, 296, 324,
	470, 394, 471, 323, 325, 425, 424, 426, 215, 640,
	659, 0, 216, 0, 524, 643, 686, 475, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 469, 465, 474, 0, 610, 634, 648, 661,
	667, 668, 670, 671, 672, 673, 674, 677, 675, 429,
	329, 520, 352, 392, 0, 0, 447, 496, 251, 638,
	521, 240, 604, 418, 427, 259, 261, 260, 235, 512,
	609, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 682,
	537, 543, 538, 539, 540, 541, 542, 0, 544, 0,
	0, 0, 0, 0, 419, 0, 623, 624, 705, 403,
	510, 635, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 608, 330, 224, 225, 226, 553, 554,
	555, 556, 652, 653, 657, 213, 486, 487, 488, 489,
	308, 646, 326, 492, 491, 350, 351, 398, 472, 569,
	571, 582, 586, 588, 590, 596, 599, 570, 572, 583,
	587, 589, 591, 597, 600, 559, 561, 563, 565, 578,
	577, 574, 602, 603, 580, 585, 564, 576, 581, 594,
	601, 598, 558, 562, 566, 575, 593, 592, 573, 584,
	595, 579, 567, 560, 568, 0, 204, 229, 387, 0,
	478, 304, 683, 650, 508, 645, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 454, 458, 459, 460, 462, 464,
	466, 479, 484, 498, 499, 500, 501, 502, 505, 506,
	513, 514, 515, 516, 517, 525, 526, 531, 532, 533,
	534, 545, 618, 620, 637, 658, 665, 504, 404, 452,
	476, 611, 0, 0, 317, 318, 467, 468, 332, 333,
	679, 680, 316, 632, 666, 629, 678, 660, 461, 397,
	0, 0, 400, 297, 322, 339, 0, 649, 527, 236,
	490, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 457, 312, 287, 255, 483,
	252, 509, 548, 549, 550, 552, 415, 282, 456, 416,
	0, 395, 606, 607, 335, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 0, 212, 530, 0,
	453, 0, 211, 0, 511, 268, 396, 393, 615, 298,
	289, 285, 264, 336, 405, 450, 547, 444, 0, 389,
	0, 651, 522, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 523, 302, 0,
	0, 0, 0, 0, 536, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 641, 0, 0, 0,
	281, 340, 288, 280, 612, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 477, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 485, 497, 0,
	0, 0, 0, 269, 0, 495, 448, 636, 243, 300,
	482, 455, 493, 463, 303, 0, 0, 494, 391, 617,
	473, 633, 663, 664, 279, 428, 647, 551, 656, 681,
	234, 276, 442, 535, 639, 519, 417, 613, 614, 348,
	518, 311, 209, 388, 669, 232, 503, 390, 253, 241,
	619, 644, 315, 267, 305, 480, 676, 221, 546, 630,
	250, 507, 0, 0, 684, 258, 529, 642, 631, 223,
	626, 528, 413, 345, 346, 222, 0, 481, 284, 309,
	0, 0, 274, 437, 621, 622, 272, 685, 237, 655,
	228, 0, 654, 430, 616, 627, 414, 402, 227, 625,
	412, 401, 353, 374, 375, 296, 324, 470, 394, 471,
	323, 325, 425, 424, 426, 215, 640, 659, 0, 216,
	0, 524, 643, 686, 475, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 469,
	465, 474, 0, 610, 634, 648, 661, 667, 668, 670,
	671, 672, 673, 674, 677, 675, 429, 329, 520, 352,
	392, 0, 0, 447, 496, 251, 638, 521, 240, 604,
	418, 427, 259, 261, 260, 235, 512, 609, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 682, 537, 543, 538,
	539, 540, 541, 542, 0, 544, 0, 0, 0, 0,
	0, 419, 0, 623, 624, 705, 403, 510, 635, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	608, 330, 224, 225, 226, 553, 554, 555, 556, 652,
	653, 657, 213, 486, 487, 488, 489, 308, 646, 326,
	492, 491, 350, 351, 398, 472, 569, 571, 582, 586,
	588, 590, 596, 599, 570, 572, 583, 587, 589, 591,
	597, 600, 559, 561, 563, 565, 578, 577, 574, 602,
	603, 580, 585, 564, 576, 581, 594, 601, 598, 558,
	562, 566, 575, 593, 592, 573, 584, 595, 579, 567,
	560, 568, 0, 204, 229, 387, 0, 478, 304, 683,
	650, 508, 645, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 454, 458, 459, 460, 462, 464, 466, 479, 484,
	498, 499, 500, 501, 502, 505, 506, 513, 514, 515,
	516, 517, 525, 526, 531, 532, 533, 534, 545, 618,
	620, 637, 658, 665, 504, 404, 452, 476, 611, 0,
	0, 317, 318, 467, 468, 332, 333, 679, 680, 316,
	632, 666, 629, 678, 660, 461, 397, 0, 0, 400,
	297, 322, 339, 0, 649, 527, 236, 490, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 457, 312, 287, 255, 483, 252, 509, 548,
	549, 550, 552, 415, 282, 456, 0, 0, 395, 606,
	607, 335,
}

var yyPact = [...]int{
	-1000, -1000, -562, -1000, 7417, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2600, 2733, -1000, -1000, -1000,
	-1000, 2836, -1000, 1121, -1000, 2305, 2229, 2636, 5416, -1000,
	61165, 817, -1000, 58057, -418, 958, 274, 40186, -1000, 236,
	-1000, 221, 59611, 230, -1000, -1000, -1000, -1000, -418, 23869,
	2528, 84, 40, 61165, -1000, -1000, -1000, -1000, -368, 2793,
	2304, -1000, 454, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	57280, -1000, -1000, -1000, 1310, -1000, 2647, 2618, 2515, 1025,
	1712, -1000, 2718, 2304, -1000, 23869, 2795, 2574, 23092, 23092,
	482, -1000, -1000, 293, -1000, -1000, 34747, 61165, 44071, 2678,
	59611, -1000, 2636, -1000, -1000, -1000, 209, -1000, 359, 2211,
	-1000, 2210, -1000, 1136, 993, 384, 913, 877, 383, 382,
	381, 380, 378, 377, 373, 370, 399, -1000, 1054, 1054,
	-209, -210, 1454, 835, 447, 447, 1182, 528, 2587, 2578,
	-1000, -1000, 1054, 1054, 1054, 415, 1054, 1054, 1054, 1054,
	350, 346, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054,
	1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 937,
	2636, 324, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 61165, 335, 61165, -1000,
	903, 815, -1000, -1000, -422, 1186, 1186, 117, 1186, 1186,
	1186, 1186, 217, 1017, 37, -1000, 211, 312, 215, 320,
	1178, 325, -1000, -1000, 310, 1178, 2005, -1000, 1033, 315,
	156, -1000, 1186, 1186, -1000, 16075, 227, 16075, 16075, 309,
	205, -1000, 2621, -1000, -1000, -1000, -1000, -1000, 1519, -1000,
	-1000, -1000, -1000, -22, 526, -1000, -1000, -1000, -1000, 59611,
	56503, 307, -1000, -1000, 340, 2094, 1428, 23869, 1488, 1019,
	-1000, -1000, 1423, 964, -1000, -1000, -1000, -1000, -1000, 882,
	-1000, 26200, 26200, 26200, 26200, -1000, -1000, 2215, 55726, 2215,
	2215, 26200, 2215, 26200, 2215, 2215, 2215, 2215, 23869, 2215,
	2215, 2215, 2215, -1000, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, -1000, -1000, -1000, -1000, 2215, 902, 2215,
	2215, 2215, 2215, 2215, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2215, 2215, 2215, 2215, 2215, 2215, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	-1000, -1000, -1000, 1892, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1948, 1759, 1752, 1737, -1000, 20761, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2215, -1000, -1000,
	-1000, 61165, -1000, 2215, 253, 59611, 59611, 389, 1491, -1000,
	-1000, 2718, 2304, -1000, 2793, 2745, 454, -1000, 4016, 2047,
	1981, 1575, 2304, 1069, 2189, 61165, -1000, 2229, 201, -1000,
	-1000, -1000, -316, -331, 2447, 1695, 2000, 2207, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1786, 23869, -1000, -1000,
	2820, -1000, 31639, 901, 2819, 54949, -1000, 482, 482, 2206,
	653, 8, -1000, -1000, -1000, -1000, 1091, 39409, -1000, -1000,
	-1000, -1000, -1000, 2076, 61165, -1000, -1000, 6593, 59611, -1000,
	2299, -1000, 2022, -1000, 2257, 23869, 454, 2011, -1000, -1000,
	-1000, -1000, 1054, 1054, 1054, -1000, 394, 2780, 5416, 6113,
	-1000, -1000, -1000, 54172, 2298, 59611, -1000, 2297, -1000, 1215,
	911, 912, 912, 59611, -1000, -1000, 60388, 59611, 1213, 1212,
	59611, 59611, 59611, 59611, -1000, 53395, -1000, 52618, 51841, 1490,
	59611, 51064, 50287, 49510, 48733, 47956, -1000, 2471, -1000, 2334,
	-1000, -1000, -1000, 60388, 59611, 59611, 60388, 59611, 60388, 61165,
	59611, -1000, -1000, 420, -1000, -1000, 1487, 1485, 1484, 1054,
	1054, 1482, 1988, 1987, 1986, 1054, 1054, 1481, 1982, 42517,
	1978, 313, 1471, 1460, 1457, 1417, 1975, 250, 1972, 1414,
	1394, 1456, 59611, 2293, 61165, -1000, 304, 1034, 675, -1000,
	-1000, -1000, 1070, 2636, 2527, 2204, 505, 812, 59611, 475,
	475, 475, 59611, -1000, -1000, 16858, 61165, 267, -1000, 1970,
	23869, -1000, 1180, 1178, 1178, -1000, -1000, -1000, -1000, -1000,
	-1000, 1186, 61165, 1180, -1000, -1000, -1000, 1178, 1186, 61165,
	1186, 1186, 1186, 1186, 1178, 1178, 1178, 1186, 61165, 61165,
	61165, 61165, 61165, 61165, 61165, 61165, 61165, 16075, 1033, 1186,
	-423, -1000, 1969, -1000, -1000, -1000, 2404, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16075,
	16075, -1000, -1000, 2708, 2707, -1000, -1000, -1000, 2203, -1000,
	212, 12, 224, -1000, 47179, 524, 1068, -1000, 524, -1000,
	-1000, -1000, -1000, -1000, 2200, 46402, -1000, -431, -434, -435,
	-436, -1000, -1000, -1000, -443, -453, -1000, -1000, -1000, 23869,
	23869, 23869, 23869, -239, -1000, 1338, 26200, 2624, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 23869, 1318, 1053, 26200, 26200,
	26200, 26200, 26200, 26200, 26200, 27754, 26977, 26200, 26200, 26200,
	26200, 26200, 26200, -1000, -1000, 37078, 8167, 8167, 964, 964,
	964, 964, -1000, -185, 2197, 60388, -1000, -1000, -1000, 898,
	23869, 23869, 964, -1000, 1552, 1767, 20761, 23869, 23869, 23869,
	23869, 1129, 1428, 60388, 23869, -1000, 1575, -1000, -1000, -1000,
	-1000, 1370, -1000, -1000, 1159, 2561, 2561, 2561, 2561, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 2561,
	23869, 665, 665, 754, 23869, 23869, 23869, 23869, 23869, 23869,
	23869, 23869, 19207, 23869, 23869, 26200, 23869, 23869, 23869, 1575,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 1575,
	23869, 1612, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 18424,
	23869, 23869, 23869, 23869, 23869, -1000, -1000, -1000, -1000, -1000,
	-1000, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 23869, 1575,
	23869, 23869, 23869, 23869, 23869, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1783, 1725, 1678, 2215, 23869,
	-1000, 2194, -1000, -149, 33970, 23869, 1968, 2816, 2333, 59611,
	-1000, -1000, -1000, -1000, 2718, -1000, 2718, 1783, 3996, 2455,
	23092, -1000, -1000, 3996, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2045, -1000, 311,
	810, 2318, 304, 59611, 805, 804, 791, 474, -1000, -74,
	1059, 61165, 2189, 2676, -1000, 2187, -1000, -1000, 2215, -1000,
	-300, -1000, -301, 2439, 1959, 910, -1000, 1516, 23869, 23869,
	2186, -1000, 1347, 61165, -1000, -239, -1000, 45625, -1000, -1000,
	15292, 61165, 367, 61165, -1000, 33193, 44848, 297, -1000, 8,
	2129, -1000, 13, 9, 19984, 962, -1000, -1000, -1000, 1454,
	28531, 2018, 962, 140, -1000, -1000, -1000, 2257, -1000, 2257,
	2257, 2257, 2257, 2257, 910, 910, 910, 2257, -1000, -1000,
	-1000, -1000, 2290, 2257, 2289, -1000, 2257, 2257, 2257, 2257,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2287, 2287, 2287,
	2281, 2281, 2260, 2260, 430, -1000, 23869, 446, 44071, 2644,
	1448, 1746, -192, -1000, 59611, 1591, 1569, 1535, -1000, -542,
	2173, -1000, -1000, 2768, -1000, -1000, 1123, 1240, 1235, 1164,
	59611, 260, 362, -1000, 467, -1000, 44071, 59611, 1207, 912,
	59611, -1000, 59611, -1000, -1000, -1000, -1000, -1000, 59611, -1000,
	-1000, 2151, -1000, 2152, 1327, 1229, 1291, 1190, 2151, -1000,
	-1000, -190, 2151, -1000, 2151, -1000, 2151, -1000, 2151, -1000,
	2151, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1074, 286, -315, 59611, 260, 504, -1000, 503, 37078, -1000,
	-1000, -1000, 37078, 37078, -1000, -1000, -1000, -1000, 1949, 1939,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -535,
	61165, -1000, 291, 355, 347, 338, 61165, 426, 2570, 2566,
	2558, 2554, 2553, 2550, 2548, 289, 342, 61165, 61165, 475,
	2379, 61165, 2657, 61165, 61165, -1000, -1000, -1000, -1000, -1000,
	1920, 1913, -1000, 1428, 61165, -1000, -1000, 1186, 1186, -1000,
	-1000, 61165, 1186, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1186, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 61165, -1000, -1000,
	-1000, -1000, 1895, -1000, 61165, -22, 214, -1000, -1000, 59611,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -35,
	-1000, 349, 16, 429, -1000, -1000, -1000, -1000, -1000, 2700,
	-1000, 1428, 1141, 1171, -1000, 2215, -1000, -1000, 1251, -1000,
	-1000, -1000, -1000, -1000, 2215, 2215, 2215, -1000, -1000, -1000,
	-1000, -1000, 1318, 26200, 26200, 26200, 1599, 857, 1680, 1726,
	1357, 1346, 1346, 1271, 26200, 1271, 26200, 971, 971, 971,
	971, 971, -1000, -1000, -1000, -1000, -1000, -1000, 1892, -1000,
	1885, -1000, 2215, 60388, 1967, 18424, 1413, 1401, 1575, 1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4054, 1575, 2094, 1575, 1396, 4050, 1118, -1000, 23869, 1575,
	4031, -1000, -1000, 1575, 1575, 23869, -1000, -1000, 23869, 23869,
	23869, 23869, 1746, 1746, 1746, 1746, 1746, 1746, 1746, 1746,
	1746, 1746, 23869, 1746, 2150, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2148, 2815, 1365, 1746, 1746, 1746, 1746,
	4023, 1746, 1746, 23869, 2015, -1000, -1000, -1000, 1635, 4018,
	1496, 4011, 1746, 1746, -1000, 1746, 3674, 3668, 1575, 3034,
	2973, 1746, 1746, 1746, 1746, 1746, 2884, 2867, 1746, 1746,
	2862, 1746, 3512, 1746, 2823, 2773, 2760, 2754, 2739, 2726,
	2720, 2705, 2693, 2623, 2619, 2615, 2606, 2598, 2594, 2576,
	2572, 2552, 1746, 1746, 1746, 3491, 1746, 3481, 1746, 3451,
	1746, 1746, 3440, 2543, 2532, 1575, 2145, -1000, 3435, 1746,
	3428, 3409, 3398, 2525, 3387, 3379, 3367, 1746, 1746, 1746,
	2507, 3362, 3353, 3344, 3333, 3325, 3318, 3312, 3292, 3282,
	1746, 1678, 1678, 1678, 1678, 1678, 3278, -270, 1746, 1575,
	-1000, -1000, -1000, -1000, 3272, 2478, 3231, 3217, 3189, 3179,
	1575, 2215, 897, -1000, -1000, 1678, 1575, 1575, 1678, 1678,
	3168, 3164, 3159, 3155, 3138, 3115, 1746, 1746, -1000, 1746,
	3110, 3106, 2437, 2431, 1575, -1000, 1678, 61165, -1000, -409,
	-1000, -2, 1021, 2215, -1000, 42517, 1575, -1000, 4839, -1000,
	1500, -1000, -1000, -1000, -1000, -1000, 38632, 2213, -1000, -1000,
	-1000, 474, 788, 271, 474, 304, 291, 2329, 59611, 59611,
	59611, 61165, 1127, -1000, 497, -1000, 2215, -469, 22315, -1000,
	-1000, -1000, 910, 113, 37855, 956, 956, 153, -1000, 1428,
	1428, 23869, -1000, -1000, -1000, -1000, -1000, -1000, 896, 2805,
	509, 2215, -1000, 2147, 3202, -1000, -1000, -1000, 2673, 29308,
	-1000, -1000, 2215, 2215, 61165, 2205, 2188, -1000, 895, -1000,
	1565, 2129, 8, -5, -1000, -1000, -1000, -1000, 1428, -1000,
	1529, 369, 5506, -1000, 440, -1000, -1000, -1000, -1000, 2533,
	129, -1000, -1000, -1000, 375, 910, -1000, -1000, 910, -1000,
	-1000, -1000, -1000, 1878, -1000, 1878, -1000, -1000, -1000, -1000,
	-1000, 1407, -1000, -1000, -1000, -1000, 1400, -1000, -1000, 1391,
	-1000, -1000, 2796, 2343, 446, -1000, -1000, 1054, 1876, -1000,
	-1000, 2540, 1054, 1054, 59611, -1000, -1000, 1935, 2644, -1000,
	11, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -543, 163,
	580, -1000, -1000, -1000, 1388, 59611, 1956, -1000, 256, -1000,
	1848, -1000, 59611, -1000, 1938, 2278, 59611, 59611, -1000, -1000,
	-1000, 59611, 2215, -1000, -1000, -1000, -1000, 808, 2630, 322,
	-1000, -1000, -289, -1000, -1000, 260, 256, 60388, 59611, 962,
	-1000, -1000, -1000, -1000, -1000, -530, 1925, 778, 61165, 61165,
	61165, 61165, 61165, 61165, 874, -1000, -1000, 27, -1000, -1000,
	235, -1000, -1000, 1842, -1000, -1000, -1000, -1000, 235, -1000,
	-1000, -1000, -1000, -1000, 332, 499, -1000, 61165, 61165, 935,
	-1000, -1000, -1000, -1000, -1000, -1000, 1178, -1000, -1000, 1178,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2605, 61165, 15, -466, -1000, -463, 23869, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1459, 847, 1680, 26200,
	26200, 1767, 1767, 26200, -1000, -1000, -1000, 983, 983, 37078,
	-1000, 26200, 23869, -1000, -1000, 23869, 23869, 23869, 1096, -1000,
	23869, 1355, -1000, 23869, -1000, -270, 1678, 1746, 1746, 1746,
	1746, -270, -270, -270, -270, -270, -270, -270, -270, -270,
	-270, 2177, -1000, 23869, 23869, 23869, 1575, 364, -1000, -1000,
	-1000, -270, 23869, -1000, -1000, 2814, -1000, 23869, -1000, 37078,
	23869, 23869, 23869, -1000, -1000, -1000, 23869, 23869, -1000, -1000,
	23869, -1000, 23869, -1000, -1000, -1000, -1000, -1000, -1000, 23869,
	-1000, 23869, -1000, -1000, -1000, 23869, -1000, 23869, -1000, -1000,
	23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000,
	23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000,
	23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000,
	23869, -1000, 23869, -1000, 23869, -1000, -1000, -1000, 23869, -1000,
	23869, -1000, 23869, -1000, -1000, 23869, -1000, 23869, -1000, 23869,
	-1000, 23869, 23869, -1000, 23869, 23869, 23869, -1000, 23869, 23869,
	23869, 23869, -1000, -1000, -1000, -1000, 23869, 23869, 23869, 23869,
	23869, 23869, 23869, 23869, 23869, 23869, -1000, -1000, -1000, -1000,
	-1000, -1000, 23869, -1000, 44071, 81, -270, 1612, 81, 1612,
	25423, 907, 906, 24646, -1000, 23869, 17641, -1000, -1000, -1000,
	-1000, -1000, 23869, 23869, 23869, 23869, 23869, 23869, -1000, -1000,
	-1000, 23869, 23869, -1000, 23869, -1000, 23869, -1000, -1000, -1000,
	-1000, -1000, 1021, -1000, 872, 502, 912, 59611, -1000, -1000,
	-1000, -1000, 2128, -1000, 2696, -1000, 2482, 2459, 2813, 2805,
	23092, -1000, 33193, 61165, 61165, 290, 61165, 291, 762, 2376,
	-1000, 2329, 2329, 2329, -1000, 2655, -1000, 2265, 1513, -1000,
	-1000, -1000, -1000, -1000, -391, -1000, 2517, 2495, 956, 956,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14509, 2718, 23869,
	2370, 60388, 2215, -1000, 30862, -1000, -1000, 59611, 60388, 33193,
	33193, 33193, 33193, 33193, -1000, 2413, 2406, -1000, 2400, 2391,
	2435, 61165, -1000, 1783, 1908, -1000, 23869, 35524, 2102, 33193,
	-1000, -1000, 33193, 61165, 13726, -1000, -1000, 2, 0, -1000,
	-1000, -1000, -1000, 1454, -1000, -1000, 1691, 2664, 2536, -1000,
	-1000, -1000, -1000, -1000, -1000, 1902, -1000, 1891, 2114, 1874,
	1869, 286, -1000, 2273, 2601, 1054, 1054, -1000, 1384, -1000,
	1552, 1800, 1791, -1000, -1000, -1000, 401, -1000, -1000, -553,
	1379, 2264, 1993, 23869, 2263, 2765, 2108, 59611, -1000, -1000,
	60388, -1000, 301, -1000, 446, 59611, -1000, -1000, -1000, 362,
	61165, -1000, 10028, -1000, -1000, -1000, 256, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 61165, 1979, -1000, -1000, -1000, -1000,
	-1000, 245, 234, 1787, 241, 1781, -1000, 241, -1000, 61165,
	921, 2343, 61165, -1000, -1000, -1000, 1186, 1186, -1000, -1000,
	2599, -1000, 1552, 1746, 26200, 26200, -1000, 964, -1000, -1000,
	600, -243, 2257, 2257, -1000, 2257, 2260, -1000, 2257, 196,
	2257, 189, 2257, -1000, -1000, 1575, 1575, -1000, 1678, 2412,
	2084, 3086, -1000, 1428, 23869, 3061, -1000, -1000, -270, -270,
	-270, -270, -270, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -81, 3052, 3039, 1746, -1000, 2256, 2252,
	-1000, 1746, 23869, 1746, 1575, 2387, 1746, 1746, 1746, 1746,
	1746, 1746, 1746, 1746, 1746, 1746, 1746, 1746, 2382, 2362,
	2346, 2321, 2317, 2301, 2284, 2275, 2268, 2222, 2201, 2190,
	2179, 2174, 2139, 2040, 1746, 1746, 2036, 1746, 2024, 2004,
	-1000, 1428, 1678, 3021, 1678, 1746, 1746, 3000, 363, 1746,
	1838, 1838, 1838, 1838, 1838, 1678, 1678, 1678, 1678, 1746,
	59611, -1000, -270, -1000, -1000, -310, -311, -1000, 1575, -270,
	2113, 26200, 1746, 26200, 26200, 26200, 1746, 1575, -1000, 1985,
	1958, 2778, 1934, 1746, 2689, 1746, 1746, 1746, 1919, -1000,
	2692, 2215, 2692, 2215, 2692, 1830, 1500, 61165, -1000, -1000,
	-1000, -1000, 2805, 2801, -1000, 2112, 2215, -1000, -1000, -1000,
	-1000, -1000, 531, 61165, 61165, 2366, 2364, 2361, -1000, 1784,
	-1000, -1000, 113, 615, -1000, 2501, 2495, -1000, 2761, 2511,
	2758, -1000, -1000, -1000, -1000, -1000, 1428, -1000, 2625, 2090,
	-1000, 1058, 2146, -1000, -1000, 22315, 1835, 2458, 892, 1830,
	2181, 3202, 2325, 2359, 2860, -1000, -1000, -1000, -1000, 2394,
	-1000, 2393, -1000, -1000, 2229, -1000, 2643, 367, 33193, 2105,
	2105, -1000, 890, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1282, 10028, 2831, -1000, 1778, -1000, 1525, 273, 1378, -1000,
	-1000, 1054, 1054, -1000, 1198, 1193, -1000, 61165, 2247, -1000,
	910, 1776, 910, 1376, -1000, -1000, 1371, -1000, -1000, -1000,
	-1000, 2314, 2398, -1000, -1000, -1000, -1000, 300, 2245, 2757,
	-1000, 23869, 2244, 1057, 2639, 59611, 59611, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 487, 1054,
	-516, 339, 334, 1054, 1054, 1054, -556, -1000, -1000, 1828,
	1775, -1000, -207, -1000, 23869, -1000, -1000, -1000, -1000, -1000,
	1453, 1453, 1759, 1752, 1737, -1000, 2229, -194, 59611, 59611,
	59611, 59611, -1000, -1000, -1000, 1335, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 964, 1575,
	357, -200, 1575, -1000, -1000, 910, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23869, -1000, 23869, -1000,
	23869, 1428, 23869, -1000, -1000, -1000, -1000, -1000, 2718, 1732,
	23869, 23869, -1000, 1368, 1359, -270, 1746, -1000, -1000, -1000,
	23869, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 23869, -1000, 23869, -1000, 23869, -1000,
	23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000,
	23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000, 23869, -1000,
	23869, -1000, 23869, -1000, 23869, -1000, -1000, 23869, -1000, -1000,
	-1000, 23869, -1000, 23869, -1000, 23869, -1000, -1000, -1000, 23869,
	308, 983, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1575, 365, -1000, -1000, -1000, 2808, -1000,
	1575, 23869, 1767, -1000, 1767, 1767, 1767, -1000, -1000, -1000,
	23869, -1000, 23869, 23869, -1000, 23869, -1000, 23869, -1000, -1000,
	-1000, -1000, 23869, 2215, 2476, 43294, 2215, 43294, 2215, 35524,
	-1000, -1000, 2801, 2799, 2750, 248, 61165, -1000, -1000, 61165,
	61165, 61165, -1000, 2502, 2505, 2505, 2501, -1000, 2743, 2740,
	-1000, 1718, 2737, 1711, 1185, -1000, 60388, 23869, -1000, 2215,
	42517, -1000, 510, 59611, 2215, -1000, 59611, -1000, 2797, -1000,
	-1000, 23869, 2228, -1000, 23869, -1000, -1000, -1000, -1000, 8167,
	2805, 2105, -1000, -1000, 981, -1000, 23869, -1000, 12094, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1710, 1702,
	-1000, -1000, 2227, 23869, -1000, -1000, -1000, 1736, 1727, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 362,
	-546, 2397, 59611, 1358, -1000, 1758, 2108, 343, 2215, 1697,
	1054, 1054, 1054, 1345, 1341, 42517, 1750, -1000, 59611, 422,
	-1000, 362, -1000, -212, -213, 1746, -1000, -1000, 2661, -1000,
	17641, -1000, -1000, 2219, 2326, -1000, -1000, -1000, -1000, 2438,
	-188, -204, -1000, -1000, 1746, 1746, 1746, 2307, 1575, -1000,
	1746, 1746, 1707, 1652, -1000, -1000, 1746, 1746, 1746, 1746,
	1746, 1746, 1746, 1746, 1746, 1746, 1746, 1746, 1746, 1746,
	1746, 1746, 1746, 1746, 1746, 1746, 1678, 1871, -1000, 308,
	1575, 2353, -1000, -1000, 8167, -1000, -1000, 2797, 2725, 81,
	-1000, -1000, 264, 81, 1428, 1088, 1575, 1575, 1088, 1847,
	1746, 1735, 1731, 1746, 1746, 36301, -1000, 2723, 2722, 1743,
	-1000, -1000, 43294, 1743, 43294, 1021, 2799, -277, 23869, 23869,
	1575, 2111, -1000, 59611, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2479, 1351, -1000, -1000, -1000, -1000, 1693, 1667, -1000,
	1656, -1000, 2827, -1000, 1428, -1000, 2215, 2215, -1000, 878,
	2146, -1000, 2718, 1428, 59611, 1428, 100, 2797, -1000, 1746,
	-1000, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, -1000, -1000, 59611, 2234, -1000, -1000, 1748, 160,
	-1000, 1636, 2108, -1000, -1000, 699, -1000, 23869, -1000, 42517,
	1642, 1626, -1000, -1000, -1000, -1000, -556, -1000, -1000, -1000,
	-1000, -1000, -1000, 454, 2106, -1000, 1051, 59611, 61165, -1000,
	2427, -1000, -1000, -1000, -1000, 23869, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 23869, -1000, 1575, 2351, -1000, -343, -1000,
	-523, 23869, -270, -1000, -1000, -270, -1000, -1000, -1000, -1000,
	-1000, 23869, -1000, -1000, 23869, -1000, 23869, -1000, -1000, 1743,
	-1000, -1000, -1000, 41740, -1000, 1743, -1000, 1743, -1000, -277,
	-1000, 2101, -1000, 59611, 1428, 353, 8569, 248, 6593, -1000,
	1252, -1000, -1000, -1000, -1000, -1000, 60388, 59611, 2146, 59611,
	-1000, -1000, 1741, 1575, 2215, 2718, -1000, 1723, -1000, -1000,
	2218, 1993, -1000, -1000, -1000, 21538, -1000, -1000, -1000, -1000,
	-1000, 249, -192, 17641, 12943, 1706, -1000, -193, 1746, 1678,
	-1000, -456, -1000, -1000, -1000, -1000, 275, -1000, -1000, 2094,
	-1000, -1000, 1670, 1662, 1590, -1000, -1000, -1000, -1000, -1000,
	-1000, -277, -1000, -1000, 2648, -1000, -217, -1000, -563, -1000,
	-1000, 8569, 23869, 32416, 40963, -1000, -1000, -1000, -1000, 1592,
	1674, -1000, -1000, -1000, 35524, 58834, -1000, -182, 410, 23869,
	2217, 1575, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 876, -1000, -1000, -1000, 1979, -202, -1000, -1000,
	-1000, 4794, -495, -260, -264, 26200, -1000, 23869, -1000, 23869,
	-1000, 23869, -1000, 59611, 2215, -1000, -1000, 1095, 8569, -1000,
	-563, 1324, 5478, 836, 507, -1000, -1000, -1000, 2607, -1000,
	-1000, 2450, -1000, -1000, -1000, 1666, -1000, 4356, -326, 2344,
	-1000, -73, -1000, -1000, -1000, 1276, 1608, -1000, 1340, -1000,
	-1000, -1000, -1000, 2125, 59611, -1000, 16858, -194, -205, 1135,
	-1000, -1000, -1000, -1000, -1000, 1767, 1574, 1567, 1746, -1000,
	59611, -1000, -1000, 8569, 2627, 2691, 2687, -1000, 268, 268,
	1570, -1000, -1000, 58834, -320, 962, 8167, -1000, 2335, 2223,
	2812, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -559, 1651,
	-1000, -1000, -1000, 4794, -280, -1000, 23869, -1000, 23869, -1000,
	1575, 8168, -1000, 10028, 30085, 1007, -1000, 1042, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2654, 100, -1000, 2824, -1000, 2822,
	779, 779, -1000, 1326, -559, -1000, -1000, -1000, 1746, 1746,
	-1000, 1113, 1101, -1000, 23869, 23869, -1000, 7339, -1000, -1000,
	-1000, -1000, 853, -1000, -1000, -1000, -1000, 5800, -327, -1000,
	-1000, -1000, -1000, -1000, 388, 1418, -1000, -1000, -1000, -1000,
	-1000, 1094, 8569, -1000, 1265, 1746, -1000, 30085, -1000, -1000,
	8167, -1000, -1000, -1000, 464, 8569, 8569, -1000, -1000, 261,
	-1000, 8569, 261, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3493, 3492, 40, 11, 52, 50, 3491, 2854, 3490,
	3487, 2865, 3484, 199, 3482, 3479, 3477, 3476, 3472, 3470,
	206, 205, 201, 3469, 3466, 3464, 3462, 3461, 3460, 3459,
	3457, 3453, 79, 110, 41, 118, 229, 230, 3452, 3446,
	64, 188, 215, 3443, 3442, 3441, 3436, 3430, 128, 221,
	96, 100, 214, 3426, 3424, 88, 3419, 3417, 3416, 3415,
	3411, 10, 16, 36, 35, 3410, 3407, 3406, 22, 3405,
	208, 207, 200, 1152, 3400, 220, 126, 62, 3394, 3392,
	3389, 3385, 8, 4, 3381, 6, 3375, 9, 3369, 3367,
	3364, 3363, 3359, 3356, 3354, 3353, 3352, 3351, 3350, 3347,
	3346, 3343, 3341, 3339, 3338, 243, 3336, 3333, 38, 3331,
	90, 3330, 3328, 3326, 3325, 3318, 18, 3309, 3306, 23,
	57, 63, 3305, 3304, 59, 3302, 3301, 3299, 3298, 3297,
	30, 3295, 37, 3290, 55, 3289, 3288, 137, 3273, 3269,
	3267, 53, 3258, 3257, 3254, 25, 191, 3253, 3250, 162,
	3249, 3248, 3247, 190, 234, 3246, 2447, 3245, 112, 3244,
	3243, 3237, 192, 189, 218, 3232, 116, 3228, 3227, 3220,
	3218, 150, 3213, 3210, 3643, 3209, 3204, 14, 17, 141,
	3203, 3199, 166, 3, 69, 3198, 54, 58, 3196, 3191,
	15, 87, 3188, 117, 3186, 3185, 113, 71, 3184, 111,
	108, 3180, 3178, 24, 13, 3175, 7, 1, 2, 74,
	3173, 3171, 125, 3169, 3165, 3164, 105, 3162, 3161, 4851,
	3160, 102, 144, 106, 85, 3158, 185, 72, 3154, 3152,
	3151, 3150, 3149, 3143, 66, 3137, 3136, 3134, 160, 202,
	120, 3133, 3132, 147, 357, 146, 80, 149, 3127, 171,
	3123, 158, 94, 3120, 196, 3115, 3113, 159, 156, 3112,
	3109, 115, 182, 210, 3107, 107, 138, 131, 143, 104,
	176, 3105, 3087, 3085, 101, 77, 3082, 3080, 3079, 3074,
	193, 3072, 3071, 75, 3068, 99, 3067, 197, 3066, 139,
	67, 3060, 194, 180, 3055, 84, 187, 3050, 3048, 3047,
	70, 130, 81, 56, 3046, 179, 184, 140, 178, 3044,
	3036, 86, 3030, 3028, 3027, 76, 212, 350, 3024, 3019,
	281, 204, 164, 145, 103, 3009, 216, 3008, 3006, 3003,
	26, 5547, 7953, 209, 43, 181, 3002, 3001, 8885, 27,
	83, 34, 3000, 219, 2989, 142, 2988, 2987, 2986, 222,
	247, 121, 183, 68, 2982, 2971, 2970, 2969, 29, 2967,
	2966, 2965, 2961, 2960, 2957, 49, 48, 47, 97, 227,
	73, 20, 119, 186, 175, 82, 2956, 2955, 2954, 136,
	98, 2953, 177, 174, 152, 167, 2950, 198, 165, 133,
	2947, 78, 44, 2932, 2930, 2927, 2924, 122, 2923, 2922,
	2921, 2918, 170, 169, 135, 92, 2917, 95, 109, 173,
	168, 65, 2914, 61, 2912, 2911, 42, 213, 45, 2908,
	2906, 2905, 39, 2903, 28, 123, 127, 2901, 7096, 2900,
	31, 236, 172, 2898, 2897, 12, 19, 21, 2890, 2889,
	2887, 2886, 153, 2884, 2883, 2880, 2878, 33, 60, 32,
	51, 124, 161, 89, 2868, 2867, 163, 2864, 2862, 0,
	1371, 148, 2830, 217,
}

//line sql.y:9286
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) compoundStatementsUnion() *CompoundStatements {
	v, _ := st.union.(*CompoundStatements)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) elseIfUnion() *ElseIfBlock {
	v, _ := st.union.(*ElseIfBlock)
	return v
}

func (st *yySymType) elseIfsUnion() []*ElseIfBlock {
	v, _ := st.union.([]*ElseIfBlock)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) handlerActionUnion() HandlerAction {
	v, _ := st.union.(HandlerAction)
	return v
}

func (st *yySymType) handlerConditionUnion() HandlerCondition {
	v, _ := st.union.(HandlerCondition)
	return v
}

func (st *yySymType) handlerConditionsUnion() []HandlerCondition {
	v, _ := st.union.([]HandlerCondition)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) signalConditionNameUnion() SignalConditionName {
	v, _ := st.union.(SignalConditionName)
	return v
}

func (st *yySymType) signalSetUnion() *SignalSet {
	v, _ := st.union.(*SignalSet)
	return v
}

func (st *yySymType) signalSetsUnion() []*SignalSet {
	v, _ := st.union.([]*SignalSet)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) statementsUnion() []Statement {
	v, _ := st.union.([]Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 458, 7, 7, 11, 9, 9, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 82, 82, 82, 82, 82, 82, 82,
	66, 66, 67, 67, 68, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 59, 59, 59,
	60, 60, 62, 62, 65, 65, 63, 64, 61, 61,
	61, 61, 61, 170, 170, 273, 273, 273, 83, 81,
	81, 84, 84, 85, 85, 86, 86, 89, 89, 88,
	88, 87, 295, 428, 293, 293, 31, 100, 40, 40,
	39, 39, 42, 42, 41, 34, 34, 34, 35, 35,
	35, 35, 35, 35, 35, 35, 36, 36, 36, 36,
	36, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	38, 38, 18, 19, 37, 37, 37, 20, 20, 135,
	135, 21, 22, 22, 22, 22, 461, 461, 214, 214,
	212, 212, 213, 213, 300, 300, 23, 304, 304, 306,
	306, 306, 306, 294, 294, 294, 24, 24, 305, 305,
	307, 307, 307, 310, 310, 310, 310, 352, 352, 352,
	25, 25, 25, 25, 25, 25, 155, 430, 430, 429,
	424, 424, 423, 423, 422, 427, 427, 426, 426, 425,
	45, 44, 46, 46, 46, 47, 56, 56, 56, 56,
	57, 58, 431, 431, 393, 74, 74, 73, 73, 73,
	73, 73, 73, 75, 75, 71, 71, 70, 70, 72,
	72, 395, 395, 381, 381, 394, 394, 394, 394, 394,
	394, 394, 380, 380, 167, 167, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 446, 446, 446, 446, 445, 445, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 178, 178,
	190, 190, 190, 190, 190, 190, 176, 176, 177, 175,
	175, 175, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	189, 189, 184, 184, 184, 186, 186, 185, 185, 185,
	187, 187, 447, 447, 447, 447, 358, 358, 358, 358,
	361, 361, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 360, 360, 360, 360, 360, 360, 360, 362, 362,
	362, 362, 362, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	364, 364, 364, 364, 364, 364, 364, 364, 379, 379,
	368, 368, 373, 373, 374, 374, 375, 375, 375, 376,
	376, 376, 377, 377, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 372, 372, 371, 371, 371, 382, 407,
	407, 406, 406, 404, 404, 404, 404, 404, 404, 404,
	404, 391, 391, 401, 401, 401, 401, 401, 390, 390,
	386, 386, 386, 387, 387, 388, 388, 385, 385, 389,
	389, 403, 403, 402, 402, 383, 383, 384, 384, 409,
	448, 448, 448, 448, 448, 449, 449, 410, 438, 440,
	440, 440, 439, 439, 436, 437, 435, 435, 435, 435,
	435, 110, 110, 110, 324, 324, 325, 325, 399, 399,
	398, 398, 398, 400, 400, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 319, 319, 319, 434,
	434, 434, 434, 434, 434, 433, 433, 433, 396, 396,
	396, 396, 432, 432, 76, 76, 252, 252, 451, 451,
	453, 453, 453, 53, 53, 53, 53, 53, 53, 52,
	52, 52, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 54, 54, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 137,
	137, 138, 138, 138, 138, 140, 140, 140, 412, 412,
	77, 77, 3, 3, 202, 204, 205, 205, 203, 203,
	203, 203, 203, 203, 79, 79, 78, 78, 207, 206,
	208, 208, 208, 1, 1, 2, 2, 4, 4, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 378, 378, 378, 411, 411, 413, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 143, 142, 142,
	141, 144, 144, 144, 144, 144, 144, 144, 144, 415,
	415, 415, 80, 80, 416, 365, 366, 367, 5, 6,
	392, 414, 151, 151, 27, 43, 43, 28, 28, 28,
	28, 28, 29, 29, 90, 93, 93, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 329, 329, 318, 318, 327, 327, 317,
	317, 343, 343, 343, 320, 320, 320, 321, 321, 444,
	444, 444, 313, 313, 92, 92, 92, 344, 344, 344,
	344, 95, 95, 454, 454, 455, 455, 456, 456, 456,
	96, 97, 97, 347, 347, 348, 348, 98, 99, 111,
	111, 111, 111, 111, 112, 112, 112, 112, 112, 112,
	136, 136, 136, 13, 13, 13, 13, 107, 107, 107,
	12, 12, 14, 94, 94, 101, 441, 441, 442, 443,
	443, 443, 443, 102, 104, 30, 30, 30, 30, 30,
	30, 161, 161, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 156, 156, 156, 150, 150,
	462, 105, 106, 106, 154, 154, 154, 147, 147, 147,
	153, 153, 153, 15, 15, 16, 298, 298, 17, 17,
	160, 160, 159, 159, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 157, 157, 158, 158, 158,
	158, 336, 336, 336, 335, 335, 196, 196, 198, 197,
	197, 199, 199, 200, 200, 200, 200, 250, 250, 222,
	222, 290, 290, 291, 291, 289, 289, 297, 297, 292,
	292, 292, 292, 301, 301, 201, 201, 201, 201, 209,
	209, 210, 210, 211, 211, 346, 346, 341, 341, 341,
	340, 340, 215, 215, 215, 217, 216, 216, 216, 216,
	218, 218, 220, 220, 219, 219, 221, 226, 226, 225,
	225, 223, 223, 223, 223, 223, 223, 224, 224, 224,
	224, 227, 227, 174, 174, 174, 174, 174, 174, 174,
	174, 452, 452, 188, 188, 188, 188, 188, 188, 188,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 280, 280, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 255, 255, 254, 254, 113, 113, 113,
	114, 114, 115, 115, 115, 115, 115, 116, 116, 116,
	116, 116, 116, 116, 118, 118, 117, 117, 241, 241,
	333, 333, 119, 120, 120, 121, 121, 124, 124, 123,
	122, 122, 128, 128, 125, 125, 127, 127, 126, 129,
	129, 130, 131, 131, 314, 314, 228, 228, 237, 237,
	237, 237, 229, 229, 230, 230, 230, 230, 230, 230,
	238, 238, 238, 249, 239, 239, 235, 235, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 193, 193, 193, 193, 260, 260, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 181, 181, 194, 194, 194, 194, 195,
	195, 195, 195, 195, 195, 195, 354, 354, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 463, 463, 369, 369,
	369, 236, 236, 236, 236, 236, 152, 152, 152, 152,
	152, 351, 351, 351, 355, 355, 355, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 356, 356, 258, 258, 148, 148, 256, 256,
	257, 259, 259, 251, 251, 251, 251, 253, 253, 232,
	232, 232, 261, 261, 357, 357, 262, 262, 132, 133,
	133, 134, 134, 263, 263, 265, 264, 264, 266, 267,
	267, 267, 268, 268, 269, 269, 269, 55, 55, 55,
	55, 55, 50, 50, 50, 50, 51, 51, 51, 51,
	163, 163, 164, 164, 164, 166, 166, 165, 165, 108,
	108, 109, 109, 109, 421, 421, 420, 420, 418, 419,
	419, 419, 419, 171, 171, 172, 173, 173, 173, 168,
	168, 169, 169, 287, 287, 287, 287, 287, 287, 287,
	270, 270, 270, 270, 299, 299, 296, 296, 278, 278,
	278, 274, 274, 276, 276, 276, 277, 277, 277, 275,
	284, 284, 286, 286, 285, 285, 281, 281, 282, 282,
	283, 283, 283, 279, 279, 231, 231, 231, 231, 231,
	315, 315, 288, 288, 288, 288, 345, 345, 345, 302,
	302, 242, 242, 243, 243, 247, 247, 246, 246, 244,
	245, 248, 248, 192, 303, 303, 311, 308, 308, 309,
	309, 337, 337, 337, 312, 312, 326, 326, 322, 322,
	323, 323, 316, 316, 328, 328, 328, 103, 240, 240,
	408, 408, 405, 332, 332, 334, 334, 338, 338, 342,
	342, 339, 339, 10, 457, 457, 457, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 459, 460, 349, 350, 350, 350,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 2, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 8, 4, 6, 5, 3,
	0, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 4, 2, 2, 1,
	1, 0, 1, 1, 2, 0, 2, 0, 1, 2,
	1, 4, 1, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	3, 3, 5, 7, 10, 9, 1, 7, 8, 1,
	1, 10, 11, 9, 8, 8, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 1, 3, 3,
	3, 3, 3, 1, 1, 2, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 6, 5, 2, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 0, 1, 1, 3, 3,
	10, 6, 6, 8, 7, 4, 7, 8, 8, 8,
	5, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 1, 0,
	2, 2, 3, 3, 2, 3, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 5, 2, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 5, 5, 6, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 5, 3, 2, 4, 5, 5, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	5, 3, 5, 0, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 1, 1, 2, 1, 3, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 3, 2, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 1, 2, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 5, 5, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 3,
	6, 1, 1, 3, 4, 3, 4, 4, 4, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 5,
	5, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 5,
	6, 3, 3, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 4, 2, 4, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 1, 0, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 2, 2, 5, 6, 6, 6,
	6, 6, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 8, 4, 8, 8, 6, 5, 4, 4,
	4, 5, 7, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 6, 4, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 4, 4, 4, 6, 4, 6,
	4, 4, 6, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 4, 4, 6, 4, 6, 4,
	8, 6, 4, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 5, 9,
	6, 9, 8, 6, 8, 8, 8, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 4, 0, 2, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 1, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 1, 1, 3, 3, 0,
	1, 1, 1, 0, 1, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 3, 4, 2, 3, 4, 4,
	9, 3, 5, 2, 3, 1, 1, 1, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 3, 1, 6, 5, 4,
	1, 1, 1, 3, 3, 5, 0, 2, 5, 0,
	5, 1, 3, 1, 3, 1, 3, 1, 2, 3,
	4, 1, 1, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -458, -7, -11, -105, -462, 787, -9, -8, -32,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -27,
	-28, -29, -90, -93, -91, -92, -95, -96, -97, -98,
	-99, -12, -14, -94, -30, -31, -100, -101, -102, -103,
	-104, -15, -16, -17, -10, -35, -34, -33, 13, 14,
	-135, -39, 35, -44, -45, -56, -46, -57, -47, 242,
	-58, 244, 243, 292, 245, 409, 285, 83, 342, 343,
	345, 346, 347, 348, -136, 739, 290, 291, 247, 39,
	51, 36, 37, 40, 251, 298, 299, 250, 145, -36,
	-40, 12, -459, 15, 511, 241, 287, 286, 31, -37,
	621, 95, -38, 63, -106, -11, -287, -270, 26, 36,
	32, -269, -265, -154, -270, 24, 22, 11, -105, -105,
	-105, 16, 17, -105, -393, -395, 95, 174, 95, -290,
	95, -74, -73, -71, -70, -72, -75, 34, -53, -54,
	-417, -52, -49, 246, 243, 302, 135, 136, 292, 293,
	294, 245, 275, 291, 295, 290, 311, -48, 90, 36,
	621, 624, -400, 242, 248, 249, 244, 512, 138, 137,
	84, -397, 404, 655, 757, -75, 759, 110, 113, 758,
	50, 265, 760, 761, 762, 662, 763, 274, 764, 765,
	766, 767, 773, 704, 774, 775, 776, 139, 11, -105,
	-342, -338, 100, -331, 618, 277, 653, 465, 654, 327,
	90, 47, 42, 557, 628, 400, 404, 655, 542, 757,
	410, 342, 360, 354, 547, 548, 549, 383, 375, 619,
	656, 629, 330, 278, 315, 460, 751, 373, 149, 759,
	453, 334, 657, 293, 411, 412, 463, 658, 413, 110,
	345, 450, 772, 333, 659, 770, 113, 758, 350, 457,
	459, 458, 88, 541, 57, 754, 464, 338, 50, 288,
	470, 471, 371, 250, 367, 760, 316, 660, 631, 309,
	138, 135, 779, 39, 363, 56, 33, 769, 137, 55,
	761, 165, 661, 762, 662, 415, 390, 745, 54, 416,
	294, 663, 93, 299, 623, 339, 753, 417, 562, 364,
	418, 326, 768, 247, 664, 337, 734, 726, 727, 254,
	419, 420, 746, 395, 391, 396, 564, 665, 666, 442,
	546, 421, 730, 731, 255, 786, 58, 667, 668, 747,
	136, 669, 87, 763, 89, 358, 359, 670, 324, 276,
	567, 568, 444, 387, 524, 127, 531, 532, 120, 121,
	527, 122, 533, 123, 128, 534, 535, 536, 525, 124,
	117, 526, 537, 538, 388, 389, 125, 539, 119, 118,
	528, 530, 126, 540, 274, 38, 422, 620, 328, 64,
	332, 303, 445, 52, 393, 783, 51, 741, 569, 671,
	744, 386, 382, 521, 720, 59, 672, 673, 674, 675,
	543, 764, 385, 357, 381, 778, 4, 321, 455, 516,
	544, 765, 68, 249, 398, 397, 399, 456, 310, 441,
	378, 676, 677, 678, 281, 91, 679, 368, 25, 680,
	681, 423, 317, 682, 62, 683, 684, 448, 291, 685,
	60, 766, 721, 45, 686, 296, 780, 767, 687, 688,
	689, 740, 690, 298, 691, 425, 692, 728, 729, 424,
	392, 394, 570, 305, 426, 409, 722, 252, 622, 693,
	340, 362, 295, 771, 694, 282, 558, 559, 560, 561,
	752, 566, 565, 297, 302, 290, 449, 283, 695, 696,
	697, 698, 699, 331, 719, 700, 701, 346, 626, 773,
	522, 49, 461, 702, 703, 704, 705, 706, 325, 320,
	443, 452, 67, 92, 406, 707, 708, 750, 356, 351,
	43, 709, 710, 711, 712, 318, 99, 502, 504, 505,
	506, 507, 508, 503, 510, 713, 343, 61, 774, 775,
	776, 312, 777, 550, 551, 552, 553, 13, 604, 587,
	615, 588, 605, 589, 598, 590, 606, 614, 616, 571,
	579, 572, 580, 610, 593, 607, 599, 592, 591, 613,
	596, 600, 573, 581, 611, 597, 574, 582, 575, 583,
	576, 584, 609, 608, 601, 612, 577, 585, 603, 578,
	586, 602, 594, 595, 454, 473, 784, 785, 545, 462,
	428, 723, 139, 322, 323, 53, 379, 304, 714, 335,
	715, 369, 370, 518, 519, 384, 355, 380, 146, 737,
	344, 353, 735, 306, 429, 523, 292, 716, 451, 319,
	401, 131, 352, 407, 336, 627, 563, 311, 430, 749,
	625, 66, 554, 555, 377, 374, 313, 556, 717, 402,
	739, 431, 266, 307, 308, 718, 736, 432, 433, 329,
	434, 435, 436, 437, 438, 440, 341, 439, 738, 732,
	733, 314, 501, 624, 349, 372, 408, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 520, 264, -105, 264, -219,
	-338, -156, 741, 743, 193, -308, 412, -327, 414, 427,
	422, 432, 420, -318, 423, 425, 305, -444, 442, 264,
	429, 241, 415, 424, 433, 434, 329, 440, 435, 341,
	439, 314, 436, 437, 438, -428, 193, 762, 777, 344,
	352, 149, 376, 419, 417, 443, 741, 100, -344, 100,
	101, 102, -331, 344, -347, 349, -332, -428, -331, 347,
	-105, -105, -349, -349, -156, -239, -174, 157, -188, -295,
	-191, 101, -179, -182, -233, -234, -235, -236, -189, -253,
	-293, 182, 183, 190, 158, -249, -192, 29, 617, 513,
	512, 193, 34, 236, 77, 78, 515, 516, 160, 63,
	15, 478, 479, -190, 468, 469, 480, 474, 475, 541,
	543, 544, 545, 542, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 546, 557, 518, 519, 129, 520,
	117, 119, 118, 127, 128, 521, 522, 523, 373, 569,
	570, 564, 567, 568, 566, 565, 388, 389, 524, 587,
	588, 592, 591, 589, 590, 593, 596, 597, 598, 599,
	600, 601, 603, 602, 594, 595, 572, 571, 573, 574,
	575, 576, 577, 578, 580, 579, 581, 582, 583, 584,
	585, 586, 604, 605, 606, 607, 608, 610, 609, 614,
	613, 611, 612, 616, 615, 525, 526, 120, 121, 122,
	123, 124, 125, 126, 527, 530, 528, 529, 531, 532,
	533, 538, 539, 534, 535, 536, 537, 540, 399, 397,
	398, 394, 393, 392, -115, -128, 644, 643, -129, 465,
	470, 471, 473, -180, -181, -194, -195, -332, -338, 269,
	467, 263, 188, 511, -183, -177, -251, 116, 102, -34,
	-248, 466, 476, 477, 481, 472, 482, 630, 632, 647,
	648, 650, 635, 640, 639, 642, 558, 559, 560, 561,
	562, 563, 726, 727, 728, 729, 730, 731, 732, 733,
	-428, -331, 100, -186, -184, -228, 103, 108, 111, 112,
	114, -450, 288, 369, 370, 130, -459, -244, -245, -185,
	105, 106, 107, 132, 133, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 755, 98, 104,
	50, 428, 428, -219, -105, -105, -105, -105, -457, 758,
	622, -263, -154, -265, -36, -34, -459, 12, -105, -34,
	-35, -33, -40, -105, -42, 649, -41, -338, -105, 109,
	-270, -287, 16, 67, 177, 48, 56, -299, -296, -295,
	100, 101, -268, -269, -37, -34, -174, 23, 41, 27,
	-158, 184, -174, -338, -158, -316, 268, -105, -105, -304,
	-352, 344, -306, 443, 741, 442, -294, -309, 100, -293,
	-308, 441, 101, -394, 174, -380, -384, -332, 279, -410,
	275, -219, -403, -402, -332, -459, 28, -289, -332, -70,
	-71, -72, -308, 192, 761, -137, 297, 301, 96, 96,
	-384, -383, -382, -432, 301, 279, -409, -401, 271, 280,
	-390, 272, 273, -385, 265, 151, -432, -385, 270, 280,
	275, 279, 301, 301, 139, 301, 139, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 296, -391, 166, -391,
	625, 625, -397, -432, 275, 265, -432, -432, 271, -328,
	-385, 267, 28, 267, 38, 38, -391, -391, -391, -308,
	192, -391, -391, -391, -391, 309, 309, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, 264, -431, -163, 439, 329, 467,
	263, -164, 90, -73, 311, -43, -219, -326, 265, 266,
	-431, 305, 298, 322, -219, 237, 264, 744, -320, 174,
	19, -320, -317, 428, 426, 413, 418, -320, -320, -320,
	-320, 312, 411, -386, 265, 38, 276, 428, 312, 411,
	312, 313, 312, 313, 421, 431, 312, -343, 18, 177,
	467, 416, 420, 305, 264, 306, 266, 430, 313, -343,
	98, -321, 174, 312, 428, 422, 308, -320, -320, -350,
	-459, -334, -332, -330, 246, 41, 156, 28, 30, 159,
	193, 142, 23, 160, 40, 248, 376, 275, 192, 271,
	262, 256, 512, 241, 81, 630, 468, 475, 466, 474,
	478, 514, 515, 467, 414, 253, 34, 17, 632, 31,
	286, 27, 44, 186, 243, 163, 164, 633, 289, 29,
	257, 287, 129, 133, 635, 26, 84, 280, 18, 273,
	46, 20, 636, 637, 21, 74, 269, 268, 177, 265,
	79, 725, 15, 236, 32, 173, 75, 638, 151, 145,
	639, 640, 641, 642, 143, 77, 174, 24, 781, 476,
	477, 36, 742, 617, 300, 188, 82, 65, 743, 157,
	472, 643, 644, 130, 645, 134, 85, 748, 153, 22,
	724, 80, 48, 646, 301, 647, 270, 782, 648, 446,
	649, 175, 244, 511, 78, 176, 755, 650, 756, 263,
	427, 12, 517, 35, 285, 284, 272, 73, 72, 259,
	260, 261, 141, 76, 482, 651, 264, 162, 267, 144,
	132, 258, 11, 150, 37, 16, 83, 86, 479, 480,
	481, 63, 140, 621, 161, 19, 652, 447, 155, -428,
	744, -350, -350, 312, 353, 35, 101, -454, -455, -456,
	621, 446, 267, -332, -219, -111, 734, 245, -112, 740,
	41, 252, 146, 38, -161, 428, -149, 193, 762, 745,
	746, 747, 744, 425, 752, 750, 748, 312, 749, 96,
	153, 155, 156, 4, -174, 173, -229, -230, 172, 166,
	167, 168, 169, 170, 171, 178, 177, 157, 159, 174,
	-280, 154, 179, 180, 181, 182, 183, 184, 185, 187,
	186, 188, 189, 175, 176, 192, 239, 240, -182, -182,
	-182, -182, -249, -255, -254, -459, -251, -428, -331, -338,
	-459, -459, -182, -314, -459, -179, -459, -459, -459, -459,
	-459, -258, -174, -459, -459, -463, -459, -463, -463, -463,
	-369, -459, -369, -369, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, 237,
	-459, -459, -459, -459, -459, -369, -369, -369, -369, -369,
	-369, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, 98, 112, 108, 111, 103,
	114, 98, 98, 98, 98, -34, -35, -239, 63, -459,
	-349, -441, -442, -222, -219, -459, 329, -332, -332, 298,
	105, -268, -37, -34, -263, -269, -265, -34, -105, -147,
	-160, 69, 70, -159, -162, 27, 44, 74, 76, 99,
	72, 73, 71, 41, -460, 97, -460, -287, -460, -171,
	-326, -155, -164, 265, 273, 272, 150, -431, -172, 153,
	316, 96, -42, -290, 115, -242, -247, -245, 755, 678,
	708, 678, 708, 67, 49, 98, 98, 96, 96, 25,
	-264, -266, -174, 18, -336, 4, -335, 28, -332, 98,
	237, 18, -220, 32, -219, -316, -316, 96, 100, 344,
	-305, -307, 444, 446, 166, -337, -332, 98, 34, 97,
	96, -219, -358, -361, -363, -362, -364, -359, -360, 373,
	374, 193, 377, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 390, 402, 35, 288, 369, 370, 371, 372,
	391, 392, 393, 394, 396, 397, 398, 399, 354, 375,
	619, 355, 356, 357, 358, 359, 360, 362, 363, 366,
	364, 365, 367, 368, -333, -332, 95, 97, 96, -368,
	95, -174, -32, 97, 96, -391, -391, -391, 296, 23,
	-52, -49, -417, 22, -48, -49, 246, 135, 136, 243,
	95, -380, 95, -389, -333, -332, 95, 151, 270, 150,
	-388, -385, -388, -389, -332, -251, -332, 151, 151, -332,
	-332, -301, -332, -301, -301, 41, -301, 41, -301, 41,
	105, -332, -301, 41, -301, 41, -301, 41, -301, 41,
	-301, 41, 34, 87, 88, 89, 34, 91, 92, 93,
	-251, -332, -332, -251, -380, -251, -219, -332, -308, 105,
	105, 105, -391, -391, 105, 98, 98, 98, -391, -391,
	105, 98, -340, -338, 98, 98, -433, 281, 326, 328,
	105, 105, 105, 105, 34, 98, -434, 34, 769, 768,
	770, 771, 772, 98, 105, 34, 105, 34, 105, -332,
	95, -219, -171, 241, 243, 246, 85, 98, 334, 332,
	333, 330, 335, 336, 337, 166, 50, 96, 267, 264,
	-332, -322, 269, -322, -322, -332, -339, -338, -330, -219,
	267, 410, 98, -174, -387, 18, 177, -343, -343, -320,
	-219, -387, -343, -320, -219, -320, -320, -320, -320, -343,
	-343, -343, -320, -338, -338, -219, -219, -219, -219, -219,
	-219, -219, -350, -321, -320, 744, 98, -313, 18, 85,
	-350, -350, -329, 26, 26, 96, 350, 447, 448, -348,
	347, -107, -332, 98, -13, -32, -21, -20, -22, 166,
	-13, 96, 621, -212, -219, 744, 744, 744, 744, 744,
	744, -174, -174, -174, -174, 645, -237, -452, 157, 132,
	133, 130, 131, -191, 42, 43, 41, -174, -238, -244,
	-249, 115, 177, 159, 174, -280, -179, -182, -179, -179,
	-179, -179, -179, -179, 236, -179, 236, -179, -179, -179,
	-179, -179, -179, -351, -332, 98, 193, -187, -186, 114,
	-450, -187, 618, 96, -254, 237, -174, -174, -428, -145,
	484, 485, 486, 487, 489, 490, 491, 494, 495, 499,
	500, 483, 501, 488, 493, 496, 497, 498, 492, 372,
	-174, -240, -239, -240, -174, -174, -256, -257, 161, -251,
	-174, -460, -460, 105, 184, -153, 27, 44, -153, -153,
	-153, -153, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -153, -174, -146, 483, 501, 488, 493, 496,
	497, 498, 492, 372, 502, 503, 504, 505, 506, 507,
	508, 509, 510, -146, -145, -174, -174, -174, -174, -174,
	-174, -174, -174, -113, -174, 142, 143, 144, -239, -174,
	-179, -174, -174, -174, -460, -174, -174, -174, -240, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -427, -426, -425, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -239, -239, -239, -239, -239, -174, -460, -174, -193,
	-177, 105, -295, 114, -174, -174, -174, -174, -174, -174,
	-240, -334, -339, -330, -331, -239, -240, -240, -239, -239,
	-174, -174, -174, -174, -174, -174, -174, -174, -460, -174,
	-174, -174, -174, -174, -287, -460, -239, 96, -443, 446,
	447, 742, -341, 301, -340, 28, -240, 98, 18, -298,
	86, -332, -268, -268, 69, 70, 65, -157, -158, -162,
	-460, 305, -166, 318, 264, -163, -171, -332, 265, 265,
	265, -323, 269, 511, 166, -41, 28, 96, -459, 671,
	671, 68, 98, -370, -308, 400, 401, 193, -296, -174,
	-174, 96, -267, 30, 31, -219, -335, 184, -339, -219,
	-300, 301, -219, -197, -199, -200, -201, -222, -250, -459,
	-202, -34, 641, 638, 18, -212, -213, -221, -338, -306,
	-352, -305, 96, 445, 447, 448, 85, 134, -174, -371,
	192, -399, -398, -397, -380, -382, -383, -384, 97, -371,
	-376, 407, 406, -368, -368, -368, -368, -368, -368, -370,
	-370, -370, -368, 95, -368, 95, -368, -368, -368, -368,
	-373, 95, -373, -373, -374, -373, 95, -374, -375, 95,
	-375, -410, -174, -407, -406, -404, -405, 274, 110, 718,
	670, 621, 662, 704, 86, -402, -267, 105, -460, -108,
	621, -332, 100, 98, 100, 98, 100, 98, -138, -77,
	-1, 781, 782, 783, 96, 23, -381, -380, -76, 326,
	-413, -414, 301, -409, -403, -389, 151, -388, -389, -389,
	-332, 96, 32, 139, 139, 139, 139, 621, 243, 35,
	-324, 661, 157, 718, 670, -380, -76, 267, 267, -351,
	-351, -351, 98, 98, -319, 777, -212, -166, 307, 307,
	264, 320, 264, 320, -219, 331, 334, 332, 333, 330,
	335, 336, 337, 338, 41, 41, 41, 41, 41, 41,
	41, 319, 321, 323, 309, -219, -219, -322, 85, -214,
	-219, 29, -338, -219, 98, 98, -219, -320, -320, -219,
	-320, -320, -219, 98, -338, -456, 351, -332, 387, 735,
	737, -149, 446, 96, 621, 26, -150, 26, -459, -452,
	132, 133, -249, -249, -249, -238, -179, -182, -179, 156,
	289, -179, -179, -459, -251, -460, -334, 28, 96, 86,
	-460, 182, 96, -460, -460, 96, 18, 96, -259, -257,
	163, -174, -460, 96, -460, -460, -239, -174, -174, -174,
	-174, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -239, -460, 96, 96, 18, -355, 28, -460, -460,
	-460, -460, 96, -460, -460, -258, -460, 18, -460, 86,
	96, 177, 96, -460, -460, -460, 96, 96, -460, -460,
	96, -460, 96, -460, -460, -460, -460, -460, -460, 96,
	-460, 96, -460, -460, -460, 96, -460, 96, -460, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, -460, -460, 96, -460,
	96, -460, 96, -460, -460, 96, -460, 96, -460, 96,
	-460, 96, 96, -460, 96, 96, 96, -460, 96, 96,
	96, 96, -460, -460, -460, -460, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, -460, -460, -460, -460,
	-460, -460, 96, -120, 646, -460, -460, 96, -460, 96,
	96, 96, 96, 96, -460, -459, 237, -460, -460, -460,
	-460, -460, 96, 96, 96, 96, 96, 96, -460, -460,
	-460, 96, 96, -460, 96, -460, 96, -460, -442, 741,
	447, -226, -225, -223, 83, 268, 84, -459, -340, -460,
	-187, -295, -297, -295, -232, -332, 105, 114, -270, -196,
	96, -198, 18, -323, 266, 325, -323, -171, -166, -408,
	-405, -332, -332, -332, -338, 157, -173, 478, -168, 98,
	100, -249, -247, -460, -370, -275, -281, -317, -332, 98,
	193, -372, 193, -372, 400, 401, -266, 237, -227, 19,
	-231, 35, -315, -32, -459, 66, 63, -459, 35, 96,
	-215, -217, -216, -218, 75, 79, 81, 76, 77, 78,
	82, -346, 28, -34, -197, -34, -459, -219, -212, -461,
	18, 86, -461, 96, 237, -307, -310, 449, 446, 452,
	-428, 98, -137, 96, -397, -384, -271, -167, 46, -377,
	408, -370, 629, -370, -370, -379, 98, -379, 105, 105,
	105, 97, -55, -50, -51, 36, 90, -404, -391, 98,
	45, -391, -391, -332, 97, -267, -109, 315, 741, -2,
	780, 786, 151, 95, 413, 22, -289, 96, 97, -252,
	327, 97, -139, -332, 97, 95, -389, -389, -332, -459,
	264, 34, 34, 718, 670, 661, -76, -252, -251, -332,
	-371, 779, 778, 97, 266, -219, -219, -219, -219, -219,
	-219, 246, 243, 436, -451, 339, 98, -451, 310, 267,
	-212, -219, 96, -110, 283, 278, -343, -343, 36, -219,
	446, 753, 751, -174, 156, 289, -191, -182, -145, -145,
	-179, -353, 193, 373, 288, 371, 367, 387, 378, 406,
	369, 407, 364, 363, 362, -353, -351, -179, -239, -174,
	-174, -174, 165, -174, 162, -174, -121, -120, -460, -460,
	-460, -460, -460, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -263, -174, -174, -174, -460, 193, 373,
	-121, -174, 18, -174, -351, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-425, -174, -239, -174, -239, -174, -174, -174, -174, -174,
	-426, -426, -426, -426, -426, -239, -239, -239, -239, -174,
	-459, -332, -124, -123, -122, 697, 268, -120, -193, -124,
	-193, 236, -174, 236, 236, 236, -174, -240, -334, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -223,
	-385, 307, -385, 307, -385, -301, 96, -312, 26, 18,
	63, 63, -196, -227, -158, -197, -219, -219, -165, 316,
	324, -219, -166, 266, 85, -408, -408, -408, 29, 95,
	-169, 101, -278, 734, -284, 52, -282, -283, 53, -279,
	54, 62, -372, -372, 184, -268, -174, -302, 85, -303,
	-311, -251, -243, -246, -244, -459, -288, -460, -332, -301,
	-303, -199, -200, -200, -199, -200, 75, 75, 75, 80,
	75, 80, 75, -216, -338, -460, -174, -341, 86, -197,
	-197, -221, -338, 184, 446, 450, 451, -397, -449, 130,
	157, 34, 85, 404, 110, -447, 192, 658, 713, 718,
	670, 662, 704, -448, 270, 150, 151, 282, 28, 47,
	97, 96, 97, 96, 97, 97, 96, -325, -324, -51,
	-50, -391, -391, 105, -428, 98, 98, 275, -140, 784,
	105, 95, -3, 90, -174, 95, 23, -380, -251, -415,
	-365, -416, -366, -367, -5, -6, -392, -143, 63, 110,
	-80, 50, 265, 764, 765, 139, -459, 777, -407, -289,
	-411, -413, -219, -178, -459, -190, -176, -175, -177, -183,
	182, 183, 288, 369, 370, -252, -219, -430, 86, 307,
	404, 307, 404, 98, -453, 340, 98, -453, -219, -110,
	-55, -219, -320, -320, 36, -428, -460, -191, -182, -152,
	177, 621, -356, 628, -368, -368, -368, -375, -368, 359,
	-368, 359, -368, -460, -460, -460, 96, -460, 26, -460,
	96, -174, 96, -121, -121, -121, -121, -121, -148, 517,
	96, 96, -460, 95, 95, -460, -174, -460, -460, -460,
	96, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, -460, 96, -460, -460,
	-460, 96, -460, 96, -460, 96, -460, -460, -460, 96,
	-354, 719, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -119, -333, -120, 679, 679, -460, -120,
	-260, 96, -179, -460, -179, -179, -179, -460, -460, -460,
	96, -460, 96, 96, -460, 96, -460, 96, -460, -460,
	-460, -460, 96, -224, 26, -459, -224, -459, -224, -460,
	-295, -219, -227, -261, 20, -459, 266, -219, -219, 85,
	85, 85, 97, -275, 57, 379, -286, -285, 61, 53,
	-283, 23, 55, 23, 33, -302, 96, 166, -345, 96,
	28, -460, -460, 96, -315, 63, 237, -460, -227, -210,
	-209, 85, 86, -211, 85, -209, 75, 75, -290, 96,
	-300, -197, -227, -227, 237, 130, -459, -178, 16, 98,
	98, -428, -446, 768, 769, 34, 770, 105, -391, -391,
	151, 151, -219, 95, -370, 98, -370, 105, 105, 34,
	91, 92, 93, 34, 87, 88, 89, 317, -412, 95,
	23, -174, 95, 166, 97, -289, -289, 303, 177, -391,
	762, 309, 309, -391, -391, -391, -142, -141, 784, 97,
	-460, 96, -378, 621, 624, -174, -184, -184, -290, -424,
	621, -429, -332, -332, -332, -332, 105, 107, -460, 619,
	82, 622, -460, -370, -174, -174, -174, -174, -268, 98,
	-174, -174, 105, 105, -121, -460, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -239, -174, -460, -207,
	-206, -208, 745, 130, 34, -353, -460, -241, 301, -127,
	-126, -125, 18, -460, -174, -145, -145, -145, -145, -174,
	-174, -174, -174, -174, -174, -459, 75, 22, 20, -292,
	-332, 270, -459, -292, -459, -341, -261, -262, 21, 23,
	-421, -420, -418, -419, 177, 725, 724, -219, -219, -219,
	-219, -276, 59, -274, 58, -274, -285, 23, 23, 98,
	23, 98, 151, -311, -174, -246, -340, -315, -32, -332,
	-243, -332, -263, -174, 95, -174, -187, -227, -227, -174,
	-234, 541, 543, 544, 545, 542, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 546, 557, 518, 519,
	520, 117, 119, 118, 127, 128, 521, 522, 523, 373,
	569, 570, 564, 567, 568, 566, 565, 388, 389, 524,
	587, 588, 592, 591, 589, 590, 593, 596, 597, 598,
	599, 600, 601, 603, 602, 594, 595, 572, 571, 573,
	574, 575, 576, 577, 578, 580, 579, 581, 582, 583,
	584, 585, 586, 604, 605, 606, 607, 608, 610, 609,
	614, 613, 611, 612, 616, 615, 525, 526, 120, 121,
	122, 123, 124, 125, 126, 527, 530, 528, 531, 532,
	533, 538, 539, 534, 535, 536, 537, 540, 399, 397,
	398, 394, 393, 392, 465, 470, 471, 473, 558, 559,
	560, 561, 562, 563, 726, 727, 728, 729, 730, 731,
	732, 733, 98, 98, 95, -174, 97, 97, -411, -77,
	97, -291, -289, 105, 97, 304, -244, -459, 98, -391,
	-391, -391, 105, 105, -340, -460, 96, -332, -448, -413,
	625, 625, -460, 28, -423, -422, -334, 95, 86, 68,
	620, 623, -460, -460, -460, 96, -460, -460, -460, 97,
	97, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, 96, -460, -206, -208, -460, 85, -187,
	-263, 23, -124, 326, 328, -124, -460, -460, -460, -460,
	-460, 96, -460, -460, 96, -460, 96, -460, -460, -292,
	-460, 23, 23, 96, -460, -292, -460, -292, -226, -262,
	-134, -133, -132, 652, -174, -239, -460, 96, -332, -277,
	60, 85, 134, 98, 98, 98, 16, -459, -243, 237,
	-345, -268, -289, -204, 413, -263, -460, -289, 97, 97,
	786, 151, 97, -244, -151, -459, 300, -340, 98, 98,
	-141, -144, -32, 96, 166, -289, -219, 68, -174, -239,
	-460, 85, 633, 745, -118, -117, -114, 756, 782, -239,
	-120, -120, -174, -174, -174, -460, -332, 270, -460, -460,
	-134, 96, -131, -130, -332, -357, 621, -81, -82, -83,
	-8, 342, 269, 253, 284, -418, -358, 85, 134, -303,
	-289, -345, -332, 97, -460, -459, -268, 97, -272, 95,
	-3, 300, -365, -416, -366, -367, -5, -6, -392, -108,
	-422, -396, -338, -334, 98, 105, 97, 621, -460, -460,
	-116, 159, 754, 716, -183, 236, -460, 96, -460, 96,
	-460, 96, -132, 96, 28, 626, 787, -84, -85, -83,
	-82, -174, -289, -59, -332, 256, 257, 258, -65, -63,
	-64, 260, -332, -460, -341, -205, -203, -332, 676, -439,
	-438, 617, -449, -445, 130, 157, 110, -447, 713, 718,
	670, 140, 141, -174, 95, -460, 237, -430, 622, -116,
	755, 690, 664, 690, 664, -179, -174, -174, -174, -130,
	-459, 165, -83, 162, -358, 255, 262, -66, -67, 35,
	-170, 66, -460, 96, 26, -358, -79, 687, -436, -437,
	85, -440, 419, 686, 707, 130, 98, 105, 97, -289,
	-339, -424, 623, 156, -145, -460, 96, -460, 96, -460,
	-119, -85, -273, 34, 26, 26, -68, -69, 453, 454,
	455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	-68, 98, -203, 683, -371, -187, -437, 85, -436, 85,
	17, 16, -4, 785, 97, -116, 690, 664, -174, -174,
	-460, -89, -88, -87, 164, -459, -178, -60, -61, -62,
	-64, 261, 157, 259, 105, -63, -62, 166, -78, 29,
	-204, -435, 283, 278, 281, 35, -435, 105, -4, -460,
	-460, -86, 163, -87, -174, -174, -82, 96, 254, -183,
	687, 277, 34, 130, 165, -85, 162, -460, -61, -187,
	269, -85, -207, -206, -206,
}

var yyDef = [...]int{
	960, -2, 1, 2, -2, 962, 960, 4, 5, 7,
	8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 131, 133, 134, 960, 960,
	960, 0, 960, 0, 192, 0, 1021, -2, -2, 960,
	1739, 0, 960, 0, 955, 0, -2, 875, 881, 0,
	890, -2, 0, 0, 960, 960, 2416, 2416, 955, 0,
	0, 0, 0, 0, 960, 960, 960, 960, 1744, 1573,
	111, 960, 0, 149, 150, 960, 910, 911, 912, 126,
	0, 2414, 146, 960, 961, 3, 132, 136, 0, 0,
	0, 119, 1582, 0, 139, 0, 0, 964, 0, 0,
	1722, 960, 960, 0, 190, 191, 0, 0, 0, 0,
	0, 195, -2, 227, 228, 229, 0, 234, 679, 596,
	648, 594, 633, -2, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 471, 471,
	0, 0, -2, 582, 582, 582, 1724, 0, 0, 0,
	630, 533, 471, 471, 471, 0, 471, 471, 471, 471,
	0, 0, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 1600,
	233, 1740, 1737, 1738, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 0, 1716, 0, 793,
	1064, 0, 956, 957, 0, 864, 864, 0, 864, 864,
	864, 864, 0, 0, 0, 807, 0, 0, 0, 0,
	861, 0, 823, 824, 0, 861, 0, 830, 867, 0,
	0, 837, 864, 864, 840, 2417, 0, 2417, 2417, 0,
	0, 1707, 0, 858, 856, 870, 871, 103, 874, 877,
	878, 879, 880, 883, 0, 894, 897, 1733, 1734, 0,
	899, 904, 923, 924, 0, 106, 1224, 0, 1088, 0,
	1099, -2, 1110, 1127, 1128, 1129, 1130, 1131, 1133, 1134,
	1135, 0, 0, 0, 0, 1140, 1141, 0, 0, 0,
	0, 0, 1204, 0, 0, 0, 0, 2127, 1544, 0,
	0, 1506, 1506, 1240, 1506, 1506, 1508, 1508, 1508, 1971,
	2118, 2128, 2316, 1926, 1932, 1933, 1934, 2261, 2262, 2263,
	2264, 2360, 2361, 2365, 2038, 1921, 2331, 2332, 0, 2413,
	2078, 2086, 2087, 2063, 2072, 2111, 2218, 2343, 1945, 2106,
	2180, 2034, 2058, 2059, 2199, 2200, 2082, 2083, 2062, 2267,
	2269, 2285, 2286, 2271, 2273, 2282, 2288, 2293, 2272, 2284,
	2289, 2302, 2306, 2309, 2310, 2311, 2279, 2277, 2290, 2294,
	2296, 2298, 2304, 2307, 2280, 2278, 2291, 2295, 2297, 2299,
	2305, 2308, 2266, 2270, 2274, 2283, 2301, 2281, 2300, 2275,
	2287, 2292, 2303, 2276, 2268, 2076, 2079, 2066, 2067, 2069,
	2071, 2077, 2084, 2090, 2068, 2089, 2088, 0, 2064, 2065,
	2070, 2081, 2085, 2073, 2074, 2075, 2080, 2091, 2134, 2133,
	2132, 2179, 2102, 2178, 0, 0, 0, 0, 0, 1915,
	1978, 1979, 2313, 1428, 1429, 1430, 1431, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 1557, 1558, 105, 1223,
	1703, 1508, 1508, 1508, 1508, 1508, 1508, 1162, 1163, 1164,
	1165, 1166, 1192, 1193, 1199, 1200, 2194, 2195, 2196, 2197,
	2016, 2354, 2025, 2026, 2175, 2176, 2040, 2041, 2387, 2388,
	-2, -2, -2, 302, 303, 304, 305, 306, 307, 308,
	309, 0, 1977, 2329, 2330, 298, 0, 1701, 1702, 365,
	362, 363, 364, 1206, 1207, 318, 319, 320, 321, 322,
	323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
	333, 334, 335, 336, 337, 338, 339, 340, 341, 342,
	343, 344, 345, 346, 347, 348, 349, 350, 351, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 367, 368,
	2416, 0, 933, 0, 0, 0, 0, 0, 0, 1745,
	1746, 1582, 0, 1574, 1573, 124, 0, 960, -2, 0,
	0, 0, 0, -2, 108, 0, 113, 1021, 0, 963,
	138, 137, 1633, 1636, 0, 0, 0, 1643, 1645, 1646,
	1647, 102, 120, 1583, 128, 130, 1584, 0, 965, 966,
	0, 997, 1001, 0, 0, 0, 1723, 1722, 1722, 166,
	0, 0, 167, 187, 188, 189, 0, 0, 173, 174,
	1709, 1710, 104, 0, 0, 245, 246, 0, 1180, 498,
	0, 241, 0, 491, 430, 0, 0, 0, 1025, 230,
	231, 232, 471, 471, 471, 645, 0, 0, 233, 233,
	603, 604, 605, 0, 0, -2, 496, 0, 583, 0,
	0, 485, 485, 489, 487, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 622, 0, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 740, 0, 472, 0,
	643, 644, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 1726, 0, 620, 621, 0, 0, 0, 471,
	471, 0, 0, 0, 0, 471, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 1623, 0, 0, 222,
	223, 1601, 0, -2, 0, 784, 0, 0, 0, 1718,
	1718, 1718, 0, 1717, 792, 0, 0, 0, 797, 0,
	0, 798, 0, 861, 861, 859, 860, 800, 801, 802,
	803, 864, 0, 0, 480, 481, 482, 861, 864, 0,
	864, 864, 864, 864, 861, 861, 861, 864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2417, 867, 864,
	0, 831, 0, 832, 833, 834, 835, 838, 839, 841,
	2418, 2419, 1735, 1736, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 2417,
	2417, 845, 849, 853, 851, 1708, 876, 882, 884, 885,
	0, 0, 895, 898, 917, 110, 2024, 903, 110, 905,
	906, 907, 908, 909, 935, 936, 941, 0, 0, 0,
	0, 947, 948, 949, 0, 0, 952, 953, 954, 0,
	0, 0, 0, 0, 1086, 0, 0, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1111, 1112, 0, 0, 0, 1136, 1137,
	1138, 1139, 1142, 0, 1153, 0, 1155, 1553, -2, 0,
	0, 0, 1147, 1148, 0, 0, 0, 1728, 1728, 0,
	0, 0, 1545, 0, 0, 1238, 0, 1239, 1241, 1242,
	1243, 0, 1244, 1245, 970, 970, 970, 970, 970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 1728, 1728, 0, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 310, 311, 312, 313,
	314, 369, 315, 316, 317, 1223, 0, 0, 960, 0,
	107, 925, 926, 0, 1047, 1728, 0, 0, 976, 0,
	1743, 118, 127, 129, 1582, 122, 1582, 0, 980, 0,
	0, -2, -2, 981, 982, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 115, 2415, 116, 0, 135, 1605,
	0, 1600, 1623, 0, 0, 0, 0, 1720, 1624, 0,
	0, 0, 109, 0, 140, 141, 1691, 1695, 0, 1634,
	0, 1637, 0, 0, 0, 444, 1641, 0, 0, 0,
	1575, 1576, 1579, 0, 998, 2124, 1002, 0, 1004, 1005,
	0, 0, 164, 0, 1063, 0, 0, 0, 175, 0,
	177, 178, 0, 0, 0, 455, 1711, 1712, 1713, -2,
	478, 0, 455, 439, 377, 378, 379, 430, 381, 430,
	430, 430, 430, 430, 444, 444, 444, 430, 413, 414,
	415, 416, 0, 430, 0, 398, 430, 430, 430, 430,
	420, 421, 422, 423, 424, 425, 426, 427, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 432, 432, 432,
	432, 432, 436, 436, 0, 1181, 0, 459, 0, 1579,
	0, 0, 1609, 1022, 0, 0, 0, 0, 646, 690,
	597, 634, 647, 0, 600, 601, -2, 0, 0, 582,
	0, 584, 0, 479, 0, -2, 0, 489, 0, 485,
	489, 486, 489, 477, 490, 624, 625, 626, 0, 628,
	629, 720, 1033, 0, 0, 0, 0, 0, 726, 727,
	728, 0, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 635, 636, 637, 638, 639, 640, 641, 642,
	0, 0, 0, 0, 584, 0, 631, 0, 0, 535,
	536, 537, 0, 0, 540, 541, 542, 543, 0, 0,
	546, 547, 548, 1050, 1051, 549, 550, 575, 576, 577,
	551, 552, 553, 554, 555, 556, 557, 569, 570, 571,
	572, 573, 574, 558, 559, 560, 561, 562, 563, 566,
	0, 215, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 0, 0, 0, 979, 1065, 1741, 1742, 794,
	0, 0, 865, 866, 0, 483, 484, 864, 864, 804,
	846, 0, 864, 808, 847, 809, 811, 810, 812, 825,
	826, 864, 815, 862, 863, 816, 817, 818, 819, 820,
	821, 822, 842, 827, 828, 829, 868, 0, 872, 873,
	843, 844, 0, 854, 0, 0, 0, 888, 889, 0,
	896, 920, 918, 919, 921, 913, 914, 915, 916, 0,
	922, 0, 0, 938, 160, 943, 944, 945, 946, 958,
	951, 1225, 1083, 1084, 1085, 0, 1087, 1093, 0, 1208,
	1210, 1091, 1092, 1095, 0, 0, 0, 1089, 1100, 1220,
	1221, 1222, 0, 0, 0, 0, 0, 1104, 1108, 1113,
	1114, 1115, 1116, 1117, 0, 1118, 0, 1121, 1122, 1123,
	1124, 1125, 1126, 1132, 1521, 1522, 1523, 1151, 370, 371,
	0, 1152, 0, 0, 0, 0, 0, 0, 0, 0,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1224, 0, 1729, 0, 0, 0, 1551, 1548, 0, 0,
	0, 1507, 1509, 0, 0, 0, 971, 972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 0, 0, 1524, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 1157, 1158, 1159, 0, 0,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1432, 1433, 1434, 1435, 0, 0, 0, 0, 0, 0,
	0, 1555, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1457, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 928, 929,
	931, 0, 1067, 0, 1048, 0, 0, 934, 0, 975,
	0, 978, 121, 123, 984, 985, 0, 1006, 995, 983,
	117, 1720, 0, 0, 1720, 1623, 1605, 1730, 0, 0,
	0, 0, 0, 196, 0, 112, 0, 0, 0, 1635,
	1638, 1639, 444, 1666, 0, 453, 453, 450, 1644, 1585,
	1586, 0, 1578, 1580, 1581, 142, 1003, 999, 0, 1081,
	0, 0, 1062, 0, 1009, 1011, 1012, 1013, 1045, 0,
	1016, 1017, 0, 0, 0, 0, 0, 162, 1064, 168,
	0, 176, 0, 0, 181, 182, 169, 170, 171, 172,
	0, 679, -2, 530, 247, 249, 250, 251, 242, -2,
	442, 440, 441, 380, 444, 444, 406, 407, 444, 409,
	410, 411, 412, 0, 418, 0, 399, 400, 401, 402,
	391, 0, 392, 393, 394, 434, 0, 395, 396, 0,
	397, 497, 0, 1587, 460, 461, 463, 471, 0, 466,
	467, 0, 471, 471, 0, 492, 493, 0, 1579, 194,
	1611, 1026, 235, 236, 237, 238, 239, 240, 715, 0,
	0, 691, 713, 714, 233, 0, 0, 243, 586, 585,
	0, 747, 0, 495, 0, 0, 489, 489, 474, 475,
	627, 0, 0, 722, 723, 724, 725, 0, 0, 0,
	613, 524, 0, 614, 615, 584, 586, 0, 0, 455,
	538, 539, 544, 545, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 663, 665, 668, 670,
	588, 674, 676, 0, 664, 667, 669, 671, 588, 675,
	677, 1602, 1603, 1604, 0, 0, 785, 0, 0, 521,
	158, 1719, 790, 791, 795, 796, 861, 814, 848, 861,
	806, 813, 836, 850, 852, 886, 887, 892, 900, 901,
	902, 942, 0, 0, 0, 0, 950, 0, 0, 1094,
	1209, 1211, 1096, 1097, 1098, 1101, 0, 1105, 1109, 0,
	0, 0, 0, 0, 1156, 1154, 1555, 0, 0, 0,
	1205, 0, 0, 1228, 1229, 0, 0, 0, 0, 1549,
	0, 0, 1236, 0, 1510, 1186, 0, 0, 0, 0,
	0, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
	1186, 1573, 1263, 0, 0, 0, 0, 0, 1268, 1269,
	1270, 1186, 0, 1273, 1274, 0, 1276, 0, 1277, 0,
	0, 0, 0, 1284, 1285, 1287, 0, 0, 1290, 1291,
	0, 1293, 0, 1295, 1296, 1297, 1298, 1299, 1300, 0,
	1302, 0, 1304, 1305, 1306, 0, 1308, 0, 1310, 1311,
	0, 1313, 0, 1315, 0, 1318, 0, 1321, 0, 1324,
	0, 1327, 0, 1330, 0, 1333, 0, 1336, 0, 1339,
	0, 1342, 0, 1345, 0, 1348, 0, 1351, 0, 1354,
	0, 1357, 0, 1360, 0, 1363, 1364, 1365, 0, 1367,
	0, 1369, 0, 1372, 1373, 0, 1375, 0, 1378, 0,
	1381, 0, 0, 1382, 0, 0, 0, 1386, 0, 0,
	0, 0, 1395, 1396, 1397, 1398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 1410, 1411, 1412,
	1413, 1414, 0, 1416, 0, 1187, 0, 0, 1187, 0,
	0, 0, 0, 0, 1226, 1728, 0, 1511, 1512, 1513,
	1514, 1515, 0, 0, 0, 0, 0, 0, 1455, 1456,
	1458, 0, 0, 1461, 0, 1463, 0, 1700, 927, 930,
	932, 1019, 1068, 1069, 0, 0, 0, 0, 1049, 1727,
	973, 974, 977, 1027, 0, 1559, 0, 0, 1006, 1081,
	0, 1007, 0, 0, 0, 0, 0, 1605, 0, 0,
	1731, 1730, 1730, 1730, 220, 0, 1625, 1626, 1631, 1629,
	1630, 114, 1692, 1696, 1648, 1642, 1660, 1673, 453, 453,
	447, 448, 454, 449, 451, 452, 1577, 0, 1582, 0,
	1689, 0, 0, 1676, 0, 1680, -2, 0, 0, 0,
	0, 0, 0, 0, 1052, 0, 0, 1055, 0, 0,
	0, 0, 1046, 1017, 0, 1018, 0, -2, 0, 0,
	156, 157, 0, 0, 0, 179, 180, 0, 0, 186,
	456, 457, 224, 233, 532, 248, 505, 0, 0, 376,
	443, 403, 404, 405, 408, 0, 428, 0, 0, 0,
	0, 526, 193, 1591, 1590, 471, 471, 462, 0, 465,
	0, 0, 0, 1732, 431, 494, 0, 1612, 1613, 685,
	0, 0, 692, 0, 0, 0, 595, 0, 606, 607,
	0, 719, -2, 781, 459, 0, 473, 476, 1034, 0,
	0, 608, 0, 611, 612, 525, 586, 617, 618, 632,
	619, 567, 568, 565, 0, 197, 653, 655, 659, 654,
	658, 0, 0, 0, 590, 0, 678, 590, 651, 0,
	521, 1587, 0, 789, 522, 523, 864, 864, 937, 161,
	0, 940, 0, 0, 0, 0, 1102, 1106, 1119, 1120,
	1516, 1542, 430, 430, 1529, 430, 436, 1532, 430, 1534,
	430, 1537, 430, 1540, 1541, 0, 0, 1149, 0, 0,
	0, 0, 1235, 1552, 0, 0, 1246, 1185, 1186, 1186,
	1186, 1186, 1186, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1546, 0, 0, 0, 1267, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 209, 0, 0, 0, 0, 0, 0, 1466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 1184, 0, 1188, 1189, 0, 0, 1418, 0, 0,
	1436, 0, 0, 0, 0, 0, 0, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1070,
	1077, 0, 1077, 0, 1077, 0, 0, 0, 1714, 1715,
	1560, 1561, 1081, 1562, 996, 1008, 0, 212, 1606, 1607,
	1608, 211, 0, 0, 0, 0, 0, 0, 1721, 0,
	1628, 1632, 1666, 0, 1659, 0, -2, 1668, 0, 0,
	0, 1674, 445, 446, 1000, 143, 1082, 147, 0, 1689,
	1704, 0, 1686, 1693, 1697, 0, 0, 0, 1682, 0,
	1081, 1010, 1041, 1043, 0, 1038, 1053, 1054, 1056, 0,
	1058, 0, 1060, 1061, 1021, 1015, 0, 164, 0, 1081,
	1081, 163, 0, 1066, 183, 184, 185, 531, 252, 257,
	0, 0, 0, 262, 0, 264, 0, 0, 0, 269,
	270, 471, 471, 506, 0, 373, 375, 0, 0, 255,
	444, 0, 444, 0, 435, 437, 0, 507, 527, 1588,
	1589, 0, 0, 464, 468, 469, 470, 0, 688, 0,
	716, 0, 0, 0, 0, 0, 0, 244, 587, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 0, 471,
	0, 0, 0, 471, 471, 471, 0, 773, 458, 0,
	0, 744, 741, 609, 0, 288, 289, 296, 297, 299,
	0, 0, 0, 0, 0, 616, 1021, 200, 0, 0,
	0, 0, 661, 666, 672, 0, 589, 673, 786, 787,
	788, 159, 799, 805, 939, 959, 1090, 1103, 1107, 0,
	0, 0, 0, 1543, 1527, 444, 1530, 1531, 1533, 1535,
	1536, 1538, 1539, 1145, 1146, 1150, 0, 1232, 0, 1234,
	0, 1550, 0, 1247, 1248, 1249, 1250, 1251, 1582, 0,
	0, 0, 1266, 0, 0, 1186, 0, 1279, 1278, 1280,
	0, 1282, 1283, 1288, 1289, 1292, 1294, 1301, 1303, 1307,
	1309, 1312, 1314, 1316, 0, 1319, 0, 1322, 0, 1325,
	0, 1328, 0, 1331, 0, 1334, 0, 1337, 0, 1340,
	0, 1343, 0, 1346, 0, 1349, 0, 1352, 0, 1355,
	0, 1358, 0, 1361, 0, 1366, 1368, 0, 1371, 1374,
	1376, 0, 1379, 0, 1383, 0, 1385, 1387, 1388, 0,
	0, 0, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1415, 0, 1178, 1417, 1190, 1191, 1196, 1420,
	0, 0, 0, 1423, 0, 0, 0, 1427, 1227, 1438,
	0, 1443, 0, 0, 1449, 0, 1453, 0, 1459, 1460,
	1462, 1464, 0, 0, 0, 0, 0, 0, 0, 1047,
	1028, 125, 1562, 1566, 0, -2, 0, 214, 216, 0,
	0, 0, 1627, 1653, 1651, 1651, 1661, 1662, 0, 0,
	1669, 0, 0, 0, 0, 148, 0, 0, 1675, 0,
	0, 1698, 0, 0, 0, 1681, 0, 165, 1573, 1035,
	1042, 0, 0, 1036, 0, 1037, 1057, 1059, 1014, 0,
	1081, 1081, 154, 155, 0, 258, 0, 260, 0, 263,
	265, 266, 267, 273, 274, 275, 276, 268, 0, 0,
	372, 374, 0, 0, 417, 429, 419, 0, 0, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1610, 680, 0,
	690, 0, 1023, 0, 683, 0, 598, 0, 0, 0,
	471, 471, 471, 0, 0, 0, 0, 758, 0, 0,
	721, 0, 729, 0, 0, 0, 300, 301, 0, 652,
	0, 198, 199, 0, 0, 657, 591, 592, 1143, 0,
	0, 0, 1144, 1528, 0, 0, 0, 0, 0, 1547,
	0, 0, 0, 0, 1272, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 710, 711, 0, 1467, 1183, 1573, 0, 1187,
	1197, 1198, 0, 1187, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	1029, 1030, 0, 0, 0, 1067, 1566, 1571, 0, 0,
	0, 1615, 1616, 0, 1620, 1621, 1622, 213, 217, 218,
	219, 1656, 0, 1649, 1652, 1650, 1663, 0, 0, 1670,
	0, 1672, 0, 1705, 1706, 1694, 1687, 0, 1679, 1684,
	1686, 1683, 1582, 1039, 0, 1044, 0, 1573, 153, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 272, 0, 0, 433, 438, 0, 0,
	681, 0, 1024, 693, 684, 0, 771, 0, 775, 0,
	0, 0, 778, 779, 780, 757, 0, 761, 499, 745,
	742, 743, 610, 0, 201, 202, 0, 0, 0, 1517,
	0, 1520, 1230, 1233, 1231, 0, 1262, 1264, 1265, 1525,
	1526, 1281, 1317, 1320, 1323, 1326, 1329, 1332, 1335, 1338,
	1341, 1344, 1347, 1350, 1353, 1356, 1359, 1362, 1370, 1377,
	1380, 1384, 1389, 0, 1392, 0, 0, 1393, 0, 712,
	1174, 0, 0, 1194, 1195, 0, 1422, 1424, 1425, 1426,
	1439, 0, 1444, 1445, 0, 1450, 0, 1454, 1465, 0,
	1072, 1079, 1080, 0, 1075, 0, 1076, 0, 1020, 1571,
	145, 1572, 1569, 0, 1567, 1564, 110, 1619, 0, 1640,
	0, 1654, 1655, 1664, 1665, 1671, 0, 0, 1686, 0,
	1678, 151, 0, 0, 0, 1582, 259, 0, 279, 689,
	0, 692, 682, 769, 770, 0, 782, 774, 776, 777,
	759, -2, 1609, 0, 0, 0, 660, 1518, 0, 0,
	1394, 0, 708, 709, 1182, 1175, 0, 1160, 1161, 1179,
	1419, 1421, 0, 0, 0, 1071, 1031, 1032, 1073, 1074,
	144, 0, 1568, 1202, 0, 1563, 0, 210, 89, 90,
	43, -2, 0, 0, 0, 1617, 1618, 1657, 1658, 1690,
	0, 1677, 1685, 1040, 1047, 0, 152, 512, 505, 0,
	0, 0, 762, 763, 764, 765, 766, 767, 768, 649,
	203, 204, 0, 579, 580, 581, 197, 0, 1237, 1390,
	1176, 0, 0, 0, 0, 0, 1440, 0, 1446, 0,
	1451, 0, 1570, 0, 0, 1565, 88, 0, -2, 93,
	0, 0, 0, 0, 1025, 67, 68, 69, 50, 74,
	75, 83, 77, 1688, 694, 0, 696, 0, -2, 500,
	513, 0, 253, 280, 281, 0, 0, 284, 0, 286,
	287, 277, 278, 0, 0, 783, 0, 200, 0, 0,
	1167, 1168, 1169, 1170, 1172, 0, 0, 0, 0, 1203,
	1180, 44, 94, 110, 85, 0, 0, 49, 51, 0,
	0, 84, 695, 0, 0, 455, 0, 705, 501, 502,
	0, 508, 509, 510, 511, 282, 283, 285, 717, 0,
	578, 656, 1519, 0, 0, 1441, 0, 1447, 0, 1452,
	0, -2, 46, 0, 0, 0, 52, 0, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	53, 76, 697, 698, 706, 0, 503, 0, 504, 0,
	0, 0, 686, 0, 717, 1177, 1171, 1173, 0, 0,
	1201, 95, 98, 100, 0, 0, 87, 110, 71, 78,
	79, 80, 0, 82, 72, 73, 48, 0, 0, 707,
	703, 514, 516, 517, 0, 0, 515, 718, 687, 1442,
	1448, 0, 110, 99, 0, 0, 47, 0, 81, 54,
	0, 518, 519, 520, 0, -2, 110, 86, 70, 699,
	45, -2, 700, 701, 702,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 187, 179, 3,
	95, 97, 184, 182, 96, 183, 237, 185, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 787,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 189, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 190,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 180,
	181, 186, 188, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 58083, 758, 58084, 759,
	58085, 760, 58086, 761, 58087, 762, 58088, 763, 58089, 764,
	58090, 765, 58091, 766, 58092, 767, 58093, 768, 58094, 769,
	58095, 770, 58096, 771, 58097, 772, 58098, 773, 58099, 774,
	58100, 775, 58101, 776, 58102, 777, 58103, 778, 58104, 779,
	58105, 780, 58106, 781, 58107, 782, 58108, 783, 58109, 784,
	58110, 785, 58111, 786, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			setParseTrees(yylex, yyDollar[1].statementsUnion())
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Statement
//line sql.y:682
		{
			yyLOCAL = []Statement{yyDollar[1].statementUnion()}
			resetTokenizer(yylex)
		}
		yyVAL.union = yyLOCAL
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yySLICE := (*[]Statement)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].statementUnion())
			resetTokenizer(yylex)
		}
	case 4:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if yyLOCAL == nil && yyDollar[1].strs != nil {
				yyLOCAL = &CommentOnly{Comments: yyDollar[1].strs}
			}
		}
		yyVAL.union = yyLOCAL
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Statement
//line sql.y:711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:717
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:758
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:762
		{
			yyLOCAL = &BeginEndStatement{Statements: yyDollar[2].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:766
		{
			yyLOCAL = &IfStatement{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion(), ElseIfBlocks: yyDollar[5].elseIfsUnion(), ElseStatements: yyDollar[6].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:770
		{
			yyDollar[3].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			yyLOCAL = &DeclareVar{VarNames: yyDollar[2].columnsUnion(), Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:775
		{
			yyLOCAL = &DeclareHandler{Action: yyDollar[2].handlerActionUnion(), Conditions: yyDollar[5].handlerConditionsUnion(), Statement: yyDollar[6].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:779
		{
			yyLOCAL = &DeclareCondition{Name: yyDollar[2].identifierCI, Condition: yyDollar[5].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:783
		{
			yyLOCAL = &Signal{Condition: yyDollar[2].handlerConditionUnion(), SetValues: yyDollar[3].signalSetsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*SignalSet
//line sql.y:788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yySLICE := (*[]*SignalSet)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].signalSetUnion())
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*SignalSet
//line sql.y:799
		{
			yyLOCAL = []*SignalSet{yyDollar[2].signalSetUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SignalSet
//line sql.y:805
		{
			yyLOCAL = &SignalSet{ConditionName: yyDollar[1].signalConditionNameUnion(), Value: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:811
		{
			yyLOCAL = ClassOriginType
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:815
		{
			yyLOCAL = SubclassOriginType
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:819
		{
			yyLOCAL = MessageTextType
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:823
		{
			yyLOCAL = MySQLErrNoType
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:827
		{
			yyLOCAL = ConstraintCatalogType
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:831
		{
			yyLOCAL = ConstraintSchemaType
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:835
		{
			yyLOCAL = ConstraintNameType
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:839
		{
			yyLOCAL = CatalogNameType
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:843
		{
			yyLOCAL = SchemaNameType
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:847
		{
			yyLOCAL = TableNameType
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:851
		{
			yyLOCAL = ColumnNameType
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:855
		{
			yyLOCAL = CursorNameType
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:861
		{
			yyLOCAL = ContinueAction
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:865
		{
			yyLOCAL = ExitAction
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:869
		{
			yyLOCAL = UndoAction
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yySLICE := (*[]HandlerCondition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].handlerConditionUnion())
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []HandlerCondition
//line sql.y:879
		{
			yyLOCAL = []HandlerCondition{yyDollar[1].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:885
		{
			yyLOCAL = &HandlerConditionErrorCode{ErrorCode: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:889
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:899
		{
			yyLOCAL = &HandlerConditionSQLState{SQLStateValue: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:905
		{
			yyLOCAL = &HandlerConditionNamed{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:911
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:915
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:919
		{
			yyLOCAL = &HandlerConditionSQLWarning{}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:923
		{
			yyLOCAL = &HandlerConditionNotFound{}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:927
		{
			yyLOCAL = &HandlerConditionSQLException{}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:932
		{
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:940
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:944
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[2].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:950
		{
			yyLOCAL = yyDollar[1].compoundStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:963
		{
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:969
		{
			yyLOCAL = &CompoundStatements{Statements: []CompoundStatement{yyDollar[1].compoundStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:973
		{
			yyDollar[1].compoundStatementsUnion().Statements = append(yyDollar[1].compoundStatementsUnion().Statements, yyDollar[2].compoundStatementUnion())
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:983
		{
			yyLOCAL = yyDollar[2].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:992
		{
			yyLOCAL = yyDollar[1].elseIfsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yySLICE := (*[]*ElseIfBlock)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].elseIfUnion())
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:1002
		{
			yyLOCAL = []*ElseIfBlock{yyDollar[1].elseIfUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ElseIfBlock
//line sql.y:1008
		{
			yyLOCAL = &ElseIfBlock{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1014
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1026
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1030
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1036
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1042
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:1048
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:1052
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:1057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:1061
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:1071
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:1077
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1083
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1087
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1091
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1114
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1120
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1125
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1131
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1138
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1144
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 125:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1155
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1161
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1165
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1169
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1173
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1177
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1183
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1187
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1192
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1196
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1202
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1206
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1211
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1217
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1223
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1230
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1234
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1240
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1246
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1254
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1258
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1262
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1268
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1280
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1292
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1296
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1302
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1308
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1312
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1316
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1320
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1325
		{
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1330
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1340
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1350
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1363
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1369
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1375
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1385
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1389
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1393
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1397
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1403
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), NoScope)
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1407
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1411
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1417
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1421
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1427
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1437
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1441
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1445
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.str = RepeatableReadStr
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = ReadCommittedStr
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = SerializableStr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1469
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1473
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1477
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1483
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1489
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1496
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1500
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1509
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1516
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1524
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1529
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1533
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1544
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1549
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1555
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1560
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1575
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1581
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1585
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 210:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1597
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Body: yyDollar[10].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1603
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1619
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1623
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1627
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1634
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1641
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1646
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1651
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1656
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1663
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1670
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1681
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1692
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1698
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1702
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1706
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1710
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1714
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1734
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1738
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1744
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1748
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1754
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1758
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1764
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1768
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1774
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1778
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1784
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1789
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1794
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1798
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1803
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1811
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1822
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1831
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1853
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1857
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1862
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1867
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1872
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1878
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1883
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1888
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1893
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1902
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1907
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1911
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1916
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1921
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1926
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1930
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1936
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1940
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1944
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1948
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1954
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1958
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1963
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1967
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1972
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1977
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1982
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1987
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1992
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1997
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2002
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2009
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2016
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2020
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2024
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2028
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2032
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2036
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2046
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2053
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2057
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2063
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2067
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2071
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2075
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2079
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2083
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2087
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2091
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2095
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2099
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2103
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2107
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2111
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2116
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2120
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2124
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = Armscii8Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = ASCIIStr
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = Big5Str
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = UBinaryStr
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = Cp1250Str
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = Cp1251Str
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = Cp1256Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = Cp1257Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = Cp850Str
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = Cp852Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = Cp866Str
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.str = Cp932Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = Dec8Str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = EucjpmsStr
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = EuckrStr
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = Gb18030Str
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.str = Gb2312Str
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = GbkStr
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = Geostd8Str
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = GreekStr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = HebrewStr
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = Hp8Str
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = Keybcs2Str
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = Koi8rStr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = Koi8uStr
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = Latin1Str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = Latin2Str
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = Latin5Str
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = Latin7Str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = MacceStr
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = MacromanStr
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = SjisStr
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = Swe7Str
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = Tis620Str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = Ucs2Str
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = UjisStr
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = Utf16Str
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.str = Utf16leStr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.str = Utf32Str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = Utf8mb3Str
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.str = Utf8mb4Str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.str = Utf8mb3Str
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2304
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2308
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2312
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2318
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2322
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2328
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2332
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2336
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2342
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2346
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2352
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2356
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2360
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2364
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2408
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2416
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2554
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2563
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2617
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2622
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2646
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2656
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2664
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2686
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2737
		{
			yyVAL.str = ""
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2745
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2751
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2760
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2766
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2776
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2780
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2785
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2789
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2793
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2797
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2801
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2805
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2811
		{
			yyVAL.str = ""
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2821
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2825
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2829
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2833
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2837
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = ""
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = yyDollar[2].str
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = ""
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = yyDollar[1].str
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = ""
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2904
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2914
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2918
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2924
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2928
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2934
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2938
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2944
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2950
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2954
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2958
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2962
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2966
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2975
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2981
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2987
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2993
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2997
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3001
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3006
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3010
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3016
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3022
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3028
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3032
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3036
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3040
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3044
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3049
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3063
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3067
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3076
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3085
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3091
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3099
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3105
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3109
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3115
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3119
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3123
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3127
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3131
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3135
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3139
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3143
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3147
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3151
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3155
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3159
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3163
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3167
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3171
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3175
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3179
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3183
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3187
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3191
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3195
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3199
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3203
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3207
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3211
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3215
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3219
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3223
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3227
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3231
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3235
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3240
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3244
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3248
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3267
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3271
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3275
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3284
		{
			yyVAL.str = ""
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3303
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3321
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3325
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3334
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3338
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3342
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3350
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3356
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3360
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3370
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3374
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3378
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3382
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3386
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3390
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3394
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3398
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3402
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3406
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3410
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3414
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3418
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3422
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3426
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3430
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3434
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3438
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3442
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3446
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3450
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3454
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3458
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3462
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3466
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3470
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3474
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3478
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3482
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3486
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3490
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3496
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3500
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3506
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3510
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3514
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3518
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3522
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3526
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3530
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3534
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3538
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3542
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3625
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3652
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3656
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3660
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3671
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3678
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3685
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3692
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3705
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3713
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3719
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3732
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3739
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3782
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3801
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3810
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3818
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3827
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3834
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3846
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3855
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3870
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3875
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3879
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3884
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3888
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3894
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3900
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3906
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3916
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3920
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3926
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3932
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3938
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3944
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3950
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3954
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3958
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3968
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3974
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3980
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3984
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3988
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3994
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3998
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4003
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4007
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4012
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4016
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4022
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4026
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4030
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4034
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4038
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4042
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4046
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4050
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4054
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4058
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4062
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4066
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4070
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4074
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4078
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4082
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4086
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4090
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4094
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4098
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4102
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4106
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4111
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4125
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4129
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4135
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4140
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4144
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4149
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4154
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4159
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4164
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4169
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4174
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4179
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4184
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4190
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4196
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4200
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4206
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4211
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4215
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4220
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4225
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4230
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4235
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4240
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4245
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4252
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4259
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4266
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4284
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4290
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4296
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4302
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4308
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4314
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4320
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4326
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4342
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4348
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4352
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4358
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4362
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4371
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4375
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4379
		{
			yyLOCAL = &DropProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[5].tableName, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4385
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4411
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4423
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4431
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4435
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4439
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4443
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4447
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4451
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4455
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4467
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4471
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4475
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4479
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4487
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4491
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4495
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4507
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4523
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4527
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4547
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4551
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4559
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4563
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4567
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4579
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4590
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4594
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4606
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4610
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4618
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4622
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4626
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4630
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4639
		{
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = ""
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = "extended "
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4675
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4693
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4697
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4707
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4713
		{
			yyVAL.empty = struct{}{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4717
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.empty = struct{}{}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4737
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4741
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4745
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4752
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4756
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4760
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4764
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4771
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4775
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4784
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4790
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4800
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4804
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4808
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4815
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4821
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4825
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4830
		{
			yyVAL.empty = struct{}{}
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4832
		{
			yyVAL.empty = struct{}{}
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4835
		{
			yyVAL.empty = struct{}{}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.empty = struct{}{}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4841
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4847
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4852
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4856
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4860
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4864
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4868
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4873
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4877
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4881
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4885
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4889
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4893
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4899
		{
			yyVAL.str = yyDollar[1].str
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4903
		{
			yyVAL.str = yyDollar[1].str
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.str = yyDollar[1].str
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4913
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4917
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4921
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4925
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4930
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4934
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4944
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4948
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4954
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4960
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4964
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4970
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4976
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4980
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4986
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4992
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4996
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5000
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5004
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5010
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5016
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5022
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5026
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5030
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5034
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5038
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5042
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5048
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5052
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5062
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5066
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5070
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5078
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5082
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5086
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5090
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5102
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5107
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5111
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5115
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5120
		{
			yyVAL.str = ""
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5124
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5129
		{
			setAllowComments(yylex, true)
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5133
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5139
		{
			yyVAL.strs = nil
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5143
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5149
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5157
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5162
		{
			yyVAL.str = ""
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.str = SQLCacheStr
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5175
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5183
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5189
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5193
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5203
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5212
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5218
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5222
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5227
		{
			yyVAL.strs = nil
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5237
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5241
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5247
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.str = SQLCacheStr
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5255
		{
			yyVAL.str = DistinctStr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5259
		{
			yyVAL.str = DistinctStr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5263
		{
			yyVAL.str = HighPriorityStr
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5267
		{
			yyVAL.str = StraightJoinHint
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5271
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5275
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5279
		{
			yyVAL.str = SQLBigResultStr
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5283
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5287
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5293
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5297
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5305
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5309
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5313
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5317
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5322
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5330
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5337
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5342
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5346
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5352
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5358
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5362
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5372
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5376
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5380
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5384
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5390
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5394
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5400
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5404
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5413
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5422
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5428
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5432
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5438
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5442
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5448
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5452
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5456
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5460
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5466
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5470
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5483
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5487
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5491
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5495
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5503
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5507
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5509
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5513
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5515
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5518
		{
			yyVAL.empty = struct{}{}
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5520
		{
			yyVAL.empty = struct{}{}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5523
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5527
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5531
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5538
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5544
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5548
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5552
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5558
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5564
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5568
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5572
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5576
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5582
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5586
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5596
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5606
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5610
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5616
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5625
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5631
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5635
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5641
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5645
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5649
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5653
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5657
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5661
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5666
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5670
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5674
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5678
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5699
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5703
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5719
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5732
		{
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5813
		{
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5816
		{
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5990
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5994
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6000
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6004
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6010
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6014
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6018
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6024
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6028
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6035
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6039
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6043
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6047
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6051
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6057
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6061
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6065
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6069
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6073
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6077
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6081
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6090
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6096
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6100
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6109
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6114
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6124
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6130
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6134
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6140
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6156
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6162
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6166
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6172
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6176
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6182
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6186
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6198
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6204
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6208
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6214
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6220
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = ""
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6234
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6240
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6244
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6251
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6255
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6259
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6263
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6269
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6273
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6279
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6283
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6287
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6291
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6295
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6299
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6305
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6309
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6313
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6320
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6326
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6330
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6805
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6809
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6813
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6817
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6833
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6837
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6841
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6845
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6849
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6853
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6857
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6861
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6865
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6873
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6877
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6881
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6885
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6897
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6901
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6905
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6909
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6929
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6933
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6937
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6941
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6945
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6949
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6953
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6957
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6961
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6965
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6969
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6973
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6977
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6981
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6985
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6989
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6993
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6997
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7001
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7005
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7009
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7013
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7017
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7021
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7025
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7029
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7033
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7037
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7041
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7045
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7049
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7053
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7057
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7061
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7065
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7069
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7073
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7081
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7085
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7089
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7093
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7097
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7101
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7105
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7109
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7113
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7117
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7121
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7125
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7129
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7133
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7137
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7141
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7145
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7149
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7153
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7157
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7161
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7171
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7175
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7179
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7183
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7192
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7198
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7202
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7206
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7214
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7219
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7223
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7227
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7231
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7235
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7239
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7244
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7248
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7252
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7256
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7263
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7267
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7273
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7277
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7281
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7285
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7291
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7295
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7299
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7307
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7311
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7315
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7324
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7330
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7334
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7338
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7342
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7346
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7350
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7354
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7358
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7362
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7366
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7370
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7374
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7378
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7382
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7386
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7390
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7394
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7398
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7402
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7406
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7412
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7416
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7420
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7424
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7428
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7432
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7436
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7440
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7444
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7448
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7452
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7456
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7460
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7464
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7468
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7472
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7476
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7480
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7490
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7494
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7498
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7508
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7512
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7516
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7520
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7524
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7530
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7534
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7538
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7542
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7546
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7552
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7556
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7560
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7570
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7574
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7580
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7584
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7588
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7592
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7596
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7602
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7606
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7610
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7614
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7618
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7622
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7626
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7630
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7634
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7638
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7644
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7648
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7657
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7662
		{
			yyVAL.str = string("")
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7666
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7672
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7676
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7682
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7691
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7697
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7701
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7705
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7709
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7715
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7719
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7725
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7734
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7738
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7747
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7762
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7766
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7772
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7778
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7782
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7791
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7800
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7806
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7812
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7816
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7822
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7827
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7831
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7835
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7844
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7850
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7854
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7858
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7867
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7871
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7875
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7879
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7886
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7890
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7894
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7898
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7904
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7908
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7912
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7916
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7921
		{
			yyVAL.str = ""
		}
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7928
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7932
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7936
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7941
		{
			yyVAL.str = ""
		}
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7945
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7951
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7955
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7960
		{
			yyVAL.str = ""
		}
	case 1610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7964
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7969
		{
			yyVAL.str = "cascaded"
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7973
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7977
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7986
		{
			yyLOCAL = yyDollar[1].procParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7992
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7996
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:8002
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8007
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8011
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8015
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8019
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8031
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8037
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8043
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8049
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8058
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8062
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8067
		{
			yyVAL.str = ""
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8071
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8077
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8081
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8085
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8089
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8093
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8097
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8101
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8107
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8111
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8115
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8119
		{
			yyLOCAL = &SelectInto{Type: IntoVariables, VarList: yyDollar[2].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8125
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:8129
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:8135
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:8139
		{
			yyLOCAL = &Variable{Name: createIdentifierCI(yyDollar[1].str), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8144
		{
			yyVAL.str = ""
		}
	case 1649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8148
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8152
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8157
		{
			yyVAL.str = ""
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8161
		{
			yyVAL.str = " header"
		}
	case 1653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8166
		{
			yyVAL.str = ""
		}
	case 1654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8170
		{
			yyVAL.str = " manifest on"
		}
	case 1655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8174
		{
			yyVAL.str = " manifest off"
		}
	case 1656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8179
		{
			yyVAL.str = ""
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8183
		{
			yyVAL.str = " overwrite on"
		}
	case 1658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8187
		{
			yyVAL.str = " overwrite off"
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8193
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8198
		{
			yyVAL.str = ""
		}
	case 1661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8202
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8208
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8212
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8218
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8222
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8227
		{
			yyVAL.str = ""
		}
	case 1667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8231
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8237
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8241
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8247
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8251
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8255
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8260
		{
			yyVAL.str = ""
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8264
		{
			yyVAL.str = " optionally"
		}
	case 1675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8277
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8281
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1677:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8285
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8289
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8293
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8303
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8307
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8311
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8315
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8324
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1688:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8328
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8337
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8343
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8347
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8353
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8357
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8363
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8367
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8373
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8377
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8383
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8389
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8399
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8409
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8413
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8419
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8426
		{
			yyVAL.str = "charset"
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8436
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8440
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8444
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8463
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8465
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8468
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8470
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8473
		{
			yyVAL.empty = struct{}{}
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8475
		{
			yyVAL.empty = struct{}{}
		}
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8477
		{
			yyVAL.empty = struct{}{}
		}
	case 1727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8481
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8490
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8495
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8497
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8501
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8507
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8511
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8518
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8524
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8528
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8534
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8538
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8545
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8551
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8557
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8561
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8565
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9261
		{
		}
	case 2415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9266
		{
		}
	case 2416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9270
		{
			skipToEnd(yylex)
		}
	case 2417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9275
		{
			skipToEnd(yylex)
		}
	case 2418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9279
		{
			skipToEnd(yylex)
		}
	case 2419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9283
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
